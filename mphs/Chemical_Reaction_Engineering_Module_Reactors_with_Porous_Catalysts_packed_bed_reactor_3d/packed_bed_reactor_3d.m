function out = model
%
% packed_bed_reactor_3d.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Chemical_Reaction_Engineering_Module/Reactors_with_Porous_Catalysts');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('chem', 'Chemistry', 'geom1');
model.physics('chem').model('comp1');
model.physics.create('tds', 'DilutedSpeciesInPorousMedia', 'geom1', {'cA' 'cB' 'cC'});
model.physics.create('dl', 'PorousMediaFlowDarcy', 'geom1');
model.physics('dl').model('comp1');

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/chem', true);
model.study('std1').feature('time').setSolveFor('/physics/tds', true);
model.study('std1').feature('time').setSolveFor('/physics/dl', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('rho_b', '0.51[g/cm^3]', 'Density of bed');
model.param.set('rho_pe', '0.68[g/cm^3]', 'Density individual pellet');
model.param.set('epsilon_b', '1-rho_b/rho_pe', 'Porosity of bed');
model.param.set('epsilon_pe', '0.70[1]', 'Porosity of pellet');
model.param.set('r_pe', '5e-4[m]', 'Pellet radius (spherical shape)');
model.param.set('DAp', '1.5e-9[m^2/s]', 'Diffusion coefficient of A in pellet');
model.param.set('DBp', '2e-9[m^2/s]', 'Diffusion coefficient of B in pellet');
model.param.set('DCp', '1e-9[m^2/s]', 'Diffusion coefficient of C in pellet');
model.param.set('kappa', '1.88e-10[m^2]', 'Permeability of Bed');
model.param.set('CA_in', '1[mol/m^3]', 'Inlet concentration A');
model.param.set('CB_in', '1[mol/m^3]', 'Inlet concentration B');
model.param.set('CC_in', '0[mol/m^3]', 'Inlet concentration C');
model.param.set('DA', '1e-8[m^2/s]', 'Diffusion coefficient of A in bed');
model.param.set('DB', '1.5e-8[m^2/s]', 'Diffusion coefficient of B in bed');
model.param.set('DC', '0.5e-8[m^2/s]', 'Diffusion of C in bed');
model.param.set('Mn_A', '0.018[kg/mol]', 'Molar mass, A');
model.param.set('Mn_B', '0.020[kg/mol]', 'Molar mass, B');
model.param.set('Mn_C', '0.019[kg/mol]', 'Molar mass, C');
model.param.set('E', '75000[J/mol]', 'Activation energy');
model.param.set('A', '2e12[m^3/(mol*s)]', 'Frequency factor');
model.param.set('Keq0', '1000', 'Equilibrium constant');
model.param.set('p_Darcy', '0.4[atm]', 'Inlet pressure offset');
model.param.set('Mn_solvent', '0.018[kg/mol]', 'Molar mass, solvent');
model.param.set('C_solvent', '998[kg/m^3]/Mn_solvent', 'Concentration, solvent');

model.geom('geom1').insertFile('packed_bed_reactor_3d_geom_sequence.mph', 'geom1');
model.geom('geom1').run('fin');

model.material.create('mat1', 'Common', '');
model.material('mat1').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('rho', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('cs', 'Interpolation');
model.material('mat1').propertyGroup('def').func.create('an1', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an2', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an3', 'Analytic');
model.material('mat1').label('Water, liquid');
model.material('mat1').set('family', 'water');
model.material('mat1').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('eta').set('pieces', {'273.15' '413.15' '1.3799566804-0.021224019151*T^1+1.3604562827E-4*T^2-4.6454090319E-7*T^3+8.9042735735E-10*T^4-9.0790692686E-13*T^5+3.8457331488E-16*T^6'; '413.15' '553.75' '0.00401235783-2.10746715E-5*T^1+3.85772275E-8*T^2-2.39730284E-11*T^3'});
model.material('mat1').propertyGroup('def').func('eta').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('Cp').set('pieces', {'273.15' '553.75' '12010.1471-80.4072879*T^1+0.309866854*T^2-5.38186884E-4*T^3+3.62536437E-7*T^4'});
model.material('mat1').propertyGroup('def').func('Cp').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('def').func('rho').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('rho').set('smooth', 'contd1');
model.material('mat1').propertyGroup('def').func('rho').set('pieces', {'273.15' '293.15' '0.000063092789034*T^3-0.060367639882855*T^2+18.9229382407066*T-950.704055329848'; '293.15' '373.15' '0.000010335053319*T^3-0.013395065634452*T^2+4.969288832655160*T+432.257114008512'});
model.material('mat1').propertyGroup('def').func('rho').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.material('mat1').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('k').set('pieces', {'273.15' '553.75' '-0.869083936+0.00894880345*T^1-1.58366345E-5*T^2+7.97543259E-9*T^3'});
model.material('mat1').propertyGroup('def').func('k').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.material('mat1').propertyGroup('def').func('cs').set('table', {'273' '1403';  ...
'278' '1427';  ...
'283' '1447';  ...
'293' '1481';  ...
'303' '1507';  ...
'313' '1526';  ...
'323' '1541';  ...
'333' '1552';  ...
'343' '1555';  ...
'353' '1555';  ...
'363' '1550';  ...
'373' '1543'});
model.material('mat1').propertyGroup('def').func('cs').set('interp', 'piecewisecubic');
model.material('mat1').propertyGroup('def').func('cs').set('fununit', {'m/s'});
model.material('mat1').propertyGroup('def').func('cs').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.material('mat1').propertyGroup('def').func('an1').set('expr', '-1/rho(T)*d(rho(T),T)');
model.material('mat1').propertyGroup('def').func('an1').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('an1').set('fununit', '1/K');
model.material('mat1').propertyGroup('def').func('an1').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an1').set('plotfixedvalue', {'273.15'});
model.material('mat1').propertyGroup('def').func('an1').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an2').set('funcname', 'gamma_w');
model.material('mat1').propertyGroup('def').func('an2').set('expr', '1+(T/Cp(T))*(alpha_p(T)*cs(T))^2');
model.material('mat1').propertyGroup('def').func('an2').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('an2').set('fununit', '1');
model.material('mat1').propertyGroup('def').func('an2').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an2').set('plotfixedvalue', {'273.15'});
model.material('mat1').propertyGroup('def').func('an2').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an3').set('funcname', 'muB');
model.material('mat1').propertyGroup('def').func('an3').set('expr', '2.79*eta(T)');
model.material('mat1').propertyGroup('def').func('an3').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('an3').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('an3').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an3').set('plotfixedvalue', {'273.15'});
model.material('mat1').propertyGroup('def').func('an3').set('plotargs', {'T' '273.15' '553.75'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.material('mat1').propertyGroup('def').set('bulkviscosity', '');
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(T)' '0' '0' '0' 'alpha_p(T)' '0' '0' '0' 'alpha_p(T)'});
model.material('mat1').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.material('mat1').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.material('mat1').propertyGroup('def').set('ratioofspecificheat', 'gamma_w(T)');
model.material('mat1').propertyGroup('def').set('electricconductivity', {'5.5e-6[S/m]' '0' '0' '0' '5.5e-6[S/m]' '0' '0' '0' '5.5e-6[S/m]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.material('mat1').propertyGroup('def').set('density', 'rho(T)');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.material('mat1').propertyGroup('def').set('soundspeed', 'cs(T)');
model.material('mat1').propertyGroup('def').addInput('temperature');
model.material.create('pmat1', 'PorousMedia', 'comp1');
model.material('pmat1').feature.create('pellet1', 'Pellet', 'comp1');
model.material('pmat1').feature('pellet1').set('link', 'none');
model.material('pmat1').feature('pellet1').set('dpe', 'r_pe*2');
model.material('pmat1').feature('pellet1').set('epspe', 'epsilon_pe');
model.material('pmat1').feature('pellet1').set('epsb', 'epsilon_b');
model.material('pmat1').feature('pellet1').set('pelletDisType', 'linear');
model.material('pmat1').feature('pellet1').set('nelems', 12);
model.material('pmat1').feature.create('fluid1', 'Fluid', 'comp1');

model.physics('tds').create('pb1', 'PackedBed', 3);
model.physics('tds').feature('pb1').selection.all;
model.physics('chem').prop('mixture').set('mixture', 'liquid');
model.physics('chem').create('rch1', 'ReactionChem', 3);
model.physics('chem').feature('rch1').set('formula', 'A+B<=>2C');
model.physics('chem').feature('rch1').set('setKeq0', true);
model.physics('chem').feature('rch1').set('useArrhenius', true);
model.physics('chem').feature('rch1').set('Af', 'A');
model.physics('chem').feature('rch1').set('Ef', 'E');
model.physics('chem').feature('rch1').set('EquilibriumConstantSettings', 'UserDefined');
model.physics('chem').feature('rch1').set('Keq0', 'Keq0');
model.physics('chem').feature('A').set('M', 'Mn_A');
model.physics('chem').feature('B').set('M', 'Mn_B');
model.physics('chem').feature('C').set('M', 'Mn_C');
model.physics('chem').create('spec1', 'SpeciesChem', 3);
model.physics('chem').feature('spec1').set('specName', 'H2O');
model.physics('chem').feature('H2O').set('sType', 'solvent');
model.physics('chem').feature('H2O').set('M', 'Mn_solvent');
model.physics('chem').prop('xdim').set('xdim', true);
model.physics('chem').prop('ChemistryModelInputParameter').set('MassTransfer', 'tds');
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'tds.cpe_cA', 0, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'tds.cpe_cB', 1, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'tds.cpe_cC', 2, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationValue', 'C_solvent', 3, 0);
model.physics('tds').feature('pb1').feature('fluid1').set('u_src', 'root.comp1.dl.u');
model.physics('tds').feature('pb1').feature('fluid1').set('DF_cA', {'DA' '0' '0' '0' 'DA' '0' '0' '0' 'DA'});
model.physics('tds').feature('pb1').feature('fluid1').set('DF_cB', {'DB' '0' '0' '0' 'DB' '0' '0' '0' 'DB'});
model.physics('tds').feature('pb1').feature('fluid1').set('DF_cC', {'DC' '0' '0' '0' 'DC' '0' '0' '0' 'DC'});
model.physics('tds').feature('pb1').feature('fluid1').set('FluidDiffusivityModelType', 'UserDefined');
model.physics('tds').feature('pb1').feature('pts1').feature('df1').set('diffusionmodel', 'UserDefined');
model.physics('tds').feature('pb1').feature('pts1').feature('df1').setIndex('Dpeff_cA', 'DAp', 0);
model.physics('tds').feature('pb1').feature('pts1').feature('df1').setIndex('Dpeff_cB', 'DBp', 0);
model.physics('tds').feature('pb1').feature('pts1').feature('df1').setIndex('Dpeff_cC', 'DCp', 0);
model.physics('tds').feature('pb1').feature('pts1').feature('reac1').set('R_cA_src', 'root.comp1.chem.R_A');
model.physics('tds').feature('pb1').feature('pts1').feature('reac1').set('R_cB_src', 'root.comp1.chem.R_B');
model.physics('tds').feature('pb1').feature('pts1').feature('reac1').set('R_cC_src', 'root.comp1.chem.R_C');
model.physics('tds').feature('pb1').feature('pts1').feature('reac1').set('ReactingVolumeType', 'TotalVolume');

model.func.create('step1', 'Step');
model.func('step1').model('comp1');
model.func('step1').set('smooth', 1);
model.func('step1').set('location', '0.5[s]');

model.physics('tds').create('in1', 'Inflow', 2);
model.physics('tds').feature('in1').selection.named('geom1_csel1_bnd');
model.physics('tds').feature('in1').setIndex('c0', 'CA_in*step1(t)', 0);
model.physics('tds').feature('in1').setIndex('c0', 'CB_in*step1(t)', 1);
model.physics('tds').feature('in1').setIndex('c0', 'CC_in*step1(t)', 2);
model.physics('tds').create('out1', 'Outflow', 2);
model.physics('tds').feature('out1').selection.named('geom1_sel2');
model.physics('dl').feature('porous1').feature('pm1').set('kappa_mat', 'userdef');
model.physics('dl').feature('porous1').feature('pm1').set('kappa', {'kappa' '0' '0' '0' 'kappa' '0' '0' '0' 'kappa'});
model.physics('dl').create('pr1', 'Pressure', 2);
model.physics('dl').feature('pr1').selection.named('geom1_sel2');
model.physics('dl').create('pr2', 'Pressure', 2);
model.physics('dl').feature('pr2').selection.named('geom1_csel1_bnd');
model.physics('dl').feature('pr2').set('p0', 'p_Darcy');

model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.named('geom1_csel2_bnd');
model.mesh('mesh1').feature('ftri1').create('size1', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size1').set('hauto', 4);
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('swe1').feature('dis1').set('elemcount', 15);
model.mesh('mesh1').feature('swe1').feature('dis1').set('elemratio', 5);
model.mesh('mesh1').run;

model.study('std1').feature('time').set('tlist', 'range(0,10,180)');
model.study('std1').feature('time').setEntry('activate', 'dl', false);
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setEntry('activate', 'chem', false);
model.study('std1').feature('stat').setEntry('activate', 'tds', false);
model.study('std1').feature.move('stat', 0);

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, pressure (dl)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, pressure (dl)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'time');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('initsoluse', 'sol2');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('notsoluse', 'sol2');
model.sol('sol1').feature('v2').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,10,180)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.005);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('stabcntrl', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d1').label('Direct, concentrations (tds)');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('t1').feature('i1').set('maxlinit', 50);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i1').label('AMG, concentrations (tds)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('gmglevels', 2);
model.sol('sol1').feature('t1').feature('i1').label('GMG, concentrations (tds)');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 19, 0);
model.result('pg1').label('Bed Concentration, A, Streamline (tds)');
model.result('pg1').set('titletype', 'custom');
model.result('pg1').set('typeintitle', true);
model.result('pg1').set('prefixintitle', 'Species A:');
model.result('pg1').create('str1', 'Streamline');
model.result('pg1').feature('str1').set('expr', {'tds.tflux_cAx' 'tds.tflux_cAy' 'tds.tflux_cAz'});
model.result('pg1').feature('str1').set('posmethod', 'start');
model.result('pg1').feature('str1').set('pointtype', 'arrow');
model.result('pg1').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg1').feature('str1').set('color', 'gray');
model.result('pg1').feature('str1').create('col', 'Color');
model.result('pg1').feature('str1').feature('col').set('expr', 'cA');
model.result('pg1').feature('str1').feature('col').set('titletype', 'custom');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 19, 0);
model.result('pg2').label('Bed Concentration, A, Surface (tds)');
model.result('pg2').set('titletype', 'custom');
model.result('pg2').set('prefixintitle', 'Species A:');
model.result('pg2').set('expressionintitle', false);
model.result('pg2').set('typeintitle', false);
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'cA'});
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').set('data', 'dset1');
model.result('pg3').setIndex('looplevel', 19, 0);
model.result('pg3').label('Bed Concentration, B, Streamline (tds)');
model.result('pg3').set('titletype', 'custom');
model.result('pg3').set('typeintitle', true);
model.result('pg3').set('prefixintitle', 'Species B:');
model.result('pg3').create('str1', 'Streamline');
model.result('pg3').feature('str1').set('expr', {'tds.tflux_cBx' 'tds.tflux_cBy' 'tds.tflux_cBz'});
model.result('pg3').feature('str1').set('posmethod', 'start');
model.result('pg3').feature('str1').set('pointtype', 'arrow');
model.result('pg3').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg3').feature('str1').set('color', 'gray');
model.result('pg3').feature('str1').create('col', 'Color');
model.result('pg3').feature('str1').feature('col').set('expr', 'cB');
model.result('pg3').feature('str1').feature('col').set('titletype', 'custom');
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').set('data', 'dset1');
model.result('pg4').setIndex('looplevel', 19, 0);
model.result('pg4').label('Bed Concentration, B, Surface (tds)');
model.result('pg4').set('titletype', 'custom');
model.result('pg4').set('prefixintitle', 'Species B:');
model.result('pg4').set('expressionintitle', false);
model.result('pg4').set('typeintitle', false);
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', {'cB'});
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').set('data', 'dset1');
model.result('pg5').setIndex('looplevel', 19, 0);
model.result('pg5').label('Bed Concentration, C, Streamline (tds)');
model.result('pg5').set('titletype', 'custom');
model.result('pg5').set('typeintitle', true);
model.result('pg5').set('prefixintitle', 'Species C:');
model.result('pg5').create('str1', 'Streamline');
model.result('pg5').feature('str1').set('expr', {'tds.tflux_cCx' 'tds.tflux_cCy' 'tds.tflux_cCz'});
model.result('pg5').feature('str1').set('posmethod', 'start');
model.result('pg5').feature('str1').set('pointtype', 'arrow');
model.result('pg5').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg5').feature('str1').set('color', 'gray');
model.result('pg5').feature('str1').create('col', 'Color');
model.result('pg5').feature('str1').feature('col').set('expr', 'cC');
model.result('pg5').feature('str1').feature('col').set('titletype', 'custom');
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').set('data', 'dset1');
model.result('pg6').setIndex('looplevel', 19, 0);
model.result('pg6').label('Bed Concentration, C, Surface (tds)');
model.result('pg6').set('titletype', 'custom');
model.result('pg6').set('prefixintitle', 'Species C:');
model.result('pg6').set('expressionintitle', false);
model.result('pg6').set('typeintitle', false);
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', {'cC'});
model.result.dataset.create('dset3', 'Solution');
model.result.dataset('dset3').set('solution', 'sol1');
model.result.dataset('dset3').set('comp', 'pmat1_pellet1_xdim');
model.result.dataset('dset3').label('Study 1/Solution 1 (3) Pellet 1');
model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').set('data', 'dset3');
model.result('pg7').set('titletype', 'manual');
model.result('pg7').set('title', 'Pellet concentration at (0[m], 0[m], 0[m])');
model.result('pg7').label('Pellet Concentration at (0[m], 0[m], 0[m]) (tds)');
model.result('pg7').create('lngr1', 'LineGraph');
model.result('pg7').feature('lngr1').set('xdata', 'expr');
model.result('pg7').feature('lngr1').set('xdataexpr', 'x_pmat1_pellet1_xdim');
model.result('pg7').feature('lngr1').selection.geom('pmat1_pellet1_xdim', 1);
model.result('pg7').feature('lngr1').selection.set([1]);
model.result('pg7').feature('lngr1').set('expr', {'atxd3(0[m], 0[m], 0[m], tds.cpe_cA)'});
model.result('pg7').feature('lngr1').label('Species A');
model.result('pg7').feature('lngr1').set('descractive', true);
model.result('pg7').feature('lngr1').set('descr', 'Concentration');
model.result('pg7').feature('lngr1').set('xdata', 'expr');
model.result('pg7').feature('lngr1').set('xdataexpr', 'tds.pmat1_pellet1_r');
model.result('pg7').feature('lngr1').set('legend', true);
model.result('pg7').feature('lngr1').set('autosolution', false);
model.result('pg7').feature('lngr1').set('autoexpr', false);
model.result('pg7').feature('lngr1').set('autodescr', false);
model.result('pg7').feature('lngr1').set('legendprefix', 'A ');
model.result('pg7').create('lngr2', 'LineGraph');
model.result('pg7').feature('lngr2').set('xdata', 'expr');
model.result('pg7').feature('lngr2').set('xdataexpr', 'x_pmat1_pellet1_xdim');
model.result('pg7').feature('lngr2').selection.geom('pmat1_pellet1_xdim', 1);
model.result('pg7').feature('lngr2').selection.set([1]);
model.result('pg7').feature('lngr2').set('expr', {'atxd3(0[m], 0[m], 0[m], tds.cpe_cB)'});
model.result('pg7').feature('lngr2').label('Species B');
model.result('pg7').feature('lngr2').set('descractive', true);
model.result('pg7').feature('lngr2').set('descr', 'Concentration');
model.result('pg7').feature('lngr2').set('xdata', 'expr');
model.result('pg7').feature('lngr2').set('xdataexpr', 'tds.pmat1_pellet1_r');
model.result('pg7').feature('lngr2').set('legend', true);
model.result('pg7').feature('lngr2').set('autosolution', false);
model.result('pg7').feature('lngr2').set('autoexpr', false);
model.result('pg7').feature('lngr2').set('autodescr', false);
model.result('pg7').feature('lngr2').set('legendprefix', 'B ');
model.result('pg7').create('lngr3', 'LineGraph');
model.result('pg7').feature('lngr3').set('xdata', 'expr');
model.result('pg7').feature('lngr3').set('xdataexpr', 'x_pmat1_pellet1_xdim');
model.result('pg7').feature('lngr3').selection.geom('pmat1_pellet1_xdim', 1);
model.result('pg7').feature('lngr3').selection.set([1]);
model.result('pg7').feature('lngr3').set('expr', {'atxd3(0[m], 0[m], 0[m], tds.cpe_cC)'});
model.result('pg7').feature('lngr3').label('Species C');
model.result('pg7').feature('lngr3').set('descractive', true);
model.result('pg7').feature('lngr3').set('descr', 'Concentration');
model.result('pg7').feature('lngr3').set('xdata', 'expr');
model.result('pg7').feature('lngr3').set('xdataexpr', 'tds.pmat1_pellet1_r');
model.result('pg7').feature('lngr3').set('legend', true);
model.result('pg7').feature('lngr3').set('autosolution', false);
model.result('pg7').feature('lngr3').set('autoexpr', false);
model.result('pg7').feature('lngr3').set('autodescr', false);
model.result('pg7').feature('lngr3').set('legendprefix', 'C ');
model.result.dataset.create('cpt1', 'CutPoint3D');
model.result.dataset('cpt1').set('data', 'dset1');
model.result.dataset('cpt1').set('method', 'regulargrid');
model.result.dataset('cpt1').set('regulargridx', 10);
model.result.dataset('cpt1').set('regulargridy', 6);
model.result.dataset('cpt1').set('regulargridz', 4);
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').label('Pellet concentration, A');
model.result('pg8').create('pel1', 'Pellets');
model.result('pg8').feature('pel1').set('data', 'cpt1');
model.result('pg8').feature('pel1').set('material', '1');
model.result('pg8').feature('pel1').set('expr', 'tds.cpe_cA');
model.result.create('pg9', 'PlotGroup3D');
model.result('pg9').label('Pellet concentration, B');
model.result('pg9').create('pel1', 'Pellets');
model.result('pg9').feature('pel1').set('data', 'cpt1');
model.result('pg9').feature('pel1').set('material', '1');
model.result('pg9').feature('pel1').set('expr', 'tds.cpe_cB');
model.result.create('pg10', 'PlotGroup3D');
model.result('pg10').label('Pellet concentration, C');
model.result('pg10').create('pel1', 'Pellets');
model.result('pg10').feature('pel1').set('data', 'cpt1');
model.result('pg10').feature('pel1').set('material', '1');
model.result('pg10').feature('pel1').set('expr', 'tds.cpe_cC');
model.result.create('pg11', 'PlotGroup3D');
model.result('pg11').label('Velocity (dl)');
model.result('pg11').set('titletype', 'custom');
model.result('pg11').set('defaultPlotID', 'PhysicsInterfaces_PorousMediaFlow/icom6/pdef1/pcond1/pg1');
model.result('pg11').feature.create('str1', 'Streamline');
model.result('pg11').feature('str1').set('showsolutionparams', 'on');
model.result('pg11').feature('str1').set('expr', {'dl.u' 'dl.v' 'dl.w'});
model.result('pg11').feature('str1').set('posmethod', 'start');
model.result('pg11').feature('str1').set('pointtype', 'arrow');
model.result('pg11').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg11').feature('str1').set('smooth', 'internal');
model.result('pg11').feature('str1').set('maxlen', Inf);
model.result('pg11').feature('str1').set('maxtime', Inf);
model.result('pg11').feature('str1').set('showsolutionparams', 'on');
model.result('pg11').feature('str1').set('maxlen', Inf);
model.result('pg11').feature('str1').set('maxtime', Inf);
model.result('pg11').feature('str1').set('showsolutionparams', 'on');
model.result('pg11').feature('str1').set('maxlen', Inf);
model.result('pg11').feature('str1').set('maxtime', Inf);
model.result('pg11').feature('str1').set('showsolutionparams', 'on');
model.result('pg11').feature('str1').set('maxlen', Inf);
model.result('pg11').feature('str1').set('maxtime', Inf);
model.result('pg11').feature('str1').set('showsolutionparams', 'on');
model.result('pg11').feature('str1').set('maxlen', Inf);
model.result('pg11').feature('str1').set('maxtime', Inf);
model.result('pg11').feature('str1').set('data', 'parent');
model.result('pg11').feature('str1').selection.geom('geom1', 2);
model.result('pg11').feature('str1').selection.set([1 2 3 4 5 6 7 8 9 10 11 12 13 14]);
model.result('pg11').feature('str1').feature.create('col1', 'Color');
model.result('pg11').feature('str1').feature('col1').set('expr', 'dl.U');
model.result.create('pg12', 'PlotGroup3D');
model.result('pg12').label('Pressure (dl)');
model.result('pg12').set('defaultPlotID', 'PhysicsInterfaces_PorousMediaFlow/icom6/pdef1/pcond1/pg2');
model.result('pg12').feature.create('surf1', 'Surface');
model.result('pg12').feature('surf1').label('Surface');
model.result('pg12').feature('surf1').set('showsolutionparams', 'on');
model.result('pg12').feature('surf1').set('expr', 'p');
model.result('pg12').feature('surf1').set('smooth', 'internal');
model.result('pg12').feature('surf1').set('showsolutionparams', 'on');
model.result('pg12').feature('surf1').set('data', 'parent');
model.result('pg1').run;

model.view.create('view6', 3);
model.view('view6').label('Column view');
model.view.create('view7', 3);
model.view('view7').label('Pellet view');

model.result.dataset.create('sec1', 'Sector3D');
model.result.dataset('sec1').setIndex('genpoints', 1, 1, 0);
model.result.dataset('sec1').setIndex('genpoints', 0, 1, 2);
model.result.dataset('sec1').set('sectors', 8);
model.result.dataset('sec1').set('include', 'manual');
model.result.dataset('sec1').set('sectorsinclude', 5);
model.result.dataset.create('sec2', 'Sector3D');
model.result.dataset('sec2').setIndex('genpoints', 1, 1, 0);
model.result.dataset('sec2').setIndex('genpoints', 0, 1, 2);
model.result.dataset('sec2').set('sectors', 8);
model.result.dataset('sec2').set('include', 'manual');
model.result.dataset('sec2').set('startsector', 6);
model.result.dataset('sec2').set('sectorsinclude', 3);
model.result.dataset.create('cpt2', 'CutPoint3D');
model.result.dataset('cpt2').set('data', 'sec2');
model.result.dataset('cpt2').set('method', 'regulargrid');
model.result.dataset('cpt2').set('regulargridy', 12);
model.result.dataset('cpt2').set('regulargridz', 8);
model.result('pg3').run;

model.view('view6').camera.set('zoomanglefull', 15.464);
model.view('view6').camera.setIndex('position', -2.12074, 0);
model.view('view6').camera.setIndex('position', 4.54561, 1);
model.view('view6').camera.setIndex('position', -2.7329, 2);
model.view('view6').camera.setIndex('target', 0.50106, 0);
model.view('view6').camera.setIndex('target', '-0.00210', 1);
model.view('view6').camera.setIndex('target', 0.02929, 2);
model.view('view6').camera.setIndex('up', 0.89694, 0);
model.view('view6').camera.setIndex('up', 0.38457, 1);
model.view('view6').camera.setIndex('up', -0.2182, 2);
model.view('view6').camera.setIndex('rotationpoint', 0, 1);
model.view('view6').camera.setIndex('viewoffset', -0.06619, 0);
model.view('view6').camera.set('viewoffset', [-0.06619 -0.027996]);
model.view('view6').set('locked', true);

model.result.create('pg13', 'PlotGroup3D');
model.result('pg13').run;
model.result('pg13').label('Velocity');
model.result('pg13').set('data', 'sec1');
model.result('pg13').set('titletype', 'none');
model.result('pg13').set('showlegendsunit', true);
model.result('pg13').set('view', 'view6');
model.result('pg13').create('slc1', 'Slice');
model.result('pg13').feature('slc1').set('expr', 'dl.U');
model.result('pg13').feature('slc1').set('descr', 'Total Darcy velocity magnitude');
model.result('pg13').feature('slc1').set('quickxnumber', 10);
model.result('pg13').feature('slc1').set('colortable', 'Cividis');
model.result('pg13').run;
model.result('pg2').run;
model.result('pg2').set('data', 'sec1');
model.result('pg2').set('titletype', 'none');
model.result('pg2').set('showlegendsunit', true);
model.result('pg2').set('view', 'view6');
model.result('pg2').run;
model.result('pg7').run;
model.result('pg7').label('Pellet Concentration at (0.5[m], 0[m], 0[m]) (tds)');
model.result('pg7').setIndex('looplevelinput', 'last', 0);
model.result('pg7').set('titletype', 'none');
model.result('pg7').set('twoyaxes', true);
model.result('pg7').setIndex('plotonsecyaxis', true, 2, 1);
model.result('pg7').set('legendpos', 'middleleft');
model.result('pg7').run;
model.result('pg7').feature('lngr1').set('expr', 'atxd3(0.5[m], 0[m], 0[m], tds.cpe_cA)');
model.result('pg7').feature('lngr1').set('linewidth', 2);
model.result('pg7').feature('lngr1').set('legendprefix', 'c<sub>A</sub>');
model.result('pg7').run;
model.result('pg7').feature('lngr2').set('expr', 'atxd3(0.5[m], 0[m], 0[m], tds.cpe_cB)');
model.result('pg7').feature('lngr2').set('linewidth', 2);
model.result('pg7').feature('lngr2').set('legendprefix', 'c<sub>B</sub>');
model.result('pg7').run;
model.result('pg7').feature('lngr3').set('expr', 'atxd3(0.5[m], 0[m], 0[m], tds.cpe_cC)');
model.result('pg7').feature('lngr3').set('linewidth', 2);
model.result('pg7').feature('lngr3').set('legendprefix', 'c<sub>C</sub>');
model.result('pg7').run;
model.result('pg8').run;
model.result('pg8').run;
model.result.duplicate('pg14', 'pg8');
model.result('pg14').run;
model.result('pg14').set('data', 'sec2');
model.result('pg14').set('titletype', 'none');
model.result('pg14').set('showlegendsunit', true);
model.result('pg14').run;
model.result('pg14').feature('pel1').set('data', 'cpt2');
model.result('pg14').feature('pel1').set('solutionparams', 'parent');
model.result('pg14').feature('pel1').set('radiusscaleactive', true);
model.result('pg14').feature('pel1').set('radiusscale', 25);
model.result('pg14').feature('pel1').set('colortable', 'Prism');
model.result('pg14').run;
model.result('pg14').label('Pellet and Bed Concentration, A');
model.result('pg14').set('edges', false);
model.result('pg14').create('surf1', 'Surface');
model.result('pg14').feature('surf1').set('data', 'dset1');
model.result('pg14').feature('surf1').create('sel1', 'Selection');
model.result('pg14').feature('surf1').feature('sel1').selection.set([3]);
model.result('pg14').run;
model.result('pg14').feature('surf1').set('inheritplot', 'pel1');
model.result('pg14').run;
model.result('pg14').create('surf2', 'Surface');
model.result('pg14').feature('surf2').label('Surface: Outer Wall');
model.result('pg14').feature('surf2').set('expr', '1');
model.result('pg14').feature('surf2').set('titletype', 'none');
model.result('pg14').feature('surf2').set('coloring', 'uniform');
model.result('pg14').feature('surf2').set('color', 'gray');
model.result('pg14').feature('surf2').create('sel1', 'Selection');
model.result('pg14').feature('surf2').feature('sel1').selection.set([4 12]);
model.result('pg14').run;
model.result('pg14').feature('surf2').create('mtrl1', 'MaterialAppearance');
model.result('pg14').run;
model.result('pg14').feature('surf2').feature('mtrl1').set('appearance', 'custom');
model.result('pg14').feature('surf2').feature('mtrl1').set('family', 'steelanodized');
model.result('pg14').run;
model.result('pg14').run;
model.result.duplicate('pg15', 'pg14');
model.result('pg15').run;
model.result('pg15').label('Pellet and Bed Concentration, B');
model.result('pg15').run;
model.result('pg15').feature('pel1').set('expr', 'tds.cpe_cB');
model.result('pg15').feature('pel1').set('descr', 'Concentration in pellet');
model.result('pg15').run;
model.result('pg15').feature('surf1').set('expr', 'cB');
model.result('pg15').run;
model.result.duplicate('pg16', 'pg15');
model.result('pg16').run;
model.result('pg16').label('Pellet and Bed Concentration, C');
model.result('pg16').run;
model.result('pg16').feature('pel1').set('expr', 'tds.cpe_cC');
model.result('pg16').feature('pel1').set('descr', 'Concentration in pellet');
model.result('pg16').run;
model.result('pg16').feature('surf1').set('expr', 'cC');
model.result('pg16').run;
model.result('pg14').run;
model.result.move('pg14', 0);
model.result.move('pg15', 1);
model.result.move('pg16', 2);
model.result.dataset.create('cln1', 'CutLine3D');
model.result.create('pg17', 'PlotGroup1D');
model.result('pg17').run;
model.result('pg17').label('Concentration comparison');
model.result('pg17').set('data', 'cln1');
model.result('pg17').setIndex('looplevelinput', 'last', 0);
model.result('pg17').set('titletype', 'none');
model.result('pg17').set('xlabelactive', true);
model.result('pg17').set('xlabel', 'Reactor height (m)');
model.result('pg17').set('ylabelactive', true);
model.result('pg17').set('ylabel', 'Concentration (mol/m<sup>3</sup>)');
model.result('pg17').set('legendpos', 'middleright');
model.result('pg17').create('lngr1', 'LineGraph');
model.result('pg17').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg17').feature('lngr1').set('linewidth', 'preference');
model.result('pg17').feature('lngr1').label('A, bed');
model.result('pg17').feature('lngr1').set('linestyle', 'dashed');
model.result('pg17').feature('lngr1').set('linewidth', 2);
model.result('pg17').feature('lngr1').set('linemarker', 'point');
model.result('pg17').feature('lngr1').set('markerpos', 'interp');
model.result('pg17').feature('lngr1').set('markers', 11);
model.result('pg17').feature('lngr1').set('legend', true);
model.result('pg17').feature('lngr1').set('legendmethod', 'manual');
model.result('pg17').feature('lngr1').setIndex('legends', 'c<sub>A</sub>', 0);
model.result('pg17').feature.duplicate('lngr2', 'lngr1');
model.result('pg17').run;
model.result('pg17').feature('lngr2').label('B, bed');
model.result('pg17').feature('lngr2').set('expr', 'cB');
model.result('pg17').feature('lngr2').set('linemarker', 'none');
model.result('pg17').feature('lngr2').setIndex('legends', 'c<sub>B</sub>', 0);
model.result('pg17').feature.duplicate('lngr3', 'lngr2');
model.result('pg17').run;
model.result('pg17').feature('lngr3').label('C, bed');
model.result('pg17').feature('lngr3').set('expr', 'cC');
model.result('pg17').feature('lngr3').setIndex('legends', 'c<sub>C</sub>', 0);
model.result('pg17').feature.duplicate('lngr4', 'lngr3');
model.result('pg17').run;
model.result('pg17').feature('lngr4').label('A, pellet');
model.result('pg17').feature('lngr4').set('expr', 'tds.pb1.pts1.avecpe_cA');
model.result('pg17').feature('lngr4').set('linestyle', 'solid');
model.result('pg17').feature('lngr4').set('linecolor', 'cyclereset');
model.result('pg17').feature('lngr4').setIndex('legends', 'c<sub>A</sub>, Pellet average', 0);
model.result('pg17').feature.duplicate('lngr5', 'lngr4');
model.result('pg17').run;
model.result('pg17').feature('lngr5').label('B, pellet');
model.result('pg17').feature('lngr5').set('expr', 'tds.pb1.pts1.avecpe_cB');
model.result('pg17').feature('lngr5').set('linecolor', 'cycle');
model.result('pg17').feature('lngr5').setIndex('legends', 'c<sub>B</sub>, Pellet average', 0);
model.result('pg17').feature.duplicate('lngr6', 'lngr5');
model.result('pg17').run;
model.result('pg17').feature('lngr6').label('C, pellet');
model.result('pg17').feature('lngr6').set('expr', 'tds.pb1.pts1.avecpe_cC');
model.result('pg17').feature('lngr6').setIndex('legends', 'c<sub>C</sub>, Pellet average', 0);
model.result('pg17').run;
model.result('pg1').run;
model.result('pg1').set('data', 'sec1');
model.result('pg1').set('titletype', 'none');
model.result('pg1').set('showlegendsunit', true);
model.result('pg1').set('view', 'view6');
model.result.dataset.create('cpl1', 'CutPlane');
model.result.dataset('cpl1').set('data', 'sec1');
model.result.dataset('cpl1').set('quickx', 0.005);
model.result('pg1').run;
model.result('pg1').feature('str1').set('number', 1000);
model.result('pg1').feature('str1').set('startdata', 'cpl1');
model.result('pg1').feature('str1').set('linetype', 'tube');
model.result('pg1').feature('str1').set('radiusexpr', 'cA[m^4/mol]');
model.result('pg1').feature('str1').set('tuberadiusscaleactive', true);
model.result('pg1').feature('str1').set('tuberadiusscale', '.004');
model.result('pg1').feature('str1').set('pointtype', 'none');
model.result('pg1').run;
model.result('pg3').run;
model.result.remove('pg3');
model.result.remove('pg5');
model.result.remove('pg8');
model.result.remove('pg9');
model.result.remove('pg10');
model.result.remove('pg11');
model.result('pg4').run;
model.result('pg14').run;

model.title('A Multiscale 3D Packed Bed Reactor');

model.description('This example shows how the Transport of Diluted Species in Porous Media interface is used to efficiently solve a combined macroscale and microscale (multiscale) problem: a heterogeneous system with bimodal pore distribution. The example uses the Packed Bed feature, which employs an extra dimension to represent the porous catalyst pellets filling the reactor. Using this feature the concentration within the pellets, and the concentration distribution in the fluid surrounding the pellets, is solved for.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('packed_bed_reactor_3d.mph');

model.modelNode.label('Components');

out = model;
