function out = model
%
% chip_cooling.m
%
% Model exported on May 26 2025, 21:29 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Heat_Transfer_Module/Tutorials,_Forced_and_Natural_Convection');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('ht', 'HeatTransferInSolidsAndFluids', 'geom1');
model.physics('ht').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/ht', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('n_fins', '4', 'Number of pins, x direction');
model.param.set('L_chip', '40[mm]', 'Chip size');
model.param.set('H_chip', '4[mm]', 'Chip height');
model.param.set('P0', '10[W]', 'Total power dissipated by the electronic chip');
model.param.set('h0', '10[W/m^2/K]', 'Heat Transfer coefficient');
model.param.set('W_channel', '8[cm]', 'Channel width');
model.param.set('D_channel', '30[cm]', 'Channel depth');
model.param.set('H_channel', '6[cm]', 'Channel height');
model.param.set('U0', '0.1[m/s]', 'Mean inlet velocity');

model.geom('geom1').create('blk1', 'Block');
model.geom('geom1').feature('blk1').set('size', {'L_chip' 'L_chip' '1'});
model.geom('geom1').feature('blk1').setIndex('size', 'H_chip', 2);
model.geom('geom1').feature('blk1').set('pos', {'0' '0' '-H_chip'});
model.geom('geom1').run('blk1');
model.geom.load({'part1'}, 'Heat_Transfer_Module/Heat_Sinks/heat_sink_straight_fins.mph', {'part1'});
model.geom('geom1').create('pi1', 'PartInstance');
model.geom('geom1').feature('pi1').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi1').set('part', 'part1');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'n_fins_x', 'n_fins');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'X_fins_bottom', '3[mm]');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'X_fins_top', '2[mm]');
model.geom('geom1').feature('pi1').set('workplanepart', 'wp11');
model.geom('geom1').feature('pi1').set('displ', {'-5[mm]' '-5[mm]' '0'});
model.geom('geom1').feature('pi1').setEntry('selkeepdom', 'pi1_csel1.dom', false);
model.geom('geom1').feature('pi1').setEntry('selcontributetodom', 'pi1_csel1.dom', 'none');
model.geom('geom1').feature('pi1').setEntry('selkeepdom', 'pi1_csel2.dom', false);
model.geom('geom1').feature('pi1').setEntry('selcontributetodom', 'pi1_csel2.dom', 'none');
model.geom('geom1').feature('pi1').setEntry('selkeepdom', 'pi1_csel3.dom', false);
model.geom('geom1').feature('pi1').setEntry('selcontributetodom', 'pi1_csel3.dom', 'none');
model.geom('geom1').feature('pi1').setEntry('selkeepdom', 'pi1_csel9.dom', true);
model.geom('geom1').feature('pi1').setEntry('selshowdom', 'pi1_csel9.dom', true);
model.geom('geom1').feature('pi1').setEntry('selcontributetodom', 'pi1_csel9.dom', 'none');
model.geom('geom1').feature('pi1').setEntry('selkeepbnd', 'pi1_boxsel1', false);
model.geom('geom1').feature('pi1').setEntry('selcontributetobnd', 'pi1_boxsel1', 'none');
model.geom('geom1').feature('pi1').setEntry('selkeepbnd', 'pi1_adjsel2', false);
model.geom('geom1').feature('pi1').setEntry('selcontributetobnd', 'pi1_adjsel2', 'none');
model.geom('geom1').feature('pi1').setEntry('selkeepbnd', 'pi1_difsel1', true);
model.geom('geom1').feature('pi1').setEntry('selshowbnd', 'pi1_difsel1', true);
model.geom('geom1').feature('pi1').setEntry('selcontributetobnd', 'pi1_difsel1', 'none');
model.geom('geom1').feature('pi1').setEntry('selkeepbnd', 'pi1_csel9.bnd', false);
model.geom('geom1').feature('pi1').setEntry('selcontributetobnd', 'pi1_csel9.bnd', 'none');
model.geom('geom1').run('fin');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat1').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat1').label('Aluminum');
model.material('mat1').set('family', 'aluminum');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('heatcapacity', '900[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'238[W/(m*K)]' '0' '0' '0' '238[W/(m*K)]' '0' '0' '0' '238[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'3.774e7[S/m]' '0' '0' '0' '3.774e7[S/m]' '0' '0' '0' '3.774e7[S/m]'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'23e-6[1/K]' '0' '0' '0' '23e-6[1/K]' '0' '0' '0' '23e-6[1/K]'});
model.material('mat1').propertyGroup('def').set('density', '2700[kg/m^3]');
model.material('mat1').propertyGroup('Enu').set('E', '70[GPa]');
model.material('mat1').propertyGroup('Enu').set('nu', '0.33');
model.material('mat1').propertyGroup('Murnaghan').set('l', '-250[GPa]');
model.material('mat1').propertyGroup('Murnaghan').set('m', '-330[GPa]');
model.material('mat1').propertyGroup('Murnaghan').set('n', '-350[GPa]');
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat2').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat2').label('Silica glass');
model.material('mat2').set('family', 'custom');
model.material('mat2').set('customambient', [1 1 1]);
model.material('mat2').set('noise', true);
model.material('mat2').set('fresnel', 0.99);
model.material('mat2').set('roughness', 0.02);
model.material('mat2').set('metallic', 0);
model.material('mat2').set('pearl', 0);
model.material('mat2').set('diffusewrap', 0);
model.material('mat2').set('clearcoat', 0);
model.material('mat2').set('reflectance', 0);
model.material('mat2').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('electricconductivity', {'1e-14[S/m]' '0' '0' '0' '1e-14[S/m]' '0' '0' '0' '1e-14[S/m]'});
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'0.55e-6[1/K]' '0' '0' '0' '0.55e-6[1/K]' '0' '0' '0' '0.55e-6[1/K]'});
model.material('mat2').propertyGroup('def').set('heatcapacity', '703[J/(kg*K)]');
model.material('mat2').propertyGroup('def').set('relpermittivity', {'3.75' '0' '0' '0' '3.75' '0' '0' '0' '3.75'});
model.material('mat2').propertyGroup('def').set('density', '2203[kg/m^3]');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'1.38[W/(m*K)]' '0' '0' '0' '1.38[W/(m*K)]' '0' '0' '0' '1.38[W/(m*K)]'});
model.material('mat2').propertyGroup('Enu').set('E', '73.1[GPa]');
model.material('mat2').propertyGroup('Enu').set('nu', '0.17');
model.material('mat2').propertyGroup('RefractiveIndex').set('n', {'1.45' '0' '0' '0' '1.45' '0' '0' '0' '1.45'});

model.view('view1').set('renderwireframe', true);

model.material('mat2').selection.set([3]);

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');
model.selection('sel1').geom(3);
model.selection('sel1').label('Chip');
model.selection('sel1').set([3]);

model.material('mat2').selection.named('sel1');

model.common.create('ampr1', 'AmbientProperties', 'comp1');

model.physics('ht').create('hs1', 'HeatSource', 3);
model.physics('ht').feature('hs1').selection.named('sel1');
model.physics('ht').feature('hs1').set('heatSourceType', 'HeatRate');
model.physics('ht').feature('hs1').set('P0', 'P0');
model.physics('ht').create('hf1', 'HeatFluxBoundary', 2);
model.physics('ht').feature('hf1').selection.named('geom1_pi1_difsel1');
model.physics('ht').feature('hf1').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht').feature('hf1').set('h', 'h0');
model.physics('ht').feature('hf1').set('Text_src', 'root.comp1.ampr1.T_amb');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, heat transfer variables (ht)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 10000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, heat transfer variables (ht)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').label('Temperature (ht)');
model.result('pg1').set('data', 'dset1');
model.result('pg1').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond3/pcond3/pg1');
model.result('pg1').feature.create('vol1', 'Volume');
model.result('pg1').feature('vol1').set('showsolutionparams', 'on');
model.result('pg1').feature('vol1').set('solutionparams', 'parent');
model.result('pg1').feature('vol1').set('colortable', 'HeatCameraLight');
model.result('pg1').feature('vol1').set('smooth', 'internal');
model.result('pg1').feature('vol1').set('showsolutionparams', 'on');
model.result('pg1').feature('vol1').set('data', 'parent');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('vol1').set('unit', 'degC');
model.result('pg1').feature('vol1').create('sel1', 'Selection');
model.result('pg1').feature('vol1').feature('sel1').selection.named('sel1');
model.result('pg1').run;
model.result('pg1').feature.duplicate('vol2', 'vol1');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('vol2').feature('sel1').selection.named('geom1_pi1_csel9_dom');
model.result('pg1').run;
model.result('pg1').feature('vol2').set('titletype', 'none');
model.result('pg1').feature('vol2').set('inheritplot', 'vol1');
model.result('pg1').feature('vol2').create('filt1', 'Filter');
model.result('pg1').run;
model.result('pg1').feature('vol2').feature('filt1').set('expr', 'x>0.02');
model.result('pg1').run;

model.physics('ht').create('tc1', 'ThermalContact', 2);
model.physics('ht').feature('tc1').selection.set([15]);

model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').geom(2);
model.selection('sel2').label('Chip/Heat Sink Interface');
model.selection('sel2').set([15]);

model.physics('ht').feature('tc1').selection.named('sel2');
model.physics('ht').feature('tc1').set('ContactModel', 'EquThinLayer');
model.physics('ht').feature('tc1').set('Specify', 'LayerConductivityandThickness');
model.physics('ht').feature('tc1').set('ds', '50[um]');

model.material.create('mat3', 'Common', 'comp1');
model.material('mat3').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat3').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat3').propertyGroup('def').func.create('rho', 'Analytic');
model.material('mat3').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat3').propertyGroup('def').func.create('cs', 'Analytic');
model.material('mat3').propertyGroup('def').func.create('an1', 'Analytic');
model.material('mat3').propertyGroup('def').func.create('an2', 'Analytic');
model.material('mat3').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat3').propertyGroup.create('NonlinearModel', 'Nonlinear model');
model.material('mat3').propertyGroup.create('idealGas', 'Ideal gas');
model.material('mat3').propertyGroup('idealGas').func.create('Cp', 'Piecewise');
model.material('mat3').label('Air');
model.material('mat3').set('family', 'air');
model.material('mat3').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat3').propertyGroup('def').func('eta').set('pieces', {'200.0' '1600.0' '-8.38278E-7+8.35717342E-8*T^1-7.69429583E-11*T^2+4.6437266E-14*T^3-1.06585607E-17*T^4'});
model.material('mat3').propertyGroup('def').func('eta').set('argunit', 'K');
model.material('mat3').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.material('mat3').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat3').propertyGroup('def').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat3').propertyGroup('def').func('Cp').set('argunit', 'K');
model.material('mat3').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat3').propertyGroup('def').func('rho').set('expr', 'pA*0.02897/R_const[K*mol/J]/T');
model.material('mat3').propertyGroup('def').func('rho').set('args', {'pA' 'T'});
model.material('mat3').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.material('mat3').propertyGroup('def').func('rho').set('argunit', {'Pa' 'K'});
model.material('mat3').propertyGroup('def').func('rho').set('plotaxis', {'off' 'on'});
model.material('mat3').propertyGroup('def').func('rho').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat3').propertyGroup('def').func('rho').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '293.15'});
model.material('mat3').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat3').propertyGroup('def').func('k').set('pieces', {'200.0' '1600.0' '-0.00227583562+1.15480022E-4*T^1-7.90252856E-8*T^2+4.11702505E-11*T^3-7.43864331E-15*T^4'});
model.material('mat3').propertyGroup('def').func('k').set('argunit', 'K');
model.material('mat3').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.material('mat3').propertyGroup('def').func('cs').set('expr', 'sqrt(1.4*R_const[K*mol/J]/0.02897*T)');
model.material('mat3').propertyGroup('def').func('cs').set('args', {'T'});
model.material('mat3').propertyGroup('def').func('cs').set('fununit', 'm/s');
model.material('mat3').propertyGroup('def').func('cs').set('argunit', {'K'});
model.material('mat3').propertyGroup('def').func('cs').set('plotfixedvalue', {'273.15'});
model.material('mat3').propertyGroup('def').func('cs').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat3').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.material('mat3').propertyGroup('def').func('an1').set('expr', '-1/rho(pA,T)*d(rho(pA,T),T)');
model.material('mat3').propertyGroup('def').func('an1').set('args', {'pA' 'T'});
model.material('mat3').propertyGroup('def').func('an1').set('fununit', '1/K');
model.material('mat3').propertyGroup('def').func('an1').set('argunit', {'Pa' 'K'});
model.material('mat3').propertyGroup('def').func('an1').set('plotaxis', {'off' 'on'});
model.material('mat3').propertyGroup('def').func('an1').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat3').propertyGroup('def').func('an1').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '373.15'});
model.material('mat3').propertyGroup('def').func('an2').set('funcname', 'muB');
model.material('mat3').propertyGroup('def').func('an2').set('expr', '0.6*eta(T)');
model.material('mat3').propertyGroup('def').func('an2').set('args', {'T'});
model.material('mat3').propertyGroup('def').func('an2').set('fununit', 'Pa*s');
model.material('mat3').propertyGroup('def').func('an2').set('argunit', {'K'});
model.material('mat3').propertyGroup('def').func('an2').set('plotfixedvalue', {'200'});
model.material('mat3').propertyGroup('def').func('an2').set('plotargs', {'T' '200' '1600'});
model.material('mat3').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.material('mat3').propertyGroup('def').set('molarmass', '');
model.material('mat3').propertyGroup('def').set('bulkviscosity', '');
model.material('mat3').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)'});
model.material('mat3').propertyGroup('def').set('molarmass', '0.02897[kg/mol]');
model.material('mat3').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.material('mat3').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.material('mat3').propertyGroup('def').set('ratioofspecificheat', '1.4');
model.material('mat3').propertyGroup('def').set('electricconductivity', {'0[S/m]' '0' '0' '0' '0[S/m]' '0' '0' '0' '0[S/m]'});
model.material('mat3').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.material('mat3').propertyGroup('def').set('density', 'rho(pA,T)');
model.material('mat3').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.material('mat3').propertyGroup('def').set('soundspeed', 'cs(T)');
model.material('mat3').propertyGroup('def').addInput('temperature');
model.material('mat3').propertyGroup('def').addInput('pressure');
model.material('mat3').propertyGroup('RefractiveIndex').set('n', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('NonlinearModel').set('BA', 'def.gamma-1');
model.material('mat3').propertyGroup('idealGas').func('Cp').label('Piecewise 2');
model.material('mat3').propertyGroup('idealGas').func('Cp').set('arg', 'T');
model.material('mat3').propertyGroup('idealGas').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat3').propertyGroup('idealGas').func('Cp').set('argunit', 'K');
model.material('mat3').propertyGroup('idealGas').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat3').propertyGroup('idealGas').set('Rs', 'R_const/Mn');
model.material('mat3').propertyGroup('idealGas').set('heatcapacity', 'Cp(T)');
model.material('mat3').propertyGroup('idealGas').set('ratioofspecificheat', '1.4');
model.material('mat3').propertyGroup('idealGas').set('molarmass', '0.02897');
model.material('mat3').propertyGroup('idealGas').addInput('temperature');
model.material('mat3').propertyGroup('idealGas').addInput('pressure');
model.material('mat3').materialType('nonSolid');
model.material('mat3').selection.geom('geom1', 2);
model.material('mat3').selection.named('sel2');

model.sol('sol1').study('std1');
model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, heat transfer variables (ht)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 10000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, heat transfer variables (ht)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result('pg1').run;

model.material.create('mat4', 'Common', 'comp1');
model.material('mat4').label('Thermal grease');
model.material('mat4').set('family', 'concrete');
model.material('mat4').propertyGroup('def').set('density', '2600[kg/m^3]');
model.material('mat4').propertyGroup('def').set('heatcapacity', '1200[J/(kg*K)]');
model.material('mat4').propertyGroup('def').set('thermalconductivity', {'3[W/(m*K)]' '0' '0' '0' '3[W/(m*K)]' '0' '0' '0' '3[W/(m*K)]'});
model.material('mat4').selection.geom('geom1', 2);
model.material('mat4').selection.named('sel2');

model.sol('sol1').study('std1');
model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, heat transfer variables (ht)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 10000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, heat transfer variables (ht)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result('pg1').run;

model.geom('geom1').run('pi1');
model.geom('geom1').create('blk2', 'Block');
model.geom('geom1').feature('blk2').set('size', {'W_channel' 'D_channel' '1'});
model.geom('geom1').feature('blk2').setIndex('size', 'H_channel', 2);
model.geom('geom1').feature('blk2').set('pos', {'-(W_channel-40[mm])/2' '0' '0'});
model.geom('geom1').feature('blk2').setIndex('pos', '-80[mm]', 1);
model.geom('geom1').run('fin');

model.material.duplicate('mat5', 'mat3');
model.material('mat5').selection.geom('geom1', 3);
model.material('mat5').selection.set([1]);

model.selection.create('sel3', 'Explicit');
model.selection('sel3').model('comp1');
model.selection('sel3').geom(3);
model.selection('sel3').label('Air');
model.selection('sel3').set([1]);

model.material('mat5').selection.named('sel3');

model.physics.create('spf', 'LaminarFlow', 'geom1');
model.physics('spf').model('comp1');

model.study('std1').feature('stat').setSolveFor('/physics/spf', true);

model.physics('spf').selection.named('sel3');
model.physics('spf').create('inl1', 'InletBoundary', 2);
model.physics('spf').feature('inl1').selection.set([2]);

model.selection.create('sel4', 'Explicit');
model.selection('sel4').model('comp1');
model.selection('sel4').geom(2);
model.selection('sel4').label('Inlet');
model.selection('sel4').set([2]);

model.physics('spf').feature('inl1').selection.named('sel4');
model.physics('spf').feature('inl1').set('BoundaryCondition', 'FullyDevelopedFlow');
model.physics('spf').feature('inl1').set('Uavfdf', 'U0');
model.physics('spf').create('out1', 'OutletBoundary', 2);
model.physics('spf').feature('out1').selection.set([5]);

model.selection.create('sel5', 'Explicit');
model.selection('sel5').model('comp1');
model.selection('sel5').geom(2);
model.selection('sel5').label('Outlet');
model.selection('sel5').set([5]);

model.physics('spf').feature('out1').selection.named('sel5');
model.physics('ht').feature('fluid1').selection.named('sel3');
model.physics('ht').create('ifl1', 'Inflow', 2);
model.physics('ht').feature('ifl1').selection.named('sel4');
model.physics('ht').feature('ifl1').set('Tustr_src', 'root.comp1.ampr1.T_amb');
model.physics('ht').create('ofl1', 'ConvectiveOutflow', 2);
model.physics('ht').feature('ofl1').selection.named('sel5');

model.multiphysics.create('nitf1', 'NonIsothermalFlow', 'geom1', 3);

model.study('std1').feature('stat').setSolveFor('/multiphysics/nitf1', true);

model.multiphysics('nitf1').set('Fluid_physics', 'spf');
model.multiphysics('nitf1').set('Heat_physics', 'ht');

model.physics('ht').prop('ShapeProperty').set('order_temperature', '1');
model.physics('spf').prop('AdvancedSettingProperty').set('UsePseudoTime', '1');
model.physics('spf').prop('PhysicalModelProperty').set('Compressibility', 'WeaklyCompressible');

model.mesh('mesh1').autoMeshSize(9);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol1').study('std1');
model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('se1', 'Segregated');
model.sol('sol1').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_p' 'comp1_u' 'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subdamp', 0.5);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').label('Velocity u, Pressure p');
model.sol('sol1').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_T'});
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subdamp', 0.5);
model.sol('sol1').feature('s1').create('d2', 'Direct');
model.sol('sol1').feature('s1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d2').label('Direct, heat transfer variables (ht)');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').label('Temperature');
model.sol('sol1').feature('s1').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol1').feature('s1').feature('se1').set('subinitcfl', 5);
model.sol('sol1').feature('s1').feature('se1').set('submincfl', 10000);
model.sol('sol1').feature('s1').feature('se1').set('subkppid', 0.65);
model.sol('sol1').feature('s1').feature('se1').set('subkdpid', 0.15);
model.sol('sol1').feature('s1').feature('se1').set('subkipid', 0.15);
model.sol('sol1').feature('s1').feature('se1').set('subcfltol', 0.1);
model.sol('sol1').feature('s1').feature('se1').set('segcflaa', true);
model.sol('sol1').feature('s1').feature('se1').set('segcflaacfl', 9000);
model.sol('sol1').feature('s1').feature('se1').set('segcflaafact', 1);
model.sol('sol1').feature('s1').feature('se1').set('maxsegiter', 200);
model.sol('sol1').feature('s1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol1').feature('s1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.T 0 ');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').create('i2', 'Iterative');
model.sol('sol1').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i2').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i2').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i2').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i2').set('maxlinit', 10000);
model.sol('sol1').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i2').label('AMG, heat transfer variables (ht)');
model.sol('sol1').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result('pg1').run;
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Temperature and Fluid Flow (nitf1)');
model.result('pg2').set('showlegendsunit', true);
model.result('pg2').set('data', 'dset1');
model.result('pg2').set('defaultPlotID', 'MultiphysicsNonIsothermalFlow/cfcom1/pdef1/pcond4/pcond3/pg1');
model.result('pg2').feature.create('surf1', 'Surface');
model.result('pg2').feature('surf1').label('Wall Temperature');
model.result('pg2').feature('surf1').set('solutionparams', 'parent');
model.result('pg2').feature('surf1').set('expr', 'ht.Tvar');
model.result('pg2').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg2').feature('surf1').set('smooth', 'internal');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('data', 'parent');
model.result('pg2').feature('surf1').feature.create('sel1', 'Selection');
model.result('pg2').feature('surf1').feature('sel1').selection.geom('geom1', 2);
model.result('pg2').feature('surf1').feature('sel1').selection.set([1 3 4 6 7 9 11 12 13 14 15 16 22 24 25 26 27 28 29 31 32 33 34 35 37 39 40 41 42 43 44]);
model.result('pg2').feature.create('vol1', 'Volume');
model.result('pg2').feature('vol1').label('Solid Temperature');
model.result('pg2').feature('vol1').set('solutionparams', 'parent');
model.result('pg2').feature('vol1').set('expr', 'nitf1.T');
model.result('pg2').feature('vol1').set('smooth', 'internal');
model.result('pg2').feature('vol1').set('showsolutionparams', 'on');
model.result('pg2').feature('vol1').set('data', 'parent');
model.result('pg2').feature('vol1').feature.create('sel1', 'Selection');
model.result('pg2').feature('vol1').feature('sel1').selection.geom('geom1', 3);
model.result('pg2').feature('vol1').feature('sel1').selection.set([2 3 4 5 6 7]);
model.result('pg2').feature('vol1').set('inheritplot', 'surf1');
model.result('pg2').feature.create('arwv1', 'ArrowVolume');
model.result('pg2').feature('arwv1').label('Fluid Flow');
model.result('pg2').feature('arwv1').set('solutionparams', 'parent');
model.result('pg2').feature('arwv1').set('expr', {'nitf1.ux' 'nitf1.uy' 'nitf1.uz'});
model.result('pg2').feature('arwv1').set('xnumber', 30);
model.result('pg2').feature('arwv1').set('ynumber', 30);
model.result('pg2').feature('arwv1').set('znumber', 30);
model.result('pg2').feature('arwv1').set('arrowtype', 'cone');
model.result('pg2').feature('arwv1').set('arrowlength', 'logarithmic');
model.result('pg2').feature('arwv1').set('showsolutionparams', 'on');
model.result('pg2').feature('arwv1').set('data', 'parent');
model.result('pg2').feature('arwv1').feature.create('col1', 'Color');
model.result('pg2').feature('arwv1').feature('col1').set('showcolordata', 'off');
model.result('pg2').feature('arwv1').feature('col1').set('expr', 'spf.U');
model.result('pg2').feature('arwv1').feature.create('filt1', 'Filter');
model.result('pg2').feature('arwv1').feature('filt1').set('expr', 'spf.U>nitf1.Uave');
model.result('pg2').label('Temperature and Fluid Flow (nitf1)');
model.result('pg2').run;

model.view('view1').hideObjects.create('hide1');
model.view('view1').hideObjects('hide1').init(2);
model.view('view1').hideObjects('hide1').add('fin', [1 2 4 5]);

model.result('pg2').run;
model.result('pg2').feature('surf1').set('unit', 'degC');
model.result('pg2').run;
model.result('pg2').feature('vol1').set('unit', 'degC');
model.result('pg2').run;
model.result('pg2').feature('arwv1').feature('filt1').set('expr', 'spf.U>1.2*nitf1.Uave');
model.result('pg2').run;
model.result('pg2').run;
model.result.duplicate('pg3', 'pg2');
model.result('pg3').run;
model.result('pg3').label('Temperature of the channel walls and heat sink');
model.result('pg3').set('showlegendsunit', false);
model.result('pg3').run;
model.result('pg3').feature.remove('arwv1');
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').run;

model.physics.create('rad', 'SurfaceToSurfaceRadiation', 'geom1');
model.physics('rad').model('comp1');

model.study('std1').feature('stat').setSolveFor('/physics/rad', true);

model.physics('rad').selection.named('geom1_pi1_difsel1');
model.physics('rad').selection.set([1 3 4 6 7 9 11 12 13 14 15 16 22 24 25 26 27 28 29 31 32 33 34 35 37 39 40 41 42 43 44]);
model.physics('rad').create('opac1', 'Opacity', 3);
model.physics('rad').feature('opac1').selection.allVoids;

model.view('view1').set('hidestatus', 'ignore');

model.multiphysics.create('htrad1', 'HeatTransferWithSurfaceToSurfaceRadiation', 'geom1', 2);

model.study('std1').feature('stat').setSolveFor('/multiphysics/htrad1', true);

model.multiphysics('htrad1').selection.all;
model.multiphysics('htrad1').set('Heat_physics', 'ht');
model.multiphysics('htrad1').set('Rad_physics', 'rad');

model.view('view1').set('hidestatus', 'hide');

model.material.create('mat6', 'Common', 'comp1');
model.material('mat6').label('Heat sink walls');
model.material('mat6').selection.geom('geom1', 2);
model.material('mat6').selection.named('geom1_pi1_difsel1');
model.material('mat6').propertyGroup('def').set('emissivity', {'0.9'});
model.material.create('mat7', 'Common', 'comp1');
model.material('mat7').label('Channel walls');
model.material('mat7').selection.geom('geom1', 2);

model.view('view1').set('hidestatus', 'ignore');

model.material('mat7').selection.set([1 3 4 44]);

model.view('view1').set('hidestatus', 'hide');

model.material('mat7').propertyGroup('def').set('emissivity', {'0.85'});

model.study('std1').label('Study 1 Without Radiation');
model.study('std1').feature('stat').setEntry('activate', 'rad', false);
model.study('std1').feature('stat').setEntry('activateCoupling', 'htrad1', false);
model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/ht', true);
model.study('std2').feature('stat').setSolveFor('/physics/spf', true);
model.study('std2').feature('stat').setSolveFor('/physics/rad', true);
model.study('std2').feature('stat').setSolveFor('/multiphysics/nitf1', true);
model.study('std2').feature('stat').setSolveFor('/multiphysics/htrad1', true);
model.study('std2').label('Study 2 With Radiation');

model.sol.create('sol2');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_rad_dsurf1_Jd_band').set('scalemethod', 'init');
model.sol('sol2').feature('v1').feature('comp1_rad_dsurf1_Ju_band').set('scalemethod', 'init');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('seDef', 'Segregated');
model.sol('sol2').feature('s1').create('se1', 'Segregated');
model.sol('sol2').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol2').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_rad_dsurf1_Ju_band' 'comp1_rad_dsurf1_Jd_band'});
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('subdamp', 0.8);
model.sol('sol2').feature('s1').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s1').feature('d1').label('Direct, radiation variables');
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol2').feature('s1').feature('se1').feature('ss1').label('Radiosity');
model.sol('sol2').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol2').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_p' 'comp1_u' 'comp1_spf_inl1_Pinlfdf'});
model.sol('sol2').feature('s1').feature('se1').feature('ss2').set('subdamp', 0.5);
model.sol('sol2').feature('s1').create('d2', 'Direct');
model.sol('sol2').feature('s1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s1').feature('d2').label('Direct, fluid flow variables (spf)');
model.sol('sol2').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol2').feature('s1').feature('se1').feature('ss2').label('Velocity u, Pressure p');
model.sol('sol2').feature('s1').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol2').feature('s1').feature('se1').feature('ss3').set('segvar', {'comp1_T'});
model.sol('sol2').feature('s1').feature('se1').feature('ss3').set('subdamp', 0.5);
model.sol('sol2').feature('s1').create('d3', 'Direct');
model.sol('sol2').feature('s1').feature('d3').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('d3').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s1').feature('d3').label('Direct, heat transfer variables (ht)');
model.sol('sol2').feature('s1').feature('se1').feature('ss3').set('linsolver', 'd3');
model.sol('sol2').feature('s1').feature('se1').feature('ss3').label('Temperature');
model.sol('sol2').feature('s1').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol2').feature('s1').feature('se1').set('segaaccdim', 10);
model.sol('sol2').feature('s1').feature('se1').set('ntolfact', 0.1);
model.sol('sol2').feature('s1').feature('se1').set('maxsegiter', 200);
model.sol('sol2').feature('s1').feature('se1').set('subinitcfl', 5);
model.sol('sol2').feature('s1').feature('se1').set('subkppid', 0.65);
model.sol('sol2').feature('s1').feature('se1').set('subkdpid', 0.05);
model.sol('sol2').feature('s1').feature('se1').set('subkipid', 0.05);
model.sol('sol2').feature('s1').feature('se1').set('subcfltol', 0.1);
model.sol('sol2').feature('s1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol2').feature('s1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.T 0 ');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol2').feature('s1').feature('i1').label('AMG, radiation variables');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').create('i2', 'Iterative');
model.sol('sol2').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol2').feature('s1').feature('i2').set('prefuntype', 'left');
model.sol('sol2').feature('s1').feature('i2').set('rhob', 20);
model.sol('sol2').feature('s1').feature('i2').label('GMG, radiation variables');
model.sol('sol2').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').set('prefun', 'gmg');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').set('mcasegen', 'any');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').create('i3', 'Iterative');
model.sol('sol2').feature('s1').feature('i3').set('linsolver', 'gmres');
model.sol('sol2').feature('s1').feature('i3').set('prefuntype', 'left');
model.sol('sol2').feature('s1').feature('i3').set('itrestart', 50);
model.sol('sol2').feature('s1').feature('i3').set('rhob', 20);
model.sol('sol2').feature('s1').feature('i3').set('maxlinit', 1000);
model.sol('sol2').feature('s1').feature('i3').set('nlinnormuse', 'on');
model.sol('sol2').feature('s1').feature('i3').label('AMG, fluid flow variables (spf)');
model.sol('sol2').feature('s1').feature('i3').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i3').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('s1').feature('i3').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('s1').feature('i3').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol2').feature('s1').feature('i3').feature('mg1').set('strconn', 0.02);
model.sol('sol2').feature('s1').feature('i3').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('s1').feature('i3').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('s1').feature('i3').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('s1').feature('i3').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('s1').feature('i3').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('s1').feature('i3').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol2').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol2').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol2').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol2').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol2').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol2').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol2').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol2').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol2').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol2').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol2').feature('s1').feature('i3').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol2').feature('s1').feature('i3').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s1').feature('i3').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol2').feature('s1').feature('i3').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol2').feature('s1').feature('i3').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol2').feature('s1').feature('i3').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol2').feature('s1').feature('i3').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol2').feature('s1').feature('i3').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol2').feature('s1').feature('i3').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol2').feature('s1').feature('i3').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol2').feature('s1').feature('i3').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol2').feature('s1').feature('i3').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol2').feature('s1').feature('i3').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('i3').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('i3').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s1').create('i4', 'Iterative');
model.sol('sol2').feature('s1').feature('i4').set('linsolver', 'gmres');
model.sol('sol2').feature('s1').feature('i4').set('prefuntype', 'left');
model.sol('sol2').feature('s1').feature('i4').set('itrestart', 50);
model.sol('sol2').feature('s1').feature('i4').set('rhob', 400);
model.sol('sol2').feature('s1').feature('i4').set('maxlinit', 10000);
model.sol('sol2').feature('s1').feature('i4').set('nlinnormuse', 'on');
model.sol('sol2').feature('s1').feature('i4').label('AMG, heat transfer variables (ht)');
model.sol('sol2').feature('s1').feature('i4').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i4').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('s1').feature('i4').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('s1').feature('i4').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol2').feature('s1').feature('i4').feature('mg1').set('strconn', 0.01);
model.sol('sol2').feature('s1').feature('i4').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('s1').feature('i4').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('s1').feature('i4').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('s1').feature('i4').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('s1').feature('i4').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('s1').feature('i4').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('s1').feature('i4').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol2').feature('s1').feature('i4').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('s1').feature('i4').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('s1').feature('i4').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol2').feature('s1').feature('i4').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('s1').feature('i4').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('i4').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('i4').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').feature('s1').feature.remove('seDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').label('Temperature (ht) 1');
model.result('pg4').set('data', 'dset2');
model.result('pg4').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond3/pcond3/pg1');
model.result('pg4').feature.create('vol1', 'Volume');
model.result('pg4').feature('vol1').set('showsolutionparams', 'on');
model.result('pg4').feature('vol1').set('solutionparams', 'parent');
model.result('pg4').feature('vol1').set('colortable', 'HeatCameraLight');
model.result('pg4').feature('vol1').set('smooth', 'internal');
model.result('pg4').feature('vol1').set('showsolutionparams', 'on');
model.result('pg4').feature('vol1').set('data', 'parent');
model.result.dataset('dset2').set('geom', 'geom1');
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').label('Velocity (spf)');
model.result('pg5').set('data', 'dset2');
model.result('pg5').set('frametype', 'spatial');
model.result('pg5').set('data', 'dset2');
model.result('pg5').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pg1');
model.result('pg5').feature.create('slc1', 'Slice');
model.result('pg5').feature('slc1').label('Slice');
model.result('pg5').feature('slc1').set('showsolutionparams', 'on');
model.result('pg5').feature('slc1').set('expr', 'spf.U');
model.result('pg5').feature('slc1').set('smooth', 'internal');
model.result('pg5').feature('slc1').set('showsolutionparams', 'on');
model.result('pg5').feature('slc1').set('data', 'parent');
model.result.dataset.create('surf1', 'Surface');
model.result.dataset('surf1').label('Exterior Walls');
model.result.dataset('surf1').set('data', 'dset2');
model.result.dataset('surf1').selection.geom('geom1', 2);
model.result.dataset('surf1').selection.set([1 3 4 6 7 9 11 12 13 14 15 16 22 24 25 26 27 28 29 31 32 33 34 35 37 39 40 41 42 43 44]);
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').label('Pressure (spf)');
model.result('pg6').set('data', 'surf1');
model.result('pg6').set('frametype', 'spatial');
model.result('pg6').set('data', 'surf1');
model.result('pg6').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pcond2/pcond1/pg4');
model.result('pg6').feature.create('surf1', 'Surface');
model.result('pg6').feature('surf1').label('Surface');
model.result('pg6').feature('surf1').set('showsolutionparams', 'on');
model.result('pg6').feature('surf1').set('expr', 'p');
model.result('pg6').feature('surf1').set('colortable', 'Dipole');
model.result('pg6').feature('surf1').set('smooth', 'internal');
model.result('pg6').feature('surf1').set('showsolutionparams', 'on');
model.result('pg6').feature('surf1').set('data', 'parent');
model.result('pg6').feature('surf1').feature.create('tran1', 'Transparency');
model.result.create('pg7', 'PlotGroup3D');
model.result('pg7').label('Surface Radiosity (rad)');
model.result('pg7').set('data', 'dset2');
model.result('pg7').set('defaultPlotID', 'rad/RAD_PhysicsInterfaces/icom1/pdef1/pcond3/pcond2/pg1');
model.result('pg7').feature.create('slit1', 'SurfaceSlit');
model.result('pg7').feature('slit1').set('showsolutionparams', 'on');
model.result('pg7').feature('slit1').set('upexpr', 'rad.Ju');
model.result('pg7').feature('slit1').set('downexpr', 'rad.Jd');
model.result('pg7').feature('slit1').set('smooth', 'internal');
model.result('pg7').feature('slit1').set('showsolutionparams', 'on');
model.result('pg7').feature('slit1').set('data', 'parent');
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').label('Temperature and Fluid Flow (nitf1) 1');
model.result('pg8').set('data', 'dset2');
model.result('pg8').set('showlegendsunit', true);
model.result('pg8').set('data', 'dset2');
model.result('pg8').set('defaultPlotID', 'MultiphysicsNonIsothermalFlow/cfcom1/pdef1/pcond4/pcond3/pg1');
model.result('pg8').feature.create('surf1', 'Surface');
model.result('pg8').feature('surf1').label('Wall Temperature');
model.result('pg8').feature('surf1').set('showsolutionparams', 'on');
model.result('pg8').feature('surf1').set('solutionparams', 'parent');
model.result('pg8').feature('surf1').set('expr', 'ht.Tvar');
model.result('pg8').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg8').feature('surf1').set('smooth', 'internal');
model.result('pg8').feature('surf1').set('showsolutionparams', 'on');
model.result('pg8').feature('surf1').set('data', 'parent');
model.result('pg8').feature('surf1').feature.create('sel1', 'Selection');
model.result('pg8').feature('surf1').feature('sel1').selection.geom('geom1', 2);
model.result('pg8').feature('surf1').feature('sel1').selection.set([1 3 4 6 7 9 11 12 13 14 15 16 22 24 25 26 27 28 29 31 32 33 34 35 37 39 40 41 42 43 44]);
model.result('pg8').feature.create('vol1', 'Volume');
model.result('pg8').feature('vol1').label('Solid Temperature');
model.result('pg8').feature('vol1').set('showsolutionparams', 'on');
model.result('pg8').feature('vol1').set('solutionparams', 'parent');
model.result('pg8').feature('vol1').set('expr', 'nitf1.T');
model.result('pg8').feature('vol1').set('smooth', 'internal');
model.result('pg8').feature('vol1').set('showsolutionparams', 'on');
model.result('pg8').feature('vol1').set('data', 'parent');
model.result('pg8').feature('vol1').feature.create('sel1', 'Selection');
model.result('pg8').feature('vol1').feature('sel1').selection.geom('geom1', 3);
model.result('pg8').feature('vol1').feature('sel1').selection.set([2 3 4 5 6 7]);
model.result('pg8').feature('vol1').set('inheritplot', 'surf1');
model.result('pg8').feature.create('arwv1', 'ArrowVolume');
model.result('pg8').feature('arwv1').label('Fluid Flow');
model.result('pg8').feature('arwv1').set('showsolutionparams', 'on');
model.result('pg8').feature('arwv1').set('solutionparams', 'parent');
model.result('pg8').feature('arwv1').set('expr', {'nitf1.ux' 'nitf1.uy' 'nitf1.uz'});
model.result('pg8').feature('arwv1').set('xnumber', 30);
model.result('pg8').feature('arwv1').set('ynumber', 30);
model.result('pg8').feature('arwv1').set('znumber', 30);
model.result('pg8').feature('arwv1').set('arrowtype', 'cone');
model.result('pg8').feature('arwv1').set('arrowlength', 'logarithmic');
model.result('pg8').feature('arwv1').set('showsolutionparams', 'on');
model.result('pg8').feature('arwv1').set('data', 'parent');
model.result('pg8').feature('arwv1').feature.create('col1', 'Color');
model.result('pg8').feature('arwv1').feature('col1').set('showcolordata', 'off');
model.result('pg8').feature('arwv1').feature('col1').set('expr', 'spf.U');
model.result('pg8').feature('arwv1').feature.create('filt1', 'Filter');
model.result('pg8').feature('arwv1').feature('filt1').set('expr', 'spf.U>nitf1.Uave');
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').feature('vol1').set('unit', 'degC');
model.result('pg4').feature('vol1').create('tran1', 'Transparency');
model.result('pg4').run;
model.result('pg8').run;
model.result('pg8').feature('surf1').set('unit', 'degC');
model.result('pg8').run;
model.result('pg8').feature('vol1').set('unit', 'degC');
model.result('pg8').run;
model.result('pg8').feature('arwv1').feature('filt1').set('expr', 'spf.U>1.2*nitf1.Uave');
model.result('pg8').run;
model.result('pg8').run;
model.result.duplicate('pg9', 'pg8');
model.result('pg9').run;
model.result('pg9').label('Temperature of the channel walls and heat sink, with radiation');
model.result('pg9').set('showlegendsunit', false);
model.result('pg9').run;
model.result('pg9').feature.remove('arwv1');
model.result('pg9').run;
model.result('pg9').run;
model.result('pg9').run;
model.result.create('pg10', 'PlotGroup3D');
model.result('pg10').label('Contact Temperature (ht)');
model.result('pg10').set('data', 'dset2');
model.result('pg10').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond3/pcond4/pg1');
model.result('pg10').feature.create('slit1', 'SurfaceSlit');
model.result('pg10').feature('slit1').set('solutionparams', 'parent');
model.result('pg10').feature('slit1').set('updescractive', true);
model.result('pg10').feature('slit1').set('upexpr', 'ht.Tu');
model.result('pg10').feature('slit1').set('updescr', 'Upside temperature');
model.result('pg10').feature('slit1').set('downdescractive', true);
model.result('pg10').feature('slit1').set('downexpr', 'ht.Td');
model.result('pg10').feature('slit1').set('downdescr', 'Downside temperature');
model.result('pg10').feature('slit1').set('colortable', 'HeatCameraLight');
model.result('pg10').feature('slit1').set('smooth', 'internal');
model.result('pg10').feature('slit1').set('showsolutionparams', 'on');
model.result('pg10').feature('slit1').set('data', 'parent');
model.result('pg10').feature('slit1').feature.create('sel1', 'Selection');
model.result('pg10').feature('slit1').feature('sel1').selection.geom('geom1', 2);
model.result('pg10').feature('slit1').feature('sel1').selection.set([20]);
model.result('pg10').label('Contact Temperature (ht)');
model.result('pg10').run;
model.result('pg10').run;
model.result('pg10').feature('slit1').set('upunit', 'degC');
model.result('pg10').feature('slit1').set('downunit', 'degC');
model.result('pg10').run;
model.result('pg8').run;

model.title('Electronic Chip Cooling');

model.description(['This tutorial model uses a heat sink geometry from the Part Library. The tutorial shows different approaches to heat transfer modeling when studying the cooling of an electronic chip.' newline  newline 'In the first part, only the solid parts are modeled, while the convective airflow is modeled using Convective Heat Flux boundary conditions.' newline  newline 'In the second part, the model is extended to include a fluid domain for the flow channel to compute the coupled temperature and velocity of the fluid, assuming nonisothermal behavior.' newline  newline 'In the last part, surface-to-surface radiation is considered to see how significantly it contributes to the results.']);

model.label('chip_cooling.mph');

model.modelNode.label('Components');

out = model;
