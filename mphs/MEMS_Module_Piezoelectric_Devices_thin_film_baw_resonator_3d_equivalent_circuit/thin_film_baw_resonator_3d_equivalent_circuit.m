function out = model
%
% thin_film_baw_resonator_3d_equivalent_circuit.m
%
% Model exported on May 26 2025, 21:30 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/MEMS_Module/Piezoelectric_Devices');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('es', 'Electrostatics', 'geom1');
model.physics('es').model('comp1');
model.physics('es').create('ccnp1', 'ChargeConservationPiezo');
model.physics('es').feature('ccnp1').selection.all;
model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');
model.physics('solid').create('pzm1', 'PiezoelectricMaterialModel');
model.physics('solid').feature('pzm1').selection.all;

model.multiphysics.create('pze1', 'PiezoelectricEffect', 'geom1', 3);
model.multiphysics('pze1').set('Solid_physics', 'solid');
model.multiphysics('pze1').set('Electrostatics_physics', 'es');

model.study.create('std1');
model.study('std1').create('freq', 'Frequency');
model.study('std1').feature('freq').setSolveFor('/physics/es', true);
model.study('std1').feature('freq').setSolveFor('/physics/solid', true);
model.study('std1').feature('freq').setSolveFor('/multiphysics/pze1', true);

model.geom('geom1').lengthUnit([native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']);

model.param.label('Parameters - FEM Model');
model.param.set('L', '85[um]');
model.param.descr('L', 'Length of resonator side');
model.param.set('L_a', '10[um]');
model.param.descr('L_a', 'Length of anchor');
model.param.set('W_a', '10[um]');
model.param.descr('W_a', 'Width of anchor');
model.param.set('t_te', '0.1[um]');
model.param.descr('t_te', 'Thickness of top electrode');
model.param.set('t_piezo', '1[um]');
model.param.descr('t_piezo', 'Thickness of piezoelectric layer');
model.param.set('t_be', '0.2[um]');
model.param.descr('t_be', 'Thickness of bottom electrode');
model.param.set('t_nitride', '0.2[um]');
model.param.descr('t_nitride', 'Thickness of nitride membrane');
model.param.set('Vapp', '5[V]');
model.param.descr('Vapp', 'Applied voltage');
model.param.set('L_apo', 'L/(2*tan(36[deg]))');
model.param.descr('L_apo', 'Apothem of pentagon');
model.param.create('par2');
model.param('par2').label('Parameters - Equivalent Circuit Model');
model.param('par2').set('Cm', '62[fF]');
model.param('par2').descr('Cm', 'Capacitor, motional');
model.param('par2').set('Lm', '39[nH]');
model.param('par2').descr('Lm', 'Inductor, motional');
model.param('par2').set('Rm', '1[ohm]');
model.param('par2').descr('Rm', 'Resistor, motional');
model.param('par2').set('Co', '1[pF]');
model.param('par2').descr('Co', 'Capacitor');
model.param('par2').set('Ro', '500[ohm]');
model.param('par2').descr('Ro', 'Resistor');
model.param('par2').set('Rs', '1[ohm]');
model.param('par2').descr('Rs', 'Resistor');
model.param('par2').set('Vsrc', '5[V]');
model.param('par2').descr('Vsrc', 'Voltage Source');

model.geom('geom1').create('wp1', 'WorkPlane');
model.geom('geom1').feature('wp1').set('unite', true);
model.geom('geom1').feature('wp1').geom.create('sq1', 'Square');
model.geom('geom1').feature('wp1').geom.feature('sq1').set('size', 'L_apo');
model.geom('geom1').feature('wp1').geom.run('sq1');
model.geom('geom1').feature('wp1').geom.create('sq2', 'Square');
model.geom('geom1').feature('wp1').geom.feature('sq2').set('size', '2*L');
model.geom('geom1').feature('wp1').geom.feature('sq2').set('rot', -36);
model.geom('geom1').feature('wp1').geom.run('sq2');
model.geom('geom1').feature('wp1').geom.create('dif1', 'Difference');
model.geom('geom1').feature('wp1').geom.feature('dif1').selection('input').set({'sq1'});
model.geom('geom1').feature('wp1').geom.feature('dif1').selection('input2').set({'sq2'});
model.geom('geom1').feature('wp1').geom.run('dif1');
model.geom('geom1').feature('wp1').geom.create('r1', 'Rectangle');
model.geom('geom1').feature('wp1').geom.feature('r1').set('size', {'W_a/2' 'L_a'});
model.geom('geom1').feature('wp1').geom.feature('r1').set('pos', {'0' 'L_apo'});
model.geom('geom1').feature('wp1').geom.run('r1');
model.geom('geom1').feature('wp1').geom.create('rot1', 'Rotate');
model.geom('geom1').feature('wp1').geom.feature('rot1').set('rot', 36);
model.geom('geom1').feature('wp1').geom.feature('rot1').selection('input').set({'dif1' 'r1'});
model.geom('geom1').feature('wp1').geom.run('rot1');
model.geom('geom1').run('wp1');
model.geom('geom1').feature.create('ext1', 'Extrude');
model.geom('geom1').feature('ext1').setIndex('distance', 't_nitride', 0);
model.geom('geom1').feature('ext1').setIndex('distance', 't_nitride+t_be', 1);
model.geom('geom1').feature('ext1').set('displ', {'0' '0'; '0' '0'});
model.geom('geom1').feature('ext1').set('scale', {'1' '1'; '1' '1'});
model.geom('geom1').feature('ext1').set('twist', {'0' '0'});
model.geom('geom1').feature('ext1').setIndex('distance', 't_nitride+t_be+t_piezo', 2);
model.geom('geom1').feature('ext1').set('displ', {'0' '0'; '0' '0'; '0' '0'});
model.geom('geom1').feature('ext1').set('scale', {'1' '1'; '1' '1'; '1' '1'});
model.geom('geom1').feature('ext1').set('twist', {'0' '0' '0'});
model.geom('geom1').feature('ext1').setIndex('distance', 't_nitride+t_be+t_piezo+t_te', 3);
model.geom('geom1').feature('ext1').set('displ', {'0' '0'; '0' '0'; '0' '0'; '0' '0'});
model.geom('geom1').feature('ext1').set('scale', {'1' '1'; '1' '1'; '1' '1'; '1' '1'});
model.geom('geom1').feature('ext1').set('twist', {'0' '0' '0' '0'});
model.geom('geom1').run('ext1');

model.view('view1').camera.set('viewscaletype', 'manual');
model.view('view1').camera.set('zscale', 5);

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');

model.geom('geom1').run;

model.selection('sel1').label('Fixed');
model.selection('sel1').geom(2);
model.selection('sel1').set([1 4 7 10]);
model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').label('Nitride');
model.selection('sel2').set([1 5]);
model.selection.create('sel3', 'Explicit');
model.selection('sel3').model('comp1');
model.selection('sel3').label('Top Electrode');
model.selection('sel3').set([4 8]);
model.selection.create('sel4', 'Explicit');
model.selection('sel4').model('comp1');
model.selection('sel4').label('Bottom Electrode');
model.selection('sel4').set([2 6]);
model.selection.create('sel5', 'Explicit');
model.selection('sel5').model('comp1');
model.selection('sel5').label('Piezoelectric');
model.selection('sel5').set([3 7]);
model.selection.create('sel6', 'Explicit');
model.selection('sel6').model('comp1');
model.selection('sel6').label('Symmetry');
model.selection('sel6').geom(2);
model.selection('sel6').set([2 5 8 11 19 22 25 28 35 36 37 38]);

model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl('intop1').set('axisym', true);
model.cpl('intop1').selection.geom('geom1', 2);
model.cpl('intop1').selection.set([30]);

model.physics('es').feature('ccnp1').selection.named('sel5');
model.physics('es').create('symp1', 'SymmetryPlane', 2);
model.physics('es').feature('symp1').selection.named('sel6');
model.physics('es').create('term1', 'DomainTerminal', 3);
model.physics('es').feature('term1').label('Top Terminal');
model.physics('es').feature('term1').selection.named('sel3');
model.physics('es').feature('term1').set('TerminalType', 'Voltage');
model.physics('es').feature('term1').set('V0', 'Vapp');
model.physics('es').create('gnd1', 'Ground', 2);
model.physics('es').feature('gnd1').selection.set([9 26]);
model.physics('solid').feature('lemm1').create('dmp1', 'Damping', 3);
model.physics('solid').feature('lemm1').feature('dmp1').set('DampingType', 'IsotropicLossFactor');
model.physics('solid').feature('pzm1').selection.named('sel5');
model.physics('solid').feature('pzm1').create('mdmp1', 'MechanicalDamping', 3);
model.physics('solid').create('fix1', 'Fixed', 2);
model.physics('solid').feature('fix1').selection.named('sel1');
model.physics('solid').create('sym1', 'SymmetrySolid', 2);
model.physics('solid').feature('sym1').selection.named('sel6');

model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.set([12 29]);
model.mesh('mesh1').feature('ftri1').create('size1', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size1').set('hauto', 2);
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis1').selection.named('sel5');
model.mesh('mesh1').feature('swe1').feature('dis1').set('numelem', 3);
model.mesh('mesh1').feature('swe1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis2').selection.named('sel2');
model.mesh('mesh1').feature('swe1').feature('dis2').set('numelem', 2);
model.mesh('mesh1').feature('swe1').create('dis3', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis3').selection.named('sel4');
model.mesh('mesh1').feature('swe1').feature('dis3').set('numelem', 2);
model.mesh('mesh1').feature('swe1').create('dis4', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis4').selection.named('sel3');
model.mesh('mesh1').feature('swe1').feature('dis4').set('numelem', 1);
model.mesh('mesh1').run;

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('StrainCharge', 'Strain-charge form');
model.material('mat1').propertyGroup.create('StressCharge', 'Stress-charge form');
model.material('mat1').label('Aluminum Nitride');
model.material('mat1').set('family', 'custom');
model.material('mat1').set('customspecular', [0.7843137254901961 1 1]);
model.material('mat1').set('customdiffuse', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat1').set('noise', true);
model.material('mat1').set('fresnel', 0.9);
model.material('mat1').set('roughness', 0.1);
model.material('mat1').set('metallic', 0);
model.material('mat1').set('pearl', 0);
model.material('mat1').set('diffusewrap', 0);
model.material('mat1').set('clearcoat', 0);
model.material('mat1').set('reflectance', 0);
model.material('mat1').propertyGroup('def').set('relpermittivity', {'9' '0' '0' '0' '9' '0' '0' '0' '9'});
model.material('mat1').propertyGroup('def').set('density', '3300[kg/m^3]');
model.material('mat1').propertyGroup('StrainCharge').set('sE', {'2.8987e-12[1/Pa]' '-9.326e-013[1/Pa]' '-5.0038e-013[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '-9.326e-013[1/Pa]' '2.8987e-12[1/Pa]' '-5.0038e-013[1/Pa]' '0[1/Pa]'  ...
'0[1/Pa]' '0[1/Pa]' '-5.0038e-013[1/Pa]' '-5.0038e-013[1/Pa]' '2.8253e-012[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]'  ...
'0[1/Pa]' '8E-12[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '8E-12[1/Pa]' '0[1/Pa]'  ...
'0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '7.6628E-12[1/Pa]'});
model.material('mat1').propertyGroup('StrainCharge').set('dET', {'0[C/N]' '0[C/N]' '-1.9159e-012[C/N]' '0[C/N]' '0[C/N]' '-1.9159e-012[C/N]' '0[C/N]' '0[C/N]' '4.9597e-012[C/N]' '0[C/N]'  ...
'-3.84e-012[C/N]' '0[C/N]' '-3.84e-012[C/N]' '0[C/N]' '0[C/N]' '0[C/N]' '0[C/N]' '0[C/N]'});
model.material('mat1').propertyGroup('StrainCharge').set('epsilonrT', {'9.2081' '0' '0' '0' '9.2081' '0' '0' '0' '10.1192'});
model.material('mat1').propertyGroup('StressCharge').set('cE', {'4.1e+011[Pa]' '1.49e+011[Pa]' '0.99e+011[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '1.49e+011[Pa]' '4.1e+011[Pa]' '0.99e+011[Pa]' '0[Pa]'  ...
'0[Pa]' '0[Pa]' '0.99e+011[Pa]' '0.99e+011[Pa]' '3.89e+011[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]'  ...
'0[Pa]' '1.25e+011[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '1.25e+011[Pa]' '0[Pa]'  ...
'0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '1.305e+011[Pa]'});
model.material('mat1').propertyGroup('StressCharge').set('eES', {'0[C/m^2]' '0[C/m^2]' '-0.58[C/m^2]' '0[C/m^2]' '0[C/m^2]' '-0.58[C/m^2]' '0[C/m^2]' '0[C/m^2]' '1.55[C/m^2]' '0[C/m^2]'  ...
'-0.48[C/m^2]' '0[C/m^2]' '-0.48[C/m^2]' '0[C/m^2]' '0[C/m^2]' '0[C/m^2]' '0[C/m^2]' '0[C/m^2]'});
model.material('mat1').propertyGroup('StressCharge').set('epsilonrS', {'9' '0' '0' '0' '9' '0' '0' '0' '9'});
model.material('mat1').selection.named('sel5');
model.material('mat1').propertyGroup('StressCharge').set('eta_cE', {'1e-3'});
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat2').label('Al - Aluminum');
model.material('mat2').set('family', 'aluminum');
model.material('mat2').propertyGroup('def').set('electricconductivity', {'35.5e6[S/m]' '0' '0' '0' '35.5e6[S/m]' '0' '0' '0' '35.5e6[S/m]'});
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'23.1e-6[1/K]' '0' '0' '0' '23.1e-6[1/K]' '0' '0' '0' '23.1e-6[1/K]'});
model.material('mat2').propertyGroup('def').set('heatcapacity', '904[J/(kg*K)]');
model.material('mat2').propertyGroup('def').set('density', '2700[kg/m^3]');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'237[W/(m*K)]' '0' '0' '0' '237[W/(m*K)]' '0' '0' '0' '237[W/(m*K)]'});
model.material('mat2').propertyGroup('Enu').set('E', '70.0e9[Pa]');
model.material('mat2').propertyGroup('Enu').set('nu', '0.35');
model.material('mat2').selection.named('sel3');
model.material('mat2').propertyGroup('def').set('lossfactor', {'1e-4'});
model.material.create('mat3', 'Common', 'comp1');
model.material('mat3').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat3').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat3').label('Molybdenum');
model.material('mat3').set('family', 'custom');
model.material('mat3').set('customspecular', [0.7843137254901961 1 1]);
model.material('mat3').set('customdiffuse', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat3').set('noise', true);
model.material('mat3').set('fresnel', 0.3);
model.material('mat3').set('roughness', 0.1);
model.material('mat3').set('metallic', 0);
model.material('mat3').set('pearl', 0);
model.material('mat3').set('diffusewrap', 0);
model.material('mat3').set('clearcoat', 0);
model.material('mat3').set('reflectance', 0);
model.material('mat3').propertyGroup('def').set('thermalexpansioncoefficient', {'4.8e-6[1/K]' '0' '0' '0' '4.8e-6[1/K]' '0' '0' '0' '4.8e-6[1/K]'});
model.material('mat3').propertyGroup('def').set('density', '10200[kg/m^3]');
model.material('mat3').propertyGroup('def').set('heatcapacity', '250[J/(kg*K)]');
model.material('mat3').propertyGroup('def').set('thermalconductivity', {'138[W/(m*K)]' '0' '0' '0' '138[W/(m*K)]' '0' '0' '0' '138[W/(m*K)]'});
model.material('mat3').propertyGroup('Enu').set('E', '312[GPa]');
model.material('mat3').propertyGroup('Enu').set('nu', '0.31');
model.material('mat3').propertyGroup('Murnaghan').set('l', '-300[GPa]');
model.material('mat3').propertyGroup('Murnaghan').set('m', '-850[GPa]');
model.material('mat3').propertyGroup('Murnaghan').set('n', '-910[GPa]');
model.material('mat3').selection.named('sel4');
model.material('mat3').propertyGroup('def').set('relpermittivity', {'1'});
model.material('mat3').propertyGroup('def').set('lossfactor', {'1e-4'});
model.material.create('mat4', 'Common', 'comp1');
model.material('mat4').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat4').label('Si3N4 - Silicon nitride');
model.material('mat4').propertyGroup('def').set('electricconductivity', {'0[S/m]' '0' '0' '0' '0[S/m]' '0' '0' '0' '0[S/m]'});
model.material('mat4').propertyGroup('def').set('thermalexpansioncoefficient', {'2.3e-6[1/K]' '0' '0' '0' '2.3e-6[1/K]' '0' '0' '0' '2.3e-6[1/K]'});
model.material('mat4').propertyGroup('def').set('heatcapacity', '700[J/(kg*K)]');
model.material('mat4').propertyGroup('def').set('relpermittivity', {'9.7' '0' '0' '0' '9.7' '0' '0' '0' '9.7'});
model.material('mat4').propertyGroup('def').set('density', '3100[kg/m^3]');
model.material('mat4').propertyGroup('def').set('thermalconductivity', {'20[W/(m*K)]' '0' '0' '0' '20[W/(m*K)]' '0' '0' '0' '20[W/(m*K)]'});
model.material('mat4').propertyGroup('Enu').set('E', '250e9[Pa]');
model.material('mat4').propertyGroup('Enu').set('nu', '0.23');
model.material('mat4').selection.named('sel2');
model.material('mat4').propertyGroup('def').set('lossfactor', {'1e-2'});

model.study('std1').label('Frequency Domain - FEM');
model.study('std1').setGenPlots(false);
model.study('std1').feature('freq').set('punit', 'GHz');
model.study('std1').feature('freq').set('plist', 'range(2.8, 0.01, 3.8)');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(2.8, 0.01, 3.8)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'GHz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'Default');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('s1').feature('d1').label('Suggested Direct Solver (pze1) (Merged)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol1').feature('s1').feature('i1').label('Suggested Iterative Solver (pze1)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').run;
model.result('pg1').label('Frequency Response');
model.result('pg1').set('ylabelactive', true);
model.result('pg1').set('ylabel', 'Log10(Abs(I))');
model.result('pg1').create('glob1', 'Global');
model.result('pg1').feature('glob1').set('markerpos', 'datapoints');
model.result('pg1').feature('glob1').set('linewidth', 'preference');
model.result('pg1').feature('glob1').label('FEM');
model.result('pg1').feature('glob1').setIndex('expr', 'log10(abs(10*es.I0_1))', 0);
model.result('pg1').feature('glob1').setIndex('descr', 'FEM', 0);
model.result('pg1').run;

model.physics.create('cir', 'Circuit', 'geom1');
model.physics('cir').model('comp1');

model.study('std1').feature('freq').setSolveFor('/physics/cir', true);

model.physics('cir').create('V1', 'VoltageSource', -1);
model.physics('cir').feature('V1').setIndex('Connections', 0, 1, 0);
model.physics('cir').feature('V1').set('value', 'Vsrc');
model.physics('cir').create('R1', 'Resistor', -1);
model.physics('cir').feature('R1').label('R_s');
model.physics('cir').feature('R1').setIndex('Connections', 1, 0, 0);
model.physics('cir').feature('R1').setIndex('Connections', 2, 1, 0);
model.physics('cir').feature('R1').set('R', 'Rs');
model.physics('cir').create('R2', 'Resistor', -1);
model.physics('cir').feature('R2').label('R_m');
model.physics('cir').feature('R2').setIndex('Connections', 2, 0, 0);
model.physics('cir').feature('R2').setIndex('Connections', 3, 1, 0);
model.physics('cir').feature('R2').set('R', 'Rm');
model.physics('cir').create('L1', 'Inductor', -1);
model.physics('cir').feature('L1').label('L_m');
model.physics('cir').feature('L1').setIndex('Connections', 3, 0, 0);
model.physics('cir').feature('L1').setIndex('Connections', 4, 1, 0);
model.physics('cir').feature('L1').set('L', 'Lm');
model.physics('cir').create('C1', 'Capacitor', -1);
model.physics('cir').feature('C1').label('C_m');
model.physics('cir').feature('C1').setIndex('Connections', 4, 0, 0);
model.physics('cir').feature('C1').setIndex('Connections', 0, 1, 0);
model.physics('cir').feature('C1').set('C', 'Cm');
model.physics('cir').create('R3', 'Resistor', -1);
model.physics('cir').feature('R3').label('R_o');
model.physics('cir').feature('R3').setIndex('Connections', 2, 0, 0);
model.physics('cir').feature('R3').setIndex('Connections', 0, 1, 0);
model.physics('cir').feature('R3').set('R', 'Ro');
model.physics('cir').create('C2', 'Capacitor', -1);
model.physics('cir').feature('C2').label('C_o');
model.physics('cir').feature('C2').setIndex('Connections', 2, 0, 0);
model.physics('cir').feature('C2').setIndex('Connections', 0, 1, 0);
model.physics('cir').feature('C2').set('C', 'Co');

model.study.create('std2');
model.study('std2').create('freq', 'Frequency');
model.study('std2').feature('freq').setSolveFor('/physics/es', true);
model.study('std2').feature('freq').setSolveFor('/physics/solid', true);
model.study('std2').feature('freq').setSolveFor('/physics/cir', true);
model.study('std2').feature('freq').setSolveFor('/multiphysics/pze1', true);
model.study('std2').label('Frequency Domain - Equivalent Circuit');
model.study('std2').feature('freq').set('punit', 'GHz');
model.study('std2').feature('freq').set('plist', 'range(2.8,0.01,3.8)');
model.study('std2').feature('freq').setEntry('activate', 'es', false);
model.study('std2').feature('freq').setEntry('activate', 'solid', false);
model.study('std2').feature('freq').setEntry('activateCoupling', 'pze1', false);
model.study('std2').setGenPlots(false);

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'freq');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'freq');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('p1', 'Parametric');
model.sol('sol2').feature('s1').feature.remove('pDef');
model.sol('sol2').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol2').feature('s1').feature('p1').set('plistarr', {'range(2.8,0.01,3.8)'});
model.sol('sol2').feature('s1').feature('p1').set('punit', {'GHz'});
model.sol('sol2').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol2').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol2').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol2').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol2').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol2').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol2').feature('s1').feature('p1').set('probes', {});
model.sol('sol2').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol2').feature('s1').set('linpmethod', 'sol');
model.sol('sol2').feature('s1').set('linpsol', 'zero');
model.sol('sol2').feature('s1').set('control', 'freq');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result('pg1').run;
model.result('pg1').create('glob2', 'Global');
model.result('pg1').feature('glob2').set('markerpos', 'datapoints');
model.result('pg1').feature('glob2').set('linewidth', 'preference');
model.result('pg1').feature('glob2').label('Equivalent Circuit, Initial Values');
model.result('pg1').feature('glob2').set('data', 'dset2');
model.result('pg1').feature('glob2').setIndex('expr', 'log10(abs(cir.R1_i))', 0);
model.result('pg1').feature('glob2').setIndex('descr', 'Equivalent Circuit, Initial Values', 0);
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('glob1').createTable('tbl1');
model.result.table('tbl1').label('FEM Reference Data');

model.study.create('std3');
model.study('std3').label('Parameter Extraction');
model.study('std3').feature.copy('freq1', 'std2/freq');
model.study('std3').create('lsqo', 'LSQOptimization');
model.study('std3').feature('lsqo').set('source', 'resultTable');
model.study('std3').feature('lsqo').setEntry('columnType', 'col1', 'freq');
model.study('std3').feature('lsqo').setEntry('frequencyUnit', 'col1', 'GHz');
model.study('std3').feature('lsqo').setEntry('modelExpression', 'col2', 'log10(abs(comp1.cir.R1_i))');
model.study('std3').feature('lsqo').setEntry('unit', 'col2', '1');
model.study('std3').feature('lsqo').setEntry('scaleMethod', 'col2', 'manual');
model.study('std3').feature('lsqo').setIndex('pname', 'Cm', 0);
model.study('std3').feature('lsqo').setIndex('initval', '62[fF]', 0);
model.study('std3').feature('lsqo').setIndex('scale', 1, 0);
model.study('std3').feature('lsqo').setIndex('lbound', '', 0);
model.study('std3').feature('lsqo').setIndex('ubound', '', 0);
model.study('std3').feature('lsqo').setIndex('pname', 'Cm', 0);
model.study('std3').feature('lsqo').setIndex('initval', '62[fF]', 0);
model.study('std3').feature('lsqo').setIndex('scale', 1, 0);
model.study('std3').feature('lsqo').setIndex('lbound', '', 0);
model.study('std3').feature('lsqo').setIndex('ubound', '', 0);
model.study('std3').feature('lsqo').setIndex('pname', 'Co', 1);
model.study('std3').feature('lsqo').setIndex('initval', '1[pF]', 1);
model.study('std3').feature('lsqo').setIndex('scale', 1, 1);
model.study('std3').feature('lsqo').setIndex('lbound', '', 1);
model.study('std3').feature('lsqo').setIndex('ubound', '', 1);
model.study('std3').feature('lsqo').setIndex('pname', 'Co', 1);
model.study('std3').feature('lsqo').setIndex('initval', '1[pF]', 1);
model.study('std3').feature('lsqo').setIndex('scale', 1, 1);
model.study('std3').feature('lsqo').setIndex('lbound', '', 1);
model.study('std3').feature('lsqo').setIndex('ubound', '', 1);
model.study('std3').feature('lsqo').setIndex('pname', 'L', 2);
model.study('std3').feature('lsqo').setIndex('initval', '85[um]', 2);
model.study('std3').feature('lsqo').setIndex('scale', 1, 2);
model.study('std3').feature('lsqo').setIndex('lbound', '', 2);
model.study('std3').feature('lsqo').setIndex('ubound', '', 2);
model.study('std3').feature('lsqo').setIndex('pname', 'L', 2);
model.study('std3').feature('lsqo').setIndex('initval', '85[um]', 2);
model.study('std3').feature('lsqo').setIndex('scale', 1, 2);
model.study('std3').feature('lsqo').setIndex('lbound', '', 2);
model.study('std3').feature('lsqo').setIndex('ubound', '', 2);
model.study('std3').feature('lsqo').setIndex('pname', 'L_a', 3);
model.study('std3').feature('lsqo').setIndex('initval', '10[um]', 3);
model.study('std3').feature('lsqo').setIndex('scale', 1, 3);
model.study('std3').feature('lsqo').setIndex('lbound', '', 3);
model.study('std3').feature('lsqo').setIndex('ubound', '', 3);
model.study('std3').feature('lsqo').setIndex('pname', 'L_a', 3);
model.study('std3').feature('lsqo').setIndex('initval', '10[um]', 3);
model.study('std3').feature('lsqo').setIndex('scale', 1, 3);
model.study('std3').feature('lsqo').setIndex('lbound', '', 3);
model.study('std3').feature('lsqo').setIndex('ubound', '', 3);
model.study('std3').feature('lsqo').setIndex('pname', 'L_apo', 4);
model.study('std3').feature('lsqo').setIndex('initval', 'L/(2*tan(36[deg]))', 4);
model.study('std3').feature('lsqo').setIndex('scale', 1, 4);
model.study('std3').feature('lsqo').setIndex('lbound', '', 4);
model.study('std3').feature('lsqo').setIndex('ubound', '', 4);
model.study('std3').feature('lsqo').setIndex('pname', 'L_apo', 4);
model.study('std3').feature('lsqo').setIndex('initval', 'L/(2*tan(36[deg]))', 4);
model.study('std3').feature('lsqo').setIndex('scale', 1, 4);
model.study('std3').feature('lsqo').setIndex('lbound', '', 4);
model.study('std3').feature('lsqo').setIndex('ubound', '', 4);
model.study('std3').feature('lsqo').setIndex('pname', 'Lm', 5);
model.study('std3').feature('lsqo').setIndex('initval', '39[nH]', 5);
model.study('std3').feature('lsqo').setIndex('scale', 1, 5);
model.study('std3').feature('lsqo').setIndex('lbound', '', 5);
model.study('std3').feature('lsqo').setIndex('ubound', '', 5);
model.study('std3').feature('lsqo').setIndex('pname', 'Lm', 5);
model.study('std3').feature('lsqo').setIndex('initval', '39[nH]', 5);
model.study('std3').feature('lsqo').setIndex('scale', 1, 5);
model.study('std3').feature('lsqo').setIndex('lbound', '', 5);
model.study('std3').feature('lsqo').setIndex('ubound', '', 5);
model.study('std3').feature('lsqo').setIndex('scale', '60[fF]', 0);
model.study('std3').feature('lsqo').setIndex('lbound', '45[fF]', 0);
model.study('std3').feature('lsqo').setIndex('ubound', '75[fF]', 0);
model.study('std3').feature('lsqo').setIndex('pname', '', 1);
model.study('std3').feature('lsqo').setIndex('scale', '40[nH]', 1);
model.study('std3').feature('lsqo').setIndex('lbound', '10[nH]', 1);
model.study('std3').feature('lsqo').setIndex('ubound', '70[nH]', 1);
model.study('std3').feature('lsqo').setIndex('pname', 'Co', 2);
model.study('std3').feature('lsqo').setIndex('scale', '1[pF]', 2);
model.study('std3').feature('lsqo').setIndex('lbound', '0.1[pF]', 2);
model.study('std3').feature('lsqo').setIndex('ubound', '2[pF]', 2);
model.study('std3').feature('lsqo').setIndex('pname', 'Rs', 3);
model.study('std3').feature('lsqo').setIndex('scale', '10[ohm]', 3);
model.study('std3').feature('lsqo').setIndex('lbound', '0.001[ohm]', 3);
model.study('std3').feature('lsqo').setIndex('ubound', '20[ohm]', 3);
model.study('std3').feature('lsqo').setIndex('pname', 'Rm', 4);
model.study('std3').feature('lsqo').setIndex('scale', '10[ohm]', 4);
model.study('std3').feature('lsqo').setIndex('lbound', '0.01[ohm]', 4);
model.study('std3').feature('lsqo').setIndex('ubound', '20[ohm]', 4);
model.study('std3').feature('lsqo').setIndex('pname', 'Ro', 5);
model.study('std3').feature('lsqo').setIndex('pname', 'Lm', 1);
model.study('std3').feature('lsqo').setIndex('scale', '2500[ohm]', 5);
model.study('std3').feature('lsqo').setIndex('lbound', '100[ohm]', 5);
model.study('std3').feature('lsqo').setIndex('ubound', '5000[ohm]', 5);
model.study('std3').feature('lsqo').set('optsolver', 'snopt');
model.study('std3').feature('lsqo').set('lsqdatamethod', 'lsq');

model.sol.create('sol3');
model.sol('sol3').study('std3');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std3');
model.sol('sol3').feature('st1').set('studystep', 'freq1');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').set('control', 'freq1');
model.sol('sol3').create('o1', 'Optimization');
model.sol('sol3').feature('o1').set('control', 'lsqo');
model.sol('sol3').feature('o1').create('s1', 'StationaryAttrib');
model.sol('sol3').feature('o1').feature('s1').create('p1', 'Parametric');
model.sol('sol3').feature('o1').feature('s1').feature.remove('pDef');
model.sol('sol3').feature('o1').feature('s1').feature('p1').set('control', 'freq1');
model.sol('sol3').feature('o1').feature('s1').set('control', 'freq1');
model.sol('sol3').feature('o1').feature('s1').create('p2', 'Parametric');
model.sol('sol3').feature('o1').feature('s1').feature('p2').set('control', 'freq1');
model.sol('sol3').feature('o1').feature('s1').set('control', 'freq1');
model.sol('sol3').feature('o1').feature('s1').feature('p2').set('plistarrlsq', {'2.8000000000000005E9, 2.8099999999999995E9, 2.8200000000000005E9, 2.8299999999999995E9, 2.8400000000000005E9, 2.8499999999999995E9, 2.8600000000000005E9, 2.8699999999999995E9, 2.8800000000000005E9, 2.8899999999999995E9, 2.9000000000000005E9, 2.9099999999999995E9, 2.9200000000000005E9, 2.9299999999999995E9, 2.9400000000000005E9, 2.9499999999999995E9, 2.96E9, 2.9699999999999995E9, 2.98E9, 2.99E9, 3.0E9, 3.01E9, 3.02E9, 3.0300000000000005E9, 3.04E9, 3.0500000000000005E9, 3.0599999999999995E9, 3.0700000000000005E9, 3.08E9, 3.0900000000000005E9, 3.0999999999999995E9, 3.1100000000000005E9, 3.1199999999999995E9, 3.1300000000000005E9, 3.1399999999999995E9, 3.1500000000000005E9, 3.1599999999999995E9, 3.1700000000000005E9, 3.1799999999999995E9, 3.1900000000000005E9, 3.1999999999999995E9, 3.2100000000000005E9, 3.2199999999999995E9, 3.23E9, 3.24E9, 3.25E9, 3.26E9, 3.27E9, 3.2800000000000005E9, 3.29E9, 3.3000000000000005E9, 3.3099999999999995E9, 3.3200000000000005E9, 3.33E9, 3.3400000000000005E9, 3.3499999999999995E9, 3.3600000000000005E9, 3.37E9, 3.3800000000000005E9, 3.3899999999999995E9, 3.4000000000000005E9, 3.4099999999999995E9, 3.4200000000000005E9, 3.4299999999999995E9, 3.4400000000000005E9, 3.4499999999999995E9, 3.4600000000000005E9, 3.4699999999999995E9, 3.4800000000000005E9, 3.49E9, 3.5E9, 3.51E9, 3.5199999999999995E9, 3.5300000000000005E9, 3.54E9, 3.5500000000000005E9, 3.5599999999999995E9, 3.5700000000000005E9, 3.58E9, 3.5900000000000005E9, 3.5999999999999995E9, 3.6100000000000005E9, 3.62E9, 3.6300000000000005E9, 3.6399999999999995E9, 3.6500000000000005E9, 3.6599999999999995E9, 3.6700000000000005E9, 3.6799999999999995E9, 3.6900000000000005E9, 3.6999999999999995E9, 3.7100000000000005E9, 3.7199999999999995E9, 3.7300000000000005E9, 3.74E9, 3.7500000000000005E9, 3.76E9, 3.7699999999999995E9, 3.7800000000000005E9, 3.79E9, 3.8000000000000005E9'});
model.sol('sol3').feature('o1').feature('s1').feature('p2').set('lsqparamsout', ['      freq' newline '  2.80e+09' newline '  2.81e+09' newline '  2.82e+09' newline '  2.83e+09' newline '  2.84e+09' newline '  2.85e+09' newline '  2.86e+09' newline '  2.87e+09' newline '  2.88e+09' newline '  2.89e+09' newline '  2.90e+09' newline '  2.91e+09' newline '  2.92e+09' newline '  2.93e+09' newline '  2.94e+09' newline '  2.95e+09' newline '  2.96e+09' newline '  2.97e+09' newline '  2.98e+09' newline '  2.99e+09' newline '  3.00e+09' newline '  3.01e+09' newline '  3.02e+09' newline '  3.03e+09' newline '  3.04e+09' newline '  3.05e+09' newline '  3.06e+09' newline '  3.07e+09' newline '  3.08e+09' newline '  3.09e+09' newline '  3.10e+09' newline '  3.11e+09' newline '  3.12e+09' newline '  3.13e+09' newline '  3.14e+09' newline '  3.15e+09' newline '  3.16e+09' newline '  3.17e+09' newline '  3.18e+09' newline '  3.19e+09' newline '  3.20e+09' newline '  3.21e+09' newline '  3.22e+09' newline '  3.23e+09' newline '  3.24e+09' newline '  3.25e+09' newline '  3.26e+09' newline '  3.27e+09' newline '  3.28e+09' newline '  3.29e+09' newline '  3.30e+09' newline '  3.31e+09' newline '  3.32e+09' newline '  3.33e+09' newline '  3.34e+09' newline '  3.35e+09' newline '  3.36e+09' newline '  3.37e+09' newline '  3.38e+09' newline '  3.39e+09' newline '  3.40e+09' newline '  3.41e+09' newline '  3.42e+09' newline '  3.43e+09' newline '  3.44e+09' newline '  3.45e+09' newline '  3.46e+09' newline '  3.47e+09' newline '  3.48e+09' newline '  3.49e+09' newline '  3.50e+09' newline '  3.51e+09' newline '  3.52e+09' newline '  3.53e+09' newline '  3.54e+09' newline '  3.55e+09' newline '  3.56e+09' newline '  3.57e+09' newline '  3.58e+09' newline '  3.59e+09' newline '  3.60e+09' newline '  3.61e+09' newline '  3.62e+09' newline '  3.63e+09' newline '  3.64e+09' newline '  3.65e+09' newline '  3.66e+09' newline '  3.67e+09' newline '  3.68e+09' newline '  3.69e+09' newline '  3.70e+09' newline '  3.71e+09' newline '  3.72e+09' newline '  3.73e+09' newline '  3.74e+09' newline '  3.75e+09' newline '  3.76e+09' newline '  3.77e+09' newline '  3.78e+09' newline '  3.79e+09' newline '  3.80e+09' newline ]);
model.sol('sol3').feature('o1').feature('s1').feature('p2').set('pnamelsq', {'freq'});
model.sol('sol3').feature('v1').set('cname', {});
model.sol('sol3').feature('v1').set('clist', {});
model.sol('sol3').feature('v1').set('clistctrl', {});
model.sol('sol3').feature('v1').set('cname', {'freq'});
model.sol('sol3').feature('v1').set('clist', {'2.8000000000000005E9, 2.8099999999999995E9, 2.8200000000000005E9, 2.8299999999999995E9, 2.8400000000000005E9, 2.8499999999999995E9, 2.8600000000000005E9, 2.8699999999999995E9, 2.8800000000000005E9, 2.8899999999999995E9, 2.9000000000000005E9, 2.9099999999999995E9, 2.9200000000000005E9, 2.9299999999999995E9, 2.9400000000000005E9, 2.9499999999999995E9, 2.96E9, 2.9699999999999995E9, 2.98E9, 2.99E9, 3.0E9, 3.01E9, 3.02E9, 3.0300000000000005E9, 3.04E9, 3.0500000000000005E9, 3.0599999999999995E9, 3.0700000000000005E9, 3.08E9, 3.0900000000000005E9, 3.0999999999999995E9, 3.1100000000000005E9, 3.1199999999999995E9, 3.1300000000000005E9, 3.1399999999999995E9, 3.1500000000000005E9, 3.1599999999999995E9, 3.1700000000000005E9, 3.1799999999999995E9, 3.1900000000000005E9, 3.1999999999999995E9, 3.2100000000000005E9, 3.2199999999999995E9, 3.23E9, 3.24E9, 3.25E9, 3.26E9, 3.27E9, 3.2800000000000005E9, 3.29E9, 3.3000000000000005E9, 3.3099999999999995E9, 3.3200000000000005E9, 3.33E9, 3.3400000000000005E9, 3.3499999999999995E9, 3.3600000000000005E9, 3.37E9, 3.3800000000000005E9, 3.3899999999999995E9, 3.4000000000000005E9, 3.4099999999999995E9, 3.4200000000000005E9, 3.4299999999999995E9, 3.4400000000000005E9, 3.4499999999999995E9, 3.4600000000000005E9, 3.4699999999999995E9, 3.4800000000000005E9, 3.49E9, 3.5E9, 3.51E9, 3.5199999999999995E9, 3.5300000000000005E9, 3.54E9, 3.5500000000000005E9, 3.5599999999999995E9, 3.5700000000000005E9, 3.58E9, 3.5900000000000005E9, 3.5999999999999995E9, 3.6100000000000005E9, 3.62E9, 3.6300000000000005E9, 3.6399999999999995E9, 3.6500000000000005E9, 3.6599999999999995E9, 3.6700000000000005E9, 3.6799999999999995E9, 3.6900000000000005E9, 3.6999999999999995E9, 3.7100000000000005E9, 3.7199999999999995E9, 3.7300000000000005E9, 3.74E9, 3.7500000000000005E9, 3.76E9, 3.7699999999999995E9, 3.7800000000000005E9, 3.79E9, 3.8000000000000005E9'});
model.sol('sol3').feature('v1').set('clistctrl', {'p2lsq'});
model.sol('sol3').feature('o1').feature('s1').feature('p1').active(false);
model.sol('sol3').feature('o1').feature('s1').set('linpmethod', 'sol');
model.sol('sol3').feature('o1').feature('s1').set('linpsol', 'zero');
model.sol('sol3').feature('o1').feature('s1').set('control', 'freq1');
model.sol('sol3').feature('o1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('o1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol3').feature('o1').feature('s1').feature.remove('fcDef');
model.sol('sol3').attach('std3');
model.sol('sol3').feature('st1').set('splitcomplex', true);
model.sol('sol3').runAll;

model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').label('Parameter estimation');
model.result('pg2').set('data', 'dset3');
model.result('pg2').set('xlabelactive', true);
model.result('pg2').set('xlabel', 'Frequency');
model.result('pg2').set('titletype', 'none');
model.result('pg2').create('glob1', 'Global');
model.result('pg2').feature('glob1').label('FEM (model)');
model.result('pg2').feature('glob1').set('expr', {'opt.glsobj.col2.model'});
model.result('pg2').feature('glob1').set('descr', {'FEM (model)'});
model.result('pg2').feature('glob1').set('xdata', 'expr');
model.result('pg2').feature('glob1').set('xdataexpr', 'freq');
model.result('pg2').create('glob2', 'Global');
model.result('pg2').feature('glob2').label('FEM (data)');
model.result('pg2').feature('glob2').set('expr', {'opt.glsobj.col2.data'});
model.result('pg2').feature('glob2').set('descr', {'FEM (data)'});
model.result('pg2').feature('glob2').set('xdata', 'expr');
model.result('pg2').feature('glob2').set('xdataexpr', 'freq');
model.result('pg2').feature('glob2').set('linestyle', 'none');
model.result('pg2').feature('glob2').set('linemarker', 'point');
model.result('pg2').feature('glob2').set('markerpos', 'datapoints');
model.result('pg2').feature('glob2').set('linecolor', 'cyclereset');
model.result('pg2').run;

model.study('std3').feature('lsqo').set('probewindow', '');
model.study.create('std4');
model.study('std4').create('eig', 'Eigenfrequency');
model.study('std4').feature('eig').set('plotgroup', 'Default');
model.study('std4').feature('eig').set('shift', '1[Hz]');
model.study('std4').feature('eig').set('chkeigregion', true);
model.study('std4').feature('eig').set('conrad', '1');
model.study('std4').feature('eig').set('conradynhm', '1');
model.study('std4').feature('eig').set('storefact', false);
model.study('std4').feature('eig').set('linpsolnum', 'auto');
model.study('std4').feature('eig').set('solnum', 'auto');
model.study('std4').feature('eig').set('notsolnum', 'auto');
model.study('std4').feature('eig').set('outputmap', {});
model.study('std4').feature('eig').set('ngenAUX', '1');
model.study('std4').feature('eig').set('goalngenAUX', '1');
model.study('std4').feature('eig').set('ngenAUX', '1');
model.study('std4').feature('eig').set('goalngenAUX', '1');
model.study('std4').feature('eig').setSolveFor('/physics/es', true);
model.study('std4').feature('eig').setSolveFor('/physics/solid', true);
model.study('std4').feature('eig').setSolveFor('/physics/cir', true);
model.study('std4').feature('eig').setSolveFor('/multiphysics/pze1', true);

model.common.create('mpf1', 'ParticipationFactors', 'comp1');

model.study('std4').feature('eig').set('neigsactive', true);
model.study('std4').feature('eig').set('neigs', 25);
model.study('std4').feature('eig').set('eigunit', 'GHz');
model.study('std4').feature('eig').set('shift', '3.25');
model.study('std4').feature('eig').setEntry('activate', 'cir', false);
model.study('std4').label('Eigenfrequency');
model.study('std4').setGenPlots(false);

model.sol.create('sol4');
model.sol('sol4').study('std4');
model.sol('sol4').create('st1', 'StudyStep');
model.sol('sol4').feature('st1').set('study', 'std4');
model.sol('sol4').feature('st1').set('studystep', 'eig');
model.sol('sol4').create('v1', 'Variables');
model.sol('sol4').feature('v1').set('control', 'eig');
model.sol('sol4').create('e1', 'Eigenvalue');
model.sol('sol4').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol4').feature('e1').set('eigvfunscaleparam', '8.279999999999999E-11');
model.sol('sol4').feature('e1').set('control', 'eig');
model.sol('sol4').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol4').attach('std4');
model.sol('sol4').runAll;

model.result.dataset.create('mir1', 'Mirror3D');
model.result.dataset('mir1').set('data', 'dset4');
model.result.dataset.create('sec1', 'Sector3D');
model.result.dataset('sec1').set('data', 'mir1');
model.result.dataset('sec1').set('sectors', 5);
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').run;
model.result('pg3').label('Modes');
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', 'solid.disp');
model.result('pg3').feature('surf1').set('descractive', true);
model.result('pg3').run;
model.result('pg3').set('data', 'sec1');
model.result('pg3').run;
model.result('pg3').set('looplevel', [17]);
model.result('pg3').run;
model.result('pg3').set('showlegends', false);

model.view('view3').set('showgrid', false);
model.view('view3').set('showaxisorientation', false);

model.result('pg3').run;
model.result('pg3').feature('surf1').set('colortable', 'RainbowLight');
model.result('pg3').feature('surf1').set('descractive', false);
model.result('pg3').feature('surf1').set('expr', 'w');
model.result('pg3').run;
model.result('pg3').set('titletype', 'none');
model.result('pg3').run;
model.result('pg3').feature('surf1').set('colortable', 'RainbowClassic');
model.result('pg3').feature('surf1').set('expr', 'solid.disp');
model.result('pg3').run;

model.view('view3').set('showaxisorientation', true);
model.view('view3').set('showgrid', true);

model.result('pg3').set('showlegends', true);
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Displacement Phase Uniformity');
model.result('pg4').set('data', 'dset4');
model.result('pg4').create('glob1', 'Global');
model.result('pg4').feature('glob1').set('markerpos', 'datapoints');
model.result('pg4').feature('glob1').set('linewidth', 'preference');
model.result('pg4').feature('glob1').setIndex('expr', 'abs(intop1(w))/intop1(abs(w))', 0);
model.result('pg4').feature('glob1').setIndex('descr', 'Displacement Phase Uniformity', 0);
model.result('pg4').feature('glob1').set('xdata', 'expr');
model.result('pg4').feature('glob1').set('xdataexpr', 'freq');
model.result('pg4').run;
model.result('pg4').feature('glob1').set('linestyle', 'none');
model.result('pg4').feature('glob1').set('linemarker', 'point');

model.title('Thin-Film BAW Resonator with Equivalent Circuit');

model.description(['This tutorial demonstrates how an electrical circuit model of a MEMS resonator can be derived using the Parameter Estimation study. The circuit model is a modified Butterworth' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Van Dyke circuit created using the Electrical Circuit interface. The Parameter Estimation study is used to solve for the parameters of the discrete elements in the circuit model.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;

model.label('thin_film_baw_resonator_3d_equivalent_circuit.mph');

model.modelNode.label('Components');

out = model;
