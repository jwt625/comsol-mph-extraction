function out = model
%
% tube_connection.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Structural_Mechanics_Module/Contact_and_Friction');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/solid', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('pipeDiameter', '360[mm]', 'Inner diameter of pipe');
model.param.set('pipeThickness', '20[mm]', 'Pipe wall thickness');
model.param.set('pipeOuterDiameter', 'pipeDiameter+2*pipeThickness', 'Outer diameter of pipe');
model.param.set('pipeLength', '5*sqrt(pipeDiameter/2*pipeThickness)', 'Length of pipe, to avoid end effects');
model.param.set('flangeThickness', '26[mm]', 'Flange thickness');
model.param.set('flangeDiameter', '520[mm]', 'Outer diameter of flange');
model.param.set('filletRadius', '12[mm]', 'Fillet radius, flange to pipe');
model.param.set('numBolts', '8', 'Number of bolts');
model.param.set('boltHeadDiameter', '1.5*boltDiameter', 'Diameter of bolt head');
model.param.set('boltHeadThickness', '0.6*boltDiameter', 'Thickness of bolt head');
model.param.set('boltDiameter', '24[mm]', 'Bolt diameter');
model.param.set('boltHoleClearance', '2[mm]', 'Diameter clearance between bolt hole and bolt');
model.param.set('boltHoleDiameter', 'boltDiameter+boltHoleClearance', 'Bolt hole diameter');
model.param.set('boltCircle', '470[mm]', 'Diameter of bolt circle');
model.param.set('washerDiameter', 'boltHeadDiameter*1.15', 'Washer diameter');
model.param.set('washerThickness', '1.5[mm]', 'Washer thickness');
model.param.set('axialForce', '500[kN]', 'Axial Force');
model.param.set('bendingMoment', '40[kN*m]', 'Bending moment');
model.param.set('pressure', '30[bar]', 'Internal pipe pressure');
model.param.set('boltPrestressForce', '150[kN]', 'Bolt prestress force');
model.param.set('ps', '1', 'Parameter for spring relaxation');
model.param.set('lp', '0', 'Loading parameter');

model.geom('geom1').insertFile('tube_connection_geom_sequence.mph', 'geom1');
model.geom('geom1').feature('fin').set('action', 'assembly');
model.geom('geom1').feature('fin').set('pairtype', 'contact');
model.geom('geom1').feature('fin').set('frame', 'material');
model.geom('geom1').run('fin');

model.pair('ap1').mapping('initial');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');
model.selection('sel1').geom(2);
model.selection('sel1').label('Bolts Symmetry');
model.selection('sel1').set([162 173 180 206 207 217 228 236 237 272 273 283 294 302 303 338 339 349 360 368 369 396 407 414]);

model.pair.remove('ap2');
model.pair('ap3').mapping('initial');
model.pair('ap3').swap;
model.pair('ap4').manualSelection(true);
model.pair('ap4').type('Identity');

model.coordSystem('sys1').set('mastercoordsystcomp', '1');

model.selection.create('box1', 'Box');
model.selection('box1').model('comp1');
model.selection('box1').label('Symmetry Boundaries (xz-plane)');
model.selection('box1').set('entitydim', 2);
model.selection('box1').set('ymax', 0);
model.selection('box1').set('zmin', 0);
model.selection('box1').set('condition', 'inside');
model.selection.create('uni1', 'Union');
model.selection('uni1').model('comp1');
model.selection('uni1').set('entitydim', 2);
model.selection('uni1').set('input', {'sel1' 'box1'});
model.selection('uni1').label('Symmetry');
model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').label('Bolt Pretension, Cut 1');
model.selection('sel2').geom(2);
model.selection('sel2').set([165]);
model.selection('sel2').set('groupcontang', true);
model.selection.create('sel3', 'Explicit');
model.selection('sel3').model('comp1');
model.selection('sel3').label('Bolt Pretension, Cut 2');
model.selection('sel3').geom(2);
model.selection('sel3').set([211]);
model.selection('sel3').set('groupcontang', true);
model.selection.create('sel4', 'Explicit');
model.selection('sel4').model('comp1');
model.selection('sel4').label('Bolt Pretension, Cut 3');
model.selection('sel4').geom(2);
model.selection('sel4').set([277]);
model.selection('sel4').set('groupcontang', true);
model.selection.create('sel5', 'Explicit');
model.selection('sel5').model('comp1');
model.selection('sel5').label('Bolt Pretension, Cut 4');
model.selection('sel5').geom(2);
model.selection('sel5').set([343]);
model.selection('sel5').set('groupcontang', true);
model.selection.create('sel6', 'Explicit');
model.selection('sel6').model('comp1');
model.selection('sel6').label('Bolt Pretension, Cut 5');
model.selection('sel6').geom(2);
model.selection('sel6').set([399]);
model.selection('sel6').set('groupcontang', true);

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat1').propertyGroup('Enu').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup('Enu').func.create('int2', 'Interpolation');
model.material('mat1').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat1').propertyGroup.create('ElastoplasticModel', 'Elastoplastic material model');
model.material('mat1').propertyGroup('ElastoplasticModel').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('Ludwik', 'Ludwik');
model.material('mat1').propertyGroup('Ludwik').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('JohnsonCook', 'Johnson-Cook');
model.material('mat1').propertyGroup.create('Swift', 'Swift');
model.material('mat1').propertyGroup.create('Voce', 'Voce');
model.material('mat1').propertyGroup('Voce').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('HockettSherby', 'Hockett-Sherby');
model.material('mat1').propertyGroup('HockettSherby').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('ArmstrongFrederick', 'Armstrong-Frederick');
model.material('mat1').propertyGroup('ArmstrongFrederick').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('Norton', 'Norton');
model.material('mat1').propertyGroup.create('Garofalo', 'Garofalo (hyperbolic sine)');
model.material('mat1').propertyGroup.create('ChabocheViscoplasticity', 'Chaboche viscoplasticity');
model.material('mat1').label('Structural steel');
model.material('mat1').set('family', 'custom');
model.material('mat1').set('customspecular', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat1').set('customdiffuse', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat1').set('customambient', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat1').set('noise', true);
model.material('mat1').set('fresnel', 0.9);
model.material('mat1').set('roughness', 0.3);
model.material('mat1').set('metallic', 0);
model.material('mat1').set('pearl', 0);
model.material('mat1').set('diffusewrap', 0);
model.material('mat1').set('clearcoat', 0);
model.material('mat1').set('reflectance', 0);
model.material('mat1').propertyGroup('def').set('lossfactor', '0.02');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('heatcapacity', '475[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]'});
model.material('mat1').propertyGroup('def').set('density', '7850[kg/m^3]');
model.material('mat1').propertyGroup('Enu').func('int1').set('funcname', 'E');
model.material('mat1').propertyGroup('Enu').func('int1').set('table', {'293.15' '200e9'; '793.15' '166.6e9'});
model.material('mat1').propertyGroup('Enu').func('int1').set('extrap', 'linear');
model.material('mat1').propertyGroup('Enu').func('int1').set('fununit', {'Pa'});
model.material('mat1').propertyGroup('Enu').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Enu').func('int2').set('funcname', 'nu');
model.material('mat1').propertyGroup('Enu').func('int2').set('table', {'293.15' '0.30'; '793.15' '0.315'});
model.material('mat1').propertyGroup('Enu').func('int2').set('extrap', 'linear');
model.material('mat1').propertyGroup('Enu').func('int2').set('fununit', {'1'});
model.material('mat1').propertyGroup('Enu').func('int2').set('argunit', {'K'});
model.material('mat1').propertyGroup('Enu').set('E', 'E(T)');
model.material('mat1').propertyGroup('Enu').set('nu', 'nu(T)');
model.material('mat1').propertyGroup('Enu').addInput('temperature');
model.material('mat1').propertyGroup('Murnaghan').set('l', '-3.0e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('m', '-6.2e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('n', '-7.2e11[Pa]');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmags', '350[MPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('Et', '1.045[GPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('Ek', '1.045[GPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmagh', '1.050[GPa]*epe*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').addInput('temperature');
model.material('mat1').propertyGroup('ElastoplasticModel').addInput('effectiveplasticstrain');
model.material('mat1').propertyGroup('Ludwik').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('Ludwik').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('Ludwik').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('Ludwik').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Ludwik').set('k_lud', '560[MPa]*a(T)');
model.material('mat1').propertyGroup('Ludwik').set('n_lud', '0.61');
model.material('mat1').propertyGroup('Ludwik').addInput('temperature');
model.material('mat1').propertyGroup('JohnsonCook').set('k_jcook', '560[MPa]');
model.material('mat1').propertyGroup('JohnsonCook').set('n_jcook', '0.61');
model.material('mat1').propertyGroup('JohnsonCook').set('C_jcook', '0.12');
model.material('mat1').propertyGroup('JohnsonCook').set('epet0_jcook', '1[1/s]');
model.material('mat1').propertyGroup('JohnsonCook').set('m_jcook', '0.6');
model.material('mat1').propertyGroup('Swift').set('e0_swi', '0.021');
model.material('mat1').propertyGroup('Swift').set('n_swi', '0.2');
model.material('mat1').propertyGroup('Voce').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('Voce').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('Voce').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('Voce').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Voce').set('sigma_voc', '249[MPa]*a(T)');
model.material('mat1').propertyGroup('Voce').set('beta_voc', '9.3');
model.material('mat1').propertyGroup('Voce').addInput('temperature');
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('HockettSherby').set('sigma_hoc', '684[MPa]*a(T)');
model.material('mat1').propertyGroup('HockettSherby').set('m_hoc', '3.9');
model.material('mat1').propertyGroup('HockettSherby').set('n_hoc', '0.85');
model.material('mat1').propertyGroup('HockettSherby').addInput('temperature');
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('ArmstrongFrederick').set('Ck', '2.070[GPa]*a(T)');
model.material('mat1').propertyGroup('ArmstrongFrederick').set('gammak', '8.0');
model.material('mat1').propertyGroup('ArmstrongFrederick').addInput('temperature');
model.material('mat1').propertyGroup('Norton').set('A_nor', '1.2e-15[1/s]');
model.material('mat1').propertyGroup('Norton').set('sigRef_nor', '1[MPa]');
model.material('mat1').propertyGroup('Norton').set('n_nor', '4.5');
model.material('mat1').propertyGroup('Garofalo').set('A_gar', '1e-6[1/s]');
model.material('mat1').propertyGroup('Garofalo').set('sigRef_gar', '100[MPa]');
model.material('mat1').propertyGroup('Garofalo').set('n_gar', '4.6');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('A_cha', '1');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('sigRef_cha', '490[MPa]');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('n_cha', '9');

model.physics('solid').create('bndl1', 'BoundaryLoad', 2);
model.physics('solid').feature('bndl1').label('Pressure');
model.physics('solid').feature('bndl1').selection.set([21 22 30 33]);
model.physics('solid').feature('bndl1').set('LoadType', 'FollowerPressure');
model.physics('solid').feature('bndl1').set('FollowerPressure', 'pressure');
model.physics('solid').create('bndl2', 'BoundaryLoad', 2);
model.physics('solid').feature('bndl2').label('Bending Moment and Axial Force');
model.physics('solid').feature('bndl2').selection.set([20 35]);
model.physics('solid').feature('bndl2').set('LoadType', 'Resultant');
model.physics('solid').feature('bndl2').set('F', {'0' '0' 'axialForce'});
model.physics('solid').feature('bndl2').set('M', {'0' '-lp*bendingMoment' '0'});
model.physics('solid').feature('bndl2').set('symmetryType', 'Symmetry');
model.physics('solid').feature('bndl2').set('nsym', [0 1 0]);
model.physics('solid').create('pblt1', 'BoltPrestress', -1);
model.physics('solid').feature('pblt1').set('F_pre', 'boltPrestressForce');
model.physics('solid').feature('pblt1').feature('sblt1').selection.named('sel2');
model.physics('solid').feature('pblt1').create('sblt2', 'BoltSelection', 2);
model.physics('solid').feature('pblt1').feature('sblt2').selection.named('sel3');
model.physics('solid').feature('pblt1').create('sblt3', 'BoltSelection', 2);
model.physics('solid').feature('pblt1').feature('sblt3').selection.named('sel4');
model.physics('solid').feature('pblt1').create('sblt4', 'BoltSelection', 2);
model.physics('solid').feature('pblt1').feature('sblt4').selection.named('sel5');
model.physics('solid').feature('pblt1').create('sblt5', 'BoltSelection', 2);
model.physics('solid').feature('pblt1').feature('sblt5').selection.named('sel6');
model.physics('solid').create('cnt1', 'SolidContact', 2);
model.physics('solid').feature('cnt1').set('pairs', {'ap3'});
model.physics('solid').feature('cnt1').set('ContactMethodCtrl', 'AugmentedLagrange');
model.physics('solid').feature('cnt1').set('tunedFor', 'Speed');
model.physics('solid').feature('cnt1').create('fric1', 'Friction', 2);
model.physics('solid').feature('cnt1').feature('fric1').set('mu_fric', 0.15);
model.physics('solid').feature('cnt1').create('stb1', 'ContactStabilization', 2);
model.physics('solid').feature('cnt1').feature('stb1').set('method', 'manual');
model.physics('solid').create('sym1', 'SymmetrySolid', 2);
model.physics('solid').feature('sym1').selection.named('uni1');
model.physics('solid').create('disp1', 'Displacement0', 0);
model.physics('solid').feature('disp1').selection.set([35]);
model.physics('solid').feature('disp1').setIndex('Direction', 'prescribed', 0);
model.physics('solid').create('sl1', 'StressLinearization', -1);
model.physics('solid').feature('sl1').selection('EdgeSelection').set([22]);
model.physics('solid').feature('sl1').selection('RefPointSelection').set([1]);
model.physics('solid').create('sl2', 'StressLinearization', -1);
model.physics('solid').feature('sl2').selection('EdgeSelection').set([28]);
model.physics('solid').feature('sl2').selection('RefPointSelection').set([1]);
model.physics('solid').create('sl3', 'StressLinearization', -1);
model.physics('solid').feature('sl3').selection('EdgeSelection').set([31]);
model.physics('solid').feature('sl3').selection('RefPointSelection').set([1]);
model.physics('solid').create('sl4', 'StressLinearization', -1);
model.physics('solid').feature('sl4').selection('EdgeSelection').set([114]);
model.physics('solid').feature('sl4').selection('RefPointSelection').set([1]);
model.physics('solid').create('sl5', 'StressLinearization', -1);
model.physics('solid').feature('sl5').selection('EdgeSelection').set([106]);
model.physics('solid').feature('sl5').selection('RefPointSelection').set([1]);
model.physics('solid').create('sl6', 'StressLinearization', -1);
model.physics('solid').feature('sl6').selection('EdgeSelection').set([109]);
model.physics('solid').feature('sl6').selection('RefPointSelection').set([1]);
model.physics('solid').create('secf1', 'SectionForces', -1);

model.view('view1').set('renderwireframe', true);

model.physics('solid').feature('secf1').selection('BoundarySelection').set([19 34]);

model.view('view1').set('renderwireframe', false);

model.physics('solid').feature('secf1').set('SymmetryPlane', true);
model.physics('solid').feature('secf1').selection('SymmetrySelection').set([17]);

model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe1').selection.named('geom1_rot3_dom');
model.mesh('mesh1').feature('swe1').selection('sourceface').set([59 63 67 145 149 153]);
model.mesh('mesh1').feature('swe1').create('size1', 'Size');
model.mesh('mesh1').feature('swe1').feature('size1').set('hauto', 3);
model.mesh('mesh1').run('swe1');
model.mesh('mesh1').create('swe2', 'Sweep');
model.mesh('mesh1').feature('swe2').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe2').selection.named('geom1_rot2_dom');
model.mesh('mesh1').feature('swe2').create('size1', 'Size');
model.mesh('mesh1').feature('swe2').feature('size1').set('hauto', 4);
model.mesh('mesh1').feature('swe2').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe2').feature('dis1').set('numelem', 2);
model.mesh('mesh1').run('swe2');
model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.set([10 14 17]);
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([25 27 33]);
model.mesh('mesh1').feature('map1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis2').selection.set([30]);
model.mesh('mesh1').feature('map1').feature('dis2').set('numelem', 20);
model.mesh('mesh1').run('map1');
model.mesh('mesh1').create('swe3', 'Sweep');
model.mesh('mesh1').feature('swe3').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe3').selection.set([2 3 4]);
model.mesh('mesh1').feature('swe3').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe3').feature('dis1').set('numelem', 30);
model.mesh('mesh1').run('swe3');
model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.set([5 41]);
model.mesh('mesh1').feature('ftri1').create('size1', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size1').set('hauto', 2);
model.mesh('mesh1').run('ftri1');
model.mesh('mesh1').create('swe4', 'Sweep');
model.mesh('mesh1').run;
model.mesh('mesh1').create('map2', 'Map');
model.mesh('mesh1').feature('map2').selection.set([1]);
model.mesh('mesh1').feature('map2').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map2').feature('dis1').selection.set([1 2]);
model.mesh('mesh1').feature('map2').feature('dis1').set('numelem', 1);
model.mesh('mesh1').run;

model.study('std1').create('bolt', 'BoltPretension');
model.study('std1').feature.move('bolt', 0);
model.study('std1').feature('bolt').set('useadvanceddisable', true);
model.study('std1').feature('bolt').set('disabledphysics', {'solid/bndl1' 'solid/bndl2'});
model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 'pipeDiameter', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'm', 0);
model.study('std1').feature('stat').setIndex('pname', 'pipeDiameter', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'm', 0);
model.study('std1').feature('stat').setIndex('pname', 'lp', 0);
model.study('std1').feature('stat').setIndex('plistarr', 'range(0.2,0.2,1)', 0);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'bolt');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_solid_pblt1_sblt1_d_pre').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_pblt1_sblt4_d_pre').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_pblt1_sblt5_d_pre').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_pblt1_sblt2_d_pre').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_Tn_ap3').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_pblt1_sblt3_d_pre').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_Tt_ap3').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_pblt1_sblt1_d_pre').set('scaleval', '1e-4');
model.sol('sol1').feature('v1').feature('comp1_solid_pblt1_sblt4_d_pre').set('scaleval', '1e-4');
model.sol('sol1').feature('v1').feature('comp1_solid_pblt1_sblt5_d_pre').set('scaleval', '1e-4');
model.sol('sol1').feature('v1').feature('comp1_solid_pblt1_sblt2_d_pre').set('scaleval', '1e-4');
model.sol('sol1').feature('v1').feature('comp1_solid_Tn_ap3').set('scaleval', '100000000');
model.sol('sol1').feature('v1').feature('comp1_solid_pblt1_sblt3_d_pre').set('scaleval', '1e-4');
model.sol('sol1').feature('v1').feature('comp1_solid_Tt_ap3').set('scaleval', '10000000');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.6833457388717638');
model.sol('sol1').feature('v1').set('control', 'bolt');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('se1', 'Segregated');
model.sol('sol1').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_u' 'comp1_solid_pblt1_sblt1_d_pre' 'comp1_solid_pblt1_sblt2_d_pre' 'comp1_solid_pblt1_sblt3_d_pre' 'comp1_solid_pblt1_sblt4_d_pre' 'comp1_solid_pblt1_sblt5_d_pre'});
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subdtech', 'ddog');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subtermauto', 'itertol');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subiter', 7);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subntolfact', 1);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('s1').feature('d1').set('nliniterrefine', true);
model.sol('sol1').feature('s1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').label('Solid Mechanics');
model.sol('sol1').feature('s1').feature('se1').create('ls1', 'LumpedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ls1').set('segvar', {'comp1_solid_Tn_ap3' 'comp1_solid_Tt_ap3'});
model.sol('sol1').feature('s1').feature('se1').set('maxsegiter', 15);
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'right');
model.sol('sol1').feature('s1').feature('i1').set('rhob', 40);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol1').feature('s1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('mglevels', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('maxcoarsedof', 10000);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'stat');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').feature('comp1_solid_pblt1_sblt1_d_pre').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_solid_pblt1_sblt4_d_pre').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_solid_pblt1_sblt5_d_pre').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_solid_pblt1_sblt2_d_pre').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_solid_Tn_ap3').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_solid_pblt1_sblt3_d_pre').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_solid_Tt_ap3').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_solid_pblt1_sblt1_d_pre').set('scaleval', '1e-4');
model.sol('sol1').feature('v2').feature('comp1_solid_pblt1_sblt4_d_pre').set('scaleval', '1e-4');
model.sol('sol1').feature('v2').feature('comp1_solid_pblt1_sblt5_d_pre').set('scaleval', '1e-4');
model.sol('sol1').feature('v2').feature('comp1_solid_pblt1_sblt2_d_pre').set('scaleval', '1e-4');
model.sol('sol1').feature('v2').feature('comp1_solid_Tn_ap3').set('scaleval', '100000000');
model.sol('sol1').feature('v2').feature('comp1_solid_pblt1_sblt3_d_pre').set('scaleval', '1e-4');
model.sol('sol1').feature('v2').feature('comp1_solid_Tt_ap3').set('scaleval', '10000000');
model.sol('sol1').feature('v2').feature('comp1_u').set('scaleval', '1e-2*0.6833457388717638');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('initsoluse', 'sol2');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'stat');
model.sol('sol1').create('s2', 'Stationary');
model.sol('sol1').feature('s2').create('p1', 'Parametric');
model.sol('sol1').feature('s2').feature.remove('pDef');
model.sol('sol1').feature('s2').feature('p1').set('porder', 'constant');
model.sol('sol1').feature('s2').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s2').set('control', 'stat');
model.sol('sol1').feature('s2').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s2').create('se1', 'Segregated');
model.sol('sol1').feature('s2').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s2').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('segvar', {'comp1_u'});
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('subdtech', 'ddog');
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('subtermauto', 'itertol');
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('subiter', 7);
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('subntolfact', 1);
model.sol('sol1').feature('s2').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('s2').feature('d1').set('nliniterrefine', true);
model.sol('sol1').feature('s2').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol1').feature('s2').feature('se1').feature('ss1').label('Solid Mechanics');
model.sol('sol1').feature('s2').feature('se1').create('ls1', 'LumpedStep');
model.sol('sol1').feature('s2').feature('se1').feature('ls1').set('segvar', {'comp1_solid_Tn_ap3' 'comp1_solid_Tt_ap3'});
model.sol('sol1').feature('s2').feature('se1').set('maxsegiter', 15);
model.sol('sol1').feature('s2').create('i1', 'Iterative');
model.sol('sol1').feature('s2').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s2').feature('i1').set('prefuntype', 'right');
model.sol('sol1').feature('s2').feature('i1').set('rhob', 40);
model.sol('sol1').feature('s2').feature('i1').set('nlinnormuse', true);
model.sol('sol1').feature('s2').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol1').feature('s2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 1);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 1);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').create('mg1', 'Multigrid');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('mg1').set('iter', 2);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('mg1').set('mglevels', 2);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('mg1').set('maxcoarsedof', 10000);
model.sol('sol1').feature('s2').feature.remove('fcDef');
model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-4');
model.sol('sol1').feature('v2').feature('comp1_u').set('scaleval', '1e-4');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 5, 0);
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('vol1', 'Volume');
model.result('pg1').feature('vol1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('vol1').set('threshold', 'manual');
model.result('pg1').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg1').feature('vol1').set('colortable', 'Rainbow');
model.result('pg1').feature('vol1').set('colortabletrans', 'none');
model.result('pg1').feature('vol1').set('colorscalemode', 'linear');
model.result('pg1').feature('vol1').set('resolution', 'custom');
model.result('pg1').feature('vol1').set('refine', 2);
model.result('pg1').feature('vol1').set('colortable', 'Prism');
model.result('pg1').feature('vol1').create('def', 'Deform');
model.result('pg1').feature('vol1').feature('def').set('scaleactive', true);
model.result('pg1').feature('vol1').feature('def').set('scale', '1');
model.result('pg1').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg1').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result('pg1').create('line1', 'Line');
model.result('pg1').feature('line1').set('expr', {'if(isdefined(solid.SImb),solid.SImb,NaN)'});
model.result('pg1').feature('line1').set('threshold', 'manual');
model.result('pg1').feature('line1').set('thresholdvalue', 0.2);
model.result('pg1').feature('line1').set('colortable', 'Rainbow');
model.result('pg1').feature('line1').set('colortabletrans', 'none');
model.result('pg1').feature('line1').set('colorscalemode', 'linear');
model.result('pg1').feature('line1').set('linetype', 'tube');
model.result('pg1').feature('line1').set('tuberadiusscale', 1);
model.result('pg1').feature('line1').set('radiusexpr', '2e-3*0.6833457388717638');
model.result('pg1').feature('line1').create('def', 'Deform');
model.result('pg1').feature('line1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg1').feature('line1').feature('def').set('descr', 'Displacement field');
model.result('pg1').feature('line1').set('inheritplot', 'vol1');
model.result('pg1').feature('line1').set('inheritcolor', false);
model.result('pg1').feature('line1').set('inheritrange', false);
model.result('pg1').feature('line1').set('colortable', 'Traffic');
model.result('pg1').feature('line1').set('descractive', true);
model.result('pg1').feature('line1').set('descr', 'Stress intensity, membrane plus bending');
model.result('pg1').feature('line1').label('Stress Intensity');
model.result('pg1').set('legendpos', 'rightdouble');
model.result.dataset.create('edg1', 'Edge3D');
model.result.dataset('edg1').set('data', 'dset1');
model.result.dataset('edg1').selection.geom('geom1', 1);
model.result.dataset('edg1').selection.set([22]);
model.result.dataset('edg1').selection.inherit(false);
model.result.dataset('edg1').label('Linearization Line (Stress Linearization 1)');
model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').set('data', 'edg1');
model.result('pg2').label('Stress Linearization 1 (solid)');
model.result('pg2').set('defaultPlotID', 'stressLinearizationsolidsl1');
model.result('pg2').set('legendpos', 'middleright');
model.result('pg2').set('data', 'edg1');
model.result('pg2').setIndex('looplevelinput', 'last', 0);
model.result('pg2').create('lngr1', 'LineGraph');
model.result('pg2').feature('lngr1').set('expr', 'comp1.solid.sl1.Slls22');
model.result('pg2').feature('lngr1').label('Computed');
model.result('pg2').feature('lngr1').set('descr', 'Computed');
model.result('pg2').feature('lngr1').set('linestyle', 'cyclereset');
model.result('pg2').feature('lngr1').set('linecolor', 'custom');
model.result('pg2').feature('lngr1').set('legend', true);
model.result('pg2').feature('lngr1').set('autoplotlabel', true);
model.result('pg2').feature('lngr1').set('autosolution', false);
model.result('pg2').feature('lngr1').set('customlinecolor', [0.07058823853731155 0.2235294133424759 0.9529411792755127]);
model.result('pg2').create('lnsg1', 'LineSegments');
model.result('pg2').feature('lnsg1').label('Membrane Stress');
model.result('pg2').feature('lnsg1').setIndex('xexpr', 'comp1.solid.sl1.xs', 0);
model.result('pg2').feature('lnsg1').setIndex('xexpr', 'comp1.solid.sl1.xe', 1);
model.result('pg2').feature('lnsg1').setIndex('yexpr', 'comp1.solid.sl1.ySm22', 0);
model.result('pg2').feature('lnsg1').setIndex('yexpr', 'comp1.solid.sl1.ySm22', 1);
model.result('pg2').feature('lnsg1').set('linestyle', 'cyclereset');
model.result('pg2').feature('lnsg1').set('linecolor', 'custom');
model.result('pg2').feature('lnsg1').set('legend', true);
model.result('pg2').feature('lnsg1').set('autoplotlabel', true);
model.result('pg2').feature('lnsg1').set('autosolution', false);
model.result('pg2').feature('lnsg1').set('customlinecolor', [0.1568627506494522 0.7254902124404907 0.24313725531101227]);
model.result('pg2').create('lnsg2', 'LineSegments');
model.result('pg2').feature('lnsg2').label('Membrane Plus Bending Stress');
model.result('pg2').feature('lnsg2').setIndex('xexpr', 'comp1.solid.sl1.xs ', 0);
model.result('pg2').feature('lnsg2').setIndex('xexpr', 'comp1.solid.sl1.xe ', 1);
model.result('pg2').feature('lnsg2').setIndex('yexpr', 'comp1.solid.sl1.ySmbs22', 0);
model.result('pg2').feature('lnsg2').setIndex('yexpr', 'comp1.solid.sl1.ySmbe22', 1);
model.result('pg2').feature('lnsg2').set('linestyle', 'cyclereset');
model.result('pg2').feature('lnsg2').set('linecolor', 'custom');
model.result('pg2').feature('lnsg2').set('legend', true);
model.result('pg2').feature('lnsg2').set('autoplotlabel', true);
model.result('pg2').feature('lnsg2').set('autosolution', false);
model.result('pg2').feature('lnsg2').set('customlinecolor', [0.8235294222831726 0.019607843831181526 0.019607843831181526]);
model.result.dataset.create('edg2', 'Edge3D');
model.result.dataset('edg2').set('data', 'dset1');
model.result.dataset('edg2').selection.geom('geom1', 1);
model.result.dataset('edg2').selection.set([28]);
model.result.dataset('edg2').selection.inherit(false);
model.result.dataset('edg2').label('Linearization Line (Stress Linearization 2)');
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').set('data', 'edg2');
model.result('pg3').label('Stress Linearization 2 (solid)');
model.result('pg3').set('defaultPlotID', 'stressLinearizationsolidsl2');
model.result('pg3').set('legendpos', 'middleright');
model.result('pg3').set('data', 'edg2');
model.result('pg3').setIndex('looplevelinput', 'last', 0);
model.result('pg3').create('lngr1', 'LineGraph');
model.result('pg3').feature('lngr1').set('expr', 'comp1.solid.sl2.Slls22');
model.result('pg3').feature('lngr1').label('Computed');
model.result('pg3').feature('lngr1').set('descr', 'Computed');
model.result('pg3').feature('lngr1').set('linestyle', 'cyclereset');
model.result('pg3').feature('lngr1').set('linecolor', 'custom');
model.result('pg3').feature('lngr1').set('legend', true);
model.result('pg3').feature('lngr1').set('autoplotlabel', true);
model.result('pg3').feature('lngr1').set('autosolution', false);
model.result('pg3').feature('lngr1').set('customlinecolor', [0.07058823853731155 0.2235294133424759 0.9529411792755127]);
model.result('pg3').create('lnsg1', 'LineSegments');
model.result('pg3').feature('lnsg1').label('Membrane Stress');
model.result('pg3').feature('lnsg1').setIndex('xexpr', 'comp1.solid.sl2.xs', 0);
model.result('pg3').feature('lnsg1').setIndex('xexpr', 'comp1.solid.sl2.xe', 1);
model.result('pg3').feature('lnsg1').setIndex('yexpr', 'comp1.solid.sl2.ySm22', 0);
model.result('pg3').feature('lnsg1').setIndex('yexpr', 'comp1.solid.sl2.ySm22', 1);
model.result('pg3').feature('lnsg1').set('linestyle', 'cyclereset');
model.result('pg3').feature('lnsg1').set('linecolor', 'custom');
model.result('pg3').feature('lnsg1').set('legend', true);
model.result('pg3').feature('lnsg1').set('autoplotlabel', true);
model.result('pg3').feature('lnsg1').set('autosolution', false);
model.result('pg3').feature('lnsg1').set('customlinecolor', [0.1568627506494522 0.7254902124404907 0.24313725531101227]);
model.result('pg3').create('lnsg2', 'LineSegments');
model.result('pg3').feature('lnsg2').label('Membrane Plus Bending Stress');
model.result('pg3').feature('lnsg2').setIndex('xexpr', 'comp1.solid.sl2.xs ', 0);
model.result('pg3').feature('lnsg2').setIndex('xexpr', 'comp1.solid.sl2.xe ', 1);
model.result('pg3').feature('lnsg2').setIndex('yexpr', 'comp1.solid.sl2.ySmbs22', 0);
model.result('pg3').feature('lnsg2').setIndex('yexpr', 'comp1.solid.sl2.ySmbe22', 1);
model.result('pg3').feature('lnsg2').set('linestyle', 'cyclereset');
model.result('pg3').feature('lnsg2').set('linecolor', 'custom');
model.result('pg3').feature('lnsg2').set('legend', true);
model.result('pg3').feature('lnsg2').set('autoplotlabel', true);
model.result('pg3').feature('lnsg2').set('autosolution', false);
model.result('pg3').feature('lnsg2').set('customlinecolor', [0.8235294222831726 0.019607843831181526 0.019607843831181526]);
model.result.dataset.create('edg3', 'Edge3D');
model.result.dataset('edg3').set('data', 'dset1');
model.result.dataset('edg3').selection.geom('geom1', 1);
model.result.dataset('edg3').selection.set([31]);
model.result.dataset('edg3').selection.inherit(false);
model.result.dataset('edg3').label('Linearization Line (Stress Linearization 3)');
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').set('data', 'edg3');
model.result('pg4').label('Stress Linearization 3 (solid)');
model.result('pg4').set('defaultPlotID', 'stressLinearizationsolidsl3');
model.result('pg4').set('legendpos', 'middleright');
model.result('pg4').set('data', 'edg3');
model.result('pg4').setIndex('looplevelinput', 'last', 0);
model.result('pg4').create('lngr1', 'LineGraph');
model.result('pg4').feature('lngr1').set('expr', 'comp1.solid.sl3.Slls22');
model.result('pg4').feature('lngr1').label('Computed');
model.result('pg4').feature('lngr1').set('descr', 'Computed');
model.result('pg4').feature('lngr1').set('linestyle', 'cyclereset');
model.result('pg4').feature('lngr1').set('linecolor', 'custom');
model.result('pg4').feature('lngr1').set('legend', true);
model.result('pg4').feature('lngr1').set('autoplotlabel', true);
model.result('pg4').feature('lngr1').set('autosolution', false);
model.result('pg4').feature('lngr1').set('customlinecolor', [0.07058823853731155 0.2235294133424759 0.9529411792755127]);
model.result('pg4').create('lnsg1', 'LineSegments');
model.result('pg4').feature('lnsg1').label('Membrane Stress');
model.result('pg4').feature('lnsg1').setIndex('xexpr', 'comp1.solid.sl3.xs', 0);
model.result('pg4').feature('lnsg1').setIndex('xexpr', 'comp1.solid.sl3.xe', 1);
model.result('pg4').feature('lnsg1').setIndex('yexpr', 'comp1.solid.sl3.ySm22', 0);
model.result('pg4').feature('lnsg1').setIndex('yexpr', 'comp1.solid.sl3.ySm22', 1);
model.result('pg4').feature('lnsg1').set('linestyle', 'cyclereset');
model.result('pg4').feature('lnsg1').set('linecolor', 'custom');
model.result('pg4').feature('lnsg1').set('legend', true);
model.result('pg4').feature('lnsg1').set('autoplotlabel', true);
model.result('pg4').feature('lnsg1').set('autosolution', false);
model.result('pg4').feature('lnsg1').set('customlinecolor', [0.1568627506494522 0.7254902124404907 0.24313725531101227]);
model.result('pg4').create('lnsg2', 'LineSegments');
model.result('pg4').feature('lnsg2').label('Membrane Plus Bending Stress');
model.result('pg4').feature('lnsg2').setIndex('xexpr', 'comp1.solid.sl3.xs ', 0);
model.result('pg4').feature('lnsg2').setIndex('xexpr', 'comp1.solid.sl3.xe ', 1);
model.result('pg4').feature('lnsg2').setIndex('yexpr', 'comp1.solid.sl3.ySmbs22', 0);
model.result('pg4').feature('lnsg2').setIndex('yexpr', 'comp1.solid.sl3.ySmbe22', 1);
model.result('pg4').feature('lnsg2').set('linestyle', 'cyclereset');
model.result('pg4').feature('lnsg2').set('linecolor', 'custom');
model.result('pg4').feature('lnsg2').set('legend', true);
model.result('pg4').feature('lnsg2').set('autoplotlabel', true);
model.result('pg4').feature('lnsg2').set('autosolution', false);
model.result('pg4').feature('lnsg2').set('customlinecolor', [0.8235294222831726 0.019607843831181526 0.019607843831181526]);
model.result.dataset.create('edg4', 'Edge3D');
model.result.dataset('edg4').set('data', 'dset1');
model.result.dataset('edg4').selection.geom('geom1', 1);
model.result.dataset('edg4').selection.set([114]);
model.result.dataset('edg4').selection.inherit(false);
model.result.dataset('edg4').label('Linearization Line (Stress Linearization 4)');
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').set('data', 'edg4');
model.result('pg5').label('Stress Linearization 4 (solid)');
model.result('pg5').set('defaultPlotID', 'stressLinearizationsolidsl4');
model.result('pg5').set('legendpos', 'middleright');
model.result('pg5').set('data', 'edg4');
model.result('pg5').setIndex('looplevelinput', 'last', 0);
model.result('pg5').create('lngr1', 'LineGraph');
model.result('pg5').feature('lngr1').set('expr', 'comp1.solid.sl4.Slls22');
model.result('pg5').feature('lngr1').label('Computed');
model.result('pg5').feature('lngr1').set('descr', 'Computed');
model.result('pg5').feature('lngr1').set('linestyle', 'cyclereset');
model.result('pg5').feature('lngr1').set('linecolor', 'custom');
model.result('pg5').feature('lngr1').set('legend', true);
model.result('pg5').feature('lngr1').set('autoplotlabel', true);
model.result('pg5').feature('lngr1').set('autosolution', false);
model.result('pg5').feature('lngr1').set('customlinecolor', [0.07058823853731155 0.2235294133424759 0.9529411792755127]);
model.result('pg5').create('lnsg1', 'LineSegments');
model.result('pg5').feature('lnsg1').label('Membrane Stress');
model.result('pg5').feature('lnsg1').setIndex('xexpr', 'comp1.solid.sl4.xs', 0);
model.result('pg5').feature('lnsg1').setIndex('xexpr', 'comp1.solid.sl4.xe', 1);
model.result('pg5').feature('lnsg1').setIndex('yexpr', 'comp1.solid.sl4.ySm22', 0);
model.result('pg5').feature('lnsg1').setIndex('yexpr', 'comp1.solid.sl4.ySm22', 1);
model.result('pg5').feature('lnsg1').set('linestyle', 'cyclereset');
model.result('pg5').feature('lnsg1').set('linecolor', 'custom');
model.result('pg5').feature('lnsg1').set('legend', true);
model.result('pg5').feature('lnsg1').set('autoplotlabel', true);
model.result('pg5').feature('lnsg1').set('autosolution', false);
model.result('pg5').feature('lnsg1').set('customlinecolor', [0.1568627506494522 0.7254902124404907 0.24313725531101227]);
model.result('pg5').create('lnsg2', 'LineSegments');
model.result('pg5').feature('lnsg2').label('Membrane Plus Bending Stress');
model.result('pg5').feature('lnsg2').setIndex('xexpr', 'comp1.solid.sl4.xs ', 0);
model.result('pg5').feature('lnsg2').setIndex('xexpr', 'comp1.solid.sl4.xe ', 1);
model.result('pg5').feature('lnsg2').setIndex('yexpr', 'comp1.solid.sl4.ySmbs22', 0);
model.result('pg5').feature('lnsg2').setIndex('yexpr', 'comp1.solid.sl4.ySmbe22', 1);
model.result('pg5').feature('lnsg2').set('linestyle', 'cyclereset');
model.result('pg5').feature('lnsg2').set('linecolor', 'custom');
model.result('pg5').feature('lnsg2').set('legend', true);
model.result('pg5').feature('lnsg2').set('autoplotlabel', true);
model.result('pg5').feature('lnsg2').set('autosolution', false);
model.result('pg5').feature('lnsg2').set('customlinecolor', [0.8235294222831726 0.019607843831181526 0.019607843831181526]);
model.result.dataset.create('edg5', 'Edge3D');
model.result.dataset('edg5').set('data', 'dset1');
model.result.dataset('edg5').selection.geom('geom1', 1);
model.result.dataset('edg5').selection.set([106]);
model.result.dataset('edg5').selection.inherit(false);
model.result.dataset('edg5').label('Linearization Line (Stress Linearization 5)');
model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').set('data', 'edg5');
model.result('pg6').label('Stress Linearization 5 (solid)');
model.result('pg6').set('defaultPlotID', 'stressLinearizationsolidsl5');
model.result('pg6').set('legendpos', 'middleright');
model.result('pg6').set('data', 'edg5');
model.result('pg6').setIndex('looplevelinput', 'last', 0);
model.result('pg6').create('lngr1', 'LineGraph');
model.result('pg6').feature('lngr1').set('expr', 'comp1.solid.sl5.Slls22');
model.result('pg6').feature('lngr1').label('Computed');
model.result('pg6').feature('lngr1').set('descr', 'Computed');
model.result('pg6').feature('lngr1').set('linestyle', 'cyclereset');
model.result('pg6').feature('lngr1').set('linecolor', 'custom');
model.result('pg6').feature('lngr1').set('legend', true);
model.result('pg6').feature('lngr1').set('autoplotlabel', true);
model.result('pg6').feature('lngr1').set('autosolution', false);
model.result('pg6').feature('lngr1').set('customlinecolor', [0.07058823853731155 0.2235294133424759 0.9529411792755127]);
model.result('pg6').create('lnsg1', 'LineSegments');
model.result('pg6').feature('lnsg1').label('Membrane Stress');
model.result('pg6').feature('lnsg1').setIndex('xexpr', 'comp1.solid.sl5.xs', 0);
model.result('pg6').feature('lnsg1').setIndex('xexpr', 'comp1.solid.sl5.xe', 1);
model.result('pg6').feature('lnsg1').setIndex('yexpr', 'comp1.solid.sl5.ySm22', 0);
model.result('pg6').feature('lnsg1').setIndex('yexpr', 'comp1.solid.sl5.ySm22', 1);
model.result('pg6').feature('lnsg1').set('linestyle', 'cyclereset');
model.result('pg6').feature('lnsg1').set('linecolor', 'custom');
model.result('pg6').feature('lnsg1').set('legend', true);
model.result('pg6').feature('lnsg1').set('autoplotlabel', true);
model.result('pg6').feature('lnsg1').set('autosolution', false);
model.result('pg6').feature('lnsg1').set('customlinecolor', [0.1568627506494522 0.7254902124404907 0.24313725531101227]);
model.result('pg6').create('lnsg2', 'LineSegments');
model.result('pg6').feature('lnsg2').label('Membrane Plus Bending Stress');
model.result('pg6').feature('lnsg2').setIndex('xexpr', 'comp1.solid.sl5.xs ', 0);
model.result('pg6').feature('lnsg2').setIndex('xexpr', 'comp1.solid.sl5.xe ', 1);
model.result('pg6').feature('lnsg2').setIndex('yexpr', 'comp1.solid.sl5.ySmbs22', 0);
model.result('pg6').feature('lnsg2').setIndex('yexpr', 'comp1.solid.sl5.ySmbe22', 1);
model.result('pg6').feature('lnsg2').set('linestyle', 'cyclereset');
model.result('pg6').feature('lnsg2').set('linecolor', 'custom');
model.result('pg6').feature('lnsg2').set('legend', true);
model.result('pg6').feature('lnsg2').set('autoplotlabel', true);
model.result('pg6').feature('lnsg2').set('autosolution', false);
model.result('pg6').feature('lnsg2').set('customlinecolor', [0.8235294222831726 0.019607843831181526 0.019607843831181526]);
model.result.dataset.create('edg6', 'Edge3D');
model.result.dataset('edg6').set('data', 'dset1');
model.result.dataset('edg6').selection.geom('geom1', 1);
model.result.dataset('edg6').selection.set([109]);
model.result.dataset('edg6').selection.inherit(false);
model.result.dataset('edg6').label('Linearization Line (Stress Linearization 6)');
model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').set('data', 'edg6');
model.result('pg7').label('Stress Linearization 6 (solid)');
model.result('pg7').set('defaultPlotID', 'stressLinearizationsolidsl6');
model.result('pg7').set('legendpos', 'middleright');
model.result('pg7').set('data', 'edg6');
model.result('pg7').setIndex('looplevelinput', 'last', 0);
model.result('pg7').create('lngr1', 'LineGraph');
model.result('pg7').feature('lngr1').set('expr', 'comp1.solid.sl6.Slls22');
model.result('pg7').feature('lngr1').label('Computed');
model.result('pg7').feature('lngr1').set('descr', 'Computed');
model.result('pg7').feature('lngr1').set('linestyle', 'cyclereset');
model.result('pg7').feature('lngr1').set('linecolor', 'custom');
model.result('pg7').feature('lngr1').set('legend', true);
model.result('pg7').feature('lngr1').set('autoplotlabel', true);
model.result('pg7').feature('lngr1').set('autosolution', false);
model.result('pg7').feature('lngr1').set('customlinecolor', [0.07058823853731155 0.2235294133424759 0.9529411792755127]);
model.result('pg7').create('lnsg1', 'LineSegments');
model.result('pg7').feature('lnsg1').label('Membrane Stress');
model.result('pg7').feature('lnsg1').setIndex('xexpr', 'comp1.solid.sl6.xs', 0);
model.result('pg7').feature('lnsg1').setIndex('xexpr', 'comp1.solid.sl6.xe', 1);
model.result('pg7').feature('lnsg1').setIndex('yexpr', 'comp1.solid.sl6.ySm22', 0);
model.result('pg7').feature('lnsg1').setIndex('yexpr', 'comp1.solid.sl6.ySm22', 1);
model.result('pg7').feature('lnsg1').set('linestyle', 'cyclereset');
model.result('pg7').feature('lnsg1').set('linecolor', 'custom');
model.result('pg7').feature('lnsg1').set('legend', true);
model.result('pg7').feature('lnsg1').set('autoplotlabel', true);
model.result('pg7').feature('lnsg1').set('autosolution', false);
model.result('pg7').feature('lnsg1').set('customlinecolor', [0.1568627506494522 0.7254902124404907 0.24313725531101227]);
model.result('pg7').create('lnsg2', 'LineSegments');
model.result('pg7').feature('lnsg2').label('Membrane Plus Bending Stress');
model.result('pg7').feature('lnsg2').setIndex('xexpr', 'comp1.solid.sl6.xs ', 0);
model.result('pg7').feature('lnsg2').setIndex('xexpr', 'comp1.solid.sl6.xe ', 1);
model.result('pg7').feature('lnsg2').setIndex('yexpr', 'comp1.solid.sl6.ySmbs22', 0);
model.result('pg7').feature('lnsg2').setIndex('yexpr', 'comp1.solid.sl6.ySmbe22', 1);
model.result('pg7').feature('lnsg2').set('linestyle', 'cyclereset');
model.result('pg7').feature('lnsg2').set('linecolor', 'custom');
model.result('pg7').feature('lnsg2').set('legend', true);
model.result('pg7').feature('lnsg2').set('autoplotlabel', true);
model.result('pg7').feature('lnsg2').set('autosolution', false);
model.result('pg7').feature('lnsg2').set('customlinecolor', [0.8235294222831726 0.019607843831181526 0.019607843831181526]);
model.result.evaluationGroup.create('eg1', 'EvaluationGroup');
model.result.evaluationGroup('eg1').set('data', 'dset1');
model.result.evaluationGroup('eg1').label('Bolt Forces: Bolt Pretension 1 (Study 1) (solid)');
model.result.evaluationGroup('eg1').set('defaultPlotID', 'boltForcesTablepblt1');
model.result.evaluationGroup('eg1').set('transpose', true);
model.result.evaluationGroup('eg1').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg1').feature('gev1').label('Bolt_1');
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp1.solid.pblt1.sblt1.F_bolt', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Bolt force', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp1.solid.pblt1.sblt1.F_shear', 1);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Bolt shear force', 1);
model.result.evaluationGroup('eg1').create('gev2', 'EvalGlobal');
model.result.evaluationGroup('eg1').feature('gev2').label('Bolt_2');
model.result.evaluationGroup('eg1').feature('gev2').setIndex('expr', 'comp1.solid.pblt1.sblt2.F_bolt', 0);
model.result.evaluationGroup('eg1').feature('gev2').setIndex('descr', 'Bolt force', 0);
model.result.evaluationGroup('eg1').feature('gev2').setIndex('expr', 'comp1.solid.pblt1.sblt2.F_shear', 1);
model.result.evaluationGroup('eg1').feature('gev2').setIndex('descr', 'Bolt shear force', 1);
model.result.evaluationGroup('eg1').create('gev3', 'EvalGlobal');
model.result.evaluationGroup('eg1').feature('gev3').label('Bolt_3');
model.result.evaluationGroup('eg1').feature('gev3').setIndex('expr', 'comp1.solid.pblt1.sblt3.F_bolt', 0);
model.result.evaluationGroup('eg1').feature('gev3').setIndex('descr', 'Bolt force', 0);
model.result.evaluationGroup('eg1').feature('gev3').setIndex('expr', 'comp1.solid.pblt1.sblt3.F_shear', 1);
model.result.evaluationGroup('eg1').feature('gev3').setIndex('descr', 'Bolt shear force', 1);
model.result.evaluationGroup('eg1').create('gev4', 'EvalGlobal');
model.result.evaluationGroup('eg1').feature('gev4').label('Bolt_4');
model.result.evaluationGroup('eg1').feature('gev4').setIndex('expr', 'comp1.solid.pblt1.sblt4.F_bolt', 0);
model.result.evaluationGroup('eg1').feature('gev4').setIndex('descr', 'Bolt force', 0);
model.result.evaluationGroup('eg1').feature('gev4').setIndex('expr', 'comp1.solid.pblt1.sblt4.F_shear', 1);
model.result.evaluationGroup('eg1').feature('gev4').setIndex('descr', 'Bolt shear force', 1);
model.result.evaluationGroup('eg1').create('gev5', 'EvalGlobal');
model.result.evaluationGroup('eg1').feature('gev5').label('Bolt_5');
model.result.evaluationGroup('eg1').feature('gev5').setIndex('expr', 'comp1.solid.pblt1.sblt5.F_bolt', 0);
model.result.evaluationGroup('eg1').feature('gev5').setIndex('descr', 'Bolt force', 0);
model.result.evaluationGroup('eg1').feature('gev5').setIndex('expr', 'comp1.solid.pblt1.sblt5.F_shear', 1);
model.result.evaluationGroup('eg1').feature('gev5').setIndex('descr', 'Bolt shear force', 1);
model.result.evaluationGroup('eg1').run;
model.result.evaluationGroup.create('eg2', 'EvaluationGroup');
model.result.evaluationGroup('eg2').label('Section Forces (secf1)');
model.result.evaluationGroup('eg2').set('showlooplevelinput', {'off' 'off' 'off'});
model.result.evaluationGroup('eg2').set('transpose', true);
model.result.evaluationGroup('eg2').set('data', 'dset1');
model.result.evaluationGroup('eg2').set('defaultPlotID', 'sectionForcesTable|secf1');
model.result.evaluationGroup('eg2').feature.create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg2').feature('gev1').label('Section Forces');
model.result.evaluationGroup('eg2').feature('gev1').set('showsolutionparams', 'on');
model.result.evaluationGroup('eg2').feature('gev1').set('expr', {'solid.secf1.N' 'solid.secf1.T1' 'solid.secf1.T2' 'solid.secf1.Mt' 'solid.secf1.M1' 'solid.secf1.M2'});
model.result.evaluationGroup('eg2').feature('gev1').set('showsolutionparams', 'on');
model.result.evaluationGroup('eg2').feature('gev1').set('data', 'parent');
model.result('pg1').run;
model.result('pg1').label('Stress, Bolt Pretension');
model.result('pg1').set('data', 'dset2');
model.result('pg1').run;
model.result('pg1').feature('vol1').set('expr', 'solid.sGpzz');
model.result('pg1').feature('vol1').set('descr', 'Stress tensor, zz-component');
model.result('pg1').feature('vol1').set('rangecoloractive', true);
model.result('pg1').feature('vol1').set('rangecolormin', '-3e8');
model.result('pg1').feature('vol1').set('rangecolormax', '5e8');
model.result('pg1').run;
model.result('pg1').feature('vol1').feature('def').set('scale', 20);
model.result('pg1').run;

model.view.create('view6', 'geom1');
model.view('view6').model('comp1');
model.view('view6').camera.set('zoomanglefull', 2.5);
model.view('view6').camera.setIndex('position', 2.25, 0);
model.view('view6').camera.setIndex('position', -2.21, 1);
model.view('view6').camera.set('position', [2.25 -2.21 1.68]);
model.view('view6').camera.setIndex('target', 0.14, 1);
model.view('view6').camera.setIndex('target', 0.14, 2);
model.view('view6').camera.setIndex('up', 0, 0);
model.view('view6').camera.setIndex('up', 0.55, 1);
model.view('view6').camera.set('up', [0 0.55 0.84]);
model.view('view6').camera.setIndex('rotationpoint', 0, 1);
model.view('view6').camera.set('rotationpoint', [0 0 0.05]);
model.view('view6').camera.setIndex('viewoffset', '-1.0', 0);
model.view('view6').camera.set('viewoffset', {'-1.0' '1.9'});

model.result('pg1').run;
model.result.configuration.create('gsty1', 'GraphStyle');
model.result.configuration('gsty1').set('linewidth', 2);
model.result.configuration('gsty1').set('autosolution', false);
model.result.configuration('gsty1').set('autoplotlabel', true);
model.result.configuration('gsty1').set('autopoint', false);
model.result('pg2').run;
model.result('pg2').set('titletype', 'manual');
model.result('pg2').set('title', 'Line Graph: Stress tensor, linearization line system, 33-component (N/m<sup>2</sup>)');
model.result('pg2').set('xlabelactive', true);
model.result('pg2').set('ylabelactive', true);
model.result('pg2').set('ylabel', 'Stress (N/m<sup>2</sup>)');
model.result('pg2').set('styleconfig', 'gsty1');
model.result('pg2').set('legendpos', 'upperleft');
model.result('pg2').feature('lngr1').set('expr', 'comp1.solid.sl1.Slls33');
model.result('pg3').feature('lngr1').set('expr', 'comp1.solid.sl2.Slls33');
model.result('pg4').feature('lngr1').set('expr', 'comp1.solid.sl3.Slls33');
model.result('pg5').feature('lngr1').set('expr', 'comp1.solid.sl4.Slls33');
model.result('pg6').feature('lngr1').set('expr', 'comp1.solid.sl5.Slls33');
model.result('pg7').feature('lngr1').set('expr', 'comp1.solid.sl6.Slls33');
model.result('pg2').run;
model.result('pg2').feature('lnsg1').setIndex('yexpr', 'comp1.solid.sl1.ySm33', 0);
model.result('pg2').feature('lnsg1').setIndex('yexpr', 'comp1.solid.sl1.ySm33', 1);
model.result('pg3').feature('lnsg1').setIndex('yexpr', 'comp1.solid.sl2.ySm33', 0);
model.result('pg3').feature('lnsg1').setIndex('yexpr', 'comp1.solid.sl2.ySm33', 1);
model.result('pg4').feature('lnsg1').setIndex('yexpr', 'comp1.solid.sl3.ySm33', 0);
model.result('pg4').feature('lnsg1').setIndex('yexpr', 'comp1.solid.sl3.ySm33', 1);
model.result('pg5').feature('lnsg1').setIndex('yexpr', 'comp1.solid.sl4.ySm33', 0);
model.result('pg5').feature('lnsg1').setIndex('yexpr', 'comp1.solid.sl4.ySm33', 1);
model.result('pg6').feature('lnsg1').setIndex('yexpr', 'comp1.solid.sl5.ySm33', 0);
model.result('pg6').feature('lnsg1').setIndex('yexpr', 'comp1.solid.sl5.ySm33', 1);
model.result('pg7').feature('lnsg1').setIndex('yexpr', 'comp1.solid.sl6.ySm33', 0);
model.result('pg7').feature('lnsg1').setIndex('yexpr', 'comp1.solid.sl6.ySm33', 1);
model.result('pg2').run;
model.result('pg2').feature('lnsg2').setIndex('yexpr', 'comp1.solid.sl1.ySmbs33', 0);
model.result('pg3').feature('lnsg2').setIndex('yexpr', 'comp1.solid.sl2.ySmbs33', 0);
model.result('pg4').feature('lnsg2').setIndex('yexpr', 'comp1.solid.sl3.ySmbs33', 0);
model.result('pg5').feature('lnsg2').setIndex('yexpr', 'comp1.solid.sl4.ySmbs33', 0);
model.result('pg6').feature('lnsg2').setIndex('yexpr', 'comp1.solid.sl5.ySmbs33', 0);
model.result('pg7').feature('lnsg2').setIndex('yexpr', 'comp1.solid.sl6.ySmbs33', 0);
model.result('pg2').run;
model.result('pg2').feature('lnsg2').setIndex('yexpr', 'comp1.solid.sl1.ySmbe33', 1);
model.result('pg3').feature('lnsg2').setIndex('yexpr', 'comp1.solid.sl2.ySmbe33', 1);
model.result('pg4').feature('lnsg2').setIndex('yexpr', 'comp1.solid.sl3.ySmbe33', 1);
model.result('pg5').feature('lnsg2').setIndex('yexpr', 'comp1.solid.sl4.ySmbe33', 1);
model.result('pg6').feature('lnsg2').setIndex('yexpr', 'comp1.solid.sl5.ySmbe33', 1);
model.result('pg7').feature('lnsg2').setIndex('yexpr', 'comp1.solid.sl6.ySmbe33', 1);
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').run;
model.result('pg3').run;
model.result('pg3').set('styleconfig', 'gsty1');
model.result('pg3').set('legendpos', 'upperleft');
model.result('pg3').run;
model.result('pg4').run;
model.result('pg4').set('styleconfig', 'gsty1');
model.result('pg4').set('legendpos', 'upperleft');
model.result('pg4').run;
model.result('pg5').run;
model.result('pg5').set('styleconfig', 'gsty1');
model.result('pg5').set('legendpos', 'upperleft');
model.result('pg5').run;
model.result('pg6').run;
model.result('pg6').set('styleconfig', 'gsty1');
model.result('pg6').set('legendpos', 'upperleft');
model.result('pg6').run;
model.result('pg7').run;
model.result('pg7').set('styleconfig', 'gsty1');
model.result('pg7').set('legendpos', 'upperleft');
model.result('pg7').run;
model.result.evaluationGroup('eg2').run;
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').label('Section Forces (secf1)');
model.result('pg8').set('titletype', 'label');
model.result('pg8').set('data', 'dset1');
model.result('pg8').setIndex('looplevel', 5, 0);
model.result('pg8').set('defaultPlotID', 'sectionForces');
model.result('pg8').feature.create('pttraj1', 'PointTrajectories');
model.result('pg8').feature('pttraj1').label('Axial Force');
model.result('pg8').feature('pttraj1').set('expr', {'solid.secf1.xcX' 'solid.secf1.xcY' 'solid.secf1.xcZ'});
model.result('pg8').feature('pttraj1').set('titletype', 'none');
model.result('pg8').feature('pttraj1').set('linetype', 'none');
model.result('pg8').feature('pttraj1').set('pointtype', 'arrow');
model.result('pg8').feature('pttraj1').set('arrowexpr', {'solid.secf1.N*solid.secf1.nX' 'solid.secf1.N*solid.secf1.nY' 'solid.secf1.N*solid.secf1.nZ'});
model.result('pg8').feature('pttraj1').set('showsolutionparams', 'on');
model.result('pg8').feature('pttraj1').set('data', 'parent');
model.result('pg8').feature.create('pttraj2', 'PointTrajectories');
model.result('pg8').feature('pttraj2').label('Shear Force Along 1-axis');
model.result('pg8').feature('pttraj2').set('expr', {'solid.secf1.xcX' 'solid.secf1.xcY' 'solid.secf1.xcZ'});
model.result('pg8').feature('pttraj2').set('titletype', 'none');
model.result('pg8').feature('pttraj2').set('linetype', 'none');
model.result('pg8').feature('pttraj2').set('pointtype', 'arrow');
model.result('pg8').feature('pttraj2').set('pointcolor', 'green');
model.result('pg8').feature('pttraj2').set('arrowexpr', {'solid.secf1.T1*solid.secf1.t1X' 'solid.secf1.T1*solid.secf1.t1Y' 'solid.secf1.T1*solid.secf1.t1Z'});
model.result('pg8').feature('pttraj2').set('inheritcolor', false);
model.result('pg8').feature('pttraj2').set('inheritrange', false);
model.result('pg8').feature('pttraj2').set('showsolutionparams', 'on');
model.result('pg8').feature('pttraj2').set('data', 'parent');
model.result('pg8').feature('pttraj2').set('inheritplot', 'pttraj1');
model.result('pg8').feature.create('pttraj3', 'PointTrajectories');
model.result('pg8').feature('pttraj3').label('Shear Force Along 2-axis');
model.result('pg8').feature('pttraj3').set('expr', {'solid.secf1.xcX' 'solid.secf1.xcY' 'solid.secf1.xcZ'});
model.result('pg8').feature('pttraj3').set('titletype', 'none');
model.result('pg8').feature('pttraj3').set('linetype', 'none');
model.result('pg8').feature('pttraj3').set('pointtype', 'arrow');
model.result('pg8').feature('pttraj3').set('pointcolor', 'blue');
model.result('pg8').feature('pttraj3').set('arrowexpr', {'solid.secf1.T2*solid.secf1.t2X' 'solid.secf1.T2*solid.secf1.t2Y' 'solid.secf1.T2*solid.secf1.t2Z'});
model.result('pg8').feature('pttraj3').set('inheritcolor', false);
model.result('pg8').feature('pttraj3').set('inheritrange', false);
model.result('pg8').feature('pttraj3').set('showsolutionparams', 'on');
model.result('pg8').feature('pttraj3').set('data', 'parent');
model.result('pg8').feature('pttraj3').set('inheritplot', 'pttraj1');
model.result('pg8').feature.create('ann1', 'Annotation');
model.result('pg8').feature('ann1').set('text', 'N = eval(solid.secf1.N) \\ T1 = eval(solid.secf1.T1) \\ T2 =  eval(solid.secf1.T2)');
model.result('pg8').feature('ann1').set('latexmarkup', true);
model.result('pg8').feature('ann1').set('level', 'global');
model.result('pg8').feature('ann1').set('posxexpr', 'solid.secf1.xcX');
model.result('pg8').feature('ann1').set('posyexpr', 'solid.secf1.xcY');
model.result('pg8').feature('ann1').set('poszexpr', 'solid.secf1.xcZ');
model.result('pg8').feature('ann1').set('showpoint', false);
model.result('pg8').feature('ann1').set('showpointradius', 'on');
model.result('pg8').feature('ann1').set('backgroundcolor', 'fromtheme');
model.result('pg8').feature('ann1').set('showframe', true);
model.result('pg8').feature('ann1').set('showsolutionparams', 'on');
model.result('pg8').feature('ann1').set('data', 'parent');
model.result('pg8').label('Section Forces (secf1)');
model.result.create('pg9', 'PlotGroup3D');
model.result('pg9').label('Section Moments (secf1)');
model.result('pg9').set('titletype', 'label');
model.result('pg9').set('data', 'dset1');
model.result('pg9').setIndex('looplevel', 5, 0);
model.result('pg9').set('defaultPlotID', 'sectionMoments');
model.result('pg9').feature.create('pttraj1', 'PointTrajectories');
model.result('pg9').feature('pttraj1').label('Twisting Moment');
model.result('pg9').feature('pttraj1').set('expr', {'solid.secf1.xcX' 'solid.secf1.xcY' 'solid.secf1.xcZ'});
model.result('pg9').feature('pttraj1').set('titletype', 'none');
model.result('pg9').feature('pttraj1').set('linetype', 'none');
model.result('pg9').feature('pttraj1').set('pointtype', 'arrow');
model.result('pg9').feature('pttraj1').set('arrowexpr', {'solid.secf1.Mt*solid.secf1.nX' 'solid.secf1.Mt*solid.secf1.nY' 'solid.secf1.Mt*solid.secf1.nZ'});
model.result('pg9').feature('pttraj1').set('arrowtype', 'double');
model.result('pg9').feature('pttraj1').set('showsolutionparams', 'on');
model.result('pg9').feature('pttraj1').set('data', 'parent');
model.result('pg9').feature.create('pttraj2', 'PointTrajectories');
model.result('pg9').feature('pttraj2').label('Bending Moment Around 1-axis');
model.result('pg9').feature('pttraj2').set('expr', {'solid.secf1.xcX' 'solid.secf1.xcY' 'solid.secf1.xcZ'});
model.result('pg9').feature('pttraj2').set('titletype', 'none');
model.result('pg9').feature('pttraj2').set('linetype', 'none');
model.result('pg9').feature('pttraj2').set('pointtype', 'arrow');
model.result('pg9').feature('pttraj2').set('pointcolor', 'green');
model.result('pg9').feature('pttraj2').set('arrowexpr', {'solid.secf1.M1*solid.secf1.t1X' 'solid.secf1.M1*solid.secf1.t1Y' 'solid.secf1.M1*solid.secf1.t1Z'});
model.result('pg9').feature('pttraj2').set('arrowtype', 'double');
model.result('pg9').feature('pttraj2').set('inheritcolor', false);
model.result('pg9').feature('pttraj2').set('inheritrange', false);
model.result('pg9').feature('pttraj2').set('showsolutionparams', 'on');
model.result('pg9').feature('pttraj2').set('data', 'parent');
model.result('pg9').feature('pttraj2').set('inheritplot', 'pttraj1');
model.result('pg9').feature.create('pttraj3', 'PointTrajectories');
model.result('pg9').feature('pttraj3').label('Bending Moment Around 2-axis');
model.result('pg9').feature('pttraj3').set('expr', {'solid.secf1.xcX' 'solid.secf1.xcY' 'solid.secf1.xcZ'});
model.result('pg9').feature('pttraj3').set('titletype', 'none');
model.result('pg9').feature('pttraj3').set('linetype', 'none');
model.result('pg9').feature('pttraj3').set('pointtype', 'arrow');
model.result('pg9').feature('pttraj3').set('pointcolor', 'blue');
model.result('pg9').feature('pttraj3').set('arrowexpr', {'solid.secf1.M2*solid.secf1.t2X' 'solid.secf1.M2*solid.secf1.t2Y' 'solid.secf1.M2*solid.secf1.t2Z'});
model.result('pg9').feature('pttraj3').set('arrowtype', 'double');
model.result('pg9').feature('pttraj3').set('inheritcolor', false);
model.result('pg9').feature('pttraj3').set('inheritrange', false);
model.result('pg9').feature('pttraj3').set('showsolutionparams', 'on');
model.result('pg9').feature('pttraj3').set('data', 'parent');
model.result('pg9').feature('pttraj3').set('inheritplot', 'pttraj1');
model.result('pg9').feature.create('ann1', 'Annotation');
model.result('pg9').feature('ann1').set('text', 'Mt = eval(solid.secf1.Mt) \\ M1 = eval(solid.secf1.M1) \\ M2 =  eval(solid.secf1.M2)');
model.result('pg9').feature('ann1').set('latexmarkup', true);
model.result('pg9').feature('ann1').set('level', 'global');
model.result('pg9').feature('ann1').set('posxexpr', 'solid.secf1.xcX');
model.result('pg9').feature('ann1').set('posyexpr', 'solid.secf1.xcY');
model.result('pg9').feature('ann1').set('poszexpr', 'solid.secf1.xcZ');
model.result('pg9').feature('ann1').set('showpoint', false);
model.result('pg9').feature('ann1').set('showpointradius', 'on');
model.result('pg9').feature('ann1').set('backgroundcolor', 'fromtheme');
model.result('pg9').feature('ann1').set('showframe', true);
model.result('pg9').feature('ann1').set('showsolutionparams', 'on');
model.result('pg9').feature('ann1').set('data', 'parent');
model.result('pg9').label('Section Moments (secf1)');
model.result('pg9').run;
model.result('pg8').run;
model.result('pg9').run;
model.result.create('pg10', 'PlotGroup3D');
model.result('pg10').run;
model.result('pg10').set('edges', false);
model.result('pg10').label('Stress');
model.result('pg10').set('legendpos', 'rightdouble');
model.result('pg10').create('surf1', 'Surface');
model.result('pg10').feature('surf1').set('expr', 'solid.misesGp');
model.result('pg10').feature('surf1').set('rangecoloractive', true);
model.result('pg10').feature('surf1').set('rangecolormax', '4e8');
model.result('pg10').feature('surf1').set('colortable', 'Prism');
model.result('pg10').feature('surf1').create('def1', 'Deform');
model.result('pg10').run;
model.result('pg10').feature('surf1').feature('def1').set('scaleactive', true);
model.result('pg10').feature('surf1').feature('def1').set('scale', 30);
model.result('pg10').run;
model.result('pg10').create('line1', 'Line');
model.result('pg10').feature('line1').set('inheritplot', 'surf1');
model.result('pg10').feature('line1').set('inheritcolor', false);
model.result('pg10').feature('line1').set('inheritrange', false);
model.result('pg10').feature('line1').set('expr', 'solid.SImb');
model.result('pg10').feature('line1').set('descr', 'Stress intensity, membrane plus bending');
model.result('pg10').feature('line1').set('linetype', 'tube');
model.result('pg10').feature('line1').set('tuberadiusscaleactive', true);
model.result('pg10').feature('line1').set('tuberadiusscale', 0.001);
model.result('pg10').feature('line1').set('colortable', 'Traffic');
model.result('pg10').feature('line1').create('def1', 'Deform');
model.result('pg10').run;
model.result('pg10').run;
model.result('pg10').create('surf2', 'Surface');
model.result('pg10').feature('surf2').set('titletype', 'none');
model.result('pg10').feature('surf2').set('coloring', 'uniform');
model.result('pg10').feature('surf2').set('color', 'black');
model.result('pg10').feature('surf2').set('wireframe', true);
model.result('pg10').feature('surf2').set('inheritplot', 'surf1');
model.result('pg10').feature('surf2').set('inheritcolor', false);
model.result('pg10').feature('surf2').set('inheritrange', false);
model.result('pg10').feature('surf2').create('def1', 'Deform');
model.result('pg10').run;
model.result('pg10').run;
model.result.create('pg11', 'PlotGroup1D');
model.result('pg11').run;
model.result('pg11').label('Bolt Force');
model.result('pg11').create('glob1', 'Global');
model.result('pg11').feature('glob1').set('markerpos', 'datapoints');
model.result('pg11').feature('glob1').set('linewidth', 'preference');
model.result('pg11').feature('glob1').set('expr', {'solid.pblt1.sblt1.F_bolt'});
model.result('pg11').feature('glob1').set('descr', {'Bolt force'});
model.result('pg11').feature('glob1').set('unit', {'N'});
model.result('pg11').feature('glob1').setIndex('expr', 'solid.pblt1.sblt1.F_bolt', 0);
model.result('pg11').feature('glob1').setIndex('unit', 'kN', 0);
model.result('pg11').feature('glob1').setIndex('descr', 'Force in Bolt 1', 0);
model.result('pg11').feature('glob1').setIndex('expr', 'solid.pblt1.sblt2.F_bolt', 1);
model.result('pg11').feature('glob1').setIndex('unit', 'kN', 1);
model.result('pg11').feature('glob1').setIndex('descr', 'Force in Bolt 2', 1);
model.result('pg11').feature('glob1').setIndex('expr', 'solid.pblt1.sblt3.F_bolt', 2);
model.result('pg11').feature('glob1').setIndex('unit', 'kN', 2);
model.result('pg11').feature('glob1').setIndex('descr', 'Force in Bolt 3', 2);
model.result('pg11').feature('glob1').setIndex('expr', 'solid.pblt1.sblt4.F_bolt', 3);
model.result('pg11').feature('glob1').setIndex('unit', 'kN', 3);
model.result('pg11').feature('glob1').setIndex('descr', 'Force in Bolt 4', 3);
model.result('pg11').feature('glob1').setIndex('expr', 'solid.pblt1.sblt5.F_bolt', 4);
model.result('pg11').feature('glob1').setIndex('unit', 'kN', 4);
model.result('pg11').feature('glob1').setIndex('descr', 'Force in Bolt 5', 4);
model.result('pg11').feature('glob1').set('legend', false);
model.result('pg11').feature('glob1').set('linewidth', 2);
model.result('pg11').feature('glob1').set('xdata', 'expr');
model.result('pg11').feature('glob1').set('xdataexpr', 'bendingMoment*lp/1000');
model.result('pg11').run;
model.result('pg11').set('xlabelactive', true);
model.result('pg11').set('xlabel', 'Bending moment on tube (kNm)');
model.result('pg11').set('ylabelactive', true);
model.result('pg11').set('ylabel', 'Axial force in bolts (kN)');
model.result('pg11').run;
model.result('pg11').feature('glob1').set('legend', true);
model.result('pg11').run;
model.result('pg11').set('titletype', 'none');
model.result('pg11').set('legendpos', 'upperleft');
model.result.create('pg12', 'PlotGroup1D');
model.result('pg12').run;
model.result('pg12').label('Bolt Stress');
model.result('pg12').create('ptgr1', 'PointGraph');
model.result('pg12').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg12').feature('ptgr1').set('linewidth', 'preference');
model.result('pg12').feature('ptgr1').selection.set([311 328]);
model.result('pg12').feature('ptgr1').set('expr', 'solid.sGpzz');
model.result('pg12').feature('ptgr1').set('descr', 'Stress tensor, zz-component');
model.result('pg12').feature('ptgr1').set('unit', 'MPa');
model.result('pg12').feature('ptgr1').set('descractive', true);
model.result('pg12').feature('ptgr1').set('descr', 'Bolt stress');
model.result('pg12').feature('ptgr1').set('xdata', 'expr');
model.result('pg12').feature('ptgr1').set('xdataexpr', 'bendingMoment*lp');
model.result('pg12').feature('ptgr1').set('xdataunit', 'kN*m');
model.result('pg12').feature('ptgr1').set('linestyle', 'cycle');
model.result('pg12').feature('ptgr1').set('linewidth', 2);
model.result('pg12').feature('ptgr1').set('legend', true);
model.result('pg12').feature('ptgr1').set('legendmethod', 'manual');
model.result('pg12').feature('ptgr1').setIndex('legends', 'Inside', 0);
model.result('pg12').feature('ptgr1').setIndex('legends', 'Outside', 1);
model.result('pg12').run;
model.result('pg12').set('xlabelactive', true);
model.result('pg12').set('xlabel', 'Bending moment on tube (kNm)');
model.result('pg12').set('legendpos', 'upperleft');
model.result.create('pg13', 'PlotGroup3D');
model.result('pg13').run;
model.result('pg13').label('Contact Pressure');
model.result('pg13').set('data', 'dset2');
model.result('pg13').create('surf1', 'Surface');
model.result('pg13').feature('surf1').set('expr', 'solid.dcnt1.Tn');
model.result('pg13').feature('surf1').set('descr', 'Contact pressure');
model.result('pg13').feature('surf1').set('unit', 'MPa');
model.result('pg13').feature('surf1').set('rangecoloractive', true);
model.result('pg13').feature('surf1').set('rangecolormax', 100);
model.result('pg13').run;
model.result('pg13').run;
model.result('pg13').set('data', 'dset1');
model.result('pg13').run;
model.result.create('pg14', 'PlotGroup3D');
model.result('pg14').set('data', 'dset1');
model.result('pg14').setIndex('looplevel', 5, 0);
model.result('pg14').set('defaultPlotID', 'boundaryLoads');
model.result('pg14').label('Boundary Loads (solid)');
model.result('pg14').set('showlegends', true);
model.result('pg14').set('titletype', 'label');
model.result('pg14').set('frametype', 'spatial');
model.result('pg14').set('showlegendsunit', true);
model.result('pg14').create('surf1', 'Surface');
model.result('pg14').feature('surf1').set('expr', {'1'});
model.result('pg14').feature('surf1').label('Gray Surfaces');
model.result('pg14').feature('surf1').set('coloring', 'uniform');
model.result('pg14').feature('surf1').set('color', 'gray');
model.result('pg14').feature('surf1').set('inheritcolor', false);
model.result('pg14').feature('surf1').set('inheritrange', false);
model.result('pg14').feature('surf1').set('inherittransparency', false);
model.result('pg14').feature('surf1').create('def', 'Deform');
model.result('pg14').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg14').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg14').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg14').feature('surf1').feature('def').set('scale', 1);
model.result('pg14').feature('surf1').create('sel1', 'Selection');
model.result('pg14').feature('surf1').feature('sel1').selection.geom('geom1', 2);
model.result('pg14').feature('surf1').feature('sel1').selection.set([2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425]);
model.result('pg14').feature('surf1').create('tran1', 'Transparency');
model.result('pg14').feature('surf1').feature('tran1').set('transparency', 0.8);
model.result('pg14').create('arws1', 'ArrowSurface');
model.result('pg14').feature('arws1').set('expr', {'solid.bndl1.F_Ax' 'solid.bndl1.F_Ay' 'solid.bndl1.F_Az'});
model.result('pg14').feature('arws1').set('placement', 'gausspoints');
model.result('pg14').feature('arws1').set('arrowbase', 'head');
model.result('pg14').feature('arws1').label('Pressure');
model.result('pg14').feature('arws1').set('inheritplot', 'none');
model.result('pg14').feature('arws1').create('col', 'Color');
model.result('pg14').feature('arws1').feature('col').set('colortable', 'Rainbow');
model.result('pg14').feature('arws1').feature('col').set('colortabletrans', 'none');
model.result('pg14').feature('arws1').feature('col').set('colorscalemode', 'linear');
model.result('pg14').feature('arws1').feature('col').set('colordata', 'arrowlength');
model.result('pg14').feature('arws1').feature('col').set('coloring', 'gradient');
model.result('pg14').feature('arws1').feature('col').set('topcolor', 'red');
model.result('pg14').feature('arws1').feature('col').set('bottomcolor', 'custom');
model.result('pg14').feature('arws1').feature('col').set('custombottomcolor', [0.5882353186607361 0.5137255191802979 0.5176470875740051]);
model.result('pg14').feature('arws1').set('color', 'red');
model.result('pg14').feature('arws1').create('def', 'Deform');
model.result('pg14').feature('arws1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg14').feature('arws1').feature('def').set('descr', 'Displacement field');
model.result('pg14').feature('arws1').feature('def').set('scaleactive', true);
model.result('pg14').feature('arws1').feature('def').set('scale', 1);
model.result('pg14').feature.move('surf1', 1);
model.result('pg14').create('arws2', 'ArrowSurface');
model.result('pg14').feature('arws2').set('expr', {'solid.bndl2.F_Ax' 'solid.bndl2.F_Ay' 'solid.bndl2.F_Az'});
model.result('pg14').feature('arws2').set('placement', 'gausspoints');
model.result('pg14').feature('arws2').set('arrowbase', 'tail');
model.result('pg14').feature('arws2').label('Bending Moment and Axial Force');
model.result('pg14').feature('arws2').set('inheritplot', 'arws1');
model.result('pg14').feature('arws2').create('col', 'Color');
model.result('pg14').feature('arws2').feature('col').set('colortable', 'Rainbow');
model.result('pg14').feature('arws2').feature('col').set('colortabletrans', 'none');
model.result('pg14').feature('arws2').feature('col').set('colorscalemode', 'linear');
model.result('pg14').feature('arws2').feature('col').set('colordata', 'arrowlength');
model.result('pg14').feature('arws2').feature('col').set('coloring', 'gradient');
model.result('pg14').feature('arws2').feature('col').set('topcolor', 'red');
model.result('pg14').feature('arws2').feature('col').set('bottomcolor', 'custom');
model.result('pg14').feature('arws2').feature('col').set('custombottomcolor', [0.5882353186607361 0.5137255191802979 0.5176470875740051]);
model.result('pg14').feature('arws2').set('color', 'red');
model.result('pg14').feature('arws2').create('def', 'Deform');
model.result('pg14').feature('arws2').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg14').feature('arws2').feature('def').set('descr', 'Displacement field');
model.result('pg14').feature('arws2').feature('def').set('scaleactive', true);
model.result('pg14').feature('arws2').feature('def').set('scale', 1);
model.result('pg14').feature.move('surf1', 2);
model.result('pg14').label('Boundary Loads (solid)');
model.result('pg14').run;
model.result('pg14').run;

model.view.remove('view6');

model.result('pg10').run;

model.title('Prestressed Bolts in a Tube Connection');

model.description('This example analyzes a tube connection with prestressed bolts. The tube is subjected to an internal pressure and an external bending moment. The stress in the bolts as a function of the applied external load is calculated. Membrane and bending stresses are computed along a number of stress classification lines.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('tube_connection.mph');

model.modelNode.label('Components');

out = model;
