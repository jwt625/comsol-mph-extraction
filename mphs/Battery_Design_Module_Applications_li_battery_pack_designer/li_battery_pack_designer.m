function out = model
%
% li_battery_pack_designer.m
%
% Model exported on May 26 2025, 21:25 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Battery_Design_Module/Applications');

model.modelNode.create('comp1', true);

model.physics.create('lb', 'LumpedBattery');
model.physics('lb').model('comp1');

model.param.label('Parameters : Geometry Sequence');

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('d_batt', '21[mm]', 'Battery diameter');
model.param.set('r_batt', 'd_batt/2', 'Battery radius');
model.param.set('h_batt', '70[mm]', 'Battery height');
model.param.set('nx_batt', '6', 'Number of batteries in x-direction');
model.param.set('ny_batt', '4', 'Number of batteries in y-direction');
model.param.set('d_term', '6[mm]', 'Terminal diameter');
model.param.set('r_term', 'd_term/2', 'Terminal radius');
model.param.set('h_term', '1[mm]', 'Terminal thickness');
model.param.set('d_sc', '3[mm]', 'Serial connector width');
model.param.set('h_sc', '1[mm]', 'Bus bar thickness');
model.param.set('w_pc', '1[mm]', 'Parallel connector width');
model.param.set('isEven', 'if(floor(nx_batt/2)<nx_batt/2, 0, 1)', 'Help parameter for geometry creation');
model.param.set('beta', 'atan((r_batt*tan(60[deg])-d_sc)/r_batt)[rad]', 'Angle for connecting battery rows');
model.param.set('stacking_type', '1', '0 = straight packing, 1 = offset packing');
model.param.set('n_batt', 'nx_batt*ny_batt', 'Number of batteries');
model.param.create('par2');
model.param('par2').label('Parameters : Parameter Estimation');

% To import content from file, use:
% model.param('par2').loadFile('FILENAME');
model.param('par2').set('eta_IR_1C', '10[mV]', 'Ohmic overpotential at 1C, fitting parameter');
model.param('par2').set('invJ0', '1', 'Inverse dimensionless charge exchange current, fitting parameter');
model.param('par2').set('tau', '1000[s]', 'Diffusion time constant, fitting parameter');
model.param('par2').set('J0', '1/invJ0', 'Dimensionless charge exchange current');
model.param('par2').set('Q_cell0', '4[A*h]', 'Battery capacity');
model.param('par2').set('SOC_0', '0.3797', 'Initial state of charge');
model.param('par2').set('T_ref', '25[degC]', 'Reference temperature');
model.param('par2').set('opt_tol', '0.01', 'Optimality tolerance');
model.param('par2').set('output_steps', '11', 'Output steps');
model.param.create('par3');
model.param('par3').label('Parameters : Thermal Management');

% To import content from file, use:
% model.param('par3').loadFile('FILENAME');
model.param('par3').set('C_rate', '4', 'C rate');
model.param('par3').set('Q_cell', '4[A*h]', 'Battery cell capacity');
model.param('par3').set('I_1C', 'Q_cell/1[h]', '1C current');
model.param('par3').set('kT_batt_ang', '30[W/(m*K)]', 'Thermal conductivity, in plane');
model.param('par3').set('kT_batt_r', '1[W/(m*K)]', 'Thermal conductivity, cross plane');
model.param('par3').set('Ea_eta1C', '24[kJ/mol]', 'Activation energy');
model.param('par3').set('Ea_J0', '-59[kJ/mol]', 'Activation energy');
model.param('par3').set('Ea_Tau', '24[kJ/mol]', 'Activation energy');
model.param('par3').set('T0', '25[degC]', 'Reference temperature');
model.param('par3').set('J0_0', '0.85', 'J0 at reference temperature');
model.param('par3').set('tau_0', '1000[s]', 'tau at reference temperature');
model.param('par3').set('eta_1C', '4.5[mV]', 'eta_1C at reference temperature');
model.param('par3').set('rho_batt', '2000[kg/m^3]', 'Battery density');
model.param('par3').set('Cp_batt', '1400[J/(kg*K)]', 'Battery heat capacity');
model.param('par3').set('ht', '30[W/(m^2*K)]', 'Heat transfer coefficient, sides');
model.param('par3').set('ht_top', '30[W/(m^2*K)]', 'Heat transfer coefficient, top');
model.param('par3').set('ht_bottom', '5[W/(m^2*K)]', 'Heat transfer coefficient, bottom');
model.param('par3').set('T_init', '20[degC]', 'Initial/external temperature');
model.param('par3').set('opt_eta_IR_1C', '0.0045162[V]', 'Ohmic overpotential at 1C');
model.param('par3').set('opt_invJ0', '1.1565', 'Inverse dimensionless charge exchange current');
model.param('par3').set('opt_J0', '0.86471', 'Dimensionless charge exchange current');
model.param('par3').set('opt_tau', '1374.4[s]', 'Diffusion time constant');
model.param('par3').set('initial_SOC', '1', 'Initial state of charge');
model.param('par3').set('final_SOC', '0.2', 'Final state of charge');
model.param('par3').set('C_sign', 'sign(final_SOC-initial_SOC)', 'Current direction');
model.param('par3').set('number_of_steps', '11', 'Number of steps for time-stepping');

model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').importData('li_battery_pack_designer_embedded_experimental_data.txt');
model.result.table('tbl1').label('Load Cycle Data');
model.result.table.create('tbl2', 'Table');
model.result.table('tbl2').label('Open Circuit Voltage');
model.result.table('tbl2').importData('li_battery_pack_designer_embedded_SOC_EOCV_interpolation.txt');

model.func.create('int1', 'Interpolation');
model.func('int1').label('Load Cycle Data');
model.func('int1').set('source', 'resultTable');
model.func('int1').setIndex('funcs', 'E_cell_exp', 0, 0);
model.func('int1').setIndex('funcs', 'I_cell_exp', 1, 0);
model.func('int1').setIndex('funcs', 2, 1, 1);
model.func('int1').setIndex('argunit', 's', 0);
model.func.create('int2', 'Interpolation');
model.func('int2').label('Open Circuit Voltage');
model.func('int2').set('source', 'resultTable');
model.func('int2').set('resultTable', 'tbl2');

model.physics('lb').prop('BatterySettings').set('I_app', 'I_cell_exp(t)[A]');
model.physics('lb').prop('BatterySettings').set('Q_cell0', 'Q_cell0');
model.physics('lb').prop('BatterySettings').set('SOC_cell0', 'SOC_0');
model.physics('lb').feature('cep1').set('OpenCircuitVoltageInput', 'fromdef');
model.physics('lb').feature('cep1').set('Eocvdef', 'int2');
model.physics('lb').feature('cep1').set('Tref', 'T_ref');
model.physics('lb').feature('vl1').set('minput_temperature', 'T_ref');
model.physics('lb').feature('vl1').set('eta_ir1C', 'eta_IR_1C');
model.physics('lb').feature('vl1').set('J0', 'J0');
model.physics('lb').feature('vl1').set('IncludeConcentrationOverpotential', true);
model.physics('lb').feature('vl1').set('tau', 'tau');

model.probe.create('var1', 'GlobalVariable');
model.probe('var1').model('comp1');
model.probe('var1').set('probename', 'Ecell');

model.modelNode.create('comp2', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp2');

model.mesh.create('mesh1', 'geom1');

model.geom.create('part1', 'Part', 3);
model.geom('part1').label('Part 1: Straight packing');
model.geom('part1').create('cyl1', 'Cylinder');
model.geom('part1').feature('cyl1').set('r', 'r_batt');
model.geom('part1').feature('cyl1').set('h', 'h_batt');
model.geom('part1').run('cyl1');
model.geom('part1').create('arr1', 'Array');
model.geom('part1').feature('arr1').selection('input').set({'cyl1'});
model.geom('part1').feature('arr1').set('fullsize', {'nx_batt' 'ny_batt' '1'});
model.geom('part1').feature('arr1').set('displ', {'d_batt' 'd_batt' '0'});
model.geom('part1').selection.create('csel1', 'CumulativeSelection');
model.geom('part1').selection('csel1').label('batteries');
model.geom('part1').feature('arr1').set('contributeto', 'csel1');
model.geom('part1').run('arr1');
model.geom('part1').create('cyl2', 'Cylinder');
model.geom('part1').feature('cyl2').set('r', 'r_term');
model.geom('part1').feature('cyl2').set('h', 'h_term');
model.geom('part1').feature('cyl2').set('pos', {'0' '0' '-h_term'});
model.geom('part1').run('cyl2');
model.geom('part1').create('arr2', 'Array');
model.geom('part1').feature('arr2').selection('input').set({'cyl2'});
model.geom('part1').feature('arr2').set('fullsize', {'nx_batt' 'ny_batt' '1'});
model.geom('part1').feature('arr2').setIndex('fullsize', 2, 2);
model.geom('part1').feature('arr2').set('displ', {'d_batt' 'd_batt' '0'});
model.geom('part1').feature('arr2').setIndex('displ', 'h_batt+h_term', 2);
model.geom('part1').selection.create('csel2', 'CumulativeSelection');
model.geom('part1').selection('csel2').label('terminals');
model.geom('part1').feature('arr2').set('contributeto', 'csel2');
model.geom('part1').run('arr2');
model.geom('part1').create('blk1', 'Block');
model.geom('part1').feature('blk1').set('size', {'d_batt' 'd_sc' 'h_sc'});
model.geom('part1').feature('blk1').set('pos', {'-d_batt+w_pc/2' '0' '0'});
model.geom('part1').feature('blk1').setIndex('pos', '-d_sc/2', 1);
model.geom('part1').feature('blk1').setIndex('pos', 'h_batt+h_term', 2);
model.geom('part1').run('blk1');
model.geom('part1').create('arr3', 'Array');
model.geom('part1').feature('arr3').selection('input').set({'blk1'});
model.geom('part1').feature('arr3').set('type', 'linear');
model.geom('part1').feature('arr3').set('linearsize', 'ny_batt');
model.geom('part1').feature('arr3').set('displ', {'0' 'd_batt' '0'});
model.geom('part1').selection.create('csel3', 'CumulativeSelection');
model.geom('part1').selection('csel3').label('busbar');
model.geom('part1').feature('arr3').set('contributeto', 'csel3');
model.geom('part1').run('arr3');
model.geom('part1').create('copy1', 'Copy');
model.geom('part1').feature('copy1').selection('input').named('csel3');
model.geom('part1').feature('copy1').set('displx', '(nx_batt)*d_batt-w_pc');
model.geom('part1').feature('copy1').set('displz', 'if(floor(nx_batt/2)<nx_batt/2, -h_batt-h_term*2-h_sc,0 )');
model.geom('part1').feature('copy1').set('contributeto', 'csel3');
model.geom('part1').run('copy1');
model.geom('part1').create('blk2', 'Block');
model.geom('part1').feature('blk2').set('size', {'d_batt+w_pc' '1' '1'});
model.geom('part1').feature('blk2').setIndex('size', 'd_sc', 1);
model.geom('part1').feature('blk2').setIndex('size', 'h_sc', 2);
model.geom('part1').feature('blk2').set('pos', {'-w_pc/2' '-d_sc/2' '0'});
model.geom('part1').feature('blk2').setIndex('pos', '-h_sc-h_term', 2);
model.geom('part1').run('blk2');
model.geom('part1').create('arr4', 'Array');
model.geom('part1').feature('arr4').selection('input').set({'blk2'});
model.geom('part1').feature('arr4').set('fullsize', {'floor(nx_batt/2)' '1' '1'});
model.geom('part1').feature('arr4').setIndex('fullsize', 'ny_batt', 1);
model.geom('part1').feature('arr4').set('displ', {'d_batt*2' 'd_batt' '0'});
model.geom('part1').feature('arr4').set('contributeto', 'csel3');
model.geom('part1').run('arr4');
model.geom('part1').create('if1', 'If');
model.geom('part1').feature.createAfter('endif1', 'EndIf', 'if1');
model.geom('part1').feature('if1').label('If 1  (nx_batt > 2)');
model.geom('part1').feature('if1').set('condition', 'nx_batt > 2');
model.geom('part1').create('blk3', 'Block');
model.geom('part1').feature('blk3').set('size', {'d_batt+w_pc' '1' '1'});
model.geom('part1').feature('blk3').setIndex('size', 'd_sc', 1);
model.geom('part1').feature('blk3').setIndex('size', 'h_sc', 2);
model.geom('part1').feature('blk3').set('pos', {'d_batt-w_pc/2' '0' '0'});
model.geom('part1').feature('blk3').setIndex('pos', '-d_sc/2', 1);
model.geom('part1').feature('blk3').setIndex('pos', 'h_batt+h_term', 2);
model.geom('part1').run('blk3');
model.geom('part1').create('arr5', 'Array');
model.geom('part1').feature('arr5').selection('input').set({'blk3'});
model.geom('part1').feature('arr5').set('fullsize', {'floor(nx_batt/2)' '1' '1'});
model.geom('part1').feature('arr5').setIndex('fullsize', 'ny_batt', 1);
model.geom('part1').feature('arr5').set('displ', {'d_batt*2' 'd_batt' '0'});
model.geom('part1').feature('arr5').set('contributeto', 'csel3');
model.geom('part1').feature.createAfter('if2', 'If', 'endif1');
model.geom('part1').feature('if2').label('If 2 (ny_batt >1)');
model.geom('part1').feature('if2').set('condition', 'ny_batt >1');
model.geom('part1').feature.createAfter('endif2', 'EndIf', 'if2');
model.geom('part1').run('arr5');
model.geom('part1').create('blk4', 'Block');
model.geom('part1').feature.move('blk4', 13);
model.geom('part1').feature.move('blk4', 14);
model.geom('part1').feature('blk4').set('size', {'w_pc' '(d_batt)*(ny_batt-1)+d_sc' '1'});
model.geom('part1').feature('blk4').setIndex('size', 'h_sc', 2);
model.geom('part1').feature('blk4').set('pos', {'-w_pc/2' '-d_sc/2' '0'});
model.geom('part1').feature('blk4').setIndex('pos', '-h_sc-h_term', 2);
model.geom('part1').run('blk4');
model.geom('part1').create('arr6', 'Array');
model.geom('part1').feature('arr6').selection('input').set({'blk4'});
model.geom('part1').feature('arr6').set('fullsize', {'nx_batt' '1' '2'});
model.geom('part1').feature('arr6').set('displ', {'d_batt' '0' 'h_batt+h_term*2+h_sc'});
model.geom('part1').feature('arr6').set('contributeto', 'csel3');
model.geom.create('part2', 'Part', 3);
model.geom('part2').label('Part 2: Offset Packing');
model.geom('part2').create('cyl1', 'Cylinder');
model.geom('part2').feature('cyl1').set('r', 'r_batt');
model.geom('part2').feature('cyl1').set('h', 'h_batt');
model.geom('part2').run('cyl1');
model.geom('part2').create('arr1', 'Array');
model.geom('part2').feature('arr1').selection('input').set({'cyl1'});
model.geom('part2').feature('arr1').set('fullsize', {'nx_batt' 'ceil(ny_batt/2)' '1'});
model.geom('part2').feature('arr1').set('displ', {'d_batt' 'd_batt*tan(60[deg])' '0'});
model.geom('part2').selection.create('csel1', 'CumulativeSelection');
model.geom('part2').selection('csel1').label('batteries');
model.geom('part2').feature('arr1').set('contributeto', 'csel1');
model.geom('part2').run('arr1');
model.geom('part2').create('cyl2', 'Cylinder');
model.geom('part2').feature('cyl2').set('r', 'r_batt');
model.geom('part2').feature('cyl2').set('h', 'h_batt');
model.geom('part2').feature('cyl2').set('pos', {'r_batt' 'r_batt*tan(60[deg])' '0'});
model.geom('part2').run('cyl2');
model.geom('part2').create('arr2', 'Array');
model.geom('part2').feature('arr2').selection('input').set({'cyl2'});
model.geom('part2').feature('arr2').set('fullsize', {'nx_batt' 'floor(ny_batt/2)' '1'});
model.geom('part2').feature('arr2').set('displ', {'d_batt' 'd_batt*tan(60[deg])' '0'});
model.geom('part2').feature('arr2').set('contributeto', 'csel1');
model.geom('part2').run('arr2');
model.geom('part2').create('cyl3', 'Cylinder');
model.geom('part2').feature('cyl3').set('r', 'r_term');
model.geom('part2').feature('cyl3').set('h', 'h_term');
model.geom('part2').feature('cyl3').set('pos', {'0' '0' '-h_term'});
model.geom('part2').run('cyl3');
model.geom('part2').create('arr3', 'Array');
model.geom('part2').feature('arr3').selection('input').set({'cyl3'});
model.geom('part2').feature('arr3').set('fullsize', {'nx_batt' 'ceil(ny_batt/2)' '1'});
model.geom('part2').feature('arr3').setIndex('fullsize', 2, 2);
model.geom('part2').feature('arr3').set('displ', {'d_batt' 'd_batt*tan(60[deg])' '0'});
model.geom('part2').feature('arr3').setIndex('displ', 'h_batt+h_term', 2);
model.geom('part2').selection.create('csel2', 'CumulativeSelection');
model.geom('part2').selection('csel2').label('terminals');
model.geom('part2').feature('arr3').set('contributeto', 'csel2');
model.geom('part2').run('arr3');
model.geom('part2').create('cyl4', 'Cylinder');
model.geom('part2').feature('cyl4').set('r', 'r_term');
model.geom('part2').feature('cyl4').set('h', 'h_term');
model.geom('part2').feature('cyl4').set('pos', {'r_batt' 'r_batt*tan(60[deg])' '0'});
model.geom('part2').feature('cyl4').setIndex('pos', '-h_term', 2);
model.geom('part2').run('cyl4');
model.geom('part2').create('arr4', 'Array');
model.geom('part2').feature('arr4').selection('input').set({'cyl4'});
model.geom('part2').feature('arr4').set('fullsize', {'nx_batt' 'floor(ny_batt/2)' '1'});
model.geom('part2').feature('arr4').setIndex('fullsize', 2, 2);
model.geom('part2').feature('arr4').set('displ', {'d_batt' 'd_batt*tan(60[deg])' '0'});
model.geom('part2').feature('arr4').setIndex('displ', 'h_batt+h_term', 2);
model.geom('part2').feature('arr4').set('contributeto', 'csel2');
model.geom('part2').run('arr4');
model.geom('part2').create('blk1', 'Block');
model.geom('part2').feature('blk1').set('size', {'d_batt' 'd_sc' 'h_sc'});
model.geom('part2').feature('blk1').set('pos', {'-d_batt+w_pc/2' '0' '0'});
model.geom('part2').feature('blk1').setIndex('pos', '-d_sc/2', 1);
model.geom('part2').feature('blk1').setIndex('pos', 'h_batt+h_term', 2);
model.geom('part2').run('blk1');
model.geom('part2').create('arr5', 'Array');
model.geom('part2').feature('arr5').selection('input').set({'blk1'});
model.geom('part2').feature('arr5').set('type', 'linear');
model.geom('part2').feature('arr5').set('linearsize', 'ceil(ny_batt/2)');
model.geom('part2').feature('arr5').set('displ', {'0' 'd_batt*tan(60[deg])' '0'});
model.geom('part2').selection.create('csel3', 'CumulativeSelection');
model.geom('part2').selection('csel3').label('busbar');
model.geom('part2').feature('arr5').set('contributeto', 'csel3');
model.geom('part2').run('arr5');
model.geom('part2').create('blk2', 'Block');
model.geom('part2').feature('blk2').set('size', {'d_batt+r_batt' '1' '1'});
model.geom('part2').feature('blk2').setIndex('size', 'd_sc', 1);
model.geom('part2').feature('blk2').setIndex('size', 'h_sc', 2);
model.geom('part2').feature('blk2').set('pos', {'-d_batt+w_pc/2' '0' '0'});
model.geom('part2').feature('blk2').setIndex('pos', '-d_sc/2+r_batt*tan(60[deg])', 1);
model.geom('part2').feature('blk2').setIndex('pos', 'h_batt+h_term', 2);
model.geom('part2').run('blk2');
model.geom('part2').create('arr6', 'Array');
model.geom('part2').feature('arr6').selection('input').set({'blk2'});
model.geom('part2').feature('arr6').set('type', 'linear');
model.geom('part2').feature('arr6').set('linearsize', 'floor(ny_batt/2)');
model.geom('part2').feature('arr6').set('displ', {'0' 'd_batt*tan(60[deg])' '0'});
model.geom('part2').feature('arr6').set('contributeto', 'csel3');
model.geom('part2').run('arr6');
model.geom('part2').create('if1', 'If');
model.geom('part2').feature.createAfter('endif1', 'EndIf', 'if1');
model.geom('part2').feature('if1').label('If 1 (isEven == 1)');
model.geom('part2').feature('if1').set('condition', 'isEven == 1');
model.geom('part2').create('blk3', 'Block');
model.geom('part2').feature('blk3').set('size', {'d_batt+r_batt' '1' '1'});
model.geom('part2').feature('blk3').setIndex('size', 'd_sc', 1);
model.geom('part2').feature('blk3').setIndex('size', 'h_sc', 2);
model.geom('part2').feature('blk3').set('pos', {'(nx_batt-1)*d_batt-w_pc/2' '0' '0'});
model.geom('part2').feature('blk3').setIndex('pos', '-d_sc/2', 1);
model.geom('part2').feature('blk3').setIndex('pos', 'h_batt+h_term', 2);
model.geom('part2').run('blk3');
model.geom('part2').create('arr7', 'Array');
model.geom('part2').feature('arr7').selection('input').set({'blk3'});
model.geom('part2').feature('arr7').set('type', 'linear');
model.geom('part2').feature('arr7').set('linearsize', 'ceil(ny_batt/2)');
model.geom('part2').feature('arr7').set('displ', {'0' 'd_batt*tan(60[deg])' '0'});
model.geom('part2').feature('arr7').set('contributeto', 'csel3');
model.geom('part2').run('arr7');
model.geom('part2').create('blk4', 'Block');
model.geom('part2').feature('blk4').set('size', {'d_batt' 'd_sc' 'h_sc'});
model.geom('part2').feature('blk4').set('pos', {'(nx_batt-1)*d_batt-w_pc/2+r_batt' '0' '0'});
model.geom('part2').feature('blk4').setIndex('pos', '-d_sc/2+r_batt*tan(60[deg])', 1);
model.geom('part2').feature('blk4').setIndex('pos', 'h_batt+h_term', 2);
model.geom('part2').run('blk4');
model.geom('part2').create('arr8', 'Array');
model.geom('part2').feature('arr8').selection('input').set({'blk4'});
model.geom('part2').feature('arr8').set('type', 'linear');
model.geom('part2').feature('arr8').set('linearsize', 'floor(ny_batt/2)');
model.geom('part2').feature('arr8').set('displ', {'0' 'd_batt*tan(60[deg])' '0'});
model.geom('part2').feature('arr8').set('contributeto', 'csel3');
model.geom('part2').feature.createAfter('else1', 'Else', 'arr8');
model.geom('part2').run('arr8');
model.geom('part2').create('blk5', 'Block');
model.geom('part2').feature.move('blk5', 18);
model.geom('part2').feature('blk5').set('size', {'d_batt+r_batt' '1' '1'});
model.geom('part2').feature('blk5').setIndex('size', 'd_sc', 1);
model.geom('part2').feature('blk5').setIndex('size', 'h_sc', 2);
model.geom('part2').feature('blk5').set('pos', {'(nx_batt-1)*d_batt-w_pc/2' '0' '0'});
model.geom('part2').feature('blk5').setIndex('pos', '-d_sc/2', 1);
model.geom('part2').feature('blk5').setIndex('pos', '-h_term-h_sc', 2);
model.geom('part2').run('blk5');
model.geom('part2').create('arr9', 'Array');
model.geom('part2').feature('arr9').selection('input').set({'blk5'});
model.geom('part2').feature('arr9').set('type', 'linear');
model.geom('part2').feature('arr9').set('linearsize', 'ceil(ny_batt/2)');
model.geom('part2').feature('arr9').set('displ', {'0' 'd_batt*tan(60[deg])' '0'});
model.geom('part2').feature('arr9').set('contributeto', 'csel3');
model.geom('part2').feature.duplicate('blk6', 'blk5');
model.geom('part2').feature('blk6').set('size', {'d_batt' 'd_sc' 'h_sc'});
model.geom('part2').feature('blk6').setIndex('pos', '(nx_batt-1)*d_batt-w_pc/2+r_batt', 0);
model.geom('part2').feature('blk6').setIndex('pos', '-d_sc/2+r_batt*tan(60[deg])', 1);
model.geom('part2').feature.duplicate('arr10', 'arr9');
model.geom('part2').runPre('arr10');
model.geom('part2').feature('arr10').selection('input').set({'blk6'});
model.geom('part2').feature('arr10').set('linearsize', 'floor(ny_batt/2)');
model.geom('part2').create('blk7', 'Block');
model.geom('part2').feature.move('blk7', 23);
model.geom('part2').feature('blk7').set('size', {'d_batt+w_pc' '1' '1'});
model.geom('part2').feature('blk7').setIndex('size', 'd_sc', 1);
model.geom('part2').feature('blk7').setIndex('size', 'h_sc', 2);
model.geom('part2').feature('blk7').set('pos', {'-w_pc/2' '-d_sc/2' '0'});
model.geom('part2').feature('blk7').setIndex('pos', '-h_sc-h_term', 2);
model.geom('part2').run('blk7');
model.geom('part2').create('if2', 'If');
model.geom('part2').feature.createAfter('endif2', 'EndIf', 'if2');
model.geom('part2').feature('if2').label('If 2 (ny_batt == 1)');
model.geom('part2').feature('if2').set('condition', 'ny_batt ==1');
model.geom('part2').feature.duplicate('arr11', 'arr10');
model.geom('part2').runPre('arr11');
model.geom('part2').feature('arr11').selection('input').set({'blk7'});
model.geom('part2').feature('arr11').set('linearsize', 'floor(nx_batt/2)');
model.geom('part2').feature('arr11').setIndex('displ', '2*d_batt', 0);
model.geom('part2').feature('arr11').set('displ', {'2*d_batt' '0' '0'});
model.geom('part2').feature.createAfter('else2', 'Else', 'arr11');
model.geom('part2').run('else2');
model.geom('part2').feature.duplicate('arr12', 'arr11');
model.geom('part2').feature('arr12').set('type', 'three-dimensional');
model.geom('part2').feature('arr12').set('fullsize', {'floor(nx_batt/2)' '1' '1'});
model.geom('part2').feature('arr12').setIndex('fullsize', 'ceil(ny_batt/2)', 1);
model.geom('part2').feature('arr12').set('displ', {'2*d_batt' 'd_batt*tan(60[deg])' '0'});
model.geom('part2').run('arr12');
model.geom('part2').create('blk8', 'Block');
model.geom('part2').feature.move('blk8', 29);
model.geom('part2').feature('blk8').set('size', {'d_batt+w_pc' '1' '1'});
model.geom('part2').feature('blk8').setIndex('size', 'd_sc', 1);
model.geom('part2').feature('blk8').setIndex('size', 'h_sc', 2);
model.geom('part2').feature('blk8').set('pos', {'-w_pc/2+r_batt' '0' '0'});
model.geom('part2').feature('blk8').setIndex('pos', '-d_sc/2+r_batt*tan(60[deg])', 1);
model.geom('part2').feature('blk8').setIndex('pos', '-h_sc-h_term', 2);
model.geom('part2').run('blk8');
model.geom('part2').create('arr13', 'Array');
model.geom('part2').feature('arr13').selection('input').set({'blk8'});
model.geom('part2').feature('arr13').set('fullsize', {'floor(nx_batt/2)' '1' '1'});
model.geom('part2').feature('arr13').setIndex('fullsize', 'floor(ny_batt/2)', 1);
model.geom('part2').feature('arr13').set('displ', {'2*d_batt' 'd_batt*tan(60[deg])' '0'});
model.geom('part2').feature('arr13').set('contributeto', 'csel3');
model.geom('part2').run('arr13');
model.geom('part2').create('if3', 'If');
model.geom('part2').feature.createAfter('endif3', 'EndIf', 'if3');
model.geom('part2').feature('if3').label('If 3 (nx_batt>2)');
model.geom('part2').feature('if3').set('condition', 'nx_batt>2');
model.geom('part2').feature.duplicate('blk9', 'blk8');
model.geom('part2').feature('blk9').setIndex('pos', '-w_pc/2+d_batt', 0);
model.geom('part2').feature('blk9').setIndex('pos', '-d_sc/2', 1);
model.geom('part2').feature('blk9').setIndex('pos', 'h_batt+h_term', 2);
model.geom('part2').feature.duplicate('arr14', 'arr13');
model.geom('part2').runPre('arr14');
model.geom('part2').feature('arr14').selection('input').set({'blk9'});
model.geom('part2').feature('arr14').setIndex('fullsize', 'floor((nx_batt-1)/2)', 0);
model.geom('part2').feature('arr14').setIndex('fullsize', 'ceil(ny_batt/2)', 1);
model.geom('part2').feature.duplicate('if4', 'if3');
model.geom('part2').feature.duplicate('blk10', 'blk9');
model.geom('part2').feature.duplicate('arr15', 'arr14');
model.geom('part2').feature.duplicate('endif4', 'endif3');
model.geom('part2').feature.move('arr14', 33);
model.geom('part2').feature('if4').label('If 4 (ny_batt>1)');
model.geom('part2').feature('if4').set('condition', 'ny_batt>1');
model.geom('part2').feature('blk10').setIndex('pos', '-w_pc/2+d_batt+r_batt', 0);
model.geom('part2').feature('blk10').setIndex('pos', '-d_sc/2+r_batt*tan(60[deg])', 1);
model.geom('part2').runPre('arr15');
model.geom('part2').feature('arr15').selection('input').init;
model.geom('part2').feature('arr15').selection('input').set({'blk10'});
model.geom('part2').feature('arr15').setIndex('fullsize', 'floor((ny_batt)/2)', 1);
model.geom('part2').create('if5', 'If');
model.geom('part2').feature.createAfter('endif5', 'EndIf', 'if5');
model.geom('part2').feature.move('endif5', 40);
model.geom('part2').feature.move('if5', 39);
model.geom('part2').feature('if5').label('If 5 (ny_batt > 1)');
model.geom('part2').feature('if5').set('condition', 'ny_batt > 1');
model.geom('part2').run('if5');
model.geom('part2').create('blk11', 'Block');
model.geom('part2').feature('blk11').set('size', {'w_pc' '(r_batt*tan(60[deg])-d_sc)/sin(atan((r_batt*tan(60[deg])-d_sc)/r_batt)[rad])+w_pc*tan(90[deg]-beta)' '1'});
model.geom('part2').feature('blk11').setIndex('size', 'h_sc', 2);
model.geom('part2').feature('blk11').set('pos', {'-w_pc/2' 'd_sc/2' '0'});
model.geom('part2').feature('blk11').setIndex('pos', '-h_sc-h_term', 2);
model.geom('part2').feature('blk11').set('rot', '-90+atan((r_batt*tan(60[deg])-d_sc)/r_batt)[rad]');
model.geom('part2').run('blk11');
model.geom('part2').create('arr16', 'Array');
model.geom('part2').feature('arr16').selection('input').set({'blk11'});
model.geom('part2').feature('arr16').set('type', 'linear');
model.geom('part2').feature('arr16').set('linearsize', 'ceil(nx_batt/2)');
model.geom('part2').feature('arr16').set('displ', {'d_batt*2' '0' '0'});
model.geom('part2').selection.create('csel4', 'CumulativeSelection');
model.geom('part2').selection('csel4').label('busbar_parallel_1');
model.geom('part2').feature('arr16').set('contributeto', 'csel4');
model.geom('part2').feature.duplicate('blk12', 'blk11');
model.geom('part2').feature.duplicate('arr17', 'arr16');
model.geom('part2').feature('blk12').setIndex('pos', 'd_batt+w_pc/2-w_pc/cos(-90[deg]+atan((r_batt*tan(60[deg])-d_sc)/r_batt)[rad])', 0);
model.geom('part2').runPre('arr17');
model.geom('part2').feature('arr17').selection('input').set({'blk12'});
model.geom('part2').feature('arr17').set('linearsize', 'floor(nx_batt/2)');
model.geom('part2').feature.duplicate('if6', 'if5');
model.geom('part2').feature.duplicate('blk13', 'blk11');
model.geom('part2').feature.duplicate('arr18', 'arr16');
model.geom('part2').feature.duplicate('blk14', 'blk12');
model.geom('part2').feature.duplicate('arr19', 'arr17');
model.geom('part2').feature.duplicate('endif6', 'endif5');
model.geom('part2').feature.move('endif6', 50);
model.geom('part2').feature.move('arr19', 49);
model.geom('part2').feature.move('blk14', 48);
model.geom('part2').feature.move('arr18', 47);
model.geom('part2').feature.move('blk13', 46);
model.geom('part2').feature.move('if6', 45);
model.geom('part2').feature('if6').label('If 6 (ny_batt > 2)');
model.geom('part2').feature('if6').set('condition', 'ny_batt > 2');
model.geom('part2').feature('blk13').setIndex('pos', '-w_pc/2+r_batt+(w_pc/sin(beta))-sin(beta)*w_pc', 0);
model.geom('part2').feature('blk13').setIndex('pos', 'r_batt*tan(60[deg])+d_sc/2-cos(beta)*w_pc', 1);
model.geom('part2').feature('blk13').set('rot', '90-beta');
model.geom('part2').runPre('arr18');
model.geom('part2').feature('arr18').selection('input').set({'blk13'});
model.geom('part2').selection.create('csel5', 'CumulativeSelection');
model.geom('part2').selection('csel5').label('busbar_parallel_2');
model.geom('part2').feature('arr18').set('contributeto', 'csel5');
model.geom('part2').feature('blk14').setIndex('pos', '-w_pc/2+r_batt+(w_pc/sin(beta))-sin(beta)*w_pc+d_batt+w_pc/2-w_pc/cos(-90[deg]+atan((r_batt*tan(60[deg])-d_sc)/r_batt)[rad])+w_pc/2', 0);
model.geom('part2').feature('blk14').setIndex('pos', 'r_batt*tan(60[deg])+d_sc/2-cos(beta)*w_pc', 1);
model.geom('part2').feature('blk14').set('rot', '90-beta');
model.geom('part2').runPre('arr19');
model.geom('part2').feature('arr19').selection('input').init;
model.geom('part2').feature('arr19').selection('input').set({'blk14'});
model.geom('part2').feature('arr19').set('contributeto', 'csel5');
model.geom('part2').create('if7', 'If');
model.geom('part2').feature.createAfter('endif7', 'EndIf', 'if7');
model.geom('part2').feature.move('endif7', 52);
model.geom('part2').feature.move('if7', 51);
model.geom('part2').feature('if7').label('If 7 (ny_batt > 3)');
model.geom('part2').feature('if7').set('condition', 'ny_batt > 3');
model.geom('part2').run('if7');
model.geom('part2').create('arr20', 'Array');
model.geom('part2').feature('arr20').selection('input').named('csel4');
model.geom('part2').feature('arr20').set('type', 'linear');
model.geom('part2').feature('arr20').set('linearsize', 'floor(ny_batt/2)');
model.geom('part2').feature('arr20').set('displ', {'0' 'd_batt*tan(60[deg])' '0'});
model.geom('part2').feature('arr20').set('contributeto', 'csel4');
model.geom('part2').run('arr20');
model.geom('part2').create('if8', 'If');
model.geom('part2').feature.createAfter('endif8', 'EndIf', 'if8');
model.geom('part2').feature.move('endif8', 55);
model.geom('part2').feature.move('if8', 54);
model.geom('part2').feature('if8').label('If 8 (ny_batt > 4)');
model.geom('part2').feature('if8').set('condition', 'ny_batt > 4');
model.geom('part2').run('if8');
model.geom('part2').create('arr21', 'Array');
model.geom('part2').feature('arr21').selection('input').named('csel5');
model.geom('part2').feature('arr21').set('type', 'linear');
model.geom('part2').feature('arr21').set('linearsize', 'ceil((ny_batt-2)/2)');
model.geom('part2').feature('arr21').set('displ', {'0' 'd_batt*tan(60[deg])' '0'});
model.geom('part2').feature('arr21').set('contributeto', 'csel5');
model.geom('part2').run('arr21');
model.geom('part2').create('copy1', 'Copy');
model.geom('part2').feature.move('copy1', 57);
model.geom('part2').runPre('copy1');
model.geom('part2').feature('copy1').selection('input').named('csel3');
model.geom('part2').selection.create('csel6', 'CumulativeSelection');
model.geom('part2').selection('csel6').label('busbar_copy_temp');
model.geom('part2').feature('copy1').set('contributeto', 'csel6');
model.geom('part2').create('unisel1', 'UnionSelection');
model.geom('part2').feature.move('unisel1', 58);
model.geom('part2').feature('unisel1').set('entitydim', -1);
model.geom('part2').runPre('unisel1');
model.geom('part2').feature('unisel1').set('input', {'csel4' 'csel5'});
model.geom('part2').create('dif1', 'Difference');
model.geom('part2').feature.move('dif1', 59);
model.geom('part2').runPre('dif1');
model.geom('part2').feature('dif1').selection('input').named('unisel1');
model.geom('part2').feature('dif1').selection('input2').named('csel6');
model.geom('part2').feature('dif1').set('contributeto', 'csel3');
model.geom('part2').create('if9', 'If');
model.geom('part2').feature.createAfter('endif9', 'EndIf', 'if9');
model.geom('part2').feature.move('endif9', 61);
model.geom('part2').feature.move('if9', 60);
model.geom('part2').feature('if9').label('If (ny_batt > 1)');
model.geom('part2').feature('if9').set('condition', 'ny_batt > 1');
model.geom('part2').run('if9');
model.geom('part2').create('blk15', 'Block');
model.geom('part2').feature('blk15').set('size', {'w_pc' '(r_batt*tan(60[deg])-d_sc)/sin(atan((r_batt*tan(60[deg])-d_sc)/r_batt)[rad])+w_pc*tan(90[deg]-beta)' '1'});
model.geom('part2').feature('blk15').setIndex('size', 'h_sc', 2);
model.geom('part2').feature('blk15').set('pos', {'w_pc/2-(w_pc/sin(beta))' '0' '0'});
model.geom('part2').feature('blk15').setIndex('pos', 'd_sc/2', 1);
model.geom('part2').feature('blk15').setIndex('pos', 'h_batt+h_term', 2);
model.geom('part2').feature('blk15').set('rot', '-90+atan((r_batt*tan(60[deg])-d_sc)/r_batt)[rad]');
model.geom('part2').selection.create('csel7', 'CumulativeSelection');
model.geom('part2').selection('csel7').label('busbar_parallel_top');
model.geom('part2').feature('blk15').set('contributeto', 'csel7');
model.geom('part2').run('blk15');
model.geom('part2').create('arr22', 'Array');
model.geom('part2').feature('arr22').selection('input').named('csel7');
model.geom('part2').feature('arr22').set('type', 'linear');
model.geom('part2').feature('arr22').set('linearsize', 'floor(ny_batt/2)');
model.geom('part2').feature('arr22').set('displ', {'0' 'd_batt*tan(60[deg])' '0'});
model.geom('part2').feature('arr22').set('contributeto', 'csel7');
model.geom('part2').feature.duplicate('if10', 'if9');
model.geom('part2').feature.duplicate('blk16', 'blk15');
model.geom('part2').feature.duplicate('endif10', 'endif9');
model.geom('part2').feature.move('endif10', 66);
model.geom('part2').feature.move('blk16', 65);
model.geom('part2').feature.move('if10', 64);
model.geom('part2').feature('if10').label('If 10(ny_batt > 2)');
model.geom('part2').feature('if10').set('condition', 'ny_batt > 2');
model.geom('part2').feature('blk16').setIndex('pos', 'r_batt+(w_pc/sin(beta))-sin(beta)*w_pc+w_pc/2-(w_pc/sin(beta))', 0);
model.geom('part2').feature('blk16').setIndex('pos', 'r_batt*tan(60[deg])+d_sc/2-cos(beta)*w_pc', 1);
model.geom('part2').feature('blk16').set('rot', '90-beta');
model.geom('part2').run('endif10');
model.geom('part2').create('if11', 'If');
model.geom('part2').feature.createAfter('endif11', 'EndIf', 'if11');
model.geom('part2').feature('if11').label('If 11 (ny_batt > 4)');
model.geom('part2').feature('if11').set('condition', 'ny_batt > 4');
model.geom('part2').run('if11');
model.geom('part2').create('arr23', 'Array');
model.geom('part2').feature('arr23').selection('input').set({'blk16'});
model.geom('part2').feature('arr23').set('type', 'linear');
model.geom('part2').feature('arr23').set('linearsize', 'ceil((ny_batt-2)/2)');
model.geom('part2').feature('arr23').set('displ', {'0' 'd_batt*tan(60[deg])' '0'});
model.geom('part2').feature('arr23').set('contributeto', 'csel7');
model.geom('part2').feature.duplicate('arr24', 'arr23');
model.geom('part2').feature.move('arr24', 70);
model.geom('part2').runPre('arr24');
model.geom('part2').feature('arr24').selection('input').named('csel7');
model.geom('part2').feature('arr24').set('linearsize', 'ceil((nx_batt)/2)');
model.geom('part2').feature('arr24').setIndex('displ', 'd_batt*2', 0);
model.geom('part2').feature('arr24').set('displ', {'d_batt*2' '0' '0'});
model.geom('part2').create('if12', 'If');
model.geom('part2').feature.createAfter('endif12', 'EndIf', 'if12');
model.geom('part2').feature.move('arr24', 70);
model.geom('part2').feature('if12').label('If 12 (ny_batt >1)');
model.geom('part2').feature('if12').set('condition', 'ny_batt >1');
model.geom('part2').run('if12');
model.geom('part2').create('if13', 'If');
model.geom('part2').feature.createAfter('endif13', 'EndIf', 'if13');
model.geom('part2').feature('if13').label('If 13  (nx_batt > 1)');
model.geom('part2').feature('if13').set('condition', 'nx_batt > 1');
model.geom('part2').run('if13');
model.geom('part2').create('blk17', 'Block');
model.geom('part2').feature('blk17').set('size', {'w_pc' '(r_batt*tan(60[deg])-d_sc)/sin(atan((r_batt*tan(60[deg])-d_sc)/r_batt)[rad])+w_pc*tan(90[deg]-beta)' '1'});
model.geom('part2').feature('blk17').setIndex('size', 'h_sc', 2);
model.geom('part2').feature('blk17').set('pos', {'d_batt+w_pc/2-w_pc/cos(-90[deg]+atan((r_batt*tan(60[deg])-d_sc)/r_batt)[rad])+(w_pc/sin(beta))-w_pc' '0' '0'});
model.geom('part2').feature('blk17').setIndex('pos', 'd_sc/2', 1);
model.geom('part2').feature('blk17').setIndex('pos', 'h_batt+h_term', 2);
model.geom('part2').feature('blk17').set('rot', '-90+atan((r_batt*tan(60[deg])-d_sc)/r_batt)[rad]');
model.geom('part2').selection.create('csel8', 'CumulativeSelection');
model.geom('part2').selection('csel8').label('busbar_parallel_top_2');
model.geom('part2').feature('blk17').set('contributeto', 'csel8');
model.geom('part2').run('blk17');
model.geom('part2').create('if14', 'If');
model.geom('part2').feature.createAfter('endif14', 'EndIf', 'if14');
model.geom('part2').feature('if14').label('If 14 (ny_batt > 3)');
model.geom('part2').feature('if14').set('condition', 'ny_batt > 3');
model.geom('part2').run('if14');
model.geom('part2').create('arr25', 'Array');
model.geom('part2').feature('arr25').selection('input').set({'blk17'});
model.geom('part2').feature('arr25').set('type', 'linear');
model.geom('part2').feature('arr25').set('linearsize', 'floor(ny_batt/2)');
model.geom('part2').feature('arr25').set('displ', {'0' 'd_batt*tan(60[deg])' '0'});
model.geom('part2').feature('arr25').set('contributeto', 'csel8');
model.geom('part2').run('arr25');
model.geom('part2').create('if15', 'If');
model.geom('part2').feature.createAfter('endif15', 'EndIf', 'if15');
model.geom('part2').feature.move('endif15', 78);
model.geom('part2').feature.move('if15', 77);
model.geom('part2').feature('if15').label('If 15 (ny_batt > 2)');
model.geom('part2').feature('if15').set('condition', 'ny_batt > 2');
model.geom('part2').run('if15');
model.geom('part2').create('blk18', 'Block');
model.geom('part2').feature('blk18').set('size', {'w_pc' '(r_batt*tan(60[deg])-d_sc)/sin(atan((r_batt*tan(60[deg])-d_sc)/r_batt)[rad])+w_pc*tan(90[deg]-beta)' '1'});
model.geom('part2').feature('blk18').setIndex('size', 'h_sc', 2);
model.geom('part2').feature('blk18').set('pos', {'r_batt+(w_pc/sin(beta))-sin(beta)*w_pc+d_batt-w_pc/cos(-90[deg]+atan((r_batt*tan(60[deg])-d_sc)/r_batt)[rad])-w_pc/2+(w_pc/sin(beta))' '0' '0'});
model.geom('part2').feature('blk18').setIndex('pos', 'r_batt*tan(60[deg])+d_sc/2-cos(beta)*w_pc', 1);
model.geom('part2').feature('blk18').setIndex('pos', 'h_batt+h_term', 2);
model.geom('part2').feature('blk18').set('rot', '90[deg]-beta');
model.geom('part2').feature('blk18').set('contributeto', 'csel8');
model.geom('part2').feature.createAfter('if16', 'If', 'endif15');
model.geom('part2').feature('if16').label('If 16 (ny_batt > 4)');
model.geom('part2').feature('if16').set('condition', 'ny_batt > 4');
model.geom('part2').feature.createAfter('endif16', 'EndIf', 'if16');
model.geom('part2').run('blk18');
model.geom('part2').create('arr26', 'Array');
model.geom('part2').feature.move('arr26', 81);
model.geom('part2').runPre('arr26');
model.geom('part2').feature('arr26').selection('input').set({'blk18'});
model.geom('part2').feature('arr26').set('type', 'linear');
model.geom('part2').feature('arr26').set('linearsize', 'ceil((ny_batt-2)/2)');
model.geom('part2').feature('arr26').set('displ', {'0' 'd_batt*tan(60[deg])' '0'});
model.geom('part2').feature('arr26').set('contributeto', 'csel8');
model.geom('part2').run('arr26');
model.geom('part2').create('if17', 'If');
model.geom('part2').feature.createAfter('endif17', 'EndIf', 'if17');
model.geom('part2').feature.move('endif17', 85);
model.geom('part2').feature.move('if17', 84);
model.geom('part2').feature('if17').label('If 17 (nx_batt >3)');
model.geom('part2').feature('if17').set('condition', 'nx_batt > 3');
model.geom('part2').run('if17');
model.geom('part2').create('arr27', 'Array');
model.geom('part2').feature('arr27').set('type', 'linear');
model.geom('part2').feature('arr27').selection('input').named('csel8');
model.geom('part2').feature('arr27').set('linearsize', 'floor((nx_batt)/2)');
model.geom('part2').feature('arr27').set('displ', {'d_batt*2' '0' '0'});
model.geom('part2').feature('arr27').set('contributeto', 'csel8');
model.geom('part2').run('arr27');
model.geom('part2').create('copy2', 'Copy');
model.geom('part2').feature.move('copy2', 87);
model.geom('part2').feature.move('copy2', 88);
model.geom('part2').runPre('copy2');
model.geom('part2').feature('copy2').selection('input').named('csel3');
model.geom('part2').feature('copy2').set('contributeto', 'csel6');
model.geom('part2').create('unisel2', 'UnionSelection');
model.geom('part2').feature.move('unisel2', 89);
model.geom('part2').feature('unisel2').set('entitydim', -1);
model.geom('part2').runPre('unisel2');
model.geom('part2').feature('unisel2').set('input', {'csel7' 'csel8'});
model.geom('part2').feature('unisel2').set('contributeto', 'csel3');
model.geom('part2').run('unisel2');
model.geom('part2').create('dif2', 'Difference');
model.geom('part2').feature('dif2').selection('input').named('unisel2');
model.geom('part2').feature('dif2').selection('input2').named('csel6');
model.geom('part2').run('dif2');
model.geom.create('part3', 'Part', 3);
model.geom('part3').label('Part 3: Heat Shrink Straight');
model.geom('part3').create('cyl1', 'Cylinder');
model.geom('part3').feature('cyl1').set('r', 'r_batt');
model.geom('part3').feature('cyl1').set('h', 'h_batt+2*(h_term+h_sc)');
model.geom('part3').feature('cyl1').set('pos', {'0' '0' '-h_term-h_sc'});
model.geom('part3').feature('cyl1').setIndex('layer', 'h_term+h_sc', 0);
model.geom('part3').feature('cyl1').set('layerside', false);
model.geom('part3').feature('cyl1').set('layerbottom', true);
model.geom('part3').feature('cyl1').set('layertop', true);
model.geom('part3').run('cyl1');
model.geom('part3').create('blk1', 'Block');
model.geom('part3').feature('blk1').set('size', {'d_batt/2' 'd_batt/2' '1'});
model.geom('part3').feature('blk1').setIndex('size', 'h_batt+2*(h_term+h_sc)', 2);
model.geom('part3').feature('blk1').set('pos', {'-d_batt/2' '-d_batt/2' '0'});
model.geom('part3').feature('blk1').setIndex('pos', '-h_term-h_sc', 2);
model.geom('part3').feature('blk1').setIndex('layer', 'h_term+h_sc', 0);
model.geom('part3').feature('blk1').set('layertop', true);
model.geom('part3').run('blk1');
model.geom('part3').create('dif1', 'Difference');
model.geom('part3').feature('dif1').selection('input').set({'blk1'});
model.geom('part3').feature('dif1').selection('input2').set({'cyl1'});
model.geom('part3').feature('dif1').set('intbnd', false);
model.geom('part3').run('dif1');
model.geom('part3').create('cyl2', 'Cylinder');
model.geom('part3').feature('cyl2').set('r', 'r_batt');
model.geom('part3').feature('cyl2').set('h', 'h_batt+2*(h_term+h_sc)');
model.geom('part3').feature('cyl2').set('pos', {'0' '(ny_batt-1)*d_batt' '0'});
model.geom('part3').feature('cyl2').setIndex('pos', '-h_term-h_sc', 2);
model.geom('part3').feature('cyl2').setIndex('layer', 'h_term+h_sc', 0);
model.geom('part3').feature('cyl2').set('layerside', false);
model.geom('part3').feature('cyl2').set('layerbottom', true);
model.geom('part3').feature('cyl2').set('layertop', true);
model.geom('part3').run('cyl2');
model.geom('part3').create('blk2', 'Block');
model.geom('part3').feature('blk2').set('size', {'d_batt/2' 'd_batt/2' '1'});
model.geom('part3').feature('blk2').setIndex('size', 'h_batt+2*(h_term+h_sc)', 2);
model.geom('part3').feature('blk2').set('pos', {'-d_batt/2' '(ny_batt-1)*d_batt' '0'});
model.geom('part3').feature('blk2').setIndex('pos', '-h_term-h_sc', 2);
model.geom('part3').feature('blk2').setIndex('layer', 'h_term+h_sc', 0);
model.geom('part3').feature('blk2').set('layertop', true);
model.geom('part3').run('blk2');
model.geom('part3').create('dif2', 'Difference');
model.geom('part3').feature('dif2').selection('input').set({'blk2'});
model.geom('part3').feature('dif2').selection('input2').set({'cyl2'});
model.geom('part3').feature('dif2').set('intbnd', false);
model.geom('part3').run('dif2');
model.geom('part3').create('cyl3', 'Cylinder');
model.geom('part3').feature('cyl3').set('r', 'r_batt');
model.geom('part3').feature('cyl3').set('h', 'h_batt+2*(h_term+h_sc)');
model.geom('part3').feature('cyl3').set('pos', {'(nx_batt-1)*d_batt' '0' '0'});
model.geom('part3').feature('cyl3').setIndex('pos', '-h_term-h_sc', 2);
model.geom('part3').feature('cyl3').setIndex('layer', 'h_term+h_sc', 0);
model.geom('part3').feature('cyl3').set('layerside', false);
model.geom('part3').feature('cyl3').set('layerbottom', true);
model.geom('part3').feature('cyl3').set('layertop', true);
model.geom('part3').run('cyl3');
model.geom('part3').create('blk3', 'Block');
model.geom('part3').feature('blk3').set('size', {'d_batt/2' 'd_batt/2' '1'});
model.geom('part3').feature('blk3').setIndex('size', 'h_batt+2*(h_term+h_sc)', 2);
model.geom('part3').feature('blk3').set('pos', {'(nx_batt-1)*d_batt' '0' '0'});
model.geom('part3').feature('blk3').setIndex('pos', '-d_batt/2', 1);
model.geom('part3').feature('blk3').setIndex('pos', '-h_term-h_sc', 2);
model.geom('part3').feature('blk3').setIndex('layer', 'h_term+h_sc', 0);
model.geom('part3').feature('blk3').set('layertop', true);
model.geom('part3').run('blk3');
model.geom('part3').create('dif3', 'Difference');
model.geom('part3').feature('dif3').selection('input').set({'blk3'});
model.geom('part3').feature('dif3').selection('input2').set({'cyl3'});
model.geom('part3').feature('dif3').set('intbnd', false);
model.geom('part3').feature.duplicate('cyl4', 'cyl3');
model.geom('part3').feature.duplicate('blk4', 'blk3');
model.geom('part3').feature.duplicate('dif4', 'dif3');
model.geom('part3').feature('cyl4').setIndex('pos', '(ny_batt-1)*d_batt', 1);
model.geom('part3').feature('blk4').setIndex('pos', '(ny_batt-1)*d_batt', 1);
model.geom('part3').runPre('dif4');
model.geom('part3').feature('dif4').selection('input').set({'blk4'});
model.geom('part3').feature('dif4').selection('input2').set({'cyl4'});
model.geom('part3').create('blk5', 'Block');
model.geom('part3').feature('blk5').set('size', {'(nx_batt)*d_batt' '1' '1'});
model.geom('part3').feature('blk5').setIndex('size', '(ny_batt)*d_batt', 1);
model.geom('part3').feature('blk5').setIndex('size', 'h_batt+2*(h_term+h_sc)', 2);
model.geom('part3').feature('blk5').set('pos', {'-r_batt' '-r_batt' '0'});
model.geom('part3').feature('blk5').setIndex('pos', '-h_term-h_sc', 2);
model.geom('part3').feature('blk5').setIndex('layer', 'h_term+h_sc', 0);
model.geom('part3').feature('blk5').set('layertop', true);
model.geom('part3').run('blk5');
model.geom('part3').feature.move('dif4', 11);
model.geom('part3').run('blk5');
model.geom('part3').create('dif5', 'Difference');
model.geom('part3').feature('dif5').selection('input').set({'blk5'});
model.geom('part3').feature('dif5').selection('input2').set({'dif1' 'dif2' 'dif3' 'dif4'});
model.geom('part3').run('dif5');
model.geom.create('part4', 'Part', 3);
model.geom('part4').label('Part 4: Heat Shrink Offset');
model.geom('part4').create('wp1', 'WorkPlane');
model.geom('part4').feature('wp1').set('unite', true);
model.geom('part4').feature('wp1').set('quickz', '-h_term-h_sc');
model.geom('part4').feature('wp1').geom.create('if1', 'If');
model.geom('part4').feature('wp1').geom.feature.createAfter('endif1', 'EndIf', 'if1');
model.geom('part4').feature('wp1').geom.feature('if1').label('If 1 (Odd numbers in the y direction)');
model.geom('part4').feature('wp1').geom.feature('if1').set('condition', 'if(floor(ny_batt/2)<ny_batt/2, 0, 1) == 0');
model.geom('part4').feature('wp1').geom.run('if1');
model.geom('part4').feature('wp1').geom.create('if2', 'If');
model.geom('part4').feature('wp1').geom.feature.createAfter('endif2', 'EndIf', 'if2');
model.geom('part4').feature('wp1').geom.feature('if2').label('If 2  (ny_batt == 1)');
model.geom('part4').feature('wp1').geom.feature('if2').set('condition', 'ny_batt == 1');
model.geom('part4').feature('wp1').geom.run('if2');
model.geom('part4').feature('wp1').geom.create('c1', 'Circle');
model.geom('part4').feature('wp1').geom.feature('c1').set('r', 'r_batt');
model.geom('part4').feature('wp1').geom.selection.create('csel1', 'CumulativeSelection');
model.geom('part4').feature('wp1').geom.selection('csel1').label('Heat_shrink');
model.geom('part4').feature('wp1').geom.feature('c1').set('contributeto', 'csel1');
model.geom('part4').feature('wp1').geom.run('c1');
model.geom('part4').feature('wp1').geom.create('if3', 'If');
model.geom('part4').feature('wp1').geom.feature.createAfter('endif3', 'EndIf', 'if3');
model.geom('part4').feature('wp1').geom.feature('if3').label('If 3 (nx_batt > 1)');
model.geom('part4').feature('wp1').geom.feature('if3').set('condition', 'nx_batt >1');
model.geom('part4').feature('wp1').geom.run('if3');
model.geom('part4').feature('wp1').geom.create('c2', 'Circle');
model.geom('part4').feature('wp1').geom.feature('c2').set('r', 'r_batt');
model.geom('part4').feature('wp1').geom.feature('c2').set('pos', {'d_batt*(nx_batt-1)' '0'});
model.geom('part4').feature('wp1').geom.feature('c2').set('contributeto', 'csel1');
model.geom('part4').feature('wp1').geom.run('c2');
model.geom('part4').feature('wp1').geom.create('r1', 'Rectangle');
model.geom('part4').feature('wp1').geom.feature('r1').set('size', {'if(nx_batt >1, d_batt*(nx_batt-1),1)' '1'});
model.geom('part4').feature('wp1').geom.feature('r1').setIndex('size', 'd_batt', 1);
model.geom('part4').feature('wp1').geom.feature('r1').set('pos', {'0' '-r_batt'});
model.geom('part4').feature('wp1').geom.feature('r1').set('contributeto', 'csel1');
model.geom('part4').feature('wp1').geom.run('r1');

model.param.set('ny_batt', '1');
model.param.descr('ny_batt', ['Number of batteries in y' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'direction']);

model.geom('part4').feature('wp1').geom.run('r1');
model.geom('part4').feature('wp1').geom.create('uni1', 'Union');
model.geom('part4').feature('wp1').geom.feature('uni1').selection('input').named('csel1');
model.geom('part4').feature('wp1').geom.feature('uni1').set('intbnd', false);
model.geom('part4').feature('wp1').geom.feature.createAfter('else1', 'Else', 'uni1');
model.geom('part4').feature('wp1').geom.run('uni1');
model.geom('part4').feature('wp1').geom.create('pol1', 'Polygon');
model.geom('part4').feature('wp1').geom.feature('pol1').set('source', 'table');
model.geom('part4').feature('wp1').geom.feature.move('pol1', 8);
model.geom('part4').feature('wp1').geom.feature('pol1').setIndex('table', 'd_batt*(nx_batt-1)', 0, 0);
model.geom('part4').feature('wp1').geom.feature('pol1').setIndex('table', 0, 0, 1);
model.geom('part4').feature('wp1').geom.feature('pol1').setIndex('table', 'd_batt*(nx_batt-1)+r_batt', 1, 0);
model.geom('part4').feature('wp1').geom.feature('pol1').setIndex('table', 'r_batt*tan(60[deg])', 1, 1);
model.geom('part4').feature('wp1').geom.feature('pol1').setIndex('table', 'd_batt*(nx_batt-1)+r_batt+r_batt*cos(30[deg])', 2, 0);
model.geom('part4').feature('wp1').geom.feature('pol1').setIndex('table', 'r_batt*tan(60[deg])-r_batt*sin(30[deg])', 2, 1);
model.geom('part4').feature('wp1').geom.feature('pol1').setIndex('table', 'd_batt*(nx_batt-1)+r_batt*cos(30[deg])', 3, 0);
model.geom('part4').feature('wp1').geom.feature('pol1').setIndex('table', '-r_batt*sin(30[deg])', 3, 1);
model.geom('part4').feature('wp1').geom.feature('pol1').set('contributeto', 'csel1');
model.geom('part4').feature('wp1').geom.feature.duplicate('pol2', 'pol1');
model.geom('part4').feature('wp1').geom.feature('pol2').setIndex('table', 'd_batt*(nx_batt-1)+r_batt', 0, 0);
model.geom('part4').feature('wp1').geom.feature('pol2').setIndex('table', 'r_batt*tan(60[deg])*(ny_batt-2)', 0, 1);
model.geom('part4').feature('wp1').geom.feature('pol2').setIndex('table', 'd_batt*(nx_batt-1)', 1, 0);
model.geom('part4').feature('wp1').geom.feature('pol2').setIndex('table', 'r_batt*tan(60[deg])*(ny_batt-1)', 1, 1);
model.geom('part4').feature('wp1').geom.feature('pol2').setIndex('table', 'd_batt*(nx_batt-1)+r_batt*cos(30[deg])', 2, 0);
model.geom('part4').feature('wp1').geom.feature('pol2').setIndex('table', '(ny_batt-1)*r_batt*tan(60[deg])+r_batt*sin(30[deg])', 2, 1);
model.geom('part4').feature('wp1').geom.feature('pol2').setIndex('table', 'd_batt*(nx_batt-1)+r_batt*cos(30[deg])+r_batt', 3, 0);
model.geom('part4').feature('wp1').geom.feature('pol2').setIndex('table', 'r_batt*tan(60[deg])*(ny_batt-2)+r_batt*sin(30[deg])', 3, 1);
model.geom('part4').feature('wp1').geom.run('pol2');
model.geom('part4').feature('wp1').geom.create('c3', 'Circle');
model.geom('part4').feature('wp1').geom.feature('c3').set('r', 'r_batt');
model.geom('part4').feature('wp1').geom.feature('c3').set('contributeto', 'csel1');
model.geom('part4').feature('wp1').geom.feature.duplicate('c4', 'c3');
model.geom('part4').feature('wp1').geom.feature('c4').set('pos', {'d_batt*(nx_batt-1)' '0'});
model.geom('part4').feature('wp1').geom.feature.duplicate('c5', 'c4');
model.geom('part4').feature('wp1').geom.feature('c5').set('pos', {'0' 'r_batt*tan(60[deg])*(ny_batt-1)'});
model.geom('part4').feature('wp1').geom.feature.duplicate('c6', 'c5');
model.geom('part4').feature('wp1').geom.feature('c6').setIndex('pos', 'd_batt*(nx_batt-1)', 0);
model.geom('part4').feature('wp1').geom.feature.duplicate('c7', 'c6');
model.geom('part4').feature('wp1').geom.feature('c7').setIndex('pos', 'd_batt*(nx_batt-1)+r_batt', 0);
model.geom('part4').feature('wp1').geom.feature('c7').setIndex('pos', 'r_batt*tan(60[deg])*(ny_batt-2)', 1);
model.geom('part4').feature('wp1').geom.feature.duplicate('c8', 'c7');
model.geom('part4').feature('wp1').geom.feature('c8').setIndex('pos', 'r_batt*tan(60[deg])', 1);
model.geom('part4').feature('wp1').geom.run('c8');
model.geom('part4').feature('wp1').geom.create('r2', 'Rectangle');
model.geom('part4').feature('wp1').geom.feature('r2').set('size', {'d_batt*nx_batt' '1'});
model.geom('part4').feature('wp1').geom.feature('r2').setIndex('size', 'if(ny_batt == 1, 1, r_batt*tan(60[deg])*(ny_batt-1))', 1);
model.geom('part4').feature('wp1').geom.feature('r2').set('pos', {'-r_batt' '0'});
model.geom('part4').feature('wp1').geom.feature('r2').set('contributeto', 'csel1');

model.param.set('ny_batt', '4');

model.geom('part4').feature('wp1').geom.feature.move('endif3', 6);
model.geom('part4').feature('wp1').geom.run('r2');
model.geom('part4').feature('wp1').geom.create('if4', 'If');
model.geom('part4').feature('wp1').geom.feature.createAfter('endif4', 'EndIf', 'if4');
model.geom('part4').feature('wp1').geom.feature('if4').label('If 4 (nx_batt > 1)');
model.geom('part4').feature('wp1').geom.feature('if4').set('condition', 'nx_batt > 1');
model.geom('part4').feature('wp1').geom.run('if4');
model.geom('part4').feature('wp1').geom.create('r3', 'Rectangle');
model.geom('part4').feature('wp1').geom.feature('r3').set('size', {'if(nx_batt >1, d_batt*(nx_batt-1),1)' '1'});
model.geom('part4').feature('wp1').geom.feature('r3').setIndex('size', 'r_batt*tan(60[deg])*(ny_batt-1)+d_batt', 1);
model.geom('part4').feature('wp1').geom.feature('r3').set('pos', {'0' '-r_batt'});
model.geom('part4').feature('wp1').geom.feature('r3').set('contributeto', 'csel1');
model.geom('part4').feature('wp1').geom.run('r3');
model.geom('part4').feature('wp1').geom.create('if5', 'If');
model.geom('part4').feature('wp1').geom.feature.createAfter('endif5', 'EndIf', 'if5');
model.geom('part4').feature('wp1').geom.feature.move('endif5', 22);
model.geom('part4').feature('wp1').geom.feature.move('if5', 21);
model.geom('part4').feature('wp1').geom.feature('if5').label('If 5 (ny_batt > 3)');
model.geom('part4').feature('wp1').geom.feature('if5').set('condition', 'ny_batt > 3');
model.geom('part4').feature('wp1').geom.run('if5');
model.geom('part4').feature('wp1').geom.create('r4', 'Rectangle');
model.geom('part4').feature('wp1').geom.feature('r4').set('size', {'r_batt' 'if(ny_batt > 3, r_batt*tan(60[deg])*(ny_batt-3), 1)'});
model.geom('part4').feature('wp1').geom.feature('r4').set('pos', {'d_batt*(nx_batt-1)+r_batt' '0'});
model.geom('part4').feature('wp1').geom.feature('r4').setIndex('pos', 'r_batt*tan(60[deg])', 1);
model.geom('part4').feature('wp1').geom.feature('r4').set('contributeto', 'csel1');

model.param.set('nx_batt', '7');
model.param.descr('nx_batt', ['Number of batteries in x' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'direction']);
model.param.set('ny_batt', '5');

model.geom('part4').feature('wp1').geom.run('r4');
model.geom('part4').feature('wp1').geom.create('uni2', 'Union');
model.geom('part4').feature('wp1').geom.feature('uni2').selection('input').named('csel1');
model.geom('part4').feature('wp1').geom.feature('uni2').set('intbnd', false);
model.geom('part4').feature('wp1').geom.feature.move('uni2', 24);
model.geom('part4').feature('wp1').geom.feature.createAfter('elseif1', 'ElseIf', 'endif2');
model.geom('part4').feature('wp1').geom.feature('elseif1').label('Else If 1 (Even numbers in the y direction)');
model.geom('part4').feature('wp1').geom.feature('elseif1').set('condition', 'if(floor(ny_batt/2)<ny_batt/2, 0, 1) == 1');
model.geom('part4').feature('wp1').geom.run('uni2');
model.geom('part4').feature('wp1').geom.create('pol3', 'Polygon');
model.geom('part4').feature('wp1').geom.feature('pol3').set('source', 'table');
model.geom('part4').feature('wp1').geom.feature.move('pol3', 27);

model.param.set('nx_batt', '6');
model.param.set('ny_batt', '4');

model.geom('part4').feature('wp1').geom.feature('pol3').setIndex('table', '-r_batt*cos(30[deg])', 0, 0);
model.geom('part4').feature('wp1').geom.feature('pol3').setIndex('table', 'r_batt*sin(30[deg])', 0, 1);
model.geom('part4').feature('wp1').geom.feature('pol3').setIndex('table', 'r_batt-r_batt*cos(30[deg])', 1, 0);
model.geom('part4').feature('wp1').geom.feature('pol3').setIndex('table', 'r_batt*sin(30[deg])+r_batt*tan(60[deg])', 1, 1);
model.geom('part4').feature('wp1').geom.feature('pol3').setIndex('table', 'r_batt', 2, 0);
model.geom('part4').feature('wp1').geom.feature('pol3').setIndex('table', 'r_batt*tan(60[deg])+r_batt', 2, 1);
model.geom('part4').feature('wp1').geom.feature('pol3').setIndex('table', 'r_batt*(nx_batt*2-1)', 3, 0);
model.geom('part4').feature('wp1').geom.feature('pol3').setIndex('table', 'r_batt*tan(60[deg])+r_batt', 3, 1);
model.geom('part4').feature('wp1').geom.feature('pol3').setIndex('table', 'r_batt*(nx_batt*2)-(r_batt-r_batt*cos(30[deg]))', 4, 0);
model.geom('part4').feature('wp1').geom.feature('pol3').setIndex('table', 'r_batt*tan(60[deg])-(r_batt-r_batt*sin(30[deg]))', 4, 1);
model.geom('part4').feature('wp1').geom.feature('pol3').setIndex('table', 'r_batt*(nx_batt*2-2)+r_batt*cos(30[deg])', 5, 0);
model.geom('part4').feature('wp1').geom.feature('pol3').setIndex('table', '-r_batt*sin(30[deg])', 5, 1);
model.geom('part4').feature('wp1').geom.feature('pol3').setIndex('table', 'r_batt*(nx_batt*2-2)', 6, 0);
model.geom('part4').feature('wp1').geom.feature('pol3').setIndex('table', '-r_batt', 6, 1);
model.geom('part4').feature('wp1').geom.feature('pol3').setIndex('table', 0, 7, 0);
model.geom('part4').feature('wp1').geom.feature('pol3').setIndex('table', '-r_batt', 7, 1);
model.geom('part4').feature('wp1').geom.feature('pol3').setIndex('table', '-r_batt', 8, 0);
model.geom('part4').feature('wp1').geom.feature('pol3').setIndex('table', 0, 8, 1);
model.geom('part4').feature('wp1').geom.feature('pol3').setIndex('table', '-r_batt*cos(30[deg])', 9, 0);
model.geom('part4').feature('wp1').geom.feature('pol3').setIndex('table', 'r_batt*sin(30[deg])', 9, 1);
model.geom('part4').feature('wp1').geom.feature('pol3').set('contributeto', 'csel1');
model.geom('part4').feature('wp1').geom.run('pol3');
model.geom('part4').feature('wp1').geom.create('c9', 'Circle');
model.geom('part4').feature('wp1').geom.feature('c9').set('r', 'r_batt');
model.geom('part4').feature('wp1').geom.feature('c9').set('contributeto', 'csel1');
model.geom('part4').feature('wp1').geom.feature.duplicate('c10', 'c9');
model.geom('part4').feature('wp1').geom.feature('c10').set('pos', {'d_batt*(nx_batt-1)' '0'});
model.geom('part4').feature('wp1').geom.feature.duplicate('c11', 'c10');
model.geom('part4').feature('wp1').geom.feature('c11').set('pos', {'r_batt' 'r_batt*tan(60[deg])'});
model.geom('part4').feature('wp1').geom.feature.duplicate('c12', 'c11');
model.geom('part4').feature('wp1').geom.feature('c12').setIndex('pos', 'd_batt*(nx_batt-1)+r_batt', 0);
model.geom('part4').feature('wp1').geom.run('c12');
model.geom('part4').feature('wp1').geom.create('uni3', 'Union');
model.geom('part4').feature('wp1').geom.feature('uni3').selection('input').named('csel1');
model.geom('part4').feature('wp1').geom.feature('uni3').set('intbnd', false);
model.geom('part4').feature('wp1').geom.feature('uni3').set('contributeto', 'csel1');
model.geom('part4').feature('wp1').geom.run('uni3');
model.geom('part4').feature('wp1').geom.create('if6', 'If');
model.geom('part4').feature('wp1').geom.feature.createAfter('endif6', 'EndIf', 'if6');
model.geom('part4').feature('wp1').geom.feature('if6').label('If 6 (ny_batt > 3)');
model.geom('part4').feature('wp1').geom.feature('if6').set('condition', 'ny_batt>3');
model.geom('part4').feature('wp1').geom.run('if6');
model.geom('part4').feature('wp1').geom.create('arr1', 'Array');
model.geom('part4').feature('wp1').geom.feature('arr1').selection('input').named('csel1');
model.geom('part4').feature('wp1').geom.feature('arr1').set('type', 'linear');
model.geom('part4').feature('wp1').geom.feature('arr1').set('linearsize', 'if(ny_batt>3, ny_batt/2, 1)');
model.geom('part4').feature('wp1').geom.feature('arr1').set('displ', {'0' 'r_batt*tan(60[deg])+d_batt-(r_batt-r_batt*cos(30[deg]))*2'});
model.geom('part4').feature('wp1').geom.run('arr1');
model.geom('part4').feature('wp1').geom.create('r5', 'Rectangle');
model.geom('part4').feature('wp1').geom.feature('r5').set('size', {'d_batt' 'if(ny_batt>3, r_batt*tan(60[deg])*(ny_batt-2), 1)'});
model.geom('part4').feature('wp1').geom.feature('r5').set('pos', {'-r_batt' '0'});
model.geom('part4').feature('wp1').geom.feature('r5').set('contributeto', 'csel1');
model.geom('part4').feature('wp1').geom.feature.duplicate('r6', 'r5');
model.geom('part4').feature('wp1').geom.feature('r6').set('pos', {'d_batt*(nx_batt-1)' '0'});
model.geom('part4').feature('wp1').geom.feature('r6').setIndex('pos', 'r_batt*tan(60[deg])', 1);
model.geom('part4').feature('wp1').geom.run('r6');
model.geom('part4').feature('wp1').geom.create('uni4', 'Union');
model.geom('part4').feature('wp1').geom.feature('uni4').selection('input').set({'arr1' 'r5' 'r6'});
model.geom('part4').feature('wp1').geom.feature('uni4').set('intbnd', false);
model.geom('part4').feature('wp1').geom.feature('uni4').set('contributeto', 'csel1');
model.geom('part4').run('wp1');
model.geom('part4').feature.create('ext1', 'Extrude');
model.geom('part4').feature('ext1').set('workplane', 'wp1');
model.geom('part4').feature('ext1').selection('input').set({'wp1'});
model.geom('part4').feature('ext1').setIndex('distance', 'h_term+h_sc', 0);
model.geom('part4').feature('ext1').setIndex('distance', 'h_term+h_sc+h_batt', 1);
model.geom('part4').feature('ext1').set('displ', {'0' '0'; '0' '0'});
model.geom('part4').feature('ext1').set('scale', {'1' '1'; '1' '1'});
model.geom('part4').feature('ext1').set('twist', {'0' '0'});
model.geom('part4').feature('ext1').setIndex('distance', 'h_term*2+h_sc*2+h_batt', 2);
model.geom('part4').feature('ext1').set('displ', {'0' '0'; '0' '0'; '0' '0'});
model.geom('part4').feature('ext1').set('scale', {'1' '1'; '1' '1'; '1' '1'});
model.geom('part4').feature('ext1').set('twist', {'0' '0' '0'});
model.geom('part4').run('ext1');
model.geom('geom1').create('if1', 'If');
model.geom('geom1').feature.createAfter('endif1', 'EndIf', 'if1');
model.geom('geom1').feature('if1').label('If 1 (stacking_type == 0)');
model.geom('geom1').feature('if1').set('condition', 'stacking_type == 0');
model.geom('geom1').run('if1');
model.geom('geom1').create('pi1', 'PartInstance');
model.geom('geom1').feature('pi1').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi1').set('part', 'part1');
model.geom('geom1').feature('pi1').setEntry('selkeepobj', 'pi1_csel1', true);
model.geom('geom1').feature('pi1').setEntry('selkeepobj', 'pi1_csel2', true);
model.geom('geom1').feature('pi1').setEntry('selkeepobj', 'pi1_csel3', true);
model.geom('geom1').feature('pi1').setEntry('selkeepdom', 'pi1_csel1.dom', true);
model.geom('geom1').selection.create('csel1', 'CumulativeSelection');
model.geom('geom1').selection('csel1').label('Battery Domain');
model.geom('geom1').feature('pi1').setEntry('selcontributetodom', 'pi1_csel1.dom', 'csel1');
model.geom('geom1').feature('pi1').setEntry('selkeepdom', 'pi1_csel2.dom', true);
model.geom('geom1').selection.create('csel2', 'CumulativeSelection');
model.geom('geom1').selection('csel2').label('Terminal Domain');
model.geom('geom1').feature('pi1').setEntry('selcontributetodom', 'pi1_csel2.dom', 'csel2');
model.geom('geom1').feature('pi1').setEntry('selkeepdom', 'pi1_csel3.dom', true);
model.geom('geom1').selection.create('csel3', 'CumulativeSelection');
model.geom('geom1').selection('csel3').label('Busbar Domain');
model.geom('geom1').feature('pi1').setEntry('selcontributetodom', 'pi1_csel3.dom', 'csel3');
model.geom('geom1').feature('pi1').setEntry('selkeepbnd', 'pi1_csel1.bnd', true);
model.geom('geom1').feature('pi1').setEntry('selkeepbnd', 'pi1_csel2.bnd', true);
model.geom('geom1').feature('pi1').setEntry('selkeepbnd', 'pi1_csel3.bnd', true);
model.geom('geom1').feature('pi1').setEntry('selkeepedg', 'pi1_csel1.edg', true);
model.geom('geom1').feature('pi1').setEntry('selkeepedg', 'pi1_csel2.edg', true);
model.geom('geom1').feature('pi1').setEntry('selkeepedg', 'pi1_csel3.edg', true);
model.geom('geom1').feature('pi1').setEntry('selkeeppnt', 'pi1_csel1.pnt', true);
model.geom('geom1').feature('pi1').setEntry('selkeeppnt', 'pi1_csel2.pnt', true);
model.geom('geom1').feature('pi1').setEntry('selkeeppnt', 'pi1_csel3.pnt', true);
model.geom('geom1').run('pi1');
model.geom('geom1').create('pi2', 'PartInstance');
model.geom('geom1').feature('pi2').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi2').set('part', 'part3');
model.geom('geom1').run('pi2');
model.geom('geom1').create('if2', 'If');
model.geom('geom1').feature.createAfter('endif2', 'EndIf', 'if2');
model.geom('geom1').feature.move('endif2', 5);
model.geom('geom1').feature.move('if2', 4);
model.geom('geom1').feature('if2').label('If 2 (stacking_type == 1)');
model.geom('geom1').feature('if2').set('condition', 'stacking_type == 1');
model.geom('geom1').run('if2');
model.geom('geom1').create('pi3', 'PartInstance');
model.geom('geom1').feature('pi3').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi3').set('part', 'part2');
model.geom('geom1').feature('pi3').setEntry('selkeepobj', 'pi3_csel1', true);
model.geom('geom1').feature('pi3').setEntry('selkeepobj', 'pi3_csel2', true);
model.geom('geom1').feature('pi3').setEntry('selkeepobj', 'pi3_csel3', true);
model.geom('geom1').feature('pi3').setEntry('selkeepdom', 'pi3_csel1.dom', true);
model.geom('geom1').feature('pi3').setEntry('selcontributetodom', 'pi3_csel1.dom', 'csel1');
model.geom('geom1').feature('pi3').setEntry('selkeepdom', 'pi3_csel2.dom', true);
model.geom('geom1').feature('pi3').setEntry('selcontributetodom', 'pi3_csel2.dom', 'csel2');
model.geom('geom1').feature('pi3').setEntry('selkeepdom', 'pi3_csel3.dom', true);
model.geom('geom1').feature('pi3').setEntry('selcontributetodom', 'pi3_csel3.dom', 'csel3');
model.geom('geom1').feature('pi3').setEntry('selkeepbnd', 'pi3_csel1.bnd', true);
model.geom('geom1').feature('pi3').setEntry('selkeepbnd', 'pi3_csel2.bnd', true);
model.geom('geom1').feature('pi3').setEntry('selkeepbnd', 'pi3_csel3.bnd', true);
model.geom('geom1').feature('pi3').setEntry('selkeepedg', 'pi3_csel1.edg', true);
model.geom('geom1').feature('pi3').setEntry('selkeepedg', 'pi3_csel2.edg', true);
model.geom('geom1').feature('pi3').setEntry('selkeepedg', 'pi3_csel3.edg', true);
model.geom('geom1').feature('pi3').setEntry('selkeeppnt', 'pi3_csel1.pnt', true);
model.geom('geom1').feature('pi3').setEntry('selkeeppnt', 'pi3_csel2.pnt', true);
model.geom('geom1').feature('pi3').setEntry('selkeeppnt', 'pi3_csel3.pnt', true);
model.geom('geom1').run('pi3');
model.geom('geom1').create('wp1', 'WorkPlane');
model.geom('geom1').feature('wp1').set('unite', true);
model.geom('geom1').feature('wp1').set('quickz', '-h_term-h_sc');
model.geom('geom1').run('wp1');
model.geom('geom1').feature('wp1').geom.create('if1', 'If');
model.geom('geom1').feature('wp1').geom.feature.createAfter('endif1', 'EndIf', 'if1');
model.geom('geom1').feature('wp1').geom.feature('if1').label('If 1 (Odd numbers in the y direction)');
model.geom('geom1').feature('wp1').geom.feature('if1').set('condition', 'if(floor(ny_batt/2)<ny_batt/2, 0, 1) == 0');
model.geom('geom1').feature('wp1').geom.run('if1');
model.geom('geom1').feature('wp1').geom.create('if2', 'If');
model.geom('geom1').feature('wp1').geom.feature.createAfter('endif2', 'EndIf', 'if2');
model.geom('geom1').feature('wp1').geom.feature('if2').label('If 2  (ny_batt == 1)');
model.geom('geom1').feature('wp1').geom.feature('if2').set('condition', 'ny_batt == 1');
model.geom('geom1').feature('wp1').geom.run('if2');
model.geom('geom1').feature('wp1').geom.create('c1', 'Circle');
model.geom('geom1').feature('wp1').geom.feature('c1').set('r', 'r_batt');
model.geom('geom1').feature('wp1').geom.run('c1');
model.geom('geom1').feature('wp1').geom.create('if3', 'If');
model.geom('geom1').feature('wp1').geom.feature.createAfter('endif3', 'EndIf', 'if3');
model.geom('geom1').feature('wp1').geom.feature('if3').label('If 3 (nx_batt > 1)');
model.geom('geom1').feature('wp1').geom.feature('if3').set('condition', 'nx_batt > 1');
model.geom('geom1').feature('wp1').geom.run('if3');
model.geom('geom1').feature('wp1').geom.create('c2', 'Circle');
model.geom('geom1').feature('wp1').geom.feature('c2').set('r', 'r_batt');
model.geom('geom1').feature('wp1').geom.feature('c2').set('pos', {'d_batt*(nx_batt-1)' '0'});
model.geom('geom1').feature('wp1').geom.run('c2');
model.geom('geom1').feature('wp1').geom.create('r1', 'Rectangle');
model.geom('geom1').feature('wp1').geom.feature('r1').set('size', {'d_batt*(nx_batt-1)' '1'});
model.geom('geom1').feature('wp1').geom.feature('r1').setIndex('size', 'd_batt', 1);
model.geom('geom1').feature('wp1').geom.feature('r1').set('pos', {'0' '-r_batt'});
model.geom('geom1').feature('wp1').geom.run('r1');
model.geom('geom1').feature('wp1').geom.create('uni1', 'Union');
model.geom('geom1').feature('wp1').geom.feature('uni1').selection('input').set({'c1' 'c2' 'r1'});
model.geom('geom1').feature('wp1').geom.feature('uni1').set('intbnd', false);
model.geom('geom1').feature('wp1').geom.feature.createAfter('else1', 'Else', 'endif3');
model.geom('geom1').feature('wp1').geom.run('uni1');
model.geom('geom1').feature('wp1').geom.feature.move('uni1', 7);
model.geom('geom1').feature('wp1').geom.run('uni1');
model.geom('geom1').feature('wp1').geom.create('pol1', 'Polygon');
model.geom('geom1').feature('wp1').geom.feature('pol1').set('source', 'table');
model.geom('geom1').feature('wp1').geom.feature.move('pol1', 9);

model.param.set('ny_batt', '3');

model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', 'd_batt*(nx_batt-1)', 0, 0);
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', 0, 0, 1);
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', 'd_batt*(nx_batt-1)+r_batt', 1, 0);
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', 'r_batt*tan(60[deg])', 1, 1);
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', 'd_batt*(nx_batt-1)+r_batt+r_batt*cos(30[deg])', 2, 0);
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', 'r_batt*tan(60[deg])-r_batt*sin(30[deg])', 2, 1);
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', 'd_batt*(nx_batt-1)+r_batt*cos(30[deg])', 3, 0);
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', '-r_batt*sin(30[deg])', 3, 1);
model.geom('geom1').feature('wp1').geom.feature.duplicate('pol2', 'pol1');
model.geom('geom1').feature('wp1').geom.feature('pol2').setIndex('table', 'd_batt*(nx_batt-1)+r_batt', 0, 0);
model.geom('geom1').feature('wp1').geom.feature('pol2').setIndex('table', 'r_batt*tan(60[deg])*(ny_batt-2)', 0, 1);
model.geom('geom1').feature('wp1').geom.feature('pol2').setIndex('table', 'd_batt*(nx_batt-1)', 1, 0);
model.geom('geom1').feature('wp1').geom.feature('pol2').setIndex('table', 'r_batt*tan(60[deg])*(ny_batt-1)', 1, 1);
model.geom('geom1').feature('wp1').geom.feature('pol2').setIndex('table', 'd_batt*(nx_batt-1)+r_batt*cos(30[deg])', 2, 0);
model.geom('geom1').feature('wp1').geom.feature('pol2').setIndex('table', '(ny_batt-1)*r_batt*tan(60[deg])+r_batt*sin(30[deg])', 2, 1);
model.geom('geom1').feature('wp1').geom.feature('pol2').setIndex('table', 'd_batt*(nx_batt-1)+r_batt*cos(30[deg])+r_batt', 3, 0);
model.geom('geom1').feature('wp1').geom.feature('pol2').setIndex('table', 'r_batt*tan(60[deg])*(ny_batt-2)+r_batt*sin(30[deg])', 3, 1);
model.geom('geom1').feature('wp1').geom.run('pol2');
model.geom('geom1').feature('wp1').geom.create('c3', 'Circle');
model.geom('geom1').feature('wp1').geom.feature('c3').set('r', 'r_batt');
model.geom('geom1').feature('wp1').geom.feature.duplicate('c4', 'c3');
model.geom('geom1').feature('wp1').geom.feature('c4').set('pos', {'d_batt*(nx_batt-1)' '0'});
model.geom('geom1').feature('wp1').geom.feature.duplicate('c5', 'c4');
model.geom('geom1').feature('wp1').geom.feature('c5').set('pos', {'0' 'r_batt*tan(60[deg])*(ny_batt-1)'});
model.geom('geom1').feature('wp1').geom.feature.duplicate('c6', 'c5');
model.geom('geom1').feature('wp1').geom.feature('c6').setIndex('pos', 'd_batt*(nx_batt-1)', 0);
model.geom('geom1').feature('wp1').geom.feature.duplicate('c7', 'c6');
model.geom('geom1').feature('wp1').geom.feature('c7').setIndex('pos', 'd_batt*(nx_batt-1)+r_batt', 0);
model.geom('geom1').feature('wp1').geom.feature('c7').setIndex('pos', 'r_batt*tan(60[deg])*(ny_batt-2)', 1);
model.geom('geom1').feature('wp1').geom.feature.duplicate('c8', 'c7');
model.geom('geom1').feature('wp1').geom.feature('c8').setIndex('pos', 'r_batt*tan(60[deg])', 1);
model.geom('geom1').feature('wp1').geom.run('c8');
model.geom('geom1').feature('wp1').geom.create('r2', 'Rectangle');
model.geom('geom1').feature('wp1').geom.feature('r2').set('size', {'d_batt*nx_batt' '1'});
model.geom('geom1').feature('wp1').geom.feature('r2').setIndex('size', 'r_batt*tan(60[deg])*(ny_batt-1)', 1);
model.geom('geom1').feature('wp1').geom.feature('r2').set('pos', {'-r_batt' '0'});
model.geom('geom1').feature('wp1').geom.run('r2');
model.geom('geom1').feature('wp1').geom.create('if4', 'If');
model.geom('geom1').feature('wp1').geom.feature.createAfter('endif4', 'EndIf', 'if4');
model.geom('geom1').feature('wp1').geom.feature('if4').label('If 4 (nx_batt > 1)');
model.geom('geom1').feature('wp1').geom.feature('if4').set('condition', 'nx_batt > 1');
model.geom('geom1').feature('wp1').geom.run('if4');
model.geom('geom1').feature('wp1').geom.create('r3', 'Rectangle');
model.geom('geom1').feature('wp1').geom.feature('r3').set('size', {'d_batt*(nx_batt-1)' '1'});
model.geom('geom1').feature('wp1').geom.feature('r3').setIndex('size', 'r_batt*tan(60[deg])*(ny_batt-1)+d_batt', 1);
model.geom('geom1').feature('wp1').geom.feature('r3').set('pos', {'0' '-r_batt'});
model.geom('geom1').feature('wp1').geom.run('r3');
model.geom('geom1').feature('wp1').geom.create('if5', 'If');
model.geom('geom1').feature('wp1').geom.feature.createAfter('endif5', 'EndIf', 'if5');
model.geom('geom1').feature('wp1').geom.feature.move('endif5', 22);
model.geom('geom1').feature('wp1').geom.feature.move('if5', 21);
model.geom('geom1').feature('wp1').geom.feature('if5').label('If 5(ny_batt > 3)');
model.geom('geom1').feature('wp1').geom.feature('if5').set('condition', 'ny_batt > 3');

model.param.set('ny_batt', '5');

model.geom('geom1').feature('wp1').geom.run('if5');
model.geom('geom1').feature('wp1').geom.create('r4', 'Rectangle');
model.geom('geom1').feature('wp1').geom.feature('r4').set('size', {'r_batt' 'r_batt*tan(60[deg])*(ny_batt-3)'});
model.geom('geom1').feature('wp1').geom.feature('r4').set('pos', {'d_batt*(nx_batt-1)+r_batt' '0'});
model.geom('geom1').feature('wp1').geom.feature('r4').setIndex('pos', 'r_batt*tan(60[deg])', 1);
model.geom('geom1').feature('wp1').geom.run('endif5');
model.geom('geom1').feature('wp1').geom.create('uni2', 'Union');
model.geom('geom1').feature('wp1').geom.feature('uni2').selection('input').set({'c3' 'c4' 'c5' 'c6' 'c7' 'c8' 'pol1' 'pol2' 'r2' 'r3'  ...
'r4'});
model.geom('geom1').feature('wp1').geom.feature('uni2').set('intbnd', false);
model.geom('geom1').feature('wp1').geom.run('endif2');

model.param.set('ny_batt', '4');

model.geom('geom1').feature('wp1').geom.feature.createAfter('elseif1', 'ElseIf', 'endif2');
model.geom('geom1').feature('wp1').geom.feature('elseif1').label('Else If 1(Even numbers in the y direction)');
model.geom('geom1').feature('wp1').geom.feature('elseif1').set('condition', 'if(floor(ny_batt/2)<ny_batt/2, 0, 1) == 1');
model.geom('geom1').feature('wp1').geom.run('elseif1');
model.geom('geom1').feature('wp1').geom.create('pol3', 'Polygon');
model.geom('geom1').feature('wp1').geom.feature('pol3').set('source', 'table');
model.geom('geom1').feature('wp1').geom.feature('pol3').setIndex('table', '-r_batt*cos(30[deg])', 0, 0);
model.geom('geom1').feature('wp1').geom.feature('pol3').setIndex('table', 'r_batt*sin(30[deg])', 0, 1);
model.geom('geom1').feature('wp1').geom.feature('pol3').setIndex('table', 'r_batt-r_batt*cos(30[deg])', 1, 0);
model.geom('geom1').feature('wp1').geom.feature('pol3').setIndex('table', 'r_batt*sin(30[deg])+r_batt*tan(60[deg])', 1, 1);
model.geom('geom1').feature('wp1').geom.feature('pol3').setIndex('table', 'r_batt', 2, 0);
model.geom('geom1').feature('wp1').geom.feature('pol3').setIndex('table', 'r_batt*tan(60[deg])+r_batt', 2, 1);
model.geom('geom1').feature('wp1').geom.feature('pol3').setIndex('table', 'r_batt*(nx_batt*2-1)', 3, 0);
model.geom('geom1').feature('wp1').geom.feature('pol3').setIndex('table', 'r_batt*tan(60[deg])+r_batt', 3, 1);
model.geom('geom1').feature('wp1').geom.feature('pol3').setIndex('table', 'r_batt*(nx_batt*2)-(r_batt-r_batt*cos(30[deg]))', 4, 0);
model.geom('geom1').feature('wp1').geom.feature('pol3').setIndex('table', 'r_batt*tan(60[deg])-(r_batt-r_batt*sin(30[deg]))', 4, 1);
model.geom('geom1').feature('wp1').geom.feature('pol3').setIndex('table', 'r_batt*(nx_batt*2-2)+r_batt*cos(30[deg])', 5, 0);
model.geom('geom1').feature('wp1').geom.feature('pol3').setIndex('table', '-r_batt*sin(30[deg])', 5, 1);
model.geom('geom1').feature('wp1').geom.feature('pol3').setIndex('table', 'r_batt*(nx_batt*2-2)', 6, 0);
model.geom('geom1').feature('wp1').geom.feature('pol3').setIndex('table', '-r_batt', 6, 1);
model.geom('geom1').feature('wp1').geom.feature('pol3').setIndex('table', 0, 7, 0);
model.geom('geom1').feature('wp1').geom.feature('pol3').setIndex('table', '-r_batt', 7, 1);
model.geom('geom1').feature('wp1').geom.feature('pol3').setIndex('table', '-r_batt', 8, 0);
model.geom('geom1').feature('wp1').geom.feature('pol3').setIndex('table', 0, 8, 1);
model.geom('geom1').feature('wp1').geom.feature('pol3').setIndex('table', '-r_batt*cos(30[deg])', 9, 0);
model.geom('geom1').feature('wp1').geom.feature('pol3').setIndex('table', 'r_batt*sin(30[deg])', 9, 1);
model.geom('geom1').feature('wp1').geom.run('pol3');
model.geom('geom1').feature('wp1').geom.create('c9', 'Circle');
model.geom('geom1').feature('wp1').geom.feature('c9').set('r', 'r_batt');
model.geom('geom1').feature('wp1').geom.feature.duplicate('c10', 'c9');
model.geom('geom1').feature('wp1').geom.feature('c10').set('pos', {'d_batt*(nx_batt-1)' '0'});
model.geom('geom1').feature('wp1').geom.feature.duplicate('c11', 'c10');
model.geom('geom1').feature('wp1').geom.feature('c11').set('pos', {'r_batt' 'r_batt*tan(60[deg])'});
model.geom('geom1').feature('wp1').geom.feature.duplicate('c12', 'c11');
model.geom('geom1').feature('wp1').geom.feature('c12').setIndex('pos', 'd_batt*(nx_batt-1)+r_batt', 0);
model.geom('geom1').feature('wp1').geom.runPre('c12');
model.geom('geom1').feature('wp1').geom.run('c12');
model.geom('geom1').feature('wp1').geom.create('uni3', 'Union');
model.geom('geom1').feature('wp1').geom.feature('uni3').selection('input').set({'c10' 'c11' 'c12' 'c9' 'pol3'});
model.geom('geom1').feature('wp1').geom.feature('uni3').set('intbnd', false);
model.geom('geom1').feature('wp1').geom.run('uni3');
model.geom('geom1').feature('wp1').geom.create('if6', 'If');
model.geom('geom1').feature('wp1').geom.feature.createAfter('endif6', 'EndIf', 'if6');
model.geom('geom1').feature('wp1').geom.feature('if6').label('If 6 (ny_batt > 3)');
model.geom('geom1').feature('wp1').geom.feature('if6').set('condition', 'ny_batt > 3');
model.geom('geom1').feature('wp1').geom.run('if6');
model.geom('geom1').feature('wp1').geom.create('arr1', 'Array');
model.geom('geom1').feature('wp1').geom.feature('arr1').selection('input').set({'uni3'});
model.geom('geom1').feature('wp1').geom.feature('arr1').set('type', 'linear');
model.geom('geom1').feature('wp1').geom.feature('arr1').set('linearsize', 'ny_batt/2');
model.geom('geom1').feature('wp1').geom.feature('arr1').set('displ', {'0' 'r_batt*tan(60[deg])+d_batt-(r_batt-r_batt*cos(30[deg]))*2'});
model.geom('geom1').feature('wp1').geom.run('arr1');
model.geom('geom1').feature('wp1').geom.create('r5', 'Rectangle');
model.geom('geom1').feature('wp1').geom.feature('r5').set('size', {'d_batt' 'r_batt*tan(60[deg])*(ny_batt-2)'});
model.geom('geom1').feature('wp1').geom.feature('r5').set('pos', {'-r_batt' '0'});
model.geom('geom1').feature('wp1').geom.feature.duplicate('r6', 'r5');
model.geom('geom1').feature('wp1').geom.feature('r6').set('pos', {'d_batt*(nx_batt-1)' '0'});
model.geom('geom1').feature('wp1').geom.feature('r6').setIndex('pos', 'r_batt*tan(60[deg])', 1);
model.geom('geom1').feature('wp1').geom.run('r6');
model.geom('geom1').feature('wp1').geom.create('uni4', 'Union');
model.geom('geom1').feature('wp1').geom.feature('uni4').selection('input').set({'arr1' 'r5' 'r6'});
model.geom('geom1').feature('wp1').geom.feature('uni4').set('intbnd', false);
model.geom('geom1').feature('wp1').geom.run('endif1');
model.geom('geom1').run('wp1');
model.geom('geom1').feature.create('ext1', 'Extrude');
model.geom('geom1').feature('ext1').setIndex('distance', 'h_term+h_sc', 0);
model.geom('geom1').feature('ext1').setIndex('distance', 'h_term+h_sc+h_batt', 1);
model.geom('geom1').feature('ext1').set('displ', {'0' '0'; '0' '0'});
model.geom('geom1').feature('ext1').set('scale', {'1' '1'; '1' '1'});
model.geom('geom1').feature('ext1').set('twist', {'0' '0'});
model.geom('geom1').feature('ext1').setIndex('distance', 'h_term*2+h_sc*2+h_batt', 2);
model.geom('geom1').feature('ext1').set('displ', {'0' '0'; '0' '0'; '0' '0'});
model.geom('geom1').feature('ext1').set('scale', {'1' '1'; '1' '1'; '1' '1'});
model.geom('geom1').feature('ext1').set('twist', {'0' '0' '0'});
model.geom('geom1').run('ext1');
model.geom('geom1').run('endif2');
model.geom('geom1').create('pi4', 'PartInstance');
model.geom('geom1').feature('pi4').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi4').set('part', 'part4');
model.geom('geom1').feature.move('pi4', 8);
model.geom('geom1').run('fin');
model.geom('geom1').create('boxsel1', 'BoxSelection');
model.geom('geom1').feature('boxsel1').label('All domains');
model.geom('geom1').run('boxsel1');
model.geom('geom1').create('difsel1', 'DifferenceSelection');
model.geom('geom1').feature('difsel1').label('Air domains');
model.geom('geom1').feature('difsel1').set('add', {'boxsel1'});
model.geom('geom1').feature('difsel1').set('subtract', {'csel1' 'csel2' 'csel3'});
model.geom('geom1').run('difsel1');
model.geom('geom1').create('boxsel2', 'BoxSelection');
model.geom('geom1').feature('boxsel2').label('Swept mesh domains');
model.geom('geom1').feature('boxsel2').set('zmin', 0);
model.geom('geom1').feature('boxsel2').set('zmax', 'h_batt');
model.geom('geom1').feature('boxsel2').set('condition', 'allvertices');
model.geom('geom1').run('boxsel2');

model.cpl.create('maxop1', 'Maximum', 'geom1');
model.cpl('maxop1').selection.named('geom1_csel1_dom');
model.cpl.create('aveop1', 'Average', 'geom1');
model.cpl('aveop1').set('axisym', true);
model.cpl('aveop1').selection.named('geom1_csel1_dom');

model.selection.create('box1', 'Box');
model.selection('box1').model('comp2');
model.selection('box1').label('batteryBottomBoundaries');
model.selection('box1').set('entitydim', 2);
model.selection('box1').set('zmin', '-h_term/2');
model.selection('box1').set('zmax', 'h_term/2');
model.selection('box1').set('condition', 'inside');
model.selection.duplicate('box2', 'box1');
model.selection('box2').label('bottomBoundaries');
model.selection('box2').set('zmin', -Inf);
model.selection('box2').set('zmax', '-h_term-h_sc*0.99');
model.selection.duplicate('box3', 'box2');
model.selection('box3').label('topBoundaries');
model.selection('box3').set('zmin', 'h_batt+h_term+h_sc*0.99');
model.selection('box3').set('zmax', Inf);
model.selection.create('box4', 'Box');
model.selection('box4').model('comp2');
model.selection('box4').label('allBoundaries');
model.selection('box4').set('entitydim', 2);
model.selection.create('dif1', 'Difference');
model.selection('dif1').model('comp2');
model.selection('dif1').label('sideBoundaries');
model.selection('dif1').set('entitydim', 2);
model.selection('dif1').set('add', {'box4'});
model.selection('dif1').set('subtract', {'box2' 'box3'});

model.physics.create('ht', 'HeatTransfer', 'geom1');
model.physics('ht').model('comp2');
model.physics.create('lb2', 'LumpedBattery', 'geom1');
model.physics('lb2').model('comp2');

model.material.create('mat1', 'Common', 'comp2');
model.material('mat1').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('rho', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('cs', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an1', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an2', 'Analytic');
model.material('mat1').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat1').propertyGroup.create('NonlinearModel', 'Nonlinear model');
model.material('mat1').propertyGroup.create('idealGas', 'Ideal gas');
model.material('mat1').propertyGroup('idealGas').func.create('Cp', 'Piecewise');
model.material('mat1').label('Air');
model.material('mat1').set('family', 'air');
model.material('mat1').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('eta').set('pieces', {'200.0' '1600.0' '-8.38278E-7+8.35717342E-8*T^1-7.69429583E-11*T^2+4.6437266E-14*T^3-1.06585607E-17*T^4'});
model.material('mat1').propertyGroup('def').func('eta').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat1').propertyGroup('def').func('Cp').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('def').func('rho').set('expr', 'pA*0.02897/R_const[K*mol/J]/T');
model.material('mat1').propertyGroup('def').func('rho').set('args', {'pA' 'T'});
model.material('mat1').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.material('mat1').propertyGroup('def').func('rho').set('argunit', {'Pa' 'K'});
model.material('mat1').propertyGroup('def').func('rho').set('plotaxis', {'off' 'on'});
model.material('mat1').propertyGroup('def').func('rho').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat1').propertyGroup('def').func('rho').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '293.15'});
model.material('mat1').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('k').set('pieces', {'200.0' '1600.0' '-0.00227583562+1.15480022E-4*T^1-7.90252856E-8*T^2+4.11702505E-11*T^3-7.43864331E-15*T^4'});
model.material('mat1').propertyGroup('def').func('k').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.material('mat1').propertyGroup('def').func('cs').set('expr', 'sqrt(1.4*R_const[K*mol/J]/0.02897*T)');
model.material('mat1').propertyGroup('def').func('cs').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('cs').set('fununit', 'm/s');
model.material('mat1').propertyGroup('def').func('cs').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('cs').set('plotfixedvalue', {'273.15'});
model.material('mat1').propertyGroup('def').func('cs').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.material('mat1').propertyGroup('def').func('an1').set('expr', '-1/rho(pA,T)*d(rho(pA,T),T)');
model.material('mat1').propertyGroup('def').func('an1').set('args', {'pA' 'T'});
model.material('mat1').propertyGroup('def').func('an1').set('fununit', '1/K');
model.material('mat1').propertyGroup('def').func('an1').set('argunit', {'Pa' 'K'});
model.material('mat1').propertyGroup('def').func('an1').set('plotaxis', {'off' 'on'});
model.material('mat1').propertyGroup('def').func('an1').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat1').propertyGroup('def').func('an1').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an2').set('funcname', 'muB');
model.material('mat1').propertyGroup('def').func('an2').set('expr', '0.6*eta(T)');
model.material('mat1').propertyGroup('def').func('an2').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('an2').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('an2').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an2').set('plotfixedvalue', {'200'});
model.material('mat1').propertyGroup('def').func('an2').set('plotargs', {'T' '200' '1600'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.material('mat1').propertyGroup('def').set('molarmass', '');
model.material('mat1').propertyGroup('def').set('bulkviscosity', '');
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)'});
model.material('mat1').propertyGroup('def').set('molarmass', '0.02897[kg/mol]');
model.material('mat1').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.material('mat1').propertyGroup('def').set('ratioofspecificheat', '1.4');
model.material('mat1').propertyGroup('def').set('electricconductivity', {'0[S/m]' '0' '0' '0' '0[S/m]' '0' '0' '0' '0[S/m]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.material('mat1').propertyGroup('def').set('density', 'rho(pA,T)');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.material('mat1').propertyGroup('def').set('soundspeed', 'cs(T)');
model.material('mat1').propertyGroup('def').addInput('temperature');
model.material('mat1').propertyGroup('def').addInput('pressure');
model.material('mat1').propertyGroup('RefractiveIndex').set('n', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('NonlinearModel').set('BA', 'def.gamma-1');
model.material('mat1').propertyGroup('idealGas').func('Cp').label('Piecewise 2');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat1').propertyGroup('idealGas').func('Cp').set('argunit', 'K');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('idealGas').set('Rs', 'R_const/Mn');
model.material('mat1').propertyGroup('idealGas').set('heatcapacity', 'Cp(T)');
model.material('mat1').propertyGroup('idealGas').set('ratioofspecificheat', '1.4');
model.material('mat1').propertyGroup('idealGas').set('molarmass', '0.02897');
model.material('mat1').propertyGroup('idealGas').addInput('temperature');
model.material('mat1').propertyGroup('idealGas').addInput('pressure');
model.material('mat1').materialType('nonSolid');
model.material.create('mat2', 'Common', 'comp2');
model.material('mat2').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat2').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat2').label('Aluminum');
model.material('mat2').set('family', 'aluminum');
model.material('mat2').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('heatcapacity', '900[J/(kg*K)]');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'238[W/(m*K)]' '0' '0' '0' '238[W/(m*K)]' '0' '0' '0' '238[W/(m*K)]'});
model.material('mat2').propertyGroup('def').set('electricconductivity', {'3.774e7[S/m]' '0' '0' '0' '3.774e7[S/m]' '0' '0' '0' '3.774e7[S/m]'});
model.material('mat2').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'23e-6[1/K]' '0' '0' '0' '23e-6[1/K]' '0' '0' '0' '23e-6[1/K]'});
model.material('mat2').propertyGroup('def').set('density', '2700[kg/m^3]');
model.material('mat2').propertyGroup('Enu').set('E', '70[GPa]');
model.material('mat2').propertyGroup('Enu').set('nu', '0.33');
model.material('mat2').propertyGroup('Murnaghan').set('l', '-250[GPa]');
model.material('mat2').propertyGroup('Murnaghan').set('m', '-330[GPa]');
model.material('mat2').propertyGroup('Murnaghan').set('n', '-350[GPa]');
model.material.create('mat3', 'Common', 'comp2');
model.material('mat3').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat3').propertyGroup.create('linzRes', 'Linearized resistivity');
model.material('mat3').label('Copper');
model.material('mat3').set('family', 'copper');
model.material('mat3').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('def').set('electricconductivity', {'5.998e7[S/m]' '0' '0' '0' '5.998e7[S/m]' '0' '0' '0' '5.998e7[S/m]'});
model.material('mat3').propertyGroup('def').set('thermalexpansioncoefficient', {'17e-6[1/K]' '0' '0' '0' '17e-6[1/K]' '0' '0' '0' '17e-6[1/K]'});
model.material('mat3').propertyGroup('def').set('heatcapacity', '385[J/(kg*K)]');
model.material('mat3').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('def').set('density', '8960[kg/m^3]');
model.material('mat3').propertyGroup('def').set('thermalconductivity', {'400[W/(m*K)]' '0' '0' '0' '400[W/(m*K)]' '0' '0' '0' '400[W/(m*K)]'});
model.material('mat3').propertyGroup('Enu').set('E', '110[GPa]');
model.material('mat3').propertyGroup('Enu').set('nu', '0.35');
model.material('mat3').propertyGroup('linzRes').set('rho0', '1.72e-8[ohm*m]');
model.material('mat3').propertyGroup('linzRes').set('alpha', '0.0039[1/K]');
model.material('mat3').propertyGroup('linzRes').set('Tref', '298[K]');
model.material('mat3').propertyGroup('linzRes').addInput('temperature');
model.material('mat1').selection.named('geom1_difsel1');
model.material('mat2').selection.named('geom1_csel2_dom');
model.material('mat3').selection.named('geom1_csel3_dom');
model.material.create('mat4', 'Common', 'comp2');
model.material('mat4').label('Active Battery Material');
model.material('mat4').selection.named('geom1_csel1_dom');
model.material('mat4').set('family', 'custom');
model.material('mat4').set('customspecular', [0.5176470875740051 0.7568627595901489 0.9176470637321472]);
model.material('mat4').set('diffuse', 'custom');
model.material('mat4').set('customdiffuse', [0.21176470816135406 0.5490196347236633 0.7960784435272217]);
model.material('mat4').set('ambient', 'custom');
model.material('mat4').set('customambient', [0 0.34117648005485535 0.5921568870544434]);
model.material('mat4').set('noise', true);
model.material('mat4').set('lighting', 'phong');
model.material('mat4').set('shininess', 64);

model.physics('ht').prop('PhysicalModelProperty').set('Tref', 'T0');
model.physics('ht').feature('init1').set('Tinit', 'T_init');
model.physics('ht').create('bl1', 'BatteryLayers', 3);
model.physics('ht').feature('bl1').selection.named('geom1_csel1_dom');
model.physics('ht').feature('bl1').set('LayerConfiguration', 'SpirallyWound');
model.physics('ht').feature('bl1').set('ThroughLayerConductivity', 'kT_batt_r');
model.physics('ht').feature('bl1').set('InLayerConductivity', 'kT_batt_ang');
model.physics('ht').feature('bl1').set('Density', 'rho_batt');
model.physics('ht').feature('bl1').set('HeatCapacity', 'Cp_batt');
model.physics('ht').create('hf1', 'HeatFluxBoundary', 2);
model.physics('ht').feature('hf1').label('Heat Flux 1- Sides');
model.physics('ht').feature('hf1').selection.named('dif1');
model.physics('ht').feature('hf1').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht').feature('hf1').set('h', 'ht');
model.physics('ht').feature('hf1').set('Text', 'T_init');
model.physics('ht').feature.duplicate('hf2', 'hf1');
model.physics('ht').feature('hf2').label('Heat Flux 2- Top');
model.physics('ht').feature('hf2').selection.named('box3');
model.physics('ht').feature('hf2').set('h', 'ht_top');
model.physics('ht').feature.duplicate('hf3', 'hf2');
model.physics('ht').feature('hf3').label('Heat Flux 3- Bottom');
model.physics('ht').feature('hf3').selection.named('box2');
model.physics('ht').feature('hf3').set('h', 'ht_bottom');
model.physics('lb2').selection.named('geom1_csel1_dom');
model.physics('lb2').prop('BatterySettings').set('I_app', 'I_1C*C_rate*C_sign*n_batt');
model.physics('lb2').prop('BatterySettings').set('Q_cell0', 'Q_cell*n_batt');
model.physics('lb2').prop('BatterySettings').set('SOC_cell0', 'initial_SOC');
model.physics('lb2').feature('cep1').set('OpenCircuitVoltageInput', 'fromdef');
model.physics('lb2').feature('cep1').set('Eocvdef', 'int2');
model.physics('lb2').feature('cep1').set('Tref', 'T0');
model.physics('lb2').feature('vl1').set('eta_ir1C', 'opt_eta_IR_1C');
model.physics('lb2').feature('vl1').set('J0', 'opt_J0');
model.physics('lb2').feature('vl1').set('IncludeConcentrationOverpotential', true);
model.physics('lb2').feature('vl1').set('tau', 'opt_tau');

model.multiphysics.create('ech1', 'ElectrochemicalHeating', 'geom1', 3);

model.mesh('mesh1').automatic(false);
model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature.move('ftri1', 1);
model.mesh('mesh1').feature('ftri1').selection.named('box1');
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe1').selection.named('geom1_boxsel2');
model.mesh('mesh1').run('swe1');
model.mesh('mesh1').run('ftet1');
model.mesh('mesh1').run('ftet1');
model.mesh('mesh1').run;

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/lb', true);
model.study('std1').feature('time').setSolveFor('/physics/ht', false);
model.study('std1').feature('time').setSolveFor('/physics/lb2', false);
model.study('std1').feature('time').setSolveFor('/multiphysics/ech1', false);
model.study('std1').feature('time').set('tunit', 'h');
model.study('std1').feature('time').set('tlist', 'range(0, (abs(final_SOC-initial_SOC)/C_rate)/(output_steps-1),abs(final_SOC-initial_SOC)/C_rate)');
model.study('std1').feature('time').set('useadvanceddisable', true);
model.study('std1').feature('time').set('disabledphysics', {'ht' 'lb2'});
model.study('std1').feature('time').set('disabledcoupling', {'ech1'});
model.study('std1').setGenPlots(false);
model.study('std1').create('lsqo', 'LSQOptimization');
model.study('std1').feature('lsqo').set('source', 'resultTable');
model.study('std1').feature('lsqo').setEntry('modelExpression', 'col2', 'comp1.lb.E_cell');
model.study('std1').feature('lsqo').setEntry('unit', 'col2', 'V');
model.study('std1').feature('lsqo').setEntry('columnType', 'col3', 'none');
model.study('std1').feature('lsqo').setIndex('pname', 'beta', 0);
model.study('std1').feature('lsqo').setIndex('initval', 'atan((r_batt*tan(60[deg])-d_sc)/r_batt)[rad]', 0);
model.study('std1').feature('lsqo').setIndex('scale', 1, 0);
model.study('std1').feature('lsqo').setIndex('lbound', '', 0);
model.study('std1').feature('lsqo').setIndex('ubound', '', 0);
model.study('std1').feature('lsqo').setIndex('pname', 'beta', 0);
model.study('std1').feature('lsqo').setIndex('initval', 'atan((r_batt*tan(60[deg])-d_sc)/r_batt)[rad]', 0);
model.study('std1').feature('lsqo').setIndex('scale', 1, 0);
model.study('std1').feature('lsqo').setIndex('lbound', '', 0);
model.study('std1').feature('lsqo').setIndex('ubound', '', 0);
model.study('std1').feature('lsqo').setIndex('pname', 'C_rate', 1);
model.study('std1').feature('lsqo').setIndex('initval', 4, 1);
model.study('std1').feature('lsqo').setIndex('scale', 1, 1);
model.study('std1').feature('lsqo').setIndex('lbound', '', 1);
model.study('std1').feature('lsqo').setIndex('ubound', '', 1);
model.study('std1').feature('lsqo').setIndex('pname', 'C_rate', 1);
model.study('std1').feature('lsqo').setIndex('initval', 4, 1);
model.study('std1').feature('lsqo').setIndex('scale', 1, 1);
model.study('std1').feature('lsqo').setIndex('lbound', '', 1);
model.study('std1').feature('lsqo').setIndex('ubound', '', 1);
model.study('std1').feature('lsqo').setIndex('pname', 'C_sign', 2);
model.study('std1').feature('lsqo').setIndex('initval', 'sign(final_SOC-initial_SOC)', 2);
model.study('std1').feature('lsqo').setIndex('scale', 1, 2);
model.study('std1').feature('lsqo').setIndex('lbound', '', 2);
model.study('std1').feature('lsqo').setIndex('ubound', '', 2);
model.study('std1').feature('lsqo').setIndex('pname', 'C_sign', 2);
model.study('std1').feature('lsqo').setIndex('initval', 'sign(final_SOC-initial_SOC)', 2);
model.study('std1').feature('lsqo').setIndex('scale', 1, 2);
model.study('std1').feature('lsqo').setIndex('lbound', '', 2);
model.study('std1').feature('lsqo').setIndex('ubound', '', 2);
model.study('std1').feature('lsqo').setIndex('pname', 'eta_IR_1C', 0);
model.study('std1').feature('lsqo').setIndex('scale', 0.01, 0);
model.study('std1').feature('lsqo').setIndex('pname', 'invJ0', 1);
model.study('std1').feature('lsqo').setIndex('pname', 'tau', 2);
model.study('std1').feature('lsqo').setIndex('scale', 1000, 2);
model.study('std1').feature('lsqo').set('opttolinner', 'opt_tol');
model.study('std1').feature('lsqo').set('lsqdatamethod', 'lsq');
model.study('std1').feature('lsqo').set('useobjtable', false);
model.study('std1').feature('lsqo').set('probesel', 'manual');
model.study('std1').feature('lsqo').set('plot', true);

model.sol.create('sol1');
model.sol('sol1').study('std1');

model.study('std1').feature('lsqo').set('lsqmessage', {});

model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_lb_vl1_SOC').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_lb_vl1_SOC').set('scaleval', '1');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('o1', 'Optimization');
model.sol('sol1').feature('o1').set('control', 'lsqo');
model.sol('sol1').feature('o1').create('t1', 'TimeAttrib');
model.sol('sol1').feature('o1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('o1').feature('t1').set('eventout', true);
model.sol('sol1').feature('o1').feature('t1').set('reacf', true);
model.sol('sol1').feature('o1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('o1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('o1').feature('t1').set('initialstepbdfactive', true);
model.sol('sol1').feature('o1').feature('t1').set('initialstepbdf', '(1)[s]');
model.sol('sol1').feature('o1').feature('t1').set('control', 'time');
model.sol('sol1').feature('o1').feature('t1').set('tlistlsq', [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300]);
model.sol('sol1').feature('o1').feature('t1').set('lsqtimesout', ['      1.00' newline '      2.00' newline '      3.00' newline '      4.00' newline '      5.00' newline '      6.00' newline '      7.00' newline '      8.00' newline '      9.00' newline '      10.0' newline '      11.0' newline '      12.0' newline '      13.0' newline '      14.0' newline '      15.0' newline '      16.0' newline '      17.0' newline '      18.0' newline '      19.0' newline '      20.0' newline '      21.0' newline '      22.0' newline '      23.0' newline '      24.0' newline '      25.0' newline '      26.0' newline '      27.0' newline '      28.0' newline '      29.0' newline '      30.0' newline '      31.0' newline '      32.0' newline '      33.0' newline '      34.0' newline '      35.0' newline '      36.0' newline '      37.0' newline '      38.0' newline '      39.0' newline '      40.0' newline '      41.0' newline '      42.0' newline '      43.0' newline '      44.0' newline '      45.0' newline '      46.0' newline '      47.0' newline '      48.0' newline '      49.0' newline '      50.0' newline '      51.0' newline '      52.0' newline '      53.0' newline '      54.0' newline '      55.0' newline '      56.0' newline '      57.0' newline '      58.0' newline '      59.0' newline '      60.0' newline '      61.0' newline '      62.0' newline '      63.0' newline '      64.0' newline '      65.0' newline '      66.0' newline '      67.0' newline '      68.0' newline '      69.0' newline '      70.0' newline '      71.0' newline '      72.0' newline '      73.0' newline '      74.0' newline '      75.0' newline '      76.0' newline '      77.0' newline '      78.0' newline '      79.0' newline '      80.0' newline '      81.0' newline '      82.0' newline '      83.0' newline '      84.0' newline '      85.0' newline '      86.0' newline '      87.0' newline '      88.0' newline '      89.0' newline '      90.0' newline '      91.0' newline '      92.0' newline '      93.0' newline '      94.0' newline '      95.0' newline '      96.0' newline '      97.0' newline '      98.0' newline '      99.0' newline '       100' newline '       101' newline '       102' newline '       103' newline '       104' newline '       105' newline '       106' newline '       107' newline '       108' newline '       109' newline '       110' newline '       111' newline '       112' newline '       113' newline '       114' newline '       115' newline '       116' newline '       117' newline '       118' newline '       119' newline '       120' newline '       121' newline '       122' newline '       123' newline '       124' newline '       125' newline '       126' newline '       127' newline '       128' newline '       129' newline '       130' newline '       131' newline '       132' newline '       133' newline '       134' newline '       135' newline '       136' newline '       137' newline '       138' newline '       139' newline '       140' newline '       141' newline '       142' newline '       143' newline '       144' newline '       145' newline '       146' newline '       147' newline '       148' newline '       149' newline '       150' newline '       151' newline '       152' newline '       153' newline '       154' newline '       155' newline '       156' newline '       157' newline '       158' newline '       159' newline '       160' newline '       161' newline '       162' newline '       163' newline '       164' newline '       165' newline '       166' newline '       167' newline '       168' newline '       169' newline '       170' newline '       171' newline '       172' newline '       173' newline '       174' newline '       175' newline '       176' newline '       177' newline '       178' newline '       179' newline '       180' newline '       181' newline '       182' newline '       183' newline '       184' newline '       185' newline '       186' newline '       187' newline '       188' newline '       189' newline '       190' newline '       191' newline '       192' newline '       193' newline '       194' newline '       195' newline '       196' newline '       197' newline '       198' newline '       199' newline '       200' newline '       201' newline '       202' newline '       203' newline '       204' newline '       205' newline '       206' newline '       207' newline '       208' newline '       209' newline '       210' newline '       211' newline '       212' newline '       213' newline '       214' newline '       215' newline '       216' newline '       217' newline '       218' newline '       219' newline '       220' newline '       221' newline '       222' newline '       223' newline '       224' newline '       225' newline '       226' newline '       227' newline '       228' newline '       229' newline '       230' newline '       231' newline '       232' newline '       233' newline '       234' newline '       235' newline '       236' newline '       237' newline '       238' newline '       239' newline '       240' newline '       241' newline '       242' newline '       243' newline '       244' newline '       245' newline '       246' newline '       247' newline '       248' newline '       249' newline '       250' newline '       251' newline '       252' newline '       253' newline '       254' newline '       255' newline '       256' newline '       257' newline '       258' newline '       259' newline '       260' newline '       261' newline '       262' newline '       263' newline '       264' newline '       265' newline '       266' newline '       267' newline '       268' newline '       269' newline '       270' newline '       271' newline '       272' newline '       273' newline '       274' newline '       275' newline '       276' newline '       277' newline '       278' newline '       279' newline '       280' newline '       281' newline '       282' newline '       283' newline '       284' newline '       285' newline '       286' newline '       287' newline '       288' newline '       289' newline '       290' newline '       291' newline '       292' newline '       293' newline '       294' newline '       295' newline '       296' newline '       297' newline '       298' newline '       299' newline '       300' newline ]);
model.sol('sol1').feature('o1').feature('t1').set('tout', 'tlist');
model.sol('sol1').feature('o1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('o1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('o1').feature('t1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('o1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');

model.probe('var1').genResult('none');

model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').label('Cell Potential and Load (lb)');
model.result('pg2').set('ylabel', 'Cell potential (V)');
model.result('pg2').set('showsecylabel', 'on');
model.result('pg2').set('twoyaxes', true);
model.result('pg2').set('legendpos', 'lowerleft');
model.result('pg2').set('data', 'dset1');
model.result('pg2').set('defaultPlotID', 'BFCMeshStudyResultDefaultsComponents/icom32/pdef1/pcond1/pg1');
model.result('pg2').feature.create('glob1', 'Global');
model.result('pg2').feature('glob1').set('showsolutionparams', 'on');
model.result('pg2').feature('glob1').set('expr', {'comp1.lb.E_cell'});
model.result('pg2').feature('glob1').set('xdatasolnumtype', 'inner');
model.result('pg2').feature('glob1').set('showsolutionparams', 'on');
model.result('pg2').feature('glob1').set('xdatasolnumtype', 'inner');
model.result('pg2').feature('glob1').set('showsolutionparams', 'on');
model.result('pg2').feature('glob1').set('xdatasolnumtype', 'inner');
model.result('pg2').feature('glob1').set('showsolutionparams', 'on');
model.result('pg2').feature('glob1').set('xdatasolnumtype', 'inner');
model.result('pg2').feature('glob1').set('showsolutionparams', 'on');
model.result('pg2').feature('glob1').set('xdatasolnumtype', 'inner');
model.result('pg2').feature('glob1').set('data', 'parent');
model.result('pg2').feature.create('glob2', 'Global');
model.result('pg2').feature('glob2').set('showsolutionparams', 'on');
model.result('pg2').feature('glob2').set('expr', {'comp1.lb.Eocv_cell'});
model.result('pg2').feature('glob2').set('xdatasolnumtype', 'inner');
model.result('pg2').feature('glob2').set('showsolutionparams', 'on');
model.result('pg2').feature('glob2').set('xdatasolnumtype', 'inner');
model.result('pg2').feature('glob2').set('showsolutionparams', 'on');
model.result('pg2').feature('glob2').set('xdatasolnumtype', 'inner');
model.result('pg2').feature('glob2').set('showsolutionparams', 'on');
model.result('pg2').feature('glob2').set('xdatasolnumtype', 'inner');
model.result('pg2').feature('glob2').set('showsolutionparams', 'on');
model.result('pg2').feature('glob2').set('xdatasolnumtype', 'inner');
model.result('pg2').feature('glob2').set('data', 'parent');
model.result('pg2').feature.create('glob3', 'Global');
model.result('pg2').feature('glob3').set('showsolutionparams', 'on');
model.result('pg2').feature('glob3').set('plotonsecyaxis', true);
model.result('pg2').feature('glob3').set('expr', {'comp1.lb.I_cell'});
model.result('pg2').feature('glob3').set('xdatasolnumtype', 'inner');
model.result('pg2').feature('glob3').set('showsolutionparams', 'on');
model.result('pg2').feature('glob3').set('xdatasolnumtype', 'inner');
model.result('pg2').feature('glob3').set('showsolutionparams', 'on');
model.result('pg2').feature('glob3').set('xdatasolnumtype', 'inner');
model.result('pg2').feature('glob3').set('showsolutionparams', 'on');
model.result('pg2').feature('glob3').set('xdatasolnumtype', 'inner');
model.result('pg2').feature('glob3').set('showsolutionparams', 'on');
model.result('pg2').feature('glob3').set('xdatasolnumtype', 'inner');
model.result('pg2').feature('glob3').set('data', 'parent');

model.sol('sol1').runAll;

model.result.remove('pg2');

model.study('std1').feature('lsqo').set('plotgroup', 'Default');
model.study.create('std2');
model.study('std2').create('time', 'Transient');
model.study('std2').feature('time').setSolveFor('/physics/lb', true);
model.study('std2').feature('time').setSolveFor('/physics/ht', true);
model.study('std2').feature('time').setSolveFor('/physics/lb2', true);
model.study('std2').feature('time').setSolveFor('/multiphysics/ech1', true);
model.study('std2').feature('time').set('tunit', 'h');
model.study('std2').feature('time').set('tlist', 'range(0, (abs(final_SOC-initial_SOC)/C_rate)/(output_steps-1),abs(final_SOC-initial_SOC)/C_rate)');
model.study('std2').feature('time').set('useadvanceddisable', true);
model.study('std2').feature('time').setSolveFor('/physics/lb', false);
model.study('std2').feature('time').set('disabledphysics', {'lb'});
model.study('std2').feature('time').set('plot', true);
model.study('std2').setGenPlots(false);

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'time');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp2_lb2_vl1_SOC').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp2_lb2_vl1_SOC').set('scaleval', '1');
model.sol('sol2').feature('v1').set('control', 'time');
model.sol('sol2').create('t1', 'Time');
model.sol('sol2').feature('t1').set('tlist', 'range(0, (abs(final_SOC-initial_SOC)/C_rate)/(output_steps-1),abs(final_SOC-initial_SOC)/C_rate)');
model.sol('sol2').feature('t1').set('plot', 'on');
model.sol('sol2').feature('t1').set('plotgroup', 'pg1');
model.sol('sol2').feature('t1').set('plotfreq', 'tout');
model.sol('sol2').feature('t1').set('probesel', 'all');
model.sol('sol2').feature('t1').set('probes', {'var1'});
model.sol('sol2').feature('t1').set('probefreq', 'tsteps');
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol2').feature('t1').set('atolmethod', {'comp2_lb2_vl1_SOC' 'global' 'comp2_T' 'global'});
model.sol('sol2').feature('t1').set('atol', {'comp2_lb2_vl1_SOC' '1e-3' 'comp2_T' '1e-3'});
model.sol('sol2').feature('t1').set('atolvaluemethod', {'comp2_lb2_vl1_SOC' 'factor' 'comp2_T' 'factor'});
model.sol('sol2').feature('t1').set('eventout', true);
model.sol('sol2').feature('t1').set('reacf', true);
model.sol('sol2').feature('t1').set('storeudot', true);
model.sol('sol2').feature('t1').set('endtimeinterpolation', true);
model.sol('sol2').feature('t1').set('estrat', 'exclude');
model.sol('sol2').feature('t1').set('maxorder', 2);
model.sol('sol2').feature('t1').set('initialstepbdfactive', true);
model.sol('sol2').feature('t1').set('initialstepbdf', '(1)[s]');
model.sol('sol2').feature('t1').set('control', 'time');
model.sol('sol2').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('t1').create('se1', 'Segregated');
model.sol('sol2').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol2').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol2').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp2_T'});
model.sol('sol2').feature('t1').feature('se1').feature('ss1').set('subdamp', 0.8);
model.sol('sol2').feature('t1').feature('se1').feature('ss1').set('subjtech', 'once');
model.sol('sol2').feature('t1').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t1').feature('d1').label('Direct, heat transfer variables (ht)');
model.sol('sol2').feature('t1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol2').feature('t1').feature('se1').feature('ss1').label('Temperature');
model.sol('sol2').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp2_lb2_vl1_SOC'});
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol2').feature('t1').feature('se1').feature('ss2').label('Battery Variables');
model.sol('sol2').feature('t1').feature('se1').set('segstabacc', 'segaacc');
model.sol('sol2').feature('t1').feature('se1').set('segaaccdim', 5);
model.sol('sol2').feature('t1').feature('se1').set('segaaccmix', 0.9);
model.sol('sol2').feature('t1').feature('se1').set('segaaccdelay', 0);
model.sol('sol2').feature('t1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol2').feature('t1').feature('se1').feature('ll1').set('lowerlimit', 'comp2.T 0 ');
model.sol('sol2').feature('t1').create('i1', 'Iterative');
model.sol('sol2').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol2').feature('t1').feature('i1').set('rhob', 20);
model.sol('sol2').feature('t1').feature('i1').set('maxlinit', 10000);
model.sol('sol2').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol2').feature('t1').feature('i1').label('AMG, heat transfer variables (ht)');
model.sol('sol2').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t1').feature.remove('fcDef');
model.sol('sol2').attach('std2');

model.probe('var1').genResult('none');

model.sol('sol2').runAll;

model.result.numerical.create('gev2', 'EvalGlobal');
model.result.numerical.duplicate('gev3', 'gev2');
model.result.numerical('gev3').label('eta_IR_1C');
model.result.numerical('gev3').setIndex('looplevelinput', 'last', 0);
model.result.numerical('gev3').setIndex('expr', 'eta_IR_1C', 0);
model.result.numerical.duplicate('gev4', 'gev3');
model.result.numerical('gev4').label('invJ0');
model.result.numerical('gev4').setIndex('expr', 'invJ0', 0);
model.result.numerical.duplicate('gev5', 'gev4');
model.result.numerical('gev5').label('tau');
model.result.numerical('gev5').setIndex('expr', 'tau', 0);
model.result.numerical.duplicate('gev6', 'gev5');
model.result.numerical('gev6').label('J0');
model.result.numerical('gev6').setIndex('expr', 'J0', 0);
model.result.numerical.duplicate('gev7', 'gev6');
model.result.numerical('gev7').label('Maximum battery temperature');
model.result.numerical('gev7').set('data', 'dset3');
model.result.numerical('gev7').setIndex('looplevelinput', 'all', 0);
model.result.numerical('gev7').setIndex('expr', 'maxop1(T)', 0);
model.result.numerical('gev7').setIndex('unit', 'degC', 0);
model.result.numerical('gev7').set('dataseries', 'maximum');
model.result.numerical.duplicate('gev8', 'gev7');
model.result.numerical('gev8').label('Average battery temperature');
model.result.numerical('gev8').setIndex('expr', 'aveop1(T)', 0);
model.result.numerical('gev8').set('dataseries', 'average');
model.result.numerical.create('meas1', 'MeasureVolume');
model.result.numerical('meas1').set('data', 'dset3');
model.result.numerical('meas1').setIndex('looplevelinput', 'first', 0);
model.result.numerical('meas1').selection.all;
model.result.table.create('tbl4', 'Table');
model.result.table('tbl4').comments('Volume Measurement 1');
model.result.numerical('meas1').set('table', 'tbl4');
model.result.numerical('meas1').setResult;

model.view('view2').set('showmaterial', true);
model.view('view2').hideEntities.create('hide1');
model.view('view2').hideEntities('hide1').named('geom1_difsel1');
model.view('view2').hideEntities('hide1').label('Hide Air Domain');
model.view('view2').hideEntities.create('hide2');
model.view('view2').hideEntities('hide2').geom('geom1', 1);
model.view('view2').hideEntities('hide2').all;
model.view('view2').hideEntities('hide2').label('Hide All Edges');
model.view('view2').hideEntities.create('hide3');
model.view('view2').hideEntities('hide3').named('geom1_csel3_dom');
model.view('view2').hideEntities('hide3').active(false);

model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').run;
model.result('pg2').label('Experimental Data');
model.result('pg2').set('data', 'none');
model.result('pg2').set('titletype', 'label');
model.result('pg2').set('twoyaxes', true);
model.result('pg2').create('tblp1', 'Table');
model.result('pg2').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg2').feature('tblp1').set('linewidth', 'preference');
model.result('pg2').feature('tblp1').set('xaxisdata', 1);
model.result('pg2').feature('tblp1').set('plotcolumninput', 'manual');
model.result('pg2').feature('tblp1').set('plotcolumns', [2]);
model.result('pg2').feature('tblp1').set('linecolor', 'custom');
model.result('pg2').feature('tblp1').set('customlinecolor', [0 0.501960813999176 0.7529411911964417]);
model.result('pg2').feature('tblp1').set('linewidth', 2);
model.result('pg2').feature('tblp1').set('legend', true);
model.result('pg2').feature('tblp1').set('legendmethod', 'manual');
model.result('pg2').feature('tblp1').setIndex('legends', 'Voltage (V)', 0);
model.result('pg2').feature.duplicate('tblp2', 'tblp1');
model.result('pg2').run;
model.result('pg2').feature('tblp2').set('plotcolumns', [3]);
model.result('pg2').feature('tblp2').set('plotonsecyaxis', true);
model.result('pg2').feature('tblp2').set('customlinecolor', [0.6392157077789307 0.3294117748737335 0.5607843399047852]);
model.result('pg2').feature('tblp2').set('legendmethod', 'automatic');
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('Open Circuit Voltage');
model.result('pg3').set('titletype', 'label');
model.result('pg3').create('tblp1', 'Table');
model.result('pg3').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg3').feature('tblp1').set('linewidth', 'preference');
model.result('pg3').feature('tblp1').set('table', 'tbl2');
model.result('pg3').feature('tblp1').set('linecolor', 'custom');
model.result('pg3').feature('tblp1').set('customlinecolor', [0.21568627655506134 0.48627451062202454 0.5333333611488342]);
model.result('pg3').feature('tblp1').set('linewidth', 2);
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Cell State of Charge');
model.result('pg4').set('titletype', 'manual');
model.result('pg4').set('title', 'Cell State of Charge and Cell Current');
model.result('pg4').create('glob1', 'Global');
model.result('pg4').feature('glob1').set('markerpos', 'datapoints');
model.result('pg4').feature('glob1').set('linewidth', 'preference');
model.result('pg4').feature('glob1').setIndex('expr', 'comp1.lb.SOC_cell', 0);
model.result('pg4').feature('glob1').set('linecolor', 'custom');
model.result('pg4').feature('glob1').set('customlinecolor', [0.21568627655506134 0.5058823823928833 0.5686274766921997]);
model.result('pg4').feature('glob1').set('linewidth', 2);
model.result('pg4').feature.duplicate('glob2', 'glob1');
model.result('pg4').run;
model.result('pg4').feature('glob2').setIndex('expr', 'comp1.lb.I_cell', 0);
model.result('pg4').feature('glob2').set('customlinecolor', [0.6392157077789307 0.3294117748737335 0.5607843399047852]);
model.result('pg4').run;
model.result('pg4').set('twoyaxes', true);
model.result('pg4').setIndex('plotonsecyaxis', true, 1, 1);
model.result('pg4').run;
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').label('Cell Voltage');
model.result('pg5').set('titletype', 'label');
model.result('pg5').set('ylabelactive', true);
model.result('pg5').set('ylabel', 'Cell potential (V)');
model.result('pg5').set('legendpos', 'lowerright');
model.result('pg5').create('glob1', 'Global');
model.result('pg5').feature('glob1').set('markerpos', 'datapoints');
model.result('pg5').feature('glob1').set('linewidth', 'preference');
model.result('pg5').feature('glob1').setIndex('expr', 'comp1.lb.E_cell', 0);
model.result('pg5').feature('glob1').set('linecolor', 'custom');
model.result('pg5').feature('glob1').set('customlinecolor', [0.21568627655506134 0.5058823823928833 0.5686274766921997]);
model.result('pg5').feature('glob1').set('linewidth', 2);
model.result('pg5').feature.duplicate('glob2', 'glob1');
model.result('pg5').run;
model.result('pg5').feature('glob2').setIndex('expr', 'comp1.lb.Eocv_cell', 0);
model.result('pg5').feature('glob2').set('customlinecolor', [0.6392157077789307 0.3294117748737335 0.5607843399047852]);
model.result('pg5').feature.duplicate('glob3', 'glob2');
model.result('pg5').run;
model.result('pg5').feature('glob3').setIndex('expr', 'E_cell_exp(t)[V]', 0);
model.result('pg5').feature('glob3').setIndex('descr', 'Experimental cell voltage', 0);
model.result('pg5').feature('glob3').set('linestyle', 'dotted');
model.result('pg5').feature('glob3').set('customlinecolor', [0.21176470816135406 0.5490196347236633 0.7960784435272217]);
model.result('pg5').run;
model.result('pg5').run;
model.result.duplicate('pg6', 'pg5');
model.result('pg6').run;
model.result('pg6').label('Voltage Losses and Load');
model.result('pg6').set('ylabel', 'Overvoltage (V)');
model.result('pg6').set('twoyaxes', true);
model.result('pg6').run;
model.result('pg6').feature('glob1').setIndex('expr', 'comp1.lb.eta_ir', 0);
model.result('pg6').run;
model.result('pg6').feature('glob2').setIndex('expr', 'comp1.lb.eta_act', 0);
model.result('pg6').run;
model.result('pg6').feature('glob3').setIndex('expr', 'comp1.lb.eta_conc', 0);
model.result('pg6').feature('glob3').setIndex('descr', 'Concentration overpotential', 0);
model.result('pg6').feature.duplicate('glob4', 'glob3');
model.result('pg6').run;
model.result('pg6').feature('glob4').set('plotonsecyaxis', true);
model.result('pg6').feature('glob4').setIndex('expr', 'comp1.lb.I_cell', 0);
model.result('pg6').feature('glob4').set('customlinecolor', [0.5176470875740051 0.7568627595901489 0.9176470637321472]);
model.result('pg6').run;
model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').run;
model.result('pg7').label('Max/Average Battery Temperature');
model.result('pg7').set('data', 'dset3');
model.result('pg7').set('titletype', 'manual');
model.result('pg7').set('title', 'Battery Temperature (degC)');
model.result('pg7').set('xlabelactive', true);
model.result('pg7').set('xlabel', 'Time (h)');
model.result('pg7').set('ylabelactive', true);
model.result('pg7').set('ylabel', 'Temperature (degC)');
model.result('pg7').set('legendpos', 'lowerright');
model.result('pg7').create('glob1', 'Global');
model.result('pg7').feature('glob1').set('markerpos', 'datapoints');
model.result('pg7').feature('glob1').set('linewidth', 'preference');
model.result('pg7').feature('glob1').setIndex('expr', 'maxop1(T)', 0);
model.result('pg7').feature('glob1').setIndex('unit', 'degC', 0);
model.result('pg7').feature('glob1').setIndex('descr', 'Maximum Temperature', 0);
model.result('pg7').feature('glob1').set('linecolor', 'custom');
model.result('pg7').feature('glob1').set('customlinecolor', [0.6392157077789307 0.3294117748737335 0.5607843399047852]);
model.result('pg7').feature('glob1').set('linewidth', 2);
model.result('pg7').feature('glob1').set('linemarker', 'circle');
model.result('pg7').feature.duplicate('glob2', 'glob1');
model.result('pg7').run;
model.result('pg7').feature('glob2').setIndex('expr', 'aveop1(T)', 0);
model.result('pg7').feature('glob2').setIndex('descr', 'Average Temperature', 0);
model.result('pg7').feature('glob2').set('customlinecolor', [0.21176470816135406 0.5490196347236633 0.7960784435272217]);
model.result('pg7').run;

model.study('std2').feature('time').set('plotgroup', 'pg7');
model.study('std2').feature('time').set('probesel', 'none');

model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').run;
model.result('pg8').label('Temperature - Slice');
model.result('pg8').set('data', 'dset3');
model.result('pg8').create('slc1', 'Slice');
model.result('pg8').feature('slc1').set('unit', 'degC');
model.result('pg8').feature('slc1').set('quickplane', 'xy');
model.result('pg8').feature('slc1').set('colortable', 'HeatCamera');
model.result('pg8').run;
model.result.create('pg9', 'PlotGroup3D');
model.result('pg9').run;
model.result('pg9').label('Temperature - Volume');
model.result('pg9').set('data', 'dset3');
model.result('pg9').create('vol1', 'Volume');
model.result('pg9').feature('vol1').set('colortable', 'HeatCamera');
model.result('pg9').feature('vol1').set('unit', 'degC');
model.result('pg9').run;
model.result.export.create('anim1', 'Animation');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('fontsize', '9');
model.result.export('anim1').set('colortheme', 'globaltheme');
model.result.export('anim1').set('customcolor', [1 1 1]);
model.result.export('anim1').set('background', 'color');
model.result.export('anim1').set('gltfincludelines', 'on');
model.result.export('anim1').set('title1d', 'on');
model.result.export('anim1').set('legend1d', 'on');
model.result.export('anim1').set('logo1d', 'on');
model.result.export('anim1').set('options1d', 'on');
model.result.export('anim1').set('title2d', 'on');
model.result.export('anim1').set('legend2d', 'on');
model.result.export('anim1').set('logo2d', 'on');
model.result.export('anim1').set('options2d', 'off');
model.result.export('anim1').set('title3d', 'on');
model.result.export('anim1').set('legend3d', 'on');
model.result.export('anim1').set('logo3d', 'on');
model.result.export('anim1').set('options3d', 'off');
model.result.export('anim1').set('axisorientation', 'on');
model.result.export('anim1').set('grid', 'on');
model.result.export('anim1').set('axes1d', 'on');
model.result.export('anim1').set('axes2d', 'on');
model.result.export('anim1').set('showgrid', 'on');
model.result.export('anim1').set('plotgroup', 'pg9');
model.result.export('anim1').set('solnumtype', 'inner');

model.title([]);

model.description('');

model.label('li_battery_pack_designer_embedded.mph');

model.result.export('anim1').showFrame;
model.result.report.create('rpt1', 'Report');
model.result.report('rpt1').set('templatesource', 'brief');
model.result.report('rpt1').feature.clear;
model.result.report('rpt1').create('tp1', 'TitlePage');
model.result.report('rpt1').create('toc1', 'TableOfContents');
model.result.report('rpt1').create('sec1', 'Section');
model.result.report('rpt1').feature('sec1').set('source', 'custom');
model.result.report('rpt1').feature('sec1').set('heading', 'Global Definitions');
model.result.report('rpt1').feature('sec1').create('root1', 'Model');
model.result.report('rpt1').feature('sec1').create('sec1', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec1').set('source', 'custom');
model.result.report('rpt1').feature('sec1').feature('sec1').set('heading', 'Parameters');
model.result.report('rpt1').feature('sec1').feature('sec1').create('sec1', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec1').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec1').feature('sec1').set('heading', 'Parameters : Geometry Sequence');
model.result.report('rpt1').feature('sec1').feature('sec1').feature('sec1').create('param1', 'Parameter');
model.result.report('rpt1').feature('sec1').feature('sec1').feature('sec1').feature('param1').set('noderef', 'default');
model.result.report('rpt1').feature('sec1').feature('sec1').create('sec2', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec1').feature('sec2').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec1').feature('sec2').set('heading', 'Parameters : Parameter Estimation');
model.result.report('rpt1').feature('sec1').feature('sec1').feature('sec2').create('param1', 'Parameter');
model.result.report('rpt1').feature('sec1').feature('sec1').feature('sec2').feature('param1').set('noderef', 'par2');
model.result.report('rpt1').feature('sec1').feature('sec1').create('sec3', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec1').feature('sec3').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec1').feature('sec3').set('heading', 'Parameters : Thermal Management');
model.result.report('rpt1').feature('sec1').feature('sec1').feature('sec3').create('param1', 'Parameter');
model.result.report('rpt1').feature('sec1').feature('sec1').feature('sec3').feature('param1').set('noderef', 'par3');
model.result.report('rpt1').feature('sec1').create('sec2', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec2').set('source', 'custom');
model.result.report('rpt1').feature('sec1').feature('sec2').set('heading', 'Functions');
model.result.report('rpt1').feature('sec1').feature('sec2').create('sec1', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec1').set('heading', 'Load Cycle Data');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec1').create('func1', 'Functions');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec1').feature('func1').set('noderef', 'int1');
model.result.report('rpt1').feature('sec1').feature('sec2').create('sec2', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec2').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec2').set('heading', 'Open Circuit Voltage');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec2').create('func1', 'Functions');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec2').feature('func1').set('noderef', 'int2');
model.result.report('rpt1').feature('sec1').create('sec3', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec3').set('source', 'custom');
model.result.report('rpt1').feature('sec1').feature('sec3').set('heading', 'Geometry Parts');
model.result.report('rpt1').feature('sec1').feature('sec3').create('sec1', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec1').set('heading', 'Part 1: Straight packing');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec1').create('gpart1', 'GeometryPart');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec1').feature('gpart1').set('noderef', 'part1');
model.result.report('rpt1').feature('sec1').feature('sec3').create('sec2', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec2').set('source', 'custom');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec2').set('heading', 'Parameters');
model.result.report('rpt1').feature('sec1').feature('sec3').create('sec3', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec3').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec3').set('heading', 'Part 2: Offset Packing');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec3').create('gpart1', 'GeometryPart');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec3').feature('gpart1').set('noderef', 'part2');
model.result.report('rpt1').feature('sec1').feature('sec3').create('sec4', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec4').set('source', 'custom');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec4').set('heading', 'Parameters');
model.result.report('rpt1').feature('sec1').feature('sec3').create('sec5', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec5').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec5').set('heading', 'Part 3: Heat Shrink Straight');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec5').create('gpart1', 'GeometryPart');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec5').feature('gpart1').set('noderef', 'part3');
model.result.report('rpt1').feature('sec1').feature('sec3').create('sec6', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec6').set('source', 'custom');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec6').set('heading', 'Parameters');
model.result.report('rpt1').feature('sec1').feature('sec3').create('sec7', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec7').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec7').set('heading', 'Part 4: Heat Shrink Offset');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec7').create('gpart1', 'GeometryPart');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec7').feature('gpart1').set('noderef', 'part4');
model.result.report('rpt1').feature('sec1').feature('sec3').create('sec8', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec8').set('source', 'custom');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec8').set('heading', 'Parameters');
model.result.report('rpt1').create('sec2', 'Section');
model.result.report('rpt1').feature('sec2').set('source', 'custom');
model.result.report('rpt1').feature('sec2').set('heading', 'Component 1');
model.result.report('rpt1').feature('sec2').create('comp1', 'ModelNode');
model.result.report('rpt1').feature('sec2').feature('comp1').set('noderef', 'comp1');
model.result.report('rpt1').feature('sec2').create('sec1', 'Section');
model.result.report('rpt1').feature('sec2').feature('sec1').set('source', 'custom');
model.result.report('rpt1').feature('sec2').feature('sec1').set('heading', 'Definitions');
model.result.report('rpt1').feature('sec2').feature('sec1').create('sec1', 'Section');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec1').set('source', 'custom');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec1').set('heading', 'Probes');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec1').create('sec1', 'Section');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec1').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec1').feature('sec1').set('heading', 'Global Variable Probe 1');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec1').feature('sec1').create('prb1', 'Probe');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec1').feature('sec1').feature('prb1').set('noderef', 'var1');
model.result.report('rpt1').feature('sec2').create('sec2', 'Section');
model.result.report('rpt1').feature('sec2').feature('sec2').set('source', 'firstchild');
model.result.report('rpt1').feature('sec2').feature('sec2').set('heading', 'Lumped Battery');
model.result.report('rpt1').feature('sec2').feature('sec2').create('phys1', 'Physics');
model.result.report('rpt1').feature('sec2').feature('sec2').feature('phys1').set('noderef', 'lb');
model.result.report('rpt1').create('sec3', 'Section');
model.result.report('rpt1').feature('sec3').set('source', 'custom');
model.result.report('rpt1').feature('sec3').set('heading', 'Component 2');
model.result.report('rpt1').feature('sec3').create('comp1', 'ModelNode');
model.result.report('rpt1').feature('sec3').feature('comp1').set('noderef', 'comp2');
model.result.report('rpt1').feature('sec3').create('sec1', 'Section');
model.result.report('rpt1').feature('sec3').feature('sec1').set('source', 'custom');
model.result.report('rpt1').feature('sec3').feature('sec1').set('heading', 'Definitions');
model.result.report('rpt1').feature('sec3').feature('sec1').create('sec1', 'Section');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').set('source', 'custom');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').set('heading', 'Selections');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').create('sec1', 'Section');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').feature('sec1').set('heading', 'batteryBottomBoundaries');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').feature('sec1').create('sel1', 'Selection');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').feature('sec1').feature('sel1').set('noderef', 'box1');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').create('sec2', 'Section');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').feature('sec2').set('source', 'firstchild');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').feature('sec2').set('heading', 'bottomBoundaries');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').feature('sec2').create('sel1', 'Selection');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').feature('sec2').feature('sel1').set('noderef', 'box2');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').create('sec3', 'Section');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').feature('sec3').set('source', 'firstchild');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').feature('sec3').set('heading', 'topBoundaries');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').feature('sec3').create('sel1', 'Selection');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').feature('sec3').feature('sel1').set('noderef', 'box3');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').create('sec4', 'Section');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').feature('sec4').set('source', 'firstchild');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').feature('sec4').set('heading', 'allBoundaries');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').feature('sec4').create('sel1', 'Selection');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').feature('sec4').feature('sel1').set('noderef', 'box4');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').create('sec5', 'Section');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').feature('sec5').set('source', 'firstchild');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').feature('sec5').set('heading', 'sideBoundaries');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').feature('sec5').create('sel1', 'Selection');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').feature('sec5').feature('sel1').set('noderef', 'dif1');
model.result.report('rpt1').feature('sec3').feature('sec1').create('sec2', 'Section');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec2').set('source', 'custom');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec2').set('heading', 'Nonlocal Couplings');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec2').create('sec1', 'Section');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec2').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec2').feature('sec1').set('heading', 'Maximum 1');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec2').feature('sec1').create('cpl1', 'ComponentCoupling');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec2').feature('sec1').feature('cpl1').set('noderef', 'maxop1');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec2').create('sec2', 'Section');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec2').feature('sec2').set('source', 'firstchild');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec2').feature('sec2').set('heading', 'Average 1');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec2').feature('sec2').create('cpl1', 'ComponentCoupling');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec2').feature('sec2').feature('cpl1').set('noderef', 'aveop1');
model.result.report('rpt1').feature('sec3').feature('sec1').create('sec3', 'Section');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec3').set('source', 'custom');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec3').set('heading', 'Coordinate Systems');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec3').create('sec1', 'Section');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec3').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec3').feature('sec1').set('heading', 'Boundary System 1');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec3').feature('sec1').create('csys1', 'CoordinateSystem');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec3').feature('sec1').feature('csys1').set('noderef', 'sys1');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec3').create('sec2', 'Section');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec3').feature('sec2').set('source', 'firstchild');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec3').feature('sec2').set('heading', 'Multicylindrical Coordinate System');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec3').feature('sec2').create('csys1', 'CoordinateSystem');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec3').feature('sec2').feature('csys1').set('noderef', 'BatteryLayers_ht_bl1');
model.result.report('rpt1').feature('sec3').create('sec2', 'Section');
model.result.report('rpt1').feature('sec3').feature('sec2').set('source', 'firstchild');
model.result.report('rpt1').feature('sec3').feature('sec2').set('heading', 'Geometry 1');
model.result.report('rpt1').feature('sec3').feature('sec2').create('geom1', 'Geometry');
model.result.report('rpt1').feature('sec3').feature('sec2').feature('geom1').set('noderef', 'geom1');
model.result.report('rpt1').feature('sec3').create('sec3', 'Section');
model.result.report('rpt1').feature('sec3').feature('sec3').set('source', 'custom');
model.result.report('rpt1').feature('sec3').feature('sec3').set('heading', 'Materials');
model.result.report('rpt1').feature('sec3').feature('sec3').create('sec1', 'Section');
model.result.report('rpt1').feature('sec3').feature('sec3').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec3').feature('sec3').feature('sec1').set('heading', 'Air');
model.result.report('rpt1').feature('sec3').feature('sec3').feature('sec1').create('mat1', 'Material');
model.result.report('rpt1').feature('sec3').feature('sec3').feature('sec1').feature('mat1').set('noderef', 'mat1');
model.result.report('rpt1').feature('sec3').feature('sec3').create('sec2', 'Section');
model.result.report('rpt1').feature('sec3').feature('sec3').feature('sec2').set('source', 'firstchild');
model.result.report('rpt1').feature('sec3').feature('sec3').feature('sec2').set('heading', 'Aluminum');
model.result.report('rpt1').feature('sec3').feature('sec3').feature('sec2').create('mat1', 'Material');
model.result.report('rpt1').feature('sec3').feature('sec3').feature('sec2').feature('mat1').set('noderef', 'mat2');
model.result.report('rpt1').feature('sec3').feature('sec3').create('sec3', 'Section');
model.result.report('rpt1').feature('sec3').feature('sec3').feature('sec3').set('source', 'firstchild');
model.result.report('rpt1').feature('sec3').feature('sec3').feature('sec3').set('heading', 'Copper');
model.result.report('rpt1').feature('sec3').feature('sec3').feature('sec3').create('mat1', 'Material');
model.result.report('rpt1').feature('sec3').feature('sec3').feature('sec3').feature('mat1').set('noderef', 'mat3');
model.result.report('rpt1').feature('sec3').feature('sec3').create('sec4', 'Section');
model.result.report('rpt1').feature('sec3').feature('sec3').feature('sec4').set('source', 'firstchild');
model.result.report('rpt1').feature('sec3').feature('sec3').feature('sec4').set('heading', 'Active Battery Material');
model.result.report('rpt1').feature('sec3').feature('sec3').feature('sec4').create('mat1', 'Material');
model.result.report('rpt1').feature('sec3').feature('sec3').feature('sec4').feature('mat1').set('noderef', 'mat4');
model.result.report('rpt1').feature('sec3').create('sec4', 'Section');
model.result.report('rpt1').feature('sec3').feature('sec4').set('source', 'firstchild');
model.result.report('rpt1').feature('sec3').feature('sec4').set('heading', 'Heat Transfer in Solids');
model.result.report('rpt1').feature('sec3').feature('sec4').create('phys1', 'Physics');
model.result.report('rpt1').feature('sec3').feature('sec4').feature('phys1').set('noderef', 'ht');
model.result.report('rpt1').feature('sec3').create('sec5', 'Section');
model.result.report('rpt1').feature('sec3').feature('sec5').set('source', 'firstchild');
model.result.report('rpt1').feature('sec3').feature('sec5').set('heading', 'Lumped Battery 2');
model.result.report('rpt1').feature('sec3').feature('sec5').create('phys1', 'Physics');
model.result.report('rpt1').feature('sec3').feature('sec5').feature('phys1').set('noderef', 'lb2');
model.result.report('rpt1').feature('sec3').create('sec6', 'Section');
model.result.report('rpt1').feature('sec3').feature('sec6').set('source', 'custom');
model.result.report('rpt1').feature('sec3').feature('sec6').set('heading', 'Multiphysics');
model.result.report('rpt1').feature('sec3').feature('sec6').create('sec1', 'Section');
model.result.report('rpt1').feature('sec3').feature('sec6').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec3').feature('sec6').feature('sec1').set('heading', 'Electrochemical Heating 1');
model.result.report('rpt1').feature('sec3').feature('sec6').feature('sec1').create('mph1', 'Multiphysics');
model.result.report('rpt1').feature('sec3').feature('sec6').feature('sec1').feature('mph1').set('noderef', 'ech1');
model.result.report('rpt1').feature('sec3').create('sec7', 'Section');
model.result.report('rpt1').feature('sec3').feature('sec7').set('source', 'firstchild');
model.result.report('rpt1').feature('sec3').feature('sec7').set('heading', 'Mesh 1');
model.result.report('rpt1').feature('sec3').feature('sec7').create('mesh1', 'Mesh');
model.result.report('rpt1').feature('sec3').feature('sec7').feature('mesh1').set('noderef', 'mesh1');
model.result.report('rpt1').create('sec4', 'Section');
model.result.report('rpt1').feature('sec4').set('source', 'custom');
model.result.report('rpt1').feature('sec4').set('heading', 'Study 1');
model.result.report('rpt1').feature('sec4').create('std1', 'Study');
model.result.report('rpt1').feature('sec4').feature('std1').set('noderef', 'std1');
model.result.report('rpt1').create('sec5', 'Section');
model.result.report('rpt1').feature('sec5').set('source', 'custom');
model.result.report('rpt1').feature('sec5').set('heading', 'Study 2');
model.result.report('rpt1').feature('sec5').create('std1', 'Study');
model.result.report('rpt1').feature('sec5').feature('std1').set('noderef', 'std2');
model.result.report('rpt1').create('sec6', 'Section');
model.result.report('rpt1').feature('sec6').set('source', 'custom');
model.result.report('rpt1').feature('sec6').set('heading', 'Results');
model.result.report('rpt1').feature('sec6').create('sec1', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec1').set('source', 'custom');
model.result.report('rpt1').feature('sec6').feature('sec1').set('heading', 'Datasets');
model.result.report('rpt1').feature('sec6').feature('sec1').create('sec1', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec1').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec6').feature('sec1').feature('sec1').set('heading', 'Study 1/Solution 1');
model.result.report('rpt1').feature('sec6').feature('sec1').feature('sec1').create('dset1', 'DataSet');
model.result.report('rpt1').feature('sec6').feature('sec1').feature('sec1').feature('dset1').set('noderef', 'dset1');
model.result.report('rpt1').feature('sec6').feature('sec1').create('sec2', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec1').feature('sec2').set('source', 'firstchild');
model.result.report('rpt1').feature('sec6').feature('sec1').feature('sec2').set('heading', 'Probe Solution 2');
model.result.report('rpt1').feature('sec6').feature('sec1').feature('sec2').create('dset1', 'DataSet');
model.result.report('rpt1').feature('sec6').feature('sec1').feature('sec2').feature('dset1').set('noderef', 'dset2');
model.result.report('rpt1').feature('sec6').feature('sec1').create('sec3', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec1').feature('sec3').set('source', 'firstchild');
model.result.report('rpt1').feature('sec6').feature('sec1').feature('sec3').set('heading', 'Study 2/Solution 2');
model.result.report('rpt1').feature('sec6').feature('sec1').feature('sec3').create('dset1', 'DataSet');
model.result.report('rpt1').feature('sec6').feature('sec1').feature('sec3').feature('dset1').set('noderef', 'dset3');
model.result.report('rpt1').feature('sec6').create('sec2', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec2').set('source', 'custom');
model.result.report('rpt1').feature('sec6').feature('sec2').set('heading', 'Derived Values');
model.result.report('rpt1').feature('sec6').feature('sec2').create('sec1', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec1').set('heading', 'Global Variable Probe 1');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec1').create('num1', 'DerivedValues');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec1').feature('num1').set('noderef', 'gev1');
model.result.report('rpt1').feature('sec6').feature('sec2').create('sec2', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec2').set('source', 'firstchild');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec2').set('heading', 'Global Evaluation 2');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec2').create('num1', 'DerivedValues');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec2').feature('num1').set('noderef', 'gev2');
model.result.report('rpt1').feature('sec6').feature('sec2').create('sec3', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec3').set('source', 'firstchild');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec3').set('heading', 'eta_IR_1C');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec3').create('num1', 'DerivedValues');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec3').feature('num1').set('noderef', 'gev3');
model.result.report('rpt1').feature('sec6').feature('sec2').create('sec4', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec4').set('source', 'firstchild');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec4').set('heading', 'invJ0');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec4').create('num1', 'DerivedValues');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec4').feature('num1').set('noderef', 'gev4');
model.result.report('rpt1').feature('sec6').feature('sec2').create('sec5', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec5').set('source', 'firstchild');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec5').set('heading', 'tau');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec5').create('num1', 'DerivedValues');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec5').feature('num1').set('noderef', 'gev5');
model.result.report('rpt1').feature('sec6').feature('sec2').create('sec6', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec6').set('source', 'firstchild');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec6').set('heading', 'J0');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec6').create('num1', 'DerivedValues');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec6').feature('num1').set('noderef', 'gev6');
model.result.report('rpt1').feature('sec6').feature('sec2').create('sec7', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec7').set('source', 'firstchild');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec7').set('heading', 'Maximum battery temperature');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec7').create('num1', 'DerivedValues');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec7').feature('num1').set('noderef', 'gev7');
model.result.report('rpt1').feature('sec6').feature('sec2').create('sec8', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec8').set('source', 'firstchild');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec8').set('heading', 'Average battery temperature');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec8').create('num1', 'DerivedValues');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec8').feature('num1').set('noderef', 'gev8');
model.result.report('rpt1').feature('sec6').feature('sec2').create('sec9', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec9').set('source', 'firstchild');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec9').set('heading', 'Volume Measurement 1');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec9').create('num1', 'DerivedValues');
model.result.report('rpt1').feature('sec6').feature('sec2').feature('sec9').feature('num1').set('noderef', 'meas1');
model.result.report('rpt1').feature('sec6').create('sec3', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec3').set('source', 'custom');
model.result.report('rpt1').feature('sec6').feature('sec3').set('heading', 'Tables');
model.result.report('rpt1').feature('sec6').feature('sec3').create('sec1', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec3').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec6').feature('sec3').feature('sec1').set('heading', 'Load Cycle Data');
model.result.report('rpt1').feature('sec6').feature('sec3').feature('sec1').create('mtbl1', 'Table');
model.result.report('rpt1').feature('sec6').feature('sec3').feature('sec1').feature('mtbl1').set('noderef', 'tbl1');
model.result.report('rpt1').feature('sec6').feature('sec3').create('sec2', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec3').feature('sec2').set('source', 'firstchild');
model.result.report('rpt1').feature('sec6').feature('sec3').feature('sec2').set('heading', 'Open Circuit Voltage');
model.result.report('rpt1').feature('sec6').feature('sec3').feature('sec2').create('mtbl1', 'Table');
model.result.report('rpt1').feature('sec6').feature('sec3').feature('sec2').feature('mtbl1').set('noderef', 'tbl2');
model.result.report('rpt1').feature('sec6').feature('sec3').create('sec3', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec3').feature('sec3').set('source', 'firstchild');
model.result.report('rpt1').feature('sec6').feature('sec3').feature('sec3').set('heading', 'Probe Table 3');
model.result.report('rpt1').feature('sec6').feature('sec3').feature('sec3').create('mtbl1', 'Table');
model.result.report('rpt1').feature('sec6').feature('sec3').feature('sec3').feature('mtbl1').set('noderef', 'tbl3');
model.result.report('rpt1').feature('sec6').feature('sec3').create('sec4', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec3').feature('sec4').set('source', 'firstchild');
model.result.report('rpt1').feature('sec6').feature('sec3').feature('sec4').set('heading', 'Table 4');
model.result.report('rpt1').feature('sec6').feature('sec3').feature('sec4').create('mtbl1', 'Table');
model.result.report('rpt1').feature('sec6').feature('sec3').feature('sec4').feature('mtbl1').set('noderef', 'tbl4');
model.result.report('rpt1').feature('sec6').create('sec4', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec4').set('source', 'custom');
model.result.report('rpt1').feature('sec6').feature('sec4').set('heading', 'Plot Groups');
model.result.report('rpt1').feature('sec6').feature('sec4').create('sec1', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec1').set('heading', 'Probe Plot Group 1');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec1').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec1').feature('pg1').set('noderef', 'pg1');
model.result.report('rpt1').feature('sec6').feature('sec4').create('sec2', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec2').set('source', 'firstchild');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec2').set('heading', 'Experimental Data');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec2').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec2').feature('pg1').set('noderef', 'pg2');
model.result.report('rpt1').feature('sec6').feature('sec4').create('sec3', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec3').set('source', 'firstchild');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec3').set('heading', 'Open Circuit Voltage');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec3').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec3').feature('pg1').set('noderef', 'pg3');
model.result.report('rpt1').feature('sec6').feature('sec4').create('sec4', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec4').set('source', 'firstchild');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec4').set('heading', 'Cell State of Charge');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec4').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec4').feature('pg1').set('noderef', 'pg4');
model.result.report('rpt1').feature('sec6').feature('sec4').create('sec5', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec5').set('source', 'firstchild');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec5').set('heading', 'Cell Voltage');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec5').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec5').feature('pg1').set('noderef', 'pg5');
model.result.report('rpt1').feature('sec6').feature('sec4').create('sec6', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec6').set('source', 'firstchild');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec6').set('heading', 'Voltage Losses and Load');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec6').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec6').feature('pg1').set('noderef', 'pg6');
model.result.report('rpt1').feature('sec6').feature('sec4').create('sec7', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec7').set('source', 'firstchild');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec7').set('heading', 'Max/Average Battery Temperature');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec7').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec7').feature('pg1').set('noderef', 'pg7');
model.result.report('rpt1').feature('sec6').feature('sec4').create('sec8', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec8').set('source', 'firstchild');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec8').set('heading', 'Temperature - Slice');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec8').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec8').feature('pg1').set('noderef', 'pg8');
model.result.report('rpt1').feature('sec6').feature('sec4').create('sec9', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec9').set('source', 'firstchild');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec9').set('heading', 'Temperature - Volume');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec9').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec6').feature('sec4').feature('sec9').feature('pg1').set('noderef', 'pg9');
model.result.report('rpt1').set('format', 'docx');
model.result.report('rpt1').set('filename', 'user:///li_battery_estimation_thermal.docx');
model.result.report('rpt1').feature('tp1').set('title', 'Lithium Battery Pack Designer');

model.study('std1').feature('time').setSolveFor('/physics/ht', true);
model.study('std1').feature('time').setSolveFor('/physics/ht', false);
model.study('std1').feature('time').setSolveFor('/physics/lb2', true);
model.study('std1').feature('time').setSolveFor('/physics/lb2', false);
model.study('std1').feature('time').setSolveFor('/multiphysics/ech1', true);
model.study('std1').feature('time').setSolveFor('/multiphysics/ech1', false);
model.study('std1').feature('time').set('useadvanceddisable', false);

model.title('Lithium Battery Pack Designer');

model.description(['This app demonstrates the following:' newline  newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Dynamic help system using subwindows' newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Multiple components (1D and 3D) in a single app' newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Toggle buttons in the ribbon for showing different input, hiding/showing geometry selections, and for dynamic help' newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Geometry parts and parameterized geometries' newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Importing experimental data' newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Options for creating different mesh sizes' newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Resetting a portion of the input parameters or all' newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Generating a results table during the app session' newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Exporting results to a text file or to Microsoft' native2unicode(hex2dec({'00' 'ae'}), 'unicode') ' Excel if a license of LiveLink' native2unicode(hex2dec({'21' '22'}), 'unicode') ' for Excel' native2unicode(hex2dec({'00' 'ae'}), 'unicode') ' is available.' newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Sliders and buttons to control the time step to plot' newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Visualizing results with animations' newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Custom window icons.' newline  newline 'It is a tool for investigating the dynamic voltage and thermal behavior of a battery pack, using load cycle and SOC vs OCV dependence experimental data.' newline  newline 'Parameter estimation of various parameters such as the ohmic overpotential, the diffusion time constant, and the dimensionless exchange current can be performed by the app. The app may then be used to compute a battery pack temperature profile based on the thermal mass and generated heat associated with the voltage losses of the battery.' newline  newline 'Various battery pack design parameters (packing type, number of batteries, configuration, geometry), battery material properties, and operating conditions can be varied.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('li_battery_pack_designer.mph');

model.modelNode.label('Components');

out = model;
