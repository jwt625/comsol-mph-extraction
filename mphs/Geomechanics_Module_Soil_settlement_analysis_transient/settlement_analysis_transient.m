function out = model
%
% settlement_analysis_transient.m
%
% Model exported on May 26 2025, 21:28 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Geomechanics_Module/Soil');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('dl', 'PorousMediaFlowRichards', 'geom1');
model.physics('dl').model('comp1');
model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/dl', true);
model.study('std1').feature('stat').setSolveFor('/physics/solid', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('para', '1', 'Parameter');
model.param.set('rhos', '1743[kg/m^3]', 'Soil density');
model.param.set('rhow', '1000[kg/m^3]', 'Water density');
model.param.set('gammaw', 'rhow*g_const', 'Unit weight of water');
model.param.set('muw', '1e-3[Pa*s]', 'Water dynamic viscosity');
model.param.set('Nu', '0.2', 'Poisson''s ratio');
model.param.set('lambda', '0.22', 'Compression index');
model.param.set('lambda_s', '0.123', 'Compression index for changes in suction');
model.param.set('kappa', '0.006', 'Swelling index');
model.param.set('kappa_s', '0.008', 'Swelling index for changes in suction');
model.param.set('Mb', '1.24', 'Slope of critical state line');
model.param.set('wb', '0.4', 'Weight parameter');
model.param.set('mb', '60[kPa]', 'Soil stiffness parameter');
model.param.set('bb', '10', 'Plastic potential parameter');
model.param.set('sy', '100[kPa]', 'Initial yield value for suction');
model.param.set('kb', '0.6', 'Tension to suction ratio');
model.param.set('pref', '10[kPa]', 'Reference pressure');
model.param.set('pc0', '50[kPa]', 'Initial consolidation pressure');
model.param.set('phi0', '0.4', 'Initial porosity');
model.param.set('e0', 'phi0/(1-phi0)', 'Initial void ratio');
model.param.set('K_sat', '1[m/day]', 'Saturated hydraulic conductivity');
model.param.set('alpha', '2[1/m]', 'Fitting parameter');
model.param.set('U_in', '0.1[m/day]', 'Infiltration rate');
model.param.set('U_out', '0.002[m/day]', 'Evaporation rate');
model.param.set('S_res', '0.23', 'Residual degree of saturation');
model.param.set('S_sat', '1', 'Degree of saturation at full saturation');

model.func.create('int1', 'Interpolation');
model.func('int1').label('Footing Pressure');
model.func('int1').set('funcname', 'F_P');
model.func('int1').setIndex('table', 0, 0, 0);
model.func('int1').setIndex('table', 0, 0, 1);
model.func('int1').setIndex('table', 1, 1, 0);
model.func('int1').setIndex('table', 60, 1, 1);
model.func('int1').setIndex('argunit', 1, 0);
model.func('int1').setIndex('fununit', 'kPa', 0);

model.variable.create('var1');
model.variable('var1').model('comp1');

model.geom('geom1').run;

% To import content from file, use:
% model.variable('var1').loadFile('FILENAME');
model.variable('var1').set('InitSuction', 'rhow*g_const*Y', 'Initial suction');
model.variable('var1').set('Suction', '-p*(dl.Hp<0)', 'Current suction');
model.variable('var1').set('PorePressure', 'p*(dl.Hp>=0)', 'Pore pressure');
model.variable('var1').set('k_rel', 'Se', 'Relative permeability');
model.variable('var1').set('k', 'K_sat*muw/gammaw', 'Soil permeability');
model.variable('var1').set('Cm', 'phi0*(S_sat-S_res)*Se*alpha', 'Specific moisture capacity');
model.variable('var1').set('Se', 'exp(alpha*dl.Hp)*(dl.Hp<0)+1*(dl.Hp>=0)', 'Effective saturation');
model.variable('var1').set('Hp_in', '1/alpha*log((dl.u/K_sat+1)*exp(-alpha*Y)+U_in/K_sat)', 'Gardner steady state solution');
model.variable('var1').set('Hp_out', '1/alpha*log((dl.u/K_sat+1)*exp(-alpha*Y)-U_out/K_sat)', 'Gardner steady state solution');

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', [3 3]);
model.geom('geom1').run('r1');
model.geom('geom1').create('ls1', 'LineSegment');
model.geom('geom1').feature('ls1').set('specify1', 'coord');
model.geom('geom1').feature('ls1').set('coord1', [2.5 3]);
model.geom('geom1').feature('ls1').set('specify2', 'coord');
model.geom('geom1').feature('ls1').set('coord2', [3 3]);
model.geom('geom1').run('ls1');
model.geom('geom1').run;

model.material.create('pmat1', 'PorousMedia', 'comp1');

model.physics('dl').feature('usporous1').set('storageModelType', 'userdef');
model.physics('dl').feature('usporous1').feature('pm1').set('retentionModel', 'userdef');
model.physics('dl').feature('usporous1').feature('pm1').set('Se', 'Se');
model.physics('dl').feature('usporous1').feature('pm1').set('theta_l', 'S_res*phi0+Se*(phi0-S_res*phi0)');
model.physics('dl').feature('usporous1').feature('pm1').set('Cm', 'Cm');
model.physics('dl').feature('usporous1').feature('pm1').set('kappa_r', 'k_rel');
model.physics('dl').feature('usporous1').feature('pm1').set('theta_r', 'S_res*phi0');
model.physics('dl').feature('init1').set('InitType', 'H');
model.physics('dl').create('hh1', 'HydraulicHead', 1);
model.physics('dl').feature('hh1').selection.set([2]);
model.physics('dl').create('sym1', 'Symmetry', 1);
model.physics('dl').feature('sym1').selection.set([5]);
model.physics('dl').create('prec1', 'Precipitation', 1);
model.physics('dl').feature('prec1').label('Infiltration');
model.physics('dl').feature('prec1').selection.set([3 4]);
model.physics('dl').feature('prec1').set('item.P0', 'U_in');
model.physics('dl').feature.duplicate('prec2', 'prec1');
model.physics('dl').feature('prec2').label('Evaporation');
model.physics('dl').feature('prec2').set('item.P0', '-U_out');
model.physics('solid').prop('StructuralTransientBehavior').set('StructuralTransientBehavior', 'Quasistatic');
model.physics('solid').create('epsm1', 'ElastoplasticSoilMaterial', 2);
model.physics('solid').feature('epsm1').label('Extended Barcelona Basic Model (BBMx)');
model.physics('solid').feature('epsm1').set('MaterialModel', 'BarcelonaBasic');
model.physics('solid').feature('epsm1').set('MB_mat', 'from_mat');
model.physics('solid').feature('epsm1').set('evoid0B_mat', 'from_mat');
model.physics('solid').feature('epsm1').set('ss0', 'InitSuction');
model.physics('solid').feature('epsm1').set('ss', 'Suction');
model.physics('solid').feature('epsm1').set('pref', 'pref');
model.physics('solid').feature('epsm1').set('pc0', 'pc0');
model.physics('solid').feature('epsm1').selection.set([1]);
model.physics('solid').feature('epsm1').create('exs1', 'ExternalStress', 2);
model.physics('solid').feature('epsm1').feature('exs1').set('StressInputType', 'PorePressure');
model.physics('solid').feature('epsm1').feature('exs1').set('pA', 'PorePressure');
model.physics('solid').feature('epsm1').feature('exs1').set('pref', 0);
model.physics('solid').feature('epsm1').feature('exs1').set('alphaB_mat', 'userdef');
model.physics('solid').feature('epsm1').feature('exs1').set('alphaB', 1);

model.material('pmat1').set('porosity', 'phi0');
model.material('pmat1').propertyGroup.create('BarcelonaBasicModel', 'Barcelona_Basic');
model.material('pmat1').propertyGroup('BarcelonaBasicModel').set('bB', {'bb'});
model.material('pmat1').propertyGroup('def').set('density', {'rhos'});
model.material('pmat1').propertyGroup('BarcelonaBasicModel').set('lambdaComp0', {'lambda'});
model.material('pmat1').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('pmat1').propertyGroup('Enu').set('nu', {'Nu'});
model.material('pmat1').propertyGroup('BarcelonaBasicModel').set('wB', {'wb'});
model.material('pmat1').propertyGroup('BarcelonaBasicModel').set('sy0', {'sy'});
model.material('pmat1').propertyGroup('BarcelonaBasicModel').set('M', {'Mb'});
model.material('pmat1').propertyGroup('BarcelonaBasicModel').set('lambdaCompss', {'lambda_s'});
model.material('pmat1').propertyGroup('BarcelonaBasicModel').set('kappaSwellings', {'kappa_s'});
model.material('pmat1').propertyGroup('BarcelonaBasicModel').set('mB', {'mb'});
model.material('pmat1').propertyGroup('BarcelonaBasicModel').set('kB', {'kb'});
model.material('pmat1').propertyGroup('BarcelonaBasicModel').set('kappaSwelling', {'kappa'});
model.material('pmat1').propertyGroup('BarcelonaBasicModel').set('evoid0', {'e0'});
model.material('pmat1').propertyGroup('def').set('hydraulicpermeability', {'k'});
model.material('pmat1').feature.create('fluid1', 'Fluid', 'comp1');
model.material('pmat1').feature('fluid1').propertyGroup('def').set('density', {'rhow'});
model.material('pmat1').feature('fluid1').propertyGroup('def').set('dynamicviscosity', {'muw'});

model.physics('solid').create('gacc1', 'GravityAcceleration', -1);
model.physics('solid').create('fix1', 'Fixed', 1);
model.physics('solid').feature('fix1').selection.set([2]);
model.physics('solid').create('roll1', 'Roller', 1);
model.physics('solid').feature('roll1').selection.set([1]);
model.physics('solid').create('sym1', 'SymmetrySolid', 1);
model.physics('solid').feature('sym1').selection.set([5]);
model.physics('solid').create('bndl1', 'BoundaryLoad', 1);
model.physics('solid').feature('bndl1').selection.set([4]);
model.physics('solid').feature('bndl1').set('FperArea', {'0' '-F_P(para)' '0'});

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').run;

model.study('std1').label('Study: Footing Pressure');
model.study('std1').feature('stat').set('useadvanceddisable', true);
model.study('std1').feature('stat').set('disabledphysics', {'dl/prec1' 'dl/prec2'});
model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 'para', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', '', 0);
model.study('std1').feature('stat').setIndex('pname', 'para', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', '', 0);
model.study('std1').feature('stat').setIndex('plistarr', 'range(0,0.1,1)', 0);

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_solid_epsm1_evols').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_epsm1_evols').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_epsm1_evols').set('scaleval', '0.001');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*4.242640687119286');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s1').set('control', 'stat');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, pressure (dl) (Merged)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, pressure (dl)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').label('Pressure (dl)');
model.result('pg1').set('titletype', 'custom');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 11, 0);
model.result('pg1').set('defaultPlotID', 'PhysicsInterfaces_PorousMediaFlow/icom6/pdef1/pcond2/pg1');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').label('Surface');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('smooth', 'internal');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result('pg1').feature.create('str1', 'Streamline');
model.result('pg1').feature('str1').set('showsolutionparams', 'on');
model.result('pg1').feature('str1').set('posmethod', 'uniform');
model.result('pg1').feature('str1').set('pointtype', 'arrow');
model.result('pg1').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg1').feature('str1').set('color', 'gray');
model.result('pg1').feature('str1').set('smooth', 'internal');
model.result('pg1').feature('str1').set('maxlen', Inf);
model.result('pg1').feature('str1').set('maxtime', Inf);
model.result('pg1').feature('str1').set('showsolutionparams', 'on');
model.result('pg1').feature('str1').set('maxlen', Inf);
model.result('pg1').feature('str1').set('maxtime', Inf);
model.result('pg1').feature('str1').set('showsolutionparams', 'on');
model.result('pg1').feature('str1').set('maxlen', Inf);
model.result('pg1').feature('str1').set('maxtime', Inf);
model.result('pg1').feature('str1').set('showsolutionparams', 'on');
model.result('pg1').feature('str1').set('maxlen', Inf);
model.result('pg1').feature('str1').set('maxtime', Inf);
model.result('pg1').feature('str1').set('showsolutionparams', 'on');
model.result('pg1').feature('str1').set('maxlen', Inf);
model.result('pg1').feature('str1').set('maxtime', Inf);
model.result('pg1').feature('str1').set('data', 'parent');
model.result('pg1').feature('str1').selection.geom('geom1', 1);
model.result('pg1').feature('str1').selection.set([1 2 3 4 5]);
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').label('Flownet (dl)');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 11, 0);
model.result('pg2').set('defaultPlotID', 'PhysicsInterfaces_PorousMediaFlow/icom6/pdef1/pcond2/pcond4/pg1');
model.result('pg2').feature.create('con1', 'Contour');
model.result('pg2').feature('con1').set('showsolutionparams', 'on');
model.result('pg2').feature('con1').set('expr', 'dl.H');
model.result('pg2').feature('con1').set('levelrounding', false);
model.result('pg2').feature('con1').set('coloring', 'uniform');
model.result('pg2').feature('con1').set('colorlegend', false);
model.result('pg2').feature('con1').set('color', 'green');
model.result('pg2').feature('con1').set('smooth', 'internal');
model.result('pg2').feature('con1').set('showsolutionparams', 'on');
model.result('pg2').feature('con1').set('data', 'parent');
model.result('pg2').feature.create('str1', 'Streamline');
model.result('pg2').feature('str1').set('showsolutionparams', 'on');
model.result('pg2').feature('str1').set('posmethod', 'magnitude');
model.result('pg2').feature('str1').set('madv', 'manual');
model.result('pg2').feature('str1').set('msatfactor', 1.4);
model.result('pg2').feature('str1').set('color', 'blue');
model.result('pg2').feature('str1').set('resolution', 'extrafine');
model.result('pg2').feature('str1').set('smooth', 'internal');
model.result('pg2').feature('str1').set('maxlen', Inf);
model.result('pg2').feature('str1').set('maxtime', Inf);
model.result('pg2').feature('str1').set('showsolutionparams', 'on');
model.result('pg2').feature('str1').set('maxlen', Inf);
model.result('pg2').feature('str1').set('maxtime', Inf);
model.result('pg2').feature('str1').set('showsolutionparams', 'on');
model.result('pg2').feature('str1').set('maxlen', Inf);
model.result('pg2').feature('str1').set('maxtime', Inf);
model.result('pg2').feature('str1').set('showsolutionparams', 'on');
model.result('pg2').feature('str1').set('maxlen', Inf);
model.result('pg2').feature('str1').set('maxtime', Inf);
model.result('pg2').feature('str1').set('showsolutionparams', 'on');
model.result('pg2').feature('str1').set('maxlen', Inf);
model.result('pg2').feature('str1').set('maxtime', Inf);
model.result('pg2').feature('str1').set('data', 'parent');
model.result('pg2').feature('str1').selection.geom('geom1', 1);
model.result('pg2').feature('str1').selection.set([1 2 3 4 5]);
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').set('data', 'dset1');
model.result('pg3').setIndex('looplevel', 11, 0);
model.result('pg3').set('defaultPlotID', 'stress');
model.result('pg3').label('Stress (solid)');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg3').feature('surf1').set('threshold', 'manual');
model.result('pg3').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg3').feature('surf1').set('colortable', 'Rainbow');
model.result('pg3').feature('surf1').set('colortabletrans', 'none');
model.result('pg3').feature('surf1').set('colorscalemode', 'linear');
model.result('pg3').feature('surf1').set('resolution', 'normal');
model.result('pg3').feature('surf1').set('colortable', 'Prism');
model.result('pg3').feature('surf1').create('def', 'Deform');
model.result('pg3').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg3').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg1').run;
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').set('data', 'dset1');
model.result('pg4').setIndex('looplevel', 11, 0);
model.result('pg4').label('Volumetric Plastic Strain (solid)');
model.result('pg4').set('defaultPlotID', 'volumetricPlasticStrain');
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', {'solid.epvolGp'});
model.result('pg4').feature('surf1').set('inheritplot', 'none');
model.result('pg4').feature('surf1').set('resolution', 'normal');
model.result('pg4').feature('surf1').set('colortabletype', 'discrete');
model.result('pg4').feature('surf1').set('bandcount', 11);
model.result('pg4').feature('surf1').set('colortable', 'AuroraAustralisDark');
model.result('pg4').feature('surf1').set('descractive', true);
model.result('pg4').feature('surf1').set('descr', 'Volumetric plastic strain');
model.result('pg4').label('Volumetric Plastic Strain (solid)');
model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').set('data', 'dset1');
model.result('pg5').setIndex('looplevel', 11, 0);
model.result('pg5').label('Void Ratio (solid)');
model.result('pg5').set('defaultPlotID', 'voidRatio');
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', {'solid.evoid'});
model.result('pg5').feature('surf1').create('def', 'Deform');
model.result('pg5').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg5').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg5').feature('surf1').set('resolution', 'normal');
model.result('pg5').feature('surf1').set('colortabletype', 'discrete');
model.result('pg5').feature('surf1').set('bandcount', 11);
model.result('pg5').feature('surf1').set('colortable', 'Traffic');
model.result('pg5').feature('surf1').set('descractive', true);
model.result('pg5').feature('surf1').set('descr', 'Void ratio');
model.result('pg5').label('Void Ratio (solid)');
model.result.create('pg6', 'PlotGroup2D');
model.result('pg6').set('data', 'dset1');
model.result('pg6').setIndex('looplevel', 11, 0);
model.result('pg6').set('defaultPlotID', 'volumeLoads');
model.result('pg6').label('Volume Loads (solid)');
model.result('pg6').set('showlegends', true);
model.result('pg6').set('titletype', 'label');
model.result('pg6').set('frametype', 'spatial');
model.result('pg6').set('showlegendsunit', true);
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', {'1'});
model.result('pg6').feature('surf1').label('Gray Surfaces');
model.result('pg6').feature('surf1').set('coloring', 'uniform');
model.result('pg6').feature('surf1').set('color', 'gray');
model.result('pg6').feature('surf1').set('inheritcolor', false);
model.result('pg6').feature('surf1').set('inheritrange', false);
model.result('pg6').feature('surf1').set('inheritheightscale', false);
model.result('pg6').feature('surf1').create('def', 'Deform');
model.result('pg6').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg6').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg6').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg6').feature('surf1').feature('def').set('scale', 0);
model.result('pg6').feature('surf1').create('sel1', 'Selection');
model.result('pg6').feature('surf1').feature('sel1').selection.geom('geom1', 2);
model.result('pg6').feature('surf1').feature('sel1').selection.set([1]);
model.result('pg6').create('arws1', 'ArrowSurface');
model.result('pg6').feature('arws1').set('expr', {'solid.fgx' 'solid.fgy'});
model.result('pg6').feature('arws1').set('placement', 'gausspoints');
model.result('pg6').feature('arws1').set('arrowbase', 'tail');
model.result('pg6').feature('arws1').label('Gravity 1');
model.result('pg6').feature('arws1').set('inheritplot', 'none');
model.result('pg6').feature('arws1').create('col', 'Color');
model.result('pg6').feature('arws1').feature('col').set('colortable', 'Rainbow');
model.result('pg6').feature('arws1').feature('col').set('colortabletrans', 'none');
model.result('pg6').feature('arws1').feature('col').set('colorscalemode', 'linear');
model.result('pg6').feature('arws1').feature('col').set('colordata', 'arrowlength');
model.result('pg6').feature('arws1').feature('col').set('coloring', 'gradient');
model.result('pg6').feature('arws1').feature('col').set('topcolor', 'red');
model.result('pg6').feature('arws1').feature('col').set('bottomcolor', 'custom');
model.result('pg6').feature('arws1').feature('col').set('custombottomcolor', [0.5882353186607361 0.5137255191802979 0.5176470875740051]);
model.result('pg6').feature('arws1').set('color', 'magenta');
model.result('pg6').feature('arws1').create('def', 'Deform');
model.result('pg6').feature('arws1').feature('def').set('expr', {'u' 'v'});
model.result('pg6').feature('arws1').feature('def').set('descr', 'Displacement field');
model.result('pg6').feature('arws1').feature('def').set('scaleactive', true);
model.result('pg6').feature('arws1').feature('def').set('scale', 0);
model.result('pg6').feature.move('surf1', 1);
model.result('pg6').label('Volume Loads (solid)');

model.nodeGroup.create('dset1solidlgrp', 'Results');
model.nodeGroup('dset1solidlgrp').label('Applied Loads (solid)');
model.nodeGroup('dset1solidlgrp').set('type', 'plotgroup');
model.nodeGroup('dset1solidlgrp').placeAfter('plotgroup', 'pg6');
model.nodeGroup('dset1solidlgrp').label('Applied Loads (solid)');
model.nodeGroup('dset1solidlgrp').placeAfter('plotgroup', 'pg6');

model.result.create('pg7', 'PlotGroup2D');
model.result('pg7').set('data', 'dset1');
model.result('pg7').setIndex('looplevel', 11, 0);
model.result('pg7').set('defaultPlotID', 'boundaryLoads');
model.result('pg7').label('Boundary Loads (solid)');
model.result('pg7').set('showlegends', true);
model.result('pg7').set('titletype', 'label');
model.result('pg7').set('frametype', 'spatial');
model.result('pg7').set('showlegendsunit', true);
model.result('pg7').create('surf1', 'Surface');
model.result('pg7').feature('surf1').set('expr', {'1'});
model.result('pg7').feature('surf1').label('Gray Surfaces');
model.result('pg7').feature('surf1').set('coloring', 'uniform');
model.result('pg7').feature('surf1').set('color', 'gray');
model.result('pg7').feature('surf1').set('inheritcolor', false);
model.result('pg7').feature('surf1').set('inheritrange', false);
model.result('pg7').feature('surf1').set('inheritheightscale', false);
model.result('pg7').feature('surf1').create('def', 'Deform');
model.result('pg7').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg7').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg7').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg7').feature('surf1').feature('def').set('scale', 0);
model.result('pg7').feature('surf1').create('sel1', 'Selection');
model.result('pg7').feature('surf1').feature('sel1').selection.geom('geom1', 2);
model.result('pg7').feature('surf1').feature('sel1').selection.set([1]);
model.result('pg7').create('arwl1', 'ArrowLine');
model.result('pg7').feature('arwl1').set('expr', {'solid.bndl1.F_Ax' 'solid.bndl1.F_Ay'});
model.result('pg7').feature('arwl1').set('placement', 'gausspoints');
model.result('pg7').feature('arwl1').set('arrowbase', 'tail');
model.result('pg7').feature('arwl1').label('Boundary Load 1');
model.result('pg7').feature('arwl1').set('inheritplot', 'none');
model.result('pg7').feature('arwl1').create('col', 'Color');
model.result('pg7').feature('arwl1').feature('col').set('colortable', 'Rainbow');
model.result('pg7').feature('arwl1').feature('col').set('colortabletrans', 'none');
model.result('pg7').feature('arwl1').feature('col').set('colorscalemode', 'linear');
model.result('pg7').feature('arwl1').feature('col').set('colordata', 'arrowlength');
model.result('pg7').feature('arwl1').feature('col').set('coloring', 'gradient');
model.result('pg7').feature('arwl1').feature('col').set('topcolor', 'red');
model.result('pg7').feature('arwl1').feature('col').set('bottomcolor', 'custom');
model.result('pg7').feature('arwl1').feature('col').set('custombottomcolor', [0.5882353186607361 0.5137255191802979 0.5176470875740051]);
model.result('pg7').feature('arwl1').set('color', 'red');
model.result('pg7').feature('arwl1').create('def', 'Deform');
model.result('pg7').feature('arwl1').feature('def').set('expr', {'u' 'v'});
model.result('pg7').feature('arwl1').feature('def').set('descr', 'Displacement field');
model.result('pg7').feature('arwl1').feature('def').set('scaleactive', true);
model.result('pg7').feature('arwl1').feature('def').set('scale', 0);
model.result('pg7').feature.move('surf1', 1);
model.result('pg7').label('Boundary Loads (solid)');

model.nodeGroup('dset1solidlgrp').add('plotgroup', 'pg6');
model.nodeGroup('dset1solidlgrp').add('plotgroup', 'pg7');

model.study.create('std2');
model.study('std2').create('time', 'Transient');
model.study('std2').feature('time').setSolveFor('/physics/dl', true);
model.study('std2').feature('time').setSolveFor('/physics/solid', true);
model.study('std2').label('Study: Infiltration');
model.study('std2').setGenPlots(false);
model.study('std2').feature('time').set('tunit', 'd');
model.study('std2').feature('time').set('tlist', 'range(0,0.1,5)');
model.study('std2').feature('time').set('usertol', true);
model.study('std2').feature('time').set('rtol', '0.0001');
model.study('std2').feature('time').set('useadvanceddisable', true);
model.study('std2').feature('time').set('disabledphysics', {'dl/prec2'});
model.study('std2').feature('time').set('useinitsol', true);
model.study('std2').feature('time').set('initmethod', 'sol');
model.study('std2').feature('time').set('initstudy', 'std1');
model.study('std2').feature('time').set('solnum', 'last');

model.sol.create('sol2');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'time');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_solid_epsm1_evols').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_epsm1_evols').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_solid_epsm1_evols').set('scaleval', '0.001');
model.sol('sol2').feature('v1').feature('comp1_u').set('scaleval', '1e-2*4.242640687119286');
model.sol('sol2').feature('v1').set('control', 'time');
model.sol('sol2').create('t1', 'Time');
model.sol('sol2').feature('t1').set('tlist', 'range(0,0.1,5)');
model.sol('sol2').feature('t1').set('plot', 'off');
model.sol('sol2').feature('t1').set('plotgroup', 'pg1');
model.sol('sol2').feature('t1').set('plotfreq', 'tout');
model.sol('sol2').feature('t1').set('probesel', 'all');
model.sol('sol2').feature('t1').set('probes', {});
model.sol('sol2').feature('t1').set('probefreq', 'tsteps');
model.sol('sol2').feature('t1').set('rtol', 0.001);
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol2').feature('t1').set('reacf', true);
model.sol('sol2').feature('t1').set('storeudot', true);
model.sol('sol2').feature('t1').set('endtimeinterpolation', true);
model.sol('sol2').feature('t1').set('maxorder', 2);
model.sol('sol2').feature('t1').set('stabcntrl', true);
model.sol('sol2').feature('t1').set('control', 'time');
model.sol('sol2').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('t1').create('seDef', 'Segregated');
model.sol('sol2').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol2').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol2').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol2').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol2').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol2').feature('t1').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('d1').set('linsolver', 'mumps');
model.sol('sol2').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t1').feature('d1').label('Direct, pressure (dl) (Merged)');
model.sol('sol2').feature('t1').create('i1', 'Iterative');
model.sol('sol2').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol2').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol2').feature('t1').feature('i1').set('maxlinit', 50);
model.sol('sol2').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol2').feature('t1').feature('i1').label('AMG, pressure (dl)');
model.sol('sol2').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', false);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol2').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol2').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol2').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol2').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol2').feature('t1').feature.remove('fcDef');
model.sol('sol2').feature('t1').feature.remove('seDef');
model.sol('sol2').attach('std2');
model.sol('sol2').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol2').runAll;

model.study.create('std3');
model.study('std3').create('time', 'Transient');
model.study('std3').feature('time').setSolveFor('/physics/dl', true);
model.study('std3').feature('time').setSolveFor('/physics/solid', true);
model.study('std3').label('Study: Evaporation');
model.study('std3').setGenPlots(false);
model.study('std3').feature('time').set('tunit', 'd');
model.study('std3').feature('time').set('tlist', 'range(0,0.1,5)');
model.study('std3').feature('time').set('usertol', true);
model.study('std3').feature('time').set('rtol', '0.0001');
model.study('std3').feature('time').set('useadvanceddisable', true);
model.study('std3').feature('time').set('disabledphysics', {'dl/prec1'});
model.study('std3').feature('time').set('useinitsol', true);
model.study('std3').feature('time').set('initmethod', 'sol');
model.study('std3').feature('time').set('initstudy', 'std1');
model.study('std3').feature('time').set('solnum', 'last');

model.sol.create('sol3');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol3').study('std3');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std3');
model.sol('sol3').feature('st1').set('studystep', 'time');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').feature('comp1_solid_epsm1_evols').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_solid_epsm1_evols').set('resscalemethod', 'parent');
model.sol('sol3').feature('v1').feature('comp1_solid_epsm1_evols').set('scaleval', '0.001');
model.sol('sol3').feature('v1').feature('comp1_u').set('scaleval', '1e-2*4.242640687119286');
model.sol('sol3').feature('v1').set('control', 'time');
model.sol('sol3').create('t1', 'Time');
model.sol('sol3').feature('t1').set('tlist', 'range(0,0.1,5)');
model.sol('sol3').feature('t1').set('plot', 'off');
model.sol('sol3').feature('t1').set('plotgroup', 'pg1');
model.sol('sol3').feature('t1').set('plotfreq', 'tout');
model.sol('sol3').feature('t1').set('probesel', 'all');
model.sol('sol3').feature('t1').set('probes', {});
model.sol('sol3').feature('t1').set('probefreq', 'tsteps');
model.sol('sol3').feature('t1').set('rtol', 0.001);
model.sol('sol3').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol3').feature('t1').set('reacf', true);
model.sol('sol3').feature('t1').set('storeudot', true);
model.sol('sol3').feature('t1').set('endtimeinterpolation', true);
model.sol('sol3').feature('t1').set('maxorder', 2);
model.sol('sol3').feature('t1').set('stabcntrl', true);
model.sol('sol3').feature('t1').set('control', 'time');
model.sol('sol3').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('t1').create('seDef', 'Segregated');
model.sol('sol3').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol3').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol3').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol3').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol3').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol3').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol3').feature('t1').create('d1', 'Direct');
model.sol('sol3').feature('t1').feature('d1').set('linsolver', 'mumps');
model.sol('sol3').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('t1').feature('d1').label('Direct, pressure (dl) (Merged)');
model.sol('sol3').feature('t1').create('i1', 'Iterative');
model.sol('sol3').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol3').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol3').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol3').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol3').feature('t1').feature('i1').set('maxlinit', 50);
model.sol('sol3').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol3').feature('t1').feature('i1').label('AMG, pressure (dl)');
model.sol('sol3').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol3').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol3').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol3').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol3').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol3').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol3').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol3').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', false);
model.sol('sol3').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol3').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol3').feature('t1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol3').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol3').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol3').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol3').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol3').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol3').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol3').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol3').feature('t1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol3').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol3').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol3').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol3').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol3').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol3').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol3').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol3').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol3').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol3').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol3').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol3').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol3').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol3').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol3').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol3').feature('t1').feature.remove('fcDef');
model.sol('sol3').feature('t1').feature.remove('seDef');
model.sol('sol3').attach('std3');
model.sol('sol3').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol3').runAll;

model.result.dataset.create('mir1', 'Mirror2D');
model.result.dataset('mir1').setIndex('genpoints', 3, 0, 0);
model.result.dataset('mir1').setIndex('genpoints', 3, 1, 0);
model.result.dataset('mir1').set('removesymelem', true);
model.result.dataset.duplicate('mir2', 'mir1');
model.result.dataset('mir2').set('data', 'dset2');
model.result.dataset.duplicate('mir3', 'mir2');
model.result.dataset('mir3').set('data', 'dset3');
model.result('pg1').run;
model.result('pg1').label('Pressure Head');
model.result('pg1').set('data', 'mir2');
model.result('pg1').run;
model.result('pg1').feature.remove('str1');
model.result('pg1').run;
model.result('pg1').feature('surf1').set('expr', 'dl.Hp');
model.result('pg1').feature.duplicate('surf2', 'surf1');
model.result('pg1').run;
model.result('pg1').feature('surf2').set('data', 'mir3');
model.result('pg1').feature('surf2').set('titletype', 'none');
model.result('pg1').feature('surf2').set('inheritplot', 'surf1');
model.result('pg1').feature('surf2').create('trn1', 'Translation');
model.result('pg1').run;
model.result('pg1').feature('surf2').feature('trn1').set('trans', [7 0]);
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').create('tlan1', 'TableAnnotation');
model.result('pg1').feature('tlan1').set('source', 'localtable');
model.result('pg1').feature('tlan1').set('showpoint', false);
model.result('pg1').feature('tlan1').set('latexmarkup', true);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 1.8, 0, 0);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', -0.7, 0, 1);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 'After rainfall', 0, 2);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 8.5, 1, 0);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', -0.7, 1, 1);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 'After evaporation', 1, 2);
model.result('pg2').run;
model.result('pg2').label('Degree of Saturation, Infiltration');
model.result('pg2').set('data', 'mir2');
model.result('pg2').set('titletype', 'manual');
model.result('pg2').set('title', 'Degree of Saturation');
model.result('pg2').run;
model.result('pg2').feature.remove('con1');
model.result('pg2').feature.remove('str1');
model.result('pg2').run;
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('data', 'mir2');
model.result('pg2').feature('surf1').setIndex('looplevel', 1, 0);
model.result('pg2').feature('surf1').set('expr', 'dl.Se');
model.result('pg2').feature('surf1').set('descr', 'Effective saturation');
model.result('pg2').feature.duplicate('surf2', 'surf1');
model.result('pg2').run;
model.result('pg2').feature('surf2').set('data', 'parent');
model.result('pg2').feature('surf2').set('inheritplot', 'surf1');
model.result('pg2').feature('surf2').create('trn1', 'Translation');
model.result('pg2').run;
model.result('pg2').feature('surf2').feature('trn1').set('trans', [7 0]);
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').create('tlan1', 'TableAnnotation');
model.result('pg2').feature('tlan1').set('showpoint', false);
model.result('pg2').feature('tlan1').set('latexmarkup', true);
model.result('pg2').feature('tlan1').set('source', 'localtable');
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 1.2, 0, 0);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', -0.7, 0, 1);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 'Before rainfall', 0, 2);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 8.5, 1, 0);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', -0.7, 1, 1);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 'After 5 days of \newline $\qquad$ rainfall', 1, 2);
model.result('pg2').run;
model.result('pg2').run;
model.result.duplicate('pg8', 'pg2');
model.result('pg8').run;
model.result.move('pg8', 2);
model.result('pg8').label('Degree of Saturation, Evaporation');
model.result('pg8').set('data', 'mir3');
model.result('pg8').run;
model.result('pg8').feature('surf1').set('data', 'mir3');
model.result('pg8').run;
model.result('pg8').run;
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 'Before evaporation', 0, 2);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 'After 5 days of \newline $\;\;$ evaporation', 1, 2);
model.result('pg8').run;
model.result('pg3').run;
model.result('pg3').label('Stress, Footing Pressure');
model.result('pg3').set('data', 'mir1');
model.result('pg3').set('showlegendsmaxmin', true);
model.result('pg3').run;
model.result('pg3').feature('surf1').set('unit', 'kPa');
model.result('pg3').feature('surf1').set('threshold', 'none');
model.result('pg3').run;
model.result('pg3').create('arwl1', 'ArrowLine');
model.result('pg3').feature('arwl1').set('expr', {'solid.F_Ax' 'solid.F_Ay'});
model.result('pg3').feature('arwl1').set('descr', 'Load (spatial frame)');
model.result('pg3').feature('arwl1').set('titletype', 'none');
model.result('pg3').feature('arwl1').set('arrowbase', 'head');
model.result('pg3').feature('arwl1').set('inheritplot', 'surf1');
model.result('pg3').feature('arwl1').set('inheritcolor', false);
model.result('pg3').feature('arwl1').set('inheritarrowscale', false);
model.result('pg3').feature('arwl1').set('inheritrange', false);
model.result('pg3').feature('arwl1').create('def1', 'Deform');
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').run;
model.result.duplicate('pg9', 'pg3');
model.result('pg9').run;
model.result.move('pg9', 4);
model.result('pg9').label('Stress, Infiltration');
model.result('pg9').set('data', 'mir2');
model.result('pg9').run;
model.result.duplicate('pg10', 'pg9');
model.result('pg10').run;
model.result.move('pg10', 5);
model.result('pg10').label('Stress, Evaporation');
model.result('pg10').set('data', 'mir3');
model.result('pg10').run;
model.result('pg4').run;
model.result('pg4').set('data', 'mir2');
model.result('pg4').run;
model.result('pg4').feature.duplicate('surf2', 'surf1');
model.result('pg4').run;
model.result('pg4').feature('surf2').set('data', 'mir3');
model.result('pg4').feature('surf2').set('titletype', 'none');
model.result('pg4').feature('surf2').set('inheritplot', 'surf1');
model.result('pg4').feature('surf2').create('trn1', 'Translation');
model.result('pg4').run;
model.result('pg4').feature('surf2').feature('trn1').set('trans', [7 0]);
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').create('tlan1', 'TableAnnotation');
model.result('pg4').feature('tlan1').set('source', 'localtable');
model.result('pg4').feature('tlan1').set('showpoint', false);
model.result('pg4').feature('tlan1').set('latexmarkup', true);
model.result('pg4').feature('tlan1').setIndex('localtablematrix', 1.8, 0, 0);
model.result('pg4').feature('tlan1').setIndex('localtablematrix', -0.7, 0, 1);
model.result('pg4').feature('tlan1').setIndex('localtablematrix', 'After rainfall', 0, 2);
model.result('pg4').feature('tlan1').setIndex('localtablematrix', 8.5, 1, 0);
model.result('pg4').feature('tlan1').setIndex('localtablematrix', -0.7, 1, 1);
model.result('pg4').feature('tlan1').setIndex('localtablematrix', 'After evaporation', 1, 2);
model.result('pg5').run;
model.result('pg5').set('data', 'mir2');
model.result('pg5').run;
model.result('pg5').feature.duplicate('surf2', 'surf1');
model.result('pg5').run;
model.result('pg5').feature('surf2').set('data', 'mir3');
model.result('pg5').feature('surf2').set('titletype', 'none');
model.result('pg5').feature('surf2').set('inheritplot', 'surf1');
model.result('pg5').feature('surf2').create('trn1', 'Translation');
model.result('pg5').run;
model.result('pg5').feature('surf2').feature('trn1').set('trans', [7 0]);
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').create('tlan1', 'TableAnnotation');
model.result('pg5').feature('tlan1').set('source', 'localtable');
model.result('pg5').feature('tlan1').set('showpoint', false);
model.result('pg5').feature('tlan1').set('latexmarkup', true);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', 1.8, 0, 0);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', -0.7, 0, 1);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', 'After rainfall', 0, 2);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', 8.5, 1, 0);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', -0.7, 1, 1);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', 'After evaporation', 1, 2);
model.result.create('pg11', 'PlotGroup1D');
model.result('pg11').run;

model.nodeGroup('dset1solidlgrp').add('plotgroup', 'pg11');
model.nodeGroup('dset1solidlgrp').remove('plotgroup', 'pg11', true);

model.result('pg11').label('Suction Changes');
model.result('pg11').set('data', 'dset2');
model.result('pg11').set('legendpos', 'middleright');
model.result('pg11').create('ptgr1', 'PointGraph');
model.result('pg11').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg11').feature('ptgr1').set('linewidth', 'preference');
model.result('pg11').feature('ptgr1').selection.set([5]);
model.result('pg11').feature('ptgr1').set('expr', 'Suction');
model.result('pg11').feature('ptgr1').set('unit', 'kPa');
model.result('pg11').feature('ptgr1').set('legend', true);
model.result('pg11').feature('ptgr1').set('legendmethod', 'manual');
model.result('pg11').feature('ptgr1').setIndex('legends', 'Infiltration', 0);
model.result('pg11').feature.duplicate('ptgr2', 'ptgr1');
model.result('pg11').run;
model.result('pg11').feature('ptgr2').set('data', 'dset3');
model.result('pg11').feature('ptgr2').set('titletype', 'none');
model.result('pg11').feature('ptgr2').setIndex('legends', 'Evaporation', 0);
model.result('pg11').run;
model.result('pg11').create('ann1', 'Annotation');
model.result('pg11').feature('ann1').set('posyexpr', 29.4);
model.result('pg11').feature('ann1').set('color', 'red');
model.result('pg11').run;
model.result('pg11').run;
model.result.duplicate('pg12', 'pg11');
model.result('pg12').run;

model.nodeGroup('dset1solidlgrp').add('plotgroup', 'pg12');
model.nodeGroup('dset1solidlgrp').remove('plotgroup', 'pg12', true);

model.result('pg12').label('Volume Changes');
model.result('pg12').run;
model.result('pg12').feature('ptgr1').set('expr', 'solid.epsm1.evols');
model.result('pg12').run;
model.result('pg12').feature('ptgr2').set('expr', 'solid.epsm1.evols');
model.result('pg12').run;
model.result('pg12').feature('ann1').set('posyexpr', 0);
model.result('pg12').run;
model.result.create('pg13', 'PlotGroup1D');
model.result('pg13').run;

model.nodeGroup('dset1solidlgrp').add('plotgroup', 'pg13');
model.nodeGroup('dset1solidlgrp').remove('plotgroup', 'pg13', true);

model.result('pg13').label('Footing Pressure vs. Settlement, Infiltration');
model.result('pg13').set('titletype', 'label');
model.result('pg13').set('xlabelactive', true);
model.result('pg13').set('xlabel', 'Settlement (mm)');
model.result('pg13').set('ylabelactive', true);
model.result('pg13').set('ylabel', 'Footing pressure (kPa)');
model.result('pg13').set('axislimits', true);
model.result('pg13').set('xmax', 22);
model.result('pg13').set('ymin', -2);
model.result('pg13').set('ymax', 70);
model.result('pg13').set('showlegends', false);
model.result('pg13').create('ptgr1', 'PointGraph');
model.result('pg13').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg13').feature('ptgr1').set('linewidth', 'preference');
model.result('pg13').feature('ptgr1').selection.set([5]);
model.result('pg13').feature('ptgr1').set('expr', 'F_P(para)');
model.result('pg13').feature('ptgr1').set('unit', 'kPa');
model.result('pg13').feature('ptgr1').set('xdata', 'expr');
model.result('pg13').feature('ptgr1').set('xdataexpr', 'abs(v-withsol(''sol1'',v,setval(para,0)))');
model.result('pg13').feature('ptgr1').set('xdataunit', 'mm');
model.result('pg13').feature('ptgr1').set('linewidth', 1);
model.result('pg13').feature.duplicate('ptgr2', 'ptgr1');
model.result('pg13').run;
model.result('pg13').feature('ptgr2').set('data', 'dset2');
model.result('pg13').run;
model.result('pg13').create('ann1', 'Annotation');
model.result('pg13').feature('ann1').set('text', 'Collapse');
model.result('pg13').feature('ann1').set('posxexpr', 15);
model.result('pg13').feature('ann1').set('posyexpr', 65);
model.result('pg13').feature('ann1').set('showpoint', false);
model.result('pg13').run;
model.result('pg13').run;
model.result.duplicate('pg14', 'pg13');
model.result('pg14').run;

model.nodeGroup('dset1solidlgrp').add('plotgroup', 'pg14');
model.nodeGroup('dset1solidlgrp').remove('plotgroup', 'pg14', true);

model.result('pg14').label('Footing Pressure vs. Settlement, Evaporation');
model.result('pg14').run;
model.result('pg14').feature('ptgr2').set('data', 'dset3');
model.result('pg14').run;
model.result.dataset.create('cln1', 'CutLine2D');
model.result.dataset('cln1').set('data', 'mir2');
model.result.dataset('cln1').setIndex('genpoints', 6, 1, 0);
model.result.dataset('cln1').setIndex('genpoints', 3, 0, 1);
model.result.dataset('cln1').setIndex('genpoints', 3, 1, 1);
model.result.dataset.duplicate('cln2', 'cln1');
model.result.dataset('cln2').set('data', 'mir3');
model.result.create('pg15', 'PlotGroup1D');
model.result('pg15').run;

model.nodeGroup('dset1solidlgrp').add('plotgroup', 'pg15');
model.nodeGroup('dset1solidlgrp').remove('plotgroup', 'pg15', true);

model.result('pg15').label('Vertical Displacement');
model.result('pg15').set('data', 'cln1');
model.result('pg15').setIndex('looplevelinput', 'last', 0);
model.result('pg15').set('titletype', 'manual');
model.result('pg15').set('title', 'Vertical Displacement due to Flow Rate');
model.result('pg15').set('xlabelactive', true);
model.result('pg15').set('xlabel', 'Position (m)');
model.result('pg15').set('ylabelactive', true);
model.result('pg15').set('ylabel', 'Vertical displacement (mm)');
model.result('pg15').set('legendpos', 'lowerright');
model.result('pg15').create('lngr1', 'LineGraph');
model.result('pg15').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg15').feature('lngr1').set('linewidth', 'preference');
model.result('pg15').feature('lngr1').set('expr', 'v-withsol(''sol1'',v,setval(para,1))');
model.result('pg15').feature('lngr1').set('unit', 'mm');
model.result('pg15').feature('lngr1').set('xdata', 'expr');
model.result('pg15').feature('lngr1').set('xdataexpr', 'cln1x');
model.result('pg15').feature('lngr1').set('legend', true);
model.result('pg15').feature('lngr1').set('legendmethod', 'manual');
model.result('pg15').feature('lngr1').setIndex('legends', 'Infiltration', 0);
model.result('pg15').feature.duplicate('lngr2', 'lngr1');
model.result('pg15').run;
model.result('pg15').feature('lngr2').set('data', 'cln2');
model.result('pg15').feature('lngr2').setIndex('looplevelinput', 'last', 0);
model.result('pg15').feature('lngr2').setIndex('legends', 'Evaporation', 0);
model.result('pg15').run;
model.result.create('pg16', 'PlotGroup1D');
model.result('pg16').run;

model.nodeGroup('dset1solidlgrp').add('plotgroup', 'pg16');
model.nodeGroup('dset1solidlgrp').remove('plotgroup', 'pg16', true);

model.result('pg16').label('Pressure Head vs. Elevation, Infiltration');
model.result('pg16').set('data', 'dset2');
model.result('pg16').setIndex('looplevelinput', 'manual', 0);
model.result('pg16').setIndex('looplevel', [1 6 11 51], 0);
model.result('pg16').set('titletype', 'label');
model.result('pg16').set('xlabelactive', true);
model.result('pg16').set('xlabel', 'Negative pressure head (m)');
model.result('pg16').set('ylabelactive', true);
model.result('pg16').set('ylabel', 'Elevation (m)');
model.result('pg16').set('legendpos', 'lowerright');
model.result('pg16').create('lngr1', 'LineGraph');
model.result('pg16').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg16').feature('lngr1').set('linewidth', 'preference');
model.result('pg16').feature('lngr1').selection.set([1]);
model.result('pg16').feature('lngr1').set('expr', 'Y');
model.result('pg16').feature('lngr1').set('xdata', 'expr');
model.result('pg16').feature('lngr1').set('xdataexpr', '-dl.Hp');
model.result('pg16').run;
model.result('pg16').feature('lngr1').set('legend', true);
model.result('pg16').feature('lngr1').set('legendmethod', 'evaluated');
model.result('pg16').feature('lngr1').set('legendpattern', 'eval(t, day) days');
model.result('pg16').run;
model.result('pg16').create('lngr2', 'LineGraph');
model.result('pg16').feature('lngr2').set('markerpos', 'datapoints');
model.result('pg16').feature('lngr2').set('linewidth', 'preference');
model.result('pg16').feature('lngr2').set('data', 'dset2');
model.result('pg16').feature('lngr2').setIndex('looplevelinput', 'last', 0);
model.result('pg16').feature('lngr2').selection.set([1]);
model.result('pg16').feature('lngr2').set('expr', 'Y');
model.result('pg16').feature('lngr2').set('xdata', 'expr');
model.result('pg16').feature('lngr2').set('xdataexpr', '-Hp_in');
model.result('pg16').feature('lngr2').set('linemarker', 'circle');
model.result('pg16').feature('lngr2').set('markerpos', 'interp');
model.result('pg16').feature('lngr2').set('legend', true);
model.result('pg16').feature('lngr2').set('legendmethod', 'manual');
model.result('pg16').feature('lngr2').setIndex('legends', 'Gardener solution', 0);
model.result('pg16').run;
model.result('pg16').run;
model.result('pg16').run;
model.result.duplicate('pg17', 'pg16');
model.result('pg17').run;

model.nodeGroup('dset1solidlgrp').add('plotgroup', 'pg17');
model.nodeGroup('dset1solidlgrp').remove('plotgroup', 'pg17', true);

model.result('pg17').label('Pressure Head vs. Elevation, Evaporation');
model.result('pg17').set('data', 'dset3');
model.result('pg17').run;
model.result('pg17').feature('lngr2').set('data', 'dset3');
model.result('pg17').feature('lngr2').set('xdataexpr', '-Hp_out');
model.result('pg17').run;
model.result('pg6').run;
model.result('pg6').set('data', 'mir1');
model.result('pg6').run;
model.result('pg7').run;
model.result('pg7').set('data', 'mir1');
model.result('pg7').run;
model.result('pg3').run;

model.title('Transient Response of a Shallow Foundation on Unsaturated Soil');

model.description('In this example, the transient response of a shallow foundation resting on an unsaturated soil stratum is investigated. The changes in pore suction due to water infiltration or evaporation is investigated using the Extended Barcelona Basic soil model. The results show the deformation of the clay stratum due to footing pressure and changes in pore suction.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;

model.label('settlement_analysis_transient.mph');

model.modelNode.label('Components');

out = model;
