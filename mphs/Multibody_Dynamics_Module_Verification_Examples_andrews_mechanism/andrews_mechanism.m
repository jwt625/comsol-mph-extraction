function out = model
%
% andrews_mechanism.m
%
% Model exported on May 26 2025, 21:31 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Multibody_Dynamics_Module/Verification_Examples');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('mbd', 'MultibodyDynamics', 'geom1');
model.physics('mbd').model('comp1');

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/mbd', true);

model.geom('geom1').create('imp1', 'Import');
model.geom('geom1').feature('imp1').set('filename', 'andrews_mechanism.mphbin');
model.geom('geom1').feature('imp1').importData;
model.geom('geom1').feature('fin').set('action', 'assembly');
model.geom('geom1').run('fin');

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('xC', '0.014[m]', 'x-coordinate of point C');
model.param.set('yC', '0.072[m]', 'y-coordinate of point C');
model.param.set('beta0', '-0.0620[rad]', 'Initial beta');
model.param.set('gamma0', '0.4552[rad]', 'Initial gamma');
model.param.set('delta0', '0.4873[rad]', 'Initial delta');
model.param.set('epsilon0', '1.2305[rad]', 'Initial epsilon');
model.param.set('theta0', '0[rad]', 'Initial theta');
model.param.set('phi0', '0.2227[rad]', 'Initial phi');
model.param.set('omega0', '0.2227[rad]', 'Initial omega');
model.param.set('c0', '4530[N/m]', 'Spring coefficient');
model.param.set('l0', '0.07785[m]', 'Unstretched length of the spring');
model.param.set('M0', '0.033[N*m]', 'Applied moment');
model.param.set('m1', '0.04325[kg]', 'Mass of link 1');
model.param.set('m2', '0.00365[kg]', 'Mass of link 2');
model.param.set('m3', '0.02373[kg]', 'Mass of link 3');
model.param.set('m4', '0.00706[kg]', 'Mass of link 4');
model.param.set('m5', '0.07050[kg]', 'Mass of link 5');
model.param.set('m6', '0.00706[kg]', 'Mass of link 6');
model.param.set('m7', '0.05498[kg]', 'Mass of link 7');
model.param.set('I1', '2.194e-6[kg*m^2]', 'Mass moment of inertia of link 1');
model.param.set('I2', '4.410e-7[kg*m^2]', 'Mass moment of inertia of link 2');
model.param.set('I3', '5.255e-6[kg*m^2]', 'Mass moment of inertia of link 3');
model.param.set('I4', '5.667e-7[kg*m^2]', 'Mass moment of inertia of link 4');
model.param.set('I5', '1.169e-5[kg*m^2]', 'Mass moment of inertia of link 5');
model.param.set('I6', '5.667e-7[kg*m^2]', 'Mass moment of inertia of link 6');
model.param.set('I7', '1.912e-5[kg*m^2]', 'Mass moment of inertia of link 7');

model.physics('mbd').create('rd1', 'RigidDomain', 2);
model.physics('mbd').feature('rd1').selection.set([7]);
model.physics('mbd').feature('rd1').set('rho_mat', 'userdef');
model.physics('mbd').feature('rd1').create('mmi1', 'MassInertia', -1);
model.physics('mbd').feature('rd1').feature('mmi1').set('CenterOfMassType', 'CentroidOfSelectedEntities');
model.physics('mbd').feature('rd1').feature('mmi1').set('EntityLevel', 'Point');
model.physics('mbd').feature('rd1').feature('mmi1').set('mt', 'm1');
model.physics('mbd').feature('rd1').feature('mmi1').set('Iz', 'I1');
model.physics('mbd').feature('rd1').feature('mmi1').feature('cmp1').selection.set([44]);
model.physics('mbd').feature.duplicate('rd2', 'rd1');
model.physics('mbd').feature('rd2').selection.set([6]);
model.physics('mbd').feature('rd2').feature('mmi1').set('mt', 'm2');
model.physics('mbd').feature('rd2').feature('mmi1').set('Iz', 'I2');
model.physics('mbd').feature('rd2').feature('mmi1').feature('cmp1').selection.set([39]);
model.physics('mbd').feature.duplicate('rd3', 'rd2');
model.physics('mbd').feature('rd3').selection.set([3]);
model.physics('mbd').feature('rd3').feature('mmi1').set('mt', 'm3');
model.physics('mbd').feature('rd3').feature('mmi1').set('Iz', 'I3');
model.physics('mbd').feature('rd3').feature('mmi1').feature('cmp1').selection.set([23]);
model.physics('mbd').feature.duplicate('rd4', 'rd3');
model.physics('mbd').feature('rd4').selection.set([4]);
model.physics('mbd').feature('rd4').feature('mmi1').set('mt', 'm4');
model.physics('mbd').feature('rd4').feature('mmi1').set('Iz', 'I4');
model.physics('mbd').feature('rd4').feature('mmi1').feature('cmp1').selection.set([29]);
model.physics('mbd').feature.duplicate('rd5', 'rd4');
model.physics('mbd').feature('rd5').selection.set([1]);
model.physics('mbd').feature('rd5').feature('mmi1').set('mt', 'm5');
model.physics('mbd').feature('rd5').feature('mmi1').set('Iz', 'I5');
model.physics('mbd').feature('rd5').feature('mmi1').feature('cmp1').selection.set([4]);
model.physics('mbd').feature.duplicate('rd6', 'rd5');
model.physics('mbd').feature('rd6').selection.set([5]);
model.physics('mbd').feature('rd6').feature('mmi1').set('mt', 'm6');
model.physics('mbd').feature('rd6').feature('mmi1').set('Iz', 'I6');
model.physics('mbd').feature('rd6').feature('mmi1').feature('cmp1').selection.set([34]);
model.physics('mbd').feature.duplicate('rd7', 'rd6');
model.physics('mbd').feature('rd7').selection.set([2]);
model.physics('mbd').feature('rd7').feature('mmi1').set('mt', 'm7');
model.physics('mbd').feature('rd7').feature('mmi1').set('Iz', 'I7');
model.physics('mbd').feature('rd7').feature('mmi1').feature('cmp1').selection.set([13]);
model.physics('mbd').feature('rd1').create('am1', 'AppliedMoment', -1);
model.physics('mbd').feature('rd1').feature('am1').set('Mtz', 'M0');

model.nodeGroup.create('grp1', 'Physics', 'mbd');
model.nodeGroup('grp1').placeAfter('init1');
model.nodeGroup('grp1').add('rd1');
model.nodeGroup('grp1').add('rd2');
model.nodeGroup('grp1').add('rd3');
model.nodeGroup('grp1').add('rd4');
model.nodeGroup('grp1').add('rd5');
model.nodeGroup('grp1').add('rd6');
model.nodeGroup('grp1').add('rd7');
model.nodeGroup('grp1').label('Rigid Materials');

model.physics('mbd').create('spd1', 'SpringDamper', -1);
model.physics('mbd').feature('spd1').set('Source', 'fixed');
model.physics('mbd').feature('spd1').set('xs0', {'xC' 'yC' '0'});
model.physics('mbd').feature('spd1').set('Destination', 'rd3');
model.physics('mbd').feature('spd1').set('DestinationPoint', 'CentroidOfSelectedEntities');
model.physics('mbd').feature('spd1').feature('dpb1').selection.set([25]);
model.physics('mbd').feature('spd1').set('k', 'c0');
model.physics('mbd').feature('spd1').set('FreeLengthType', 'specifyFreeLength');
model.physics('mbd').feature('spd1').set('lf', 'l0');
model.physics('mbd').create('hgj1', 'HingeJoint', -1);
model.physics('mbd').feature('hgj1').set('Source', 'fixed');
model.physics('mbd').feature('hgj1').set('Destination', 'rd1');
model.physics('mbd').feature('hgj1').set('EntityLevel', 'Point');
model.physics('mbd').feature('hgj1').feature('cjp1').selection.set([42 43]);
model.physics('mbd').feature.duplicate('hgj2', 'hgj1');
model.physics('mbd').feature('hgj2').set('Source', 'rd1');
model.physics('mbd').feature('hgj2').set('Destination', 'rd2');
model.physics('mbd').feature('hgj2').feature('cjp1').selection.set([45 46]);
model.physics('mbd').feature.duplicate('hgj3', 'hgj2');
model.physics('mbd').feature('hgj3').set('Source', 'rd2');
model.physics('mbd').feature('hgj3').set('Destination', 'rd3');
model.physics('mbd').feature('hgj3').feature('cjp1').selection.set([37 38]);
model.physics('mbd').feature.duplicate('hgj4', 'hgj3');
model.physics('mbd').feature('hgj4').set('Destination', 'rd4');
model.physics('mbd').feature.duplicate('hgj5', 'hgj4');
model.physics('mbd').feature('hgj5').set('Destination', 'rd6');
model.physics('mbd').feature.duplicate('hgj6', 'hgj2');
model.physics('mbd').feature('hgj6').set('Source', 'rd5');
model.physics('mbd').feature('hgj6').set('Destination', 'rd4');
model.physics('mbd').feature('hgj6').feature('cjp1').selection.set([27 28]);
model.physics('mbd').feature.duplicate('hgj7', 'hgj6');
model.physics('mbd').feature('hgj7').set('Source', 'rd7');
model.physics('mbd').feature('hgj7').set('Destination', 'rd6');
model.physics('mbd').feature('hgj7').feature('cjp1').selection.set([32 33]);
model.physics('mbd').feature.duplicate('hgj8', 'hgj5');
model.physics('mbd').feature('hgj8').set('Source', 'fixed');
model.physics('mbd').feature('hgj8').set('Destination', 'rd5');
model.physics('mbd').feature('hgj8').feature('cjp1').selection.set([1 2]);
model.physics('mbd').feature.duplicate('hgj9', 'hgj8');
model.physics('mbd').feature('hgj9').set('Destination', 'rd7');
model.physics('mbd').feature('hgj9').feature('cjp1').selection.set([9 10]);
model.physics('mbd').feature.duplicate('hgj10', 'hgj9');
model.physics('mbd').feature('hgj10').set('Destination', 'rd3');
model.physics('mbd').feature('hgj10').feature('cjp1').selection.set([17 18]);

model.nodeGroup.create('grp2', 'Physics', 'mbd');
model.nodeGroup('grp2').placeAfter('spd1');
model.nodeGroup('grp2').add('hgj1');
model.nodeGroup('grp2').add('hgj2');
model.nodeGroup('grp2').add('hgj3');
model.nodeGroup('grp2').add('hgj4');
model.nodeGroup('grp2').add('hgj5');
model.nodeGroup('grp2').add('hgj6');
model.nodeGroup('grp2').add('hgj7');
model.nodeGroup('grp2').add('hgj8');
model.nodeGroup('grp2').add('hgj9');
model.nodeGroup('grp2').add('hgj10');
model.nodeGroup('grp2').label('Hinge Joints');

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').set('beta', 'mod(mbd.hgj1.th-pi,2*pi)-pi+beta0');
model.variable('var1').descr('beta', 'beta');
model.variable('var1').set('theta', 'mod(mbd.hgj2.th-pi,2*pi)-pi+theta0');
model.variable('var1').descr('theta', 'theta');
model.variable('var1').set('gamma', 'mbd.hgj10.th+gamma0');
model.variable('var1').descr('gamma', 'gamma');
model.variable('var1').set('delta', 'mbd.hgj8.th+delta0');
model.variable('var1').descr('delta', 'delta');
model.variable('var1').set('phi', 'mbd.hgj6.th+phi0');
model.variable('var1').descr('phi', 'phi');
model.variable('var1').set('omega', 'mbd.hgj7.th-omega0');
model.variable('var1').descr('omega', 'omega');

model.study('std1').feature('time').set('tlist', 'range(0,1e-4,0.03)');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_mbd_rd_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_mbd_jnt_rot').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_mbd_rd_rot').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_mbd_rd_disp').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_mbd_jnt_rot').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_mbd_rd_rot').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_mbd_rd_disp').set('scaleval', '9.118708549337747E-4');
model.sol('sol1').feature('v1').feature('comp1_mbd_jnt_rot').set('scaleval', '0.1');
model.sol('sol1').feature('v1').feature('comp1_mbd_rd_rot').set('scaleval', '0.1');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.09118708549337746');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,1e-4,0.03)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('atolglobalmethod', 'scaled');
model.sol('sol1').feature('t1').set('atolglobalfactor', 0.1);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('eventtol', 0.01);
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('tstepsbdf', 'strict');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('minorder', 1);
model.sol('sol1').feature('t1').set('rescaleafterinitbw', false);
model.sol('sol1').feature('t1').set('bwinitstepfrac', '0.001');
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'onevery');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'const');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 1);
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('t1').feature('fc1').set('ntermconst', 'tol');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'onevery');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'const');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 1);
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('t1').feature('fc1').set('ntermconst', 'tol');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').label('Displacement (mbd)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 301, 0);
model.result('pg1').set('defaultPlotID', 'displacement');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').label('Surface');
model.result('pg1').feature('surf1').set('colortable', 'SpectrumLight');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result('pg1').feature('surf1').feature.create('def1', 'Deform');
model.result('pg1').feature('surf1').feature('def1').label('Deformation');
model.result('pg1').feature('surf1').feature('def1').set('scaleactive', true);
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').label('Velocity (mbd)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 301, 0);
model.result('pg2').set('defaultPlotID', 'velocity');
model.result('pg2').feature.create('surf1', 'Surface');
model.result('pg2').feature('surf1').label('Surface');
model.result('pg2').feature('surf1').set('expr', 'mod(dom,10)');
model.result('pg2').feature('surf1').set('unit', '1');
model.result('pg2').feature('surf1').set('colortable', 'Cyclic');
model.result('pg2').feature('surf1').set('colorlegend', false);
model.result('pg2').feature('surf1').set('data', 'parent');
model.result('pg2').feature('surf1').feature.create('def1', 'Deform');
model.result('pg2').feature('surf1').feature('def1').label('Deformation');
model.result('pg2').feature('surf1').feature('def1').set('scaleactive', true);
model.result('pg2').feature.create('arwl1', 'ArrowLine');
model.result('pg2').feature('arwl1').label('Arrow Line');
model.result('pg2').feature('arwl1').set('expr', {'mbd.u_tX' 'mbd.u_tY'});
model.result('pg2').feature('arwl1').set('placement', 'elements');
model.result('pg2').feature('arwl1').set('data', 'parent');
model.result('pg2').feature('arwl1').feature.create('def1', 'Deform');
model.result('pg2').feature('arwl1').feature('def1').label('Deformation');
model.result('pg2').feature('arwl1').feature('def1').set('scaleactive', true);
model.result('pg1').run;
model.result('pg1').set('frametype', 'material');
model.result('pg1').setIndex('looplevel', 281, 0);
model.result('pg1').run;
model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').label('beta');
model.result.table('tbl1').importData('andrews_mechanism_beta.txt');
model.result.table.create('tbl2', 'Table');
model.result.table('tbl2').label('theta');
model.result.table('tbl2').importData('andrews_mechanism_theta.txt');
model.result.table.create('tbl3', 'Table');
model.result.table('tbl3').label('gamma');
model.result.table('tbl3').importData('andrews_mechanism_gamma.txt');
model.result.table.create('tbl4', 'Table');
model.result.table('tbl4').label('delta');
model.result.table('tbl4').importData('andrews_mechanism_delta.txt');
model.result.table.create('tbl5', 'Table');
model.result.table('tbl5').label('phi');
model.result.table('tbl5').importData('andrews_mechanism_phi.txt');
model.result.table.create('tbl6', 'Table');
model.result.table('tbl6').label('omega');
model.result.table('tbl6').importData('andrews_mechanism_omega.txt');
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('Angles');
model.result('pg3').create('glob1', 'Global');
model.result('pg3').feature('glob1').set('markerpos', 'datapoints');
model.result('pg3').feature('glob1').set('linewidth', 'preference');
model.result('pg3').feature('glob1').set('expr', {'beta'});
model.result('pg3').feature('glob1').set('descr', {'beta'});
model.result('pg3').feature('glob1').set('unit', {'rad'});
model.result('pg3').feature('glob1').set('expr', {'beta' 'theta'});
model.result('pg3').feature('glob1').set('descr', {'beta' 'theta'});
model.result('pg3').feature('glob1').set('expr', {'beta' 'theta' 'gamma'});
model.result('pg3').feature('glob1').set('descr', {'beta' 'theta' 'gamma'});
model.result('pg3').feature('glob1').set('expr', {'beta' 'theta' 'gamma' 'delta'});
model.result('pg3').feature('glob1').set('descr', {'beta' 'theta' 'gamma' 'delta'});
model.result('pg3').feature('glob1').set('expr', {'beta' 'theta' 'gamma' 'delta' 'phi'});
model.result('pg3').feature('glob1').set('descr', {'beta' 'theta' 'gamma' 'delta' 'phi'});
model.result('pg3').feature('glob1').set('expr', {'beta' 'theta' 'gamma' 'delta' 'phi' 'omega'});
model.result('pg3').feature('glob1').set('descr', {'beta' 'theta' 'gamma' 'delta' 'phi' 'omega'});
model.result('pg3').feature('glob1').set('linewidth', 2);
model.result('pg3').feature('glob1').set('legend', false);
model.result('pg3').run;
model.result('pg3').create('tblp1', 'Table');
model.result('pg3').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg3').feature('tblp1').set('linewidth', 'preference');
model.result('pg3').feature('tblp1').set('linemarker', 'cycle');
model.result('pg3').feature('tblp1').set('linestyle', 'none');
model.result('pg3').feature('tblp1').set('legend', true);
model.result('pg3').feature('tblp1').set('legendmethod', 'manual');
model.result('pg3').feature('tblp1').setIndex('legends', '\beta', 0);
model.result('pg3').feature.duplicate('tblp2', 'tblp1');
model.result('pg3').run;
model.result('pg3').feature('tblp2').set('table', 'tbl2');
model.result('pg3').feature('tblp2').setIndex('legends', '\theta', 0);
model.result('pg3').feature.duplicate('tblp3', 'tblp2');
model.result('pg3').run;
model.result('pg3').feature('tblp3').set('table', 'tbl3');
model.result('pg3').feature('tblp3').setIndex('legends', '\gamma', 0);
model.result('pg3').feature.duplicate('tblp4', 'tblp3');
model.result('pg3').run;
model.result('pg3').feature('tblp4').set('table', 'tbl4');
model.result('pg3').feature('tblp4').setIndex('legends', '\delta', 0);
model.result('pg3').feature.duplicate('tblp5', 'tblp4');
model.result('pg3').run;
model.result('pg3').feature('tblp5').set('table', 'tbl5');
model.result('pg3').feature('tblp5').setIndex('legends', '\phi', 0);
model.result('pg3').feature.duplicate('tblp6', 'tblp5');
model.result('pg3').run;
model.result('pg3').feature('tblp6').set('table', 'tbl6');
model.result('pg3').feature('tblp6').setIndex('legends', '\omega', 0);
model.result('pg3').run;
model.result('pg3').set('legendpos', 'upperleft');
model.result('pg3').set('titletype', 'none');
model.result('pg3').set('xlabelactive', true);
model.result('pg3').set('xlabel', 'Time (s)');
model.result('pg3').set('ylabelactive', true);
model.result('pg3').set('ylabel', 'Angles (rad)');
model.result('pg3').run;
model.result.export.create('anim1', 'Animation');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('fontsize', '9');
model.result.export('anim1').set('colortheme', 'globaltheme');
model.result.export('anim1').set('customcolor', [1 1 1]);
model.result.export('anim1').set('background', 'color');
model.result.export('anim1').set('gltfincludelines', 'on');
model.result.export('anim1').set('title1d', 'on');
model.result.export('anim1').set('legend1d', 'on');
model.result.export('anim1').set('logo1d', 'on');
model.result.export('anim1').set('options1d', 'on');
model.result.export('anim1').set('title2d', 'on');
model.result.export('anim1').set('legend2d', 'on');
model.result.export('anim1').set('logo2d', 'on');
model.result.export('anim1').set('options2d', 'off');
model.result.export('anim1').set('title3d', 'on');
model.result.export('anim1').set('legend3d', 'on');
model.result.export('anim1').set('logo3d', 'on');
model.result.export('anim1').set('options3d', 'off');
model.result.export('anim1').set('axisorientation', 'on');
model.result.export('anim1').set('grid', 'on');
model.result.export('anim1').set('axes1d', 'on');
model.result.export('anim1').set('axes2d', 'on');
model.result.export('anim1').set('showgrid', 'on');
model.result.export('anim1').showFrame;
model.result.export('anim1').set('maxframes', 100);
model.result('pg1').run;

model.title('Andrew''s Squeezing Mechanism');

model.description('This example illustrates the modeling of Andrew''s squeezing mechanism, also known as seven body mechanism, a benchmark problem for multibody dynamics. The links in the mechanism are rigid and ten hinge joints are used to establish the connections between them. The results obtained, various angles in the mechanism, are compared with the result from the reference.');

model.label('andrews_mechanism.mph');

model.modelNode.label('Components');

out = model;
