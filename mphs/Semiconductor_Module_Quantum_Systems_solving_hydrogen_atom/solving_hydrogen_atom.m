function out = model
%
% solving_hydrogen_atom.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Semiconductor_Module/Quantum_Systems');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('schr', 'SchrodingerEquation', 'geom1', {'psi'});

model.study.create('std1');
model.study('std1').create('eigv', 'Eigenvalue');
model.study('std1').feature('eigv').set('neigs', '3');
model.study('std1').feature('eigv').set('eigunit', '');
model.study('std1').feature('eigv').set('shift', '0.1');
model.study('std1').feature('eigv').set('conrad', '1');
model.study('std1').feature('eigv').set('conradynhm', '1');
model.study('std1').feature('eigv').set('conlbdy', '0');
model.study('std1').feature('eigv').set('conubdy', '1');
model.study('std1').feature('eigv').set('linpsolnum', 'auto');
model.study('std1').feature('eigv').set('solnum', 'auto');
model.study('std1').feature('eigv').set('notsolnum', 'auto');
model.study('std1').feature('eigv').set('outputmap', {});
model.study('std1').feature('eigv').set('ngenAUX', '1');
model.study('std1').feature('eigv').set('goalngenAUX', '1');
model.study('std1').feature('eigv').set('ngenAUX', '1');
model.study('std1').feature('eigv').set('goalngenAUX', '1');
model.study('std1').feature('eigv').setSolveFor('/physics/schr', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('A0', '15*a0_const', 'Simulation domain radius');
model.param.set('kC', '1/(4*pi*epsilon0_const)', 'Coulomb constant');
model.param.set('h0', '0.2*a0_const', 'Mesh size at origin');
model.param.set('hg', '1/(2*a0_const)', 'Mesh growth scaling');
model.param.set('RH', 'me_const*e_const^4/(8*h_const^2*epsilon0_const^2)/(1[eV])', 'Rydberg constant in units of eV');
model.param.set('E1', '-RH', 'n=1 eigenenergy (eV)');
model.param.set('E2', '-RH/4', 'n=2 eigenenergy (eV)');
model.param.set('Eext', '0.01[V]/a0_const', 'External electric field');
model.param.set('E2StarkLow', 'E2-3*e_const*Eext*a0_const/1[eV]', 'Stark splitting low eigenenergy for n=2 (eV)');
model.param.set('E2StarkHigh', 'E2+3*e_const*Eext*a0_const/1[eV]', 'Stark splitting high eigenenergy for n=2 (eV)');

model.geom('geom1').create('sph1', 'Sphere');
model.geom('geom1').feature('sph1').set('r', 'A0+0.1*A0');
model.geom('geom1').feature('sph1').setIndex('layer', '0.1*A0', 0);
model.geom('geom1').run('sph1');
model.geom('geom1').create('pt1', 'Point');

model.variable.create('var1');
model.variable('var1').model('comp1');

model.geom('geom1').run;

model.variable('var1').set('Psi100', 'exp(-sys2.r/a0_const)/(sqrt(pi*a0_const^3))');
model.variable('var1').descr('Psi100', 'Ground state');
model.variable('var1').set('Psi200', '0.25*(2-sys2.r/a0_const)/(sqrt(2*pi*a0_const^3))*exp(-sys2.r/a0_const/2)');
model.variable('var1').descr('Psi200', 'n=2, l,m=0 eigenstate');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');
model.selection('sel1').label('Simulation domain');
model.selection('sel1').set([5]);
model.selection.create('com1', 'Complement');
model.selection('com1').model('comp1');
model.selection('com1').label('Infinite element domain');
model.selection('com1').set('input', {'sel1'});
model.selection.create('adj1', 'Adjacent');
model.selection('adj1').model('comp1');
model.selection('adj1').label('Exterior boundary');
model.selection('adj1').set('input', {'sel1' 'com1'});
model.selection.create('adj2', 'Adjacent');
model.selection('adj2').model('comp1');
model.selection('adj2').label('Interior boundary');
model.selection('adj2').set('input', {'sel1'});

model.coordSystem.create('sys2', 'geom1', 'Spherical');
model.coordSystem.create('ie1', 'geom1', 'InfiniteElement');
model.coordSystem('ie1').selection.named('com1');
model.coordSystem('ie1').set('ScalingType', 'Spherical');

model.physics('schr').prop('ModelProperties').set('E', '-15[eV]');
model.physics('schr').feature('meff1').set('meffe_psi', {'me_const' '0' '0' '0' 'me_const' '0' '0' '0' 'me_const'});
model.physics('schr').feature('ve1').label('Nucleus');
model.physics('schr').feature('ve1').set('Ve_src', 'userdef');
model.physics('schr').feature('ve1').set('Ve', '-kC*e_const^2/sys2.r');
model.physics('schr').create('zprb1', 'ZeroProbability', 2);
model.physics('schr').feature('zprb1').selection.named('adj1');
model.physics('schr').create('ve2', 'ElectronPotentialEnergy', 3);
model.physics('schr').feature('ve2').label('External field along z-axis');
model.physics('schr').feature('ve2').selection.all;
model.physics('schr').feature('ve2').set('Ve_src', 'userdef');
model.physics('schr').feature('ve2').set('Ve', 'e_const*Eext*z');

model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('size').set('custom', true);
model.mesh('mesh1').feature('size').set('hmax', '10*h0');
model.mesh('mesh1').feature('size').set('hmin', '0.1*h0');
model.mesh('mesh1').feature('ftet1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('ftet1').selection.named('sel1');
model.mesh('mesh1').feature('ftet1').create('se1', 'SizeExpression');
model.mesh('mesh1').feature('ftet1').feature('se1').set('sizeexpr', '(1+sqrt(x^2+y^2+z^2)*hg)*h0');
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe1').selection.named('com1');
model.mesh('mesh1').feature('swe1').selection('sourceface').named('adj2');
model.mesh('mesh1').feature('swe1').selection('targetface').named('adj1');
model.mesh('mesh1').feature('swe1').create('dis1', 'Distribution');

model.study('std1').label('No External Field');
model.study('std1').feature('eigv').set('neigs', 5);
model.study('std1').feature('eigv').set('shift', '-15');
model.study('std1').feature('eigv').set('useadvanceddisable', true);
model.study('std1').feature('eigv').set('disabledphysics', {'schr/ve2'});

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'eigv');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'eigv');
model.sol('sol1').create('e1', 'Eigenvalue');
model.sol('sol1').feature('e1').set('neigs', 6);
model.sol('sol1').feature('e1').set('shift', '0');
model.sol('sol1').feature('e1').set('rtol', 1.0E-10);
model.sol('sol1').feature('e1').set('transform', 'none');
model.sol('sol1').feature('e1').set('eigref', '0.1');
model.sol('sol1').feature('e1').set('eigvfunscale', 'average');
model.sol('sol1').feature('e1').set('control', 'eigv');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.numerical.create('gev1', 'EvalGlobal');
model.result.numerical('gev1').label('Eigenvalue');
model.result.numerical('gev1').set('showlooplevelinput', {'off' 'off' 'off'});
model.result.numerical('gev1').set('expr', {'schr.Ei' 'schr.int(schr.Pr)'});
model.result.numerical('gev1').setIndex('unit', 'eV', 0);
model.result.numerical('gev1').set('descr', {'Eigenenergy' 'Total probability'});
model.result.numerical('gev1').setIndex('unit', 'eV', 0);
model.result.numerical('gev1').setIndex('unit', 'eV', 0);
model.result.numerical('gev1').setIndex('unit', 'eV', 0);
model.result.numerical('gev1').setIndex('unit', 'eV', 0);
model.result.numerical('gev1').set('data', 'dset1');
model.result.numerical('gev1').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond2/pcond5/gev1');
model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').label('Normalized Wave Function (schr)');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 1, 0);
model.result('pg1').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond4/pcond1/pcond7/pg10');
model.result('pg1').feature.create('mslc1', 'Multislice');
model.result('pg1').feature('mslc1').set('expr', 'schr.Psi_psi');
model.result('pg1').feature('mslc1').set('smooth', 'internal');
model.result('pg1').feature('mslc1').set('data', 'parent');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Normalized Wave Function (schr) 1');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 1, 0);
model.result('pg2').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond4/pcond1/pcond7/pg11');
model.result('pg2').feature.create('mslc1', 'Multislice');
model.result('pg2').feature('mslc1').set('expr', 'imag(schr.Psi_psi)');
model.result('pg2').feature('mslc1').set('smooth', 'internal');
model.result('pg2').feature('mslc1').set('data', 'parent');
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').label('Probability Density (schr)');
model.result('pg3').set('data', 'dset1');
model.result('pg3').setIndex('looplevel', 1, 0);
model.result('pg3').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond4/pg10');
model.result('pg3').feature.create('mslc1', 'Multislice');
model.result('pg3').feature('mslc1').set('expr', 'schr.Pr');
model.result('pg3').feature('mslc1').set('smooth', 'internal');
model.result('pg3').feature('mslc1').set('data', 'parent');
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').label('Potential Energy (schr)');
model.result('pg4').set('data', 'dset1');
model.result('pg4').setIndex('looplevel', 1, 0);
model.result('pg4').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond4/pg9');
model.result('pg4').feature.create('mslc1', 'Multislice');
model.result('pg4').feature('mslc1').set('expr', 'schr.V_psi');
model.result('pg4').feature('mslc1').set('unit', 'eV');
model.result('pg4').feature('mslc1').set('smooth', 'internal');
model.result('pg4').feature('mslc1').set('data', 'parent');
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').label('Effective Mass (schr)');
model.result('pg5').set('data', 'dset1');
model.result('pg5').setIndex('looplevel', 1, 0);
model.result('pg5').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond4/pg8');
model.result('pg5').feature.create('mslc1', 'Multislice');
model.result('pg5').feature('mslc1').set('expr', 'schr.meff_psiXX/me_const');
model.result('pg5').feature('mslc1').set('smooth', 'internal');
model.result('pg5').feature('mslc1').set('data', 'parent');
model.result('pg1').run;
model.result.dataset.create('cln1', 'CutLine3D');
model.result.dataset('cln1').setIndex('genpoints', 0, 1, 0);
model.result.dataset('cln1').setIndex('genpoints', 'A0', 1, 2);
model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').run;
model.result('pg6').label('1s Radial Probability');
model.result('pg6').set('data', 'cln1');
model.result('pg6').setIndex('looplevelinput', 'first', 0);
model.result('pg6').set('xlabelactive', true);
model.result('pg6').set('xlabel', 'r/a<sub>0</sub>');
model.result('pg6').set('ylabelactive', true);
model.result('pg6').set('ylabel', 'Radial Probability: 4\pi r<sup>2</sup>|\psi<sub>100</sub>|<sup>2</sup>');
model.result('pg6').create('lngr1', 'LineGraph');
model.result('pg6').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg6').feature('lngr1').set('linewidth', 'preference');
model.result('pg6').feature('lngr1').set('expr', '4*pi*sys2.r^2*(comp1.Psi100)^2');
model.result('pg6').feature('lngr1').set('xdata', 'expr');
model.result('pg6').feature('lngr1').set('xdataexpr', 'sys2.r/a0_const');
model.result('pg6').feature('lngr1').set('linewidth', 3);
model.result('pg6').feature('lngr1').set('legend', true);
model.result('pg6').feature('lngr1').set('legendmethod', 'manual');
model.result('pg6').feature('lngr1').setIndex('legends', 'Analytic', 0);
model.result('pg6').feature('lngr1').set('resolution', 'finer');
model.result('pg6').run;
model.result('pg6').create('lngr2', 'LineGraph');
model.result('pg6').feature('lngr2').set('markerpos', 'datapoints');
model.result('pg6').feature('lngr2').set('linewidth', 'preference');
model.result('pg6').feature('lngr2').set('expr', '4*pi*sys2.r^2*schr.Pr');
model.result('pg6').feature('lngr2').set('xdata', 'expr');
model.result('pg6').feature('lngr2').set('xdataexpr', 'sys2.r/a0_const');
model.result('pg6').feature('lngr2').set('linestyle', 'none');
model.result('pg6').feature('lngr2').set('linewidth', 3);
model.result('pg6').feature('lngr2').set('linemarker', 'point');
model.result('pg6').feature('lngr2').set('markerpos', 'interp');
model.result('pg6').feature('lngr2').set('markers', 50);
model.result('pg6').feature('lngr2').set('legend', true);
model.result('pg6').feature('lngr2').set('legendmethod', 'manual');
model.result('pg6').feature('lngr2').setIndex('legends', 'Simulation', 0);
model.result('pg6').run;
model.result('pg6').run;
model.result.duplicate('pg7', 'pg6');
model.result('pg7').run;
model.result('pg7').label('2s Radial Probability');
model.result('pg7').setIndex('looplevelinput', 'manualindices', 0);
model.result('pg7').setIndex('looplevelindices', 2, 0);
model.result('pg7').set('ylabel', 'Radial Probability: 4\pi r<sup>2</sup>|\psi<sub>200</sub>|<sup>2</sup>');
model.result('pg7').run;
model.result('pg7').feature('lngr1').set('expr', '4*pi*sys2.r^2*(comp1.Psi200)^2');
model.result('pg7').run;
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').run;
model.result('pg8').label('Unperturbed orbital shapes');
model.result('pg8').set('titletype', 'manual');
model.result('pg8').set('title', 'Unperturbed Orbital Shapes');
model.result('pg8').set('edges', false);
model.result('pg8').set('showlegends', false);
model.result('pg8').create('iso1', 'Isosurface');
model.result('pg8').feature('iso1').set('expr', 'schr.Pr');
model.result('pg8').run;
model.result('pg8').create('iso2', 'Isosurface');
model.result('pg8').feature('iso2').set('data', 'dset1');
model.result('pg8').feature('iso2').set('looplevel', [2]);
model.result('pg8').feature('iso2').set('expr', 'schr.Pr');
model.result('pg8').feature('iso2').set('interactive', true);
model.result('pg8').feature('iso2').set('shift', -2.45E28);
model.result('pg8').feature('iso2').create('trn1', 'Translation');
model.result('pg8').run;
model.result('pg8').feature('iso2').feature('trn1').set('trans', {'7E-10' '0' '0'});
model.result('pg8').run;
model.result('pg8').create('iso3', 'Isosurface');
model.result('pg8').feature('iso3').set('data', 'dset1');
model.result('pg8').feature('iso3').set('looplevel', [3]);
model.result('pg8').feature('iso3').set('expr', 'schr.Pr');
model.result('pg8').feature('iso3').create('trn1', 'Translation');
model.result('pg8').run;
model.result('pg8').feature('iso3').feature('trn1').set('trans', {'15E-10' '0' '0'});
model.result('pg8').run;
model.result('pg8').create('iso4', 'Isosurface');
model.result('pg8').feature('iso4').set('data', 'dset1');
model.result('pg8').feature('iso4').set('looplevel', [4]);
model.result('pg8').feature('iso4').set('expr', 'schr.Pr');
model.result('pg8').feature('iso4').create('trn1', 'Translation');
model.result('pg8').run;
model.result('pg8').feature('iso4').feature('trn1').set('trans', {'15E-10' '0' '7.5E-10'});
model.result('pg8').run;
model.result('pg8').create('iso5', 'Isosurface');
model.result('pg8').feature('iso5').set('data', 'dset1');
model.result('pg8').feature('iso5').set('looplevel', [5]);
model.result('pg8').feature('iso5').set('expr', 'schr.Pr');
model.result('pg8').feature('iso5').create('trn1', 'Translation');
model.result('pg8').run;
model.result('pg8').feature('iso5').feature('trn1').set('trans', {'15E-10' '0' '-7.5E-10'});
model.result('pg8').run;
model.result('pg8').create('ann1', 'Annotation');
model.result('pg8').feature('ann1').set('text', '1s');
model.result('pg8').feature('ann1').set('poszexpr', '2E-10');
model.result('pg8').feature('ann1').set('showpoint', false);
model.result('pg8').feature('ann1').set('anchorpoint', 'center');
model.result('pg8').run;
model.result('pg8').create('ann2', 'Annotation');
model.result('pg8').feature('ann2').set('text', '2s');
model.result('pg8').feature('ann2').set('posxexpr', '7E-10');
model.result('pg8').feature('ann2').set('poszexpr', '5E-10');
model.result('pg8').feature('ann2').set('showpoint', false);
model.result('pg8').feature('ann2').set('anchorpoint', 'center');
model.result('pg8').run;
model.result('pg8').create('ann3', 'Annotation');
model.result('pg8').feature('ann3').set('text', '2p');
model.result('pg8').feature('ann3').set('posxexpr', '15E-10');
model.result('pg8').feature('ann3').set('poszexpr', '12.5E-10');
model.result('pg8').feature('ann3').set('showpoint', false);
model.result('pg8').feature('ann3').set('anchorpoint', 'center');

model.view('view1').set('transparency', true);

model.result('pg8').run;

model.study.create('std2');
model.study('std2').create('eigv', 'Eigenvalue');
model.study('std2').feature('eigv').set('plotgroup', 'Default');
model.study('std2').feature('eigv').set('neigs', '3');
model.study('std2').feature('eigv').set('eigunit', '');
model.study('std2').feature('eigv').set('shift', '0.1');
model.study('std2').feature('eigv').set('conrad', '1');
model.study('std2').feature('eigv').set('conradynhm', '1');
model.study('std2').feature('eigv').set('conlbdy', '0');
model.study('std2').feature('eigv').set('conubdy', '1');
model.study('std2').feature('eigv').set('linpsolnum', 'auto');
model.study('std2').feature('eigv').set('solnum', 'auto');
model.study('std2').feature('eigv').set('notsolnum', 'auto');
model.study('std2').feature('eigv').set('outputmap', {});
model.study('std2').feature('eigv').set('ngenAUX', '1');
model.study('std2').feature('eigv').set('goalngenAUX', '1');
model.study('std2').feature('eigv').set('ngenAUX', '1');
model.study('std2').feature('eigv').set('goalngenAUX', '1');
model.study('std2').feature('eigv').setSolveFor('/physics/schr', true);
model.study('std2').label('Stark Effect');
model.study('std2').feature('eigv').set('neigs', 5);
model.study('std2').feature('eigv').set('shift', '-15');

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'eigv');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'eigv');
model.sol('sol2').create('e1', 'Eigenvalue');
model.sol('sol2').feature('e1').set('neigs', 6);
model.sol('sol2').feature('e1').set('shift', '0');
model.sol('sol2').feature('e1').set('rtol', 1.0E-10);
model.sol('sol2').feature('e1').set('transform', 'none');
model.sol('sol2').feature('e1').set('eigref', '0.1');
model.sol('sol2').feature('e1').set('eigvfunscale', 'average');
model.sol('sol2').feature('e1').set('control', 'eigv');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result.numerical.create('gev2', 'EvalGlobal');
model.result.numerical('gev2').label('Eigenvalue 1');
model.result.numerical('gev2').set('data', 'dset2');
model.result.numerical('gev2').set('showlooplevelinput', {'off' 'off' 'off'});
model.result.numerical('gev2').set('expr', {'schr.Ei' 'schr.int(schr.Pr)'});
model.result.numerical('gev2').setIndex('unit', 'eV', 0);
model.result.numerical('gev2').set('descr', {'Eigenenergy' 'Total probability'});
model.result.numerical('gev2').setIndex('unit', 'eV', 0);
model.result.numerical('gev2').setIndex('unit', 'eV', 0);
model.result.numerical('gev2').setIndex('unit', 'eV', 0);
model.result.numerical('gev2').setIndex('unit', 'eV', 0);
model.result.numerical('gev2').set('data', 'dset2');
model.result.numerical('gev2').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond2/pcond5/gev1');
model.result.create('pg9', 'PlotGroup3D');
model.result('pg9').label('Normalized Wave Function (schr) 2');
model.result('pg9').set('data', 'dset2');
model.result('pg9').setIndex('looplevel', 1, 0);
model.result('pg9').set('data', 'dset2');
model.result('pg9').setIndex('looplevel', 1, 0);
model.result('pg9').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond4/pcond1/pcond7/pg10');
model.result('pg9').feature.create('mslc1', 'Multislice');
model.result('pg9').feature('mslc1').set('expr', 'schr.Psi_psi');
model.result('pg9').feature('mslc1').set('smooth', 'internal');
model.result('pg9').feature('mslc1').set('data', 'parent');
model.result.create('pg10', 'PlotGroup3D');
model.result('pg10').label('Normalized Wave Function (schr) 3');
model.result('pg10').set('data', 'dset2');
model.result('pg10').setIndex('looplevel', 1, 0);
model.result('pg10').set('data', 'dset2');
model.result('pg10').setIndex('looplevel', 1, 0);
model.result('pg10').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond4/pcond1/pcond7/pg11');
model.result('pg10').feature.create('mslc1', 'Multislice');
model.result('pg10').feature('mslc1').set('expr', 'imag(schr.Psi_psi)');
model.result('pg10').feature('mslc1').set('smooth', 'internal');
model.result('pg10').feature('mslc1').set('data', 'parent');
model.result.create('pg11', 'PlotGroup3D');
model.result('pg11').label('Probability Density (schr) 1');
model.result('pg11').set('data', 'dset2');
model.result('pg11').setIndex('looplevel', 1, 0);
model.result('pg11').set('data', 'dset2');
model.result('pg11').setIndex('looplevel', 1, 0);
model.result('pg11').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond4/pg10');
model.result('pg11').feature.create('mslc1', 'Multislice');
model.result('pg11').feature('mslc1').set('expr', 'schr.Pr');
model.result('pg11').feature('mslc1').set('smooth', 'internal');
model.result('pg11').feature('mslc1').set('data', 'parent');
model.result.create('pg12', 'PlotGroup3D');
model.result('pg12').label('Potential Energy (schr) 1');
model.result('pg12').set('data', 'dset2');
model.result('pg12').setIndex('looplevel', 1, 0);
model.result('pg12').set('data', 'dset2');
model.result('pg12').setIndex('looplevel', 1, 0);
model.result('pg12').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond4/pg9');
model.result('pg12').feature.create('mslc1', 'Multislice');
model.result('pg12').feature('mslc1').set('expr', 'schr.V_psi');
model.result('pg12').feature('mslc1').set('unit', 'eV');
model.result('pg12').feature('mslc1').set('smooth', 'internal');
model.result('pg12').feature('mslc1').set('data', 'parent');
model.result.create('pg13', 'PlotGroup3D');
model.result('pg13').label('Effective Mass (schr) 1');
model.result('pg13').set('data', 'dset2');
model.result('pg13').setIndex('looplevel', 1, 0);
model.result('pg13').set('data', 'dset2');
model.result('pg13').setIndex('looplevel', 1, 0);
model.result('pg13').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond4/pg8');
model.result('pg13').feature.create('mslc1', 'Multislice');
model.result('pg13').feature('mslc1').set('expr', 'schr.meff_psiXX/me_const');
model.result('pg13').feature('mslc1').set('smooth', 'internal');
model.result('pg13').feature('mslc1').set('data', 'parent');
model.result('pg9').run;
model.result('pg8').run;
model.result.duplicate('pg14', 'pg8');
model.result('pg14').run;
model.result('pg14').label('Stark effect orbital shapes');
model.result('pg14').set('data', 'dset2');
model.result('pg14').set('title', 'Stark Effect Orbital Shapes');
model.result('pg14').run;
model.result('pg14').feature('iso2').set('data', 'dset2');
model.result('pg14').feature('iso2').set('looplevel', [3]);
model.result('pg14').feature('iso2').set('interactive', false);
model.result('pg14').run;
model.result('pg14').feature('iso3').set('data', 'dset2');
model.result('pg14').feature('iso3').set('looplevel', [4]);
model.result('pg14').run;
model.result('pg14').feature('iso4').set('data', 'dset2');
model.result('pg14').feature('iso4').set('looplevel', [5]);
model.result('pg14').run;
model.result('pg14').feature('iso4').feature('trn1').set('trans', {'11E-10' '0' '5E-10'});
model.result('pg14').run;
model.result('pg14').feature('iso5').set('data', 'dset2');
model.result('pg14').feature('iso5').set('looplevel', [2]);
model.result('pg14').run;
model.result('pg14').feature('iso5').feature('trn1').set('trans', {'11E-10' '0' '-5E-10'});
model.result('pg14').run;
model.result('pg14').feature('ann1').set('text', '1s (no splitting)');
model.result('pg14').feature('ann1').set('latexmarkup', true);
model.result('pg14').run;
model.result('pg14').feature('ann2').set('text', '2px, 2py \\ (no splitting)');
model.result('pg14').feature('ann2').set('latexmarkup', true);
model.result('pg14').feature('ann2').set('posxexpr', '22E-10');
model.result('pg14').feature('ann2').set('poszexpr', 0);
model.result('pg14').run;
model.result('pg14').feature('ann3').set('text', 'Hybrid 2s+2pz \\(Stark splitting by +0.03 eV)');
model.result('pg14').feature('ann3').set('latexmarkup', true);
model.result('pg14').feature('ann3').set('posxexpr', '11E-10');
model.result('pg14').feature('ann3').set('poszexpr', '10E-10');
model.result('pg14').run;
model.result('pg14').create('ann4', 'Annotation');
model.result('pg14').feature('ann4').set('text', 'Hybrid 2s+2pz \\(Stark splitting by -0.03 eV)');
model.result('pg14').feature('ann4').set('latexmarkup', true);
model.result('pg14').feature('ann4').set('posxexpr', '11E-10');
model.result('pg14').feature('ann4').set('poszexpr', '-10E-10');
model.result('pg14').feature('ann4').set('showpoint', false);
model.result('pg14').feature('ann4').set('anchorpoint', 'center');
model.result('pg14').run;
model.result.numerical('gev1').label('Unperturbed eigenenergies');
model.result.numerical('gev1').setIndex('looplevelinput', 'manualindices', 0);
model.result.numerical('gev1').setIndex('looplevelindices', '1,2', 0);
model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').comments('Unperturbed eigenenergies');
model.result.numerical('gev1').set('table', 'tbl1');
model.result.numerical('gev1').setResult;
model.result.numerical('gev2').label('Stark effect eigenenergies');
model.result.table.create('tbl2', 'Table');
model.result.table('tbl2').comments('Stark effect eigenenergies');
model.result.numerical('gev2').set('table', 'tbl2');
model.result.numerical('gev2').setResult;

model.title('Solving the Hydrogen Atom');

model.description(['This model shows how to solve the hydrogen atom using the Schr' native2unicode(hex2dec({'00' 'f6'}), 'unicode') 'dinger Equation interface in the Semiconductor Module. The orbitals of the hydrogen atom are visualized. The simulated eigenenergies and the probability densities agree well with analytical results.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('solving_hydrogen_atom.mph');

model.modelNode.label('Components');

out = model;
