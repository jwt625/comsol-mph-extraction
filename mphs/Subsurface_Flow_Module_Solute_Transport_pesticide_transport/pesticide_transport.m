function out = model
%
% pesticide_transport.m
%
% Model exported on May 26 2025, 21:34 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Subsurface_Flow_Module/Solute_Transport');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('ge', 'GlobalEquations', 'geom1');
model.physics('ge').model('comp1');
model.physics('ge').prop('EquationForm').set('form', 'Automatic');

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/ge', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('k_1', '0.36[1/d]', 'Rate constant, reaction 1');
model.param.set('k_2', '0.024[1/d]', 'Rate constant, reaction 2');
model.param.set('k_3', '0.2[1/d]', 'Rate constant, reaction 3');
model.param.set('k_4', '0.01[1/d]', 'Rate constant, reaction 4');
model.param.set('k_5', '0.0524[1/d]', 'Rate constant, reaction 5');
model.param.label('Rate constants');

model.geom('geom1').run;

model.physics('ge').feature('ge1').set('name', {'cpm_a' 'cpm_asx' 'cpm_asn' 'cpm_ao' 'cpm_asxo' 'cpm_asno'});
model.physics('ge').feature('ge1').set('equation', {'cpm_at+k_1*cpm_a+k_3*cpm_a' 'cpm_asxt-k_1*cpm_a+k_2*cpm_asx+k_4*cpm_asx' 'cpm_asnt-k_2*cpm_asx+k_5*cpm_asn' 'cpm_aot-k_3*cpm_a' 'cpm_asxot-k_4*cpm_asx' 'cpm_asnot-k_5*cpm_asn'});
model.physics('ge').feature('ge1').set('initialValueU', [1 0 0 0 0 0]);
model.physics('ge').feature('ge1').set('initialValueUt', [0 0 0 0 0 0]);
model.physics('ge').feature('ge1').set('description', {'Aldicarb' 'Aldicarb sulfoxide' 'Aldicarb sulfone' 'Aldicarb oxime' 'Aldicarb sulfoxide oxime' 'Aldicarb sulfone oxime'});
model.physics('ge').feature('ge1').set('DependentVariableQuantity', 'concentration');
model.physics('ge').feature('ge1').set('SourceTermQuantity', 'reactionrate');

model.study('std1').feature('time').set('tunit', 'd');
model.study('std1').feature('time').set('tlist', 'range(0,1,100)');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,1,100)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.numerical.create('gev1', 'EvalGlobal');
model.result.numerical('gev1').set('data', 'dset1');
model.result.numerical('gev1').set('expr', {'cpm_a' 'cpm_asx' 'cpm_asn' 'cpm_ao' 'cpm_asxo' 'cpm_asno'});
model.result.numerical('gev1').set('descr', {'Aldicarb' 'Aldicarb sulfoxide' 'Aldicarb sulfone' 'Aldicarb oxime' 'Aldicarb sulfoxide oxime' 'Aldicarb sulfone oxime'});
model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').create('glob1', 'Global');
model.result('pg1').feature('glob1').set('expr', {'cpm_a' 'cpm_asx' 'cpm_asn' 'cpm_ao' 'cpm_asxo' 'cpm_asno'});
model.result('pg1').feature('glob1').set('descr', {'Aldicarb' 'Aldicarb sulfoxide' 'Aldicarb sulfone' 'Aldicarb oxime' 'Aldicarb sulfoxide oxime' 'Aldicarb sulfone oxime'});
model.result('pg1').run;
model.result('pg1').label('Concentration of species (100 days)');
model.result('pg1').set('titletype', 'none');
model.result('pg1').set('ylabelactive', true);
model.result('pg1').set('ylabel', 'Concentration (mol/m<sup>3</sup>)');
model.result('pg1').run;
model.result('pg1').feature('glob1').set('xdata', 'expr');
model.result('pg1').feature('glob1').set('xdataexpr', 't');
model.result('pg1').feature('glob1').set('xdataunit', 'd');
model.result('pg1').feature('glob1').setIndex('expr', 'cpm_a+cpm_asn+cpm_asx', 6);
model.result('pg1').feature('glob1').setIndex('descr', 'Sum of most toxic species', 6);
model.result('pg1').run;

model.physics.create('dl', 'PorousMediaFlowRichards', 'geom1');
model.physics('dl').model('comp1');

model.study('std1').feature('time').setSolveFor('/physics/dl', false);

model.physics.create('tds', 'DilutedSpeciesInPorousMedia', 'geom1', {'c_a' 'c_asx' 'c_asn'});

model.study('std1').feature('time').setSolveFor('/physics/tds', false);
model.study.create('std2');
model.study('std2').create('time', 'Transient');
model.study('std2').feature('time').setSolveFor('/physics/ge', false);
model.study('std2').feature('time').setSolveFor('/physics/dl', true);
model.study('std2').feature('time').setSolveFor('/physics/tds', true);

model.param.create('par2');

% To import content from file, use:
% model.param('par2').loadFile('FILENAME');
model.param('par2').set('rhof', '1e3[kg/m^3]', 'Fluid density');
model.param('par2').set('poro_1', '0.339', 'Porosity, layer 1');
model.param('par2').set('poro_2', '0.399', 'Porosity, layer 2');
model.param('par2').set('thetar_1', '0.001', 'Residual saturation, layer 1');
model.param('par2').set('thetar_2', '0.001', 'Residual saturation, layer 2');
model.param('par2').set('Sp_1', '0.339[1/m]/(g_const*rhof)', 'Storage coefficient, layer 1');
model.param('par2').set('Sp_2', '0.399[1/m]/(g_const*rhof)', 'Storage coefficient, layer 2');
model.param('par2').set('Ks_1', '0.454[m/d]', 'Saturated hydraulic conductivity, layer 1');
model.param('par2').set('Ks_2', '0.298[m/d]', 'Saturated hydraulic conductivity, layer 2');
model.param('par2').set('alpha_1', '1.39[1/m]', 'Van Genuchten parameter alpha, layer 1');
model.param('par2').set('alpha_2', '1.74[1/m]', 'Van Genuchten parameter alpha, layer 2');
model.param('par2').set('n_1', '1.6', 'Van Genuchten parameter n, layer 1');
model.param('par2').set('n_2', '1.38', 'Van Genuchten parameter n, layer 2');
model.param('par2').set('Hp0', '0.01[m]', 'Pressure head in the ring');
model.param('par2').set('N0', '0.01*Ks_1*rhof', 'Leak from the base');
model.param('par2').set('c0', '1[mol/m^3]', 'Solute concentration in the ring');
model.param('par2').set('rhob', '1300[kg/m^3]', 'Bulk density');
model.param('par2').set('kp_a', '1e-4[m^3/kg]', 'Partition coefficient, aldicarb');
model.param('par2').set('kp_asx', '0.5e-4[m^3/kg]', 'Partition coefficient, aldicarb sulfoxide');
model.param('par2').set('kp_asn', '2e-4[m^3/kg]', 'Partition coefficient, aldicarb sulfone');
model.param('par2').set('Dl', '3.74e-3[m^2/d]', 'Diffusion coefficient, liquid phase');
model.param('par2').set('Dg', '0.432[m^2/d]', 'Diffusion coefficient, gas phase');
model.param('par2').set('alphar', '0.005[m]', 'Longitudinal dispersivity');
model.param('par2').set('alphaz', '0.001[m]', 'Transverse dispersivity');
model.param('par2').set('kg_a', '1.33e-7', 'Volatilization');
model.param('par2').set('kg_asn', '1.33e-3', 'Volatilization');
model.param('par2').set('d_s', '0.05[m]', 'Thickness of the concentration boundary layer');
model.param('par2').label('Transport parameters');

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', [1.5 0.9]);
model.geom('geom1').feature('r1').set('pos', [0 -1.3]);
model.geom('geom1').feature('r1').set('layerright', true);
model.geom('geom1').feature('r1').set('layerbottom', false);
model.geom('geom1').feature('r1').setIndex('layer', 0.25, 0);
model.geom('geom1').feature.duplicate('r2', 'r1');
model.geom('geom1').feature('r2').set('size', [1.5 0.4]);
model.geom('geom1').feature('r2').set('pos', [0 -0.4]);
model.geom('geom1').run('r2');
model.geom('geom1').create('pt1', 'Point');
model.geom('geom1').feature('pt1').setIndex('p', 0.25, 0);
model.geom('geom1').runPre('fin');

model.coordSystem.create('ie1', 'geom1', 'InfiniteElement');

model.geom('geom1').run;

model.coordSystem('ie1').selection.set([3 4]);
model.coordSystem('ie1').set('ScalingType', 'Cylindrical');

model.variable.create('var1');
model.variable('var1').model('comp1');

% To import content from file, use:
% model.variable('var1').loadFile('FILENAME');
model.variable('var1').set('r_1', 'k_1*c_a', 'Rate expression 1');
model.variable('var1').set('r_2', 'k_2*c_asx', 'Rate expression 2');
model.variable('var1').set('r_3', 'k_3*c_a', 'Rate expression 3');
model.variable('var1').set('r_4', 'k_4*c_asx', 'Rate expression 4');
model.variable('var1').set('r_5', 'k_5*c_asn', 'Rate expression 5');

model.physics('dl').feature('usporous1').set('storageModelType', 'userdef');
model.physics('dl').feature('usporous1').set('Sp', 'Sp_1');
model.physics('dl').feature('usporous1').feature('pm1').set('permeabilityModelType', 'conductivity');
model.physics('dl').feature('usporous1').feature('pm1').set('Ks', {'Ks_1' '0' '0' '0' 'Ks_1' '0' '0' '0' 'Ks_1'});
model.physics('dl').feature('usporous1').feature('pm1').set('alpha', 'alpha_1');
model.physics('dl').feature('usporous1').feature('pm1').set('n', 'n_1');
model.physics('dl').feature('usporous1').feature('pm1').set('theta_r', 'thetar_1');
model.physics('dl').feature.duplicate('usporous2', 'usporous1');
model.physics('dl').feature('usporous2').selection.set([2 4]);
model.physics('dl').feature('usporous2').set('Sp', 'Sp_2');
model.physics('dl').feature('usporous2').feature('pm1').set('Ks', {'Ks_2' '0' '0' '0' 'Ks_2' '0' '0' '0' 'Ks_2'});
model.physics('dl').feature('usporous2').feature('pm1').set('alpha', 'alpha_2');
model.physics('dl').feature('usporous2').feature('pm1').set('n', 'n_2');
model.physics('dl').feature('usporous2').feature('pm1').set('theta_r', 'thetar_2');
model.physics('dl').feature('gr1').set('GravityType', 'Elevation');
model.physics('dl').feature('init1').set('InitType', 'Hp');
model.physics('dl').feature('init1').set('Hp', '-(z+1.2)');
model.physics('dl').feature.duplicate('init2', 'init1');
model.physics('dl').feature('init2').selection.set([2 4]);
model.physics('dl').feature('init2').set('Hp', '-(z+1.2)-0.2*(z+0.4)');
model.physics('dl').create('ph1', 'PressureHead', 1);
model.physics('dl').feature('ph1').selection.set([5]);
model.physics('dl').feature('ph1').set('Hp0', 'Hp0');
model.physics('dl').create('pl1', 'PerviousLayer', 1);
model.physics('dl').feature('pl1').selection.set([2 8]);
model.physics('dl').feature('pl1').set('Hb', -2);
model.physics('dl').feature('pl1').set('Rb', '1/5[d]');
model.physics('tds').create('usporous1', 'UnsaturatedPorousMedium', 2);
model.physics('tds').feature('usporous1').selection.all;
model.physics('tds').feature('usporous1').feature('liquid1').set('SaturationType', 'LiquidVolumeFraction');
model.physics('tds').feature('usporous1').feature('liquid1').set('theta_l', 'dl.theta_l');
model.physics('tds').feature('usporous1').feature('liquid1').set('FluidFractionTimeChange', 'TimeChangeInPressureHead');
model.physics('tds').feature('usporous1').feature('liquid1').set('dHpdt_src', 'root.comp1.dl.dHpdt');
model.physics('tds').feature('usporous1').feature('liquid1').set('Cm', 'dl.Cm');
model.physics('tds').feature('usporous1').feature('liquid1').set('u_src', 'root.comp1.dl.u');
model.physics('tds').feature('usporous1').feature('liquid1').set('DL_c_a', {'Dl' '0' '0' '0' 'Dl' '0' '0' '0' 'Dl'});
model.physics('tds').feature('usporous1').feature('liquid1').set('DL_c_asx', {'Dl' '0' '0' '0' 'Dl' '0' '0' '0' 'Dl'});
model.physics('tds').feature('usporous1').feature('liquid1').set('DL_c_asn', {'Dl' '0' '0' '0' 'Dl' '0' '0' '0' 'Dl'});
model.physics('tds').feature('usporous1').feature('gas1').set('DG_c_a', {'Dg' '0' '0' '0' 'Dg' '0' '0' '0' 'Dg'});
model.physics('tds').feature('usporous1').feature('gas1').set('DG_c_asx', {'Dg' '0' '0' '0' 'Dg' '0' '0' '0' 'Dg'});
model.physics('tds').feature('usporous1').feature('gas1').set('DG_c_asn', {'Dg' '0' '0' '0' 'Dg' '0' '0' '0' 'Dg'});
model.physics('tds').feature('usporous1').feature('gas1').setIndex('kG', 'kg_a', 0);
model.physics('tds').feature('usporous1').feature('gas1').setIndex('kG', 'kg_asn', 2);
model.physics('tds').feature('usporous1').create('ads1', 'Adsorptions', 2);
model.physics('tds').feature('usporous1').feature('ads1').set('SorptionType', 'UserDefined');
model.physics('tds').feature('usporous1').feature('ads1').setIndex('species', true, 0);
model.physics('tds').feature('usporous1').feature('ads1').setIndex('cP', 'kp_a*c_a', 0);
model.physics('tds').feature('usporous1').feature('ads1').setIndex('species', true, 1);
model.physics('tds').feature('usporous1').feature('ads1').setIndex('cP', 'kp_asx*c_asx', 1);
model.physics('tds').feature('usporous1').feature('ads1').setIndex('species', true, 2);
model.physics('tds').feature('usporous1').feature('ads1').setIndex('cP', 'kp_asn*c_asn', 2);
model.physics('tds').feature('usporous1').create('disp1', 'Dispersion', 2);
model.physics('tds').feature('usporous1').feature('disp1').set('DispersionTensor', 'Dispersivity');
model.physics('tds').feature('usporous1').feature('disp1').set('DispersivityModel', 'TransverseIsotropic');
model.physics('tds').feature('usporous1').feature('disp1').set('alpha', {'alphar' '0' 'alphaz'});
model.physics('tds').create('reac1', 'Reactions', 2);
model.physics('tds').feature('reac1').selection.all;
model.physics('tds').feature('reac1').setIndex('R_c_a', 'dl.theta_l*(-r_1-r_3)', 0);
model.physics('tds').feature('reac1').setIndex('R_c_asx', 'dl.theta_l*(r_1-r_2-r_4)', 0);
model.physics('tds').feature('reac1').setIndex('R_c_asn', 'dl.theta_l*(r_2-r_5)', 0);
model.physics('tds').create('out1', 'Outflow', 1);
model.physics('tds').feature('out1').selection.set([2 8 12 13]);
model.physics('tds').create('conc1', 'Concentration', 1);
model.physics('tds').feature('conc1').selection.set([5]);
model.physics('tds').feature('conc1').setIndex('species', true, 0);
model.physics('tds').feature('conc1').setIndex('c0', 'c0', 0);
model.physics('tds').feature('conc1').setIndex('species', true, 1);
model.physics('tds').feature('conc1').setIndex('species', true, 2);
model.physics('tds').create('vola1', 'Volatilization', 1);
model.physics('tds').feature('vola1').selection.set([6 11]);
model.physics('tds').feature('vola1').set('hc', 'Dg/d_s');
model.physics('tds').feature('vola1').setIndex('species', true, 0);
model.physics('tds').feature('vola1').setIndex('species', true, 2);

model.material.create('pmat1', 'PorousMedia', 'comp1');
model.material('pmat1').label('Porous Material: Lower Layer');
model.material('pmat1').feature.create('fluid1', 'Fluid', 'comp1');
model.material('pmat1').feature.create('solid1', 'Solid', 'comp1');
model.material('pmat1').feature('fluid1').propertyGroup('def').set('density', {'rhof'});
model.material('pmat1').feature('solid1').set('vfrac', '1-poro_1');
model.material('pmat1').feature('solid1').propertyGroup('def').set('density', {'rhob'});
model.material.duplicate('pmat2', 'pmat1');
model.material('pmat2').label('Porous Material: Upper Layer');
model.material('pmat2').selection.set([2 4]);
model.material('pmat2').feature('solid1').set('vfrac', '1-poro_2');

model.mesh('mesh1').autoMeshSize(3);
model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').create('size1', 'Size');
model.mesh('mesh1').feature('map1').feature('size1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('map1').feature('size1').selection.set([2]);
model.mesh('mesh1').feature('map1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('map1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('map1').feature('size1').set('hmax', 0.02);
model.mesh('mesh1').run;

model.study('std2').feature('time').set('tunit', 'd');
model.study('std2').feature('time').set('tlist', 'range(0,0.1,0.9) range(1,1,10)');

model.sol.create('sol2');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1 2 3 4]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1 2 3 4]);

model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'time');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'time');
model.sol('sol2').create('t1', 'Time');
model.sol('sol2').feature('t1').set('tlist', 'range(0,0.1,0.9) range(1,1,10)');
model.sol('sol2').feature('t1').set('plot', 'off');
model.sol('sol2').feature('t1').set('plotgroup', 'pg1');
model.sol('sol2').feature('t1').set('plotfreq', 'tout');
model.sol('sol2').feature('t1').set('probesel', 'all');
model.sol('sol2').feature('t1').set('probes', {});
model.sol('sol2').feature('t1').set('probefreq', 'tsteps');
model.sol('sol2').feature('t1').set('rtol', 0.005);
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol2').feature('t1').set('reacf', true);
model.sol('sol2').feature('t1').set('storeudot', true);
model.sol('sol2').feature('t1').set('endtimeinterpolation', true);
model.sol('sol2').feature('t1').set('maxorder', 2);
model.sol('sol2').feature('t1').set('stabcntrl', true);
model.sol('sol2').feature('t1').set('control', 'time');
model.sol('sol2').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('t1').create('seDef', 'Segregated');
model.sol('sol2').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol2').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol2').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol2').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol2').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol2').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol2').feature('t1').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t1').feature('d1').label('Direct, pressure (dl) (Merged)');
model.sol('sol2').feature('t1').create('i1', 'Iterative');
model.sol('sol2').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol2').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol2').feature('t1').feature('i1').set('maxlinit', 50);
model.sol('sol2').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol2').feature('t1').feature('i1').label('AMG, concentrations (tds)');
model.sol('sol2').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t1').create('i2', 'Iterative');
model.sol('sol2').feature('t1').feature('i2').set('linsolver', 'gmres');
model.sol('sol2').feature('t1').feature('i2').set('prefuntype', 'left');
model.sol('sol2').feature('t1').feature('i2').set('itrestart', 50);
model.sol('sol2').feature('t1').feature('i2').set('rhob', 400);
model.sol('sol2').feature('t1').feature('i2').set('maxlinit', 50);
model.sol('sol2').feature('t1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol2').feature('t1').feature('i2').label('AMG, pressure (dl)');
model.sol('sol2').feature('t1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').set('saamgcompwise', false);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol2').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol2').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol2').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol2').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol2').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol2').feature('t1').feature.remove('fcDef');
model.sol('sol2').feature('t1').feature.remove('seDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result.dataset.create('rev1', 'Revolve2D');
model.result.dataset('rev1').label('Revolution 2D');
model.result.dataset('rev1').set('data', 'none');
model.result.dataset('rev1').set('startangle', -90);
model.result.dataset('rev1').set('revangle', 225);
model.result.dataset('rev1').set('data', 'dset2');
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').label('Flownet (dl)');
model.result('pg2').set('data', 'dset2');
model.result('pg2').setIndex('looplevel', 20, 0);
model.result('pg2').set('dataisaxisym', 'off');
model.result('pg2').set('data', 'dset2');
model.result('pg2').setIndex('looplevel', 20, 0);
model.result('pg2').set('defaultPlotID', 'PhysicsInterfaces_PorousMediaFlow/icom6/pdef1/pcond4/pcond5/pg1');
model.result('pg2').feature.create('con1', 'Contour');
model.result('pg2').feature('con1').set('showsolutionparams', 'on');
model.result('pg2').feature('con1').set('expr', 'dl.H');
model.result('pg2').feature('con1').set('levelrounding', false);
model.result('pg2').feature('con1').set('coloring', 'uniform');
model.result('pg2').feature('con1').set('colorlegend', false);
model.result('pg2').feature('con1').set('color', 'green');
model.result('pg2').feature('con1').set('smooth', 'internal');
model.result('pg2').feature('con1').set('showsolutionparams', 'on');
model.result('pg2').feature('con1').set('data', 'parent');
model.result('pg2').feature.create('str1', 'Streamline');
model.result('pg2').feature('str1').set('showsolutionparams', 'on');
model.result('pg2').feature('str1').set('posmethod', 'magnitude');
model.result('pg2').feature('str1').set('madv', 'manual');
model.result('pg2').feature('str1').set('msatfactor', 1.4);
model.result('pg2').feature('str1').set('color', 'blue');
model.result('pg2').feature('str1').set('resolution', 'extrafine');
model.result('pg2').feature('str1').set('smooth', 'internal');
model.result('pg2').feature('str1').set('maxlen', Inf);
model.result('pg2').feature('str1').set('maxtime', Inf);
model.result('pg2').feature('str1').set('showsolutionparams', 'on');
model.result('pg2').feature('str1').set('maxlen', Inf);
model.result('pg2').feature('str1').set('maxtime', Inf);
model.result('pg2').feature('str1').set('showsolutionparams', 'on');
model.result('pg2').feature('str1').set('maxlen', Inf);
model.result('pg2').feature('str1').set('maxtime', Inf);
model.result('pg2').feature('str1').set('showsolutionparams', 'on');
model.result('pg2').feature('str1').set('maxlen', Inf);
model.result('pg2').feature('str1').set('maxtime', Inf);
model.result('pg2').feature('str1').set('showsolutionparams', 'on');
model.result('pg2').feature('str1').set('maxlen', Inf);
model.result('pg2').feature('str1').set('maxtime', Inf);
model.result('pg2').feature('str1').set('data', 'parent');
model.result('pg2').feature('str1').selection.geom('geom1', 1);
model.result('pg2').feature('str1').selection.set([1 2 3 4 5 6 7 8 9 10 11 12 13]);
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').label('Pressure (dl)');
model.result('pg3').set('data', 'dset2');
model.result('pg3').setIndex('looplevel', 20, 0);
model.result('pg3').set('titletype', 'custom');
model.result('pg3').set('dataisaxisym', 'off');
model.result('pg3').set('data', 'dset2');
model.result('pg3').setIndex('looplevel', 20, 0);
model.result('pg3').set('defaultPlotID', 'PhysicsInterfaces_PorousMediaFlow/icom6/pdef1/pcond4/pg1');
model.result('pg3').feature.create('surf1', 'Surface');
model.result('pg3').feature('surf1').label('Surface');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('smooth', 'internal');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('data', 'parent');
model.result('pg3').feature.create('str1', 'Streamline');
model.result('pg3').feature('str1').set('showsolutionparams', 'on');
model.result('pg3').feature('str1').set('posmethod', 'uniform');
model.result('pg3').feature('str1').set('pointtype', 'arrow');
model.result('pg3').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg3').feature('str1').set('color', 'gray');
model.result('pg3').feature('str1').set('smooth', 'internal');
model.result('pg3').feature('str1').set('maxlen', Inf);
model.result('pg3').feature('str1').set('maxtime', Inf);
model.result('pg3').feature('str1').set('showsolutionparams', 'on');
model.result('pg3').feature('str1').set('maxlen', Inf);
model.result('pg3').feature('str1').set('maxtime', Inf);
model.result('pg3').feature('str1').set('showsolutionparams', 'on');
model.result('pg3').feature('str1').set('maxlen', Inf);
model.result('pg3').feature('str1').set('maxtime', Inf);
model.result('pg3').feature('str1').set('showsolutionparams', 'on');
model.result('pg3').feature('str1').set('maxlen', Inf);
model.result('pg3').feature('str1').set('maxtime', Inf);
model.result('pg3').feature('str1').set('showsolutionparams', 'on');
model.result('pg3').feature('str1').set('maxlen', Inf);
model.result('pg3').feature('str1').set('maxtime', Inf);
model.result('pg3').feature('str1').set('data', 'parent');
model.result('pg3').feature('str1').selection.geom('geom1', 1);
model.result('pg3').feature('str1').selection.set([1 2 3 4 5 6 7 8 9 10 11 12 13]);
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').label('Pressure, 3D (dl)');
model.result('pg4').set('data', 'rev1');
model.result('pg4').setIndex('looplevel', 20, 0);
model.result('pg4').set('defaultPlotID', 'PhysicsInterfaces_PorousMediaFlow/icom6/pdef1/pcond4/pg2');
model.result('pg4').feature.create('surf1', 'Surface');
model.result('pg4').feature('surf1').label('Surface');
model.result('pg4').feature('surf1').set('showsolutionparams', 'on');
model.result('pg4').feature('surf1').set('smooth', 'internal');
model.result('pg4').feature('surf1').set('showsolutionparams', 'on');
model.result('pg4').feature('surf1').set('data', 'parent');
model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').set('data', 'dset2');
model.result('pg5').setIndex('looplevel', 20, 0);
model.result('pg5').label('Concentration, a (tds)');
model.result('pg5').set('titletype', 'custom');
model.result('pg5').set('prefixintitle', 'Species a:');
model.result('pg5').set('expressionintitle', false);
model.result('pg5').set('typeintitle', true);
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', {'c_a'});
model.result('pg5').create('str1', 'Streamline');
model.result('pg5').feature('str1').set('expr', {'tds.tflux_c_ar' 'tds.tflux_c_az'});
model.result('pg5').feature('str1').set('posmethod', 'uniform');
model.result('pg5').feature('str1').set('recover', 'pprint');
model.result('pg5').feature('str1').set('pointtype', 'arrow');
model.result('pg5').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg5').feature('str1').set('color', 'gray');
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').set('data', 'rev1');
model.result('pg6').setIndex('looplevel', 20, 0);
model.result('pg6').label('Concentration, a, 3D (tds)');
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', {'c_a'});
model.result('pg6').set('titletype', 'custom');
model.result('pg6').set('typeintitle', false);
model.result('pg6').set('prefixintitle', 'Species a:');
model.result('pg6').set('expressionintitle', false);
model.result.create('pg7', 'PlotGroup2D');
model.result('pg7').set('data', 'dset2');
model.result('pg7').setIndex('looplevel', 20, 0);
model.result('pg7').label('Concentration, asx (tds)');
model.result('pg7').set('titletype', 'custom');
model.result('pg7').set('prefixintitle', 'Species asx:');
model.result('pg7').set('expressionintitle', false);
model.result('pg7').set('typeintitle', true);
model.result('pg7').create('surf1', 'Surface');
model.result('pg7').feature('surf1').set('expr', {'c_asx'});
model.result('pg7').create('str1', 'Streamline');
model.result('pg7').feature('str1').set('expr', {'tds.tflux_c_asxr' 'tds.tflux_c_asxz'});
model.result('pg7').feature('str1').set('posmethod', 'uniform');
model.result('pg7').feature('str1').set('recover', 'pprint');
model.result('pg7').feature('str1').set('pointtype', 'arrow');
model.result('pg7').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg7').feature('str1').set('color', 'gray');
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').set('data', 'rev1');
model.result('pg8').setIndex('looplevel', 20, 0);
model.result('pg8').label('Concentration, asx, 3D (tds)');
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').feature('surf1').set('expr', {'c_asx'});
model.result('pg8').set('titletype', 'custom');
model.result('pg8').set('typeintitle', false);
model.result('pg8').set('prefixintitle', 'Species asx:');
model.result('pg8').set('expressionintitle', false);
model.result.create('pg9', 'PlotGroup2D');
model.result('pg9').set('data', 'dset2');
model.result('pg9').setIndex('looplevel', 20, 0);
model.result('pg9').label('Concentration, asn (tds)');
model.result('pg9').set('titletype', 'custom');
model.result('pg9').set('prefixintitle', 'Species asn:');
model.result('pg9').set('expressionintitle', false);
model.result('pg9').set('typeintitle', true);
model.result('pg9').create('surf1', 'Surface');
model.result('pg9').feature('surf1').set('expr', {'c_asn'});
model.result('pg9').create('str1', 'Streamline');
model.result('pg9').feature('str1').set('expr', {'tds.tflux_c_asnr' 'tds.tflux_c_asnz'});
model.result('pg9').feature('str1').set('posmethod', 'uniform');
model.result('pg9').feature('str1').set('recover', 'pprint');
model.result('pg9').feature('str1').set('pointtype', 'arrow');
model.result('pg9').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg9').feature('str1').set('color', 'gray');
model.result.create('pg10', 'PlotGroup3D');
model.result('pg10').set('data', 'rev1');
model.result('pg10').setIndex('looplevel', 20, 0);
model.result('pg10').label('Concentration, asn, 3D (tds)');
model.result('pg10').create('surf1', 'Surface');
model.result('pg10').feature('surf1').set('expr', {'c_asn'});
model.result('pg10').set('titletype', 'custom');
model.result('pg10').set('typeintitle', false);
model.result('pg10').set('prefixintitle', 'Species asn:');
model.result('pg10').set('expressionintitle', false);
model.result('pg2').run;
model.result.dataset('dset2').selection.geom('geom1', 2);
model.result.dataset('dset2').selection.geom('geom1', 2);
model.result.dataset('dset2').selection.set([1 2]);
model.result.create('pg11', 'PlotGroup2D');
model.result('pg11').label('Effective Saturation (dl)');
model.result('pg11').set('dataisaxisym', 'off');
model.result('pg11').set('data', 'dset2');
model.result('pg11').setIndex('looplevel', 20, 0);
model.result('pg11').set('defaultPlotID', 'PhysicsInterfaces_PorousMediaFlow/icom6/pdef1/pcond4/pcond5/pg2');
model.result('pg11').feature.create('con1', 'Contour');
model.result('pg11').feature('con1').set('expr', 'dl.Se');
model.result('pg11').feature('con1').set('number', 40);
model.result('pg11').feature('con1').set('contourtype', 'filled');
model.result('pg11').feature('con1').set('colortable', 'JupiterAuroraBorealis');
model.result('pg11').feature('con1').set('colortabletrans', 'reverse');
model.result('pg11').feature('con1').set('smooth', 'internal');
model.result('pg11').feature('con1').set('showsolutionparams', 'on');
model.result('pg11').feature('con1').set('data', 'parent');
model.result('pg11').label('Effective Saturation (dl)');
model.result('pg11').run;
model.result('pg11').setIndex('looplevel', 4, 0);
model.result('pg11').create('arws1', 'ArrowSurface');
model.result('pg11').run;
model.result('pg11').feature('con1').set('number', 15);
model.result('pg11').run;
model.result('pg11').run;
model.result('pg11').feature('arws1').set('color', 'black');
model.result('pg11').run;
model.result('pg11').run;
model.result('pg11').setIndex('looplevel', 11, 0);
model.result('pg11').run;
model.result('pg5').run;
model.result('pg5').label('Concentration, aldicarb');
model.result('pg5').run;
model.result('pg5').feature('str1').active(false);
model.result('pg5').run;
model.result('pg5').feature('surf1').set('rangecoloractive', true);
model.result('pg5').feature('surf1').set('rangecolormin', 0);
model.result('pg5').feature('surf1').stepPrevious(0);
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').setIndex('looplevel', 15, 0);
model.result('pg5').run;
model.result('pg5').setIndex('looplevel', 11, 0);
model.result('pg5').run;
model.result('pg7').run;
model.result('pg7').label('Concentration, aldicarb sulfoxide');
model.result('pg7').run;
model.result('pg7').feature('str1').active(false);
model.result('pg7').run;
model.result('pg7').feature('surf1').set('rangecoloractive', true);
model.result('pg7').feature('surf1').set('rangecolormax', 0.5);
model.result('pg7').run;
model.result('pg7').setIndex('looplevel', 15, 0);
model.result('pg7').run;
model.result('pg7').setIndex('looplevel', 20, 0);
model.result('pg7').run;
model.result('pg6').run;
model.result.export.create('anim1', 'Animation');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('plotgroup', 'pg6');
model.result.export('anim1').run;
model.result('pg6').run;

model.title('Pesticide Transport and Reaction in Soil');

model.description('This example investigates the degradation of the insecticide Aldicarb. The carbamate initially decomposes into a sulfone which subsequently decays into a sulfoxide. Biodegradation reactions provide important pathways to reduce the amounts of toxic substances. A second modeling stages uses the computed reaction kinetics in a space-dependent model that describes the contamination of soil through Aldicarb transport and reaction.');

model.label('pesticide_transport.mph');

model.modelNode.label('Components');

out = model;
