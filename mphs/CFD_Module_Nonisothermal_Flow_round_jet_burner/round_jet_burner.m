function out = model
%
% round_jet_burner.m
%
% Model exported on May 26 2025, 21:26 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/CFD_Module/Nonisothermal_Flow');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('chem', 'Chemistry', 'geom1');
model.physics('chem').model('comp1');
model.physics('chem').prop('mixture').set('ConcentrationType', 'MassFraction');
model.physics.create('tcs', 'ConcentratedSpecies', 'geom1', {'wCO' 'wO2' 'wCO2' 'wH2' 'wH2O' 'wN2'});
model.physics('tcs').prop('AdvancedSettings').set('UsePseudoTime', '1');
model.physics.create('spf', 'TurbulentFlowkomega', 'geom1');
model.physics('spf').model('comp1');
model.physics('spf').prop('PhysicalModelProperty').set('Compressibility', 'WeaklyCompressible');
model.physics.create('ht', 'HeatTransferInFluids', 'geom1');
model.physics('ht').model('comp1');
model.physics('ht').prop('ShapeProperty').set('order_temperature', '1');

model.multiphysics.create('nirf1', 'NonIsothermalReactingFlow', 'geom1', 2);
model.multiphysics('nirf1').set('Fluid_physics', 'spf');
model.multiphysics('nirf1').set('Species_physics', 'tcs');
model.multiphysics('nirf1').set('Chemistry_physics', 'chem');
model.multiphysics('nirf1').set('Heat_physics', 'ht');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/chem', true);
model.study('std1').feature('stat').setSolveFor('/physics/tcs', true);
model.study('std1').feature('stat').setSolveFor('/physics/spf', true);
model.study('std1').feature('stat').setSolveFor('/physics/ht', true);
model.study('std1').feature('stat').setSolveFor('/multiphysics/nirf1', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('Di', '4.58[mm]', 'Pipe inner diameter');
model.param.set('Pth', '0.88[mm]', 'Pipe thickness');
model.param.set('Pl', 'Di*10', 'Pipe length');
model.param.set('GeomW', 'Di*50', 'Simulated geometry width');
model.param.set('GeomH', 'Pl+Di*120', 'Simulated geometry height');
model.param.set('Ujet', '76[m/s]', 'Jet velocity');
model.param.set('Ucf', '0.7[m/s]', 'Coflow velocity');
model.param.set('T0', '292[K]', 'Inlet temperature');
model.param.set('x0_CO', '0.4', 'Inlet volume fraction CO');
model.param.set('x0_O2', '0', 'Inlet volume fraction O2');
model.param.set('x0_CO2', '0', 'Inlet volume fraction CO2');
model.param.set('x0_H2', '0.3', 'Inlet volume fraction H2');
model.param.set('x0_H2O', '0', 'Inlet volume fraction H2O');
model.param.set('x0_N2', '0.3', 'Inlet volume fraction N2');
model.param.set('wcf_O2', '0.21', 'Coflow mass fraction O2');
model.param.set('mu_mix', '1e-5[Pa*s]', 'Dynamic viscosity, mixture');
model.param.set('k_mix', '0.1[W/m/K]', 'Thermal conductivity, mixture');

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', {'GeomW' 'GeomH'});
model.geom('geom1').run('r1');
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').set('size', {'Pth' 'Pl'});
model.geom('geom1').feature('r2').set('pos', {'Di/2' '0'});
model.geom('geom1').run('r2');
model.geom('geom1').create('cha1', 'Chamfer');
model.geom('geom1').feature('cha1').selection('pointinsketch').set('r2', [3 4]);
model.geom('geom1').feature('cha1').set('dist', 'Pth*0.15');
model.geom('geom1').run('cha1');
model.geom('geom1').create('pol1', 'Polygon');
model.geom('geom1').feature('pol1').set('source', 'vectors');
model.geom('geom1').feature('pol1').set('x', 'GeomW GeomW*1.5 GeomW*1.5 GeomW');
model.geom('geom1').feature('pol1').set('y', '0 GeomH GeomH GeomH');
model.geom('geom1').run('pol1');
model.geom('geom1').create('uni1', 'Union');
model.geom('geom1').feature('uni1').selection('input').set({'pol1' 'r1'});
model.geom('geom1').feature('uni1').set('intbnd', false);
model.geom('geom1').run('uni1');
model.geom('geom1').create('dif1', 'Difference');
model.geom('geom1').feature('dif1').selection('input').set({'uni1'});
model.geom('geom1').feature('dif1').selection('input2').set({'cha1'});
model.geom('geom1').run('dif1');
model.geom('geom1').create('ls1', 'LineSegment');
model.geom('geom1').feature('ls1').set('specify1', 'coord');
model.geom('geom1').feature('ls1').set('coord1', {'0' 'Pl-0.15*Pth'});
model.geom('geom1').feature('ls1').set('specify2', 'coord');
model.geom('geom1').feature('ls1').set('coord2', {'Di/2' 'Pl-0.15*Pth'});
model.geom('geom1').run('ls1');
model.geom('geom1').create('ls2', 'LineSegment');
model.geom('geom1').feature('ls2').set('specify1', 'coord');
model.geom('geom1').feature('ls2').set('coord1', {'Di/2+Pth' 'Pl-0.15*Pth'});
model.geom('geom1').feature('ls2').set('specify2', 'coord');
model.geom('geom1').feature('ls2').set('coord2', {'GeomW+0.5*(Pl-0.15*Pth)*GeomW/GeomH' '0'});
model.geom('geom1').feature('ls2').setIndex('coord2', 'Pl-0.15*Pth', 1);
model.geom('geom1').run('ls2');
model.geom('geom1').create('ls3', 'LineSegment');
model.geom('geom1').feature('ls3').set('specify1', 'coord');
model.geom('geom1').feature('ls3').set('coord1', {'Di/2' 'Pl-0.15*Pth'});
model.geom('geom1').feature('ls3').set('specify2', 'coord');
model.geom('geom1').feature('ls3').set('coord2', {'Di/2+(GeomH-Pl+Pth*0.15)*tan(pi/180)' '0'});
model.geom('geom1').feature('ls3').setIndex('coord2', 'GeomH', 1);
model.geom('geom1').run('ls3');
model.geom('geom1').create('ls4', 'LineSegment');
model.geom('geom1').feature('ls4').set('specify1', 'coord');
model.geom('geom1').feature('ls4').set('coord1', {'Di/2+Pth' 'Pl-0.15*Pth'});
model.geom('geom1').feature('ls4').set('specify2', 'coord');
model.geom('geom1').feature('ls4').set('coord2', {'Di/2+Pth+(GeomH-Pl+Pth*0.15)*tan(5*pi/180)' '0'});
model.geom('geom1').feature('ls4').setIndex('coord2', 'GeomH', 1);
model.geom('geom1').run('ls4');
model.geom('geom1').run('fin');
model.geom('geom1').create('mce1', 'MeshControlEdges');
model.geom('geom1').feature('mce1').selection('input').set('fin', [4 8 13 14]);
model.geom('geom1').run('mce1');
model.geom('geom1').create('cme1', 'CompositeEdges');
model.geom('geom1').feature('cme1').selection('input').set('mce1', [3 11]);
model.geom('geom1').run('cme1');

model.thermodynamics.feature.create('pp1', 'BuiltinPropertyPackage');
model.thermodynamics.feature('pp1').set('compoundlist', {'water' '7732-18-5' 'H2O' 'COMSOL';  ...
'carbon monoxide' '630-08-0' 'CO' 'COMSOL';  ...
'carbon dioxide' '124-38-9' 'CO2' 'COMSOL';  ...
'nitrogen' '7727-37-9' 'N2' 'COMSOL';  ...
'oxygen' '7782-44-7' 'O2' 'COMSOL';  ...
'hydrogen' '1333-74-0' 'H2' 'COMSOL'});
model.thermodynamics.feature('pp1').set('phase_list', {'Gas' 'Vapor'});
model.thermodynamics.feature('pp1').label('Gas System 1');
model.thermodynamics.feature('pp1').set('manager_id', 'COMSOL');
model.thermodynamics.feature('pp1').set('manager_version', '1.0');
model.thermodynamics.feature('pp1').set('packagename', 'pp1');
model.thermodynamics.feature('pp1').set('package_desc', 'Built-in property package');
model.thermodynamics.feature('pp1').set('managerindex', '0');
model.thermodynamics.feature('pp1').set('packageid', 'COMSOL1');
model.thermodynamics.feature('pp1').set('ThermodynamicModel', 'IdealGas');
model.thermodynamics.feature('pp1').set('LiquidPhaseModel', 'None');
model.thermodynamics.feature('pp1').set('LiquidCard', 'None');
model.thermodynamics.feature('pp1').set('EOSModel', 'IdealGas');
model.thermodynamics.feature('pp1').set('GasPhaseModel', 'IdealGas');
model.thermodynamics.feature('pp1').set('GasEOSCard', 'GasPhaseModel');
model.thermodynamics.feature('pp1').set('VapDiffusivity', 'Automatic');
model.thermodynamics.feature('pp1').set('VapThermalConductivity', 'KineticTheory');
model.thermodynamics.feature('pp1').set('VapViscosity', 'Brokaw');
model.thermodynamics.feature('pp1').storePersistenceData;
model.thermodynamics.feature('pp1').set('WarningState', false);
model.thermodynamics.feature('pp1').set('Warning', {''});
model.thermodynamics.feature('pp1').feature.create('singlephase1', 'OnePhaseProperty');
model.thermodynamics.feature('pp1').feature('singlephase1').label('Heat capacity (Cp) 1');
model.thermodynamics.feature('pp1').feature('singlephase1').set('funcname', 'HeatCapacityCp_carbon_dioxide_Gas11');
model.thermodynamics.feature('pp1').feature('singlephase1').set('property', 'HeatCapacityCp');
model.thermodynamics.feature('pp1').feature('singlephase1').set('propertydescr', 'Heat capacity (Cp)');
model.thermodynamics.feature('pp1').feature('singlephase1').set('unit', 'J/mol/K');
model.thermodynamics.feature('pp1').feature('singlephase1').set('prop_basis', 'mole');
model.thermodynamics.feature('pp1').feature('singlephase1').set('compounds', {'carbon dioxide'});
model.thermodynamics.feature('pp1').feature('singlephase1').set('args', {'temperature' 'K' 'Temperature'; 'pressure' 'Pa' 'Pressure'});
model.thermodynamics.feature('pp1').feature('singlephase1').set('plotargs', {'temperature' '298.15' '373.15'; 'pressure' '101325' '101325'});
model.thermodynamics.feature('pp1').feature('singlephase1').set('derivatives', {'HeatCapacityCp_carbon_dioxide_Gas11_Dtemperature' 'HeatCapacityCp_carbon_dioxide_Gas11_Dpressure'});
model.thermodynamics.feature('pp1').feature('singlephase1').set('SecondDerivatives', {});
model.thermodynamics.feature('pp1').feature('singlephase1').set('SecondDerivativeIndices', {});
model.thermodynamics.feature('pp1').feature('singlephase1').set('phase', 'Gas');
model.thermodynamics.feature('pp1').feature('singlephase1').set('comp_basis', 'mole');
model.thermodynamics.feature('pp1').feature('singlephase1').set('include_derivatives', 'yes');
model.thermodynamics.feature('pp1').feature.create('singlephase2', 'OnePhaseProperty');
model.thermodynamics.feature('pp1').feature('singlephase2').label('Enthalpy of formation 1');
model.thermodynamics.feature('pp1').feature('singlephase2').set('funcname', 'EnthalpyF_carbon_dioxide_Gas12');
model.thermodynamics.feature('pp1').feature('singlephase2').set('property', 'EnthalpyF');
model.thermodynamics.feature('pp1').feature('singlephase2').set('propertydescr', 'Enthalpy of formation');
model.thermodynamics.feature('pp1').feature('singlephase2').set('unit', 'J/mol');
model.thermodynamics.feature('pp1').feature('singlephase2').set('prop_basis', 'mole');
model.thermodynamics.feature('pp1').feature('singlephase2').set('compounds', {'carbon dioxide'});
model.thermodynamics.feature('pp1').feature('singlephase2').set('args', {'temperature' 'K' 'Temperature'; 'pressure' 'Pa' 'Pressure'});
model.thermodynamics.feature('pp1').feature('singlephase2').set('plotargs', {'temperature' '298.15' '373.15'; 'pressure' '101325' '101325'});
model.thermodynamics.feature('pp1').feature('singlephase2').set('derivatives', {'EnthalpyF_carbon_dioxide_Gas12_Dtemperature' 'EnthalpyF_carbon_dioxide_Gas12_Dpressure'});
model.thermodynamics.feature('pp1').feature('singlephase2').set('SecondDerivatives', {});
model.thermodynamics.feature('pp1').feature('singlephase2').set('SecondDerivativeIndices', {});
model.thermodynamics.feature('pp1').feature('singlephase2').set('phase', 'Gas');
model.thermodynamics.feature('pp1').feature('singlephase2').set('comp_basis', 'mole');
model.thermodynamics.feature('pp1').feature('singlephase2').set('include_derivatives', 'yes');
model.thermodynamics.feature('pp1').feature.create('singlephase3', 'OnePhaseProperty');
model.thermodynamics.feature('pp1').feature('singlephase3').label('Heat capacity (Cp) 2');
model.thermodynamics.feature('pp1').feature('singlephase3').set('funcname', 'HeatCapacityCp_carbon_monoxide_Gas13');
model.thermodynamics.feature('pp1').feature('singlephase3').set('property', 'HeatCapacityCp');
model.thermodynamics.feature('pp1').feature('singlephase3').set('propertydescr', 'Heat capacity (Cp)');
model.thermodynamics.feature('pp1').feature('singlephase3').set('unit', 'J/mol/K');
model.thermodynamics.feature('pp1').feature('singlephase3').set('prop_basis', 'mole');
model.thermodynamics.feature('pp1').feature('singlephase3').set('compounds', {'carbon monoxide'});
model.thermodynamics.feature('pp1').feature('singlephase3').set('args', {'temperature' 'K' 'Temperature'; 'pressure' 'Pa' 'Pressure'});
model.thermodynamics.feature('pp1').feature('singlephase3').set('plotargs', {'temperature' '298.15' '373.15'; 'pressure' '101325' '101325'});
model.thermodynamics.feature('pp1').feature('singlephase3').set('derivatives', {'HeatCapacityCp_carbon_monoxide_Gas13_Dtemperature' 'HeatCapacityCp_carbon_monoxide_Gas13_Dpressure'});
model.thermodynamics.feature('pp1').feature('singlephase3').set('SecondDerivatives', {});
model.thermodynamics.feature('pp1').feature('singlephase3').set('SecondDerivativeIndices', {});
model.thermodynamics.feature('pp1').feature('singlephase3').set('phase', 'Gas');
model.thermodynamics.feature('pp1').feature('singlephase3').set('comp_basis', 'mole');
model.thermodynamics.feature('pp1').feature('singlephase3').set('include_derivatives', 'yes');
model.thermodynamics.feature('pp1').feature.create('singlephase4', 'OnePhaseProperty');
model.thermodynamics.feature('pp1').feature('singlephase4').label('Enthalpy of formation 2');
model.thermodynamics.feature('pp1').feature('singlephase4').set('funcname', 'EnthalpyF_carbon_monoxide_Gas14');
model.thermodynamics.feature('pp1').feature('singlephase4').set('property', 'EnthalpyF');
model.thermodynamics.feature('pp1').feature('singlephase4').set('propertydescr', 'Enthalpy of formation');
model.thermodynamics.feature('pp1').feature('singlephase4').set('unit', 'J/mol');
model.thermodynamics.feature('pp1').feature('singlephase4').set('prop_basis', 'mole');
model.thermodynamics.feature('pp1').feature('singlephase4').set('compounds', {'carbon monoxide'});
model.thermodynamics.feature('pp1').feature('singlephase4').set('args', {'temperature' 'K' 'Temperature'; 'pressure' 'Pa' 'Pressure'});
model.thermodynamics.feature('pp1').feature('singlephase4').set('plotargs', {'temperature' '298.15' '373.15'; 'pressure' '101325' '101325'});
model.thermodynamics.feature('pp1').feature('singlephase4').set('derivatives', {'EnthalpyF_carbon_monoxide_Gas14_Dtemperature' 'EnthalpyF_carbon_monoxide_Gas14_Dpressure'});
model.thermodynamics.feature('pp1').feature('singlephase4').set('SecondDerivatives', {});
model.thermodynamics.feature('pp1').feature('singlephase4').set('SecondDerivativeIndices', {});
model.thermodynamics.feature('pp1').feature('singlephase4').set('phase', 'Gas');
model.thermodynamics.feature('pp1').feature('singlephase4').set('comp_basis', 'mole');
model.thermodynamics.feature('pp1').feature('singlephase4').set('include_derivatives', 'yes');
model.thermodynamics.feature('pp1').feature.create('singlephase5', 'OnePhaseProperty');
model.thermodynamics.feature('pp1').feature('singlephase5').label('Heat capacity (Cp) 3');
model.thermodynamics.feature('pp1').feature('singlephase5').set('funcname', 'HeatCapacityCp_hydrogen_Gas15');
model.thermodynamics.feature('pp1').feature('singlephase5').set('property', 'HeatCapacityCp');
model.thermodynamics.feature('pp1').feature('singlephase5').set('propertydescr', 'Heat capacity (Cp)');
model.thermodynamics.feature('pp1').feature('singlephase5').set('unit', 'J/mol/K');
model.thermodynamics.feature('pp1').feature('singlephase5').set('prop_basis', 'mole');
model.thermodynamics.feature('pp1').feature('singlephase5').set('compounds', {'hydrogen'});
model.thermodynamics.feature('pp1').feature('singlephase5').set('args', {'temperature' 'K' 'Temperature'; 'pressure' 'Pa' 'Pressure'});
model.thermodynamics.feature('pp1').feature('singlephase5').set('plotargs', {'temperature' '298.15' '373.15'; 'pressure' '101325' '101325'});
model.thermodynamics.feature('pp1').feature('singlephase5').set('derivatives', {'HeatCapacityCp_hydrogen_Gas15_Dtemperature' 'HeatCapacityCp_hydrogen_Gas15_Dpressure'});
model.thermodynamics.feature('pp1').feature('singlephase5').set('SecondDerivatives', {});
model.thermodynamics.feature('pp1').feature('singlephase5').set('SecondDerivativeIndices', {});
model.thermodynamics.feature('pp1').feature('singlephase5').set('phase', 'Gas');
model.thermodynamics.feature('pp1').feature('singlephase5').set('comp_basis', 'mole');
model.thermodynamics.feature('pp1').feature('singlephase5').set('include_derivatives', 'yes');
model.thermodynamics.feature('pp1').feature.create('singlephase6', 'OnePhaseProperty');
model.thermodynamics.feature('pp1').feature('singlephase6').label('Enthalpy of formation 3');
model.thermodynamics.feature('pp1').feature('singlephase6').set('funcname', 'EnthalpyF_hydrogen_Gas16');
model.thermodynamics.feature('pp1').feature('singlephase6').set('property', 'EnthalpyF');
model.thermodynamics.feature('pp1').feature('singlephase6').set('propertydescr', 'Enthalpy of formation');
model.thermodynamics.feature('pp1').feature('singlephase6').set('unit', 'J/mol');
model.thermodynamics.feature('pp1').feature('singlephase6').set('prop_basis', 'mole');
model.thermodynamics.feature('pp1').feature('singlephase6').set('compounds', {'hydrogen'});
model.thermodynamics.feature('pp1').feature('singlephase6').set('args', {'temperature' 'K' 'Temperature'; 'pressure' 'Pa' 'Pressure'});
model.thermodynamics.feature('pp1').feature('singlephase6').set('plotargs', {'temperature' '298.15' '373.15'; 'pressure' '101325' '101325'});
model.thermodynamics.feature('pp1').feature('singlephase6').set('derivatives', {'EnthalpyF_hydrogen_Gas16_Dtemperature' 'EnthalpyF_hydrogen_Gas16_Dpressure'});
model.thermodynamics.feature('pp1').feature('singlephase6').set('SecondDerivatives', {});
model.thermodynamics.feature('pp1').feature('singlephase6').set('SecondDerivativeIndices', {});
model.thermodynamics.feature('pp1').feature('singlephase6').set('phase', 'Gas');
model.thermodynamics.feature('pp1').feature('singlephase6').set('comp_basis', 'mole');
model.thermodynamics.feature('pp1').feature('singlephase6').set('include_derivatives', 'yes');
model.thermodynamics.feature('pp1').feature.create('singlephase7', 'OnePhaseProperty');
model.thermodynamics.feature('pp1').feature('singlephase7').label('Heat capacity (Cp) 4');
model.thermodynamics.feature('pp1').feature('singlephase7').set('funcname', 'HeatCapacityCp_nitrogen_Gas17');
model.thermodynamics.feature('pp1').feature('singlephase7').set('property', 'HeatCapacityCp');
model.thermodynamics.feature('pp1').feature('singlephase7').set('propertydescr', 'Heat capacity (Cp)');
model.thermodynamics.feature('pp1').feature('singlephase7').set('unit', 'J/mol/K');
model.thermodynamics.feature('pp1').feature('singlephase7').set('prop_basis', 'mole');
model.thermodynamics.feature('pp1').feature('singlephase7').set('compounds', {'nitrogen'});
model.thermodynamics.feature('pp1').feature('singlephase7').set('args', {'temperature' 'K' 'Temperature'; 'pressure' 'Pa' 'Pressure'});
model.thermodynamics.feature('pp1').feature('singlephase7').set('plotargs', {'temperature' '298.15' '373.15'; 'pressure' '101325' '101325'});
model.thermodynamics.feature('pp1').feature('singlephase7').set('derivatives', {'HeatCapacityCp_nitrogen_Gas17_Dtemperature' 'HeatCapacityCp_nitrogen_Gas17_Dpressure'});
model.thermodynamics.feature('pp1').feature('singlephase7').set('SecondDerivatives', {});
model.thermodynamics.feature('pp1').feature('singlephase7').set('SecondDerivativeIndices', {});
model.thermodynamics.feature('pp1').feature('singlephase7').set('phase', 'Gas');
model.thermodynamics.feature('pp1').feature('singlephase7').set('comp_basis', 'mole');
model.thermodynamics.feature('pp1').feature('singlephase7').set('include_derivatives', 'yes');
model.thermodynamics.feature('pp1').feature.create('singlephase8', 'OnePhaseProperty');
model.thermodynamics.feature('pp1').feature('singlephase8').label('Enthalpy of formation 4');
model.thermodynamics.feature('pp1').feature('singlephase8').set('funcname', 'EnthalpyF_nitrogen_Gas18');
model.thermodynamics.feature('pp1').feature('singlephase8').set('property', 'EnthalpyF');
model.thermodynamics.feature('pp1').feature('singlephase8').set('propertydescr', 'Enthalpy of formation');
model.thermodynamics.feature('pp1').feature('singlephase8').set('unit', 'J/mol');
model.thermodynamics.feature('pp1').feature('singlephase8').set('prop_basis', 'mole');
model.thermodynamics.feature('pp1').feature('singlephase8').set('compounds', {'nitrogen'});
model.thermodynamics.feature('pp1').feature('singlephase8').set('args', {'temperature' 'K' 'Temperature'; 'pressure' 'Pa' 'Pressure'});
model.thermodynamics.feature('pp1').feature('singlephase8').set('plotargs', {'temperature' '298.15' '373.15'; 'pressure' '101325' '101325'});
model.thermodynamics.feature('pp1').feature('singlephase8').set('derivatives', {'EnthalpyF_nitrogen_Gas18_Dtemperature' 'EnthalpyF_nitrogen_Gas18_Dpressure'});
model.thermodynamics.feature('pp1').feature('singlephase8').set('SecondDerivatives', {});
model.thermodynamics.feature('pp1').feature('singlephase8').set('SecondDerivativeIndices', {});
model.thermodynamics.feature('pp1').feature('singlephase8').set('phase', 'Gas');
model.thermodynamics.feature('pp1').feature('singlephase8').set('comp_basis', 'mole');
model.thermodynamics.feature('pp1').feature('singlephase8').set('include_derivatives', 'yes');
model.thermodynamics.feature('pp1').feature.create('singlephase9', 'OnePhaseProperty');
model.thermodynamics.feature('pp1').feature('singlephase9').label('Heat capacity (Cp) 5');
model.thermodynamics.feature('pp1').feature('singlephase9').set('funcname', 'HeatCapacityCp_oxygen_Gas19');
model.thermodynamics.feature('pp1').feature('singlephase9').set('property', 'HeatCapacityCp');
model.thermodynamics.feature('pp1').feature('singlephase9').set('propertydescr', 'Heat capacity (Cp)');
model.thermodynamics.feature('pp1').feature('singlephase9').set('unit', 'J/mol/K');
model.thermodynamics.feature('pp1').feature('singlephase9').set('prop_basis', 'mole');
model.thermodynamics.feature('pp1').feature('singlephase9').set('compounds', {'oxygen'});
model.thermodynamics.feature('pp1').feature('singlephase9').set('args', {'temperature' 'K' 'Temperature'; 'pressure' 'Pa' 'Pressure'});
model.thermodynamics.feature('pp1').feature('singlephase9').set('plotargs', {'temperature' '298.15' '373.15'; 'pressure' '101325' '101325'});
model.thermodynamics.feature('pp1').feature('singlephase9').set('derivatives', {'HeatCapacityCp_oxygen_Gas19_Dtemperature' 'HeatCapacityCp_oxygen_Gas19_Dpressure'});
model.thermodynamics.feature('pp1').feature('singlephase9').set('SecondDerivatives', {});
model.thermodynamics.feature('pp1').feature('singlephase9').set('SecondDerivativeIndices', {});
model.thermodynamics.feature('pp1').feature('singlephase9').set('phase', 'Gas');
model.thermodynamics.feature('pp1').feature('singlephase9').set('comp_basis', 'mole');
model.thermodynamics.feature('pp1').feature('singlephase9').set('include_derivatives', 'yes');
model.thermodynamics.feature('pp1').feature.create('singlephase10', 'OnePhaseProperty');
model.thermodynamics.feature('pp1').feature('singlephase10').label('Enthalpy of formation 5');
model.thermodynamics.feature('pp1').feature('singlephase10').set('funcname', 'EnthalpyF_oxygen_Gas110');
model.thermodynamics.feature('pp1').feature('singlephase10').set('property', 'EnthalpyF');
model.thermodynamics.feature('pp1').feature('singlephase10').set('propertydescr', 'Enthalpy of formation');
model.thermodynamics.feature('pp1').feature('singlephase10').set('unit', 'J/mol');
model.thermodynamics.feature('pp1').feature('singlephase10').set('prop_basis', 'mole');
model.thermodynamics.feature('pp1').feature('singlephase10').set('compounds', {'oxygen'});
model.thermodynamics.feature('pp1').feature('singlephase10').set('args', {'temperature' 'K' 'Temperature'; 'pressure' 'Pa' 'Pressure'});
model.thermodynamics.feature('pp1').feature('singlephase10').set('plotargs', {'temperature' '298.15' '373.15'; 'pressure' '101325' '101325'});
model.thermodynamics.feature('pp1').feature('singlephase10').set('derivatives', {'EnthalpyF_oxygen_Gas110_Dtemperature' 'EnthalpyF_oxygen_Gas110_Dpressure'});
model.thermodynamics.feature('pp1').feature('singlephase10').set('SecondDerivatives', {});
model.thermodynamics.feature('pp1').feature('singlephase10').set('SecondDerivativeIndices', {});
model.thermodynamics.feature('pp1').feature('singlephase10').set('phase', 'Gas');
model.thermodynamics.feature('pp1').feature('singlephase10').set('comp_basis', 'mole');
model.thermodynamics.feature('pp1').feature('singlephase10').set('include_derivatives', 'yes');
model.thermodynamics.feature('pp1').feature.create('singlephase11', 'OnePhaseProperty');
model.thermodynamics.feature('pp1').feature('singlephase11').label('Heat capacity (Cp) 6');
model.thermodynamics.feature('pp1').feature('singlephase11').set('funcname', 'HeatCapacityCp_water_Gas111');
model.thermodynamics.feature('pp1').feature('singlephase11').set('property', 'HeatCapacityCp');
model.thermodynamics.feature('pp1').feature('singlephase11').set('propertydescr', 'Heat capacity (Cp)');
model.thermodynamics.feature('pp1').feature('singlephase11').set('unit', 'J/mol/K');
model.thermodynamics.feature('pp1').feature('singlephase11').set('prop_basis', 'mole');
model.thermodynamics.feature('pp1').feature('singlephase11').set('compounds', {'water'});
model.thermodynamics.feature('pp1').feature('singlephase11').set('args', {'temperature' 'K' 'Temperature'; 'pressure' 'Pa' 'Pressure'});
model.thermodynamics.feature('pp1').feature('singlephase11').set('plotargs', {'temperature' '298.15' '373.15'; 'pressure' '101325' '101325'});
model.thermodynamics.feature('pp1').feature('singlephase11').set('derivatives', {'HeatCapacityCp_water_Gas111_Dtemperature' 'HeatCapacityCp_water_Gas111_Dpressure'});
model.thermodynamics.feature('pp1').feature('singlephase11').set('SecondDerivatives', {});
model.thermodynamics.feature('pp1').feature('singlephase11').set('SecondDerivativeIndices', {});
model.thermodynamics.feature('pp1').feature('singlephase11').set('phase', 'Gas');
model.thermodynamics.feature('pp1').feature('singlephase11').set('comp_basis', 'mole');
model.thermodynamics.feature('pp1').feature('singlephase11').set('include_derivatives', 'yes');
model.thermodynamics.feature('pp1').feature.create('singlephase12', 'OnePhaseProperty');
model.thermodynamics.feature('pp1').feature('singlephase12').label('Enthalpy of formation 6');
model.thermodynamics.feature('pp1').feature('singlephase12').set('funcname', 'EnthalpyF_water_Gas112');
model.thermodynamics.feature('pp1').feature('singlephase12').set('property', 'EnthalpyF');
model.thermodynamics.feature('pp1').feature('singlephase12').set('propertydescr', 'Enthalpy of formation');
model.thermodynamics.feature('pp1').feature('singlephase12').set('unit', 'J/mol');
model.thermodynamics.feature('pp1').feature('singlephase12').set('prop_basis', 'mole');
model.thermodynamics.feature('pp1').feature('singlephase12').set('compounds', {'water'});
model.thermodynamics.feature('pp1').feature('singlephase12').set('args', {'temperature' 'K' 'Temperature'; 'pressure' 'Pa' 'Pressure'});
model.thermodynamics.feature('pp1').feature('singlephase12').set('plotargs', {'temperature' '298.15' '373.15'; 'pressure' '101325' '101325'});
model.thermodynamics.feature('pp1').feature('singlephase12').set('derivatives', {'EnthalpyF_water_Gas112_Dtemperature' 'EnthalpyF_water_Gas112_Dpressure'});
model.thermodynamics.feature('pp1').feature('singlephase12').set('SecondDerivatives', {});
model.thermodynamics.feature('pp1').feature('singlephase12').set('SecondDerivativeIndices', {});
model.thermodynamics.feature('pp1').feature('singlephase12').set('phase', 'Gas');
model.thermodynamics.feature('pp1').feature('singlephase12').set('comp_basis', 'mole');
model.thermodynamics.feature('pp1').feature('singlephase12').set('include_derivatives', 'yes');
model.thermodynamics.feature('pp1').set('WarningState', false);
model.thermodynamics.feature('pp1').set('Warning', {''});

model.physics('chem').create('rch1', 'ReactionChem', 2);
model.physics('chem').feature('rch1').set('formula', '2 CO + O2 => 2 CO2');
model.physics('chem').create('rch2', 'ReactionChem', 2);
model.physics('chem').feature('rch2').set('formula', '2 H2 + O2 => 2 H2O');
model.physics('chem').create('spec1', 'SpeciesChem', 2);
model.physics('chem').feature('spec1').set('specName', 'N2');
model.physics('chem').prop('mixture').set('Thermodynamics', true);
model.physics('chem').prop('ChemistryModelInputParameter').set('MassTransfer', 'tcs');
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'wCO', 0, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('PackageSpecies', 'carbon monoxide', 0, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'wCO2', 1, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('PackageSpecies', 'carbon dioxide', 1, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'wH2', 2, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('PackageSpecies', 'hydrogen', 2, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'wH2O', 3, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('PackageSpecies', 'water', 3, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'wN2', 4, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('PackageSpecies', 'nitrogen', 4, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'wO2', 5, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('PackageSpecies', 'oxygen', 5, 0);
model.physics('chem').prop('calcTransport').set('thermalConductivitySel', 'UserDefined');
model.physics('chem').prop('calcTransport').set('k', 'k_mix');
model.physics('chem').prop('calcTransport').set('dynamicViscositySel', 'UserDefined');
model.physics('chem').prop('calcTransport').set('eta', 'mu_mix');
model.physics('tcs').create('treac1', 'ReactionWithTurbulenceModel', 2);
model.physics('tcs').feature('treac1').selection.set([1]);
model.physics('tcs').feature('treac1').setIndex('nui', -2, 0);
model.physics('tcs').feature('treac1').setIndex('nui', -1, 1);
model.physics('tcs').feature('treac1').setIndex('nui', 2, 2);
model.physics('tcs').feature('treac1').set('kf', '1e100');
model.physics('tcs').feature('treac1').set('TurbulentReactionModel', 'EddyDissipation');
model.physics('tcs').feature('treac1').set('reactionRateRegularization', true);
model.physics('tcs').feature.duplicate('treac2', 'treac1');
model.physics('tcs').feature('treac2').setIndex('nui', 0, 0);
model.physics('tcs').feature('treac2').setIndex('nui', 0, 2);
model.physics('tcs').feature('treac2').setIndex('nui', -2, 3);
model.physics('tcs').feature('treac2').setIndex('nui', 2, 4);
model.physics('chem').feature('rch1').set('ReactionExpression', 'UserDefined');
model.physics('chem').feature('rch1').set('r', 'tcs.treac1.r');
model.physics('chem').feature('rch1').set('bulkFwdOrder', 0);
model.physics('chem').feature('rch2').set('ReactionExpression', 'UserDefined');
model.physics('chem').feature('rch2').set('r', 'tcs.treac2.r');
model.physics('chem').feature('rch2').set('bulkFwdOrder', 0);
model.physics('tcs').prop('TransportMechanism').set('DiffusionModel', 'FicksLaw');
model.physics('tcs').prop('SpeciesProperties').set('FromMassConstraint', 6);
model.physics('tcs').feature('init1').setIndex('w0', 0, 0);
model.physics('tcs').feature('init1').setIndex('w0', 'wcf_O2', 1);
model.physics('tcs').feature('init1').setIndex('w0', 0, 2);
model.physics('tcs').feature('init1').setIndex('w0', 0, 3);
model.physics('tcs').feature('init1').setIndex('w0', 0, 4);
model.physics('tcs').create('in1', 'Inflow', 1);
model.physics('tcs').feature('in1').selection.set([2]);
model.physics('tcs').feature('in1').set('MixtureSpecification', 'MoleFractions');
model.physics('tcs').feature('in1').setIndex('x0', 'x0_CO', 0);
model.physics('tcs').feature('in1').setIndex('x0', 'x0_O2', 1);
model.physics('tcs').feature('in1').setIndex('x0', 'x0_CO2', 2);
model.physics('tcs').feature('in1').setIndex('x0', 'x0_H2', 3);
model.physics('tcs').feature('in1').setIndex('x0', 'x0_H2O', 4);
model.physics('tcs').create('in2', 'Inflow', 1);
model.physics('tcs').feature('in2').setIndex('wbnd', '1e-5', 0);
model.physics('tcs').feature('in2').setIndex('wbnd', 'wcf_O2', 1);
model.physics('tcs').feature('in2').setIndex('wbnd', '1e-5', 2);
model.physics('tcs').feature('in2').setIndex('wbnd', '1e-5', 3);
model.physics('tcs').feature('in2').setIndex('wbnd', '1e-5', 4);
model.physics('tcs').feature('in2').selection.set([9 10]);
model.physics('tcs').create('out1', 'Outflow', 1);
model.physics('tcs').feature('out1').selection.set([3]);
model.physics('spf').feature('fp1').set('editModelInputs', true);
model.physics('spf').feature('fp1').set('rho_mat', 'root.comp1.chem.rho');
model.physics('spf').feature('fp1').set('mu_mat', 'userdef');
model.physics('spf').feature('fp1').set('mu', 'mu_mix');
model.physics('spf').create('inl1', 'InletBoundary', 1);
model.physics('spf').feature('inl1').selection.set([2]);
model.physics('spf').feature('inl1').set('BoundaryCondition', 'FullyDevelopedFlow');
model.physics('spf').feature('inl1').set('Uavfdf', 'Ujet');
model.physics('spf').create('inl2', 'InletBoundary', 1);
model.physics('spf').feature('inl2').selection.set([9 10]);
model.physics('spf').feature('inl2').set('ComponentWise', 'VelocityFieldComponentWise');
model.physics('spf').feature('inl2').set('u0', {'0' '0' 'Ucf'});
model.physics('spf').feature('inl2').set('IT_list', 'low_turbulent_intensity');
model.physics('spf').feature('inl2').set('LT_list', 'user_defined');
model.physics('spf').feature('inl2').set('LT', '0.1*Di');
model.physics('spf').create('out1', 'OutletBoundary', 1);
model.physics('spf').feature('out1').selection.set([3]);
model.physics('spf').feature('out1').set('NormalFlow', true);
model.physics('ht').feature('init1').set('Tinit', 'T0');
model.physics('ht').feature('fluid1').set('editModelInputs', true);
model.physics('ht').feature('fluid1').set('u_src', 'root.comp1.u');
model.physics('ht').feature('fluid1').set('k_mat', 'userdef');
model.physics('ht').feature('fluid1').set('k', {'k_mix' '0' '0' '0' 'k_mix' '0' '0' '0' 'k_mix'});
model.physics('ht').feature('fluid1').set('rho_mat', 'root.comp1.chem.rho');
model.physics('ht').feature('fluid1').set('Cp_mat', 'root.comp1.chem.Cptot');
model.physics('ht').create('ifl1', 'Inflow', 1);
model.physics('ht').feature('ifl1').selection.set([2 9 10]);
model.physics('ht').feature('ifl1').set('Tustr', 'T0');
model.physics('ht').create('ofl1', 'ConvectiveOutflow', 1);
model.physics('ht').feature('ofl1').selection.set([3]);

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').set('smoothcontrol', false);
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([2 15]);
model.mesh('mesh1').feature('map1').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis1').set('elemcount', 20);
model.mesh('mesh1').feature('map1').feature('dis1').set('elemratio', 4);
model.mesh('mesh1').feature('map1').feature('dis1').set('growthrate', 'exponential');
model.mesh('mesh1').feature('map1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis2').selection.set([11 16 17]);
model.mesh('mesh1').feature('map1').feature('dis2').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis2').set('elemcount', 200);
model.mesh('mesh1').feature('map1').feature('dis2').set('elemratio', 250);
model.mesh('mesh1').feature('map1').feature('dis2').set('growthrate', 'exponential');
model.mesh('mesh1').feature('map1').create('dis3', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis3').selection.set([9 18]);
model.mesh('mesh1').feature('map1').feature('dis3').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis3').set('elemcount', 20);
model.mesh('mesh1').feature('map1').feature('dis3').set('elemratio', 400);
model.mesh('mesh1').feature('map1').feature('dis3').set('growthrate', 'exponential');
model.mesh('mesh1').feature('map1').feature('dis3').set('reverse', true);
model.mesh('mesh1').feature('map1').create('dis4', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis4').selection.set([1 4 8]);
model.mesh('mesh1').feature('map1').feature('dis4').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis4').set('elemcount', 20);
model.mesh('mesh1').feature('map1').feature('dis4').set('elemratio', 200);
model.mesh('mesh1').feature('map1').feature('dis4').set('growthrate', 'exponential');
model.mesh('mesh1').feature('map1').feature('dis4').set('reverse', true);
model.mesh('mesh1').feature('map1').create('dis5', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis5').selection.set([12]);
model.mesh('mesh1').feature('map1').feature('dis5').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis5').set('elemcount', 20);
model.mesh('mesh1').feature('map1').feature('dis5').set('elemratio', 8);
model.mesh('mesh1').feature('map1').feature('dis5').set('growthrate', 'exponential');
model.mesh('mesh1').feature('map1').create('dis6', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis6').selection.set([3 13]);
model.mesh('mesh1').feature('map1').feature('dis6').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis6').set('elemcount', 20);
model.mesh('mesh1').feature('map1').feature('dis6').set('elemratio', 4);
model.mesh('mesh1').feature('map1').feature('dis6').set('growthrate', 'exponential');
model.mesh('mesh1').run;

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('se1', 'Segregated');
model.sol('sol1').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_p' 'comp1_u' 'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subdamp', 0.5);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').label('Velocity u, Pressure p');
model.sol('sol1').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_wCO' 'comp1_wO2' 'comp1_wCO2' 'comp1_wH2' 'comp1_wH2O' 'comp1_nirf1_wWall_d_wCO' 'comp1_nirf1_wWall_u_wCO' 'comp1_nirf1_wWall_d_wO2' 'comp1_nirf1_wWall_u_wO2' 'comp1_nirf1_wWall_d_wCO2'  ...
'comp1_nirf1_wWall_u_wCO2' 'comp1_nirf1_wWall_d_wH2' 'comp1_nirf1_wWall_u_wH2' 'comp1_nirf1_wWall_d_wH2O' 'comp1_nirf1_wWall_u_wH2O'});
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subdamp', 0.35);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subntolfact', 1);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subiter', 3);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subtermconst', 'itertol');
model.sol('sol1').feature('s1').create('d2', 'Direct');
model.sol('sol1').feature('s1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d2').label('Direct, mass fractions (tcs)');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').label('Mass Fractions');
model.sol('sol1').feature('s1').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss3').set('segvar', {'comp1_T' 'comp1_nirf1_TWall_d' 'comp1_nirf1_TWall_u'});
model.sol('sol1').feature('s1').feature('se1').feature('ss3').set('subdamp', 0.5);
model.sol('sol1').feature('s1').create('d3', 'Direct');
model.sol('sol1').feature('s1').feature('d3').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d3').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d3').label('Direct, heat transfer variables (ht)');
model.sol('sol1').feature('s1').feature('se1').feature('ss3').set('linsolver', 'd3');
model.sol('sol1').feature('s1').feature('se1').feature('ss3').label('Temperature');
model.sol('sol1').feature('s1').feature('se1').create('ss4', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss4').set('segvar', {'comp1_k' 'comp1_om'});
model.sol('sol1').feature('s1').feature('se1').feature('ss4').set('subdamp', 0.45);
model.sol('sol1').feature('s1').feature('se1').feature('ss4').set('subiter', 3);
model.sol('sol1').feature('s1').feature('se1').feature('ss4').set('subtermconst', 'itertol');
model.sol('sol1').feature('s1').feature('se1').feature('ss4').set('subntolfact', 1);
model.sol('sol1').feature('s1').create('d4', 'Direct');
model.sol('sol1').feature('s1').feature('d4').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d4').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d4').label('Direct, turbulence variables (spf)');
model.sol('sol1').feature('s1').feature('se1').feature('ss4').set('linsolver', 'd4');
model.sol('sol1').feature('s1').feature('se1').feature('ss4').label('Turbulence Variables');
model.sol('sol1').feature('s1').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol1').feature('s1').feature('se1').set('subinitcfl', 2);
model.sol('sol1').feature('s1').feature('se1').set('submincfl', 10000);
model.sol('sol1').feature('s1').feature('se1').set('subkppid', 0.65);
model.sol('sol1').feature('s1').feature('se1').set('subkdpid', 0.05);
model.sol('sol1').feature('s1').feature('se1').set('subkipid', 0.05);
model.sol('sol1').feature('s1').feature('se1').set('subcfltol', 0.1);
model.sol('sol1').feature('s1').feature('se1').set('segcflaa', true);
model.sol('sol1').feature('s1').feature('se1').set('segcflaacfl', 9000);
model.sol('sol1').feature('s1').feature('se1').set('segcflaafact', 1);
model.sol('sol1').feature('s1').feature('se1').set('maxsegiter', 300);
model.sol('sol1').feature('s1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol1').feature('s1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.om 0 comp1.k 0 comp1.T 0 ');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').create('i2', 'Iterative');
model.sol('sol1').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i2').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i2').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i2').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i2').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i2').label('AMG, mass fractions (tcs)');
model.sol('sol1').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').create('i3', 'Iterative');
model.sol('sol1').feature('s1').feature('i3').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i3').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i3').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i3').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i3').set('maxlinit', 10000);
model.sol('sol1').feature('s1').feature('i3').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i3').label('AMG, heat transfer variables (ht)');
model.sol('sol1').feature('s1').feature('i3').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').create('i4', 'Iterative');
model.sol('sol1').feature('s1').feature('i4').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i4').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i4').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i4').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i4').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i4').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i4').label('AMG, turbulence variables (spf)');
model.sol('sol1').feature('s1').feature('i4').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('pr').feature('sl1').set('iter', 0);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').attach('std1');

model.thermodynamics.feature('pp1').feature('singlephase2').setIndex('plotargs', 2000, 0, 2);
model.thermodynamics.feature('pp1').feature('singlephase2').createPlot('pg1');

model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').label('Enthalpy of Formation');
model.result('pg1').set('savedatainmodel', true);

model.thermodynamics.feature('pp1').feature('singlephase4').setIndex('plotargs', 2000, 0, 2);
model.thermodynamics.feature('pp1').feature('singlephase4').createPlot('pg2');

model.result('pg2').run;

model.thermodynamics.feature('pp1').feature('singlephase6').setIndex('plotargs', 2000, 0, 2);
model.thermodynamics.feature('pp1').feature('singlephase6').createPlot('pg3');

model.result('pg3').run;

model.thermodynamics.feature('pp1').feature('singlephase8').setIndex('plotargs', 2000, 0, 2);
model.thermodynamics.feature('pp1').feature('singlephase8').createPlot('pg4');

model.result('pg4').run;

model.thermodynamics.feature('pp1').feature('singlephase10').setIndex('plotargs', 2000, 0, 2);
model.thermodynamics.feature('pp1').feature('singlephase10').createPlot('pg5');

model.result('pg5').run;

model.thermodynamics.feature('pp1').feature('singlephase12').setIndex('plotargs', 2000, 0, 2);
model.thermodynamics.feature('pp1').feature('singlephase12').createPlot('pg6');

model.result('pg6').run;
model.result('pg2').run;
model.result('pg1').feature.copy('plot2', 'pg2/plot1');
model.result('pg2').feature.remove('plot1');
model.result('pg3').run;
model.result('pg1').feature.copy('plot3', 'pg3/plot1');
model.result('pg3').feature.remove('plot1');
model.result('pg4').run;
model.result('pg1').feature.copy('plot4', 'pg4/plot1');
model.result('pg4').feature.remove('plot1');
model.result('pg5').run;
model.result('pg1').feature.copy('plot5', 'pg5/plot1');
model.result('pg5').feature.remove('plot1');
model.result('pg6').run;
model.result('pg1').feature.copy('plot6', 'pg6/plot1');
model.result('pg6').feature.remove('plot1');
model.result('pg2').run;
model.result.remove('pg2');
model.result.remove('pg3');
model.result.remove('pg4');
model.result.remove('pg5');
model.result.remove('pg6');

model.thermodynamics.feature('pp1').feature('singlephase1').setIndex('plotargs', 2000, 0, 2);
model.thermodynamics.feature('pp1').feature('singlephase1').createPlot('pg2');

model.result('pg2').run;
model.result('pg2').label('Heat Capacity');
model.result('pg2').set('savedatainmodel', true);

model.thermodynamics.feature('pp1').feature('singlephase3').setIndex('plotargs', 2000, 0, 2);
model.thermodynamics.feature('pp1').feature('singlephase3').createPlot('pg3');

model.result('pg3').run;

model.thermodynamics.feature('pp1').feature('singlephase5').setIndex('plotargs', 2000, 0, 2);
model.thermodynamics.feature('pp1').feature('singlephase5').createPlot('pg4');

model.result('pg4').run;

model.thermodynamics.feature('pp1').feature('singlephase7').setIndex('plotargs', 2000, 0, 2);
model.thermodynamics.feature('pp1').feature('singlephase7').createPlot('pg5');

model.result('pg5').run;

model.thermodynamics.feature('pp1').feature('singlephase9').setIndex('plotargs', 2000, 0, 2);
model.thermodynamics.feature('pp1').feature('singlephase9').createPlot('pg6');

model.result('pg6').run;

model.thermodynamics.feature('pp1').feature('singlephase11').setIndex('plotargs', 2000, 0, 2);
model.thermodynamics.feature('pp1').feature('singlephase11').createPlot('pg7');

model.result('pg7').run;
model.result('pg3').run;
model.result('pg2').feature.copy('plot2', 'pg3/plot1');
model.result('pg3').feature.remove('plot1');
model.result('pg4').run;
model.result('pg2').feature.copy('plot3', 'pg4/plot1');
model.result('pg4').feature.remove('plot1');
model.result('pg5').run;
model.result('pg2').feature.copy('plot4', 'pg5/plot1');
model.result('pg5').feature.remove('plot1');
model.result('pg6').run;
model.result('pg2').feature.copy('plot5', 'pg6/plot1');
model.result('pg6').feature.remove('plot1');
model.result('pg7').run;
model.result('pg2').feature.copy('plot6', 'pg7/plot1');
model.result('pg7').feature.remove('plot1');
model.result('pg3').run;
model.result.remove('pg3');
model.result.remove('pg4');
model.result.remove('pg5');
model.result.remove('pg6');
model.result.remove('pg7');
model.result('pg1').run;
model.result('pg1').set('titletype', 'none');
model.result('pg1').set('xlabelactive', true);
model.result('pg1').set('xlabel', 'Temperature (K)');
model.result('pg1').set('ylabelactive', true);
model.result('pg1').set('ylabel', 'Enthalpy of Formation (J/mol)');
model.result('pg1').set('legendlayout', 'outside');
model.result('pg1').run;
model.result('pg1').feature('plot1').set('legend', true);
model.result('pg1').feature('plot1').set('legendmethod', 'manual');
model.result('pg1').feature('plot1').setIndex('legends', 'CO2', 0);
model.result('pg1').run;
model.result('pg1').feature('plot2').set('legend', true);
model.result('pg1').feature('plot2').set('legendmethod', 'manual');
model.result('pg1').feature('plot2').setIndex('legends', 'CO', 0);
model.result('pg1').run;
model.result('pg1').feature('plot3').set('legend', true);
model.result('pg1').feature('plot3').set('legendmethod', 'manual');
model.result('pg1').feature('plot3').setIndex('legends', 'H2', 0);
model.result('pg1').run;
model.result('pg1').feature('plot4').set('legend', true);
model.result('pg1').feature('plot4').set('legendmethod', 'manual');
model.result('pg1').feature('plot4').setIndex('legends', 'N2', 0);
model.result('pg1').run;
model.result('pg1').feature('plot5').set('legend', true);
model.result('pg1').feature('plot5').set('legendmethod', 'manual');
model.result('pg1').feature('plot5').setIndex('legends', 'O2', 0);
model.result('pg1').run;
model.result('pg1').feature('plot6').set('legend', true);
model.result('pg1').feature('plot6').set('legendmethod', 'manual');
model.result('pg1').feature('plot6').setIndex('legends', 'H2O', 0);
model.result('pg1').run;
model.result('pg2').run;
model.result('pg2').set('data', 'singlephase2_ds1');
model.result('pg2').set('titletype', 'none');
model.result('pg2').set('xlabelactive', true);
model.result('pg2').set('xlabel', 'Temperature (K)');
model.result('pg2').set('ylabelactive', true);
model.result('pg2').set('ylabel', 'Heat Capacity (J/mol/K)');
model.result('pg2').set('legendlayout', 'outside');
model.result('pg2').run;
model.result('pg2').feature('plot1').set('legend', true);
model.result('pg2').feature('plot1').set('legendmethod', 'manual');
model.result('pg2').feature('plot1').setIndex('legends', 'CO2', 0);
model.result('pg2').run;
model.result('pg2').feature('plot2').set('legend', true);
model.result('pg2').feature('plot2').set('legendmethod', 'manual');
model.result('pg2').feature('plot2').setIndex('legends', 'CO', 0);
model.result('pg2').run;
model.result('pg2').feature('plot3').set('legend', true);
model.result('pg2').feature('plot3').set('legendmethod', 'manual');
model.result('pg2').feature('plot3').setIndex('legends', 'H2', 0);
model.result('pg2').run;
model.result('pg2').feature('plot4').set('legend', true);
model.result('pg2').feature('plot4').set('legendmethod', 'manual');
model.result('pg2').feature('plot4').setIndex('legends', 'N2', 0);
model.result('pg2').run;
model.result('pg2').feature('plot5').set('legend', true);
model.result('pg2').feature('plot5').set('legendmethod', 'manual');
model.result('pg2').feature('plot5').setIndex('legends', 'O2', 0);
model.result('pg2').run;
model.result('pg2').feature('plot6').set('legend', true);
model.result('pg2').feature('plot6').set('legendmethod', 'manual');
model.result('pg2').feature('plot6').setIndex('legends', 'H2O', 0);
model.result('pg2').run;
model.result.dataset.remove('singlephase4_ds1');
model.result.dataset.remove('singlephase6_ds1');
model.result.dataset.remove('singlephase8_ds1');
model.result.dataset.remove('singlephase10_ds1');
model.result.dataset.remove('singlephase12_ds1');
model.result.dataset.remove('singlephase1_ds1');
model.result.dataset.remove('singlephase3_ds1');
model.result.dataset.remove('singlephase5_ds1');
model.result.dataset.remove('singlephase7_ds1');
model.result.dataset.remove('singlephase9_ds1');
model.result.dataset.remove('singlephase11_ds1');
model.result.evaluationGroup.create('eg1', 'EvaluationGroup');
model.result.evaluationGroup('eg1').set('transpose', true);
model.result.evaluationGroup('eg1').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg1').feature('gev1').label('Enthalpy of Formation, 298 K');
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'EnthalpyF_carbon_dioxide_Gas12(298.15[K],1.0133E5[Pa])', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'J/mol', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Enthalpy of formation 1', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'EnthalpyF_carbon_monoxide_Gas14(298.15[K],1.0133E5[Pa])', 1);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'J/mol', 1);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Enthalpy of formation 2', 1);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'EnthalpyF_hydrogen_Gas16(298.15[K],1.0133E5[Pa])', 2);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'J/mol', 2);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Enthalpy of formation 3', 2);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'EnthalpyF_nitrogen_Gas18(298.15[K],1.0133E5[Pa])', 3);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'J/mol', 3);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Enthalpy of formation 4', 3);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'EnthalpyF_oxygen_Gas110(298.15[K],1.0133E5[Pa])', 4);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'J/mol', 4);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Enthalpy of formation 5', 4);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'EnthalpyF_water_Gas112(298.15[K],1.0133E5[Pa])', 5);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'J/mol', 5);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Enthalpy of formation 6', 5);

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol1').study('std1');
model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('se1', 'Segregated');
model.sol('sol1').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_p' 'comp1_u' 'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subdamp', 0.5);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').label('Velocity u, Pressure p');
model.sol('sol1').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_wCO' 'comp1_wO2' 'comp1_wCO2' 'comp1_wH2' 'comp1_wH2O' 'comp1_nirf1_wWall_d_wCO' 'comp1_nirf1_wWall_u_wCO' 'comp1_nirf1_wWall_d_wO2' 'comp1_nirf1_wWall_u_wO2' 'comp1_nirf1_wWall_d_wCO2'  ...
'comp1_nirf1_wWall_u_wCO2' 'comp1_nirf1_wWall_d_wH2' 'comp1_nirf1_wWall_u_wH2' 'comp1_nirf1_wWall_d_wH2O' 'comp1_nirf1_wWall_u_wH2O'});
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subdamp', 0.35);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subntolfact', 1);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subiter', 3);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subtermconst', 'itertol');
model.sol('sol1').feature('s1').create('d2', 'Direct');
model.sol('sol1').feature('s1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d2').label('Direct, mass fractions (tcs)');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').label('Mass Fractions');
model.sol('sol1').feature('s1').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss3').set('segvar', {'comp1_T' 'comp1_nirf1_TWall_d' 'comp1_nirf1_TWall_u'});
model.sol('sol1').feature('s1').feature('se1').feature('ss3').set('subdamp', 0.5);
model.sol('sol1').feature('s1').create('d3', 'Direct');
model.sol('sol1').feature('s1').feature('d3').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d3').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d3').label('Direct, heat transfer variables (ht)');
model.sol('sol1').feature('s1').feature('se1').feature('ss3').set('linsolver', 'd3');
model.sol('sol1').feature('s1').feature('se1').feature('ss3').label('Temperature');
model.sol('sol1').feature('s1').feature('se1').create('ss4', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss4').set('segvar', {'comp1_k' 'comp1_om'});
model.sol('sol1').feature('s1').feature('se1').feature('ss4').set('subdamp', 0.45);
model.sol('sol1').feature('s1').feature('se1').feature('ss4').set('subiter', 3);
model.sol('sol1').feature('s1').feature('se1').feature('ss4').set('subtermconst', 'itertol');
model.sol('sol1').feature('s1').feature('se1').feature('ss4').set('subntolfact', 1);
model.sol('sol1').feature('s1').create('d4', 'Direct');
model.sol('sol1').feature('s1').feature('d4').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d4').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d4').label('Direct, turbulence variables (spf)');
model.sol('sol1').feature('s1').feature('se1').feature('ss4').set('linsolver', 'd4');
model.sol('sol1').feature('s1').feature('se1').feature('ss4').label('Turbulence Variables');
model.sol('sol1').feature('s1').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol1').feature('s1').feature('se1').set('subinitcfl', 2);
model.sol('sol1').feature('s1').feature('se1').set('submincfl', 10000);
model.sol('sol1').feature('s1').feature('se1').set('subkppid', 0.65);
model.sol('sol1').feature('s1').feature('se1').set('subkdpid', 0.05);
model.sol('sol1').feature('s1').feature('se1').set('subkipid', 0.05);
model.sol('sol1').feature('s1').feature('se1').set('subcfltol', 0.1);
model.sol('sol1').feature('s1').feature('se1').set('segcflaa', true);
model.sol('sol1').feature('s1').feature('se1').set('segcflaacfl', 9000);
model.sol('sol1').feature('s1').feature('se1').set('segcflaafact', 1);
model.sol('sol1').feature('s1').feature('se1').set('maxsegiter', 300);
model.sol('sol1').feature('s1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol1').feature('s1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.om 0 comp1.k 0 comp1.T 0 ');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').create('i2', 'Iterative');
model.sol('sol1').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i2').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i2').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i2').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i2').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i2').label('AMG, mass fractions (tcs)');
model.sol('sol1').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').create('i3', 'Iterative');
model.sol('sol1').feature('s1').feature('i3').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i3').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i3').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i3').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i3').set('maxlinit', 10000);
model.sol('sol1').feature('s1').feature('i3').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i3').label('AMG, heat transfer variables (ht)');
model.sol('sol1').feature('s1').feature('i3').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').create('i4', 'Iterative');
model.sol('sol1').feature('s1').feature('i4').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i4').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i4').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i4').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i4').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i4').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i4').label('AMG, turbulence variables (spf)');
model.sol('sol1').feature('s1').feature('i4').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('pr').feature('sl1').set('iter', 0);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runFromTo('st1', 'v1');

model.result.evaluationGroup('eg1').run;
model.result.evaluationGroup('eg1').create('gev2', 'EvalGlobal');
model.result.evaluationGroup('eg1').feature('gev2').label('Heat Capacity, 300 K');
model.result.evaluationGroup('eg1').feature('gev2').setIndex('expr', 'HeatCapacityCp_carbon_dioxide_Gas11(300[K],1.0133E5[Pa])', 0);
model.result.evaluationGroup('eg1').feature('gev2').setIndex('unit', 'J/(mol*K)', 0);
model.result.evaluationGroup('eg1').feature('gev2').setIndex('descr', 'Heat capacity (Cp) 1', 0);
model.result.evaluationGroup('eg1').feature('gev2').setIndex('expr', 'HeatCapacityCp_carbon_monoxide_Gas13(300[K],1.0133E5[Pa])', 1);
model.result.evaluationGroup('eg1').feature('gev2').setIndex('unit', 'J/(mol*K)', 1);
model.result.evaluationGroup('eg1').feature('gev2').setIndex('descr', 'Heat capacity (Cp) 2', 1);
model.result.evaluationGroup('eg1').feature('gev2').setIndex('expr', 'HeatCapacityCp_hydrogen_Gas15(300[K],1.0133E5[Pa])', 2);
model.result.evaluationGroup('eg1').feature('gev2').setIndex('unit', 'J/(mol*K)', 2);
model.result.evaluationGroup('eg1').feature('gev2').setIndex('descr', 'Heat capacity (Cp) 3', 2);
model.result.evaluationGroup('eg1').feature('gev2').setIndex('expr', 'HeatCapacityCp_nitrogen_Gas17(300[K],1.0133E5[Pa])', 3);
model.result.evaluationGroup('eg1').feature('gev2').setIndex('unit', 'J/(mol*K)', 3);
model.result.evaluationGroup('eg1').feature('gev2').setIndex('descr', 'Heat capacity (Cp) 4', 3);
model.result.evaluationGroup('eg1').feature('gev2').setIndex('expr', 'HeatCapacityCp_oxygen_Gas19(300[K],1.0133E5[Pa])', 4);
model.result.evaluationGroup('eg1').feature('gev2').setIndex('unit', 'J/(mol*K)', 4);
model.result.evaluationGroup('eg1').feature('gev2').setIndex('descr', 'Heat capacity (Cp) 5', 4);
model.result.evaluationGroup('eg1').feature('gev2').setIndex('expr', 'HeatCapacityCp_water_Gas111(300[K],1.0133E5[Pa])', 5);
model.result.evaluationGroup('eg1').feature('gev2').setIndex('unit', 'J/(mol*K)', 5);
model.result.evaluationGroup('eg1').feature('gev2').setIndex('descr', 'Heat capacity (Cp) 6', 5);
model.result.evaluationGroup('eg1').run;
model.result.evaluationGroup('eg1').create('gev3', 'EvalGlobal');
model.result.evaluationGroup('eg1').feature('gev3').label('Heat Capacity, 2000 K');
model.result.evaluationGroup('eg1').feature('gev3').setIndex('expr', 'HeatCapacityCp_carbon_dioxide_Gas11(2000[K],1.0133E5[Pa])', 0);
model.result.evaluationGroup('eg1').feature('gev3').setIndex('unit', 'J/(mol*K)', 0);
model.result.evaluationGroup('eg1').feature('gev3').setIndex('descr', 'Heat capacity (Cp) 1', 0);
model.result.evaluationGroup('eg1').feature('gev3').setIndex('expr', 'HeatCapacityCp_carbon_monoxide_Gas13(2000[K],1.0133E5[Pa])', 1);
model.result.evaluationGroup('eg1').feature('gev3').setIndex('unit', 'J/(mol*K)', 1);
model.result.evaluationGroup('eg1').feature('gev3').setIndex('descr', 'Heat capacity (Cp) 2', 1);
model.result.evaluationGroup('eg1').feature('gev3').setIndex('expr', 'HeatCapacityCp_hydrogen_Gas15(2000[K],1.0133E5[Pa])', 2);
model.result.evaluationGroup('eg1').feature('gev3').setIndex('unit', 'J/(mol*K)', 2);
model.result.evaluationGroup('eg1').feature('gev3').setIndex('descr', 'Heat capacity (Cp) 3', 2);
model.result.evaluationGroup('eg1').feature('gev3').setIndex('expr', 'HeatCapacityCp_nitrogen_Gas17(2000[K],1.0133E5[Pa])', 3);
model.result.evaluationGroup('eg1').feature('gev3').setIndex('unit', 'J/(mol*K)', 3);
model.result.evaluationGroup('eg1').feature('gev3').setIndex('descr', 'Heat capacity (Cp) 4', 3);
model.result.evaluationGroup('eg1').feature('gev3').setIndex('expr', 'HeatCapacityCp_oxygen_Gas19(2000[K],1.0133E5[Pa])', 4);
model.result.evaluationGroup('eg1').feature('gev3').setIndex('unit', 'J/(mol*K)', 4);
model.result.evaluationGroup('eg1').feature('gev3').setIndex('descr', 'Heat capacity (Cp) 5', 4);
model.result.evaluationGroup('eg1').feature('gev3').setIndex('expr', 'HeatCapacityCp_water_Gas111(2000[K],1.0133E5[Pa])', 5);
model.result.evaluationGroup('eg1').feature('gev3').setIndex('unit', 'J/(mol*K)', 5);
model.result.evaluationGroup('eg1').feature('gev3').setIndex('descr', 'Heat capacity (Cp) 6', 5);
model.result.evaluationGroup('eg1').run;

model.sol('sol1').runAll;

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol1').study('std1');
model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('se1', 'Segregated');
model.sol('sol1').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_p' 'comp1_u' 'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subdamp', 0.5);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').label('Velocity u, Pressure p');
model.sol('sol1').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_wCO' 'comp1_wO2' 'comp1_wCO2' 'comp1_wH2' 'comp1_wH2O' 'comp1_nirf1_wWall_d_wCO' 'comp1_nirf1_wWall_u_wCO' 'comp1_nirf1_wWall_d_wO2' 'comp1_nirf1_wWall_u_wO2' 'comp1_nirf1_wWall_d_wCO2'  ...
'comp1_nirf1_wWall_u_wCO2' 'comp1_nirf1_wWall_d_wH2' 'comp1_nirf1_wWall_u_wH2' 'comp1_nirf1_wWall_d_wH2O' 'comp1_nirf1_wWall_u_wH2O'});
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subdamp', 0.35);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subntolfact', 1);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subiter', 3);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subtermconst', 'itertol');
model.sol('sol1').feature('s1').create('d2', 'Direct');
model.sol('sol1').feature('s1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d2').label('Direct, mass fractions (tcs)');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').label('Mass Fractions');
model.sol('sol1').feature('s1').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss3').set('segvar', {'comp1_T' 'comp1_nirf1_TWall_d' 'comp1_nirf1_TWall_u'});
model.sol('sol1').feature('s1').feature('se1').feature('ss3').set('subdamp', 0.5);
model.sol('sol1').feature('s1').create('d3', 'Direct');
model.sol('sol1').feature('s1').feature('d3').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d3').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d3').label('Direct, heat transfer variables (ht)');
model.sol('sol1').feature('s1').feature('se1').feature('ss3').set('linsolver', 'd3');
model.sol('sol1').feature('s1').feature('se1').feature('ss3').label('Temperature');
model.sol('sol1').feature('s1').feature('se1').create('ss4', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss4').set('segvar', {'comp1_k' 'comp1_om'});
model.sol('sol1').feature('s1').feature('se1').feature('ss4').set('subdamp', 0.45);
model.sol('sol1').feature('s1').feature('se1').feature('ss4').set('subiter', 3);
model.sol('sol1').feature('s1').feature('se1').feature('ss4').set('subtermconst', 'itertol');
model.sol('sol1').feature('s1').feature('se1').feature('ss4').set('subntolfact', 1);
model.sol('sol1').feature('s1').create('d4', 'Direct');
model.sol('sol1').feature('s1').feature('d4').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d4').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d4').label('Direct, turbulence variables (spf)');
model.sol('sol1').feature('s1').feature('se1').feature('ss4').set('linsolver', 'd4');
model.sol('sol1').feature('s1').feature('se1').feature('ss4').label('Turbulence Variables');
model.sol('sol1').feature('s1').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol1').feature('s1').feature('se1').set('subinitcfl', 2);
model.sol('sol1').feature('s1').feature('se1').set('submincfl', 10000);
model.sol('sol1').feature('s1').feature('se1').set('subkppid', 0.65);
model.sol('sol1').feature('s1').feature('se1').set('subkdpid', 0.05);
model.sol('sol1').feature('s1').feature('se1').set('subkipid', 0.05);
model.sol('sol1').feature('s1').feature('se1').set('subcfltol', 0.1);
model.sol('sol1').feature('s1').feature('se1').set('segcflaa', true);
model.sol('sol1').feature('s1').feature('se1').set('segcflaacfl', 9000);
model.sol('sol1').feature('s1').feature('se1').set('segcflaafact', 1);
model.sol('sol1').feature('s1').feature('se1').set('maxsegiter', 300);
model.sol('sol1').feature('s1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol1').feature('s1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.om 0 comp1.k 0 comp1.T 0 ');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').create('i2', 'Iterative');
model.sol('sol1').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i2').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i2').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i2').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i2').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i2').label('AMG, mass fractions (tcs)');
model.sol('sol1').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').create('i3', 'Iterative');
model.sol('sol1').feature('s1').feature('i3').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i3').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i3').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i3').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i3').set('maxlinit', 10000);
model.sol('sol1').feature('s1').feature('i3').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i3').label('AMG, heat transfer variables (ht)');
model.sol('sol1').feature('s1').feature('i3').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').create('i4', 'Iterative');
model.sol('sol1').feature('s1').feature('i4').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i4').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i4').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i4').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i4').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i4').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i4').label('AMG, turbulence variables (spf)');
model.sol('sol1').feature('s1').feature('i4').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('pr').feature('sl1').set('iter', 0);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').attach('std1');

model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').set('data', 'dset1');
model.result('pg3').label('Concentration, CO (tcs)');
model.result('pg3').set('titletype', 'custom');
model.result('pg3').set('prefixintitle', 'Species CO:');
model.result('pg3').set('expressionintitle', false);
model.result('pg3').set('typeintitle', true);
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', {'tcs.c_wCO'});
model.result('pg3').create('str1', 'Streamline');
model.result('pg3').feature('str1').set('expr', {'tcs.tflux_wCOr' 'tcs.tflux_wCOz'});
model.result('pg3').feature('str1').set('posmethod', 'uniform');
model.result('pg3').feature('str1').set('recover', 'pprint');
model.result('pg3').feature('str1').set('pointtype', 'arrow');
model.result('pg3').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg3').feature('str1').set('color', 'gray');
model.result.dataset.create('rev1', 'Revolve2D');
model.result.dataset('rev1').set('data', 'dset1');
model.result.dataset('rev1').set('revangle', 225);
model.result.dataset('rev1').set('startangle', -90);
model.result.dataset('rev1').set('hasspacevars', false);
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').set('data', 'rev1');
model.result('pg4').label('Concentration, CO, 3D (tcs)');
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', {'tcs.c_wCO'});
model.result('pg4').set('titletype', 'custom');
model.result('pg4').set('typeintitle', false);
model.result('pg4').set('prefixintitle', 'Species CO:');
model.result('pg4').set('expressionintitle', false);
model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').set('data', 'dset1');
model.result('pg5').label('Concentration, O2 (tcs)');
model.result('pg5').set('titletype', 'custom');
model.result('pg5').set('prefixintitle', 'Species O2:');
model.result('pg5').set('expressionintitle', false);
model.result('pg5').set('typeintitle', true);
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', {'tcs.c_wO2'});
model.result('pg5').create('str1', 'Streamline');
model.result('pg5').feature('str1').set('expr', {'tcs.tflux_wO2r' 'tcs.tflux_wO2z'});
model.result('pg5').feature('str1').set('posmethod', 'uniform');
model.result('pg5').feature('str1').set('recover', 'pprint');
model.result('pg5').feature('str1').set('pointtype', 'arrow');
model.result('pg5').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg5').feature('str1').set('color', 'gray');
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').set('data', 'rev1');
model.result('pg6').label('Concentration, O2, 3D (tcs)');
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', {'tcs.c_wO2'});
model.result('pg6').set('titletype', 'custom');
model.result('pg6').set('typeintitle', false);
model.result('pg6').set('prefixintitle', 'Species O2:');
model.result('pg6').set('expressionintitle', false);
model.result.create('pg7', 'PlotGroup2D');
model.result('pg7').set('data', 'dset1');
model.result('pg7').label('Concentration, CO2 (tcs)');
model.result('pg7').set('titletype', 'custom');
model.result('pg7').set('prefixintitle', 'Species CO2:');
model.result('pg7').set('expressionintitle', false);
model.result('pg7').set('typeintitle', true);
model.result('pg7').create('surf1', 'Surface');
model.result('pg7').feature('surf1').set('expr', {'tcs.c_wCO2'});
model.result('pg7').create('str1', 'Streamline');
model.result('pg7').feature('str1').set('expr', {'tcs.tflux_wCO2r' 'tcs.tflux_wCO2z'});
model.result('pg7').feature('str1').set('posmethod', 'uniform');
model.result('pg7').feature('str1').set('recover', 'pprint');
model.result('pg7').feature('str1').set('pointtype', 'arrow');
model.result('pg7').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg7').feature('str1').set('color', 'gray');
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').set('data', 'rev1');
model.result('pg8').label('Concentration, CO2, 3D (tcs)');
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').feature('surf1').set('expr', {'tcs.c_wCO2'});
model.result('pg8').set('titletype', 'custom');
model.result('pg8').set('typeintitle', false);
model.result('pg8').set('prefixintitle', 'Species CO2:');
model.result('pg8').set('expressionintitle', false);
model.result.create('pg9', 'PlotGroup2D');
model.result('pg9').set('data', 'dset1');
model.result('pg9').label('Concentration, H2 (tcs)');
model.result('pg9').set('titletype', 'custom');
model.result('pg9').set('prefixintitle', 'Species H2:');
model.result('pg9').set('expressionintitle', false);
model.result('pg9').set('typeintitle', true);
model.result('pg9').create('surf1', 'Surface');
model.result('pg9').feature('surf1').set('expr', {'tcs.c_wH2'});
model.result('pg9').create('str1', 'Streamline');
model.result('pg9').feature('str1').set('expr', {'tcs.tflux_wH2r' 'tcs.tflux_wH2z'});
model.result('pg9').feature('str1').set('posmethod', 'uniform');
model.result('pg9').feature('str1').set('recover', 'pprint');
model.result('pg9').feature('str1').set('pointtype', 'arrow');
model.result('pg9').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg9').feature('str1').set('color', 'gray');
model.result.create('pg10', 'PlotGroup3D');
model.result('pg10').set('data', 'rev1');
model.result('pg10').label('Concentration, H2, 3D (tcs)');
model.result('pg10').create('surf1', 'Surface');
model.result('pg10').feature('surf1').set('expr', {'tcs.c_wH2'});
model.result('pg10').set('titletype', 'custom');
model.result('pg10').set('typeintitle', false);
model.result('pg10').set('prefixintitle', 'Species H2:');
model.result('pg10').set('expressionintitle', false);
model.result.create('pg11', 'PlotGroup2D');
model.result('pg11').set('data', 'dset1');
model.result('pg11').label('Concentration, H2O (tcs)');
model.result('pg11').set('titletype', 'custom');
model.result('pg11').set('prefixintitle', 'Species H2O:');
model.result('pg11').set('expressionintitle', false);
model.result('pg11').set('typeintitle', true);
model.result('pg11').create('surf1', 'Surface');
model.result('pg11').feature('surf1').set('expr', {'tcs.c_wH2O'});
model.result('pg11').create('str1', 'Streamline');
model.result('pg11').feature('str1').set('expr', {'tcs.tflux_wH2Or' 'tcs.tflux_wH2Oz'});
model.result('pg11').feature('str1').set('posmethod', 'uniform');
model.result('pg11').feature('str1').set('recover', 'pprint');
model.result('pg11').feature('str1').set('pointtype', 'arrow');
model.result('pg11').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg11').feature('str1').set('color', 'gray');
model.result.create('pg12', 'PlotGroup3D');
model.result('pg12').set('data', 'rev1');
model.result('pg12').label('Concentration, H2O, 3D (tcs)');
model.result('pg12').create('surf1', 'Surface');
model.result('pg12').feature('surf1').set('expr', {'tcs.c_wH2O'});
model.result('pg12').set('titletype', 'custom');
model.result('pg12').set('typeintitle', false);
model.result('pg12').set('prefixintitle', 'Species H2O:');
model.result('pg12').set('expressionintitle', false);
model.result.create('pg13', 'PlotGroup2D');
model.result('pg13').set('data', 'dset1');
model.result('pg13').label('Concentration, N2 (tcs)');
model.result('pg13').set('titletype', 'custom');
model.result('pg13').set('prefixintitle', 'Species N2:');
model.result('pg13').set('expressionintitle', false);
model.result('pg13').set('typeintitle', true);
model.result('pg13').create('surf1', 'Surface');
model.result('pg13').feature('surf1').set('expr', {'tcs.c_wN2'});
model.result('pg13').create('str1', 'Streamline');
model.result('pg13').feature('str1').set('expr', {'tcs.tflux_wN2r' 'tcs.tflux_wN2z'});
model.result('pg13').feature('str1').set('posmethod', 'uniform');
model.result('pg13').feature('str1').set('recover', 'pprint');
model.result('pg13').feature('str1').set('pointtype', 'arrow');
model.result('pg13').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg13').feature('str1').set('color', 'gray');
model.result.create('pg14', 'PlotGroup3D');
model.result('pg14').set('data', 'rev1');
model.result('pg14').label('Concentration, N2, 3D (tcs)');
model.result('pg14').create('surf1', 'Surface');
model.result('pg14').feature('surf1').set('expr', {'tcs.c_wN2'});
model.result('pg14').set('titletype', 'custom');
model.result('pg14').set('typeintitle', false);
model.result('pg14').set('prefixintitle', 'Species N2:');
model.result('pg14').set('expressionintitle', false);
model.result.dataset('dset1').set('geom', 'geom1');
model.result.create('pg15', 'PlotGroup2D');
model.result('pg15').label('Velocity (spf)');
model.result('pg15').set('dataisaxisym', 'off');
model.result('pg15').set('frametype', 'spatial');
model.result('pg15').set('data', 'dset1');
model.result('pg15').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg1');
model.result('pg15').feature.create('surf1', 'Surface');
model.result('pg15').feature('surf1').label('Surface');
model.result('pg15').feature('surf1').set('showsolutionparams', 'on');
model.result('pg15').feature('surf1').set('expr', 'spf.U');
model.result('pg15').feature('surf1').set('smooth', 'internal');
model.result('pg15').feature('surf1').set('showsolutionparams', 'on');
model.result('pg15').feature('surf1').set('data', 'parent');
model.result.create('pg16', 'PlotGroup2D');
model.result('pg16').label('Pressure (spf)');
model.result('pg16').set('dataisaxisym', 'off');
model.result('pg16').set('frametype', 'spatial');
model.result('pg16').set('data', 'dset1');
model.result('pg16').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg2');
model.result('pg16').feature.create('con1', 'Contour');
model.result('pg16').feature('con1').label('Contour');
model.result('pg16').feature('con1').set('showsolutionparams', 'on');
model.result('pg16').feature('con1').set('expr', 'p');
model.result('pg16').feature('con1').set('number', 40);
model.result('pg16').feature('con1').set('levelrounding', false);
model.result('pg16').feature('con1').set('smooth', 'internal');
model.result('pg16').feature('con1').set('showsolutionparams', 'on');
model.result('pg16').feature('con1').set('data', 'parent');
model.result.dataset('rev1').set('data', 'dset1');
model.result.create('pg17', 'PlotGroup3D');
model.result('pg17').label('Velocity, 3D (spf)');
model.result('pg17').set('frametype', 'spatial');
model.result('pg17').set('data', 'rev1');
model.result('pg17').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pcond1/pg1');
model.result('pg17').feature.create('surf1', 'Surface');
model.result('pg17').feature('surf1').label('Surface');
model.result('pg17').feature('surf1').set('showsolutionparams', 'on');
model.result('pg17').feature('surf1').set('expr', 'spf.U');
model.result('pg17').feature('surf1').set('smooth', 'internal');
model.result('pg17').feature('surf1').set('showsolutionparams', 'on');
model.result('pg17').feature('surf1').set('data', 'parent');
model.result.dataset.create('edg1', 'Edge2D');
model.result.dataset('edg1').label('Exterior Walls');
model.result.dataset('edg1').set('data', 'dset1');
model.result.dataset('edg1').selection.geom('geom1', 1);
model.result.dataset('edg1').selection.set([4 5 6 7 8]);
model.result.create('pg18', 'PlotGroup2D');
model.result('pg18').label('Wall Resolution (spf)');
model.result('pg18').set('dataisaxisym', 'off');
model.result('pg18').set('frametype', 'spatial');
model.result('pg18').set('data', 'dset1');
model.result('pg18').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pcond2/pcond4/pg2');
model.result('pg18').feature.create('line1', 'Line');
model.result('pg18').feature('line1').label('Wall Resolution');
model.result('pg18').feature('line1').set('showsolutionparams', 'on');
model.result('pg18').feature('line1').set('expr', 'spf.Delta_wPlus');
model.result('pg18').feature('line1').set('linetype', 'tube');
model.result('pg18').feature('line1').set('smooth', 'internal');
model.result('pg18').feature('line1').set('showsolutionparams', 'on');
model.result('pg18').feature('line1').set('data', 'parent');
model.result('pg18').feature('line1').feature.create('hght1', 'Height');
model.result('pg18').feature('line1').feature('hght1').label('Height Expression');
model.result('pg18').feature('line1').feature('hght1').set('heightdata', 'expr');
model.result('pg18').feature('line1').feature('hght1').set('expr', 'spf.WRHeightExpr');
model.result.create('pg19', 'PlotGroup2D');
model.result('pg19').label('Temperature (ht)');
model.result('pg19').set('dataisaxisym', 'off');
model.result('pg19').set('data', 'dset1');
model.result('pg19').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pg2');
model.result('pg19').feature.create('surf1', 'Surface');
model.result('pg19').feature('surf1').set('showsolutionparams', 'on');
model.result('pg19').feature('surf1').set('solutionparams', 'parent');
model.result('pg19').feature('surf1').set('expr', 'T');
model.result('pg19').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg19').feature('surf1').set('showsolutionparams', 'on');
model.result('pg19').feature('surf1').set('data', 'parent');
model.result.move('pg3', 2);
model.result('pg3').tag('pg3');
model.result.move('pg4', 3);
model.result('pg4').tag('pg4');
model.result.move('pg5', 4);
model.result('pg5').tag('pg5');
model.result.move('pg6', 5);
model.result('pg6').tag('pg6');
model.result.move('pg7', 6);
model.result('pg7').tag('pg7');
model.result.move('pg8', 7);
model.result('pg8').tag('pg8');
model.result.move('pg9', 8);
model.result('pg9').tag('pg9');
model.result.move('pg10', 9);
model.result('pg10').tag('pg10');
model.result.move('pg11', 10);
model.result('pg11').tag('pg11');
model.result.move('pg12', 11);
model.result('pg12').tag('pg12');
model.result.move('pg13', 12);
model.result('pg13').tag('pg13');
model.result.move('pg14', 13);
model.result('pg14').tag('pg14');
model.result.move('pg15', 14);
model.result('pg15').tag('pg15');
model.result.move('pg16', 15);
model.result('pg16').tag('pg16');
model.result.move('pg17', 16);
model.result('pg17').tag('pg17');
model.result.move('pg18', 17);
model.result('pg18').tag('pg18');
model.result.move('pg19', 18);
model.result('pg19').tag('pg19');
model.result.move('pg3', 2);
model.result('pg3').tag('pg3');
model.result.move('pg4', 3);
model.result('pg4').tag('pg4');
model.result.move('pg5', 4);
model.result('pg5').tag('pg5');
model.result.move('pg6', 5);
model.result('pg6').tag('pg6');
model.result.move('pg7', 6);
model.result('pg7').tag('pg7');
model.result.move('pg8', 7);
model.result('pg8').tag('pg8');
model.result.move('pg9', 8);
model.result('pg9').tag('pg9');
model.result.move('pg10', 9);
model.result('pg10').tag('pg10');
model.result.move('pg11', 10);
model.result('pg11').tag('pg11');
model.result.move('pg12', 11);
model.result('pg12').tag('pg12');
model.result.move('pg13', 12);
model.result('pg13').tag('pg13');
model.result.move('pg14', 13);
model.result('pg14').tag('pg14');
model.result.move('pg15', 14);
model.result('pg15').tag('pg15');
model.result.move('pg16', 15);
model.result('pg16').tag('pg16');
model.result.move('pg17', 16);
model.result('pg17').tag('pg17');
model.result.move('pg18', 17);
model.result('pg18').tag('pg18');
model.result.move('pg19', 18);
model.result('pg19').tag('pg19');
model.result.dataset.move('rev1', 1);
model.result.dataset('rev1').tag('rev2');
model.result.dataset.move('edg1', 2);
model.result.dataset('edg1').tag('edg3');
model.result.dataset.create('mir1', 'Mirror2D');
model.result.dataset.create('cln1', 'CutLine2D');
model.result.dataset('cln1').set('data', 'mir1');
model.result.dataset('cln1').set('method', 'pointdir');
model.result.dataset('cln1').set('pdpoint', {'0' 'Pl+20*Di'});
model.result.dataset('cln1').set('spacevars', {'r_mirr20'});
model.result.dataset.create('cln2', 'CutLine2D');
model.result.dataset('cln2').set('data', 'mir1');
model.result.dataset('cln2').set('method', 'pointdir');
model.result.dataset('cln2').set('pdpoint', {'0' 'Pl+50*Di'});
model.result.dataset('cln2').set('spacevars', {'r_mirr50'});
model.result('pg15').run;
model.result('pg15').set('data', 'mir1');
model.result('pg15').set('titletype', 'manual');
model.result('pg15').set('title', 'Surface: Velocity Magnitude Streamline: Velocity Field');
model.result('pg15').set('showlegendsunit', true);
model.result('pg15').run;
model.result('pg15').create('str1', 'Streamline');
model.result('pg15').feature('str1').set('expr', {'ht.ur' 'ht.uz'});
model.result('pg15').feature('str1').set('descr', 'Velocity field');
model.result('pg15').feature('str1').set('posmethod', 'uniform');
model.result('pg15').feature('str1').set('udist', 0.035);
model.result('pg15').feature('str1').set('color', 'gray');
model.result('pg15').run;
model.result('pg16').run;
model.result('pg16').set('data', 'mir1');
model.result('pg16').run;
model.result('pg18').run;
model.result('pg18').set('data', 'mir1');
model.result('pg18').run;
model.result('pg7').run;
model.result.duplicate('pg20', 'pg7');
model.result('pg20').run;
model.result('pg20').label('Mass fraction, CO2');
model.result('pg20').set('data', 'mir1');
model.result('pg20').set('edgecolor', 'white');
model.result('pg20').set('titletype', 'manual');
model.result('pg20').set('title', 'Surface: Mass fraction Streamline: Total flux');
model.result('pg20').run;
model.result('pg20').feature('surf1').set('expr', 'wCO2');
model.result('pg20').run;
model.result('pg19').run;
model.result('pg19').set('edges', false);
model.result('pg19').set('titletype', 'manual');
model.result('pg19').set('title', 'Surface: Temperature');
model.result('pg19').set('showlegendsunit', true);
model.result('pg19').run;
model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').label('Centerline data');
model.result.table('tbl1').importData('round_jet_burner_chnAclY.fav');
model.result.table.create('tbl2', 'Table');
model.result.table('tbl2').label('z/Di = 20, Radial Data');
model.result.table('tbl2').importData('round_jet_burner_chnAd20Y.fav');
model.result.table.create('tbl3', 'Table');
model.result.table('tbl3').label('z/Di = 50, Radial Data');
model.result.table('tbl3').importData('round_jet_burner_chnAd50Y.fav');
model.result.table.create('tbl4', 'Table');
model.result.table('tbl4').label('z/Di = 20, Radial Velocity Data');
model.result.table('tbl4').importData('round_jet_burner_seq1420.dat');
model.result.table.create('tbl5', 'Table');
model.result.table('tbl5').label('z/Di = 50, Radial Velocity Data');
model.result.table('tbl5').importData('round_jet_burner_seq1450.dat');
model.result.create('pg21', 'PlotGroup1D');
model.result('pg21').run;
model.result('pg21').create('lngr1', 'LineGraph');
model.result('pg21').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg21').feature('lngr1').set('linewidth', 'preference');
model.result('pg21').feature('lngr1').selection.set([1]);
model.result('pg21').feature('lngr1').set('expr', 'T/T0');
model.result('pg21').feature('lngr1').set('xdata', 'expr');
model.result('pg21').feature('lngr1').set('xdataexpr', '(z-Pl)/Di');
model.result('pg21').feature('lngr1').set('linecolor', 'black');
model.result('pg21').feature('lngr1').set('legend', true);
model.result('pg21').feature('lngr1').set('legendmethod', 'manual');
model.result('pg21').feature('lngr1').setIndex('legends', 'Model', 0);
model.result('pg21').run;
model.result('pg21').create('tblp1', 'Table');
model.result('pg21').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg21').feature('tblp1').set('linewidth', 'preference');
model.result('pg21').feature('tblp1').set('xaxisdata', 1);
model.result('pg21').feature('tblp1').set('plotcolumninput', 'manual');
model.result('pg21').feature('tblp1').set('plotcolumns', [4]);
model.result('pg21').feature('tblp1').set('preprocx', 'linear');
model.result('pg21').feature('tblp1').set('scalingx', '1/(Di*1000)');
model.result('pg21').feature('tblp1').set('preprocy', 'linear');
model.result('pg21').feature('tblp1').set('scalingy', '1/T0');
model.result('pg21').feature('tblp1').set('linestyle', 'none');
model.result('pg21').feature('tblp1').set('linecolor', 'black');
model.result('pg21').feature('tblp1').set('linemarker', 'square');
model.result('pg21').feature('tblp1').set('legend', true);
model.result('pg21').feature('tblp1').set('legendmethod', 'manual');
model.result('pg21').feature('tblp1').setIndex('legends', 'Exp.', 0);
model.result('pg21').run;
model.result('pg21').label('T @ centerline');
model.result('pg21').set('xlabelactive', true);
model.result('pg21').set('xlabel', '(z-Pl)/Di');
model.result('pg21').set('ylabelactive', true);
model.result('pg21').set('ylabel', 'T/T0');
model.result('pg21').set('axislimits', true);
model.result('pg21').set('xmin', -10);
model.result('pg21').set('xmax', 120);
model.result('pg21').set('ymin', 0.5);
model.result('pg21').set('ymax', 8);
model.result('pg21').set('legendlayout', 'outside');
model.result('pg21').set('titletype', 'manual');
model.result('pg21').set('title', 'Temperature Along the Centerline');
model.result('pg21').run;
model.result('pg21').set('titletype', 'none');
model.result('pg21').run;
model.result('pg21').feature('lngr1').set('legend', false);
model.result('pg21').run;
model.result('pg21').feature('tblp1').set('legend', false);
model.result('pg21').run;
model.result('pg21').set('titletype', 'manual');
model.result('pg21').set('title', 'Temperature Along the Centerline');
model.result('pg21').run;
model.result('pg21').feature('lngr1').set('legend', true);
model.result('pg21').run;
model.result('pg21').feature('tblp1').set('legend', true);
model.result.create('pg22', 'PlotGroup1D');
model.result('pg22').run;
model.result('pg22').set('data', 'none');
model.result('pg22').create('lngr1', 'LineGraph');
model.result('pg22').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg22').feature('lngr1').set('linewidth', 'preference');
model.result('pg22').feature('lngr1').set('data', 'cln1');
model.result('pg22').feature('lngr1').set('expr', 'T/T0');
model.result('pg22').feature('lngr1').set('xdata', 'expr');
model.result('pg22').feature('lngr1').set('xdataexpr', 'r_mirr20/Di');
model.result('pg22').feature('lngr1').set('linecolor', 'black');
model.result('pg22').feature('lngr1').set('legend', true);
model.result('pg22').feature('lngr1').set('legendmethod', 'manual');
model.result('pg22').feature('lngr1').setIndex('legends', 'z/Di = 20, Model', 0);
model.result('pg22').feature.duplicate('lngr2', 'lngr1');
model.result('pg22').run;
model.result('pg22').feature('lngr2').set('data', 'cln2');
model.result('pg22').feature('lngr2').set('xdataexpr', 'r_mirr50/Di');
model.result('pg22').feature('lngr2').set('linestyle', 'dashed');
model.result('pg22').feature('lngr2').setIndex('legends', 'z/Di = 50, Model', 0);
model.result('pg22').run;
model.result('pg22').run;
model.result('pg22').create('tblp1', 'Table');
model.result('pg22').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg22').feature('tblp1').set('linewidth', 'preference');
model.result('pg22').feature('tblp1').set('table', 'tbl2');
model.result('pg22').feature('tblp1').set('xaxisdata', 1);
model.result('pg22').feature('tblp1').set('plotcolumninput', 'manual');
model.result('pg22').feature('tblp1').set('plotcolumns', [4]);
model.result('pg22').feature('tblp1').set('preprocx', 'linear');
model.result('pg22').feature('tblp1').set('scalingx', '1/(Di*1000)');
model.result('pg22').feature('tblp1').set('preprocy', 'linear');
model.result('pg22').feature('tblp1').set('scalingy', '1/T0');
model.result('pg22').feature('tblp1').set('linestyle', 'none');
model.result('pg22').feature('tblp1').set('linecolor', 'black');
model.result('pg22').feature('tblp1').set('linemarker', 'square');
model.result('pg22').feature('tblp1').set('legend', true);
model.result('pg22').feature('tblp1').set('legendmethod', 'manual');
model.result('pg22').feature('tblp1').setIndex('legends', 'z/Di = 20, Exp', 0);
model.result('pg22').feature.duplicate('tblp2', 'tblp1');
model.result('pg22').run;
model.result('pg22').feature('tblp2').set('table', 'tbl3');
model.result('pg22').feature('tblp2').set('linemarker', 'triangle');
model.result('pg22').feature('tblp2').set('markerpos', 'interp');
model.result('pg22').feature('tblp2').setIndex('legends', 'z/Di = 50, Exp', 0);
model.result('pg22').run;
model.result('pg22').label('T @ z/Di = 20, 50');
model.result('pg22').set('titletype', 'manual');
model.result('pg22').set('title', 'Temperature Downstream of the Pipe Exit');
model.result('pg22').set('xlabelactive', true);
model.result('pg22').set('xlabel', 'r/Di');
model.result('pg22').set('ylabelactive', true);
model.result('pg22').set('ylabel', 'T/T0');
model.result('pg22').set('axislimits', true);
model.result('pg22').set('xmin', -10);
model.result('pg22').set('xmax', 10);
model.result('pg22').set('ymin', 0.5);
model.result('pg22').set('ymax', 8);
model.result('pg22').set('legendlayout', 'outside');
model.result('pg22').run;
model.result('pg22').set('titletype', 'none');
model.result('pg22').run;
model.result('pg22').feature('lngr1').set('legend', false);
model.result('pg22').run;
model.result('pg22').feature('lngr2').set('legend', false);
model.result('pg22').run;
model.result('pg22').feature('tblp1').set('legend', false);
model.result('pg22').run;
model.result('pg22').feature('tblp2').set('legend', false);
model.result('pg22').run;
model.result('pg22').set('titletype', 'manual');
model.result('pg22').set('title', 'Temperature Downstream of the Pipe Exit');
model.result('pg22').run;
model.result('pg22').feature('lngr1').set('legend', true);
model.result('pg22').run;
model.result('pg22').feature('lngr2').set('legend', true);
model.result('pg22').run;
model.result('pg22').feature('tblp1').set('legend', true);
model.result('pg22').run;
model.result('pg22').feature('tblp2').set('legend', true);
model.result('pg22').run;
model.result.duplicate('pg23', 'pg22');
model.result('pg23').run;
model.result('pg23').label('uz @ z/Di = 20, 50');
model.result('pg23').run;
model.result('pg23').feature('lngr1').set('expr', 'w/Ujet');
model.result('pg23').run;
model.result('pg23').feature('lngr2').set('expr', 'w/Ujet');
model.result('pg23').run;
model.result('pg23').feature('tblp1').set('xaxisdata', 2);
model.result('pg23').feature('tblp1').set('table', 'tbl4');
model.result('pg23').feature('tblp1').set('plotcolumns', [9]);
model.result('pg23').feature('tblp1').set('scalingy', '1/Ujet');
model.result('pg23').run;
model.result('pg23').feature('tblp2').set('xaxisdata', 2);
model.result('pg23').feature('tblp2').set('table', 'tbl5');
model.result('pg23').feature('tblp2').set('plotcolumns', [9]);
model.result('pg23').feature('tblp2').set('scalingy', '1/Ujet');
model.result('pg23').run;
model.result('pg23').set('title', 'Axial Velocity Downstream of the Pipe Exit');
model.result('pg23').set('ylabel', 'uz/Ujet');
model.result('pg23').set('ymin', -0.25);
model.result('pg23').set('ymax', 1.25);
model.result('pg23').run;
model.result('pg23').set('titletype', 'none');
model.result('pg23').run;
model.result('pg23').feature('lngr1').set('legend', false);
model.result('pg23').run;
model.result('pg23').feature('lngr2').set('legend', false);
model.result('pg23').run;
model.result('pg23').feature('tblp1').set('legend', false);
model.result('pg23').run;
model.result('pg23').feature('tblp2').set('legend', false);
model.result('pg23').run;
model.result('pg23').set('titletype', 'manual');
model.result('pg23').set('title', 'Axial Velocity Downstream of the Pipe Exit');
model.result('pg23').run;
model.result('pg23').feature('lngr1').set('legend', true);
model.result('pg23').run;
model.result('pg23').feature('lngr2').set('legend', true);
model.result('pg23').run;
model.result('pg23').feature('tblp1').set('legend', true);
model.result('pg23').run;
model.result('pg23').feature('tblp2').set('legend', true);
model.result('pg21').run;
model.result.duplicate('pg24', 'pg21');
model.result('pg24').run;
model.result('pg24').label('CO, N2 @ centerline');
model.result('pg24').set('title', 'Mass Fraction Along the Centerline');
model.result('pg24').set('ylabel', 'wCO, wN2');
model.result('pg24').set('ymin', -0.05);
model.result('pg24').set('ymax', 1);
model.result('pg24').run;
model.result('pg24').run;
model.result('pg24').feature('lngr1').set('expr', 'wCO');
model.result('pg24').feature('lngr1').setIndex('legends', 'CO, Model', 0);
model.result('pg24').run;
model.result('pg24').feature('tblp1').set('plotcolumns', [14]);
model.result('pg24').feature('tblp1').set('scalingy', 1);
model.result('pg24').feature('tblp1').setIndex('legends', 'CO, Exp.', 0);
model.result('pg24').run;
model.result('pg24').run;
model.result('pg24').feature.duplicate('lngr2', 'lngr1');
model.result('pg24').run;
model.result('pg24').feature('lngr2').set('expr', 'wN2');
model.result('pg24').feature('lngr2').set('linestyle', 'dashed');
model.result('pg24').feature('lngr2').setIndex('legends', 'N2, Model', 0);
model.result('pg24').run;
model.result('pg24').feature.duplicate('tblp2', 'tblp1');
model.result('pg24').run;
model.result('pg24').feature('tblp2').set('plotcolumns', [8]);
model.result('pg24').feature('tblp2').set('linemarker', 'triangle');
model.result('pg24').feature('tblp2').set('markerpos', 'interp');
model.result('pg24').feature('tblp2').setIndex('legends', 'N2, Exp', 0);
model.result('pg24').run;
model.result('pg24').run;
model.result('pg24').set('titletype', 'none');
model.result('pg24').run;
model.result('pg24').feature('lngr1').set('legend', false);
model.result('pg24').run;
model.result('pg24').feature('lngr2').set('legend', false);
model.result('pg24').run;
model.result('pg24').feature('tblp1').set('legend', false);
model.result('pg24').run;
model.result('pg24').feature('tblp2').set('legend', false);
model.result('pg24').run;
model.result('pg24').set('titletype', 'manual');
model.result('pg24').set('title', 'Mass Fraction Along the Centerline');
model.result('pg24').run;
model.result('pg24').feature('lngr1').set('legend', true);
model.result('pg24').run;
model.result('pg24').feature('lngr2').set('legend', true);
model.result('pg24').run;
model.result('pg24').feature('tblp1').set('legend', true);
model.result('pg24').run;
model.result('pg24').feature('tblp2').set('legend', true);
model.result('pg24').run;
model.result.duplicate('pg25', 'pg24');
model.result('pg25').run;
model.result('pg25').label('H2, H2O @ centerline');
model.result('pg25').run;
model.result('pg25').feature('lngr1').set('expr', 'wH2');
model.result('pg25').feature('lngr1').setIndex('legends', 'H2, Model', 0);
model.result('pg25').run;
model.result('pg25').feature('tblp1').set('plotcolumns', [10]);
model.result('pg25').feature('tblp1').setIndex('legends', 'H2, Exp.', 0);
model.result('pg25').run;
model.result('pg25').feature('lngr2').set('expr', 'wH2O');
model.result('pg25').feature('lngr2').setIndex('legends', 'H2O, Model', 0);
model.result('pg25').run;
model.result('pg25').feature('tblp2').set('plotcolumns', [12]);
model.result('pg25').feature('tblp2').setIndex('legends', 'H2O, Exp', 0);
model.result('pg25').run;
model.result('pg25').set('ylabel', 'wH2, wH2O');
model.result('pg25').set('ymax', 0.15);
model.result('pg25').set('ymin', -0.02);
model.result('pg25').run;
model.result('pg25').set('titletype', 'none');
model.result('pg25').run;
model.result('pg25').feature('lngr1').set('legend', false);
model.result('pg25').run;
model.result('pg25').feature('lngr2').set('legend', false);
model.result('pg25').run;
model.result('pg25').feature('tblp1').set('legend', false);
model.result('pg25').run;
model.result('pg25').feature('tblp2').set('legend', false);
model.result('pg25').run;
model.result('pg25').set('titletype', 'manual');
model.result('pg25').set('title', 'Mass Fraction Along the Centerline');
model.result('pg25').run;
model.result('pg25').feature('lngr1').set('legend', true);
model.result('pg25').run;
model.result('pg25').feature('lngr2').set('legend', true);
model.result('pg25').run;
model.result('pg25').feature('tblp1').set('legend', true);
model.result('pg25').run;
model.result('pg25').feature('tblp2').set('legend', true);
model.result('pg25').run;
model.result.duplicate('pg26', 'pg25');
model.result('pg26').run;
model.result('pg26').label('O2, CO2 @ centerline');
model.result('pg26').run;
model.result('pg26').feature('lngr1').set('expr', 'wO2');
model.result('pg26').feature('lngr1').setIndex('legends', 'O2, Model', 0);
model.result('pg26').run;
model.result('pg26').feature('tblp1').set('plotcolumns', [6]);
model.result('pg26').feature('tblp1').setIndex('legends', 'O2, Exp.', 0);
model.result('pg26').run;
model.result('pg26').feature('lngr2').set('expr', 'wCO2');
model.result('pg26').feature('lngr2').setIndex('legends', 'CO2, Model', 0);
model.result('pg26').run;
model.result('pg26').feature('tblp2').set('plotcolumns', [16]);
model.result('pg26').feature('tblp2').setIndex('legends', 'CO2, Exp', 0);
model.result('pg26').run;
model.result('pg26').set('ylabel', 'wO2, wCO2');
model.result('pg26').set('ymin', -0.05);
model.result('pg26').set('ymax', 0.4);
model.result('pg26').run;
model.result('pg26').set('titletype', 'none');
model.result('pg26').run;
model.result('pg26').feature('lngr1').set('legend', false);
model.result('pg26').run;
model.result('pg26').feature('lngr2').set('legend', false);
model.result('pg26').run;
model.result('pg26').feature('tblp1').set('legend', false);
model.result('pg26').run;
model.result('pg26').feature('tblp2').set('legend', false);
model.result('pg26').run;
model.result('pg26').set('titletype', 'manual');
model.result('pg26').set('title', 'Mass Fraction Along the Centerline');
model.result('pg26').run;
model.result('pg26').feature('lngr1').set('legend', true);
model.result('pg26').run;
model.result('pg26').feature('lngr2').set('legend', true);
model.result('pg26').run;
model.result('pg26').feature('tblp1').set('legend', true);
model.result('pg26').run;
model.result('pg26').feature('tblp2').set('legend', true);

model.title('Syngas Combustion in a Round-Jet Burner');

model.description(['Non-premixed turbulent combustion of syngas (synthesis gas) takes place in a round-jet burner.' newline  newline 'Syngas is a gas mixture, primarily composed of hydrogen, carbon monoxide, and carbon dioxide. The name syngas relates to its use in creating synthetic natural gas. In the model, syngas is fed from a pipe into an open region with a slow co-flow of air. Upon exiting the pipe, the syngas mixes and reacts with the surrounding air in a non-premixed manner. The resulting turbulent flame is attached to the pipe outlet. The model is solved by combining the Reacting Flow and the Heat Transfer in Fluids interfaces. The turbulent flow in the jet is modeled using the k-omega turbulence model, and the turbulent reactions are modeled using the eddy dissipation model. The resulting velocity, temperature, and species mass fractions in the reacting jet are compared to experimental values.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;

model.label('round_jet_burner.mph');

model.modelNode.label('Components');

out = model;
