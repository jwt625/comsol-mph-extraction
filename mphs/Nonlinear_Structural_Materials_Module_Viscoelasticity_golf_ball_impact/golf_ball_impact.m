function out = model
%
% golf_ball_impact.m
%
% Model exported on May 26 2025, 21:31 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Nonlinear_Structural_Materials_Module/Viscoelasticity');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/solid', true);

model.param.set('loft', '34[deg]');
model.param.descr('loft', 'Club head loft');
model.param.set('attackAngle', '-4.3[deg]');
model.param.descr('attackAngle', 'Attack angle');
model.param.set('dynLoft', '28[deg]');
model.param.descr('dynLoft', 'Dynamic loft');
model.param.set('vel', '90[mph]');
model.param.descr('vel', 'Club head speed');
model.param.set('velx', 'cos(attackAngle)*vel');
model.param.descr('velx', 'Club head velocity, x-component');
model.param.set('velz', 'sin(attackAngle)*vel');
model.param.descr('velz', 'Club head velocity, z-component');

model.geom('geom1').create('imp1', 'Import');
model.geom('geom1').feature('imp1').set('filename', 'golf_ball_impact.mphbin');
model.geom('geom1').feature('imp1').importData;
model.geom('geom1').create('rot1', 'Rotate');
model.geom('geom1').feature('rot1').selection('input').set({'imp1(1)'});
model.geom('geom1').feature('rot1').set('axistype', 'y');
model.geom('geom1').feature('rot1').set('rot', 'loft-dynLoft');
model.geom('geom1').feature('fin').set('action', 'assembly');
model.geom('geom1').run('fin');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');
model.selection('sel1').label('Club Head');
model.selection('sel1').set([1 2]);
model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').label('Club Shaft');
model.selection('sel2').set([5 6 8 9 10 11 12 14]);
model.selection.create('adj1', 'Adjacent');
model.selection('adj1').model('comp1');
model.selection('adj1').label('Club Head and Shaft, Boundary');
model.selection('adj1').set('input', {'sel1' 'sel2'});
model.selection.create('sel3', 'Explicit');
model.selection('sel3').model('comp1');
model.selection('sel3').label('Club Ferrule');
model.selection('sel3').set([3 4 7 13]);
model.selection.create('adj2', 'Adjacent');
model.selection('adj2').model('comp1');
model.selection('adj2').label('Club Ferrule, Boundary');
model.selection('adj2').set('input', {'sel3'});
model.selection.create('uni1', 'Union');
model.selection('uni1').model('comp1');
model.selection('uni1').label('Club');
model.selection('uni1').set('input', {'sel1' 'sel2' 'sel3'});
model.selection.create('sel4', 'Explicit');
model.selection('sel4').model('comp1');
model.selection('sel4').label('Golf Ball');
model.selection('sel4').set([15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38]);
model.selection.create('sel5', 'Explicit');
model.selection('sel5').model('comp1');
model.selection('sel5').label('Cover');
model.selection('sel5').set([15 16 17 18 27 28 33 38]);
model.selection.create('sel6', 'Explicit');
model.selection('sel6').model('comp1');
model.selection('sel6').label('Mantle');
model.selection('sel6').set([19 20 21 22 29 30 34 37]);
model.selection.create('dif1', 'Difference');
model.selection('dif1').model('comp1');
model.selection('dif1').label('Inner Core');
model.selection('dif1').set('add', {'sel4'});
model.selection('dif1').set('subtract', {'sel5' 'sel6'});
model.selection.create('uni2', 'Union');
model.selection('uni2').model('comp1');
model.selection('uni2').label('Core');
model.selection('uni2').set('input', {'sel6' 'dif1'});
model.selection.create('sel7', 'Explicit');
model.selection('sel7').model('comp1');
model.selection('sel7').geom(2);
model.selection('sel7').label('Club Face');
model.selection('sel7').set([5]);
model.selection.create('sel8', 'Explicit');
model.selection('sel8').model('comp1');
model.selection('sel8').label('Grooves');
model.selection('sel8').geom(2);
model.selection('sel8').set([8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 50 51 52 53 55 59 60 61 62 63 70 71 72 73 75 86 87 88 89 98 105 106 107 108 110]);
model.selection.create('dif2', 'Difference');
model.selection('dif2').model('comp1');
model.selection('dif2').label('Polished Steel');
model.selection('dif2').set('entitydim', 2);
model.selection('dif2').set('add', {'adj1'});
model.selection('dif2').set('subtract', {'sel7' 'sel8'});

model.pair.create('p1', 'Contact', 'geom1');
model.pair('p1').source.named('sel7');
model.pair('p1').destination.set([136 137 139 141]);

model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl('intop1').set('axisym', true);
model.cpl('intop1').selection.named('sel4');
model.cpl('intop1').set('frame', 'material');
model.cpl.create('aveop1', 'Average', 'geom1');
model.cpl('aveop1').set('axisym', true);
model.cpl('aveop1').selection.named('sel1');
model.cpl('aveop1').set('frame', 'material');
model.cpl.create('aveop2', 'Average', 'geom1');
model.cpl('aveop2').set('axisym', true);
model.cpl('aveop2').selection.named('sel4');
model.cpl('aveop2').set('frame', 'material');

model.physics('solid').prop('ShapeProperty').set('order_displacement', 1);
model.physics('solid').create('hmm1', 'HyperelasticModel', 3);
model.physics('solid').feature('hmm1').selection.named('sel5');
model.physics('solid').feature('hmm1').set('reducedIntegration', true);
model.physics('solid').create('hmm2', 'HyperelasticModel', 3);
model.physics('solid').feature('hmm2').selection.named('uni2');
model.physics('solid').feature('hmm2').set('Compressibility_NeoHookean', 'NearlyIncompressible');
model.physics('solid').feature('hmm2').set('VolumetricEnergyUncoupled', 'hartmannNeff');
model.physics('solid').feature('hmm2').set('kappa', '1[GPa]');
model.physics('solid').feature('hmm2').set('reducedIntegration', true);
model.physics('solid').feature('hmm2').create('vis1', 'Viscoelasticity', 3);
model.physics('solid').feature('hmm2').feature('vis1').setIndex('betavm', 0, 1, 0);
model.physics('solid').feature('hmm2').feature('vis1').setIndex('tauvm', 0, 1, 0);
model.physics('solid').feature('hmm2').feature('vis1').setIndex('tauvm', 0, 1, 0);
model.physics('solid').feature('hmm2').feature('vis1').setIndex('betavm', 0, 1, 0);
model.physics('solid').feature('hmm2').feature('vis1').setIndex('tauvm', 0, 1, 0);
model.physics('solid').feature('hmm2').feature('vis1').setIndex('betavm', 0, 2, 0);
model.physics('solid').feature('hmm2').feature('vis1').setIndex('tauvm', 0, 2, 0);
model.physics('solid').feature('hmm2').feature('vis1').setIndex('tauvm', 0, 2, 0);
model.physics('solid').feature('hmm2').feature('vis1').setIndex('betavm', 0, 2, 0);
model.physics('solid').feature('hmm2').feature('vis1').setIndex('tauvm', 0, 2, 0);
model.physics('solid').feature('hmm2').feature('vis1').setIndex('betavm', 0.26, 0, 0);
model.physics('solid').feature('hmm2').feature('vis1').setIndex('tauvm', '1e-5', 0, 0);
model.physics('solid').feature('hmm2').feature('vis1').setIndex('betavm', 0.19, 1, 0);
model.physics('solid').feature('hmm2').feature('vis1').setIndex('tauvm', '1e-4', 1, 0);
model.physics('solid').feature('hmm2').feature('vis1').setIndex('betavm', 0.22, 2, 0);
model.physics('solid').feature('hmm2').feature('vis1').setIndex('tauvm', '1e-3', 2, 0);
model.physics('solid').feature('dcnt1').set('ContactMethodCtrl', 'PenaltyDynamic');
model.physics('solid').feature('dcnt1').set('penaltyCtrlPenalty', 'ViscousOnly');
model.physics('solid').feature('dcnt1').set('taun_penalty', '0.1[ms]');
model.physics('solid').feature('dcnt1').create('fric1', 'Friction', 2);
model.physics('solid').feature('dcnt1').feature('fric1').set('mu_fric', 0.15);
model.physics('solid').create('init2', 'init', 3);
model.physics('solid').feature('init2').selection.named('uni1');
model.physics('solid').feature('init2').set('ut', {'velx' '0' 'velz'});
model.physics('solid').create('disp1', 'Displacement2', 2);
model.physics('solid').feature('disp1').selection.set([131 132 134 135]);
model.physics('solid').feature('disp1').setIndex('Direction', 'prescribed', 0);
model.physics('solid').feature('disp1').setIndex('Direction', 'prescribed', 1);
model.physics('solid').feature('disp1').setIndex('Direction', 'prescribed', 2);
model.physics('solid').feature('disp1').setIndex('U0', 'velx*t', 0);
model.physics('solid').feature('disp1').setIndex('U0', 'velz*t', 2);
model.physics('solid').create('avgr1', 'AverageRotation', -1);
model.physics('solid').feature('avgr1').selection('PointSelection').set([158 161 164 166 169 172]);
model.physics('solid').feature('avgr1').set('CenterOfRotation', 'COR_CentroidOfSelectedEntities');
model.physics('solid').feature('avgr1').set('EntityLevel', 'Point');
model.physics('solid').feature('avgr1').set('RotationModel', 'FiniteRotationSym');
model.physics('solid').feature('avgr1').feature('crp1').selection.set([165]);

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').label('Club Head');
model.material('mat1').selection.named('uni1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat1').propertyGroup('Enu').set('E', {'200e9'});
model.material('mat1').propertyGroup('Enu').set('nu', {'0.3'});
model.material('mat1').propertyGroup('def').set('density', {'7850'});
model.material('mat1').set('family', 'steel');
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').label('Cover');
model.material('mat2').selection.named('sel5');
model.material('mat2').propertyGroup.create('Lame', 'Lame_parameters');
model.material('mat2').propertyGroup('Lame').set('lambLame', {'1.5e9'});
model.material('mat2').propertyGroup('Lame').set('muLame', {'0.2e9'});
model.material('mat2').propertyGroup('def').set('density', {'1145'});
model.material.create('mat3', 'Common', 'comp1');
model.material('mat3').label('Mantle');
model.material('mat3').selection.named('sel6');
model.material('mat3').propertyGroup.create('Lame', 'Lame_parameters');
model.material('mat3').propertyGroup('Lame').set('muLame', {'6e6'});
model.material('mat3').propertyGroup('def').set('density', {'1145'});
model.material('mat3').set('color', 'blue');
model.material.create('mat4', 'Common', 'comp1');
model.material('mat4').label('Inner Core');
model.material('mat4').selection.named('dif1');
model.material('mat4').propertyGroup.create('Lame', 'Lame_parameters');
model.material('mat4').propertyGroup('Lame').set('muLame', {'12e6'});
model.material('mat4').propertyGroup('def').set('density', {'1145'});
model.material('mat4').set('color', 'magenta');

model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('size').set('custom', true);
model.mesh('mesh1').feature('size').set('hmax', 0.01);
model.mesh('mesh1').feature('size').set('hmin', 0.001);
model.mesh('mesh1').feature('size').set('hgrad', 1.4);
model.mesh('mesh1').feature('size').set('hcurve', 0.2);
model.mesh('mesh1').feature('size').set('hnarrow', 0.8);
model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.set([84 85 109 128 131 132 134 135]);
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([168 169 203 240 244 245 254 258]);
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 3);
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe1').selection.set([3 4 5 6 7 8 9 10 11 12 13 14]);
model.mesh('mesh1').create('fq1', 'FreeQuad');
model.mesh('mesh1').feature('fq1').selection.set([83]);
model.mesh('mesh1').create('swe2', 'Sweep');
model.mesh('mesh1').feature('swe2').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe2').selection.set([2]);
model.mesh('mesh1').feature.move('ftet1', 5);
model.mesh('mesh1').run;

model.study('std1').feature('time').set('tlist', '2e-3');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_solid_avgr1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_hmm2_pw').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_avgr1_q').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_avgr1_u').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_avgr1_q').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_avgr1_u').set('scaleval', '0.0024031961330557494');
model.sol('sol1').feature('v1').feature('comp1_solid_hmm2_pw').set('scaleval', '100000000');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.24031961330557491');
model.sol('sol1').feature('v1').feature('comp1_solid_avgr1_q').set('scaleval', '0.1');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', '2e-3');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('timemethod', 'genalpha');
model.sol('sol1').feature('t1').set('predictor', 'constant');
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature('fc1').set('minstep', 0.5);
model.sol('sol1').feature('t1').feature('fc1').set('useminsteprecovery', 'on');
model.sol('sol1').feature('t1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 4);
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('t1').feature('d1').set('nliniterrefine', true);
model.sol('sol1').feature('t1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').set('rhob', 40);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', true);
model.sol('sol1').feature('t1').feature('i1').label('Suggested Iterative Solver (GMRES with SA AMG) (solid)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature('fc1').set('minstep', 0.5);
model.sol('sol1').feature('t1').feature('fc1').set('useminsteprecovery', 'on');
model.sol('sol1').feature('t1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 4);
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('t1').set('tout', 'tsteps');
model.sol('sol1').feature('t1').set('tstepsstore', 2);
model.sol('sol1').feature('t1').set('tstepsgenalpha', 'manual');
model.sol('sol1').feature('t1').set('timestepgenalpha', '2.5e-5');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 25);
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 0.1);
model.sol('sol1').runFromTo('st1', 'v1');

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 1, 0);
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('vol1', 'Volume');
model.result('pg1').feature('vol1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('vol1').set('threshold', 'manual');
model.result('pg1').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg1').feature('vol1').set('colortable', 'Rainbow');
model.result('pg1').feature('vol1').set('colortabletrans', 'none');
model.result('pg1').feature('vol1').set('colorscalemode', 'linear');
model.result('pg1').feature('vol1').set('resolution', 'custom');
model.result('pg1').feature('vol1').set('refine', 2);
model.result('pg1').feature('vol1').set('colortable', 'Prism');
model.result('pg1').feature('vol1').create('def', 'Deform');
model.result('pg1').feature('vol1').feature('def').set('scaleactive', true);
model.result('pg1').feature('vol1').feature('def').set('scale', '1');
model.result('pg1').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg1').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result('pg1').run;
model.result('pg1').label('Strain (solid)');
model.result('pg1').selection.geom('geom1', 3);
model.result('pg1').selection.geom('geom1', 3);
model.result('pg1').selection.set([17 18 21 22 25 26 33 34 35 36 37 38]);
model.result('pg1').run;
model.result('pg1').feature('vol1').set('expr', 'solid.ep3');
model.result('pg1').feature('vol1').set('colortable', 'RainbowLight');
model.result('pg1').feature('vol1').set('colortabletrans', 'reverse');
model.result('pg1').feature('vol1').set('smooth', 'everywhere');
model.result('pg1').feature('vol1').set('threshold', 'none');
model.result('pg1').feature.duplicate('vol2', 'vol1');
model.result('pg1').run;
model.result('pg1').feature('vol2').set('titletype', 'none');
model.result('pg1').feature('vol2').create('mtrl1', 'MaterialAppearance');
model.result('pg1').run;

model.study('std1').feature('time').set('plot', true);
model.study('std1').feature('time').set('plotfreq', 'tsteps');

model.sol('sol1').runAll;

model.result('pg1').run;
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').run;
model.result('pg2').label('Material Rendering');
model.result('pg2').set('edges', false);
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').label('Golf Ball');
model.result('pg2').feature('surf1').set('expr', '1');
model.result('pg2').feature('surf1').set('titletype', 'none');
model.result('pg2').feature('surf1').create('def1', 'Deform');
model.result('pg2').run;
model.result('pg2').feature('surf1').feature('def1').set('scaleactive', true);
model.result('pg2').feature('surf1').feature('def1').set('scale', 1);
model.result('pg2').run;
model.result('pg2').feature('surf1').create('sel1', 'Selection');
model.result('pg2').feature('surf1').feature('sel1').selection.set([136 137 161 163]);
model.result('pg2').run;
model.result('pg2').feature('surf1').create('img1', 'ImageOverlay');
model.result('pg2').feature('surf1').feature('img1').set('filename', 'golf_ball_impact_logo.png');
model.result('pg2').feature('surf1').feature('img1').set('mapping', 'planar');
model.result('pg2').feature('surf1').feature('img1').set('planetype', 'xz');
model.result('pg2').feature('surf1').feature('img1').set('width', '0.03');
model.result('pg2').feature('surf1').feature('img1').set('anchorpos', {'-0.015' '-0.03' '0'});
model.result('pg2').feature('surf1').feature('img1').setIndex('anchorpos', -0.002, 2);
model.result('pg2').feature('surf1').feature('img1').set('extrapolation', 'clamp');
model.result('pg2').run;
model.result('pg2').feature('surf1').create('mtrl1', 'MaterialAppearance');
model.result('pg2').run;
model.result('pg2').feature('surf1').feature('mtrl1').set('material', 'mat2');
model.result('pg2').feature('surf1').feature('mtrl1').set('useplotcolors', true);
model.result('pg2').run;
model.result('pg2').feature.duplicate('surf2', 'surf1');
model.result('pg2').run;
model.result('pg2').feature('surf2').set('inheritplot', 'surf1');
model.result('pg2').run;
model.result('pg2').feature('surf2').feature('sel1').selection.set([139 141 177 193]);
model.result('pg2').run;
model.result('pg2').feature('surf2').feature('img1').set('planetype', 'zx');
model.result('pg2').feature('surf2').feature('img1').setIndex('anchorpos', 0.03, 1);
model.result('pg2').feature('surf2').feature('img1').set('anchorpos', {'0.015' '0.03' '-0.002'});
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature.duplicate('surf3', 'surf1');
model.result('pg2').run;
model.result('pg2').feature('surf3').label('Club Head');
model.result('pg2').feature('surf3').set('inheritplot', 'surf1');
model.result('pg2').run;
model.result('pg2').feature('surf3').feature('sel1').selection.named('dif2');
model.result('pg2').run;
model.result('pg2').feature('surf3').feature.remove('img1');
model.result('pg2').run;
model.result('pg2').feature('surf3').feature('mtrl1').set('material', 'mat1');
model.result('pg2').feature('surf3').feature('mtrl1').set('useplotcolors', false);
model.result('pg2').run;
model.result('pg2').feature.duplicate('surf4', 'surf3');
model.result('pg2').run;
model.result('pg2').feature('surf4').label('Club Face');
model.result('pg2').run;
model.result('pg2').feature('surf4').feature('sel1').selection.named('sel7');
model.result('pg2').run;
model.result('pg2').feature('surf4').feature('mtrl1').set('appearance', 'custom');
model.result('pg2').feature('surf4').feature('mtrl1').set('family', 'steelscratched');
model.result('pg2').run;
model.result('pg2').feature.duplicate('surf5', 'surf4');
model.result('pg2').run;
model.result('pg2').feature('surf5').label('Grooves');
model.result('pg2').run;
model.result('pg2').feature('surf5').feature('mtrl1').set('family', 'plastic');
model.result('pg2').feature('surf5').feature('mtrl1').set('color', 'black');
model.result('pg2').run;
model.result('pg2').feature('surf5').feature('sel1').selection.named('sel8');
model.result('pg2').run;
model.result('pg2').feature.duplicate('surf6', 'surf5');
model.result('pg2').run;
model.result('pg2').feature('surf6').label('Ferrule');
model.result('pg2').run;
model.result('pg2').feature('surf6').feature('sel1').selection.named('adj2');

model.view('view1').set('ssao', true);
model.view('view1').set('flooreffect', true);
model.view('view1').set('environmentmap', 'envmap_meadow');

model.result.export.create('anim1', 'Animation');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('plotgroup', 'pg2');
model.result.export('anim1').run;
model.result.export('anim1').set('framesel', 'all');
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('Energy');
model.result('pg3').set('titletype', 'none');
model.result('pg3').set('ylabelactive', true);
model.result('pg3').set('ylabel', 'Energy (J)');
model.result('pg3').set('legendpos', 'middleright');
model.result('pg3').create('glob1', 'Global');
model.result('pg3').feature('glob1').set('markerpos', 'datapoints');
model.result('pg3').feature('glob1').set('linewidth', 'preference');
model.result('pg3').feature('glob1').setIndex('expr', 'intop1(solid.Ws)', 0);
model.result('pg3').feature('glob1').setIndex('unit', '', 0);
model.result('pg3').feature('glob1').setIndex('descr', 'Elastic', 0);
model.result('pg3').feature('glob1').setIndex('expr', 'intop1(solid.Wk)', 1);
model.result('pg3').feature('glob1').setIndex('unit', '', 1);
model.result('pg3').feature('glob1').setIndex('descr', 'Kinetic', 1);
model.result('pg3').feature('glob1').set('xdataparamunit', 'ms');
model.result('pg3').feature('glob1').set('linewidth', 2);
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Velocity');
model.result('pg4').set('titletype', 'none');
model.result('pg4').set('ylabelactive', true);
model.result('pg4').set('ylabel', 'Velocity (m/s)');
model.result('pg4').set('legendpos', 'lowerright');
model.result('pg4').create('glob1', 'Global');
model.result('pg4').feature('glob1').set('markerpos', 'datapoints');
model.result('pg4').feature('glob1').set('linewidth', 'preference');
model.result('pg4').feature('glob1').setIndex('expr', 'aveop1(solid.vel)', 0);
model.result('pg4').feature('glob1').setIndex('descr', 'Club head', 0);
model.result('pg4').feature('glob1').setIndex('expr', 'aveop2(solid.vel)', 1);
model.result('pg4').feature('glob1').setIndex('descr', 'Golf ball', 1);
model.result('pg4').feature('glob1').set('xdataparamunit', 'ms');
model.result('pg4').feature('glob1').set('linewidth', 2);
model.result('pg4').run;
model.result.evaluationGroup.create('eg1', 'EvaluationGroup');
model.result.evaluationGroup('eg1').label('Golf Metrics');
model.result.evaluationGroup('eg1').setIndex('looplevelinput', 'last', 0);
model.result.evaluationGroup('eg1').create('pev1', 'EvalPoint');
model.result.evaluationGroup('eg1').feature('pev1').selection.set([165]);
model.result.evaluationGroup('eg1').feature('pev1').setIndex('expr', 'atan(z/x)', 0);
model.result.evaluationGroup('eg1').feature('pev1').setIndex('unit', 'deg', 0);
model.result.evaluationGroup('eg1').feature('pev1').setIndex('descr', 'Launch angle', 0);
model.result.evaluationGroup('eg1').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'solid.avgr1.disp_t', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'mph', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Ball speed', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'solid.avgr1.disp_t/vel', 1);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Smash factor', 1);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'solid.avgr1.totrot_t/(2*pi[rad])', 2);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'rpm', 2);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Spin rate', 2);
model.result.evaluationGroup('eg1').run;

model.view.create('view2', 3);
model.view('view2').set('locked', true);
model.view('view2').set('showgrid', false);
model.view('view2').set('showaxisorientation', false);
model.view('view2').camera.set('zoomanglefull', 10);
model.view('view2').camera.setIndex('position', 0.5, 0);
model.view('view2').camera.setIndex('position', -0.9, 1);
model.view('view2').camera.set('position', [0.5 -0.9 0.1]);
model.view('view2').camera.setIndex('target', '-0.00', 0);
model.view('view2').camera.setIndex('target', 0.04, 1);
model.view('view2').camera.set('target', {'-0.00' '0.04' '0.055'});
model.view('view2').camera.setIndex('up', 0, 0);
model.view('view2').camera.setIndex('up', 0.05, 1);
model.view('view2').camera.set('up', [0 0.05 1]);
model.view('view2').camera.setIndex('rotationpoint', 0, 0);
model.view('view2').camera.setIndex('rotationpoint', 0, 1);
model.view('view2').camera.set('rotationpoint', [0 0 0]);
model.view('view2').camera.setIndex('viewoffset', 0, 0);
model.view('view2').camera.set('viewoffset', [0 0.3]);
model.view.create('view3', 3);
model.view('view3').set('locked', true);
model.view('view3').set('showgrid', false);
model.view('view3').set('showaxisorientation', false);
model.view('view3').set('ssao', true);
model.view('view3').set('flooreffect', true);
model.view('view3').set('environmentmap', 'envmap_meadow');
model.view('view3').camera.set('zoomanglefull', 10);
model.view('view3').camera.set('position', [0.15 -1 0.05]);
model.view('view3').camera.setIndex('target', -0.01, 0);
model.view('view3').camera.setIndex('target', 0.005, 1);
model.view('view3').camera.set('target', [-0.01 0.005 0.05]);
model.view('view3').camera.set('up', [0.015 -0.5 1]);
model.view('view3').camera.setIndex('viewoffset', -0.1, 0);
model.view('view3').camera.set('viewoffset', [-0.1 0.2]);

model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').set('looplevel', [7]);
model.result('pg1').set('view', 'view2');
model.result('pg1').set('titletype', 'custom');
model.result('pg1').set('typeintitle', false);
model.result('pg1').set('unitintitle', false);
model.result('pg1').set('descriptionintitle', false);
model.result('pg1').run;
model.result('pg2').run;
model.result.duplicate('pg5', 'pg2');
model.result('pg5').run;
model.result('pg5').set('view', 'view3');
model.result('pg5').set('titletype', 'none');
model.result('pg5').set('looplevel', [1]);
model.result('pg5').run;
model.result('pg5').set('looplevel', [7]);
model.result('pg5').run;
model.result('pg5').set('looplevel', [13]);
model.result('pg5').run;
model.result('pg5').set('looplevel', [19]);
model.result('pg5').run;
model.result.remove('pg5');

model.view.remove('view3');

model.result('pg1').run;

model.title('Impact Analysis of a Golf Ball');

model.description(['In this example, the mechanical impact of a golf club hitting a golf ball is studied. The contact between the two parts is modeled using a viscous penalty formulation to stabilize the dynamic event. To properly model the large deformation, the golf ball is defined using a hyperelastic material model. The material in the core is viscoelastic, causing the elastic energy imposed by the impact to dissipate.' newline  newline 'Results of the simulation are compared to typical golf metrics such a ball speed and spin rate.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;

model.label('golf_ball_impact.mph');

model.modelNode.label('Components');

out = model;
