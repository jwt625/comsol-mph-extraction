function out = model
%
% diesel_filter.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Chemical_Reaction_Engineering_Module/Reactors_with_Porous_Catalysts');

model.modelNode.create('comp1', true);

model.physics.create('re', 'ReactionEng');
model.physics('re').model('comp1');

model.study.create('std1');
model.study('std1').create('spf', 'StationaryPlugflow');
model.study('std1').feature('spf').set('solnum', 'auto');
model.study('std1').feature('spf').set('notsolnum', 'auto');
model.study('std1').feature('spf').set('outputmap', {});
model.study('std1').feature('spf').setSolveFor('/physics/re', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('L', '0.15[m]', 'Reactor channel length');
model.param.set('v_inlet', '2.5[m^3/s]', 'Inlet volumetric flow');
model.param.set('ku', '-2.5[m/s]/L', 'Proportionality constant');
model.param.set('H', '1.27e-3[m]', 'Channel height');
model.param.set('Hf', '4.5e-4[m]', 'Filter wall thickness');
model.param.set('dHs', '50[um]', 'Initial soot layer thickness');
model.param.set('uf', '2.5[m/s]*H/L', 'Velocity of gaseous species through filter');
model.param.set('Sa', '5e-5/H', 'Surface area factor');
model.param.set('C_inlet', '1[mol/m^3]', 'Concentration at inlet, carbon');
model.param.set('cs_total', '1[mol/m^3]', 'Total concentration, catalytic solid species');
model.param.set('x_CeO2', '1', 'Molar fraction, catalytic species ceo2');
model.param.set('x_Ce2O3', '0', 'Molar fraction, catalytic species ce2o3');
model.param.set('CeO2_inlet', 'cs_total*x_CeO2', 'Concentration at inlet, ceo2');
model.param.set('Ce2O3_inlet', 'cs_total*x_Ce2O3', 'Concentration at inlet, ce2o3');
model.param.set('F_CO_inlet', '0[mol/s]', 'Inlet concentration, CO');
model.param.set('F_CO2_inlet', '3.812[mol/s]', 'Inlet concentration, CO2');
model.param.set('F_N2_inlet', '68.525[mol/s]', 'Inlet concentration, N2');
model.param.set('F_O2_inlet', '7.625[mol/s]', 'Inlet concentration, O2');
model.param.set('T0', '653[K]', 'Initial temperature');
model.param.set('kappa_m', '1e-11[m^2]', 'Permeability in filter walls');
model.param.set('kappa_s', '1e-13[m^2]', 'Permeability in soot layer');
model.param.set('Tin', '550[K]', 'Initial temperature in filter');
model.param.set('poro', '0.5', 'Porosity');
model.param.set('paco', '5e-4[kg/m^3]', 'Particle density in flow');
model.param.set('Mc', '12e-3[kg/mol]', 'Molar mass, soot (carbon)');
model.param.set('dHsoot', '5e-5[m]', 'Initial soot layer thickness');
model.param.set('Cp_s', '1510[J/kg/K]', 'Mixture heat capacity, soot');
model.param.set('Cp_m', '1120[J/kg/K]', 'Mixture heat capacity, filter walls');
model.param.set('k_s', '2.1[W/m/K]', 'Mixture thermal conductivity, soot layer');
model.param.set('k_m', '0.85[W/m/K]', 'Mixture thermal conductivity, filter walls');
model.param.set('rho_s', '1920[kg/m^3]', 'Soot layer density');
model.param.set('rho_m', '1400[kg/m^3]', 'Mixture density, filter walls');

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').set('v1', 'v_inlet+ku*re.Vr');
model.variable('var1').descr('v1', 'Volumetric flow field in tubular reactor');

model.physics('re').prop('reactor').set('reactor', 'plugflow');
model.physics('re').prop('energybalance').set('T', 'T0');
model.physics('re').prop('mixture').set('psource', 'idealGas');
model.physics('re').prop('calcTransport').set('calcTransport', true);
model.physics('re').prop('reactor').set('vplug', 'v1');
model.physics('re').create('rch1', 'ReactionChem', -1);
model.physics('re').feature('rch1').set('formula', 'C(s)+O2=>CO2');
model.physics('re').feature('rch1').set('useArrhenius', true);
model.physics('re').feature('rch1').set('Af', '1e13[m/s]*Sa');
model.physics('re').feature('rch1').set('Ef', '165e3[J/mol]');
model.physics('re').feature('rch1').set('ReactionExpression', 'UserDefined');
model.physics('re').feature('rch1').set('r', 're.kf_1*re.c_O2');
model.physics('re').feature('rch1').set('bulkFwdOrder', 1);
model.physics('re').create('rch2', 'ReactionChem', -1);
model.physics('re').feature('rch2').set('formula', 'C(s)+0.5O2=>CO');
model.physics('re').feature('rch2').set('useArrhenius', true);
model.physics('re').feature('rch2').set('Af', '5.5e10[m/s]*Sa');
model.physics('re').feature('rch2').set('Ef', '150e3[J/mol]');
model.physics('re').feature('rch2').set('r', 're.kf_2*re.c_O2');
model.physics('re').feature('rch2').set('bulkFwdOrder', 1);
model.physics('re').create('rch3', 'ReactionChem', -1);
model.physics('re').feature('rch3').set('formula', 'C(s)+4CeO2(s)=>2Ce2O3(s)+CO2');
model.physics('re').feature('rch3').set('useArrhenius', true);
model.physics('re').feature('rch3').set('Af', '4.5e11[m/s]*Sa');
model.physics('re').feature('rch3').set('Ef', '120e3[J/mol]');
model.physics('re').feature('rch3').set('ReactionExpression', 'UserDefined');
model.physics('re').feature('rch3').set('r', 're.kf_3*re.c_CeO2_solid');
model.physics('re').feature('rch3').set('bulkFwdOrder', 1);
model.physics('re').create('rch4', 'ReactionChem', -1);
model.physics('re').feature('rch4').set('formula', 'C(s)+2CeO2(s)=>Ce2O3(s)+CO');
model.physics('re').feature('rch4').set('useArrhenius', true);
model.physics('re').feature('rch4').set('Af', '4e8[m/s]*Sa');
model.physics('re').feature('rch4').set('Ef', '80e3[J/mol]');
model.physics('re').feature('rch4').set('ReactionExpression', 'UserDefined');
model.physics('re').feature('rch4').set('r', 're.kf_4*re.c_CeO2_solid');
model.physics('re').feature('rch4').set('bulkFwdOrder', 1);
model.physics('re').create('rch5', 'ReactionChem', -1);
model.physics('re').feature('rch5').set('formula', 'Ce2O3(s)+0.5O2=>2CeO2(s)');
model.physics('re').feature('rch5').set('useArrhenius', true);
model.physics('re').feature('rch5').set('Af', '1e12[m^4/(mol*s)]*Sa');
model.physics('re').feature('rch5').set('Ef', '80e3[J/mol]');
model.physics('re').feature('rch5').set('r', 're.kf_5*re.c_O2*re.c_Ce2O3_solid');
model.physics('re').feature('rch5').set('bulkFwdOrder', 2);
model.physics('re').feature('C_solid').set('cLock', true);
model.physics('re').create('spec1', 'SpeciesChem', -1);
model.physics('re').feature('spec1').set('specName', 'N2');
model.physics('re').feature('inits1').setIndex('F0', 'C_inlet*v_inlet', 0, 0);
model.physics('re').feature('inits1').setIndex('F0', 'F_CO_inlet', 1, 0);
model.physics('re').feature('inits1').setIndex('F0', 'F_CO2_inlet', 2, 0);
model.physics('re').feature('inits1').setIndex('F0', 'Ce2O3_inlet*v_inlet', 3, 0);
model.physics('re').feature('inits1').setIndex('F0', 'CeO2_inlet*v_inlet', 4, 0);
model.physics('re').feature('inits1').setIndex('F0', 'F_N2_inlet', 5, 0);
model.physics('re').feature('inits1').setIndex('F0', 'F_O2_inlet', 6, 0);
model.physics('re').create('add1', 'AdditionalSourceFeature', -1);
model.physics('re').feature('add1').setIndex('AddR', '-uf/H*re.c_CO', 1, 0);
model.physics('re').feature('add1').setIndex('AddR', '-uf/H*re.c_CO2', 2, 0);
model.physics('re').feature('add1').setIndex('AddR', '-uf/H*re.c_Ce2O3_solid', 3, 0);
model.physics('re').feature('add1').setIndex('AddR', '-uf/H*re.c_CeO2_solid', 4, 0);
model.physics('re').feature('add1').setIndex('AddR', '-uf/H*re.c_N2', 5, 0);
model.physics('re').feature('add1').setIndex('AddR', '-uf/H*re.c_O2', 6, 0);

model.study('std1').feature('spf').set('tlist', 0.149);
model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'L', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);
model.study('std1').feature('param').setIndex('pname', 'L', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);
model.study('std1').feature('param').setIndex('pname', 'T0', 0);
model.study('std1').feature('param').setIndex('plistarr', '653 703', 0);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'spf');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'spf');
model.sol('sol1').create('pf1', 'Plugflow');
model.sol('sol1').feature('pf1').set('tlist', '0.149');
model.sol('sol1').feature('pf1').set('plot', 'off');
model.sol('sol1').feature('pf1').set('plotgroup', 'Default');
model.sol('sol1').feature('pf1').set('plotfreq', 'tout');
model.sol('sol1').feature('pf1').set('probesel', 'all');
model.sol('sol1').feature('pf1').set('probes', {});
model.sol('sol1').feature('pf1').set('probefreq', 'tsteps');
model.sol('sol1').feature('pf1').set('tout', 'tsteps');
model.sol('sol1').feature('pf1').set('rtol', 1.0E-5);
model.sol('sol1').feature('pf1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('pf1').set('reacf', true);
model.sol('sol1').feature('pf1').set('storeudot', true);
model.sol('sol1').feature('pf1').set('endtimeinterpolation', true);
model.sol('sol1').feature('pf1').set('consistent', 'off');
model.sol('sol1').feature('pf1').set('control', 'spf');
model.sol('sol1').feature('pf1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('pf1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('pf1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('pf1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('pf1').feature.remove('fcDef');
model.sol('sol1').attach('std1');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'T0'});
model.batch('p1').set('plistarr', {'653 703'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol.create('sol2');
model.sol('sol2').study('std1');
model.sol('sol2').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').run('compute');

model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').set('data', 'dset2');
model.result('pg1').create('glob1', 'Global');
model.result('pg1').feature('glob1').set('expr', {'re.F_O2' 're.F_CO2' 're.F_CO' 're.F_CeO2_solid' 're.F_Ce2O3_solid' 're.F_N2'});
model.result('pg1').feature('glob1').set('descr', {'Molar flow rate' 'Molar flow rate' 'Molar flow rate' 'Molar flow rate' 'Molar flow rate' 'Molar flow rate'});
model.result('pg1').feature('glob1').set('unit', {'' '' '' '' '' ''});
model.result('pg1').feature('glob1').set('expr', {'re.F_O2' 're.F_CO2' 're.F_CO' 're.F_CeO2_solid' 're.F_Ce2O3_solid' 're.F_N2'});
model.result('pg1').feature('glob1').set('descr', {'Molar flow rate' 'Molar flow rate' 'Molar flow rate' 'Molar flow rate' 'Molar flow rate' 'Molar flow rate'});
model.result('pg1').set('xlabel', 'Reactor volume (m<sup>3</sup>)');
model.result('pg1').label('Molar Flow Rate (re)');
model.result('pg1').feature('glob1').set('xdatasolnumtype', 'level1');
model.result('pg1').run;
model.result('pg1').label('Concentrations plug flow model');
model.result('pg1').set('titletype', 'none');
model.result('pg1').set('xlabel', 'L (m)');
model.result('pg1').run;
model.result('pg1').feature('glob1').set('data', 'dset2');
model.result('pg1').feature('glob1').setIndex('expr', 're.c_O2', 0);
model.result('pg1').feature('glob1').setIndex('unit', 'mol/m^3', 0);
model.result('pg1').feature('glob1').setIndex('descr', 'Concentration', 0);
model.result('pg1').feature('glob1').setIndex('expr', 're.c_CO2', 1);
model.result('pg1').feature('glob1').setIndex('unit', 'mol/m^3', 1);
model.result('pg1').feature('glob1').setIndex('descr', 'Concentration', 1);
model.result('pg1').feature('glob1').setIndex('expr', 're.c_CO', 2);
model.result('pg1').feature('glob1').setIndex('unit', 'mol/m^3', 2);
model.result('pg1').feature('glob1').setIndex('descr', 'Concentration', 2);
model.result('pg1').feature('glob1').setIndex('expr', 're.c_CeO2_solid', 3);
model.result('pg1').feature('glob1').setIndex('unit', 'mol/m^3', 3);
model.result('pg1').feature('glob1').setIndex('descr', 'Concentration', 3);
model.result('pg1').feature('glob1').setIndex('expr', 're.c_Ce2O3_solid', 4);
model.result('pg1').feature('glob1').setIndex('unit', 'mol/m^3', 4);
model.result('pg1').feature('glob1').setIndex('descr', 'Concentration', 4);
model.result('pg1').feature('glob1').remove('unit', 4);
model.result('pg1').feature('glob1').remove('descr', 4);
model.result('pg1').feature('glob1').remove('expr', [4]);
model.result('pg1').feature('glob1').remove('unit', 4);
model.result('pg1').feature('glob1').remove('descr', 4);
model.result('pg1').feature('glob1').remove('expr', [4]);
model.result('pg1').feature('glob1').set('linewidth', 2);
model.result('pg1').feature('glob1').set('legendmethod', 'manual');
model.result('pg1').feature('glob1').setIndex('legends', 'O<sub>2</sub>', 0);
model.result('pg1').feature('glob1').setIndex('legends', 'CO<sub>2</sub>', 1);
model.result('pg1').feature('glob1').setIndex('legends', 'CO', 2);
model.result('pg1').feature('glob1').setIndex('legends', 'CeO<sub>2</sub>', 3);
model.result('pg1').feature('glob1').setIndex('legends', 'Ce<sub>2</sub>O<sub>3</sub>', 4);
model.result('pg1').feature('glob1').setIndex('looplevelinput', 'first', 1);
model.result('pg1').run;
model.result('pg1').feature('glob1').setIndex('looplevelinput', 'last', 1);
model.result('pg1').run;
model.result('pg1').run;
model.result.duplicate('pg2', 'pg1');
model.result('pg2').run;
model.result('pg2').label('Rate comparison plug flow model');
model.result('pg2').set('ylabelactive', true);
model.result('pg2').set('ylabel', 'Rate ratio comparison (-)');
model.result('pg2').run;
model.result('pg2').feature('glob1').setIndex('looplevelinput', 'first', 1);
model.result('pg2').feature('glob1').set('expr', {'re.r_1'});
model.result('pg2').feature('glob1').set('descr', {'Reaction rate'});
model.result('pg2').feature('glob1').set('unit', {'mol/(m^3*s)'});
model.result('pg2').feature('glob1').setIndex('expr', 're.r_1/re.r_3', 0);
model.result('pg2').feature('glob1').setIndex('unit', 1, 0);
model.result('pg2').feature('glob1').setIndex('descr', '', 0);
model.result('pg2').feature('glob1').setIndex('expr', 're.r_2/re.r_4', 1);
model.result('pg2').feature('glob1').setIndex('unit', 1, 1);
model.result('pg2').feature('glob1').setIndex('descr', '', 1);
model.result('pg2').feature('glob1').setIndex('legends', 'r_1/r_3 at 653 K', 0);
model.result('pg2').feature('glob1').setIndex('legends', 'r_2/r_4 at 653 K', 1);
model.result('pg2').feature.duplicate('glob2', 'glob1');
model.result('pg2').run;
model.result('pg2').feature('glob2').setIndex('looplevelinput', 'last', 1);
model.result('pg2').feature('glob2').setIndex('legends', 'r_1/r_3 at 703 K', 0);
model.result('pg2').feature('glob2').setIndex('legends', 'r_2/r_4 at 703 K', 1);
model.result('pg2').run;

model.physics('re').create('sync1', 'ReactionToMph', -1);
model.physics('re').feature('sync1').set('geomToUse', '2D');
model.physics('re').feature('sync1').set('energybalance', 'HeatTransferInFluids');
model.physics('re').feature('sync1').set('momentumbalance', 'FreeAndPorousMediaFlow');
model.physics('re').prop('synchronize').set('synchronize', '1');

model.modelNode.create('comp2', true);

model.physics('re').feature('sync1').set('model', {'comp2'});

model.geom.create('geom1', 2);
model.geom('geom1').model('comp2');
model.geom('geom1').axisymmetric(false);
model.geom('geom1').label('Geometry 1(2D)');

model.physics('re').feature('sync1').set('genom', {'geom1'});

model.mesh.create('mesh1', 'geom1');

model.study.create('std2');

model.physics('re').feature('sync1').set('studyname', {'std2'});

model.study('std2').create('stat', 'Stationary');

model.physics.create('chem1', 'Chemistry', 'geom1');
model.physics('chem1').model('comp2');
model.physics('re').feature('sync1').set('Chemistry', {'chem1'});
model.physics.create('tds', 'DilutedSpecies', 'geom1');
model.physics('tds').model('comp2');
model.physics('chem1').prop('TPFeatureInput').set('T_src', 'userdef');
model.physics('chem1').prop('TPFeatureInput').set('T', 'T0');
model.physics('chem1').prop('mixture').set('mixture', 'gas');
model.physics('chem1').prop('mixture').set('gasDensitySel', 'Automatic');
model.physics('chem1').prop('Activity').set('useActivity', '0');
model.physics('chem1').prop('chemkin').set('chemkin', '0');
model.physics('chem1').prop('ChemistryCommonProperty').set('VolumetricConcentrationGlobalActivityStandardState', '1[mol/m^3]');
model.physics('chem1').prop('ChemistryCommonProperty').set('SurfaceSpeciesConcentrationType', 'SurfaceConcentration');
model.physics('chem1').prop('ChemistryCommonProperty').set('SurfaceGlobalActivityStandardState', '1[mol/m^2]');
model.physics('chem1').prop('ChemistryCommonProperty').set('SpeciesrateUserDefinedList', {'C_solid'});
model.physics('chem1').prop('ChemistryCommonProperty').set('AdditionalSourceFeature', '1');
model.physics('chem1').prop('ActiveSpecies').set('SumActiveSpecies', '7');
model.physics('chem1').prop('ActiveSpecies').set('NumActiveVolumeSpecies', '7');
model.physics('chem1').prop('ActiveSpecies').set('NumActiveSurfaceSpecies', '0');
model.physics('chem1').prop('ActiveSpecies').set('NumActiveSurfaceSpeciesVariable', '0');
model.physics('chem1').prop('ActiveSpecies').set('surface', '0');
model.physics('chem1').prop('solventIsSet').set('solventIsSet', '0');
model.physics('chem1').create('rch1', 'ReactionChem');
model.physics('chem1').feature('rch1').set('rSequenceNo', '1');
model.physics('chem1').feature('rch1').set('formula', 'C(s) + O2 => CO2');
model.physics('chem1').feature('rch1').set('updatechem', '0');
model.physics('chem1').feature('rch1').set('useArrhenius', '1');
model.physics('chem1').feature('rch1').set('ReactionExpression', 'UserDefined');
model.physics('chem1').feature('rch1').set('r', 'chem.kf_1*chem.c_O2');
model.physics('chem1').feature('rch1').set('kf', '1');
model.physics('chem1').feature('rch1').set('Af', '1e13[m/s]*Sa');
model.physics('chem1').feature('rch1').set('nf', '0');
model.physics('chem1').feature('rch1').set('Ef', '165e3[J/mol]');
model.physics('chem1').feature('rch1').set('bulkFwdOrder', '1');
model.physics('chem1').feature('rch1').set('surfFwdOrder', '0');
model.physics('chem1').feature('rch1').label('1: C(s) + O2 => CO2');
model.physics('chem1').feature('rch1').set('rClass', 'volumetric');
model.physics('chem1').create('rch2', 'ReactionChem');
model.physics('chem1').feature('rch2').set('rSequenceNo', '2');
model.physics('chem1').feature('rch2').set('formula', 'C(s) + 0.5 O2 => CO');
model.physics('chem1').feature('rch2').set('updatechem', '0');
model.physics('chem1').feature('rch2').set('useArrhenius', '1');
model.physics('chem1').feature('rch2').set('ReactionExpression', 'UserDefined');
model.physics('chem1').feature('rch2').set('r', 'chem.kf_2*chem.c_O2');
model.physics('chem1').feature('rch2').set('kf', '1');
model.physics('chem1').feature('rch2').set('Af', '5.5e10[m/s]*Sa');
model.physics('chem1').feature('rch2').set('nf', '0');
model.physics('chem1').feature('rch2').set('Ef', '150e3[J/mol]');
model.physics('chem1').feature('rch2').set('bulkFwdOrder', '1');
model.physics('chem1').feature('rch2').set('surfFwdOrder', '0');
model.physics('chem1').feature('rch2').label('2: C(s) + 0.5 O2 => CO');
model.physics('chem1').feature('rch2').set('rClass', 'volumetric');
model.physics('chem1').create('rch3', 'ReactionChem');
model.physics('chem1').feature('rch3').set('rSequenceNo', '3');
model.physics('chem1').feature('rch3').set('formula', 'C(s) + 4 CeO2(s) => 2 Ce2O3(s) + CO2');
model.physics('chem1').feature('rch3').set('updatechem', '0');
model.physics('chem1').feature('rch3').set('useArrhenius', '1');
model.physics('chem1').feature('rch3').set('ReactionExpression', 'UserDefined');
model.physics('chem1').feature('rch3').set('r', 'chem.kf_3*chem.c_CeO2_solid');
model.physics('chem1').feature('rch3').set('kf', '1');
model.physics('chem1').feature('rch3').set('Af', '4.5e11[m/s]*Sa');
model.physics('chem1').feature('rch3').set('nf', '0');
model.physics('chem1').feature('rch3').set('Ef', '120e3[J/mol]');
model.physics('chem1').feature('rch3').set('bulkFwdOrder', '1');
model.physics('chem1').feature('rch3').set('surfFwdOrder', '0');
model.physics('chem1').feature('rch3').label('3: C(s) + 4 CeO2(s) => 2 Ce2O3(s) + CO2');
model.physics('chem1').feature('rch3').set('rClass', 'volumetric');
model.physics('chem1').create('rch4', 'ReactionChem');
model.physics('chem1').feature('rch4').set('rSequenceNo', '4');
model.physics('chem1').feature('rch4').set('formula', 'C(s) + 2 CeO2(s) => Ce2O3(s) + CO');
model.physics('chem1').feature('rch4').set('updatechem', '0');
model.physics('chem1').feature('rch4').set('useArrhenius', '1');
model.physics('chem1').feature('rch4').set('ReactionExpression', 'UserDefined');
model.physics('chem1').feature('rch4').set('r', 'chem.kf_4*chem.c_CeO2_solid');
model.physics('chem1').feature('rch4').set('kf', '1');
model.physics('chem1').feature('rch4').set('Af', '4e8[m/s]*Sa');
model.physics('chem1').feature('rch4').set('nf', '0');
model.physics('chem1').feature('rch4').set('Ef', '80e3[J/mol]');
model.physics('chem1').feature('rch4').set('bulkFwdOrder', '1');
model.physics('chem1').feature('rch4').set('surfFwdOrder', '0');
model.physics('chem1').feature('rch4').label('4: C(s) + 2 CeO2(s) => Ce2O3(s) + CO');
model.physics('chem1').feature('rch4').set('rClass', 'volumetric');
model.physics('chem1').create('rch5', 'ReactionChem');
model.physics('chem1').feature('rch5').set('rSequenceNo', '5');
model.physics('chem1').feature('rch5').set('formula', 'Ce2O3(s) + 0.5 O2 => 2 CeO2(s)');
model.physics('chem1').feature('rch5').set('updatechem', '0');
model.physics('chem1').feature('rch5').set('useArrhenius', '1');
model.physics('chem1').feature('rch5').set('ReactionExpression', 'UserDefined');
model.physics('chem1').feature('rch5').set('r', 'chem.kf_5*chem.c_O2*chem.c_Ce2O3_solid');
model.physics('chem1').feature('rch5').set('kf', '1');
model.physics('chem1').feature('rch5').set('Af', '1e12[m^4/(mol*s)]*Sa');
model.physics('chem1').feature('rch5').set('nf', '0');
model.physics('chem1').feature('rch5').set('Ef', '80e3[J/mol]');
model.physics('chem1').feature('rch5').set('bulkFwdOrder', '2');
model.physics('chem1').feature('rch5').set('surfFwdOrder', '0');
model.physics('chem1').feature('rch5').label('5: Ce2O3(s) + 0.5 O2 => 2 CeO2(s)');
model.physics('chem1').feature('rch5').set('rClass', 'volumetric');
model.physics('chem1').feature('C_solid').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('C_solid').set('sisDef', '1');
model.physics('chem1').feature('C_solid').set('specLabel', 'C(s)');
model.physics('chem1').feature('C_solid').set('speciesNameInput', 'C(s)');
model.physics('chem1').feature('C_solid').set('specName', 'C(s)');
model.physics('chem1').feature('C_solid').set('enableChemicalFormulaCheckbox', '1');
model.physics('chem1').feature('C_solid').set('chemicalFormula', 'C(s)');
model.physics('chem1').feature('C_solid').set('sType', 'volumetric');
model.physics('chem1').feature('C_solid').set('M', '12.0106[g/mol]');
model.physics('chem1').feature('C_solid').set('z', '0');
model.physics('chem1').feature('C_solid').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('C_solid').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('C_solid').set('mu', '0[C*m]');
model.physics('chem1').feature('C_solid').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('C_solid').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('C_solid').set('ActivityCoefficient', '1');
model.physics('chem1').feature('C_solid').set('cLock', '1');
model.physics('chem1').feature('C_solid').set('Dependent', '0');
model.physics('chem1').feature('C_solid').set('dependent', '0');
model.physics('chem1').feature('C_solid').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('C_solid').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('C_solid').set('Tlo', '300[K]');
model.physics('chem1').feature('C_solid').set('Tmid', '1000[K]');
model.physics('chem1').feature('C_solid').set('Thi', '5000[K]');
model.physics('chem1').feature('C_solid').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('C_solid').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('C_solid').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('C_solid').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('C_solid').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('C_solid').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('C_solid').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('C_solid').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('C_solid').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('C_solid').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('C_solid').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('C_solid').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('C_solid').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('C_solid').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').feature('O2').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('O2').set('sisDef', '1');
model.physics('chem1').feature('O2').set('specLabel', 'O2');
model.physics('chem1').feature('O2').set('speciesNameInput', 'O2');
model.physics('chem1').feature('O2').set('specName', 'O2');
model.physics('chem1').feature('O2').set('enableChemicalFormulaCheckbox', '1');
model.physics('chem1').feature('O2').set('chemicalFormula', 'O2');
model.physics('chem1').feature('O2').set('sType', 'volumetric');
model.physics('chem1').feature('O2').set('M', '31.9988[g/mol]');
model.physics('chem1').feature('O2').set('z', '0');
model.physics('chem1').feature('O2').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('O2').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('O2').set('mu', '0[C*m]');
model.physics('chem1').feature('O2').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('O2').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('O2').set('ActivityCoefficient', '1');
model.physics('chem1').feature('O2').set('cLock', '0');
model.physics('chem1').feature('O2').set('Dependent', '0');
model.physics('chem1').feature('O2').set('dependent', '0');
model.physics('chem1').feature('O2').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('O2').set('AdditionalSource', '1');
model.physics('chem1').feature('O2').set('AddR', '-uf*chem.c_O2/H');
model.physics('chem1').feature('O2').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('O2').set('Tlo', '300[K]');
model.physics('chem1').feature('O2').set('Tmid', '1000[K]');
model.physics('chem1').feature('O2').set('Thi', '5000[K]');
model.physics('chem1').feature('O2').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('O2').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('O2').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('O2').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('O2').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('O2').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('O2').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('O2').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('O2').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('O2').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('O2').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('O2').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('O2').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('O2').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').feature('CO2').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('CO2').set('sisDef', '1');
model.physics('chem1').feature('CO2').set('specLabel', 'CO2');
model.physics('chem1').feature('CO2').set('speciesNameInput', 'CO2');
model.physics('chem1').feature('CO2').set('specName', 'CO2');
model.physics('chem1').feature('CO2').set('enableChemicalFormulaCheckbox', '1');
model.physics('chem1').feature('CO2').set('chemicalFormula', 'CO2');
model.physics('chem1').feature('CO2').set('sType', 'volumetric');
model.physics('chem1').feature('CO2').set('M', '44.0094[g/mol]');
model.physics('chem1').feature('CO2').set('z', '0');
model.physics('chem1').feature('CO2').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('CO2').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('CO2').set('mu', '0[C*m]');
model.physics('chem1').feature('CO2').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('CO2').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('CO2').set('ActivityCoefficient', '1');
model.physics('chem1').feature('CO2').set('cLock', '0');
model.physics('chem1').feature('CO2').set('Dependent', '0');
model.physics('chem1').feature('CO2').set('dependent', '0');
model.physics('chem1').feature('CO2').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('CO2').set('AdditionalSource', '1');
model.physics('chem1').feature('CO2').set('AddR', '-uf*chem.c_CO2/H');
model.physics('chem1').feature('CO2').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('CO2').set('Tlo', '300[K]');
model.physics('chem1').feature('CO2').set('Tmid', '1000[K]');
model.physics('chem1').feature('CO2').set('Thi', '5000[K]');
model.physics('chem1').feature('CO2').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('CO2').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('CO2').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('CO2').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('CO2').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('CO2').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('CO2').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('CO2').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('CO2').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('CO2').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('CO2').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('CO2').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('CO2').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('CO2').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').feature('CO').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('CO').set('sisDef', '1');
model.physics('chem1').feature('CO').set('specLabel', 'CO');
model.physics('chem1').feature('CO').set('speciesNameInput', 'CO');
model.physics('chem1').feature('CO').set('specName', 'CO');
model.physics('chem1').feature('CO').set('enableChemicalFormulaCheckbox', '1');
model.physics('chem1').feature('CO').set('chemicalFormula', 'CO');
model.physics('chem1').feature('CO').set('sType', 'volumetric');
model.physics('chem1').feature('CO').set('M', '28.01[g/mol]');
model.physics('chem1').feature('CO').set('z', '0');
model.physics('chem1').feature('CO').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('CO').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('CO').set('mu', '0[C*m]');
model.physics('chem1').feature('CO').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('CO').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('CO').set('ActivityCoefficient', '1');
model.physics('chem1').feature('CO').set('cLock', '0');
model.physics('chem1').feature('CO').set('Dependent', '0');
model.physics('chem1').feature('CO').set('dependent', '0');
model.physics('chem1').feature('CO').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('CO').set('AdditionalSource', '1');
model.physics('chem1').feature('CO').set('AddR', '-uf*chem.c_CO/H');
model.physics('chem1').feature('CO').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('CO').set('Tlo', '300[K]');
model.physics('chem1').feature('CO').set('Tmid', '1000[K]');
model.physics('chem1').feature('CO').set('Thi', '5000[K]');
model.physics('chem1').feature('CO').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('CO').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('CO').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('CO').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('CO').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('CO').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('CO').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('CO').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('CO').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('CO').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('CO').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('CO').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('CO').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('CO').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').feature('CeO2_solid').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('CeO2_solid').set('sisDef', '1');
model.physics('chem1').feature('CeO2_solid').set('specLabel', 'CeO2(s)');
model.physics('chem1').feature('CeO2_solid').set('speciesNameInput', 'CeO2(s)');
model.physics('chem1').feature('CeO2_solid').set('specName', 'CeO2(s)');
model.physics('chem1').feature('CeO2_solid').set('enableChemicalFormulaCheckbox', '1');
model.physics('chem1').feature('CeO2_solid').set('chemicalFormula', 'CeO2(s)');
model.physics('chem1').feature('CeO2_solid').set('sType', 'volumetric');
model.physics('chem1').feature('CeO2_solid').set('M', '172.1148[g/mol]');
model.physics('chem1').feature('CeO2_solid').set('z', '0');
model.physics('chem1').feature('CeO2_solid').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('CeO2_solid').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('CeO2_solid').set('mu', '0[C*m]');
model.physics('chem1').feature('CeO2_solid').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('CeO2_solid').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('CeO2_solid').set('ActivityCoefficient', '1');
model.physics('chem1').feature('CeO2_solid').set('cLock', '0');
model.physics('chem1').feature('CeO2_solid').set('Dependent', '0');
model.physics('chem1').feature('CeO2_solid').set('dependent', '0');
model.physics('chem1').feature('CeO2_solid').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('CeO2_solid').set('AdditionalSource', '1');
model.physics('chem1').feature('CeO2_solid').set('AddR', '-uf*chem.c_CeO2_solid/H');
model.physics('chem1').feature('CeO2_solid').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('CeO2_solid').set('Tlo', '300[K]');
model.physics('chem1').feature('CeO2_solid').set('Tmid', '1000[K]');
model.physics('chem1').feature('CeO2_solid').set('Thi', '5000[K]');
model.physics('chem1').feature('CeO2_solid').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('CeO2_solid').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('CeO2_solid').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('CeO2_solid').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('CeO2_solid').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('CeO2_solid').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('CeO2_solid').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('CeO2_solid').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('CeO2_solid').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('CeO2_solid').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('CeO2_solid').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('CeO2_solid').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('CeO2_solid').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('CeO2_solid').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').feature('Ce2O3_solid').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('Ce2O3_solid').set('sisDef', '1');
model.physics('chem1').feature('Ce2O3_solid').set('specLabel', 'Ce2O3(s)');
model.physics('chem1').feature('Ce2O3_solid').set('speciesNameInput', 'Ce2O3(s)');
model.physics('chem1').feature('Ce2O3_solid').set('specName', 'Ce2O3(s)');
model.physics('chem1').feature('Ce2O3_solid').set('enableChemicalFormulaCheckbox', '1');
model.physics('chem1').feature('Ce2O3_solid').set('chemicalFormula', 'Ce2O3(s)');
model.physics('chem1').feature('Ce2O3_solid').set('sType', 'volumetric');
model.physics('chem1').feature('Ce2O3_solid').set('M', '328.2302[g/mol]');
model.physics('chem1').feature('Ce2O3_solid').set('z', '0');
model.physics('chem1').feature('Ce2O3_solid').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('Ce2O3_solid').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('Ce2O3_solid').set('mu', '0[C*m]');
model.physics('chem1').feature('Ce2O3_solid').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('Ce2O3_solid').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('Ce2O3_solid').set('ActivityCoefficient', '1');
model.physics('chem1').feature('Ce2O3_solid').set('cLock', '0');
model.physics('chem1').feature('Ce2O3_solid').set('Dependent', '0');
model.physics('chem1').feature('Ce2O3_solid').set('dependent', '0');
model.physics('chem1').feature('Ce2O3_solid').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('Ce2O3_solid').set('AdditionalSource', '1');
model.physics('chem1').feature('Ce2O3_solid').set('AddR', '-uf*chem.c_Ce2O3_solid/H');
model.physics('chem1').feature('Ce2O3_solid').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('Ce2O3_solid').set('Tlo', '300[K]');
model.physics('chem1').feature('Ce2O3_solid').set('Tmid', '1000[K]');
model.physics('chem1').feature('Ce2O3_solid').set('Thi', '5000[K]');
model.physics('chem1').feature('Ce2O3_solid').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('Ce2O3_solid').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('Ce2O3_solid').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('Ce2O3_solid').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('Ce2O3_solid').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('Ce2O3_solid').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('Ce2O3_solid').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('Ce2O3_solid').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('Ce2O3_solid').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('Ce2O3_solid').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('Ce2O3_solid').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('Ce2O3_solid').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('Ce2O3_solid').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('Ce2O3_solid').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').create('N2', 'SpeciesChem');
model.physics('chem1').feature('N2').set('SpeciesSource', 'FreeSpecies');
model.physics('chem1').feature('N2').set('sisDef', '1');
model.physics('chem1').feature('N2').set('specLabel', 'N2');
model.physics('chem1').feature('N2').set('speciesNameInput', 'N2');
model.physics('chem1').feature('N2').set('specName', 'N2');
model.physics('chem1').feature('N2').set('enableChemicalFormulaCheckbox', '1');
model.physics('chem1').feature('N2').set('chemicalFormula', 'N2');
model.physics('chem1').feature('N2').label('Species: N2');
model.physics('chem1').feature('N2').active(true);
model.physics('chem1').feature('N2').set('sType', 'volumetric');
model.physics('chem1').feature('N2').set('M', '28.0137[g/mol]');
model.physics('chem1').feature('N2').set('z', '0');
model.physics('chem1').feature('N2').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('N2').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('N2').set('mu', '0[C*m]');
model.physics('chem1').feature('N2').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('N2').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('N2').set('ActivityCoefficient', '1');
model.physics('chem1').feature('N2').set('cLock', '0');
model.physics('chem1').feature('N2').set('Dependent', '0');
model.physics('chem1').feature('N2').set('dependent', '0');
model.physics('chem1').feature('N2').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('N2').set('AdditionalSource', '1');
model.physics('chem1').feature('N2').set('AddR', '-uf*chem.c_N2/H');
model.physics('chem1').feature('N2').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('N2').set('Tlo', '300[K]');
model.physics('chem1').feature('N2').set('Tmid', '1000[K]');
model.physics('chem1').feature('N2').set('Thi', '5000[K]');
model.physics('chem1').feature('N2').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('N2').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('N2').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('N2').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('N2').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('N2').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('N2').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('N2').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('N2').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('N2').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('N2').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('N2').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('N2').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('N2').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').prop('simpropChem').set('rSequenceNo', '5');
model.physics('chem1').prop('simpropChem').set('sSequenceNo', '7');
model.physics('chem1').prop('mixture').set('hasPropertyPackage', '0');
model.physics('chem1').prop('mixture').set('PropertyPackage', '');
model.physics('chem1').prop('mixture').set('Thermodynamics', '0');
model.physics('tds').field('concentration').component({'cCO' 'cCO2' 'cN2' 'cO2' 'cCe2O3_solid' 'cCeO2_solid'});
model.physics('tds').feature('init1').set('initc', {'F_CO_inlet/v1' 'F_CO2_inlet/v1' 'F_N2_inlet/v1' 'F_O2_inlet/v1' 'Ce2O3_inlet*v_inlet/v1' 'CeO2_inlet*v_inlet/v1'});
model.physics('tds').feature.create('reac1', 'Reactions');
model.physics('tds').feature('reac1').selection.all;
model.physics('tds').feature('reac1').set('ReactingVolumeType', 'TotalVolume');
model.physics('tds').feature.create('in1', 'Inflow');
model.physics('tds').feature('in1').setIndex('c0', 'F_CO_inlet/v1', 0);
model.physics('tds').feature('in1').setIndex('c0', 'F_CO2_inlet/v1', 1);
model.physics('tds').feature('in1').setIndex('c0', 'F_N2_inlet/v1', 2);
model.physics('tds').feature('in1').setIndex('c0', 'F_O2_inlet/v1', 3);
model.physics('tds').feature('in1').setIndex('c0', 'Ce2O3_inlet*v_inlet/v1', 4);
model.physics('tds').feature('in1').setIndex('c0', 'CeO2_inlet*v_inlet/v1', 5);
model.physics('tds').feature.create('out1', 'Outflow');
model.physics('chem1').prop('ChemistryModelInputParameter').set('MassTransfer', 'tds');
model.physics('chem1').prop('ChemistryModelInputParameter').set('ConcentrationInput', {'cCO' 'cCO2' 'cN2' 'cO2'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('ConcentrationValue', {'Solved for' 'Solved for' 'Solved for' 'Solved for'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('uselog', {'cCO' 'cCO2' '1' 'cO2'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('SolidConcentration', {'C_inlet*v_inlet/v1' 'cCe2O3_solid' 'cCeO2_solid'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('csurf', {});
model.physics('chem1').prop('ChemistryModelInputParameter').set('AqueousSpeciesConcentration', {});
model.physics('tds').feature('sp1').set('z', {'0' '0' '0' '0' '0' '0'});
model.physics('tds').feature('cdm1').set('Dchem_cCO', '1e-5[m^2/s]');
model.physics('tds').feature('cdm1').set('D_cCO', '1e-5[m^2/s]');
model.physics('tds').feature('cdm1').set('Dchem_cCO2', '1e-5[m^2/s]');
model.physics('tds').feature('cdm1').set('D_cCO2', '1e-5[m^2/s]');
model.physics('tds').feature('cdm1').set('Dchem_cN2', '1e-5[m^2/s]');
model.physics('tds').feature('cdm1').set('D_cN2', '1e-5[m^2/s]');
model.physics('tds').feature('cdm1').set('Dchem_cO2', '1e-5[m^2/s]');
model.physics('tds').feature('cdm1').set('D_cO2', '1e-5[m^2/s]');
model.physics('tds').feature('cdm1').set('Dchem_cCe2O3_solid', '1e-5[m^2/s]');
model.physics('tds').feature('cdm1').set('D_cCe2O3_solid', '1e-5[m^2/s]');
model.physics('tds').feature('cdm1').set('Dchem_cCeO2_solid', '1e-5[m^2/s]');
model.physics('tds').feature('cdm1').set('D_cCeO2_solid', '1e-5[m^2/s]');
model.physics('tds').feature('reac1').setIndex('R_cCO_src', 'root.comp2.chem.R_CO', 0);
model.physics('tds').feature('reac1').setIndex('R_cCO2_src', 'root.comp2.chem.R_CO2', 0);
model.physics('tds').feature('reac1').setIndex('R_cN2_src', 'root.comp2.chem.R_N2', 0);
model.physics('tds').feature('reac1').setIndex('R_cO2_src', 'root.comp2.chem.R_O2', 0);
model.physics('tds').feature('reac1').setIndex('R_cCe2O3_solid_src', 'root.comp2.chem.R_Ce2O3_solid', 0);
model.physics('tds').feature('reac1').setIndex('R_cCeO2_solid_src', 'root.comp2.chem.R_CeO2_solid', 0);
model.physics.create('ht1', 'HeatTransferInFluids', 'geom1');
model.physics('ht1').model('comp2');
model.physics('ht1').feature.create('temp1', 'TemperatureBoundary');
model.physics('ht1').feature('temp1').set('T0', 'T0');
model.physics('ht1').feature.create('ofl1', 'ConvectiveOutflow');
model.physics('ht1').feature('init1').set('Tinit', '298.15[K]');
model.physics('ht1').feature.create('hs1', 'HeatSource');
model.physics('ht1').feature('hs1').selection.all;
model.physics('ht1').feature('hs1').set('Q0_src', 'root.comp2.chem.Qtot');
model.physics.create('fp1', 'FreeAndPorousMediaFlow', 'geom1');
model.physics('fp1').model('comp2');
model.physics('fp1').prop('PhysicalModelProperty').set('Compressibility', 'WeaklyCompressible');
model.physics('fp1').feature.create('inl1', 'InletBoundary');
model.physics('fp1').feature('inl1').set('BoundaryCondition', 'Velocity');
model.physics('fp1').feature('inl1').set('ComponentWise', 'NormalInflowVelocity');
model.physics('fp1').feature.create('out1', 'OutletBoundary');
model.physics('re').feature('sync1').set('geomToUse', 'geom1');
model.physics('re').feature('sync1').set('massbalance', 'tds');
model.physics('tds').feature('cdm1').set('u_src', 'root.comp2.u');
model.physics('tds').feature('cdm1').set('minput_pressure_src', 'root.comp2.fp.pA');
model.physics('tds').feature('cdm1').set('minput_temperature_src', 'root.comp2.T');
model.physics('re').feature('sync1').set('energybalance', 'ht1');
model.physics('ht1').feature('fluid1').set('u_src', 'root.comp2.u');
model.physics('chem1').prop('TPFeatureInput').set('T_src', 'root.comp2.T');
model.physics('ht1').feature('fluid1').set('minput_pressure_src', 'root.comp2.fp.pA');
model.physics('ht1').feature('fluid1').set('molarmass_mat', 'root.comp2.chem.M_C_solid');
model.physics('re').feature('sync1').set('momentumbalance', 'fp1');
model.physics('chem1').prop('TPFeatureInput').set('p_src', 'root.comp2.fp.pA');
model.physics('re').feature('sync1').set('genom', {'geom1'});
model.physics('re').feature('sync1').set('studyname', {'std2'});
model.physics('chem1').prop('StudyStep').set('StudyStep', 'std2/stat');
model.physics('chem1').feature('dcont1').set('StudyStep', 'std2/stat');
model.physics('chem1').feature('rch1').set('StudyStep', 'std2/stat');
model.physics('chem1').feature('C_solid').set('StudyStep', 'std2/stat');
model.physics('chem1').feature('O2').set('StudyStep', 'std2/stat');
model.physics('chem1').feature('CO2').set('StudyStep', 'std2/stat');
model.physics('chem1').feature('rch2').set('StudyStep', 'std2/stat');
model.physics('chem1').feature('CO').set('StudyStep', 'std2/stat');
model.physics('chem1').feature('rch3').set('StudyStep', 'std2/stat');
model.physics('chem1').feature('CeO2_solid').set('StudyStep', 'std2/stat');
model.physics('chem1').feature('Ce2O3_solid').set('StudyStep', 'std2/stat');
model.physics('chem1').feature('rch4').set('StudyStep', 'std2/stat');
model.physics('chem1').feature('rch5').set('StudyStep', 'std2/stat');
model.physics('chem1').feature('N2').set('StudyStep', 'std2/stat');
model.physics('tds').prop('StudyStep').set('StudyStep', 'std2/stat');
model.physics('tds').feature('sp1').set('StudyStep', 'std2/stat');
model.physics('tds').feature('cdm1').set('StudyStep', 'std2/stat');
model.physics('tds').feature('nflx1').set('StudyStep', 'std2/stat');
model.physics('tds').feature('init1').set('StudyStep', 'std2/stat');
model.physics('tds').feature('dcont1').set('StudyStep', 'std2/stat');
model.physics('tds').feature('reac1').set('StudyStep', 'std2/stat');
model.physics('tds').feature('in1').set('StudyStep', 'std2/stat');
model.physics('tds').feature('out1').set('StudyStep', 'std2/stat');
model.physics('ht1').prop('StudyStep').set('StudyStep', 'std2/stat');
model.physics('ht1').feature('fluid1').set('StudyStep', 'std2/stat');
model.physics('ht1').feature('init1').set('StudyStep', 'std2/stat');
model.physics('ht1').feature('ins1').set('StudyStep', 'std2/stat');
model.physics('ht1').feature('idi1').set('StudyStep', 'std2/stat');
model.physics('ht1').feature('ltneb1').set('StudyStep', 'std2/stat');
model.physics('ht1').feature('os1').set('StudyStep', 'std2/stat');
model.physics('ht1').feature('cib1').set('StudyStep', 'std2/stat');
model.physics('ht1').feature('dcont1').set('StudyStep', 'std2/stat');
model.physics('ht1').feature('temp1').set('StudyStep', 'std2/stat');
model.physics('ht1').feature('ofl1').set('StudyStep', 'std2/stat');
model.physics('ht1').feature('hs1').set('StudyStep', 'std2/stat');
model.physics('fp1').prop('StudyStep').set('StudyStep', 'std2/stat');
model.physics('fp1').feature('fp1').set('StudyStep', 'std2/stat');
model.physics('fp1').feature('init1').set('StudyStep', 'std2/stat');
model.physics('fp1').feature('wallbc1').set('StudyStep', 'std2/stat');
model.physics('fp1').feature('grav1').set('StudyStep', 'std2/stat');
model.physics('fp1').feature('dcont1').set('StudyStep', 'std2/stat');
model.physics('fp1').feature('inl1').set('StudyStep', 'std2/stat');
model.physics('fp1').feature('out1').set('StudyStep', 'std2/stat');

model.study('std1').feature('param').setSolveFor('/physics/chem1', false);
model.study('std1').feature('spf').setSolveFor('/physics/chem1', false);
model.study('std1').feature('param').setSolveFor('/physics/tds', false);
model.study('std1').feature('spf').setSolveFor('/physics/tds', false);
model.study('std1').feature('param').setSolveFor('/physics/ht1', false);
model.study('std1').feature('spf').setSolveFor('/physics/ht1', false);
model.study('std1').feature('param').setSolveFor('/physics/fp1', false);
model.study('std1').feature('spf').setSolveFor('/physics/fp1', false);
model.study('std2').feature('stat').setSolveFor('/physics/re', false);

model.geom('geom1').run;

model.multiphysics.create('nitf1', 'NonIsothermalFlow', 'geom1', 2);
model.multiphysics.create('rfd1', 'ReactingFlowDS', 'geom1', 2);

model.view('view1').axis.set('viewscaletype', 'automatic');

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', {'L+1[cm]' 'H'});
model.geom('geom1').run('r1');
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').set('size', {'L' 'Hf+dHs'});
model.geom('geom1').feature('r2').set('pos', {'0' 'H'});
model.geom('geom1').feature('r2').setIndex('layername', 'Layer 1', 0);
model.geom('geom1').feature('r2').setIndex('layer', 'Hf', 0);
model.geom('geom1').run('r2');
model.geom('geom1').create('r3', 'Rectangle');
model.geom('geom1').feature('r3').set('size', {'L' '0.5*dHs'});
model.geom('geom1').feature('r3').set('pos', {'0' 'H+Hf+dHs'});
model.geom('geom1').run('r3');
model.geom('geom1').create('mov1', 'Move');
model.geom('geom1').feature('mov1').selection('input').set({'r1'});
model.geom('geom1').feature('mov1').set('keep', true);
model.geom('geom1').feature('mov1').set('displx', '-1[cm]');
model.geom('geom1').feature('mov1').set('disply', 'H+Hf+1.5*dHs');
model.geom('geom1').run('fin');
model.geom('geom1').create('sel1', 'ExplicitSelection');
model.geom('geom1').feature('sel1').label('Inlet');
model.geom('geom1').feature('sel1').selection('selection').init(1);
model.geom('geom1').feature('sel1').selection('selection').set('fin', 1);
model.geom('geom1').run('sel1');
model.geom('geom1').create('sel2', 'ExplicitSelection');
model.geom('geom1').feature('sel2').label('Outlet');
model.geom('geom1').feature('sel2').selection('selection').init(1);
model.geom('geom1').feature('sel2').selection('selection').set('fin', 18);
model.geom('geom1').run('sel2');
model.geom('geom1').create('sel3', 'ExplicitSelection');
model.geom('geom1').feature('sel3').label('Channel A');
model.geom('geom1').feature('sel3').selection('selection').set('fin', [1 5]);
model.geom('geom1').run('sel3');
model.geom('geom1').create('sel4', 'ExplicitSelection');
model.geom('geom1').feature('sel4').label('Soot layer');
model.geom('geom1').feature('sel4').selection('selection').set('fin', 4);
model.geom('geom1').run('sel4');
model.geom('geom1').create('sel5', 'ExplicitSelection');
model.geom('geom1').feature('sel5').label('Filter wall');
model.geom('geom1').feature('sel5').selection('selection').set('fin', 3);
model.geom('geom1').run('sel5');
model.geom('geom1').create('unisel1', 'UnionSelection');
model.geom('geom1').feature('unisel1').set('input', {'sel4' 'sel5'});
model.geom('geom1').feature('unisel1').label('Soot and filter wall');
model.geom('geom1').run('unisel1');
model.geom('geom1').create('sel6', 'ExplicitSelection');
model.geom('geom1').feature('sel6').label('Channel B');
model.geom('geom1').feature('sel6').selection('selection').set('fin', 2);

model.material.create('mat1', 'Common', '');
model.material.create('mat2', 'Common', '');

model.geom('geom1').run;

model.material.create('pmat1', 'PorousMedia', 'comp2');
model.material('pmat1').selection.set([4]);
model.material('pmat1').feature.create('fluid1', 'Fluid', 'comp2');
model.material('pmat1').feature('fluid1').set('link', 'none');
model.material('pmat1').feature.create('solid1', 'Solid', 'comp2');
model.material('pmat1').feature('solid1').set('vfrac', '1-poro');
model.material.duplicate('pmat2', 'pmat1');
model.material('pmat2').selection.set([3]);
model.material('pmat2').feature('solid1').set('link', 'mat2');

model.physics('chem1').feature('rch1').set('Af', '1e13');
model.physics('chem1').feature('rch1').set('ReactionEnthalpy', 'UserDefined');
model.physics('chem1').feature('rch1').set('H', '-3.96e5[J/mol]');
model.physics('chem1').feature('O2').set('AdditionalSource', false);
model.physics('chem1').feature('O2').set('sigma', '3.467[angstrom]');
model.physics('chem1').feature('O2').set('epsilonkb', '106.7[K]');
model.physics('chem1').feature('CO2').set('AdditionalSource', false);
model.physics('chem1').feature('CO2').set('sigma', '3.941[angstrom]');
model.physics('chem1').feature('CO2').set('epsilonkb', '195.2[K]');
model.physics('chem1').feature('rch2').set('Af', '5.5e10');
model.physics('chem1').feature('rch2').set('ReactionEnthalpy', 'UserDefined');
model.physics('chem1').feature('rch2').set('H', '-1.1e5[J/mol]');
model.physics('chem1').feature('CO').set('AdditionalSource', false);
model.physics('chem1').feature('CO').set('sigma', '3.69[angstrom]');
model.physics('chem1').feature('CO').set('epsilonkb', '91.7[K]');
model.physics('chem1').feature('rch3').set('Af', '4.5e11');
model.physics('chem1').feature('rch3').set('ReactionEnthalpy', 'UserDefined');
model.physics('chem1').feature('rch3').set('H', '6.72e4[J/mol]');
model.physics('chem1').feature('CeO2_solid').set('cLock', true);
model.physics('chem1').feature('Ce2O3_solid').set('cLock', true);
model.physics('chem1').feature('rch4').set('Af', '4e8');
model.physics('chem1').feature('rch4').set('ReactionEnthalpy', 'UserDefined');
model.physics('chem1').feature('rch4').set('H', '1.21e5[J/mol]');
model.physics('chem1').feature('rch5').set('Af', '1e12');
model.physics('chem1').feature('rch5').set('ReactionEnthalpy', 'UserDefined');
model.physics('chem1').feature('rch5').set('H', '-2.24e5[J/mol]');
model.physics('chem1').feature('N2').set('sType', 'solvent');
model.physics('chem1').feature('N2').set('sigma', '3.798[angstrom]');
model.physics('chem1').feature('N2').set('epsilonkb', '71.4[K]');
model.physics('chem1').feature('N2').set('Tmid', '3000[K]');
model.physics('chem1').feature('N2').set('Thi', '3000[K]');
model.physics('chem1').feature('N2').set('SpeciesThermoaLo1', 3.298677);
model.physics('chem1').feature('N2').set('SpeciesThermoaLo2', '0.14082404e-2');
model.physics('chem1').feature('N2').set('SpeciesThermoaLo3', '-0.03963222e-4');
model.physics('chem1').feature('N2').set('SpeciesThermoaLo4', '0.05641515e-7');
model.physics('chem1').feature('N2').set('SpeciesThermoaLo5', '-0.02444854e-10');
model.physics('chem1').feature('N2').set('SpeciesThermoaLo6', '-0.10208999e4');
model.physics('chem1').feature('N2').set('SpeciesThermoaLo7', 3.950372);
model.physics('tds').prop('TransportMechanism').set('MassTransferInPorousMedia', true);
model.physics('tds').field('concentration').component({'cCO' 'cCO2' 'cN2'});
model.physics('tds').field('concentration').component(1, 'cO2');
model.physics('tds').field('concentration').component(2, 'cCO2');
model.physics('tds').field('concentration').component(3, 'cCO');
model.physics('chem1').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'cCO', 0, 0);
model.physics('chem1').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'cCO2', 1, 0);
model.physics('chem1').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'UserDefined', 2, 0);
model.physics('chem1').prop('ChemistryModelInputParameter').setIndex('ConcentrationValue', 'F_N2_inlet/v_inlet', 2, 0);
model.physics('chem1').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'cO2', 3, 0);
model.physics('chem1').prop('ChemistryModelInputParameter').setIndex('SolidConcentration', 'C_inlet', 0, 0);
model.physics('chem1').prop('ChemistryModelInputParameter').setIndex('SolidConcentration', 'Ce2O3_inlet', 1, 0);
model.physics('chem1').prop('ChemistryModelInputParameter').setIndex('SolidConcentration', 'CeO2_inlet', 2, 0);
model.physics('tds').feature('cdm1').set('DiffusionCoefficientSource', 'chem');
model.physics('tds').feature('cdm1').set('Dchem_cO2_src', 'root.comp2.chem.DXX_O2');
model.physics('tds').feature('cdm1').set('Dchem_cCO2_src', 'root.comp2.chem.DXX_CO2');
model.physics('tds').feature('cdm1').set('Dchem_cCO_src', 'root.comp2.chem.DXX_CO');
model.physics('tds').feature('init1').setIndex('initc', 0, 0);
model.physics('tds').feature('init1').setIndex('initc', 0, 1);
model.physics('tds').feature('init1').setIndex('initc', 0, 2);
model.physics('tds').feature('reac1').selection.named('geom1_sel4');
model.physics('tds').feature('reac1').setIndex('R_cO2_src', 'root.comp2.chem.R_O2', 0);
model.physics('tds').feature('reac1').setIndex('R_cCO_src', 'root.comp2.chem.R_CO', 0);
model.physics('tds').feature('reac1').set('ReactingVolumeType', 'PoreVolume');
model.physics('tds').feature('in1').selection.named('geom1_sel1');
model.physics('tds').feature('in1').setIndex('c0', 'F_O2_inlet/v_inlet', 0);
model.physics('tds').feature('in1').setIndex('c0', 'F_CO2_inlet/v_inlet', 1);
model.physics('tds').feature('in1').setIndex('c0', 'F_CO_inlet/v_inlet', 2);
model.physics('tds').feature('out1').selection.named('geom1_sel2');
model.physics('tds').create('porous1', 'PorousMedium', 2);
model.physics('tds').feature('porous1').selection.set([3 4]);
model.physics('tds').feature('porous1').feature('fluid1').set('DiffusionCoefficientSource', 'chem');
model.physics('tds').feature('porous1').feature('fluid1').set('Dchem_cO2_src', 'root.comp2.chem.DXX_O2');
model.physics('tds').feature('porous1').feature('fluid1').set('Dchem_cCO2_src', 'root.comp2.chem.DXX_CO2');
model.physics('tds').feature('porous1').feature('fluid1').set('Dchem_cCO_src', 'root.comp2.chem.DXX_CO');
model.physics('tds').feature('porous1').feature('fluid1').set('FluidDiffusivityModelType', 'UserDefined');
model.physics('ht1').feature('fluid1').set('k_mat', 'root.comp2.chem.kxx');
model.physics('ht1').feature('fluid1').set('fluidType', 'gasLiquid');
model.physics('ht1').feature('fluid1').set('rho_mat', 'root.comp2.chem.rho');
model.physics('ht1').feature('fluid1').set('Cp_mat', 'root.comp2.chem.Cptot');
model.physics('ht1').feature('fluid1').set('gamma_not_IG_mat', 'root.comp2.chem.gamma');
model.physics('ht1').feature('init1').set('Tinit', 'Tin');
model.physics('ht1').feature('hs1').selection.named('geom1_sel4');
model.physics('ht1').feature('temp1').selection.named('geom1_sel1');
model.physics('ht1').feature('temp1').set('T0', 'Tin');
model.physics('ht1').feature('ofl1').selection.named('geom1_sel2');
model.physics('ht1').create('porous1', 'PorousMediumHeatTransferModel', 2);
model.physics('ht1').feature('porous1').selection.set([3 4]);
model.physics('ht1').feature('porous1').feature('fluid1').set('k_mat', 'root.comp2.chem.kxx');
model.physics('ht1').feature('porous1').feature('fluid1').set('rho_mat', 'root.comp2.chem.rho');
model.physics('ht1').feature('porous1').feature('fluid1').set('Cp_mat', 'root.comp2.chem.Cptot');
model.physics('ht1').feature('porous1').feature('fluid1').set('gamma_not_IG_mat', 'userdef');

model.material('mat1').propertyGroup('def').set('thermalconductivity', {'k_s'});
model.material('mat1').propertyGroup('def').set('density', {'rho_s'});
model.material('mat1').propertyGroup('def').set('heatcapacity', {'Cp_s'});
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'k_m'});
model.material('mat2').propertyGroup('def').set('density', {'rho_m'});
model.material('mat2').propertyGroup('def').set('heatcapacity', {'Cp_m'});

model.physics('fp1').feature('fp1').set('mu_mat', 'root.comp2.chem.eta');
model.physics('fp1').feature('inl1').selection.named('geom1_sel1');
model.physics('fp1').feature('inl1').set('BoundaryCondition', 'FullyDevelopedFlow');
model.physics('fp1').feature('inl1').set('Uavfdf', '2.5[m/s]');
model.physics('fp1').feature('out1').selection.named('geom1_sel2');
model.physics('fp1').feature('out1').set('NormalFlow', true);
model.physics('fp1').create('porous1', 'PorousMedium', 2);
model.physics('fp1').feature('porous1').selection.named('geom1_sel4');
model.physics('fp1').feature('porous1').feature('fluid1').set('mu_mat', 'root.comp2.chem.eta');
model.physics('fp1').feature.duplicate('porous2', 'porous1');
model.physics('fp1').feature('porous2').selection.named('geom1_sel5');

model.material('pmat1').propertyGroup('def').set('hydraulicpermeability', {'kappa_s'});
model.material('pmat2').propertyGroup('def').set('hydraulicpermeability', {'kappa_m'});

model.common.create('free1', 'DeformingDomain', 'comp2');
model.common('free1').selection.all;
model.common('free1').selection.set([4 5]);
model.common.create('pnmv1', 'PrescribedNormalMeshVelocity', 'comp2');
model.common('pnmv1').selection.set([11]);
model.common('pnmv1').set('prescribedNormalVelocity', '(-paco*(u*fp.nx+v*fp.ny)-Mc*((y-Y)+dHsoot)*(comp2.chem.r_1+comp2.chem.r_2+comp2.chem.r_3+ comp2.chem.r_4))/rho_s');
model.common.create('pnmd1', 'PrescribedNormalMeshDisplacement', 'comp2');
model.common('pnmd1').selection.set([8 10 15 16]);

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('map1').selection.set([1 3 4 5]);
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([1 17]);
model.mesh('mesh1').feature('map1').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis1').set('elemcount', 25);
model.mesh('mesh1').feature('map1').feature('dis1').set('elemratio', 3);
model.mesh('mesh1').feature('map1').feature('dis1').set('symmetric', true);
model.mesh('mesh1').feature('map1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis2').selection.set([2]);
model.mesh('mesh1').feature('map1').feature('dis2').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis2').set('elemcount', 10);
model.mesh('mesh1').feature('map1').feature('dis2').set('elemratio', 3);
model.mesh('mesh1').feature('map1').create('dis3', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis3').selection.set([7 9 11 12]);
model.mesh('mesh1').feature('map1').feature('dis3').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis3').set('elemcount', 90);
model.mesh('mesh1').feature('map1').feature('dis3').set('elemratio', 10);
model.mesh('mesh1').feature('map1').feature('dis3').set('symmetric', true);
model.mesh('mesh1').feature('map1').create('dis4', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis4').selection.set([8 10 15 16]);
model.mesh('mesh1').feature('map1').create('dis5', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis5').selection.set([6 13]);
model.mesh('mesh1').feature('map1').feature('dis5').set('numelem', 15);
model.mesh('mesh1').run('map1');
model.mesh('mesh1').create('map2', 'Map');
model.mesh('mesh1').feature('map2').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map2').feature('dis1').selection.set([4 18]);
model.mesh('mesh1').feature('map2').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('map2').feature('dis1').set('elemcount', 25);
model.mesh('mesh1').feature('map2').feature('dis1').set('elemratio', 3);
model.mesh('mesh1').feature('map2').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map2').feature('dis2').selection.set([14]);
model.mesh('mesh1').feature('map2').feature('dis2').set('type', 'predefined');
model.mesh('mesh1').feature('map2').feature('dis2').set('elemcount', 10);
model.mesh('mesh1').feature('map2').feature('dis2').set('elemratio', 3);
model.mesh('mesh1').run;

model.view('view1').hideEntities.create('hide1');
model.view('view1').hideEntities('hide1').geom('geom1', 1);
model.view('view1').hideEntities('hide1').set([12]);

model.study('std2').feature('stat').setEntry('activate', 'chem1', false);
model.study('std2').feature('stat').setEntry('activate', 'tds', false);
model.study('std2').feature('stat').setEntry('activate', 'ht1', false);
model.study('std2').feature('stat').setEntry('activate', 'fp1', true);
model.study('std2').feature('stat').setEntry('activate', 'frame:spatial1', false);
model.study('std2').create('time', 'Transient');
model.study('std2').feature('time').setEntry('activate', 're', false);
model.study('std2').feature('time').set('tlist', 'range(0,300,1800)');

model.sol.create('sol5');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1 2 3 4 5]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([4 5]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1 2 3 4 5]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1 2 3 4 5]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([4 5]);

model.sol('sol5').study('std2');
model.sol('sol5').create('st1', 'StudyStep');
model.sol('sol5').feature('st1').set('study', 'std2');
model.sol('sol5').feature('st1').set('studystep', 'stat');
model.sol('sol5').create('v1', 'Variables');
model.sol('sol5').feature('v1').feature('comp2_spatial_disp').set('scalemethod', 'manual');
model.sol('sol5').feature('v1').feature('comp2_spatial_disp').set('scaleval', '8.952290209773138E-5');
model.sol('sol5').feature('v1').set('control', 'stat');
model.sol('sol5').create('s1', 'Stationary');
model.sol('sol5').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol5').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol5').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol5').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol5').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol5').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol5').feature('s1').create('d1', 'Direct');
model.sol('sol5').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s1').feature('d1').label('Direct, fluid flow variables ()');
model.sol('sol5').feature('s1').create('i1', 'Iterative');
model.sol('sol5').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol5').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol5').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol5').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol5').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol5').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol5').feature('s1').feature('i1').label('AMG, fluid flow variables ()');
model.sol('sol5').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp2_fp_inl1_Pinlfdf'});
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp2_fp_inl1_Pinlfdf'});
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol5').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol5').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol5').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol5').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol5').feature('s1').feature.remove('fcDef');
model.sol('sol5').create('su1', 'StoreSolution');
model.sol('sol5').create('st2', 'StudyStep');
model.sol('sol5').feature('st2').set('study', 'std2');
model.sol('sol5').feature('st2').set('studystep', 'time');
model.sol('sol5').create('v2', 'Variables');
model.sol('sol5').feature('v2').feature('comp2_spatial_disp').set('scalemethod', 'manual');
model.sol('sol5').feature('v2').feature('comp2_spatial_disp').set('scaleval', '8.952290209773138E-5');
model.sol('sol5').feature('v2').set('initmethod', 'sol');
model.sol('sol5').feature('v2').set('initsol', 'sol5');
model.sol('sol5').feature('v2').set('initsoluse', 'sol6');
model.sol('sol5').feature('v2').set('notsolmethod', 'sol');
model.sol('sol5').feature('v2').set('notsol', 'sol5');
model.sol('sol5').feature('v2').set('notsoluse', 'sol6');
model.sol('sol5').feature('v2').set('control', 'time');
model.sol('sol5').create('t1', 'Time');
model.sol('sol5').feature('t1').set('tlist', 'range(0,300,1800)');
model.sol('sol5').feature('t1').set('plot', 'off');
model.sol('sol5').feature('t1').set('plotgroup', 'pg1');
model.sol('sol5').feature('t1').set('plotfreq', 'tout');
model.sol('sol5').feature('t1').set('probesel', 'all');
model.sol('sol5').feature('t1').set('probes', {});
model.sol('sol5').feature('t1').set('probefreq', 'tsteps');
model.sol('sol5').feature('t1').set('rtol', 0.005);
model.sol('sol5').feature('t1').set('atolglobalmethod', 'scaled');
model.sol('sol5').feature('t1').set('atolglobalfactor', 0.05);
model.sol('sol5').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol5').feature('t1').set('atolmethod', {'comp2_cCO' 'global' 'comp2_cCO2' 'global' 'comp2_cO2' 'global' 'comp2_nitf1_Uave' 'global' 'comp2_p' 'scaled'  ...
'comp2_spatial_disp' 'global' 'comp2_spatial_lm_nv' 'global' 'comp2_T' 'global' 'comp2_u' 'global' 'comp1_ODE1' 'global'  ...
'comp1_ODE2' 'global' 'comp1_ODE3' 'global' 'comp1_ODE4' 'global' 'comp1_ODE5' 'global' 'comp1_ODE6' 'global'  ...
'comp2_fp_inl1_Pinlfdf' 'global'});
model.sol('sol5').feature('t1').set('atol', {'comp2_cCO' '1e-3' 'comp2_cCO2' '1e-3' 'comp2_cO2' '1e-3' 'comp2_nitf1_Uave' '1e-3' 'comp2_p' '1e-3'  ...
'comp2_spatial_disp' '1e-3' 'comp2_spatial_lm_nv' '1e-3' 'comp2_T' '1e-3' 'comp2_u' '1e-3' 'comp1_ODE1' '1e-3'  ...
'comp1_ODE2' '1e-3' 'comp1_ODE3' '1e-3' 'comp1_ODE4' '1e-3' 'comp1_ODE5' '1e-3' 'comp1_ODE6' '1e-3'  ...
'comp2_fp_inl1_Pinlfdf' '1e-3'});
model.sol('sol5').feature('t1').set('atolvaluemethod', {'comp2_cCO' 'factor' 'comp2_cCO2' 'factor' 'comp2_cO2' 'factor' 'comp2_nitf1_Uave' 'factor' 'comp2_p' 'factor'  ...
'comp2_spatial_disp' 'factor' 'comp2_spatial_lm_nv' 'factor' 'comp2_T' 'factor' 'comp2_u' 'factor' 'comp1_ODE1' 'factor'  ...
'comp1_ODE2' 'factor' 'comp1_ODE3' 'factor' 'comp1_ODE4' 'factor' 'comp1_ODE5' 'factor' 'comp1_ODE6' 'factor'  ...
'comp2_fp_inl1_Pinlfdf' 'factor'});
model.sol('sol5').feature('t1').set('atolfactor', {'comp2_cCO' '0.1' 'comp2_cCO2' '0.1' 'comp2_cO2' '0.1' 'comp2_nitf1_Uave' '0.1' 'comp2_p' '1'  ...
'comp2_spatial_disp' '0.1' 'comp2_spatial_lm_nv' '0.1' 'comp2_T' '0.1' 'comp2_u' '0.1' 'comp1_ODE1' '0.1'  ...
'comp1_ODE2' '0.1' 'comp1_ODE3' '0.1' 'comp1_ODE4' '0.1' 'comp1_ODE5' '0.1' 'comp1_ODE6' '0.1'  ...
'comp2_fp_inl1_Pinlfdf' '0.1'});
model.sol('sol5').feature('t1').set('reacf', true);
model.sol('sol5').feature('t1').set('storeudot', true);
model.sol('sol5').feature('t1').set('endtimeinterpolation', true);
model.sol('sol5').feature('t1').set('estrat', 'exclude');
model.sol('sol5').feature('t1').set('rhoinf', 0.5);
model.sol('sol5').feature('t1').set('predictor', 'constant');
model.sol('sol5').feature('t1').set('maxorder', 2);
model.sol('sol5').feature('t1').set('stabcntrl', true);
model.sol('sol5').feature('t1').set('bwinitstepfrac', '0.01');
model.sol('sol5').feature('t1').set('control', 'time');
model.sol('sol5').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol5').feature('t1').create('seDef', 'Segregated');
model.sol('sol5').feature('t1').create('se1', 'Segregated');
model.sol('sol5').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol5').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol5').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp2_u' 'comp2_p' 'comp2_fp_inl1_Pinlfdf'});
model.sol('sol5').feature('t1').feature('se1').feature('ss1').set('subdamp', 0.8);
model.sol('sol5').feature('t1').feature('se1').feature('ss1').set('subjtech', 'once');
model.sol('sol5').feature('t1').create('d1', 'Direct');
model.sol('sol5').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('t1').feature('d1').label('Direct, fluid flow variables (fp1)');
model.sol('sol5').feature('t1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol5').feature('t1').feature('se1').feature('ss1').label('Velocity u, Pressure p');
model.sol('sol5').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol5').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp2_T'});
model.sol('sol5').feature('t1').feature('se1').feature('ss2').set('subdamp', 0.7);
model.sol('sol5').feature('t1').feature('se1').feature('ss2').set('subjtech', 'onevery');
model.sol('sol5').feature('t1').create('d2', 'Direct');
model.sol('sol5').feature('t1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol5').feature('t1').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('t1').feature('d2').label('Direct, heat transfer variables (ht1)');
model.sol('sol5').feature('t1').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol5').feature('t1').feature('se1').feature('ss2').label('Temperature');
model.sol('sol5').feature('t1').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol5').feature('t1').feature('se1').feature('ss3').set('segvar', {'comp2_spatial_disp' 'comp2_spatial_lm_nv'});
model.sol('sol5').feature('t1').feature('se1').feature('ss3').set('subdamp', 0.8);
model.sol('sol5').feature('t1').feature('se1').feature('ss3').set('subjtech', 'once');
model.sol('sol5').feature('t1').feature('se1').feature('ss3').set('subiter', 1);
model.sol('sol5').feature('t1').feature('se1').feature('ss3').set('subtermconst', 'iter');
model.sol('sol5').feature('t1').feature('se1').feature('ss3').set('subntolfact', 0.1);
model.sol('sol5').feature('t1').create('d3', 'Direct');
model.sol('sol5').feature('t1').feature('d3').set('linsolver', 'pardiso');
model.sol('sol5').feature('t1').feature('d3').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('t1').feature('d3').label('Direct, spatial mesh displacement (fp1)');
model.sol('sol5').feature('t1').feature('se1').feature('ss3').set('linsolver', 'd3');
model.sol('sol5').feature('t1').feature('se1').feature('ss3').label('Spatial Mesh Displacement');
model.sol('sol5').feature('t1').feature('se1').create('ss4', 'SegregatedStep');
model.sol('sol5').feature('t1').feature('se1').feature('ss4').set('segvar', {'comp2_cO2' 'comp2_cCO2' 'comp2_cCO'});
model.sol('sol5').feature('t1').feature('se1').feature('ss4').set('subdamp', 0.8);
model.sol('sol5').feature('t1').feature('se1').feature('ss4').set('subjtech', 'once');
model.sol('sol5').feature('t1').feature('se1').feature('ss4').set('subtermconst', 'iter');
model.sol('sol5').feature('t1').create('d4', 'Direct');
model.sol('sol5').feature('t1').feature('d4').set('linsolver', 'pardiso');
model.sol('sol5').feature('t1').feature('d4').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('t1').feature('d4').label('Direct, concentrations (tds)');
model.sol('sol5').feature('t1').feature('se1').feature('ss4').set('linsolver', 'd4');
model.sol('sol5').feature('t1').feature('se1').feature('ss4').label('Concentrations');
model.sol('sol5').feature('t1').feature('se1').set('ntolfact', 0.5);
model.sol('sol5').feature('t1').feature('se1').set('segstabacc', 'segaacc');
model.sol('sol5').feature('t1').feature('se1').set('segaaccdim', 5);
model.sol('sol5').feature('t1').feature('se1').set('segaaccmix', 0.9);
model.sol('sol5').feature('t1').feature('se1').set('segaaccdelay', 1);
model.sol('sol5').feature('t1').feature('se1').set('maxsegiter', 10);
model.sol('sol5').feature('t1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol5').feature('t1').feature('se1').feature('ll1').set('lowerlimit', 'comp2.T 0 ');
model.sol('sol5').feature('t1').create('i1', 'Iterative');
model.sol('sol5').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol5').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol5').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol5').feature('t1').feature('i1').set('rhob', 20);
model.sol('sol5').feature('t1').feature('i1').set('maxlinit', 100);
model.sol('sol5').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol5').feature('t1').feature('i1').label('AMG, fluid flow variables (fp1)');
model.sol('sol5').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol5').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol5').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol5').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol5').feature('t1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol5').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol5').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol5').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol5').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol5').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol5').feature('t1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol5').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol5').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol5').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol5').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol5').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol5').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol5').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol5').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp2_fp_inl1_Pinlfdf'});
model.sol('sol5').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol5').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol5').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol5').feature('t1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol5').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol5').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol5').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol5').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol5').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol5').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol5').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol5').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp2_fp_inl1_Pinlfdf'});
model.sol('sol5').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol5').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol5').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol5').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol5').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('t1').create('i2', 'Iterative');
model.sol('sol5').feature('t1').feature('i2').set('linsolver', 'gmres');
model.sol('sol5').feature('t1').feature('i2').set('prefuntype', 'left');
model.sol('sol5').feature('t1').feature('i2').set('itrestart', 50);
model.sol('sol5').feature('t1').feature('i2').set('rhob', 20);
model.sol('sol5').feature('t1').feature('i2').set('maxlinit', 10000);
model.sol('sol5').feature('t1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol5').feature('t1').feature('i2').label('AMG, heat transfer variables (ht1)');
model.sol('sol5').feature('t1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol5').feature('t1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol5').feature('t1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol5').feature('t1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol5').feature('t1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol5').feature('t1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol5').feature('t1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol5').feature('t1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol5').feature('t1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol5').feature('t1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol5').feature('t1').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol5').feature('t1').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol5').feature('t1').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol5').feature('t1').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol5').feature('t1').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol5').feature('t1').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol5').feature('t1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol5').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('t1').create('i3', 'Iterative');
model.sol('sol5').feature('t1').feature('i3').set('linsolver', 'gmres');
model.sol('sol5').feature('t1').feature('i3').set('prefuntype', 'left');
model.sol('sol5').feature('t1').feature('i3').set('itrestart', 50);
model.sol('sol5').feature('t1').feature('i3').set('rhob', 400);
model.sol('sol5').feature('t1').feature('i3').set('maxlinit', 50);
model.sol('sol5').feature('t1').feature('i3').set('nlinnormuse', 'on');
model.sol('sol5').feature('t1').feature('i3').label('AMG, concentrations (tds)');
model.sol('sol5').feature('t1').feature('i3').create('mg1', 'Multigrid');
model.sol('sol5').feature('t1').feature('i3').feature('mg1').set('prefun', 'saamg');
model.sol('sol5').feature('t1').feature('i3').feature('mg1').set('mgcycle', 'v');
model.sol('sol5').feature('t1').feature('i3').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol5').feature('t1').feature('i3').feature('mg1').set('strconn', 0.01);
model.sol('sol5').feature('t1').feature('i3').feature('mg1').set('nullspace', 'constant');
model.sol('sol5').feature('t1').feature('i3').feature('mg1').set('usesmooth', false);
model.sol('sol5').feature('t1').feature('i3').feature('mg1').set('saamgcompwise', true);
model.sol('sol5').feature('t1').feature('i3').feature('mg1').set('loweramg', true);
model.sol('sol5').feature('t1').feature('i3').feature('mg1').set('compactaggregation', false);
model.sol('sol5').feature('t1').feature('i3').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol5').feature('t1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol5').feature('t1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol5').feature('t1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol5').feature('t1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol5').feature('t1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol5').feature('t1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol5').feature('t1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol5').feature('t1').feature('i3').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol5').feature('t1').feature('i3').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol5').feature('t1').feature('i3').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol5').feature('t1').feature('i3').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol5').feature('t1').feature('i3').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol5').feature('t1').feature('i3').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol5').feature('t1').feature('i3').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol5').feature('t1').feature('i3').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol5').feature('t1').feature('i3').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol5').feature('t1').feature('i3').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('t1').feature('i3').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('t1').feature.remove('fcDef');
model.sol('sol5').feature('t1').feature.remove('seDef');
model.sol('sol5').attach('std2');
model.sol('sol5').feature('v2').feature('comp2_cCO').set('scalemethod', 'manual');
model.sol('sol5').feature('v2').feature('comp2_cCO2').set('scalemethod', 'manual');
model.sol('sol5').feature('v2').feature('comp2_cO2').set('scalemethod', 'manual');
model.sol('sol5').feature('v2').feature('comp2_T').set('scalemethod', 'init');

model.func.create('step1', 'Step');
model.func('step1').model('comp2');
model.func('step1').set('location', 0.5);
model.func('step1').set('smooth', 1);

model.physics('tds').feature('in1').setIndex('c0', 'F_O2_inlet/v_inlet*step1(t[1/s])', 0);
model.physics('tds').feature('in1').setIndex('c0', 'F_CO2_inlet/v_inlet*step1(t[1/s])', 1);
model.physics('tds').feature('in1').setIndex('c0', 'F_CO_inlet/v_inlet*step1(t[1/s])', 2);

model.sol('sol5').runAll;

model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').set('data', 'dset3');
model.result('pg3').setIndex('looplevel', 7, 0);
model.result('pg3').label('Concentration, O2 (tds)');
model.result('pg3').set('titletype', 'custom');
model.result('pg3').set('prefixintitle', 'Species O2:');
model.result('pg3').set('expressionintitle', false);
model.result('pg3').set('typeintitle', true);
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', {'cO2'});
model.result('pg3').create('str1', 'Streamline');
model.result('pg3').feature('str1').set('expr', {'tds.tflux_cO2x' 'tds.tflux_cO2y'});
model.result('pg3').feature('str1').set('posmethod', 'uniform');
model.result('pg3').feature('str1').set('recover', 'pprint');
model.result('pg3').feature('str1').set('pointtype', 'arrow');
model.result('pg3').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg3').feature('str1').set('color', 'gray');
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').set('data', 'dset3');
model.result('pg4').setIndex('looplevel', 7, 0);
model.result('pg4').label('Concentration, CO2 (tds)');
model.result('pg4').set('titletype', 'custom');
model.result('pg4').set('prefixintitle', 'Species CO2:');
model.result('pg4').set('expressionintitle', false);
model.result('pg4').set('typeintitle', true);
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', {'cCO2'});
model.result('pg4').create('str1', 'Streamline');
model.result('pg4').feature('str1').set('expr', {'tds.tflux_cCO2x' 'tds.tflux_cCO2y'});
model.result('pg4').feature('str1').set('posmethod', 'uniform');
model.result('pg4').feature('str1').set('recover', 'pprint');
model.result('pg4').feature('str1').set('pointtype', 'arrow');
model.result('pg4').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg4').feature('str1').set('color', 'gray');
model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').set('data', 'dset3');
model.result('pg5').setIndex('looplevel', 7, 0);
model.result('pg5').label('Concentration, CO (tds)');
model.result('pg5').set('titletype', 'custom');
model.result('pg5').set('prefixintitle', 'Species CO:');
model.result('pg5').set('expressionintitle', false);
model.result('pg5').set('typeintitle', true);
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', {'cCO'});
model.result('pg5').create('str1', 'Streamline');
model.result('pg5').feature('str1').set('expr', {'tds.tflux_cCOx' 'tds.tflux_cCOy'});
model.result('pg5').feature('str1').set('posmethod', 'uniform');
model.result('pg5').feature('str1').set('recover', 'pprint');
model.result('pg5').feature('str1').set('pointtype', 'arrow');
model.result('pg5').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg5').feature('str1').set('color', 'gray');
model.result.create('pg6', 'PlotGroup2D');
model.result('pg6').label('Temperature (ht1)');
model.result('pg6').set('data', 'dset3');
model.result('pg6').setIndex('looplevel', 7, 0);
model.result('pg6').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pg2');
model.result('pg6').feature.create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('showsolutionparams', 'on');
model.result('pg6').feature('surf1').set('solutionparams', 'parent');
model.result('pg6').feature('surf1').set('expr', 'T');
model.result('pg6').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg6').feature('surf1').set('showsolutionparams', 'on');
model.result('pg6').feature('surf1').set('data', 'parent');
model.result.dataset('dset3').set('geom', 'geom1');
model.result.create('pg7', 'PlotGroup2D');
model.result('pg7').label('Velocity (fp1)');
model.result('pg7').set('frametype', 'spatial');
model.result('pg7').set('data', 'dset3');
model.result('pg7').setIndex('looplevel', 7, 0);
model.result('pg7').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg1');
model.result('pg7').feature.create('surf1', 'Surface');
model.result('pg7').feature('surf1').label('Surface');
model.result('pg7').feature('surf1').set('showsolutionparams', 'on');
model.result('pg7').feature('surf1').set('expr', 'fp.U');
model.result('pg7').feature('surf1').set('smooth', 'internal');
model.result('pg7').feature('surf1').set('showsolutionparams', 'on');
model.result('pg7').feature('surf1').set('data', 'parent');
model.result.create('pg8', 'PlotGroup2D');
model.result('pg8').label('Pressure (fp1)');
model.result('pg8').set('frametype', 'spatial');
model.result('pg8').set('data', 'dset3');
model.result('pg8').setIndex('looplevel', 7, 0);
model.result('pg8').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg2');
model.result('pg8').feature.create('con1', 'Contour');
model.result('pg8').feature('con1').label('Contour');
model.result('pg8').feature('con1').set('showsolutionparams', 'on');
model.result('pg8').feature('con1').set('expr', 'p');
model.result('pg8').feature('con1').set('number', 40);
model.result('pg8').feature('con1').set('levelrounding', false);
model.result('pg8').feature('con1').set('smooth', 'internal');
model.result('pg8').feature('con1').set('showsolutionparams', 'on');
model.result('pg8').feature('con1').set('data', 'parent');
model.result.create('pg9', 'PlotGroup2D');
model.result('pg9').label('Temperature and Fluid Flow (nitf1)');
model.result('pg9').set('showlegendsunit', true);
model.result('pg9').set('data', 'dset3');
model.result('pg9').setIndex('looplevel', 7, 0);
model.result('pg9').set('defaultPlotID', 'MultiphysicsNonIsothermalFlow/cfcom1/pdef1/pcond4/pcond4/pcond1/pg3');
model.result('pg9').feature.create('surf1', 'Surface');
model.result('pg9').feature('surf1').label('Fluid Temperature');
model.result('pg9').feature('surf1').set('showsolutionparams', 'on');
model.result('pg9').feature('surf1').set('solutionparams', 'parent');
model.result('pg9').feature('surf1').set('expr', 'nitf1.T');
model.result('pg9').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg9').feature('surf1').set('smooth', 'internal');
model.result('pg9').feature('surf1').set('showsolutionparams', 'on');
model.result('pg9').feature('surf1').set('data', 'parent');
model.result('pg9').feature('surf1').feature.create('sel1', 'Selection');
model.result('pg9').feature('surf1').feature('sel1').selection.geom('geom1', 2);
model.result('pg9').feature('surf1').feature('sel1').selection.set([1 2 3 4 5]);
model.result('pg9').feature.create('arws1', 'ArrowSurface');
model.result('pg9').feature('arws1').label('Fluid Flow');
model.result('pg9').feature('arws1').set('showsolutionparams', 'on');
model.result('pg9').feature('arws1').set('solutionparams', 'parent');
model.result('pg9').feature('arws1').set('expr', {'nitf1.ux' 'nitf1.uy'});
model.result('pg9').feature('arws1').set('xnumber', 30);
model.result('pg9').feature('arws1').set('ynumber', 30);
model.result('pg9').feature('arws1').set('arrowtype', 'cone');
model.result('pg9').feature('arws1').set('arrowlength', 'logarithmic');
model.result('pg9').feature('arws1').set('showsolutionparams', 'on');
model.result('pg9').feature('arws1').set('data', 'parent');
model.result('pg9').feature('arws1').feature.create('col1', 'Color');
model.result('pg9').feature('arws1').feature('col1').set('showcolordata', 'off');
model.result('pg9').feature('arws1').feature('col1').set('expr', 'fp.U');
model.result('pg9').feature('arws1').feature.create('filt1', 'Filter');
model.result('pg9').feature('arws1').feature('filt1').set('expr', 'fp.U>nitf1.Uave');
model.result.create('pg10', 'PlotGroup2D');
model.result('pg10').set('data', 'dset3');
model.result('pg10').setIndex('looplevel', 7, 0);
model.result('pg10').label('Moving Mesh');
model.result('pg10').create('mesh1', 'Mesh');
model.result('pg10').feature('mesh1').set('meshdomain', 'surface');
model.result('pg10').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg10').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg10').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg10').feature('mesh1').create('sel1', 'MeshSelection');
model.result('pg10').feature('mesh1').feature('sel1').selection.set([4 5]);
model.result('pg10').feature('mesh1').set('qualmeasure', 'custom');
model.result('pg10').feature('mesh1').set('qualexpr', 'comp2.spatial.relVol');
model.result('pg10').feature('mesh1').set('colorrangeunitinterval', false);
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').feature('str1').set('posmethod', 'selection');
model.result('pg3').feature('str1').set('selnumber', 15);
model.result('pg3').feature('str1').selection.set([1]);
model.result('pg3').feature('str1').set('arrowlength', 'normalized');
model.result('pg3').feature('str1').set('arrowscaleactive', true);
model.result('pg3').feature('str1').set('arrowscale', '6e-4');
model.result('pg3').run;
model.result('pg4').run;
model.result('pg4').feature('str1').set('posmethod', 'selection');
model.result('pg4').feature('str1').set('selnumber', 15);
model.result('pg4').feature('str1').selection.set([1]);
model.result('pg4').feature('str1').set('arrowlength', 'normalized');
model.result('pg4').feature('str1').set('arrowscaleactive', true);
model.result('pg4').feature('str1').set('arrowscale', '1.4e-3');
model.result('pg4').run;
model.result('pg5').run;
model.result('pg5').feature('str1').set('posmethod', 'selection');
model.result('pg5').feature('str1').set('selnumber', 15);
model.result('pg5').feature('str1').selection.set([18]);
model.result('pg5').feature('str1').set('arrowlength', 'normalized');
model.result('pg5').feature('str1').set('arrowscaleactive', true);
model.result('pg5').feature('str1').set('arrowscale', 0.13);
model.result('pg5').run;
model.result('pg7').run;
model.result('pg7').feature('surf1').set('colortable', 'Viridis');
model.result('pg7').run;
model.result('pg7').run;
model.result('pg7').create('str1', 'Streamline');
model.result('pg7').feature('str1').set('selnumber', 16);
model.result('pg7').feature('str1').set('expr', {'u' 'v'});
model.result('pg7').feature('str1').set('descr', 'Velocity field (spatial frame)');
model.result('pg7').feature('str1').selection.set([1]);
model.result('pg7').feature('str1').set('pointtype', 'arrow');
model.result('pg7').feature('str1').set('arrowdistr', 'equaltime');
model.result('pg7').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg7').feature('str1').set('arrowscaleactive', true);
model.result('pg7').feature('str1').set('arrowscale', 0.003);
model.result('pg7').feature('str1').set('color', 'white');
model.result('pg7').run;
model.result('pg8').run;
model.result('pg8').run;
model.result('pg8').feature('con1').active(false);
model.result('pg8').run;
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').feature('surf1').set('expr', 'p');
model.result('pg8').run;
model.result('pg6').run;
model.result('pg6').run;
model.result.create('pg11', 'PlotGroup1D');
model.result('pg11').run;
model.result('pg11').label('Soot layer thickness');
model.result('pg11').set('data', 'dset3');
model.result('pg11').set('titletype', 'none');
model.result('pg11').set('xlabelactive', true);
model.result('pg11').set('xlabel', 'L (m)');
model.result('pg11').set('ylabelactive', true);
model.result('pg11').set('ylabel', 'Soot layer top position (\mu m)');
model.result('pg11').set('legendpos', 'lowermiddle');
model.result('pg11').create('lngr1', 'LineGraph');
model.result('pg11').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg11').feature('lngr1').set('linewidth', 'preference');
model.result('pg11').feature('lngr1').selection.set([11]);
model.result('pg11').feature('lngr1').set('expr', 'y-Y+dHsoot');
model.result('pg11').feature('lngr1').set('unit', [native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']);
model.result('pg11').feature('lngr1').set('linewidth', 2);
model.result('pg11').feature('lngr1').set('legend', true);
model.result('pg11').run;
model.result.create('pg12', 'PlotGroup1D');
model.result('pg12').run;
model.result('pg12').set('data', 'dset3');
model.result('pg12').create('glob1', 'Global');
model.result('pg12').feature('glob1').set('markerpos', 'datapoints');
model.result('pg12').feature('glob1').set('linewidth', 'preference');
model.result('pg12').feature('glob1').set('expr', {'fp.inl1.pAverage'});
model.result('pg12').feature('glob1').set('descr', {'Pressure average over feature selection'});
model.result('pg12').feature('glob1').set('unit', {'Pa'});
model.result('pg12').feature('glob1').setIndex('unit', 'Pa', 0);
model.result('pg12').feature('glob1').setIndex('descr', 'Average Inlet Pressure', 0);
model.result('pg12').feature('glob1').set('linewidth', 2);
model.result('pg12').run;
model.result('pg12').run;
model.result('pg12').label('Inlet pressure');
model.result('pg12').set('titletype', 'none');
model.result('pg12').set('legendpos', 'middleright');

model.study('std1').feature('spf').setEntry('activate', 'chem1', false);
model.study('std1').feature('spf').setEntry('activate', 'tds', false);
model.study('std1').feature('spf').setEntry('activate', 'ht1', false);
model.study('std1').feature('spf').setEntry('activate', 'fp1', false);
model.study('std1').feature('spf').setEntry('activate', 'frame:spatial1', false);

model.result('pg7').run;

model.title('Chemical Reactions and Soot Build-Up in a Diesel Filter');

model.description('A filter system for a diesel engine is analyzed as an ideal reactor and as a detailed space-dependent unit. The example examines how a porous membrane separates soot particles from exhaust gases passing through it. It takes into account both catalytic and noncatalytic reactions that suppress the layer build-up; carbon oxidation to carbon monoxide and carbon dioxide, which both are able to pass through the membrane. The space-dependent model uses a moving mesh interface to include shape change due to a soot layer build-up within the membrane.');

model.label('diesel_filter.mph');

model.modelNode.label('Components');

out = model;
