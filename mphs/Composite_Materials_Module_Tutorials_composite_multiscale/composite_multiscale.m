function out = model
%
% composite_multiscale.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Composite_Materials_Module/Tutorials');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.param.label('Geometric Properties');

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('para', '1', 'Parameter');
model.param.set('l', '10[mm]', 'Unit cell length');
model.param.set('V', 'l^3', 'Unit cell volume');
model.param.set('v_f', '0.6', 'Fiber volume fraction');
model.param.set('V_f', 'v_f*V', 'Fiber volume');
model.param.set('r_f', 'sqrt(V_f/(pi*l))', 'Fiber radius');
model.param.set('th_i', 'r_f/100', 'Thickness of interface');
model.param.set('V_i', 'pi*((r_f+th_i)^2-r_f^2)*l', 'Interface volume');
model.param.set('v_i', 'V_i/V', 'Interface volume fraction');
model.param.set('v_m', '1-v_f-v_i', 'Matrix volume fraction');
model.param.set('th', '1[mm]', 'Lamina thickness');
model.param.set('rc', '100[mm]', 'Cylinder radius');
model.param.set('hc', '500[mm]', 'Cylinder height');
model.param.set('xd', '0[mm]', 'Extra dimension location');
model.param.create('par2');
model.param('par2').label('Elastic Properties');

% To import content from file, use:
% model.param('par2').loadFile('FILENAME');
model.param('par2').set('E1_f', '230[GPa]', 'Young''s modulus of fiber material, 11 direction');
model.param('par2').set('E2_f', '15[GPa]', 'Young''s modulus of fiber material, 22 direction');
model.param('par2').set('G12_f', '15[GPa]', 'Shear modulus of fiber material, 12 direction');
model.param('par2').set('nu12_f', '0.2', 'Poisson''s ratio of fiber material, 12 direction');
model.param('par2').set('nu23_f', '0.2', 'Poisson''s ratio of fiber material, 23 direction');
model.param('par2').set('rho_f', '2260[kg/m^3]', 'Density of fiber material');
model.param('par2').set('E_m', '3.35[GPa]', 'Young''s modulus of matrix material');
model.param('par2').set('nu_m', '0.35', 'Poisson''s ratio of matrix material');
model.param('par2').set('rho_m', '1100[kg/m^3]', 'Density of matrix material');
model.param('par2').set('E_i', '100[GPa]', 'Young''s modulus of interface material');
model.param('par2').set('nu_i', '0.2', 'Poisson''s ratio of interface material');
model.param('par2').set('rho_i', '1400[kg/m^3]', 'Density of interface material');
model.param('par2').set('rho_l', 'rho_f*v_f+rho_m*v_m+rho_i*v_i', 'Density of homogenized material');
model.param.create('par3');
model.param('par3').label('Strength Properties');

% To import content from file, use:
% model.param('par3').loadFile('FILENAME');
model.param('par3').set('Sigmats1_f', '2458[MPa]', 'Tensile strength of fiber, 11 direction');
model.param('par3').set('Sigmacs1_f', '1500[MPa]', 'Compressive strength of fiber, 11 direction');
model.param('par3').set('Sigmats_m', '103[MPa]', 'Tensile strength of matrix');
model.param('par3').set('Sigmacs_m', '265[MPa]', 'Compressive strength of matrix');
model.param('par3').set('Sigman_i', '60[MPa]', 'Interfacial normal strength of interface');
model.param('par3').set('Sigmas_i', '180[MPa]', 'Interfacial shear strength of interface');
model.param('par3').set('Sigmats1', '1500[MPa]', 'Tensile strength of ply, 11 direction');
model.param('par3').set('Sigmats2', '50[MPa]', 'Tensile strength of ply, 22 direction');
model.param('par3').set('Sigmats3', 'Sigmats2', 'Tensile strength of ply, 33 direction');
model.param('par3').set('Sigmacs1', '900[MPa]', 'Compressive strength of ply, 11 direction');
model.param('par3').set('Sigmacs2', '230[MPa]', 'Compressive strength of ply, 22 direction');
model.param('par3').set('Sigmacs3', 'Sigmacs2', 'Compressive strength of ply, 33 direction');
model.param('par3').set('Sigmass23', '90[MPa]', 'Shear strength of ply, 23 direction');
model.param('par3').set('Sigmass13', 'Sigmass23', 'Shear strength of ply, 13 direction');
model.param('par3').set('Sigmass12', 'Sigmass23', 'Shear strength of ply, 12 direction');
model.param('par3').set('epsilonts1', '0.1', 'Ultimate tensile strain of ply, 11 direction');
model.param('par3').set('epsiloncs1', '0.08', 'Ultimate compressive strain of ply, 11 direction');
model.param('par3').set('Sigma1D', '2000[MPa]', 'Linear degradation stress');

model.geom.load({'part1'}, 'COMSOL_Multiphysics/Unit_Cells_and_RVEs/Fiber_Composites/unidirectional_fiber_square_packing.mph', {'part1'});

model.modelNode('comp1').label('Component: Micromechanics (Material Properties)');

model.geom('geom1').create('pi1', 'PartInstance');
model.geom('geom1').feature('pi1').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi1').set('part', 'part1');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'df', '2*r_f');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'wm', 'l');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'dm', 'l');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'hm', 'l');
model.geom('geom1').feature('pi1').set('displ', {'-0.005[m]' '-0.005[m]' '0'});
model.geom('geom1').feature('pi1').setIndex('displ', '-0.005[m]', 2);
model.geom('geom1').run('fin');
model.geom('geom1').create('sel1', 'ExplicitSelection');
model.geom('geom1').feature('sel1').selection('selection').init(2);
model.geom('geom1').feature('sel1').selection('selection').set('fin', [6 7 8 9]);
model.geom('geom1').feature('sel1').label('Interface Selection');
model.geom('geom1').run;

model.physics('solid').create('tl1', 'ThinLayer', 2);
model.physics('solid').feature('tl1').selection.named('geom1_sel1');
model.physics('solid').feature('tl1').set('lth', 'th_i');
model.physics('solid').create('cp1', 'CellPeriodicity', 3);
model.physics('solid').feature('cp1').set('BoundaryExpansion', 'PrescribedStrain');
model.physics('solid').feature('cp1').set('EffectivePropertiese', 'ElasticityMatrixStandard');
model.physics('solid').feature('cp1').create('bp1', 'BoundaryPair', 2);
model.physics('solid').feature('cp1').feature('bp1').selection.named('geom1_pi1_unisel1');
model.physics('solid').feature('cp1').feature.duplicate('bp2', 'bp1');
model.physics('solid').feature('cp1').feature('bp2').selection.named('geom1_pi1_unisel2');
model.physics('solid').feature('cp1').feature.duplicate('bp3', 'bp2');
model.physics('solid').feature('cp1').feature('bp3').selection.named('geom1_pi1_unisel3');
model.physics('solid').feature('cp1').runCommand('createLoadGroupsandStudy');

model.material.create('matlnk1', 'Link', 'comp1');
model.material('matlnk1').label('Material Link 1: Matrix');
model.material('matlnk1').selection.set([1]);
model.material.create('mat1', 'Common', '');
model.material('matlnk1').set('link', 'mat1');
model.material('mat1').label('Material 1: Matrix');
model.material('mat1').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat1').propertyGroup('Enu').set('E', {'E_m'});
model.material('mat1').propertyGroup('Enu').set('nu', {'nu_m'});
model.material('mat1').propertyGroup('def').set('density', {'rho_m'});

model.physics('solid').feature('lemm1').set('SolidModel', 'Orthotropic');
model.physics('solid').feature('lemm1').set('TransverseIsotropic', true);

model.material.create('matlnk2', 'Link', 'comp1');
model.material('matlnk2').label('Material Link 2: Fiber');
model.material('matlnk2').selection.set([2]);
model.material.create('mat2', 'Common', '');
model.material('matlnk2').set('link', 'mat2');
model.material('mat2').label('Material 2: Fiber');
model.material('mat2').propertyGroup.create('TransverseIsotropic', 'Transversely_isotropic');
model.material('mat2').propertyGroup('TransverseIsotropic').set('Evect', {'E1_f' 'E2_f'});
model.material('mat2').propertyGroup('TransverseIsotropic').set('nuvect', {'nu12_f' 'nu23_f'});
model.material('mat2').propertyGroup('TransverseIsotropic').set('Gvect1', {'G12_f'});
model.material('mat2').propertyGroup('def').set('density', {'rho_f'});
model.material.create('matlnk3', 'Link', 'comp1');
model.material('matlnk3').label('Material Link 3: Interface');
model.material('matlnk3').selection.geom('geom1', 2);
model.material('matlnk3').selection.named('geom1_sel1');
model.material.create('mat3', 'Common', '');
model.material('matlnk3').set('link', 'mat3');
model.material('mat3').label('Material 3: Interface');
model.material('mat3').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat3').propertyGroup('Enu').set('E', {'E_i'});
model.material('mat3').propertyGroup('Enu').set('nu', {'nu_i'});
model.material('mat3').propertyGroup('def').set('density', {'rho_i'});

model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.named('geom1_pi1_sel1');
model.mesh('mesh1').run('ftri1');
model.mesh('mesh1').create('cpf1', 'CopyFace');
model.mesh('mesh1').feature('cpf1').selection('source').geom(2);
model.mesh('mesh1').feature('cpf1').selection('destination').geom(2);
model.mesh('mesh1').feature('cpf1').selection('source').named('geom1_pi1_sel1');
model.mesh('mesh1').feature('cpf1').selection('destination').named('geom1_pi1_sel2');
model.mesh('mesh1').run('cpf1');
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').run;

model.study('solidcp1std').label('Study: Micromechanics (Material Properties)');

model.sol('solidcp1sol').study('solidcp1std');
model.sol('solidcp1sol').feature.remove('s1');
model.sol('solidcp1sol').feature.remove('v1');
model.sol('solidcp1sol').feature.remove('st1');
model.sol('solidcp1sol').create('st1', 'StudyStep');
model.sol('solidcp1sol').feature('st1').set('study', 'solidcp1std');
model.sol('solidcp1sol').feature('st1').set('studystep', 'solidcp1stat');
model.sol('solidcp1sol').create('v1', 'Variables');
model.sol('solidcp1sol').feature('v1').set('control', 'solidcp1stat');
model.sol('solidcp1sol').create('s1', 'Stationary');
model.sol('solidcp1sol').feature('s1').create('p1', 'Parametric');
model.sol('solidcp1sol').feature('s1').feature.remove('pDef');
model.sol('solidcp1sol').feature('s1').feature('p1').set('control', 'solidcp1stat');
model.sol('solidcp1sol').feature('s1').set('control', 'solidcp1stat');
model.sol('solidcp1sol').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('solidcp1sol').feature('s1').create('fc1', 'FullyCoupled');
model.sol('solidcp1sol').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('solidcp1sol').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('solidcp1sol').feature('s1').create('d1', 'Direct');
model.sol('solidcp1sol').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('solidcp1sol').feature('s1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('solidcp1sol').feature('s1').create('i1', 'Iterative');
model.sol('solidcp1sol').feature('s1').feature('i1').set('linsolver', 'fgmres');
model.sol('solidcp1sol').feature('s1').feature('i1').set('rhob', 400);
model.sol('solidcp1sol').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('solidcp1sol').feature('s1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('solidcp1sol').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('solidcp1sol').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('solidcp1sol').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('solidcp1sol').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('solidcp1sol').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('solidcp1sol').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('solidcp1sol').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('solidcp1sol').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('solidcp1sol').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('solidcp1sol').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('solidcp1sol').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('solidcp1sol').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('solidcp1sol').feature('s1').feature.remove('fcDef');
model.sol('solidcp1sol').attach('solidcp1std');
model.sol('solidcp1sol').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 6, 0);
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('vol1', 'Volume');
model.result('pg1').feature('vol1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('vol1').set('threshold', 'manual');
model.result('pg1').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg1').feature('vol1').set('colortable', 'Rainbow');
model.result('pg1').feature('vol1').set('colortabletrans', 'none');
model.result('pg1').feature('vol1').set('colorscalemode', 'linear');
model.result('pg1').feature('vol1').set('resolution', 'custom');
model.result('pg1').feature('vol1').set('refine', 2);
model.result('pg1').feature('vol1').set('colortable', 'Prism');
model.result('pg1').feature('vol1').create('def', 'Deform');
model.result('pg1').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg1').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 6, 0);
model.result('pg2').set('defaultPlotID', 'stressThinLayer');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').label('Stress, Thin Layer (solid)');
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg2').feature('surf1').set('threshold', 'manual');
model.result('pg2').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg2').feature('surf1').set('colortable', 'Rainbow');
model.result('pg2').feature('surf1').set('colortabletrans', 'none');
model.result('pg2').feature('surf1').set('colorscalemode', 'linear');
model.result('pg2').feature('surf1').set('colortable', 'Prism');
model.result('pg2').feature('surf1').set('resolution', 'custom');
model.result('pg2').feature('surf1').set('refine', 2);
model.result('pg2').feature('surf1').create('sel1', 'Selection');
model.result('pg2').feature('surf1').feature('sel1').selection.geom('geom1', 2);
model.result('pg2').feature('surf1').feature('sel1').selection.set([6 7 8 9]);
model.result('pg2').feature('surf1').create('def', 'Deform');
model.result('pg2').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg2').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result.evaluationGroup.create('solidcp1stdEg', 'EvaluationGroup');
model.result.evaluationGroup('solidcp1stdEg').set('defaultPlotID', 'homogenizedMaterialTablecp1');
model.result.evaluationGroup('solidcp1stdEg').set('data', 'dset1');
model.result.evaluationGroup('solidcp1stdEg').set('includeparameters', 'off');
model.result.evaluationGroup('solidcp1stdEg').setIndex('looplevelinput', 'last', 0);
model.result.evaluationGroup('solidcp1stdEg').label('Material Properties (Study: Micromechanics (Material Properties))');
model.result.evaluationGroup('solidcp1stdEg').create('gmevcp1', 'EvalGlobalMatrix');
model.result.evaluationGroup('solidcp1stdEg').feature('gmevcp1').set('expr', 'root.comp1.solid.cp1.D');
model.result.evaluationGroup('solidcp1stdEg').feature('gmevcp1').set('descr', 'Elasticity matrix');
model.result.evaluationGroup('solidcp1stdEg').run;
model.result('pg1').run;
model.result('pg1').label('Stress, Unit Cell');
model.result('pg1').set('titletype', 'manual');
model.result('pg1').set('title', 'von Mises stress (MPa)');
model.result('pg1').set('plotarrayenable', true);
model.result('pg1').feature('vol1').set('arraydim', '1');
model.result('pg1').run;
model.result('pg1').feature('vol1').set('unit', 'MPa');
model.result('pg1').feature('vol1').create('sel1', 'Selection');
model.result('pg1').feature('vol1').feature('sel1').selection.set([1]);
model.result('pg1').run;
model.result('pg1').feature('vol1').feature.remove('def');
model.result('pg1').run;
model.result('pg1').feature('vol1').set('arraydim', '1');
model.result('pg1').run;
model.result('pg1').feature.duplicate('vol2', 'vol1');
model.result('pg1').feature('vol2').set('arraydim', '1');
model.result('pg1').run;
model.result('pg1').feature('vol2').set('inheritplot', 'vol1');
model.result('pg1').feature('vol2').set('applytodatasetedgesplotarr', false);
model.result('pg1').run;
model.result('pg1').feature('vol2').feature('sel1').selection.set([2]);
model.result('pg2').run;
model.result('pg1').feature.copy('surf1', 'pg2/surf1');
model.result('pg2').feature.remove('surf1');
model.result('pg1').feature('surf1').set('arraydim', '1');
model.result('pg1').feature('surf1').set('unit', 'MPa');
model.result('pg1').feature('surf1').set('inheritplot', 'vol1');
model.result('pg1').feature('surf1').set('applytodatasetedgesplotarr', false);
model.result('pg1').run;
model.result('pg1').feature('surf1').feature.remove('def');
model.result('pg1').run;
model.result('pg1').create('tlan1', 'TableAnnotation');
model.result('pg1').feature('tlan1').set('arraydim', '1');
model.result('pg1').feature('tlan1').set('source', 'localtable');
model.result('pg1').feature('tlan1').setIndex('localtablematrix', '-l/4', 0, 0);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', '-1.2*l', 0, 1);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 0, 0, 2);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 'Matrix', 0, 3);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 'l', 1, 0);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', '-1.2*l', 1, 1);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 0, 1, 2);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 'Fiber', 1, 3);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', '2.2*l', 2, 0);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', '-1.2*l', 2, 1);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 0, 2, 2);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 'Interface', 2, 3);
model.result('pg1').feature('tlan1').set('showpoint', false);
model.result('pg1').run;

model.view('view1').set('showgrid', false);

model.result('pg1').setIndex('looplevel', 1, 0);
model.result('pg1').set('paramindicator', 'Load case 1');
model.result('pg1').run;
model.result('pg1').setIndex('looplevel', 2, 0);
model.result('pg1').set('paramindicator', 'Load case 2');
model.result('pg1').run;
model.result('pg1').setIndex('looplevel', 5, 0);
model.result('pg1').set('paramindicator', 'Load case 5');
model.result('pg1').run;
model.result('pg1').setIndex('looplevel', 6, 0);
model.result('pg1').set('paramindicator', 'Load case 6');
model.result('pg1').run;
model.result('pg2').run;
model.result.remove('pg2');
model.result('pg1').run;

model.nodeGroup.create('grp1', 'Results');
model.nodeGroup('grp1').set('type', 'plotgroup');
model.nodeGroup('grp1').add('plotgroup', 'pg1');
model.nodeGroup('grp1').label('Micromechanics (Material Properties)');

model.physics('solid').feature('cp1').runCommand('createMaterialbyValue');

model.modelNode.create('comp2', true);

model.geom.create('geom2', 3);
model.geom('geom2').model('comp2');

model.mesh.create('mesh2', 'geom2');

model.modelNode('comp2').label('Component: Macromechanics (Global Response)');

model.geom('geom2').create('cyl1', 'Cylinder');
model.geom('geom2').feature('cyl1').set('type', 'surface');
model.geom('geom2').feature('cyl1').set('r', 'rc');
model.geom('geom2').feature('cyl1').set('h', 'hc');
model.geom('geom2').feature('cyl1').set('axistype', 'x');
model.geom('geom2').run('cyl1');

model.view('view3').set('showgrid', false);

model.geom('geom2').run;

model.coordSystem('sys2').set('mastercoordsystcomp', '1');

model.physics.create('lshell', 'LayeredShell', 'geom2');
model.physics('lshell').model('comp2');

model.study('solidcp1std').feature('solidcp1stat').setSolveFor('/physics/lshell', false);

model.physics('lshell').prop('LayerSelection').set('bndType', 'allShell');

model.material.create('lmat1', 'LayeredMaterial', '');
model.material('lmat1').label('Layered Material: [90/0]_2');
model.material('lmat1').setIndex('link', 'solidcp1mat', 0);
model.material('lmat1').setIndex('rotation', 90, 0);
model.material('lmat1').setIndex('thickness', 'th', 0);
model.material('lmat1').setIndex('layername', 'Layer 2', 1);
model.material('lmat1').setIndex('link', 'solidcp1mat', 1);
model.material('lmat1').setIndex('rotation', 90, 1);
model.material('lmat1').setIndex('thickness', 'th', 1);
model.material('lmat1').setIndex('meshPoints', 2, 1);
model.material('lmat1').setIndex('tag', 'lmat1_2', 1);
model.material('lmat1').setIndex('layername', 'Layer 2', 1);
model.material('lmat1').setIndex('link', 'solidcp1mat', 1);
model.material('lmat1').setIndex('rotation', 90, 1);
model.material('lmat1').setIndex('thickness', 'th', 1);
model.material('lmat1').setIndex('meshPoints', 2, 1);
model.material('lmat1').setIndex('tag', 'lmat1_2', 1);
model.material('lmat1').setIndex('rotation', 0, 1);
model.material.create('llmat1', 'LayeredMaterialLink', 'comp2');
model.material('llmat1').set('transform', 'repeated');
model.material('llmat1').set('repeated', 2);
model.material('llmat1').set('widthRatio', 0.4);

model.physics('lshell').feature('lemm1').set('SolidModel', 'Anisotropic');
model.physics('lshell').feature('lemm1').create('sf1', 'Safety', 2);
model.physics('lshell').feature('lemm1').feature('sf1').set('FailureCriterion', 'Hashin Orthotropic');
model.physics('lshell').feature('lemm1').feature.duplicate('sf2', 'sf1');
model.physics('lshell').feature('lemm1').feature('sf2').set('FailureCriterion', 'Puck Orthotropic');
model.physics('lshell').feature('lemm1').feature('sf2').set('ptl', 0.35);
model.physics('lshell').feature('lemm1').feature('sf2').set('pcl', 0.3);

model.material('solidcp1mat').propertyGroup('def').set('density', {'rho_l'});
model.material('solidcp1mat').propertyGroup.create('OrthotropicStrengthParameters', 'Orthotropic_strength_parameters_in_Voigt_notation');
model.material('solidcp1mat').propertyGroup('OrthotropicStrengthParameters').set('sigmats', {'Sigmats1' 'Sigmats2' 'Sigmats3'});
model.material('solidcp1mat').propertyGroup('OrthotropicStrengthParameters').set('sigmacs', {'Sigmacs1' 'Sigmacs2' 'Sigmacs3'});
model.material('solidcp1mat').propertyGroup('OrthotropicStrengthParameters').set('sigmass', {'Sigmass23' 'Sigmass13' 'Sigmass12'});
model.material('solidcp1mat').propertyGroup('OrthotropicStrengthParameters').set('epsilont1', {'epsilonts1'});
model.material('solidcp1mat').propertyGroup('OrthotropicStrengthParameters').set('epsilonc1', {'epsiloncs1'});
model.material('solidcp1mat').propertyGroup('OrthotropicStrengthParameters').set('Ef1', {'E1_f'});
model.material('solidcp1mat').propertyGroup('OrthotropicStrengthParameters').set('nuf12', {'nu12_f'});
model.material('solidcp1mat').propertyGroup('OrthotropicStrengthParameters').set('sigma1D', {'Sigma1D'});

model.physics('lshell').create('fix1', 'Fixed', 1);
model.physics('lshell').feature('fix1').selection.set([9 10 11 12]);
model.physics('lshell').create('bndl1', 'BoundaryLoad', 1);
model.physics('lshell').feature('bndl1').selection.set([1 2 4 6]);
model.physics('lshell').feature('bndl1').set('LoadType', 'TotalForce');
model.physics('lshell').feature('bndl1').set('Ftot', {'0' '0' '-5E4'});

model.mesh('mesh2').create('map1', 'Map');
model.mesh('mesh2').feature('map1').selection.all;
model.mesh('mesh2').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh2').feature('map1').feature('dis1').selection.all;
model.mesh('mesh2').feature('map1').feature('dis1').set('numelem', 20);
model.mesh('mesh2').run;

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/solid', false);
model.study('std1').feature('stat').setSolveFor('/physics/lshell', true);
model.study('std1').label('Study: Macromechanics (Global Response)');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.dataset.create('dset3lshelllshl', 'LayeredMaterial');
model.result.dataset('dset3lshelllshl').set('data', 'dset3');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'dset3lshelllshl');
model.result('pg2').set('defaultPlotID', 'stress');
model.result('pg2').label('Stress (lshell)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('showlegends', true);
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'lshell.misesGp'});
model.result('pg2').feature('surf1').set('threshold', 'manual');
model.result('pg2').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg2').feature('surf1').set('colortable', 'Rainbow');
model.result('pg2').feature('surf1').set('colortabletrans', 'none');
model.result('pg2').feature('surf1').set('colorscalemode', 'linear');
model.result('pg2').feature('surf1').set('colortable', 'Prism');
model.result('pg2').feature('surf1').create('def', 'Deform');
model.result('pg2').feature('surf1').feature('def').set('expr', {'u2' 'v2' 'w2'});
model.result('pg2').feature('surf1').feature('def').set('descr', 'Displacement field (material and geometry frames)');
model.result('pg2').run;
model.result.dataset('dset3lshelllshl').set('scale', 5);
model.result('pg2').run;
model.result('pg2').set('titletype', 'manual');
model.result('pg2').set('title', 'von Mises stress (MPa)');
model.result('pg2').set('showlegendsmaxmin', true);
model.result('pg2').run;
model.result('pg2').feature('surf1').set('unit', 'MPa');
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').set('data', 'dset3');
model.result('pg3').set('defaultPlotID', 'stressSlice');
model.result('pg3').label('Stress, Slice (lshell)');
model.result('pg3').set('showlegends', true);
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').create('lss1', 'LayeredMaterialSlice');
model.result('pg3').feature('lss1').set('expr', {'lshell.misesGp'});
model.result('pg3').feature('lss1').set('threshold', 'manual');
model.result('pg3').feature('lss1').set('thresholdvalue', 0.2);
model.result('pg3').feature('lss1').set('colortable', 'Prism');
model.result('pg3').feature('lss1').set('colortabletrans', 'none');
model.result('pg3').feature('lss1').set('colorscalemode', 'linear');
model.result('pg3').feature('lss1').set('locdef', 'relative');
model.result('pg3').feature('lss1').set('localzrel', 'lshell.z');
model.result('pg3').feature('lss1').create('def', 'Deform');
model.result('pg3').feature('lss1').feature('def').set('expr', {'u2' 'v2' 'w2'});
model.result('pg3').feature('lss1').feature('def').set('descr', 'Displacement field (material and geometry frames)');
model.result('pg3').label('Stress, Slice (lshell)');
model.result('pg3').run;
model.result('pg3').label('von Mises Stress, Slice');
model.result('pg3').set('edges', false);
model.result('pg3').set('view', 'new');
model.result('pg3').run;

model.view('view5').camera.set('zoomanglefull', '20.9914054870605470');
model.view('view5').camera.setIndex('position', '-2.50', 0);
model.view('view5').camera.setIndex('position', '-4.005620479583740', 1);
model.view('view5').camera.setIndex('position', '3.3552153110504150', 2);
model.view('view5').camera.setIndex('target', '0.18750', 0);
model.view('view5').camera.setIndex('target', 4.76837158203125E-7, 1);
model.view('view5').camera.setIndex('target', '0.35100030899047850', 2);
model.view('view5').camera.setIndex('up', '0.30869743227958680', 0);
model.view('view5').camera.setIndex('up', '0.411596536636352540', 1);
model.view('view5').camera.setIndex('up', '0.85749304294586180', 2);
model.view('view5').camera.setIndex('rotationpoint', '0.56250', 0);
model.view('view5').camera.setIndex('rotationpoint', '00', 1);
model.view('view5').camera.set('rotationpoint', {'0.56250' '00' '0.349500030279159550'});
model.view('view5').camera.setIndex('viewoffset', '-0.187174350023269650', 0);
model.view('view5').camera.setIndex('viewoffset', '-0.0479259826242923740', 1);
model.view('view5').set('showgrid', false);
model.view('view5').set('locked', true);
model.view('view5').set('scenelight', false);

model.result('pg3').run;
model.result('pg3').feature('lss1').set('titletype', 'manual');
model.result('pg3').feature('lss1').set('title', 'von Mises stress (MPa)');
model.result('pg3').feature('lss1').set('unit', 'MPa');
model.result('pg3').feature('lss1').set('locdef', 'interfaces');
model.result('pg3').feature('lss1').set('slicedisplacement', 'rectangular');
model.result('pg3').feature('lss1').set('orientationrectangular', 'zx');
model.result('pg3').feature('lss1').set('xseparation', 0.3);
model.result('pg3').feature('lss1').set('zseparation', 0.7);
model.result('pg3').feature('lss1').set('showdescriptions', true);
model.result('pg3').feature('lss1').set('descriptionseparation', 0.6);
model.result('pg3').feature('lss1').set('resolution', 'norefine');
model.result('pg3').run;
model.result('pg3').feature('lss1').feature('def').active(false);
model.result('pg3').run;
model.result('pg3').run;
model.result.numerical.create('max1', 'MaxSurface');
model.result.numerical('max1').set('data', 'dset3');
model.result.numerical('max1').selection.all;
model.result.numerical('max1').setIndex('expr', 'lshell.atxd1(0,lshell.mises)', 0);
model.result.numerical('max1').setIndex('descr', 'von Mises stress in the inner layer', 0);
model.result.numerical('max1').setIndex('expr', 'lshell.atxd1(lshell.d,lshell.mises)', 1);
model.result.numerical('max1').setIndex('descr', 'von Mises stress in the outer layer', 1);
model.result.numerical('max1').set('includepos', true);
model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').comments('Surface Maximum 1');
model.result.numerical('max1').set('table', 'tbl1');
model.result.numerical('max1').setResult;
model.result.dataset.create('cpt1', 'CutPoint3D');
model.result.dataset('cpt1').set('data', 'dset3');
model.result.dataset('cpt1').set('pointx', 0.5);
model.result.dataset('cpt1').set('pointy', 0);
model.result.dataset('cpt1').set('pointz', '-0.1[m]');
model.result.dataset('cpt1').set('snapping', 'boundary');
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').set('data', 'dset3');
model.result('pg4').set('defaultPlotID', 'stressThroughThickness');
model.result('pg4').set('showlegends', true);
model.result('pg4').create('thr1', 'ThroughThickness');
model.result('pg4').feature('thr1').set('expr', {'lshell.misesGp'});
model.result('pg4').feature('thr1').set('legend', true);
model.result('pg4').feature('thr1').set('posentry', 'selection');
model.result('pg4').feature('thr1').selection.geom('geom2', 0);
model.result('pg4').feature('thr1').selection.set([1]);
model.result('pg4').label('Stress, Through Thickness (lshell)');
model.result('pg4').label('Stress, Through Thickness (lshell)');
model.result('pg4').run;
model.result('pg4').label('von Mises Stress, Through Thickness');
model.result('pg4').set('showlegends', false);
model.result('pg4').run;
model.result('pg4').feature('thr1').set('data', 'cpt1');
model.result('pg4').feature('thr1').set('unit', 'MPa');
model.result('pg4').run;
model.result.dataset.create('dset3lshelllshlsf', 'LayeredMaterial');
model.result.dataset('dset3lshelllshlsf').label('Layered Material 2 (Safety)');
model.result.dataset('dset3lshelllshlsf').set('data', 'dset3');
model.result.dataset('dset3lshelllshlsf').set('evaluatein', 'layermidplanes');
model.result.dataset('dset3lshelllshlsf').set('scale', '10*0.057445626465380296');
model.result.dataset('dset3lshelllshlsf').set('defaultPlotIDs', {'failureIndexlemm1sf1|lshell' 'failureIndexlemm1sf2|lshell'});
model.result.dataset('dset3lshelllshlsf').label('Layered Material 2 (Safety)');
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').set('data', 'dset3lshelllshlsf');
model.result('pg5').label('Failure Index (lshell)');
model.result('pg5').label('Failure Index (Safety 1)');
model.result('pg5').set('defaultPlotID', 'failureIndexlemm1sf1');
model.result('pg5').set('showlegends', true);
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', {'lshell.lemm1.sf1.f_i'});
model.result('pg5').feature('surf1').set('threshold', 'manual');
model.result('pg5').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg5').feature('surf1').set('colortable', 'Traffic');
model.result('pg5').feature('surf1').set('colortabletrans', 'none');
model.result('pg5').feature('surf1').set('colorscalemode', 'linear');
model.result('pg5').feature('surf1').set('descractive', false);
model.result('pg5').label('Failure Index (Safety 1)');
model.result('pg5').run;
model.result('pg5').label('Hashin Failure Index');
model.result('pg5').set('titletype', 'manual');
model.result('pg5').set('title', 'Hashin Failure Index');
model.result('pg5').set('showlegendsmaxmin', true);
model.result.dataset('dset3lshelllshlsf').set('scale', 12);
model.result('pg5').run;
model.result('pg5').feature('surf1').create('mrkr1', 'Marker');
model.result('pg5').run;
model.result('pg5').feature('surf1').feature('mrkr1').set('display', 'max');
model.result('pg5').feature('surf1').feature('mrkr1').set('precision', 3);
model.result('pg5').feature('surf1').feature('mrkr1').set('pointradius', 4);
model.result('pg5').feature('surf1').feature('mrkr1').set('backgroundcolor', 'gray');
model.result('pg5').feature('surf1').feature('mrkr1').set('anchorpoint', 'lowerright');
model.result('pg5').run;
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').set('data', 'dset3lshelllshlsf');
model.result('pg6').label('Failure Index (lshell)');
model.result('pg6').label('Failure Index (Safety 2)');
model.result('pg6').set('defaultPlotID', 'failureIndexlemm1sf2');
model.result('pg6').set('showlegends', true);
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', {'lshell.lemm1.sf2.f_i'});
model.result('pg6').feature('surf1').set('threshold', 'manual');
model.result('pg6').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg6').feature('surf1').set('colortable', 'Traffic');
model.result('pg6').feature('surf1').set('colortabletrans', 'none');
model.result('pg6').feature('surf1').set('colorscalemode', 'linear');
model.result('pg6').feature('surf1').set('descractive', false);
model.result('pg6').label('Failure Index (Safety 2)');
model.result('pg6').run;
model.result('pg6').label('Puck Failure Index');
model.result('pg6').set('titletype', 'manual');
model.result('pg6').set('title', 'Puck Failure Index');
model.result('pg6').set('showlegendsmaxmin', true);
model.result('pg6').run;
model.result('pg6').feature('surf1').create('mrkr1', 'Marker');
model.result('pg6').run;
model.result('pg6').feature('surf1').feature('mrkr1').set('display', 'max');
model.result('pg6').feature('surf1').feature('mrkr1').set('precision', 3);
model.result('pg6').feature('surf1').feature('mrkr1').set('pointradius', 4);
model.result('pg6').feature('surf1').feature('mrkr1').set('backgroundcolor', 'gray');
model.result('pg6').feature('surf1').feature('mrkr1').set('anchorpoint', 'lowerright');
model.result('pg6').run;
model.result.evaluationGroup.create('eg1', 'EvaluationGroup');
model.result.evaluationGroup('eg1').label('Hashin Failure Indexes (Study: Macromechanics (Global Response))');
model.result.evaluationGroup('eg1').set('data', 'dset3lshelllshlsf');
model.result.evaluationGroup('eg1').create('max1', 'MaxVolume');
model.result.evaluationGroup('eg1').feature('max1').set('expr', {'lshell.lemm1.sf1.f_ifT'});
model.result.evaluationGroup('eg1').feature('max1').set('descr', {'Hashin fiber tensile failure index'});
model.result.evaluationGroup('eg1').feature('max1').set('expr', {'lshell.lemm1.sf1.f_ifT' 'lshell.lemm1.sf1.f_ifC'});
model.result.evaluationGroup('eg1').feature('max1').set('descr', {'Hashin fiber tensile failure index' 'Hashin fiber compressive failure index'});
model.result.evaluationGroup('eg1').feature('max1').set('expr', {'lshell.lemm1.sf1.f_ifT' 'lshell.lemm1.sf1.f_ifC' 'lshell.lemm1.sf1.f_imT'});
model.result.evaluationGroup('eg1').feature('max1').set('descr', {'Hashin fiber tensile failure index' 'Hashin fiber compressive failure index' 'Hashin matrix tensile failure index'});
model.result.evaluationGroup('eg1').feature('max1').set('expr', {'lshell.lemm1.sf1.f_ifT' 'lshell.lemm1.sf1.f_ifC' 'lshell.lemm1.sf1.f_imT' 'lshell.lemm1.sf1.f_imC'});
model.result.evaluationGroup('eg1').feature('max1').set('descr', {'Hashin fiber tensile failure index' 'Hashin fiber compressive failure index' 'Hashin matrix tensile failure index' 'Hashin matrix compressive failure index'});
model.result.evaluationGroup('eg1').feature('max1').set('expr', {'lshell.lemm1.sf1.f_ifT' 'lshell.lemm1.sf1.f_ifC' 'lshell.lemm1.sf1.f_imT' 'lshell.lemm1.sf1.f_imC' 'lshell.lemm1.sf1.f_iiT'});
model.result.evaluationGroup('eg1').feature('max1').set('descr', {'Hashin fiber tensile failure index' 'Hashin fiber compressive failure index' 'Hashin matrix tensile failure index' 'Hashin matrix compressive failure index' 'Hashin interlaminar tensile failure index'});
model.result.evaluationGroup('eg1').feature('max1').set('expr', {'lshell.lemm1.sf1.f_ifT' 'lshell.lemm1.sf1.f_ifC' 'lshell.lemm1.sf1.f_imT' 'lshell.lemm1.sf1.f_imC' 'lshell.lemm1.sf1.f_iiT' 'lshell.lemm1.sf1.f_iiC'});
model.result.evaluationGroup('eg1').feature('max1').set('descr', {'Hashin fiber tensile failure index' 'Hashin fiber compressive failure index' 'Hashin matrix tensile failure index' 'Hashin matrix compressive failure index' 'Hashin interlaminar tensile failure index' 'Hashin interlaminar compressive failure index'});
model.result.evaluationGroup('eg1').set('transpose', true);
model.result.evaluationGroup('eg1').run;
model.result.evaluationGroup.create('eg2', 'EvaluationGroup');
model.result.evaluationGroup('eg2').label('Puck Failure Indexes (Study: Macromechanics (Global Response))');
model.result.evaluationGroup('eg2').set('data', 'dset3lshelllshlsf');
model.result.evaluationGroup('eg2').create('max1', 'MaxVolume');
model.result.evaluationGroup('eg2').feature('max1').set('expr', {'lshell.lemm1.sf2.f_ifT'});
model.result.evaluationGroup('eg2').feature('max1').set('descr', {'Puck fiber tensile failure index'});
model.result.evaluationGroup('eg2').feature('max1').set('expr', {'lshell.lemm1.sf2.f_ifT' 'lshell.lemm1.sf2.f_ifC'});
model.result.evaluationGroup('eg2').feature('max1').set('descr', {'Puck fiber tensile failure index' 'Puck fiber compressive failure index'});
model.result.evaluationGroup('eg2').feature('max1').set('expr', {'lshell.lemm1.sf2.f_ifT' 'lshell.lemm1.sf2.f_ifC' 'lshell.lemm1.sf2.f_imA'});
model.result.evaluationGroup('eg2').feature('max1').set('descr', {'Puck fiber tensile failure index' 'Puck fiber compressive failure index' 'Puck interfiber mode A failure index'});
model.result.evaluationGroup('eg2').feature('max1').set('expr', {'lshell.lemm1.sf2.f_ifT' 'lshell.lemm1.sf2.f_ifC' 'lshell.lemm1.sf2.f_imA' 'lshell.lemm1.sf2.f_imB'});
model.result.evaluationGroup('eg2').feature('max1').set('descr', {'Puck fiber tensile failure index' 'Puck fiber compressive failure index' 'Puck interfiber mode A failure index' 'Puck interfiber mode B failure index'});
model.result.evaluationGroup('eg2').feature('max1').set('expr', {'lshell.lemm1.sf2.f_ifT' 'lshell.lemm1.sf2.f_ifC' 'lshell.lemm1.sf2.f_imA' 'lshell.lemm1.sf2.f_imB' 'lshell.lemm1.sf2.f_imC'});
model.result.evaluationGroup('eg2').feature('max1').set('descr', {'Puck fiber tensile failure index' 'Puck fiber compressive failure index' 'Puck interfiber mode A failure index' 'Puck interfiber mode B failure index' 'Puck interfiber mode C failure index'});
model.result.evaluationGroup('eg2').set('transpose', true);
model.result.evaluationGroup('eg2').run;
model.result('pg2').run;

model.nodeGroup.create('grp2', 'Results');
model.nodeGroup('grp2').set('type', 'plotgroup');
model.nodeGroup.move('grp2', 2);
model.nodeGroup('grp2').add('plotgroup', 'pg2');
model.nodeGroup('grp2').add('plotgroup', 'pg3');
model.nodeGroup('grp2').add('plotgroup', 'pg4');
model.nodeGroup('grp2').add('plotgroup', 'pg5');
model.nodeGroup('grp2').add('plotgroup', 'pg6');
model.nodeGroup('grp2').label('Macromechanics (Global Response)');

model.param.create('par4');
model.param('par4').label('Material Point Location');
model.param('par4').set('X0', '0[m]');
model.param('par4').descr('X0', 'Material point, X coordinate');
model.param('par4').set('Y0', '0[m]');
model.param('par4').descr('Y0', 'Material point, Y coordinate');
model.param('par4').set('Z0', '-0.1[m]');
model.param('par4').descr('Z0', 'Material point, Z coordinate');
model.param('par4').paramCase.create('case1');
model.param('par4').paramCase.duplicate('case2', 'case1');
model.param('par4').paramCase('case2').set('X0', 'hc/2');
model.param('par4').paramCase('case2').set('Y0', '0[m]');
model.param('par4').paramCase('case2').set('Z0', '-0.1[m]');
model.param('par4').paramCase.duplicate('case3', 'case2');
model.param('par4').paramCase('case3').set('X0', 'hc');
model.param('par4').paramCase('case3').set('Y0', '0[m]');
model.param('par4').paramCase('case3').set('Z0', '-0.1[m]');
model.param('par4').paramCase.duplicate('case4', 'case3');
model.param('par4').paramCase('case4').set('X0', '0[m]');
model.param('par4').paramCase('case4').set('Y0', '0[m]');
model.param('par4').paramCase('case4').set('Z0', '0.1[m]');
model.param('par4').paramCase.duplicate('case5', 'case4');
model.param('par4').paramCase('case5').set('X0', 'hc/2');
model.param('par4').paramCase('case5').set('Y0', '0[m]');
model.param('par4').paramCase('case5').set('Z0', '0.1[m]');
model.param('par4').paramCase.duplicate('case6', 'case5');
model.param('par4').paramCase('case6').set('X0', 'hc');
model.param('par4').paramCase('case6').set('Y0', '0[m]');
model.param('par4').paramCase('case6').set('Z0', '0.1[m]');

model.modelNode.copy('comp3', 'comp1');
model.modelNode('comp3').label('Component: Micromechanics (Local Response)');

model.geom('geom3').run('pi1');
model.geom('geom3').create('rot1', 'Rotate');
model.geom('geom3').feature('rot1').selection('input').set({'pi1'});
model.geom('geom3').feature('rot1').set('rot', 'if(xd==0,90[deg],0)');
model.geom('geom3').run('rot1');

model.coordSystem.create('sys4', 'geom3', 'Rotated');

model.geom('geom3').run;

model.coordSystem('sys4').set('angle', {'if(xd==0,90[deg],0)' '0' '0'});
model.coordSystem('sys3').set('mastersystem', 'sys4');
model.coordSystem('sys3').set('mastercoordsystcomp', '1');

model.variable.create('var1');
model.variable('var1').model('comp3');

% To import content from file, use:
% model.variable('var1').loadFile('FILENAME');
model.variable('var1').set('g_f', 'if(solid2.sl11>=0,solid2.sl11/Sigmats1_f,-solid2.sl11/Sigmacs1_f)-1', 'Failure criterion of fiber');
model.variable('var1').set('sf_f', 'if(solid2.sl11>=0,Sigmats1_f/solid2.sl11,Sigmacs1_f/-solid2.sl11)', 'Safety factor of fiber failure criterion');
model.variable('var1').set('g_m', 'solid2.mises^2/(Sigmats_m*Sigmacs_m)+(1/Sigmats_m-1/Sigmacs_m)*solid2.I1s-1', 'Failure criterion of matrix');
model.variable('var1').set('a', 'solid2.mises^2/(Sigmats_m*Sigmacs_m)', 'Coefficient of quadratic equation');
model.variable('var1').set('b', '(1/Sigmats_m-1/Sigmats_m)*solid2.I1s', 'Coefficient of quadratic equation');
model.variable('var1').set('c', '-1', 'Coefficient of quadratic equation');
model.variable('var1').set('r1', '(-b+sqrt(b^2-4*a*c))/(2*a)', 'First root');
model.variable('var1').set('r2', '(-b-sqrt(b^2-4*a*c))/(2*a)', 'Second root');
model.variable('var1').set('sf_m', 'r1*(r1>0)*(r2<=0)+r2*(r1<=0)*(r2>0)+min(r1,r2)*(r1>0)*(r2>0)', 'Safety factor of matrix failure criterion');
model.variable('var1').set('Tax', 'solid2.sxx*solid2.nx+solid2.sxy*solid2.ny+solid2.sxz*solid2.nz', 'Traction, x-component');
model.variable('var1').set('Tay', 'solid2.sxy*solid2.nx+solid2.syy*solid2.ny+solid2.syz*solid2.nz', 'Traction, y-component');
model.variable('var1').set('Taz', 'solid2.sxz*solid2.nx+solid2.syz*solid2.ny+solid2.szz*solid2.nz', 'Traction, z-component');
model.variable('var1').set('Ta1', 'solid2.sysT11*Tax+solid2.sysT21*Tay+solid2.sysT31*Taz', 'Traction, tangential component');
model.variable('var1').set('Ta2', 'solid2.sysT12*Tax+solid2.sysT22*Tay+solid2.sysT32*Taz', 'Traction, circumferential component');
model.variable('var1').set('Ta3', 'solid2.sysT13*Tax+solid2.sysT23*Tay+solid2.sysT33*Taz', 'Traction, normal component');
model.variable('var1').set('g_i', '(if(Ta3>=0,Ta3,0)/Sigman_i)^2+(Ta1/Sigmas_i)^2-1', 'Failure criterion of interface');
model.variable('var1').set('sf_i', '1/sqrt(g_i+1)', 'Safety factor of interface failure criterion');

model.physics('solid2').feature('lemm1').set('coordinateSystem', 'sys4');
model.physics('solid2').feature('lemm1').create('sf1', 'Safety', 3);
model.physics('solid2').feature('lemm1').feature('sf1').label('Fiber Failure Criterion');
model.physics('solid2').feature('lemm1').feature('sf1').selection.set([2]);
model.physics('solid2').feature('lemm1').feature('sf1').set('FailureCriterion', 'User defined');
model.physics('solid2').feature('lemm1').feature('sf1').set('gSolid', 'g_f');
model.physics('solid2').feature('lemm1').feature('sf1').set('rSolid', 'sf_f');
model.physics('solid2').feature('lemm1').create('sf2', 'Safety', 3);
model.physics('solid2').feature('lemm1').feature('sf2').label('Matrix Failure Criterion');
model.physics('solid2').feature('lemm1').feature('sf2').selection.set([1]);
model.physics('solid2').feature('lemm1').feature('sf2').set('FailureCriterion', 'User defined');
model.physics('solid2').feature('lemm1').feature('sf2').set('gSolid', 'g_m');
model.physics('solid2').feature('lemm1').feature('sf2').set('rSolid', 'sf_m');
model.physics('solid2').feature('tl1').feature('lemm1').create('sf1', 'Safety', 2);
model.physics('solid2').feature('tl1').feature('lemm1').feature('sf1').label('Interface Failure Criterion');
model.physics('solid2').feature('tl1').feature('lemm1').feature('sf1').set('FailureCriterion', 'User defined');
model.physics('solid2').feature('tl1').feature('lemm1').feature('sf1').set('gSolid', 'g_i');
model.physics('solid2').feature('tl1').feature('lemm1').feature('sf1').set('rSolid', 'sf_i');
model.physics('solid2').feature('cp1').set('BoundaryExpansion', 'Mixed');
model.physics('solid2').feature('cp1').set('eavgi1', 'comp2.at2(X0,Y0,Z0,comp2.lshell.atxd1(xd,comp2.lshell.eXX))*para');
model.physics('solid2').feature('cp1').set('eavgi2', 'comp2.at2(X0,Y0,Z0,comp2.lshell.atxd1(xd,comp2.lshell.eYY))*para');
model.physics('solid2').feature('cp1').set('eavgi3', 'comp2.at2(X0,Y0,Z0,comp2.lshell.atxd1(xd,comp2.lshell.eZZ))*para');
model.physics('solid2').feature('cp1').set('eavgi4', 'comp2.at2(X0,Y0,Z0,comp2.lshell.atxd1(xd,comp2.lshell.eXY))*para');
model.physics('solid2').feature('cp1').set('eavgi5', 'comp2.at2(X0,Y0,Z0,comp2.lshell.atxd1(xd,comp2.lshell.eYZ))*para');
model.physics('solid2').feature('cp1').set('eavgi6', 'comp2.at2(X0,Y0,Z0,comp2.lshell.atxd1(xd,comp2.lshell.eXZ))*para');

model.mesh('mesh3').run('ftri1');
model.mesh('mesh3').run('cpf1');

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/solid', false);
model.study('std2').feature('stat').setSolveFor('/physics/lshell', false);
model.study('std2').feature('stat').setSolveFor('/physics/solid2', true);
model.study('std2').label('Study: Micromechanics (Local Response)');
model.study('std2').setGenPlots(false);
model.study('std2').create('param', 'Parametric');
model.study('std2').feature('param').set('sweeptype', 'switch');
model.study('std2').feature('param').setIndex('switchname', 'default', 0);
model.study('std2').feature('param').setIndex('switchcase', 'all', 0);
model.study('std2').feature('param').setIndex('switchlistarr', '', 0);
model.study('std2').feature('param').setIndex('switchname', 'default', 0);
model.study('std2').feature('param').setIndex('switchcase', 'all', 0);
model.study('std2').feature('param').setIndex('switchlistarr', '', 0);
model.study('std2').feature('param').setIndex('switchname', 'par4', 0);
model.study('std2').create('param2', 'Parametric');
model.study('std2').feature('param2').setIndex('pname', 'E_i', 0);
model.study('std2').feature('param2').setIndex('plistarr', '', 0);
model.study('std2').feature('param2').setIndex('punit', 'Pa', 0);
model.study('std2').feature('param2').setIndex('pname', 'E_i', 0);
model.study('std2').feature('param2').setIndex('plistarr', '', 0);
model.study('std2').feature('param2').setIndex('punit', 'Pa', 0);
model.study('std2').feature('param2').setIndex('pname', 'xd', 0);
model.study('std2').feature('param2').setIndex('plistarr', '0 4*th', 0);
model.study('std2').feature('param2').setIndex('punit', 'mm', 0);
model.study('std2').feature('stat').set('usesol', true);
model.study('std2').feature('stat').set('notsolmethod', 'sol');
model.study('std2').feature('stat').set('notstudy', 'std1');

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol2').feature('s1').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol2').feature('s1').feature('d1').label('Suggested Direct Solver (solid2)');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'fgmres');
model.sol('sol2').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol2').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol2').feature('s1').feature('i1').label('Suggested Iterative Solver (solid2)');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std2');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol2');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {});
model.batch('p1').set('plistarr', {});
model.batch('p1').set('sweeptype', 'switch');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std2');
model.batch('p1').set('control', 'param');
model.batch.create('p2', 'Parametric');
model.batch('p2').study('std2');
model.batch('p2').create('jo1', 'Jobseq');
model.batch('p2').feature('jo1').set('seq', 'p1');
model.batch('p2').set('pname', {'xd'});
model.batch('p2').set('plistarr', {'0 4*th'});
model.batch('p2').set('sweeptype', 'sparse');
model.batch('p2').set('err', 'on');
model.batch('p2').attach('std2');
model.batch('p2').set('control', 'param2');

model.sol.create('sol3');
model.sol('sol3').study('std2');
model.sol('sol3').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol3');
model.batch('p2').run('compute');

model.nodeGroup.duplicate('grp3', 'grp1');
model.nodeGroup('grp3').label('Micromechanics (Local Response)');

model.result('pg7').run;
model.result('pg7').label('Stress, Unit Cell (At First Material Point in Inner Layer)');
model.result('pg7').set('data', 'dset9');
model.result('pg7').setIndex('looplevel', 1, 1);
model.result('pg7').setIndex('looplevel', 1, 0);
model.result('pg7').set('paramindicator', '');
model.result('pg7').feature('vol1').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('vol1').set('expr', 'solid2.mises');
model.result('pg7').feature('vol1').set('unit', 'MPa');
model.result('pg7').run;
model.result('pg7').feature('vol1').feature('sel1').selection.set([1]);
model.result('pg7').feature('vol2').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('vol2').set('expr', 'solid2.mises');
model.result('pg7').feature('vol2').set('unit', 'MPa');
model.result('pg7').run;
model.result('pg7').feature('vol2').feature('sel1').selection.set([2]);
model.result('pg7').feature('surf1').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('surf1').set('expr', 'solid2.mises');
model.result('pg7').feature('surf1').set('unit', 'MPa');
model.result('pg7').run;
model.result('pg7').feature('surf1').feature('sel1').selection.set([6 7 8 9]);
model.result('pg7').run;
model.result.create('pg8', 'PlotGroup3D');

model.nodeGroup('grp3').add('plotgroup', 'pg8');

model.result('pg8').run;
model.result('pg8').label('Stress, Unit Cell (At Multiple Material Points)');
model.result('pg8').set('data', 'dset9');
model.result('pg8').set('titletype', 'manual');
model.result('pg8').set('title', 'von Mises stress (MPa)');
model.result('pg8').set('paramindicator', '');
model.result('pg8').set('edges', false);
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').feature('surf1').set('data', 'dset9');
model.result('pg8').feature('surf1').setIndex('looplevel', 1, 1);
model.result('pg8').feature('surf1').setIndex('looplevel', 1, 0);
model.result('pg8').feature('surf1').set('expr', 'solid2.mises');
model.result('pg8').feature('surf1').set('unit', 'MPa');
model.result('pg8').feature('surf1').set('rangecoloractive', true);
model.result('pg8').feature('surf1').set('rangecolormax', 100);
model.result('pg8').feature('surf1').set('colortable', 'Prism');
model.result('pg8').feature('surf1').set('resolution', 'custom');
model.result('pg8').feature('surf1').set('refine', 2);
model.result('pg8').feature('surf1').set('threshold', 'manual');
model.result('pg8').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg8').feature('surf1').create('trn1', 'Translation');
model.result('pg8').run;
model.result('pg8').feature('surf1').feature('trn1').set('trans', {'X0' 'Y0' 'Z0+18*th'});
model.result('pg8').run;
model.result('pg8').feature.duplicate('surf2', 'surf1');
model.result('pg8').run;
model.result('pg8').feature('surf2').setIndex('looplevel', 2, 0);
model.result('pg8').feature('surf2').set('inheritplot', 'surf1');
model.result('pg8').feature.duplicate('surf3', 'surf2');
model.result('pg8').run;
model.result('pg8').feature('surf3').setIndex('looplevel', 3, 0);
model.result('pg8').feature.duplicate('surf4', 'surf3');
model.result('pg8').run;
model.result('pg8').feature('surf4').setIndex('looplevel', 4, 0);
model.result('pg8').run;
model.result('pg8').feature('surf4').feature('trn1').set('trans', {'X0' 'Y0' 'Z0-18*th'});
model.result('pg8').run;
model.result('pg8').feature.duplicate('surf5', 'surf4');
model.result('pg8').run;
model.result('pg8').feature('surf5').setIndex('looplevel', 5, 0);
model.result('pg8').feature.duplicate('surf6', 'surf5');
model.result('pg8').run;
model.result('pg8').feature('surf6').setIndex('looplevel', 6, 0);
model.result('pg8').feature.duplicate('surf7', 'surf6');
model.result('pg8').run;
model.result('pg8').feature('surf7').setIndex('looplevel', 2, 1);
model.result('pg8').feature('surf7').setIndex('looplevel', 1, 0);
model.result('pg8').feature.duplicate('surf8', 'surf7');
model.result('pg8').run;
model.result('pg8').feature('surf8').setIndex('looplevel', 2, 0);
model.result('pg8').feature.duplicate('surf9', 'surf8');
model.result('pg8').run;
model.result('pg8').feature('surf9').setIndex('looplevel', 3, 0);
model.result('pg8').feature.duplicate('surf10', 'surf9');
model.result('pg8').run;
model.result('pg8').feature('surf10').setIndex('looplevel', 4, 0);
model.result('pg8').run;
model.result('pg8').feature('surf10').feature('trn1').set('trans', {'X0' 'Y0' 'Z0+18*th'});
model.result('pg8').run;
model.result('pg8').feature.duplicate('surf11', 'surf10');
model.result('pg8').run;
model.result('pg8').feature('surf11').setIndex('looplevel', 5, 0);
model.result('pg8').feature.duplicate('surf12', 'surf11');
model.result('pg8').run;
model.result('pg8').feature('surf12').setIndex('looplevel', 6, 0);
model.result('pg8').run;
model.result('pg8').create('line1', 'Line');
model.result('pg8').feature('line1').set('expr', '0');
model.result('pg8').feature('line1').set('data', 'dset3lshelllshlsf');
model.result('pg8').feature('line1').set('coloring', 'uniform');
model.result('pg8').feature('line1').set('color', 'black');
model.result('pg8').run;
model.result('pg8').set('view', 'new');
model.result('pg8').run;

model.view('view7').camera.set('zoomanglefull', 10.526747703552246);
model.view('view7').camera.setIndex('position', -2.472445249557495, 0);
model.view('view7').camera.setIndex('position', -1.2597699165344238, 1);
model.view('view7').camera.setIndex('position', 0.6511523127555847, 2);
model.view('view7').camera.set('target', [0.25 0.0024608373641967773 0]);
model.view('view7').camera.setIndex('up', 0.17302125692367554, 0);
model.view('view7').camera.setIndex('up', 0.130436971783638, 1);
model.view('view7').camera.setIndex('up', 0.9762426018714905, 2);
model.view('view7').camera.set('rotationpoint', [0.25 0.002460841089487076 0]);
model.view('view7').camera.setIndex('viewoffset', -0.044512610882520676, 0);
model.view('view7').camera.setIndex('viewoffset', 0.002244802890345454, 1);
model.view('view7').set('showgrid', false);
model.view('view7').set('locked', true);
model.view('view7').set('scenelight', false);

model.result('pg8').run;
model.result('pg8').run;
model.result('pg7').run;
model.result.duplicate('pg9', 'pg7');

model.nodeGroup('grp3').add('plotgroup', 'pg9');

model.result('pg9').run;
model.result('pg9').label('User Defined Failure Indexes (At First Material Point in Inner Layer)');
model.result('pg9').set('title', 'User Defined failure index (1)');
model.result('pg9').set('showlegendsmaxmin', true);
model.result('pg9').feature('vol1').set('arraydim', '1');
model.result('pg9').run;
model.result('pg9').feature('vol1').set('expr', 'solid2.lemm1.sf2.f_i');
model.result('pg9').feature('vol1').set('descr', 'User-defined failure index');
model.result('pg9').feature('vol2').set('arraydim', '1');
model.result('pg9').run;
model.result('pg9').feature('vol2').set('expr', 'solid2.lemm1.sf1.f_i');
model.result('pg9').feature('vol2').set('descr', 'User-defined failure index');
model.result('pg9').feature('surf1').set('arraydim', '1');
model.result('pg9').run;
model.result('pg9').feature('surf1').set('expr', 'solid2.tl1.lemm1.sf1.f_i');
model.result('pg9').feature('surf1').set('descr', 'User-defined failure index');
model.result('pg9').run;
model.result('pg9').run;
model.result.duplicate('pg10', 'pg9');

model.nodeGroup('grp3').add('plotgroup', 'pg10');

model.result('pg10').run;
model.result('pg10').label('User Defined Failure Indexes (At First Material Point in Outer Layer)');
model.result('pg10').setIndex('looplevel', 2, 1);
model.result('pg10').run;
model.result.evaluationGroup.create('eg3', 'EvaluationGroup');
model.result.evaluationGroup('eg3').label('User Defined Failure Indexes at First Material Point in Inner Layer (Study: Micromechanics (Local Response))');
model.result.evaluationGroup('eg3').set('data', 'dset9');
model.result.evaluationGroup('eg3').setIndex('looplevelinput', 'first', 1);
model.result.evaluationGroup('eg3').setIndex('looplevelinput', 'first', 0);
model.result.evaluationGroup('eg3').create('max1', 'MaxVolume');
model.result.evaluationGroup('eg3').feature('max1').selection.set([1]);
model.result.evaluationGroup('eg3').feature('max1').set('expr', {'solid2.lemm1.sf2.f_i'});
model.result.evaluationGroup('eg3').feature('max1').set('descr', {'User-defined failure index'});
model.result.evaluationGroup('eg3').feature('max1').set('unit', {'1'});
model.result.evaluationGroup('eg3').feature('max1').setIndex('descr', 'User-defined matrix failure index', 0);
model.result.evaluationGroup('eg3').create('max2', 'MaxVolume');
model.result.evaluationGroup('eg3').feature('max2').selection.set([2]);
model.result.evaluationGroup('eg3').feature('max2').set('expr', {'solid2.lemm1.sf1.f_i'});
model.result.evaluationGroup('eg3').feature('max2').set('descr', {'User-defined failure index'});
model.result.evaluationGroup('eg3').feature('max2').set('unit', {'1'});
model.result.evaluationGroup('eg3').feature('max2').setIndex('descr', 'User-defined fiber failure index', 0);
model.result.evaluationGroup('eg3').create('max3', 'MaxSurface');
model.result.evaluationGroup('eg3').feature('max3').selection.named('geom3_sel1');
model.result.evaluationGroup('eg3').feature('max3').set('expr', {'solid2.tl1.lemm1.sf1.f_i'});
model.result.evaluationGroup('eg3').feature('max3').set('descr', {'User-defined failure index'});
model.result.evaluationGroup('eg3').feature('max3').set('unit', {'1'});
model.result.evaluationGroup('eg3').feature('max3').setIndex('descr', 'User-defined interface failure index', 0);
model.result.evaluationGroup('eg3').set('transpose', true);
model.result.evaluationGroup('eg3').set('includeparameters', false);
model.result.evaluationGroup('eg3').run;
model.result.evaluationGroup.duplicate('eg4', 'eg3');
model.result.evaluationGroup('eg4').label('User Defined Failure Indexes at First Material Point in Outer Layer (Study: Micromechanics (Local Response))');
model.result.evaluationGroup('eg4').setIndex('looplevelinput', 'last', 1);
model.result.evaluationGroup('eg4').run;

model.study('solidcp1std').feature('solidcp1stat').setEntry('activate', 'solid2', false);
model.study('std1').feature('stat').setEntry('activate', 'solid2', false);

model.result('pg8').run;

model.title('Micromechanics of Failure: Multiscale Analysis of a Composite Structure');

model.description(['In this example the structural integrity of a cylinder made by a fiber composite is assessed both at the macroscale and at the microscale level. The use of fiber composites ranges from the transportation and energy sectors to the consumer industry. Compared to traditional monolithic materials, fiber composites offer various properties suitable for tailormade applications. Along with macroscale analyses, structural composites need microscale stress and failure analyses to identify the critical constituents in laminate structures.' newline  newline 'Composites can be analyzed at either macro or micro scales, and either analysis has its benefits and limitations. Analyses at both macro and micro scales, so-called multiscale analyses, offer an in-depth insight into the composite structure as well as its constituent''s response and help to study the micromechanics of failure based on the global scale loading.']);

model.mesh.clearMeshes;

model.sol('solidcp1sol').clearSolutionData;
model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;
model.sol('sol8').clearSolutionData;
model.sol('sol9').clearSolutionData;
model.sol('sol10').clearSolutionData;
model.sol('sol11').clearSolutionData;
model.sol('sol12').clearSolutionData;
model.sol('sol13').clearSolutionData;
model.sol('sol14').clearSolutionData;
model.sol('sol15').clearSolutionData;

model.label('composite_multiscale.mph');

model.modelNode.label('Components');

out = model;
