function out = model
%
% sajben_diffuser.m
%
% Model exported on May 26 2025, 21:26 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/CFD_Module/High_Mach_Number_Flow');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('hmnf', 'HighMachNumberFlowTurbulentSpalartAllmaras', 'geom1');
model.physics('hmnf').model('comp1');

model.study.create('std1');
model.study('std1').create('wdi', 'WallDistanceInitialization');
model.study('std1').feature('wdi').set('solnum', 'auto');
model.study('std1').feature('wdi').set('notsolnum', 'auto');
model.study('std1').feature('wdi').set('outputmap', {});
model.study('std1').feature('wdi').set('ngenAUX', '1');
model.study('std1').feature('wdi').set('goalngenAUX', '1');
model.study('std1').feature('wdi').set('ngenAUX', '1');
model.study('std1').feature('wdi').set('goalngenAUX', '1');
model.study('std1').feature('wdi').setSolveFor('/physics/hmnf', true);
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').set('solnum', 'auto');
model.study('std1').feature('stat').set('notsolnum', 'auto');
model.study('std1').feature('stat').set('outputmap', {});
model.study('std1').feature('stat').set('ngenAUX', '1');
model.study('std1').feature('stat').set('goalngenAUX', '1');
model.study('std1').feature('stat').set('ngenAUX', '1');
model.study('std1').feature('stat').set('goalngenAUX', '1');
model.study('std1').feature('stat').setSolveFor('/physics/hmnf', true);

model.param.set('x0', '-6.99809[in]');
model.param.descr('x0', 'Inlet x-position');
model.param.set('xEnd', '14.98353[in]');
model.param.descr('xEnd', 'Outlet x-position');
model.param.set('h_in', '2.44483[in]');
model.param.descr('h_in', 'Diffuser inlet height');
model.param.set('h_out', '2.59830[in]');
model.param.descr('h_out', 'Diffuser outlet height');
model.param.set('h_th', '1.732[in]');
model.param.descr('h_th', 'Throat height');
model.param.label('Geometry parameters');
model.param.create('par2');
model.param('par2').label('Fluid flow parameters');
model.param('par2').set('Rein', '7e5');
model.param('par2').descr('Rein', 'Inlet Reynolds number');
model.param('par2').set('case', '1');
model.param('par2').descr('case', 'Case number; 1 = weak shock, 2 = strong shock');
model.param('par2').set('Min', '0.46');
model.param('par2').descr('Min', 'Inlet Mach number');
model.param('par2').set('gamma', '1.4');
model.param('par2').descr('gamma', 'Ratio of specific heats');
model.param('par2').set('Pr', '0.72');
model.param('par2').descr('Pr', 'Prandtl number');
model.param('par2').set('Rs', '287[J/kg/K]');
model.param('par2').descr('Rs', 'Specific gas constant');
model.param('par2').set('Tin_tot', '500[R]');
model.param('par2').descr('Tin_tot', 'Inlet total temperature');
model.param('par2').set('Tin_stat', 'Tin_tot/(1+0.5*Min^2*(-1+gamma))');
model.param('par2').descr('Tin_stat', 'Inlet static temperature');
model.param('par2').set('pin_tot', '19.58[psi]');
model.param('par2').descr('pin_tot', 'Inlet total pressure');
model.param('par2').set('pin_stat', 'pin_tot/(1+0.5*Min^2*(-1+gamma))^(gamma/(-1+gamma))');
model.param('par2').descr('pin_stat', 'Inlet static pressure');
model.param('par2').set('rhoin', 'pin_stat/Rs/Tin_stat');
model.param('par2').descr('rhoin', 'Inlet density');
model.param('par2').set('mu_ref', 'rhoin*u_in*h_in/Rein');
model.param('par2').descr('mu_ref', 'Reference dynamic viscosity');
model.param('par2').set('u_in', 'Min*sqrt(gamma*Rs*Tin_stat+eps)');
model.param('par2').descr('u_in', 'Inlet velocity');
model.param('par2').set('pOut', 'if(case==1,16.05,0)[psi]+if(case==2,14.1,0)[psi]');
model.param('par2').descr('pOut', 'Outlet pressure');

model.func.create('int1', 'Interpolation');
model.func('int1').set('source', 'file');
model.func('int1').setIndex('funcs', 'top_pos', 0, 0);
model.func('int1').set('filename', 'sajben_diffuser_upper_wall.txt');
model.func('int1').importData;
model.func('int1').setIndex('fununit', 'in', 0);
model.func.create('int2', 'Interpolation');
model.func('int2').set('source', 'file');
model.func('int2').setIndex('funcs', 'ptop_weak', 0, 0);
model.func('int2').set('filename', 'sajben_diffuser_ptop_weak.txt');
model.func('int2').importData;
model.func.create('int3', 'Interpolation');
model.func('int3').set('source', 'file');
model.func('int3').setIndex('funcs', 'ptop_strong', 0, 0);
model.func('int3').set('filename', 'sajben_diffuser_ptop_strong.txt');
model.func('int3').importData;
model.func.create('int4', 'Interpolation');
model.func('int4').set('source', 'file');
model.func('int4').setIndex('funcs', 'u_at4611', 0, 0);
model.func('int4').set('filename', 'sajben_diffuser_u-xh4611.txt');
model.func('int4').importData;
model.func.create('int5', 'Interpolation');
model.func('int5').set('source', 'file');
model.func('int5').setIndex('funcs', 'u_at6340', 0, 0);
model.func('int5').set('filename', 'sajben_diffuser_u-xh6340.txt');
model.func('int5').importData;

model.geom('geom1').create('pc1', 'ParametricCurve');
model.geom('geom1').feature('pc1').set('parmin', 'x0[1/in]');
model.geom('geom1').feature('pc1').set('parmax', 'xEnd[1/in]');
model.geom('geom1').feature('pc1').set('coord', {'s[in]' 'top_pos(s)'});
model.geom('geom1').run('pc1');
model.geom('geom1').create('pol1', 'Polygon');
model.geom('geom1').feature('pol1').set('source', 'table');
model.geom('geom1').feature('pol1').set('type', 'open');
model.geom('geom1').feature('pol1').set('source', 'vectors');
model.geom('geom1').feature('pol1').set('x', 'x0 x0 x0 xEnd xEnd xEnd');
model.geom('geom1').feature('pol1').set('y', 'h_in 0 0 0 0 h_out');
model.geom('geom1').run('pol1');
model.geom('geom1').create('csol1', 'ConvertToSolid');
model.geom('geom1').feature('csol1').selection('input').set({'pc1' 'pol1'});
model.geom('geom1').run('csol1');
model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', [0.16 0.1]);
model.geom('geom1').feature('r1').set('pos', [0.025 0]);
model.geom('geom1').run('r1');
model.geom('geom1').create('par1', 'Partition');
model.geom('geom1').feature('par1').selection('input').set({'csol1'});
model.geom('geom1').feature('par1').selection('tool').set({'r1'});
model.geom('geom1').run('par1');
model.geom('geom1').run('fin');
model.geom('geom1').create('mce1', 'MeshControlEdges');
model.geom('geom1').feature('mce1').selection('input').set('fin', [3 5]);
model.geom('geom1').run('mce1');

model.physics('hmnf').feature('fluid1').set('k_mat', 'userdef');
model.physics('hmnf').feature('fluid1').set('k', {'hmnf.Cp*hmnf.mu/Pr' '0' '0' '0' 'hmnf.Cp*hmnf.mu/Pr' '0' '0' '0' 'hmnf.Cp*hmnf.mu/Pr'});
model.physics('hmnf').feature('fluid1').set('Rs_mat', 'userdef');
model.physics('hmnf').feature('fluid1').set('Rs', 'Rs');
model.physics('hmnf').feature('fluid1').set('CpOrGammaOption', 'gamma');
model.physics('hmnf').feature('fluid1').set('gamma_mat', 'userdef');
model.physics('hmnf').feature('fluid1').set('gamma', 'gamma');
model.physics('hmnf').feature('fluid1').set('mu_ref', 'mu_ref');
model.physics('hmnf').feature('fluid1').set('Tmu_ref', 'Tin_stat');
model.physics('hmnf').feature('init1').set('u_init', {'u_in' '0' '0'});
model.physics('hmnf').feature('init1').set('p_init', 'pin_stat');
model.physics('hmnf').feature('init1').set('nutilde_init', 'subst(hmnf.nutildeinit,p,pin_stat)');
model.physics('hmnf').feature('init1').set('Tinit', 'Tin_stat');
model.physics('hmnf').create('hminl1', 'HighMachNumberFlowInlet', 1);
model.physics('hmnf').feature('hminl1').selection.set([1]);
model.physics('hmnf').feature('hminl1').set('InputState', 'TotalConditions');
model.physics('hmnf').feature('hminl1').set('p0tot', 'pin_tot');
model.physics('hmnf').feature('hminl1').set('T0tot', 'Tin_tot');
model.physics('hmnf').feature('hminl1').set('Ma0', 'Min');
model.physics('hmnf').create('hmout1', 'HighMachNumberFlowOutlet', 1);
model.physics('hmnf').feature('hmout1').selection.set([3]);
model.physics('hmnf').feature('hmout1').set('FlowCondition', 'Subsonic');
model.physics('hmnf').feature('hmout1').set('BoundaryCondition', 'Pressure');
model.physics('hmnf').feature('hmout1').set('p0', 'pOut');

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([4 6]);
model.mesh('mesh1').feature('map1').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis1').set('elemcount', 40);
model.mesh('mesh1').feature('map1').feature('dis1').set('elemratio', '1/4');
model.mesh('mesh1').feature('map1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis2').selection.set([5 7]);
model.mesh('mesh1').feature('map1').feature('dis2').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis2').set('elemcount', 90);
model.mesh('mesh1').feature('map1').create('dis3', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis3').selection.set([2 8]);
model.mesh('mesh1').feature('map1').feature('dis3').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis3').set('elemcount', 50);
model.mesh('mesh1').feature('map1').feature('dis3').set('elemratio', 3);
model.mesh('mesh1').feature('map1').feature('dis3').set('reverse', true);
model.mesh('mesh1').feature('map1').create('dis4', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis4').selection.set([1 3]);
model.mesh('mesh1').feature('map1').feature('dis4').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis4').set('elemcount', 25);
model.mesh('mesh1').feature('map1').feature('dis4').set('elemratio', 2.5);
model.mesh('mesh1').feature('map1').feature('dis4').set('symmetric', true);
model.mesh('mesh1').run;
model.mesh('mesh1').create('bl1', 'BndLayer');
model.mesh('mesh1').feature('bl1').create('blp', 'BndLayerProp');
model.mesh('mesh1').feature('bl1').set('smoothtransition', false);
model.mesh('mesh1').feature('bl1').feature('blp').selection.set([2 4 6 8 9 10]);
model.mesh('mesh1').feature('bl1').feature('blp').set('blnlayers', 20);
model.mesh('mesh1').feature('bl1').feature('blp').set('blhminfact', 0.11);
model.mesh('mesh1').run;

model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'case', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', '', 0);
model.study('std1').feature('param').setIndex('pname', 'case', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', '', 0);
model.study('std1').feature('param').setIndex('pname', 'case', 0);
model.study('std1').feature('param').setIndex('plistarr', 1, 0);
model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 'case', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', '', 0);
model.study('std1').feature('stat').setIndex('pname', 'case', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', '', 0);
model.study('std1').feature('stat').setIndex('pname', 'Rein', 0);
model.study('std1').feature('stat').setIndex('plistarr', '5e3 5e4 2e5 7e5', 0);

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'wdi');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'wdi');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 1.0E-6);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, wall distance (hmnf)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, wall distance (hmnf)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'stat');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'stat');
model.sol('sol1').create('s2', 'Stationary');
model.sol('sol1').feature('s2').create('p1', 'Parametric');
model.sol('sol1').feature('s2').feature.remove('pDef');
model.sol('sol1').feature('s2').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s2').set('control', 'stat');
model.sol('sol1').feature('s2').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s2').create('se1', 'Segregated');
model.sol('sol1').feature('s2').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s2').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('segvar', {'comp1_T' 'comp1_p' 'comp1_u' 'comp1_hmnf_TWall_d' 'comp1_hmnf_TWall_u'});
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('subdamp', 0.5);
model.sol('sol1').feature('s2').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').feature('d1').label('Direct, fluid flow variables (hmnf)');
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol1').feature('s2').feature('se1').feature('ss1').label('Flow Variables u, p, T');
model.sol('sol1').feature('s2').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('segvar', {'comp1_nutilde'});
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('subdamp', 0.35);
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('subiter', 3);
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('subtermconst', 'itertol');
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('subntolfact', 1);
model.sol('sol1').feature('s2').create('d2', 'Direct');
model.sol('sol1').feature('s2').feature('d2').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').feature('d2').label('Direct, turbulence variables (hmnf)');
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol1').feature('s2').feature('se1').feature('ss2').label('Turbulence Variables');
model.sol('sol1').feature('s2').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol1').feature('s2').feature('se1').set('subinitcfl', 1);
model.sol('sol1').feature('s2').feature('se1').set('submincfl', 10000);
model.sol('sol1').feature('s2').feature('se1').set('subkppid', 0.65);
model.sol('sol1').feature('s2').feature('se1').set('subkdpid', 0.05);
model.sol('sol1').feature('s2').feature('se1').set('subkipid', 0.05);
model.sol('sol1').feature('s2').feature('se1').set('subcfltol', 0.05);
model.sol('sol1').feature('s2').feature('se1').set('segcflaa', true);
model.sol('sol1').feature('s2').feature('se1').set('segcflaacfl', 9000);
model.sol('sol1').feature('s2').feature('se1').set('segcflaafact', 1);
model.sol('sol1').feature('s2').feature('se1').set('maxsegiter', 300);
model.sol('sol1').feature('s2').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol1').feature('s2').feature('se1').feature('ll1').set('lowerlimit', 'comp1.nutilde 0 comp1.T 1 comp1.p 1 ');
model.sol('sol1').feature('s2').create('i1', 'Iterative');
model.sol('sol1').feature('s2').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s2').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s2').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s2').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s2').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s2').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s2').feature('i1').label('AMG, fluid flow variables (hmnf)');
model.sol('sol1').feature('s2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').create('i2', 'Iterative');
model.sol('sol1').feature('s2').feature('i2').set('linsolver', 'gmres');
model.sol('sol1').feature('s2').feature('i2').set('prefuntype', 'left');
model.sol('sol1').feature('s2').feature('i2').set('itrestart', 50);
model.sol('sol1').feature('s2').feature('i2').set('rhob', 400);
model.sol('sol1').feature('s2').feature('i2').set('maxlinit', 1000);
model.sol('sol1').feature('s2').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('s2').feature('i2').label('AMG, turbulence variables (hmnf)');
model.sol('sol1').feature('s2').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').feature.remove('fcDef');
model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol1').feature('v2').set('solnum', 'auto');
model.sol('sol1').feature('v2').set('solvertype', 'solnum');
model.sol('sol1').attach('std1');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'case'});
model.batch('p1').set('plistarr', {'1'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol.create('sol3');
model.sol('sol3').study('std1');
model.sol('sol3').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol3');
model.batch('p1').run('compute');

model.result.dataset('dset3').set('geom', 'geom1');
model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').label('Velocity (hmnf)');
model.result('pg1').set('data', 'dset3');
model.result('pg1').setIndex('looplevel', 4, 0);
model.result('pg1').setIndex('looplevel', 1, 1);
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').set('data', 'dset3');
model.result('pg1').setIndex('looplevel', 4, 0);
model.result('pg1').setIndex('looplevel', 1, 1);
model.result('pg1').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg1');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').label('Surface');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('smooth', 'internal');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').label('Pressure (hmnf)');
model.result('pg2').set('data', 'dset3');
model.result('pg2').setIndex('looplevel', 4, 0);
model.result('pg2').setIndex('looplevel', 1, 1);
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('data', 'dset3');
model.result('pg2').setIndex('looplevel', 4, 0);
model.result('pg2').setIndex('looplevel', 1, 1);
model.result('pg2').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg2');
model.result('pg2').feature.create('con1', 'Contour');
model.result('pg2').feature('con1').label('Contour');
model.result('pg2').feature('con1').set('showsolutionparams', 'on');
model.result('pg2').feature('con1').set('expr', 'p');
model.result('pg2').feature('con1').set('number', 40);
model.result('pg2').feature('con1').set('levelrounding', false);
model.result('pg2').feature('con1').set('smooth', 'internal');
model.result('pg2').feature('con1').set('showsolutionparams', 'on');
model.result('pg2').feature('con1').set('data', 'parent');
model.result.dataset.create('edg1', 'Edge2D');
model.result.dataset('edg1').label('Exterior Walls');
model.result.dataset('edg1').set('data', 'dset3');
model.result.dataset('edg1').selection.geom('geom1', 1);
model.result.dataset('edg1').selection.set([2 4]);
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').label('Wall Resolution (hmnf)');
model.result('pg3').set('data', 'dset3');
model.result('pg3').setIndex('looplevel', 4, 0);
model.result('pg3').setIndex('looplevel', 1, 1);
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').set('data', 'dset3');
model.result('pg3').setIndex('looplevel', 4, 0);
model.result('pg3').setIndex('looplevel', 1, 1);
model.result('pg3').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pcond2/pcond4/pg2');
model.result('pg3').feature.create('line1', 'Line');
model.result('pg3').feature('line1').label('Wall Resolution');
model.result('pg3').feature('line1').set('showsolutionparams', 'on');
model.result('pg3').feature('line1').set('expr', 'hmnf.Delta_wPlus');
model.result('pg3').feature('line1').set('linetype', 'tube');
model.result('pg3').feature('line1').set('smooth', 'internal');
model.result('pg3').feature('line1').set('showsolutionparams', 'on');
model.result('pg3').feature('line1').set('data', 'parent');
model.result('pg3').feature('line1').feature.create('hght1', 'Height');
model.result('pg3').feature('line1').feature('hght1').label('Height Expression');
model.result('pg3').feature('line1').feature('hght1').set('heightdata', 'expr');
model.result('pg3').feature('line1').feature('hght1').set('expr', 'hmnf.WRHeightExpr');
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').label('Temperature (hmnf)');
model.result('pg4').set('data', 'dset3');
model.result('pg4').setIndex('looplevel', 4, 0);
model.result('pg4').setIndex('looplevel', 1, 1);
model.result('pg4').set('data', 'dset3');
model.result('pg4').setIndex('looplevel', 4, 0);
model.result('pg4').setIndex('looplevel', 1, 1);
model.result('pg4').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pg2');
model.result('pg4').feature.create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('showsolutionparams', 'on');
model.result('pg4').feature('surf1').set('solutionparams', 'parent');
model.result('pg4').feature('surf1').set('expr', 'T');
model.result('pg4').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg4').feature('surf1').set('showsolutionparams', 'on');
model.result('pg4').feature('surf1').set('data', 'parent');
model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').label('Mach Number (hmnf)');
model.result('pg5').set('data', 'dset3');
model.result('pg5').setIndex('looplevel', 4, 0);
model.result('pg5').setIndex('looplevel', 1, 1);
model.result('pg5').set('data', 'dset3');
model.result('pg5').setIndex('looplevel', 4, 0);
model.result('pg5').setIndex('looplevel', 1, 1);
model.result('pg5').set('defaultPlotID', 'MultiphysicsHighMachNumberFlow/icom1/pdef1/pcond1/pg1');
model.result('pg5').feature.create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', 'hmnf.Ma');
model.result('pg5').feature('surf1').set('smooth', 'internal');
model.result('pg5').feature('surf1').set('data', 'parent');
model.result('pg1').run;
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').feature('surf1').set('colortable', 'JupiterAuroraBorealis');
model.result('pg5').feature('surf1').set('colortabletrans', 'reverse');
model.result('pg5').run;
model.result('pg5').create('str1', 'Streamline');
model.result('pg5').feature('str1').selection.set([1]);
model.result('pg5').feature('str1').set('selnumber', 9);
model.result('pg5').run;
model.result('pg5').create('con1', 'Contour');
model.result('pg5').feature('con1').set('expr', 'u');
model.result('pg5').feature('con1').set('levelmethod', 'levels');
model.result('pg5').feature('con1').set('coloring', 'uniform');
model.result('pg5').feature('con1').set('colorlegend', false);
model.result('pg5').run;
model.result('pg1').run;

model.nodeGroup.create('grp1', 'Results');
model.nodeGroup('grp1').set('type', 'plotgroup');
model.nodeGroup('grp1').add('plotgroup', 'pg1');
model.nodeGroup('grp1').add('plotgroup', 'pg2');
model.nodeGroup('grp1').add('plotgroup', 'pg3');
model.nodeGroup('grp1').add('plotgroup', 'pg4');
model.nodeGroup('grp1').add('plotgroup', 'pg5');
model.nodeGroup('grp1').label('Weak Shock');

model.study.create('std2');
model.study('std2').create('wdi', 'WallDistanceInitialization');
model.study('std2').feature('wdi').set('plotgroup', 'Default');
model.study('std2').feature('wdi').set('solnum', 'auto');
model.study('std2').feature('wdi').set('notsolnum', 'auto');
model.study('std2').feature('wdi').set('outputmap', {});
model.study('std2').feature('wdi').set('ngenAUX', '1');
model.study('std2').feature('wdi').set('goalngenAUX', '1');
model.study('std2').feature('wdi').set('ngenAUX', '1');
model.study('std2').feature('wdi').set('goalngenAUX', '1');
model.study('std2').feature('wdi').setSolveFor('/physics/hmnf', true);
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').set('plotgroup', 'Default');
model.study('std2').feature('stat').set('solnum', 'auto');
model.study('std2').feature('stat').set('notsolnum', 'auto');
model.study('std2').feature('stat').set('outputmap', {});
model.study('std2').feature('stat').set('ngenAUX', '1');
model.study('std2').feature('stat').set('goalngenAUX', '1');
model.study('std2').feature('stat').set('ngenAUX', '1');
model.study('std2').feature('stat').set('goalngenAUX', '1');
model.study('std2').feature('stat').setSolveFor('/physics/hmnf', true);

model.geom('geom1').run;

model.study('std2').create('param', 'Parametric');
model.study('std2').feature('param').setIndex('pname', 'case', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', '', 0);
model.study('std2').feature('param').setIndex('pname', 'case', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', '', 0);
model.study('std2').feature('param').setIndex('pname', 'case', 0);
model.study('std2').feature('param').setIndex('plistarr', 2, 0);
model.study('std2').feature('wdi').set('usesol', true);
model.study('std2').feature('wdi').set('notsolmethod', 'sol');
model.study('std2').feature('wdi').set('notstudy', 'std1');
model.study('std2').feature('wdi').set('notsolnum', 'last');

model.sol.create('sol5');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol5').study('std2');
model.sol('sol5').create('st1', 'StudyStep');
model.sol('sol5').feature('st1').set('study', 'std2');
model.sol('sol5').feature('st1').set('studystep', 'wdi');
model.sol('sol5').create('v1', 'Variables');
model.sol('sol5').feature('v1').set('control', 'wdi');
model.sol('sol5').create('s1', 'Stationary');
model.sol('sol5').feature('s1').set('stol', 1.0E-6);
model.sol('sol5').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol5').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol5').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol5').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol5').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol5').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol5').feature('s1').create('d1', 'Direct');
model.sol('sol5').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s1').feature('d1').label('Direct, wall distance (hmnf)');
model.sol('sol5').feature('s1').create('i1', 'Iterative');
model.sol('sol5').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol5').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol5').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol5').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol5').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol5').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol5').feature('s1').feature('i1').label('AMG, wall distance (hmnf)');
model.sol('sol5').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol5').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol5').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol5').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol5').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol5').feature('s1').feature.remove('fcDef');
model.sol('sol5').create('su1', 'StoreSolution');
model.sol('sol5').create('st2', 'StudyStep');
model.sol('sol5').feature('st2').set('study', 'std2');
model.sol('sol5').feature('st2').set('studystep', 'stat');
model.sol('sol5').create('v2', 'Variables');
model.sol('sol5').feature('v2').set('initmethod', 'sol');
model.sol('sol5').feature('v2').set('initsol', 'sol5');
model.sol('sol5').feature('v2').set('notsolmethod', 'sol');
model.sol('sol5').feature('v2').set('notsol', 'sol5');
model.sol('sol5').feature('v2').set('control', 'stat');
model.sol('sol5').create('s2', 'Stationary');
model.sol('sol5').feature('s2').feature('aDef').set('cachepattern', true);
model.sol('sol5').feature('s2').create('se1', 'Segregated');
model.sol('sol5').feature('s2').feature('se1').feature.remove('ssDef');
model.sol('sol5').feature('s2').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol5').feature('s2').feature('se1').feature('ss1').set('segvar', {'comp1_T' 'comp1_p' 'comp1_u' 'comp1_hmnf_TWall_d' 'comp1_hmnf_TWall_u'});
model.sol('sol5').feature('s2').feature('se1').feature('ss1').set('subdamp', 0.5);
model.sol('sol5').feature('s2').create('d1', 'Direct');
model.sol('sol5').feature('s2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s2').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s2').feature('d1').label('Direct, fluid flow variables (hmnf)');
model.sol('sol5').feature('s2').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol5').feature('s2').feature('se1').feature('ss1').label('Flow Variables u, p, T');
model.sol('sol5').feature('s2').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol5').feature('s2').feature('se1').feature('ss2').set('segvar', {'comp1_nutilde'});
model.sol('sol5').feature('s2').feature('se1').feature('ss2').set('subdamp', 0.35);
model.sol('sol5').feature('s2').feature('se1').feature('ss2').set('subiter', 3);
model.sol('sol5').feature('s2').feature('se1').feature('ss2').set('subtermconst', 'itertol');
model.sol('sol5').feature('s2').feature('se1').feature('ss2').set('subntolfact', 1);
model.sol('sol5').feature('s2').create('d2', 'Direct');
model.sol('sol5').feature('s2').feature('d2').set('linsolver', 'pardiso');
model.sol('sol5').feature('s2').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s2').feature('d2').label('Direct, turbulence variables (hmnf)');
model.sol('sol5').feature('s2').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol5').feature('s2').feature('se1').feature('ss2').label('Turbulence Variables');
model.sol('sol5').feature('s2').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol5').feature('s2').feature('se1').set('subinitcfl', 1);
model.sol('sol5').feature('s2').feature('se1').set('submincfl', 10000);
model.sol('sol5').feature('s2').feature('se1').set('subkppid', 0.65);
model.sol('sol5').feature('s2').feature('se1').set('subkdpid', 0.05);
model.sol('sol5').feature('s2').feature('se1').set('subkipid', 0.05);
model.sol('sol5').feature('s2').feature('se1').set('subcfltol', 0.05);
model.sol('sol5').feature('s2').feature('se1').set('segcflaa', true);
model.sol('sol5').feature('s2').feature('se1').set('segcflaacfl', 9000);
model.sol('sol5').feature('s2').feature('se1').set('segcflaafact', 1);
model.sol('sol5').feature('s2').feature('se1').set('maxsegiter', 300);
model.sol('sol5').feature('s2').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol5').feature('s2').feature('se1').feature('ll1').set('lowerlimit', 'comp1.nutilde 0 comp1.T 1 comp1.p 1 ');
model.sol('sol5').feature('s2').create('i1', 'Iterative');
model.sol('sol5').feature('s2').feature('i1').set('linsolver', 'gmres');
model.sol('sol5').feature('s2').feature('i1').set('prefuntype', 'left');
model.sol('sol5').feature('s2').feature('i1').set('itrestart', 50);
model.sol('sol5').feature('s2').feature('i1').set('rhob', 20);
model.sol('sol5').feature('s2').feature('i1').set('maxlinit', 1000);
model.sol('sol5').feature('s2').feature('i1').set('nlinnormuse', 'on');
model.sol('sol5').feature('s2').feature('i1').label('AMG, fluid flow variables (hmnf)');
model.sol('sol5').feature('s2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s2').create('i2', 'Iterative');
model.sol('sol5').feature('s2').feature('i2').set('linsolver', 'gmres');
model.sol('sol5').feature('s2').feature('i2').set('prefuntype', 'left');
model.sol('sol5').feature('s2').feature('i2').set('itrestart', 50);
model.sol('sol5').feature('s2').feature('i2').set('rhob', 400);
model.sol('sol5').feature('s2').feature('i2').set('maxlinit', 1000);
model.sol('sol5').feature('s2').feature('i2').set('nlinnormuse', 'on');
model.sol('sol5').feature('s2').feature('i2').label('AMG, turbulence variables (hmnf)');
model.sol('sol5').feature('s2').feature('i2').create('mg1', 'Multigrid');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s2').feature.remove('fcDef');
model.sol('sol5').feature('v2').set('notsolnum', 'auto');
model.sol('sol5').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol5').feature('v2').set('solnum', 'auto');
model.sol('sol5').feature('v2').set('solvertype', 'solnum');
model.sol('sol5').attach('std2');

model.batch.create('p2', 'Parametric');
model.batch('p2').study('std2');
model.batch('p2').create('so1', 'Solutionseq');
model.batch('p2').feature('so1').set('seq', 'sol5');
model.batch('p2').feature('so1').set('store', 'on');
model.batch('p2').feature('so1').set('clear', 'on');
model.batch('p2').feature('so1').set('psol', 'none');
model.batch('p2').set('pname', {'case'});
model.batch('p2').set('plistarr', {'2'});
model.batch('p2').set('sweeptype', 'sparse');
model.batch('p2').set('probesel', 'all');
model.batch('p2').set('probes', {});
model.batch('p2').set('plot', 'off');
model.batch('p2').set('err', 'on');
model.batch('p2').attach('std2');
model.batch('p2').set('control', 'param');

model.sol('sol5').feature('s2').feature('se1').set('subcfltol', 0.02);
model.sol.create('sol7');
model.sol('sol7').study('std2');
model.sol('sol7').label('Parametric Solutions 2');

model.batch('p2').feature('so1').set('psol', 'sol7');
model.batch('p2').run('compute');

model.result.dataset('dset6').set('geom', 'geom1');
model.result.create('pg6', 'PlotGroup2D');
model.result('pg6').label('Velocity (hmnf) 1');
model.result('pg6').set('data', 'dset6');
model.result('pg6').setIndex('looplevel', 1, 0);
model.result('pg6').set('frametype', 'spatial');
model.result('pg6').set('data', 'dset6');
model.result('pg6').setIndex('looplevel', 1, 0);
model.result('pg6').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg1');
model.result('pg6').feature.create('surf1', 'Surface');
model.result('pg6').feature('surf1').label('Surface');
model.result('pg6').feature('surf1').set('showsolutionparams', 'on');
model.result('pg6').feature('surf1').set('smooth', 'internal');
model.result('pg6').feature('surf1').set('showsolutionparams', 'on');
model.result('pg6').feature('surf1').set('data', 'parent');
model.result.create('pg7', 'PlotGroup2D');
model.result('pg7').label('Pressure (hmnf) 1');
model.result('pg7').set('data', 'dset6');
model.result('pg7').setIndex('looplevel', 1, 0);
model.result('pg7').set('frametype', 'spatial');
model.result('pg7').set('data', 'dset6');
model.result('pg7').setIndex('looplevel', 1, 0);
model.result('pg7').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg2');
model.result('pg7').feature.create('con1', 'Contour');
model.result('pg7').feature('con1').label('Contour');
model.result('pg7').feature('con1').set('showsolutionparams', 'on');
model.result('pg7').feature('con1').set('expr', 'p');
model.result('pg7').feature('con1').set('number', 40);
model.result('pg7').feature('con1').set('levelrounding', false);
model.result('pg7').feature('con1').set('smooth', 'internal');
model.result('pg7').feature('con1').set('showsolutionparams', 'on');
model.result('pg7').feature('con1').set('data', 'parent');
model.result.dataset.create('edg2', 'Edge2D');
model.result.dataset('edg2').label('Exterior Walls 1');
model.result.dataset('edg2').set('data', 'dset6');
model.result.dataset('edg2').selection.geom('geom1', 1);
model.result.dataset('edg2').selection.set([2 4]);
model.result.create('pg8', 'PlotGroup2D');
model.result('pg8').label('Wall Resolution (hmnf) 1');
model.result('pg8').set('data', 'dset6');
model.result('pg8').setIndex('looplevel', 1, 0);
model.result('pg8').set('frametype', 'spatial');
model.result('pg8').set('data', 'dset6');
model.result('pg8').setIndex('looplevel', 1, 0);
model.result('pg8').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pcond2/pcond4/pg2');
model.result('pg8').feature.create('line1', 'Line');
model.result('pg8').feature('line1').label('Wall Resolution');
model.result('pg8').feature('line1').set('showsolutionparams', 'on');
model.result('pg8').feature('line1').set('expr', 'hmnf.Delta_wPlus');
model.result('pg8').feature('line1').set('linetype', 'tube');
model.result('pg8').feature('line1').set('smooth', 'internal');
model.result('pg8').feature('line1').set('showsolutionparams', 'on');
model.result('pg8').feature('line1').set('data', 'parent');
model.result('pg8').feature('line1').feature.create('hght1', 'Height');
model.result('pg8').feature('line1').feature('hght1').label('Height Expression');
model.result('pg8').feature('line1').feature('hght1').set('heightdata', 'expr');
model.result('pg8').feature('line1').feature('hght1').set('expr', 'hmnf.WRHeightExpr');
model.result.create('pg9', 'PlotGroup2D');
model.result('pg9').label('Temperature (hmnf) 1');
model.result('pg9').set('data', 'dset6');
model.result('pg9').setIndex('looplevel', 1, 0);
model.result('pg9').set('data', 'dset6');
model.result('pg9').setIndex('looplevel', 1, 0);
model.result('pg9').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pg2');
model.result('pg9').feature.create('surf1', 'Surface');
model.result('pg9').feature('surf1').set('showsolutionparams', 'on');
model.result('pg9').feature('surf1').set('solutionparams', 'parent');
model.result('pg9').feature('surf1').set('expr', 'T');
model.result('pg9').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg9').feature('surf1').set('showsolutionparams', 'on');
model.result('pg9').feature('surf1').set('data', 'parent');
model.result.create('pg10', 'PlotGroup2D');
model.result('pg10').label('Mach Number (hmnf) 1');
model.result('pg10').set('data', 'dset6');
model.result('pg10').setIndex('looplevel', 1, 0);
model.result('pg10').set('data', 'dset6');
model.result('pg10').setIndex('looplevel', 1, 0);
model.result('pg10').set('defaultPlotID', 'MultiphysicsHighMachNumberFlow/icom1/pdef1/pcond1/pg1');
model.result('pg10').feature.create('surf1', 'Surface');
model.result('pg10').feature('surf1').set('expr', 'hmnf.Ma');
model.result('pg10').feature('surf1').set('smooth', 'internal');
model.result('pg10').feature('surf1').set('data', 'parent');
model.result('pg6').run;
model.result('pg10').run;
model.result('pg10').run;
model.result('pg10').feature('surf1').set('colortable', 'JupiterAuroraBorealis');
model.result('pg10').feature('surf1').set('colortabletrans', 'reverse');
model.result('pg10').run;
model.result('pg10').create('str1', 'Streamline');
model.result('pg10').feature('str1').set('expr', {'u' 'v'});
model.result('pg10').feature('str1').set('descr', 'Velocity field');
model.result('pg10').feature('str1').selection.set([1]);
model.result('pg10').feature('str1').set('selnumber', 9);
model.result('pg10').run;
model.result('pg10').create('con1', 'Contour');
model.result('pg10').feature('con1').set('expr', 'u');
model.result('pg10').feature('con1').set('descr', 'Velocity field, x-component');
model.result('pg10').feature('con1').set('levelmethod', 'levels');
model.result('pg10').feature('con1').set('coloring', 'uniform');
model.result('pg10').feature('con1').set('colorlegend', false);
model.result('pg10').run;
model.result('pg6').run;

model.nodeGroup.create('grp2', 'Results');
model.nodeGroup('grp2').set('type', 'plotgroup');
model.nodeGroup.move('grp2', 1);
model.nodeGroup('grp2').add('plotgroup', 'pg6');
model.nodeGroup('grp2').add('plotgroup', 'pg7');
model.nodeGroup('grp2').add('plotgroup', 'pg8');
model.nodeGroup('grp2').add('plotgroup', 'pg9');
model.nodeGroup('grp2').add('plotgroup', 'pg10');
model.nodeGroup('grp2').label('Strong Shock');

model.result.dataset.create('cln1', 'CutLine2D');
model.result.dataset('cln1').set('data', 'dset4');
model.result.dataset('cln1').setIndex('genpoints', '4.611*h_th', 0, 0);
model.result.dataset('cln1').setIndex('genpoints', '4.611*h_th', 1, 0);
model.result.dataset('cln1').setIndex('genpoints', '2*h_th', 1, 1);
model.result.dataset.create('cln2', 'CutLine2D');
model.result.dataset('cln2').set('data', 'dset4');
model.result.dataset('cln2').setIndex('genpoints', '6.340*h_th', 0, 0);
model.result.dataset('cln2').setIndex('genpoints', '6.340*h_th', 1, 0);
model.result.dataset('cln2').setIndex('genpoints', '2*h_th', 1, 1);
model.result.create('pg11', 'PlotGroup1D');
model.result('pg11').run;
model.result('pg11').setIndex('looplevelinput', 'last', 0);
model.result('pg11').create('lngr1', 'LineGraph');
model.result('pg11').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg11').feature('lngr1').set('linewidth', 'preference');
model.result('pg11').feature('lngr1').selection.set([4]);
model.result('pg11').feature('lngr1').set('expr', 'p/pin_tot');
model.result('pg11').feature('lngr1').set('xdataexpr', 'x');
model.result('pg11').feature('lngr1').set('xdatadescr', 'x-coordinate');
model.result('pg11').feature.duplicate('lngr2', 'lngr1');
model.result('pg11').run;
model.result('pg11').feature('lngr2').set('expr', 'ptop_weak(x/h_th)');
model.result('pg11').feature('lngr2').set('linestyle', 'none');
model.result('pg11').feature('lngr2').set('linecolor', 'black');
model.result('pg11').feature('lngr2').set('linemarker', 'diamond');
model.result('pg11').feature('lngr2').set('markerpos', 'interp');
model.result('pg11').feature('lngr2').set('markers', 30);
model.result('pg11').run;
model.result('pg11').set('titletype', 'manual');
model.result('pg11').set('title', 'Weak shock');
model.result('pg11').set('axislimits', true);
model.result('pg11').set('xmin', -0.2);
model.result('pg11').set('xmax', 0.4);
model.result('pg11').set('ymin', 0.25);
model.result('pg11').set('ymax', 1);
model.result('pg11').set('manualgrid', true);
model.result('pg11').set('xspacing', 0.05);
model.result('pg11').set('yspacing', 0.1);
model.result('pg11').run;
model.result.duplicate('pg12', 'pg11');
model.result('pg12').run;
model.result('pg12').set('data', 'dset4');
model.result('pg12').set('title', 'Strong shock');
model.result('pg12').run;
model.result('pg12').feature('lngr2').set('expr', 'ptop_strong(x/h_th)');
model.result('pg12').run;
model.result('pg12').run;
model.result('pg12').run;
model.result.create('pg13', 'PlotGroup1D');
model.result('pg13').run;
model.result('pg13').set('data', 'cln1');
model.result('pg13').create('lngr1', 'LineGraph');
model.result('pg13').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg13').feature('lngr1').set('linewidth', 'preference');
model.result('pg13').feature('lngr1').set('expr', 'u');
model.result('pg13').feature('lngr1').set('descr', 'Velocity field, x-component');
model.result('pg13').feature('lngr1').set('xdata', 'expr');
model.result('pg13').feature('lngr1').set('xdataexpr', 'y/0.0617');
model.result('pg13').run;
model.result('pg13').create('lngr2', 'LineGraph');
model.result('pg13').feature('lngr2').set('markerpos', 'datapoints');
model.result('pg13').feature('lngr2').set('linewidth', 'preference');
model.result('pg13').feature('lngr2').set('expr', 'u_at4611(y/0.0617)');
model.result('pg13').feature('lngr2').set('xdata', 'expr');
model.result('pg13').feature('lngr2').set('xdataexpr', 'y/0.0617');
model.result('pg13').feature('lngr2').set('linestyle', 'none');
model.result('pg13').feature('lngr2').set('linecolor', 'black');
model.result('pg13').feature('lngr2').set('linemarker', 'diamond');
model.result('pg13').feature('lngr2').set('markerpos', 'interp');
model.result('pg13').feature('lngr2').set('markers', 30);
model.result('pg13').run;
model.result('pg13').set('titletype', 'manual');
model.result('pg13').set('title', 'x/h_th = 4.611');
model.result('pg13').set('ylabelactive', true);
model.result('pg13').set('ylabel', 'u (m/s)');
model.result('pg13').set('axislimits', true);
model.result('pg13').set('xmin', -0.1);
model.result('pg13').set('xmax', 1.1);
model.result('pg13').set('ymin', -80);
model.result('pg13').set('ymax', 320);
model.result('pg13').set('manualgrid', true);
model.result('pg13').set('xspacing', 0.05);
model.result('pg13').set('yspacing', 20);
model.result('pg13').run;
model.result.duplicate('pg14', 'pg13');
model.result('pg14').run;
model.result('pg14').set('data', 'cln2');
model.result('pg14').set('title', 'x/h_th = 6.340');
model.result('pg14').run;
model.result('pg14').feature('lngr1').set('xdataexpr', 'y/0.066');
model.result('pg14').run;
model.result('pg14').feature('lngr2').set('expr', 'u_at6340(y/0.066)');
model.result('pg14').feature('lngr2').set('xdataexpr', 'y/0.066');
model.result('pg14').run;

model.title('Transonic Flow in a Sajben Diffuser');

model.description('This is a benchmark case for turbulent compressible flow in a 2D converging-diverging nozzle (Sajben diffuser). The flow enters the diffuser at Ma = 0.46, accelerates through the converging part, and reaches sonic conditions at the nozzle throat. The supersonic flow is terminated by a shock in the diverging part. The stationary positions of the shock wave are computed for two different outlet pressure values.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;
model.sol('sol8').clearSolutionData;

model.label('sajben_diffuser.mph');

model.modelNode.label('Components');

out = model;
