function out = model
%
% air_filter.m
%
% Model exported on May 26 2025, 21:26 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/CFD_Module/Single-Phase_Flow');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('spf', 'TurbulentFlowkomega', 'geom1');
model.physics('spf').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/spf', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('cell_type', '1', 'Type: 1 -rectangles, 2 - ellipses');
model.param.set('N_h', '3', 'Horizontal number of cells');
model.param.set('N_v', 'N_h', 'Vertical number of cells');
model.param.set('D_frame', '1.5[mm]', 'Frame depth');
model.param.set('Th_h', 'D_frame', 'Horizontal frame thickness');
model.param.set('Th_v', 'D_frame', 'Vertical frame thickness');
model.param.set('D_filter', '5[mm]', 'Filter depth');
model.param.set('L_h', '8[cm]', 'Filter horizontal length');
model.param.set('L_v', 'L_h', 'Filter vertical length');
model.param.set('U_in', '1[m/s]', 'Inlet velocity');
model.param.set('epsilon_p_i', '0.9', 'Filter porosity');
model.param.set('kappa_i', 'epsilon_p_i*((1e-4)^2/8)[m^2]', 'Filter permeability');
model.param.set('cF_i', '0.1', 'Filter Forchheimer coefficient');
model.param.create('par2');

% To import content from file, use:
% model.param('par2').loadFile('FILENAME');
model.param('par2').set('L_pre', '2[cm]', 'Inlet x-coordinate');
model.param('par2').set('L_post', '(4*(cell_type==1)+2*(cell_type==2))*L_wake', 'Outlet x-coordinate');
model.param('par2').set('cL_h', '(L_h-(N_h+1)*Th_h)/N_h', 'Cell horizontal dimension');
model.param('par2').set('cL_v', '(L_v-(N_v+1)*Th_v)/N_v', 'Cell vertical dimension');
model.param('par2').set('L_wake_1a', '10*max(Th_h,Th_v)', 'Grid influence length rectangles a');
model.param('par2').set('L_wake_1b', '10*(L_h*L_v/N_h/N_v-cL_h*cL_v)/(cL_h+cL_v)', 'Grid influence length rectangles b');
model.param('par2').set('L_wake_2', '10*sqrt(L_h*L_v/N_h/N_v-cL_h*cL_v)', 'Grid influence length ellipses');
model.param('par2').set('L_wake', '(cell_type==1)*L_wake_1a+(cell_type==2)*(L_wake_1b+L_wake_2)/2', 'Grid influence length');
model.param('par2').set('Cut_v_cell', 'round((N_v+1)/2)*(cL_v+Th_v)-cL_v/2', 'Cut dimension vertical, cell');
model.param('par2').set('Cut_h_cell', 'round((N_h+1)/2)*(cL_h+Th_h)-cL_h/2', 'Cut dimension horizontal, cell');
model.param('par2').set('Cut_v_edge', 'round((N_v+1)/2)*(cL_v+Th_v)+Th_v/2', 'Cut dimension vertical, edge');
model.param('par2').set('Cut_h_edge', 'round((N_h+1)/2)*(cL_h+Th_h)+Th_h/2', 'Cut dimension horizontal, edge');

model.geom('geom1').create('wp1', 'WorkPlane');
model.geom('geom1').feature('wp1').set('unite', true);
model.geom('geom1').feature('wp1').set('quickplane', 'yz');
model.geom('geom1').feature('wp1').geom.create('if1', 'If');
model.geom('geom1').feature('wp1').geom.feature.createAfter('endif1', 'EndIf', 'if1');
model.geom('geom1').feature('wp1').geom.feature('if1').set('condition', 'cell_type==1');
model.geom('geom1').feature('wp1').geom.create('r1', 'Rectangle');
model.geom('geom1').feature('wp1').geom.feature('r1').set('size', {'cL_h' 'cL_v'});
model.geom('geom1').feature('wp1').geom.feature('r1').set('base', 'center');
model.geom('geom1').feature('wp1').geom.feature('r1').set('pos', {'Th_h+cL_h/2' '0'});
model.geom('geom1').feature('wp1').geom.feature('r1').setIndex('pos', 'Th_v+cL_v/2', 1);
model.geom('geom1').feature('wp1').geom.selection.create('csel1', 'CumulativeSelection');
model.geom('geom1').feature('wp1').geom.selection('csel1').label('Inner Grill');
model.geom('geom1').feature('wp1').geom.feature('r1').set('contributeto', 'csel1');
model.geom('geom1').feature('wp1').geom.run('r1');
model.geom('geom1').feature('wp1').geom.create('elseif1', 'ElseIf');
model.geom('geom1').feature('wp1').geom.feature('elseif1').set('condition', 'cell_type==2');
model.geom('geom1').feature('wp1').geom.run('elseif1');
model.geom('geom1').feature('wp1').geom.create('e1', 'Ellipse');
model.geom('geom1').feature('wp1').geom.feature('e1').set('semiaxes', {'cL_h/2' 'cL_v/2'});
model.geom('geom1').feature('wp1').geom.feature('e1').set('pos', {'Th_h+cL_h/2' '0'});
model.geom('geom1').feature('wp1').geom.feature('e1').setIndex('pos', 'Th_v+cL_v/2', 1);
model.geom('geom1').feature('wp1').geom.feature('e1').set('contributeto', 'csel1');
model.geom('geom1').feature('wp1').geom.run('endif1');
model.geom('geom1').feature('wp1').geom.create('arr1', 'Array');
model.geom('geom1').feature('wp1').geom.feature('arr1').selection('input').named('csel1');
model.geom('geom1').feature('wp1').geom.feature('arr1').set('fullsize', {'N_h' 'N_v'});
model.geom('geom1').feature('wp1').geom.feature('arr1').set('displ', {'cL_h+Th_h' 'cL_v+Th_v'});
model.geom('geom1').feature('wp1').geom.run('arr1');
model.geom('geom1').feature('wp1').geom.create('r2', 'Rectangle');
model.geom('geom1').feature('wp1').geom.feature('r2').set('size', {'L_h' 'L_v'});
model.geom('geom1').feature('wp1').geom.run('r2');
model.geom('geom1').feature('wp1').geom.create('dif1', 'Difference');
model.geom('geom1').feature('wp1').geom.feature('dif1').selection('input').set({'r2'});
model.geom('geom1').feature('wp1').geom.feature('dif1').selection('input2').named('csel1');
model.geom('geom1').feature('wp1').geom.feature('dif1').set('contributeto', 'csel1');
model.geom('geom1').run('wp1');
model.geom('geom1').feature.create('ext1', 'Extrude');
model.geom('geom1').feature('ext1').setIndex('distance', 'D_frame', 0);
model.geom('geom1').feature('ext1').set('selresult', true);
model.geom('geom1').feature('ext1').set('selresultshow', 'bnd');
model.geom('geom1').feature('ext1').set('color', 'custom');
model.geom('geom1').feature('ext1').set('customcolor', [1 0 0]);
model.geom('geom1').selection.create('csel1', 'CumulativeSelection');
model.geom('geom1').selection('csel1').label('Frame');
model.geom('geom1').feature('ext1').set('contributeto', 'csel1');
model.geom('geom1').run('ext1');
model.geom('geom1').create('blk1', 'Block');
model.geom('geom1').feature('blk1').set('size', {'D_filter' 'L_h' '1'});
model.geom('geom1').feature('blk1').setIndex('size', 'L_v', 2);
model.geom('geom1').feature('blk1').set('pos', {'-D_filter' '0' '0'});
model.geom('geom1').feature('blk1').set('selresult', true);
model.geom('geom1').feature('blk1').set('color', '4');
model.geom('geom1').selection.create('csel2', 'CumulativeSelection');
model.geom('geom1').selection('csel2').label('Filter');
model.geom('geom1').feature('blk1').set('contributeto', 'csel2');

model.view.create('view3', 'geom1');
model.view('view3').model('comp1');
model.view('view3').set('transparency', true);

model.geom('geom1').run('blk1');
model.geom('geom1').create('blk2', 'Block');
model.geom('geom1').feature('blk2').set('size', {'L_pre+L_post' '1' '1'});
model.geom('geom1').feature('blk2').setIndex('size', 'L_h', 1);
model.geom('geom1').feature('blk2').setIndex('size', 'L_v', 2);
model.geom('geom1').feature('blk2').set('pos', {'-L_pre' '0' '0'});
model.geom('geom1').selection.create('csel3', 'CumulativeSelection');
model.geom('geom1').selection('csel3').label('Chamber');
model.geom('geom1').feature('blk2').set('contributeto', 'csel3');
model.geom('geom1').run('blk2');
model.geom('geom1').create('blk3', 'Block');
model.geom('geom1').feature('blk3').set('pos', {'-2*D_filter' '0' '0'});
model.geom('geom1').feature('blk3').set('size', {'D_filter' 'L_h' '1'});
model.geom('geom1').feature('blk3').setIndex('size', 'L_v', 2);
model.geom('geom1').selection.create('csel4', 'CumulativeSelection');
model.geom('geom1').selection('csel4').label('MD_pre');
model.geom('geom1').feature('blk3').set('contributeto', 'csel4');
model.geom('geom1').run('blk3');
model.geom('geom1').create('blk4', 'Block');
model.geom('geom1').feature('blk4').set('size', {'D_frame+L_wake' 'L_h' 'L_v'});
model.geom('geom1').selection.create('csel5', 'CumulativeSelection');
model.geom('geom1').selection('csel5').label('MD_post');
model.geom('geom1').feature('blk4').set('contributeto', 'csel5');
model.geom('geom1').run('blk4');
model.geom('geom1').create('dif1', 'Difference');
model.geom('geom1').feature('dif1').selection('input').set({'blk2' 'blk4'});
model.geom('geom1').feature('dif1').selection('input2').named('csel1');
model.geom('geom1').run('fin');
model.geom('geom1').create('mcd1', 'MeshControlDomains');
model.geom('geom1').feature('mcd1').selection('input').set('fin', [1 5]);
model.geom('geom1').run('mcd1');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('rho', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('cs', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an1', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an2', 'Analytic');
model.material('mat1').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat1').propertyGroup.create('NonlinearModel', 'Nonlinear model');
model.material('mat1').propertyGroup.create('idealGas', 'Ideal gas');
model.material('mat1').propertyGroup('idealGas').func.create('Cp', 'Piecewise');
model.material('mat1').label('Air');
model.material('mat1').set('family', 'air');
model.material('mat1').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('eta').set('pieces', {'200.0' '1600.0' '-8.38278E-7+8.35717342E-8*T^1-7.69429583E-11*T^2+4.6437266E-14*T^3-1.06585607E-17*T^4'});
model.material('mat1').propertyGroup('def').func('eta').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat1').propertyGroup('def').func('Cp').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('def').func('rho').set('expr', 'pA*0.02897/R_const[K*mol/J]/T');
model.material('mat1').propertyGroup('def').func('rho').set('args', {'pA' 'T'});
model.material('mat1').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.material('mat1').propertyGroup('def').func('rho').set('argunit', {'Pa' 'K'});
model.material('mat1').propertyGroup('def').func('rho').set('plotaxis', {'off' 'on'});
model.material('mat1').propertyGroup('def').func('rho').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat1').propertyGroup('def').func('rho').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '293.15'});
model.material('mat1').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('k').set('pieces', {'200.0' '1600.0' '-0.00227583562+1.15480022E-4*T^1-7.90252856E-8*T^2+4.11702505E-11*T^3-7.43864331E-15*T^4'});
model.material('mat1').propertyGroup('def').func('k').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.material('mat1').propertyGroup('def').func('cs').set('expr', 'sqrt(1.4*R_const[K*mol/J]/0.02897*T)');
model.material('mat1').propertyGroup('def').func('cs').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('cs').set('fununit', 'm/s');
model.material('mat1').propertyGroup('def').func('cs').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('cs').set('plotfixedvalue', {'273.15'});
model.material('mat1').propertyGroup('def').func('cs').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.material('mat1').propertyGroup('def').func('an1').set('expr', '-1/rho(pA,T)*d(rho(pA,T),T)');
model.material('mat1').propertyGroup('def').func('an1').set('args', {'pA' 'T'});
model.material('mat1').propertyGroup('def').func('an1').set('fununit', '1/K');
model.material('mat1').propertyGroup('def').func('an1').set('argunit', {'Pa' 'K'});
model.material('mat1').propertyGroup('def').func('an1').set('plotaxis', {'off' 'on'});
model.material('mat1').propertyGroup('def').func('an1').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat1').propertyGroup('def').func('an1').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an2').set('funcname', 'muB');
model.material('mat1').propertyGroup('def').func('an2').set('expr', '0.6*eta(T)');
model.material('mat1').propertyGroup('def').func('an2').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('an2').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('an2').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an2').set('plotfixedvalue', {'200'});
model.material('mat1').propertyGroup('def').func('an2').set('plotargs', {'T' '200' '1600'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.material('mat1').propertyGroup('def').set('molarmass', '');
model.material('mat1').propertyGroup('def').set('bulkviscosity', '');
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)'});
model.material('mat1').propertyGroup('def').set('molarmass', '0.02897[kg/mol]');
model.material('mat1').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.material('mat1').propertyGroup('def').set('ratioofspecificheat', '1.4');
model.material('mat1').propertyGroup('def').set('electricconductivity', {'0[S/m]' '0' '0' '0' '0[S/m]' '0' '0' '0' '0[S/m]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.material('mat1').propertyGroup('def').set('density', 'rho(pA,T)');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.material('mat1').propertyGroup('def').set('soundspeed', 'cs(T)');
model.material('mat1').propertyGroup('def').addInput('temperature');
model.material('mat1').propertyGroup('def').addInput('pressure');
model.material('mat1').propertyGroup('RefractiveIndex').set('n', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('NonlinearModel').set('BA', 'def.gamma-1');
model.material('mat1').propertyGroup('idealGas').func('Cp').label('Piecewise 2');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat1').propertyGroup('idealGas').func('Cp').set('argunit', 'K');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('idealGas').set('Rs', 'R_const/Mn');
model.material('mat1').propertyGroup('idealGas').set('heatcapacity', 'Cp(T)');
model.material('mat1').propertyGroup('idealGas').set('ratioofspecificheat', '1.4');
model.material('mat1').propertyGroup('idealGas').set('molarmass', '0.02897');
model.material('mat1').propertyGroup('idealGas').addInput('temperature');
model.material('mat1').propertyGroup('idealGas').addInput('pressure');
model.material('mat1').materialType('nonSolid');
model.material('mat1').propertyGroup('def').set('hydraulicpermeability', {'kappa_i'});
model.material('mat1').propertyGroup('def').set('porosity', {'epsilon_p_i'});

model.selection.create('int1', 'Intersection');
model.selection('int1').model('comp1');
model.selection('int1').label('Filter front');
model.selection('int1').set('entitydim', 2);
model.selection('int1').set('input', {'geom1_csel2_bnd' 'geom1_csel4_bnd'});
model.selection.create('int2', 'Intersection');
model.selection('int2').model('comp1');
model.selection('int2').label('Filter-frame');
model.selection('int2').set('entitydim', 2);
model.selection('int2').set('input', {'geom1_csel2_bnd' 'geom1_csel5_bnd'});

model.physics('spf').prop('PhysicalModelProperty').set('EnablePorousMediaDomains', true);
model.physics('spf').create('porous1', 'PorousMedium', 3);
model.physics('spf').feature('porous1').selection.named('geom1_csel2_dom');
model.physics('spf').feature('porous1').feature('pm1').set('cf', 'cF_i');
model.physics('spf').create('inl1', 'InletBoundary', 2);
model.physics('spf').feature('inl1').selection.set([1]);
model.physics('spf').feature('inl1').set('U0in', 'U_in');
model.physics('spf').create('out1', 'OutletBoundary', 2);
model.physics('spf').feature('out1').selection.set([62]);

model.mesh('mesh1').autoMeshSize(7);
model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('size1').set('hauto', 3);
model.mesh('mesh1').feature('size1').selection.named('geom1_csel1_bnd');
model.mesh('mesh1').run('size1');
model.mesh('mesh1').feature.duplicate('size2', 'size1');
model.mesh('mesh1').feature('size2').selection.named('int2');
model.mesh('mesh1').run('size2');
model.mesh('mesh1').feature.duplicate('size3', 'size2');
model.mesh('mesh1').feature('size3').selection.set([6 71 72]);
model.mesh('mesh1').feature('size3').set('hauto', 4);
model.mesh('mesh1').run('size3');
model.mesh('mesh1').feature.duplicate('size4', 'size3');
model.mesh('mesh1').feature('size4').selection.geom('geom1', 3);
model.mesh('mesh1').feature('size4').selection.set([2 3 4]);
model.mesh('mesh1').run;

model.view.create('view4', 'geom1');
model.view('view4').model('comp1');

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('se1', 'Segregated');
model.sol('sol1').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_p' 'comp1_u'});
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subdamp', 0.5);
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').label('Velocity u, Pressure p');
model.sol('sol1').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_k' 'comp1_om'});
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subdamp', 0.45);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subiter', 3);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subtermconst', 'itertol');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subntolfact', 1);
model.sol('sol1').feature('s1').create('i2', 'Iterative');
model.sol('sol1').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i2').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i2').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i2').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i2').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i2').label('AMG, turbulence variables (spf)');
model.sol('sol1').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('iter', 0);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('linsolver', 'i2');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').label('Turbulence Variables');
model.sol('sol1').feature('s1').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol1').feature('s1').feature('se1').set('subinitcfl', 2);
model.sol('sol1').feature('s1').feature('se1').set('submincfl', 10000);
model.sol('sol1').feature('s1').feature('se1').set('subkppid', 0.65);
model.sol('sol1').feature('s1').feature('se1').set('subkdpid', 0.05);
model.sol('sol1').feature('s1').feature('se1').set('subkipid', 0.05);
model.sol('sol1').feature('s1').feature('se1').set('subcfltol', 0.1);
model.sol('sol1').feature('s1').feature('se1').set('segcflaa', true);
model.sol('sol1').feature('s1').feature('se1').set('segcflaacfl', 9000);
model.sol('sol1').feature('s1').feature('se1').set('segcflaafact', 1);
model.sol('sol1').feature('s1').feature('se1').set('maxsegiter', 400);
model.sol('sol1').feature('s1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol1').feature('s1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.k 0 comp1.om 0 ');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.dataset('dset1').set('geom', 'geom1');
model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').label('Velocity (spf)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').set('data', 'dset1');
model.result('pg1').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pg1');
model.result('pg1').feature.create('slc1', 'Slice');
model.result('pg1').feature('slc1').label('Slice');
model.result('pg1').feature('slc1').set('showsolutionparams', 'on');
model.result('pg1').feature('slc1').set('smooth', 'internal');
model.result('pg1').feature('slc1').set('showsolutionparams', 'on');
model.result('pg1').feature('slc1').set('data', 'parent');
model.result.dataset.create('surf1', 'Surface');
model.result.dataset('surf1').label('Exterior Walls');
model.result.dataset('surf1').set('data', 'dset1');
model.result.dataset('surf1').selection.geom('geom1', 2);
model.result.dataset('surf1').selection.set([2 3 4 5 7 8 9 10 11 13 14 15 17 18 19 21 22 23 24 25 26 28 29 30 32 33 34 36 37 38 39 40 41 43 44 45 47 48 49 51 52 53 54 55 56 57 58 59 60 61]);
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Pressure (spf)');
model.result('pg2').set('data', 'surf1');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('data', 'surf1');
model.result('pg2').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pcond1/pcond1/pg4');
model.result('pg2').feature.create('surf1', 'Surface');
model.result('pg2').feature('surf1').label('Surface');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('expr', 'p');
model.result('pg2').feature('surf1').set('colortable', 'Dipole');
model.result('pg2').feature('surf1').set('smooth', 'internal');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('data', 'parent');
model.result('pg2').feature('surf1').feature.create('tran1', 'Transparency');
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').label('Wall Resolution (spf)');
model.result('pg3').set('data', 'surf1');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').set('data', 'surf1');
model.result('pg3').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pcond1/pcond1/pg3');
model.result('pg3').feature.create('surf1', 'Surface');
model.result('pg3').feature('surf1').label('Wall Resolution');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('expr', 'spf.Delta_wPlus');
model.result('pg3').feature('surf1').set('smooth', 'internal');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('data', 'parent');
model.result('pg1').run;
model.result.dataset.create('cln1', 'CutLine3D');
model.result.dataset('cln1').setIndex('genpoints', 0, 1, 0);
model.result.dataset('cln1').setIndex('genpoints', 'L_h', 1, 1);
model.result.dataset('cln1').setIndex('genpoints', 'Cut_v_cell', 0, 2);
model.result.dataset('cln1').setIndex('genpoints', 'Cut_v_cell', 1, 2);
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').run;
model.result('pg4').set('view', 'new');
model.result('pg4').label('Velocity and pressure');
model.result('pg4').set('showlegendsunit', true);
model.result('pg4').set('edges', false);
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('titletype', 'none');
model.result('pg4').feature('surf1').create('sel1', 'Selection');
model.result('pg4').feature('surf1').feature('sel1').selection.named('geom1_csel1_bnd');
model.result('pg4').run;
model.result('pg4').feature('surf1').create('mtrl1', 'MaterialAppearance');
model.result('pg4').run;
model.result('pg4').feature('surf1').feature('mtrl1').set('appearance', 'custom');
model.result('pg4').feature('surf1').feature('mtrl1').set('family', 'plasticshiny');
model.result('pg4').run;
model.result('pg4').create('surf2', 'Surface');
model.result('pg4').feature('surf2').set('colortable', 'ThermalWave');
model.result('pg4').feature('surf2').create('sel1', 'Selection');
model.result('pg4').feature('surf2').feature('sel1').selection.named('int1');
model.result('pg4').run;
model.result('pg4').create('str1', 'Streamline');
model.result('pg4').feature('str1').set('posmethod', 'start');
model.result('pg4').feature('str1').set('number', 100);
model.result('pg4').feature('str1').set('startdata', 'cln1');
model.result('pg4').feature('str1').set('linetype', 'ribbon');
model.result('pg4').feature('str1').set('widthscaleactive', true);
model.result('pg4').feature('str1').set('widthscale', '2E-4');
model.result('pg4').feature('str1').create('col1', 'Color');
model.result('pg4').run;
model.result('pg4').feature('str1').feature('col1').set('expr', 'p');
model.result('pg4').feature('str1').feature('col1').set('titletype', 'auto');
model.result('pg4').feature('str1').feature('col1').set('colortable', 'Prism');
model.result('pg4').run;
model.result.duplicate('pg5', 'pg4');
model.result('pg5').run;
model.result('pg5').label('Velocity and turbulence kinetic energy');
model.result('pg5').run;
model.result('pg5').feature('str1').feature('col1').set('expr', 'k');
model.result('pg5').run;
model.result.duplicate('pg6', 'pg5');
model.result('pg6').run;
model.result('pg6').label('Velocity slices xy and xz');
model.result('pg6').set('view', 'new');
model.result('pg6').run;

model.view('view6').set('transparency', true);
model.view('view6').set('transparencylevel', 0.1);

model.result('pg6').run;
model.result('pg6').feature.remove('surf2');
model.result('pg6').feature.remove('str1');
model.result('pg6').run;
model.result('pg6').run;
model.result('pg6').create('slc1', 'Slice');
model.result('pg6').feature('slc1').set('quickplane', 'xy');
model.result('pg6').feature('slc1').set('quickzmethod', 'coord');
model.result('pg6').feature('slc1').set('quickz', 'Cut_v_cell');
model.result('pg6').feature('slc1').set('rangecoloractive', true);
model.result('pg6').feature('slc1').set('rangecolormax', 1.5);
model.result('pg6').feature('slc1').set('titletype', 'manual');
model.result('pg6').feature('slc1').set('title', 'Slices: Velocity magnitude (m/s)');
model.result('pg6').feature.duplicate('slc2', 'slc1');
model.result('pg6').run;
model.result('pg6').feature('slc2').set('quickplane', 'zx');
model.result('pg6').feature('slc2').set('quickymethod', 'coord');
model.result('pg6').feature('slc2').set('quicky', 'Cut_h_edge');
model.result('pg6').feature('slc2').set('inheritplot', 'slc1');
model.result('pg6').feature('slc2').set('titletype', 'none');
model.result('pg6').run;
model.result.duplicate('pg7', 'pg6');
model.result('pg7').run;
model.result('pg7').label('log10(Turbulence kinetic energy) slices xy and xz');
model.result('pg7').run;
model.result('pg7').feature('slc1').set('rangecoloractive', false);
model.result('pg7').feature('slc1').set('title', 'Slices: log10(Turbulence kinetic energy)');
model.result('pg7').feature('slc1').set('expr', 'log10(k)');
model.result('pg7').feature('slc1').set('colortable', 'DipoleDark');
model.result('pg7').run;
model.result('pg7').feature('slc2').set('expr', 'log10(k)');
model.result('pg6').run;
model.result.duplicate('pg8', 'pg6');
model.result('pg8').run;
model.result('pg8').set('view', 'new');
model.result('pg8').label('Velocity slices yz planes');
model.result('pg8').set('plotarrayenable', true);
model.result('pg8').set('arrayshape', 'square');
model.result('pg8').set('arrayplane', 'yz');
model.result('pg8').feature('surf1').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature.remove('surf1');
model.result('pg8').feature.remove('slc2');
model.result('pg8').feature('slc1').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature('slc1').set('quickplane', 'yz');
model.result('pg8').feature('slc1').set('quickxmethod', 'coord');
model.result('pg8').feature('slc1').set('quickx', '-2*D_filter');
model.result('pg8').feature('slc1').set('manualindexing', true);
model.result('pg8').feature.duplicate('slc2', 'slc1');
model.result('pg8').feature('slc2').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature('slc2').set('quickx', '-D_filter');
model.result('pg8').feature('slc2').set('rowindex', -1);
model.result('pg8').feature('slc2').set('inheritplot', 'slc1');
model.result('pg8').feature('slc2').set('titletype', 'none');
model.result('pg8').feature.duplicate('slc3', 'slc2');
model.result('pg8').feature('slc3').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature('slc3').set('quickx', 0);
model.result('pg8').feature('slc3').set('rowindex', -2);
model.result('pg8').feature.duplicate('slc4', 'slc3');
model.result('pg8').feature('slc4').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature('slc4').set('quickx', 'D_frame');
model.result('pg8').feature('slc4').set('rowindex', 0);
model.result('pg8').feature('slc4').set('colindex', 1);
model.result('pg8').feature.duplicate('slc5', 'slc4');
model.result('pg8').feature('slc5').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature('slc5').set('quickx', 'D_frame+L_wake/2');
model.result('pg8').feature('slc5').set('rowindex', -1);
model.result('pg8').feature.duplicate('slc6', 'slc5');
model.result('pg8').feature('slc6').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature('slc6').set('quickx', 'D_frame+L_wake');
model.result('pg8').feature('slc6').set('rowindex', -2);
model.result('pg8').run;
model.result.duplicate('pg9', 'pg8');
model.result('pg9').run;
model.result('pg9').label('Turbulence kinetic energy yz planes');
model.result('pg9').feature('slc1').set('arraydim', '2');
model.result('pg9').run;
model.result('pg9').feature('slc1').set('title', 'Slices: Turbulence kinetic energy (m<sup>2</sup>/s<sup>2</sup>)');
model.result('pg9').feature('slc1').set('rangecoloractive', false);
model.result('pg9').feature('slc1').set('expr', 'k');
model.result('pg9').feature('slc1').set('colortable', 'GrayBodyLight');
model.result('pg9').feature('slc2').set('arraydim', '2');
model.result('pg9').run;
model.result('pg9').feature('slc2').set('expr', 'k');
model.result('pg9').feature('slc3').set('arraydim', '2');
model.result('pg9').run;
model.result('pg9').feature('slc3').set('expr', 'k');
model.result('pg9').feature('slc4').set('arraydim', '2');
model.result('pg9').run;
model.result('pg9').feature('slc4').set('expr', 'k');
model.result('pg9').feature('slc5').set('arraydim', '2');
model.result('pg9').run;
model.result('pg9').feature('slc5').set('expr', 'k');
model.result('pg9').feature('slc6').set('arraydim', '2');
model.result('pg9').run;
model.result('pg9').feature('slc6').set('expr', 'k');
model.result.export.create('img1', 'Image');
model.result.export('img1').set('size', 'current');
model.result.export('img1').set('unit', 'px');
model.result.export('img1').set('height', '600');
model.result.export('img1').set('width', '800');
model.result.export('img1').set('lockratio', 'off');
model.result.export('img1').set('resolution', '96');
model.result.export('img1').set('antialias', 'on');
model.result.export('img1').set('zoomextents', 'off');
model.result.export('img1').set('fontsize', '9');
model.result.export('img1').set('colortheme', 'globaltheme');
model.result.export('img1').set('customcolor', [1 1 1]);
model.result.export('img1').set('background', 'color');
model.result.export('img1').set('gltfincludelines', 'on');
model.result.export('img1').set('title1d', 'on');
model.result.export('img1').set('legend1d', 'on');
model.result.export('img1').set('logo1d', 'on');
model.result.export('img1').set('options1d', 'on');
model.result.export('img1').set('title2d', 'on');
model.result.export('img1').set('legend2d', 'on');
model.result.export('img1').set('logo2d', 'on');
model.result.export('img1').set('options2d', 'off');
model.result.export('img1').set('title3d', 'on');
model.result.export('img1').set('legend3d', 'on');
model.result.export('img1').set('logo3d', 'on');
model.result.export('img1').set('options3d', 'off');
model.result.export('img1').set('axisorientation', 'on');
model.result.export('img1').set('grid', 'on');
model.result.export('img1').set('axes1d', 'on');
model.result.export('img1').set('axes2d', 'on');
model.result.export('img1').set('showgrid', 'on');
model.result.export('img1').set('target', 'file');
model.result.export('img1').set('qualitylevel', '92');
model.result.export('img1').set('qualityactive', 'off');
model.result.export('img1').set('imagetype', 'png');
model.result.export('img1').set('lockview', 'off');
model.result.export('img1').set('size', 'presentation');
model.result.export('img1').set('unit', 'px');
model.result.export('img1').set('lockratio', 'off');
model.result.export('img1').set('width', '874');
model.result.export('img1').set('height', '656');
model.result.export('img1').set('resolution', '96');
model.result.export('img1').set('zoomextents', 'off');
model.result.export('img1').set('antialias', 'on');
model.result.export('img1').set('options1d', 'on');
model.result.export('img1').set('options2d', 'off');
model.result.export('img1').set('options3d', 'off');
model.result.export('img1').set('title1d', 'on');
model.result.export('img1').set('title2d', 'on');
model.result.export('img1').set('title3d', 'on');
model.result.export('img1').set('legend1d', 'on');
model.result.export('img1').set('legend2d', 'on');
model.result.export('img1').set('legend3d', 'on');
model.result.export('img1').set('axes1d', 'on');
model.result.export('img1').set('axes2d', 'on');
model.result.export('img1').set('logo1d', 'on');
model.result.export('img1').set('logo2d', 'on');
model.result.export('img1').set('logo3d', 'on');
model.result.export('img1').set('showgrid', 'on');
model.result.export('img1').set('axisorientation', 'on');
model.result.export('img1').set('grid', 'on');
model.result.export('img1').set('fontsize', '12');
model.result.export('img1').set('colortheme', 'globaltheme');
model.result.export('img1').set('background', 'transparent');
model.result.export('img1').set('gltfincludelines', 'on');
model.result.export('img1').set('qualitylevel', '92');
model.result.export('img1').set('qualityactive', 'off');
model.result.export('img1').set('imagetype', 'png');
model.result.export('img1').set('target', 'clipboard');
model.result.export('img1').set('addsuffix', 'off');
model.result.export('img1').set('lockview', 'off');
model.result.export('img1').set('customcolor', [1 1 1]);
model.result.export('img1').set('width', 3165);
model.result.export('img1').set('height', 2374);
model.result.export('img1').set('resolution', 90);
model.result.export('img1').set('sourcetype', 'mesh');
model.result.export('img1').set('sourceobject', 'mesh1');
model.result.export('img1').set('target', 'file');
model.result.export('img1').set('view', 'view3');
model.result.export('img1').set('pngfilename', 'air_filter_mesh_1_HiRes.png');
model.result.export('img1').run;
model.result.export.duplicate('img2', 'img1');
model.result.export('img2').set('view', 'view4');
model.result.export('img2').set('pngfilename', 'air_filter_mesh_2_HiRes.png');
model.result.export('img2').run;

model.title('Air Filter');

model.description('This example demonstrates simulation of a turbulent flow in a geometry with an air filter. The porous material of the filter induces an abrupt pressure drop and a drastic increase of the turbulence level inside the filter.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;

model.label('air_filter.mph');

model.modelNode.label('Components');

out = model;
