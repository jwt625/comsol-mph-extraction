function out = model
%
% balloon_inflation.m
%
% Model exported on May 26 2025, 21:31 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Nonlinear_Structural_Materials_Module/Hyperelasticity');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/solid', true);

model.param.set('Ri', '10[cm]');
model.param.descr('Ri', 'Inner radius');
model.param.set('H', '1[mm]');
model.param.descr('H', 'Thickness');
model.param.set('mu', '4.225e5[Pa]');
model.param.descr('mu', 'Shear modulus');
model.param.set('kappa', '1e5*mu');
model.param.descr('kappa', 'Bulk modulus');
model.param.set('stretch', '1[1]');
model.param.descr('stretch', 'Applied stretch');
model.param.set('C10', '0.4375*mu');
model.param.descr('C10', ['Mooney' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Rivlin parameter C10']);
model.param.set('C01', '0.0625*mu');
model.param.descr('C01', ['Mooney' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Rivlin parameter C01']);
model.param.set('mu1', '6.3e5[Pa]');
model.param.descr('mu1', 'Ogden parameter mu1');
model.param.set('mu2', '0.012e5[Pa]');
model.param.descr('mu2', 'Ogden parameter mu2');
model.param.set('mu3', '-0.1e5[Pa]');
model.param.descr('mu3', 'Ogden parameter mu3');
model.param.set('alpha1', '1.3');
model.param.descr('alpha1', 'Ogden parameter alpha1');
model.param.set('alpha2', '5');
model.param.descr('alpha2', 'Ogden parameter alpha2');
model.param.set('alpha3', '-2');
model.param.descr('alpha3', 'Ogden parameter alpha3');

model.variable.create('var1');
model.variable('var1').model('comp1');

model.geom('geom1').run;

model.variable('var1').set('u_appl', '(stretch-1)*Ri');
model.variable('var1').descr('u_appl', 'Applied displacement');

model.geom('geom1').create('c1', 'Circle');
model.geom('geom1').feature('c1').set('r', 'Ri+H');
model.geom('geom1').feature('c1').set('angle', 20);
model.geom('geom1').feature('c1').setIndex('layername', 'Layer 1', 0);
model.geom('geom1').feature('c1').setIndex('layer', 'H', 0);
model.geom('geom1').runPre('fin');
model.geom('geom1').create('del1', 'Delete');
model.geom('geom1').feature('del1').selection('input').init(2);
model.geom('geom1').feature('del1').selection('input').set('c1', 1);
model.geom('geom1').runPre('fin');
model.geom('geom1').run;

model.physics('solid').create('hmm1', 'HyperelasticModel', 2);
model.physics('solid').feature('hmm1').label('Neo-Hookean');
model.physics('solid').feature('hmm1').selection.all;
model.physics('solid').feature('hmm1').set('Compressibility_NeoHookean', 'NearlyIncompressible');
model.physics('solid').feature('hmm1').set('kappa', 'kappa');
model.physics('solid').feature('hmm1').set('muLame_mat', 'userdef');
model.physics('solid').feature('hmm1').set('muLame', 'mu');
model.physics('solid').create('hmm2', 'HyperelasticModel', 2);
model.physics('solid').feature('hmm2').label(['Mooney' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Rivlin']);
model.physics('solid').feature('hmm2').selection.all;
model.physics('solid').feature('hmm2').set('MaterialModel', 'MooneyRivlin');
model.physics('solid').feature('hmm2').set('C10_mat', 'userdef');
model.physics('solid').feature('hmm2').set('C10', 'C10');
model.physics('solid').feature('hmm2').set('C01_mat', 'userdef');
model.physics('solid').feature('hmm2').set('C01', 'C01');
model.physics('solid').feature('hmm2').set('kappa', 'kappa');
model.physics('solid').create('hmm3', 'HyperelasticModel', 2);
model.physics('solid').feature('hmm3').label('Ogden');
model.physics('solid').feature('hmm3').selection.all;
model.physics('solid').feature('hmm3').set('MaterialModel', 'Ogden');
model.physics('solid').feature('hmm3').setIndex('mup', 0, 1, 0);
model.physics('solid').feature('hmm3').setIndex('alphap', 0, 1, 0);
model.physics('solid').feature('hmm3').setIndex('alphap', 0, 1, 0);
model.physics('solid').feature('hmm3').setIndex('mup', 0, 1, 0);
model.physics('solid').feature('hmm3').setIndex('alphap', 0, 1, 0);
model.physics('solid').feature('hmm3').setIndex('mup', 0, 2, 0);
model.physics('solid').feature('hmm3').setIndex('alphap', 0, 2, 0);
model.physics('solid').feature('hmm3').setIndex('alphap', 0, 2, 0);
model.physics('solid').feature('hmm3').setIndex('mup', 0, 2, 0);
model.physics('solid').feature('hmm3').setIndex('alphap', 0, 2, 0);
model.physics('solid').feature('hmm3').setIndex('mup', 'mu1', 0, 0);
model.physics('solid').feature('hmm3').setIndex('alphap', 'alpha1', 0, 0);
model.physics('solid').feature('hmm3').setIndex('mup', 'mu2', 1, 0);
model.physics('solid').feature('hmm3').setIndex('alphap', 'alpha2', 1, 0);
model.physics('solid').feature('hmm3').setIndex('mup', 'mu3', 2, 0);
model.physics('solid').feature('hmm3').setIndex('alphap', 'alpha3', 2, 0);
model.physics('solid').feature('hmm3').set('kappa', 'kappa');
model.physics('solid').create('hmm4', 'HyperelasticModel', 2);
model.physics('solid').feature('hmm4').label('Varga');
model.physics('solid').feature('hmm4').selection.all;
model.physics('solid').feature('hmm4').set('MaterialModel', 'Varga');
model.physics('solid').feature('hmm4').set('c1VA_mat', 'userdef');
model.physics('solid').feature('hmm4').set('c1VA', '2*mu');
model.physics('solid').feature('hmm4').set('c2VA_mat', 'userdef');
model.physics('solid').feature('hmm4').set('kappa', 'kappa');
model.physics('solid').create('roll1', 'Roller', 1);
model.physics('solid').feature('roll1').selection.set([1 2]);
model.physics('solid').create('bndl1', 'BoundaryLoad', 1);
model.physics('solid').feature('bndl1').selection.set([3]);
model.physics('solid').feature('bndl1').set('LoadType', 'FollowerPressure');
model.physics('solid').feature('bndl1').set('FollowerPressure', 'p_f');

model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl('intop1').set('axisym', true);
model.cpl('intop1').selection.geom('geom1', 0);
model.cpl('intop1').selection.set([3]);
model.cpl('intop1').set('frame', 'material');
model.cpl('intop1').set('axisym', false);

model.variable('var1').set('ub', 'intop1(u)');
model.variable('var1').descr('ub', 'Radial displacement, inner boundary');

model.physics('solid').create('ge1', 'GlobalEquations', -1);
model.physics('solid').feature('ge1').setIndex('name', 'p_f', 0, 0);
model.physics('solid').feature('ge1').setIndex('equation', 'ub-u_appl', 0, 0);
model.physics('solid').feature('ge1').setIndex('initialValueU', 0, 0, 0);
model.physics('solid').feature('ge1').setIndex('initialValueUt', 0, 0, 0);
model.physics('solid').feature('ge1').set('DependentVariableQuantity', 'pressure');
model.physics('solid').feature('ge1').set('SourceTermQuantity', 'displacement');

model.variable('var1').set('p_Ogden', '2*(H/Ri)*(mu1*(stretch^(alpha1-3)-stretch^(-2*alpha1-3))+mu2*(stretch^(alpha2-3)-stretch^(-2*alpha2-3))+mu3*(stretch^(alpha3-3)-stretch^(-2*alpha3-3)))');
model.variable('var1').descr('p_Ogden', 'Pressure (Ogden, analytical)');
model.variable('var1').set('sp1_Ogden', 'mu1*(stretch^alpha1-stretch^(-2*alpha1))+mu2*(stretch^alpha2-stretch^(-2*alpha2))+mu3*(stretch^alpha3-stretch^(-2*alpha3))');
model.variable('var1').descr('sp1_Ogden', 'Hoop stress (Ogden, analytical)');

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([2]);
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 3);
model.mesh('mesh1').feature('map1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis2').selection.set([3]);
model.mesh('mesh1').feature('map1').feature('dis2').set('numelem', 50);
model.mesh('mesh1').run;

model.study('std1').feature('stat').set('useadvanceddisable', true);
model.study('std1').feature('stat').set('disabledphysics', {'solid/hmm2' 'solid/hmm3' 'solid/hmm4'});
model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 'Ri', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'm', 0);
model.study('std1').feature('stat').setIndex('pname', 'Ri', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'm', 0);
model.study('std1').feature('stat').setIndex('pname', 'stretch', 0);
model.study('std1').feature('stat').setIndex('plistarr', 'range(1, 0.1, 2) range(2.2, 0.2, 10)', 0);
model.study('std1').label('Neo-Hookean');
model.study('std1').setGenPlots(false);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s1').set('control', 'stat');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('v1').set('scalemethod', 'manual');
model.sol('sol1').feature('s1').feature('dDef').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'const');
model.sol('sol1').runAll;

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/solid', true);
model.study('std2').label(['Mooney' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Rivlin']);
model.study('std2').setGenPlots(false);
model.study('std2').feature('stat').set('useadvanceddisable', true);
model.study('std2').feature('stat').set('disabledphysics', {'solid/hmm1' 'solid/hmm3' 'solid/hmm4'});
model.study('std2').feature('stat').set('useparam', true);
model.study('std2').feature('stat').setIndex('pname', 'Ri', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 'm', 0);
model.study('std2').feature('stat').setIndex('pname', 'Ri', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 'm', 0);
model.study('std2').feature('stat').setIndex('pname', 'stretch', 0);
model.study('std2').feature('stat').setIndex('plistarr', 'range(1, 0.1, 5)', 0);

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('p1', 'Parametric');
model.sol('sol2').feature('s1').feature.remove('pDef');
model.sol('sol2').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol2').feature('s1').set('control', 'stat');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').feature('v1').set('scalemethod', 'manual');
model.sol('sol2').feature('s1').feature('dDef').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol2').feature('s1').feature('fc1').set('dtech', 'const');
model.sol('sol2').runAll;

model.study.create('std3');
model.study('std3').create('stat', 'Stationary');
model.study('std3').feature('stat').setSolveFor('/physics/solid', true);
model.study('std3').label('Ogden');
model.study('std3').setGenPlots(false);
model.study('std3').feature('stat').set('useadvanceddisable', true);
model.study('std3').feature('stat').set('disabledphysics', {'solid/hmm1' 'solid/hmm2' 'solid/hmm4'});
model.study('std3').feature('stat').set('useparam', true);
model.study('std3').feature('stat').setIndex('pname', 'Ri', 0);
model.study('std3').feature('stat').setIndex('plistarr', '', 0);
model.study('std3').feature('stat').setIndex('punit', 'm', 0);
model.study('std3').feature('stat').setIndex('pname', 'Ri', 0);
model.study('std3').feature('stat').setIndex('plistarr', '', 0);
model.study('std3').feature('stat').setIndex('punit', 'm', 0);
model.study('std3').feature('stat').setIndex('pname', 'stretch', 0);
model.study('std3').feature('stat').setIndex('plistarr', 'range(1, 0.1, 2) range(2.2, 0.2, 10)', 0);

model.sol.create('sol3');
model.sol('sol3').study('std3');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std3');
model.sol('sol3').feature('st1').set('studystep', 'stat');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').set('control', 'stat');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').create('p1', 'Parametric');
model.sol('sol3').feature('s1').feature.remove('pDef');
model.sol('sol3').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol3').feature('s1').set('control', 'stat');
model.sol('sol3').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol3').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol3').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol('sol3').attach('std3');
model.sol('sol3').feature('v1').set('scalemethod', 'manual');
model.sol('sol3').feature('s1').feature('dDef').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol3').feature('s1').feature('fc1').set('dtech', 'const');
model.sol('sol3').runAll;

model.study.create('std4');
model.study('std4').create('stat', 'Stationary');
model.study('std4').feature('stat').setSolveFor('/physics/solid', true);
model.study('std4').setGenPlots(false);
model.study('std4').feature('stat').set('useadvanceddisable', true);
model.study('std4').feature('stat').set('disabledphysics', {'solid/hmm1' 'solid/hmm2' 'solid/hmm3'});
model.study('std4').feature('stat').set('useparam', true);
model.study('std4').feature('stat').setIndex('pname', 'Ri', 0);
model.study('std4').feature('stat').setIndex('plistarr', '', 0);
model.study('std4').feature('stat').setIndex('punit', 'm', 0);
model.study('std4').feature('stat').setIndex('pname', 'Ri', 0);
model.study('std4').feature('stat').setIndex('plistarr', '', 0);
model.study('std4').feature('stat').setIndex('punit', 'm', 0);
model.study('std4').feature('stat').setIndex('pname', 'stretch', 0);
model.study('std4').feature('stat').setIndex('plistarr', 'range(1, 0.1, 2) range(2.2, 0.2, 7)', 0);
model.study('std4').label('Varga');

model.sol.create('sol4');
model.sol('sol4').study('std4');
model.sol('sol4').create('st1', 'StudyStep');
model.sol('sol4').feature('st1').set('study', 'std4');
model.sol('sol4').feature('st1').set('studystep', 'stat');
model.sol('sol4').create('v1', 'Variables');
model.sol('sol4').feature('v1').set('control', 'stat');
model.sol('sol4').create('s1', 'Stationary');
model.sol('sol4').feature('s1').create('p1', 'Parametric');
model.sol('sol4').feature('s1').feature.remove('pDef');
model.sol('sol4').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol4').feature('s1').set('control', 'stat');
model.sol('sol4').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol4').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol4').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol4').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol4').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol4').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol4').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol4').feature('s1').feature.remove('fcDef');
model.sol('sol4').attach('std4');
model.sol('sol4').feature('v1').set('scalemethod', 'manual');
model.sol('sol4').feature('s1').feature('dDef').set('mumpsalloc', 2.1);
model.sol('sol4').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol4').feature('s1').feature('fc1').set('dtech', 'const');
model.sol('sol4').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 51, 0);
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('surf1').set('threshold', 'manual');
model.result('pg1').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').feature('surf1').set('colortabletrans', 'none');
model.result('pg1').feature('surf1').set('colorscalemode', 'linear');
model.result('pg1').feature('surf1').set('resolution', 'normal');
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg1').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg1').feature('surf1').feature('def').set('scale', '1');
model.result('pg1').feature('surf1').feature('def').set('expr', {'u' 'w'});
model.result('pg1').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg1').label('Stress (solid)');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').set('frametype', 'material');
model.result('pg1').run;
model.result('pg1').feature('surf1').set('expr', 'solid.sp1');
model.result('pg1').feature('surf1').set('unit', 'MPa');
model.result('pg1').run;
model.result('pg1').feature('surf1').feature('def').set('scale', 0.05);
model.result('pg1').run;
model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').run;
model.result('pg2').label('Inflation Pressure');
model.result('pg2').set('ylabelactive', true);
model.result('pg2').set('ylabel', 'Inflation pressure (kPa)');
model.result('pg2').set('titletype', 'manual');
model.result('pg2').set('title', 'Inflation Pressure vs. Stretch');
model.result('pg2').create('ptgr1', 'PointGraph');
model.result('pg2').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg2').feature('ptgr1').set('linewidth', 'preference');
model.result('pg2').feature('ptgr1').set('data', 'dset1');
model.result('pg2').feature('ptgr1').selection.set([3]);
model.result('pg2').feature('ptgr1').set('expr', 'p_f');
model.result('pg2').feature('ptgr1').set('unit', 'kPa');
model.result('pg2').feature('ptgr1').set('xdataexpr', 'stretch');
model.result('pg2').feature('ptgr1').set('xdatadescr', 'Applied stretch');
model.result('pg2').feature('ptgr1').set('legend', true);
model.result('pg2').feature('ptgr1').set('legendmethod', 'manual');
model.result('pg2').feature('ptgr1').setIndex('legends', 'Neo-Hookean', 0);
model.result('pg2').run;
model.result('pg2').feature.duplicate('ptgr2', 'ptgr1');
model.result('pg2').run;
model.result('pg2').feature('ptgr2').set('data', 'dset2');
model.result('pg2').feature('ptgr2').setIndex('legends', ['Mooney' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Rivlin'], 0);
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature.duplicate('ptgr3', 'ptgr1');
model.result('pg2').run;
model.result('pg2').feature('ptgr3').set('data', 'dset3');
model.result('pg2').feature('ptgr3').setIndex('legends', 'Ogden', 0);
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature.duplicate('ptgr4', 'ptgr1');
model.result('pg2').run;
model.result('pg2').feature('ptgr4').set('data', 'dset4');
model.result('pg2').feature('ptgr4').setIndex('legends', 'Varga', 0);
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature.duplicate('ptgr5', 'ptgr1');
model.result('pg2').run;
model.result('pg2').feature('ptgr5').set('data', 'dset3');
model.result('pg2').feature('ptgr5').set('expr', 'p_Ogden');
model.result('pg2').feature('ptgr5').set('linestyle', 'none');
model.result('pg2').feature('ptgr5').set('linecolor', 'fromtheme');
model.result('pg2').feature('ptgr5').set('linemarker', 'asterisk');
model.result('pg2').feature('ptgr5').set('markerpos', 'interp');
model.result('pg2').feature('ptgr5').set('markers', 40);
model.result('pg2').feature('ptgr5').setIndex('legends', 'Analytical (Ogden)', 0);
model.result('pg2').run;
model.result('pg2').run;
model.result.duplicate('pg3', 'pg2');
model.result('pg3').run;
model.result('pg3').label('First Principal Stress');
model.result('pg3').set('title', 'First Principal Stress vs. Stretch');
model.result('pg3').set('ylabel', 'First principal stress (MPa)');
model.result('pg3').set('axislimits', true);
model.result('pg3').set('ymax', 40);
model.result('pg3').run;
model.result('pg3').feature('ptgr1').set('expr', 'solid.sp1');
model.result('pg3').feature('ptgr1').set('unit', 'MPa');
model.result('pg3').run;
model.result('pg3').feature('ptgr2').set('expr', 'solid.sp1');
model.result('pg3').feature('ptgr2').set('unit', 'MPa');
model.result('pg3').run;
model.result('pg3').feature('ptgr3').set('expr', 'solid.sp1');
model.result('pg3').feature('ptgr3').set('unit', 'MPa');
model.result('pg3').run;
model.result('pg3').feature('ptgr4').set('expr', 'solid.sp1');
model.result('pg3').feature('ptgr4').set('unit', 'MPa');
model.result('pg3').run;
model.result('pg3').feature('ptgr5').set('expr', 'sp1_Ogden');
model.result('pg3').feature('ptgr5').set('unit', 'MPa');
model.result('pg3').run;
model.result('pg2').run;

model.title('Inflation of a Spherical Rubber Balloon');

model.description(['This example investigates the inflation of a spherical rubber balloon for four different hyperelastic material models: Neo-Hookean, Mooney' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Rivlin, Ogden, and Varga.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;

model.label('balloon_inflation.mph');

model.modelNode.label('Components');

out = model;
