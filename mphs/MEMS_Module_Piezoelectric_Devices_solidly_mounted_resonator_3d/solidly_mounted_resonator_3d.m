function out = model
%
% solidly_mounted_resonator_3d.m
%
% Model exported on May 26 2025, 21:30 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/MEMS_Module/Piezoelectric_Devices');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');
model.physics('solid').create('pzm1', 'PiezoelectricMaterialModel');
model.physics('solid').feature('pzm1').selection.all;
model.physics.create('es', 'Electrostatics', 'geom1');
model.physics('es').model('comp1');
model.physics('es').create('ccnp1', 'ChargeConservationPiezo');
model.physics('es').feature('ccnp1').selection.all;

model.multiphysics.create('pze1', 'PiezoelectricEffect', 'geom1', 3);
model.multiphysics('pze1').set('Solid_physics', 'solid');
model.multiphysics('pze1').set('Electrostatics_physics', 'es');

model.study.create('std1');
model.study('std1').create('eig', 'Eigenfrequency');
model.study('std1').feature('eig').set('shift', '1[Hz]');
model.study('std1').feature('eig').set('chkeigregion', true);
model.study('std1').feature('eig').set('conrad', '1');
model.study('std1').feature('eig').set('conradynhm', '1');
model.study('std1').feature('eig').set('storefact', false);
model.study('std1').feature('eig').set('linpsolnum', 'auto');
model.study('std1').feature('eig').set('solnum', 'auto');
model.study('std1').feature('eig').set('notsolnum', 'auto');
model.study('std1').feature('eig').set('outputmap', {});
model.study('std1').feature('eig').set('ngenAUX', '1');
model.study('std1').feature('eig').set('goalngenAUX', '1');
model.study('std1').feature('eig').set('ngenAUX', '1');
model.study('std1').feature('eig').set('goalngenAUX', '1');
model.study('std1').feature('eig').setSolveFor('/physics/solid', true);
model.study('std1').feature('eig').setSolveFor('/physics/es', true);
model.study('std1').feature('eig').setSolveFor('/multiphysics/pze1', true);

model.common.create('mpf1', 'ParticipationFactors', 'comp1');

model.geom('geom1').lengthUnit([native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']);

model.param.label('Parameters 1 - Geometry');
model.param.set('t_s', '500[um]/25');
model.param.descr('t_s', 'Substrate thickness (truncated)');
model.param.set('t_i', '200[nm]');
model.param.descr('t_i', 'Insulator thickness');
model.param.set('t_hil', '1.82[um]');
model.param.descr('t_hil', 'High impedance layer thickness');
model.param.set('t_lil', '1.65[um]');
model.param.descr('t_lil', 'Low impedance layer thickness');
model.param.set('t_pe', '3.35[um]');
model.param.descr('t_pe', 'Piezoelectric layer thickness');
model.param.set('t_e', '200[nm]');
model.param.descr('t_e', 'Electrode thickness');
model.param.set('w_ar', '200[um]');
model.param.descr('w_ar', 'Active area width');
model.param.set('w_pe', '800[um]');
model.param.descr('w_pe', 'Piezoelectric layer width');
model.param.set('w', '1000[um]');
model.param.descr('w', 'Device width');
model.param.create('par2');
model.param('par2').label('Parameters 2 - Material properties');
model.param('par2').set('rho_ZnO', '5680[kg/m^3]');
model.param('par2').descr('rho_ZnO', 'Density of ZnO');
model.param('par2').set('rho_Mo', '10200[kg/m^3]');
model.param('par2').descr('rho_Mo', 'Density of Mo');
model.param('par2').set('rho_SiO2', '2170[kg/m^3]');
model.param('par2').descr('rho_SiO2', 'Density of SiO2');
model.param('par2').set('rho_Al', '2700[kg/m^3]');
model.param('par2').descr('rho_Al', 'Density of Al');
model.param('par2').set('rho_Si', '2330[kg/m^3]');
model.param('par2').descr('rho_Si', 'Density of Si');
model.param('par2').set('v_ZnO', '6330[m/s]');
model.param('par2').descr('v_ZnO', 'Acoustic velocity of ZnO');
model.param('par2').set('v_Mo', '6280[m/s]');
model.param('par2').descr('v_Mo', 'Acoustic velocity_of Mo');
model.param('par2').set('v_SiO2', '5540[m/s]');
model.param('par2').descr('v_SiO2', 'Acoustic velocity of SiO2');
model.param('par2').set('v_Al', '6450[m/s]');
model.param('par2').descr('v_Al', 'Acoustic velocity of Al');
model.param('par2').set('v_Si', '8320[m/s]');
model.param('par2').descr('v_Si', 'Acoustic velocity of Si');
model.param('par2').set('E_Mo', 'rho_Mo*(v_Mo)^2');
model.param('par2').descr('E_Mo', 'Young''s modulus of Mo');
model.param('par2').set('E_SiO2', 'rho_SiO2*(v_SiO2)^2');
model.param('par2').descr('E_SiO2', 'Young''s modulus of SiO2');
model.param('par2').set('E_Al', 'rho_Al*(v_Al)^2');
model.param('par2').descr('E_Al', 'Young''s modulus of Al');
model.param('par2').set('E_Si', 'rho_Si*(v_Si)^2');
model.param('par2').descr('E_Si', 'Young''s modulus of Si');
model.param('par2').set('eta0', '1.5e-4');
model.param('par2').descr('eta0', 'Loss factor (guessed)');
model.param('par2').set('lambda_Si', 'v_Si/870[MHz]');
model.param('par2').descr('lambda_Si', 'Wavelength in Si');
model.param('par2').set('p1', '0');
model.param('par2').descr('p1', 'Switch for particle 1');
model.param('par2').set('p2', '0');
model.param('par2').descr('p2', 'Switch for particle 2');
model.param('par2').set('p3', '0');
model.param('par2').descr('p3', 'Switch for particle 3');
model.param('par2').set('p4', '0');
model.param('par2').descr('p4', 'Switch for particle 4');
model.param('par2').set('p5', '0');
model.param('par2').descr('p5', 'Switch for particle 5');
model.param('par2').set('p6', '0');
model.param('par2').descr('p6', 'Switch for particle 6');

model.geom('geom1').create('blk1', 'Block');
model.geom('geom1').feature('blk1').label('Piezo - ZnO');
model.geom('geom1').feature('blk1').set('size', {'w_pe/2' 'w_pe/2' '1'});
model.geom('geom1').feature('blk1').setIndex('size', 't_pe', 2);
model.geom('geom1').feature('blk1').set('selresult', true);
model.geom('geom1').feature.duplicate('blk2', 'blk1');
model.geom('geom1').feature('blk2').label('Bottom electrode');
model.geom('geom1').feature('blk2').setIndex('size', 't_e', 2);
model.geom('geom1').feature('blk2').set('pos', {'0' '0' '-t_e'});
model.geom('geom1').feature('blk2').set('selresultshow', 'all');
model.geom('geom1').selection.create('csel1', 'CumulativeSelection');
model.geom('geom1').selection('csel1').label('Al');
model.geom('geom1').feature('blk2').set('contributeto', 'csel1');
model.geom('geom1').feature.duplicate('blk3', 'blk2');
model.geom('geom1').feature('blk3').label('Top electrode');
model.geom('geom1').feature('blk3').set('size', {'w_ar/2' 'w_ar/2' 't_e'});
model.geom('geom1').feature('blk3').set('pos', {'0' '0' 't_pe'});
model.geom('geom1').run('blk3');
model.geom('geom1').create('blk4', 'Block');
model.geom('geom1').feature('blk4').label('Low impedance - SiO2');
model.geom('geom1').feature('blk4').set('size', {'w/2' 'w/2' 't_lil'});
model.geom('geom1').feature('blk4').set('pos', {'0' '0' '-t_lil-t_e'});
model.geom('geom1').feature('blk4').setIndex('layer', '(w-w_pe)/2', 0);
model.geom('geom1').feature('blk4').set('layerright', true);
model.geom('geom1').feature('blk4').set('layerback', true);
model.geom('geom1').feature('blk4').set('layerbottom', false);
model.geom('geom1').selection.create('csel2', 'CumulativeSelection');
model.geom('geom1').selection('csel2').label('SiO2');
model.geom('geom1').feature('blk4').set('contributeto', 'csel2');
model.geom('geom1').run('blk4');
model.geom('geom1').create('arr1', 'Array');
model.geom('geom1').feature('arr1').label('Array - SiO2');
model.geom('geom1').feature('arr1').set('selresult', true);
model.geom('geom1').feature('arr1').selection('input').named('csel2');
model.geom('geom1').feature('arr1').set('fullsize', [1 1 3]);
model.geom('geom1').feature('arr1').set('displ', {'0' '0' '-t_lil-t_hil'});
model.geom('geom1').feature.duplicate('blk5', 'blk4');
model.geom('geom1').feature('blk5').label('High impedance - Mo');
model.geom('geom1').feature('blk5').set('size', {'w/2' 'w/2' 't_hil'});
model.geom('geom1').feature('blk5').set('pos', {'0' '0' '-t_hil-t_lil-t_e'});
model.geom('geom1').selection.create('csel3', 'CumulativeSelection');
model.geom('geom1').selection('csel3').label('Mo');
model.geom('geom1').feature('blk5').set('contributeto', 'csel3');
model.geom('geom1').feature.duplicate('arr2', 'arr1');
model.geom('geom1').feature('arr2').label('Array - Mo');
model.geom('geom1').runPre('arr2');
model.geom('geom1').feature('arr2').selection('input').named('csel3');
model.geom('geom1').run('arr2');
model.geom('geom1').feature.duplicate('blk6', 'blk4');
model.geom('geom1').feature('blk6').label('Insulator - SiO2');
model.geom('geom1').feature('blk6').set('size', {'w/2' 'w/2' 't_i'});
model.geom('geom1').feature('blk6').set('pos', {'0' '0' '-3*t_hil-3*t_lil-t_e-t_i'});
model.geom('geom1').feature.duplicate('blk7', 'blk6');
model.geom('geom1').feature('blk7').label('Substrate - Si');
model.geom('geom1').feature('blk7').set('size', {'w/2' 'w/2' 't_s'});
model.geom('geom1').feature('blk7').set('pos', {'0' '0' '-3*t_hil-3*t_lil-t_e-t_i-t_s'});
model.geom('geom1').feature('blk7').set('selresult', true);
model.geom('geom1').selection.create('csel4', 'CumulativeSelection');
model.geom('geom1').selection('csel4').label('Si');
model.geom('geom1').feature('blk7').set('contributeto', 'csel4');
model.geom('geom1').feature.duplicate('blk8', 'blk7');
model.geom('geom1').feature('blk8').label('Bottom PML - Si');
model.geom('geom1').feature('blk8').set('size', {'w/2' 'w/2' 'lambda_Si'});
model.geom('geom1').feature('blk8').set('pos', {'0' '0' '-3*t_hil-3*t_lil-t_e-t_i-t_s-lambda_Si'});
model.geom('geom1').run('blk8');
model.geom('geom1').create('blk9', 'Block');
model.geom('geom1').feature('blk9').label('Particle 1');
model.geom('geom1').feature('blk9').set('pos', {'15' '25' 't_pe+t_e'});
model.geom('geom1').feature('blk9').set('selresult', true);
model.geom('geom1').selection.create('csel5', 'CumulativeSelection');
model.geom('geom1').selection('csel5').label('Particles');
model.geom('geom1').feature('blk9').set('contributeto', 'csel5');
model.geom('geom1').feature.duplicate('blk10', 'blk9');
model.geom('geom1').feature('blk10').label('Particle 2');
model.geom('geom1').feature('blk10').set('pos', {'50' '15' 't_pe+t_e'});
model.geom('geom1').feature.duplicate('blk11', 'blk10');
model.geom('geom1').feature('blk11').label('Particle 3');
model.geom('geom1').feature('blk11').set('pos', {'39' '51' 't_pe+t_e'});
model.geom('geom1').feature.duplicate('blk12', 'blk11');
model.geom('geom1').feature('blk12').label('Particle 4');
model.geom('geom1').feature('blk12').set('pos', {'55' '35' 't_pe+t_e'});
model.geom('geom1').feature.duplicate('blk13', 'blk12');
model.geom('geom1').feature('blk13').label('Particle 5');
model.geom('geom1').feature('blk13').set('pos', {'62' '80' 't_pe+t_e'});
model.geom('geom1').feature.duplicate('blk14', 'blk13');
model.geom('geom1').feature('blk14').label('Particle 6');
model.geom('geom1').feature('blk14').set('pos', {'85' '55' 't_pe+t_e'});
model.geom('geom1').run('fin');

model.selection.create('box1', 'Box');
model.selection('box1').model('comp1');
model.selection('box1').label('Symmetry BC 1');
model.selection('box1').set('entitydim', 2);
model.selection('box1').set('xmax', 'eps');
model.selection('box1').set('condition', 'inside');

model.view('view1').set('renderwireframe', true);

model.selection.duplicate('box2', 'box1');
model.selection('box2').label('Symmetry BC 2');
model.selection('box2').set('xmax', Inf);
model.selection('box2').set('ymax', 'eps');
model.selection.duplicate('box3', 'box2');
model.selection('box3').label('Fixed BC bottom');
model.selection('box3').set('ymax', Inf);
model.selection('box3').set('zmax', '-3*t_hil-3*t_lil-t_e-t_i-t_s-lambda_Si/2');
model.selection.duplicate('box4', 'box3');
model.selection('box4').label('Fixed BC side 1');
model.selection('box4').set('xmin', '(w/2+w_pe/2)/2');
model.selection('box4').set('zmax', Inf);
model.selection.duplicate('box5', 'box4');
model.selection('box5').label('Fixed BC side 2');
model.selection('box5').set('xmin', -Inf);
model.selection('box5').set('ymin', '(w/2+w_pe/2)/2');
model.selection.create('uni1', 'Union');
model.selection('uni1').model('comp1');
model.selection('uni1').label('Fixed BC');
model.selection('uni1').set('entitydim', 2);
model.selection('uni1').set('input', {'box3' 'box4' 'box5'});
model.selection.create('box6', 'Box');
model.selection('box6').model('comp1');
model.selection('box6').label('Not PML');
model.selection('box6').set('xmax', '(w/2+w_pe/2)/2');
model.selection('box6').set('ymax', '(w/2+w_pe/2)/2');
model.selection('box6').set('zmin', '-3*t_hil-3*t_lil-t_e-t_i-t_s-lambda_Si/2');
model.selection('box6').set('condition', 'inside');
model.selection.create('com1', 'Complement');
model.selection('com1').model('comp1');
model.selection('com1').label('PML');
model.selection('com1').set('input', {'box6'});
model.selection.duplicate('box7', 'box3');
model.selection('box7').label('Top surfaces of particles');
model.selection('box7').set('zmin', 't_pe+t_e+1/2');
model.selection('box7').set('zmax', Inf);
model.selection.create('uni2', 'Union');
model.selection('uni2').model('comp1');
model.selection('uni2').label('Acoustic mirror');
model.selection('uni2').set('input', {'geom1_csel3_dom' 'geom1_arr1_dom'});

model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl('intop1').set('axisym', true);
model.cpl('intop1').label('Integration - Particles');
model.cpl('intop1').selection.named('geom1_csel5_dom');

model.coordSystem.create('pml1', 'geom1', 'PML');
model.coordSystem('pml1').selection.named('com1');

model.physics('solid').feature('lemm1').create('dmp1', 'Damping', 3);
model.physics('solid').feature('lemm1').feature('dmp1').set('DampingType', 'IsotropicLossFactor');
model.physics('solid').feature('pzm1').selection.named('geom1_blk1_dom');
model.physics('solid').feature('pzm1').create('mdmp1', 'MechanicalDamping', 3);
model.physics('solid').create('fix1', 'Fixed', 2);
model.physics('solid').feature('fix1').selection.named('uni1');
model.physics('solid').create('sym1', 'SymmetrySolid', 2);
model.physics('solid').feature('sym1').selection.named('box1');
model.physics('solid').create('sym2', 'SymmetrySolid', 2);
model.physics('solid').feature('sym2').selection.named('box2');
model.physics('es').selection.named('geom1_blk1_dom');
model.physics('es').create('gnd1', 'Ground', 2);
model.physics('es').feature('gnd1').selection.named('geom1_blk2_bnd');
model.physics('es').create('term1', 'Terminal', 2);
model.physics('es').feature('term1').selection.named('geom1_blk3_bnd');
model.physics('es').feature('term1').set('TerminalType', 'Voltage');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('StrainCharge', 'Strain-charge form');
model.material('mat1').propertyGroup.create('StressCharge', 'Stress-charge form');
model.material('mat1').label('Zinc Oxide');
model.material('mat1').set('family', 'custom');
model.material('mat1').set('customspecular', [0.7843137254901961 1 1]);
model.material('mat1').set('customdiffuse', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat1').set('noise', true);
model.material('mat1').set('fresnel', 0.9);
model.material('mat1').set('roughness', 0.1);
model.material('mat1').set('metallic', 0);
model.material('mat1').set('pearl', 0);
model.material('mat1').set('diffusewrap', 0);
model.material('mat1').set('clearcoat', 0);
model.material('mat1').set('reflectance', 0);
model.material('mat1').propertyGroup('def').set('relpermittivity', {'8.5446' '0' '0' '0' '8.5446' '0' '0' '0' '10.204'});
model.material('mat1').propertyGroup('def').set('density', '5680[kg/m^3]');
model.material('mat1').propertyGroup('StrainCharge').set('sE', {'7.86e-012[1/Pa]' '-3.43e-012[1/Pa]' '-2.21e-012[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '-3.43e-012[1/Pa]' '7.86e-012[1/Pa]' '-2.21e-012[1/Pa]' '0[1/Pa]'  ...
'0[1/Pa]' '0[1/Pa]' '-2.21e-012[1/Pa]' '-2.21e-012[1/Pa]' '6.94e-012[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]'  ...
'0[1/Pa]' '2.36e-011[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '2.36e-011[1/Pa]' '0[1/Pa]'  ...
'0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '2.26e-011[1/Pa]'});
model.material('mat1').propertyGroup('StrainCharge').set('dET', {'0[C/N]' '0[C/N]' '-5.43e-012[C/N]' '0[C/N]' '0[C/N]' '-5.43e-012[C/N]' '0[C/N]' '0[C/N]' '1.167e-011[C/N]' '0[C/N]'  ...
'-1.134e-011[C/N]' '0[C/N]' '-1.134e-011[C/N]' '0[C/N]' '0[C/N]' '0[C/N]' '0[C/N]' '0[C/N]'});
model.material('mat1').propertyGroup('StrainCharge').set('epsilonrT', {'9.16' '0' '0' '0' '9.16' '0' '0' '0' '12.64'});
model.material('mat1').propertyGroup('StressCharge').set('cE', {'2.09714e+011[Pa]' '1.2114e+011[Pa]' '1.05359e+011[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '1.2114e+011[Pa]' '2.09714e+011[Pa]' '1.05359e+011[Pa]' '0[Pa]'  ...
'0[Pa]' '0[Pa]' '1.05359e+011[Pa]' '1.05359e+011[Pa]' '2.11194e+011[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]'  ...
'0[Pa]' '4.23729e+010[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '4.23729e+010[Pa]' '0[Pa]'  ...
'0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '4.42478e+010[Pa]'});
model.material('mat1').propertyGroup('StressCharge').set('eES', {'0[C/m^2]' '0[C/m^2]' '-0.567005[C/m^2]' '0[C/m^2]' '0[C/m^2]' '-0.567005[C/m^2]' '0[C/m^2]' '0[C/m^2]' '1.32044[C/m^2]' '0[C/m^2]'  ...
'-0.480508[C/m^2]' '0[C/m^2]' '-0.480508[C/m^2]' '0[C/m^2]' '0[C/m^2]' '0[C/m^2]' '0[C/m^2]' '0[C/m^2]'});
model.material('mat1').propertyGroup('StressCharge').set('epsilonrS', {'8.5446' '0' '0' '0' '8.5446' '0' '0' '0' '10.204'});
model.material('mat1').selection.named('geom1_blk1_dom');
model.material('mat1').propertyGroup('def').set('density', {'rho_ZnO'});
model.material('mat1').propertyGroup('StressCharge').set('eta_cE', {'eta0'});
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat2').label('Al - Aluminum');
model.material('mat2').set('family', 'aluminum');
model.material('mat2').propertyGroup('def').set('electricconductivity', {'35.5e6[S/m]' '0' '0' '0' '35.5e6[S/m]' '0' '0' '0' '35.5e6[S/m]'});
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'23.1e-6[1/K]' '0' '0' '0' '23.1e-6[1/K]' '0' '0' '0' '23.1e-6[1/K]'});
model.material('mat2').propertyGroup('def').set('heatcapacity', '904[J/(kg*K)]');
model.material('mat2').propertyGroup('def').set('density', '2700[kg/m^3]');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'237[W/(m*K)]' '0' '0' '0' '237[W/(m*K)]' '0' '0' '0' '237[W/(m*K)]'});
model.material('mat2').propertyGroup('Enu').set('E', '70.0e9[Pa]');
model.material('mat2').propertyGroup('Enu').set('nu', '0.35');
model.material('mat2').selection.named('geom1_csel1_dom');
model.material('mat2').propertyGroup('def').set('lossfactor', {'eta0'});
model.material('mat2').propertyGroup('def').set('density', {'rho_Al'});
model.material('mat2').propertyGroup('Enu').set('E', {'E_Al'});
model.material.create('mat3', 'Common', 'comp1');
model.material('mat3').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat3').label('SiO2 - Silicon oxide');
model.material('mat3').propertyGroup('def').set('electricconductivity', {'0[S/m]' '0' '0' '0' '0[S/m]' '0' '0' '0' '0[S/m]'});
model.material('mat3').propertyGroup('def').set('thermalexpansioncoefficient', {'0.5e-6[1/K]' '0' '0' '0' '0.5e-6[1/K]' '0' '0' '0' '0.5e-6[1/K]'});
model.material('mat3').propertyGroup('def').set('heatcapacity', '730[J/(kg*K)]');
model.material('mat3').propertyGroup('def').set('relpermittivity', {'4.2' '0' '0' '0' '4.2' '0' '0' '0' '4.2'});
model.material('mat3').propertyGroup('def').set('density', '2200[kg/m^3]');
model.material('mat3').propertyGroup('def').set('thermalconductivity', {'1.4[W/(m*K)]' '0' '0' '0' '1.4[W/(m*K)]' '0' '0' '0' '1.4[W/(m*K)]'});
model.material('mat3').propertyGroup('Enu').set('E', '70e9[Pa]');
model.material('mat3').propertyGroup('Enu').set('nu', '0.17');
model.material('mat3').selection.named('geom1_csel2_dom');
model.material('mat3').propertyGroup('def').set('lossfactor', {'eta0'});
model.material('mat3').propertyGroup('def').set('density', {'rho_SiO2'});
model.material('mat3').propertyGroup('Enu').set('E', {'E_SiO2'});
model.material.create('mat4', 'Common', 'comp1');
model.material('mat4').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat4').label('Si - Silicon (single-crystal, isotropic)');
model.material('mat4').set('family', 'custom');
model.material('mat4').set('customspecular', [0.7843137254901961 1 1]);
model.material('mat4').set('customdiffuse', [0.6666666666666666 0.6666666666666666 0.7058823529411765]);
model.material('mat4').set('customambient', [0.6666666666666666 0.6666666666666666 0.7058823529411765]);
model.material('mat4').set('noise', true);
model.material('mat4').set('fresnel', 0.7);
model.material('mat4').set('metallic', 0);
model.material('mat4').set('pearl', 0);
model.material('mat4').set('diffusewrap', 0);
model.material('mat4').set('clearcoat', 0);
model.material('mat4').set('reflectance', 0);
model.material('mat4').propertyGroup('def').set('thermalexpansioncoefficient', {'2.6e-6[1/K]' '0' '0' '0' '2.6e-6[1/K]' '0' '0' '0' '2.6e-6[1/K]'});
model.material('mat4').propertyGroup('def').set('heatcapacity', '700[J/(kg*K)]');
model.material('mat4').propertyGroup('def').set('relpermittivity', {'11.7' '0' '0' '0' '11.7' '0' '0' '0' '11.7'});
model.material('mat4').propertyGroup('def').set('density', '2329[kg/m^3]');
model.material('mat4').propertyGroup('def').set('thermalconductivity', {'130[W/(m*K)]' '0' '0' '0' '130[W/(m*K)]' '0' '0' '0' '130[W/(m*K)]'});
model.material('mat4').propertyGroup('Enu').set('E', '170e9[Pa]');
model.material('mat4').propertyGroup('Enu').set('nu', '0.28');
model.material('mat4').selection.named('geom1_csel4_dom');
model.material('mat4').propertyGroup('def').set('lossfactor', {'eta0'});
model.material('mat4').propertyGroup('def').set('density', {'rho_Si'});
model.material('mat4').propertyGroup('Enu').set('E', {'E_Si'});
model.material.create('mat5', 'Common', 'comp1');
model.material('mat5').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat5').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat5').label('Molybdenum');
model.material('mat5').set('family', 'custom');
model.material('mat5').set('customspecular', [0.7843137254901961 1 1]);
model.material('mat5').set('customdiffuse', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat5').set('noise', true);
model.material('mat5').set('fresnel', 0.3);
model.material('mat5').set('roughness', 0.1);
model.material('mat5').set('metallic', 0);
model.material('mat5').set('pearl', 0);
model.material('mat5').set('diffusewrap', 0);
model.material('mat5').set('clearcoat', 0);
model.material('mat5').set('reflectance', 0);
model.material('mat5').propertyGroup('def').set('thermalexpansioncoefficient', {'4.8e-6[1/K]' '0' '0' '0' '4.8e-6[1/K]' '0' '0' '0' '4.8e-6[1/K]'});
model.material('mat5').propertyGroup('def').set('density', '10200[kg/m^3]');
model.material('mat5').propertyGroup('def').set('heatcapacity', '250[J/(kg*K)]');
model.material('mat5').propertyGroup('def').set('thermalconductivity', {'138[W/(m*K)]' '0' '0' '0' '138[W/(m*K)]' '0' '0' '0' '138[W/(m*K)]'});
model.material('mat5').propertyGroup('Enu').set('E', '312[GPa]');
model.material('mat5').propertyGroup('Enu').set('nu', '0.31');
model.material('mat5').propertyGroup('Murnaghan').set('l', '-300[GPa]');
model.material('mat5').propertyGroup('Murnaghan').set('m', '-850[GPa]');
model.material('mat5').propertyGroup('Murnaghan').set('n', '-910[GPa]');
model.material('mat5').selection.named('geom1_csel3_dom');
model.material('mat5').propertyGroup('def').set('lossfactor', {'eta0'});
model.material('mat5').propertyGroup('def').set('density', {'rho_Mo'});
model.material('mat5').propertyGroup('Enu').set('E', {'E_Mo'});

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').label('Variables - Particle 1');
model.variable('var1').selection.geom('geom1', 3);
model.variable('var1').selection.named('geom1_blk9_dom');
model.variable('var1').set('p', 'p1');
model.variable('var1').descr('p', 'Switch for particle 1');
model.variable.duplicate('var2', 'var1');
model.variable('var2').label('Variables - Particle 2');
model.variable('var2').selection.named('geom1_blk10_dom');
model.variable('var2').set('p', 'p2');
model.variable('var2').descr('p', 'Switch for particle 2');
model.variable.duplicate('var3', 'var2');
model.variable('var3').label('Variables - Particle 3');
model.variable('var3').selection.named('geom1_blk11_dom');
model.variable('var3').set('p', 'p3');
model.variable('var3').descr('p', 'Switch for particle 3');
model.variable.duplicate('var4', 'var3');
model.variable('var4').label('Variables - Particle 4');
model.variable('var4').selection.named('geom1_blk12_dom');
model.variable('var4').set('p', 'p4');
model.variable('var4').descr('p', 'Switch for particle 4');
model.variable.duplicate('var5', 'var4');
model.variable('var5').label('Variables - Particle 5');
model.variable('var5').selection.named('geom1_blk13_dom');
model.variable('var5').set('p', 'p5');
model.variable('var5').descr('p', 'Switch for particle 5');
model.variable.duplicate('var6', 'var5');
model.variable('var6').label('Variables - Particle 6');
model.variable('var6').selection.named('geom1_blk14_dom');
model.variable('var6').set('p', 'p6');
model.variable('var6').descr('p', 'Switch for particle 6');

model.material.duplicate('mat6', 'mat3');
model.material('mat6').label('SiO2 Particles');
model.material('mat6').selection.named('geom1_csel5_dom');
model.material('mat6').propertyGroup('def').set('density', {'p*rho_SiO2'});

model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').label('Free Triangular - Top surfaces of particles');
model.mesh('mesh1').feature('ftri1').selection.named('box7');
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').label('Swept - Particles');
model.mesh('mesh1').feature('swe1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe1').selection.named('geom1_csel5_dom');
model.mesh('mesh1').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis1').set('numelem', 3);
model.mesh('mesh1').create('ftri2', 'FreeTri');
model.mesh('mesh1').feature('ftri2').label('Free Triangular - Top electrode');
model.mesh('mesh1').feature('ftri2').selection.set([37]);
model.mesh('mesh1').feature('ftri2').create('size1', 'Size');
model.mesh('mesh1').feature('ftri2').feature('size1').set('custom', true);
model.mesh('mesh1').feature('ftri2').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('ftri2').feature('size1').set('hmax', 10);
model.mesh('mesh1').feature('ftri2').feature('size1').set('hminactive', true);
model.mesh('mesh1').feature('ftri2').feature('size1').set('hmin', 1);
model.mesh('mesh1').create('swe2', 'Sweep');
model.mesh('mesh1').feature('swe2').label('Swept - Top electrode');
model.mesh('mesh1').feature('swe2').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe2').selection.named('geom1_blk3_dom');
model.mesh('mesh1').run;
model.mesh('mesh1').create('ftri3', 'FreeTri');
model.mesh('mesh1').feature('ftri3').label('Free Triangular - Piezo');
model.mesh('mesh1').feature('ftri3').selection.set([39]);
model.mesh('mesh1').create('swe3', 'Sweep');
model.mesh('mesh1').feature('swe3').label('Swept - Piezo');
model.mesh('mesh1').feature('swe3').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe3').selection.named('geom1_blk1_dom');
model.mesh('mesh1').feature('swe3').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe3').feature('dis1').set('numelem', 6);
model.mesh('mesh1').create('swe4', 'Sweep');
model.mesh('mesh1').feature('swe4').label('Swept - Bottom electrode');
model.mesh('mesh1').feature('swe4').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe4').selection.named('geom1_blk2_dom');
model.mesh('mesh1').run;
model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').label('Mapped - PML');
model.mesh('mesh1').feature('map1').selection.set([68 144 173]);
model.mesh('mesh1').feature('map1').set('adjustedgdistr', true);
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([233 234]);
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 3);
model.mesh('mesh1').create('swe5', 'Sweep');
model.mesh('mesh1').feature('swe5').label('Swept - Acoustic mirror');
model.mesh('mesh1').feature('swe5').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe5').selection.named('uni2');
model.mesh('mesh1').feature('swe5').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe5').feature('dis1').set('numelem', 3);
model.mesh('mesh1').create('swe6', 'Sweep');
model.mesh('mesh1').feature('swe6').label('Swept - Remaining');
model.mesh('mesh1').feature('swe6').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe6').feature('dis1').label('Distribution - Substrate');
model.mesh('mesh1').feature('swe6').feature('dis1').selection.set([]);
model.mesh('mesh1').feature('swe6').feature('dis1').selection.named('geom1_blk7_dom');
model.mesh('mesh1').feature('swe6').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('swe6').feature('dis1').set('elemcount', 12);
model.mesh('mesh1').feature('swe6').feature('dis1').set('elemratio', 5);
model.mesh('mesh1').feature('swe6').create('dis2', 'Distribution');
model.mesh('mesh1').feature('swe6').feature('dis2').label('Distribution - PML');
model.mesh('mesh1').feature('swe6').feature('dis2').selection.set([1]);
model.mesh('mesh1').feature('swe6').feature('dis2').set('numelem', 3);
model.mesh('mesh1').run;

model.study('std1').label('Study 1 - Eigenfrequency & Sensitivity');
model.study('std1').feature('eig').set('neigsactive', true);
model.study('std1').feature('eig').set('neigs', 1);
model.study('std1').feature('eig').set('eigunit', 'MHz');
model.study('std1').feature('eig').set('shift', '870.6');
model.study('std1').feature('eig').set('useparam', true);
model.study('std1').feature('eig').setIndex('pname', 'E_Al', 0);
model.study('std1').feature('eig').setIndex('plistarr', '', 0);
model.study('std1').feature('eig').setIndex('punit', 'Pa', 0);
model.study('std1').feature('eig').setIndex('pname', 'E_Al', 0);
model.study('std1').feature('eig').setIndex('plistarr', '', 0);
model.study('std1').feature('eig').setIndex('punit', 'Pa', 0);
model.study('std1').feature('eig').setIndex('pname', 'p1', 0);
model.study('std1').feature('eig').setIndex('plistarr', '0 0 1 0 0 0 1 1', 0);
model.study('std1').feature('eig').setIndex('pname', 'E_Al', 1);
model.study('std1').feature('eig').setIndex('plistarr', '', 1);
model.study('std1').feature('eig').setIndex('punit', 'Pa', 1);
model.study('std1').feature('eig').setIndex('pname', 'E_Al', 1);
model.study('std1').feature('eig').setIndex('plistarr', '', 1);
model.study('std1').feature('eig').setIndex('punit', 'Pa', 1);
model.study('std1').feature('eig').setIndex('pname', 'p2', 1);
model.study('std1').feature('eig').setIndex('plistarr', '0 0 1 0 1 0 1 1', 1);
model.study('std1').feature('eig').setIndex('pname', 'E_Al', 2);
model.study('std1').feature('eig').setIndex('plistarr', '', 2);
model.study('std1').feature('eig').setIndex('punit', 'Pa', 2);
model.study('std1').feature('eig').setIndex('pname', 'E_Al', 2);
model.study('std1').feature('eig').setIndex('plistarr', '', 2);
model.study('std1').feature('eig').setIndex('punit', 'Pa', 2);
model.study('std1').feature('eig').setIndex('pname', 'p3', 2);
model.study('std1').feature('eig').setIndex('plistarr', '0 1 0 0 1 1 1 1', 2);
model.study('std1').feature('eig').setIndex('pname', 'E_Al', 3);
model.study('std1').feature('eig').setIndex('plistarr', '', 3);
model.study('std1').feature('eig').setIndex('punit', 'Pa', 3);
model.study('std1').feature('eig').setIndex('pname', 'E_Al', 3);
model.study('std1').feature('eig').setIndex('plistarr', '', 3);
model.study('std1').feature('eig').setIndex('punit', 'Pa', 3);
model.study('std1').feature('eig').setIndex('pname', 'p4', 3);
model.study('std1').feature('eig').setIndex('plistarr', '0 0 0 0 0 1 1 1', 3);
model.study('std1').feature('eig').setIndex('pname', 'E_Al', 4);
model.study('std1').feature('eig').setIndex('plistarr', '', 4);
model.study('std1').feature('eig').setIndex('punit', 'Pa', 4);
model.study('std1').feature('eig').setIndex('pname', 'E_Al', 4);
model.study('std1').feature('eig').setIndex('plistarr', '', 4);
model.study('std1').feature('eig').setIndex('punit', 'Pa', 4);
model.study('std1').feature('eig').setIndex('pname', 'p5', 4);
model.study('std1').feature('eig').setIndex('plistarr', '0 0 0 1 1 1 1 1', 4);
model.study('std1').feature('eig').setIndex('pname', 'E_Al', 5);
model.study('std1').feature('eig').setIndex('plistarr', '', 5);
model.study('std1').feature('eig').setIndex('punit', 'Pa', 5);
model.study('std1').feature('eig').setIndex('pname', 'E_Al', 5);
model.study('std1').feature('eig').setIndex('plistarr', '', 5);
model.study('std1').feature('eig').setIndex('punit', 'Pa', 5);
model.study('std1').feature('eig').setIndex('pname', 'p6', 5);
model.study('std1').feature('eig').setIndex('plistarr', '0 0 0 1 0 1 0 1', 5);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'eig');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'eig');
model.sol('sol1').create('e1', 'Eigenvalue');
model.sol('sol1').feature('e1').create('ep1', 'EigenvalueParam');
model.sol('sol1').feature('e1').feature('ep1').set('control', 'eig');
model.sol('sol1').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol1').feature('e1').set('eigvfunscaleparam', '7.089999999999999E-10');
model.sol('sol1').feature('e1').set('control', 'eig');
model.sol('sol1').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 1, 0);
model.result('pg1').setIndex('looplevel', 8, 1);
model.result('pg1').set('defaultPlotID', 'modeShape');
model.result('pg1').label('Mode Shape (solid)');
model.result('pg1').set('showlegends', false);
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'solid.disp'});
model.result('pg1').feature('surf1').set('threshold', 'manual');
model.result('pg1').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg1').feature('surf1').set('colortable', 'Rainbow');
model.result('pg1').feature('surf1').set('colortabletrans', 'none');
model.result('pg1').feature('surf1').set('colorscalemode', 'linear');
model.result('pg1').feature('surf1').set('colortable', 'AuroraBorealis');
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg1').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg1').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result.evaluationGroup.create('std1EvgFrq', 'EvaluationGroup');
model.result.evaluationGroup('std1EvgFrq').set('defaultPlotID', 'eigenfrequenciesTable_solid');
model.result.evaluationGroup('std1EvgFrq').set('data', 'dset1');
model.result.evaluationGroup('std1EvgFrq').label('Eigenfrequencies (Study 1 - Eigenfrequency & Sensitivity)');
model.result.evaluationGroup('std1EvgFrq').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('expr', '2*pi*freq', 0);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('unit', 'rad/s', 0);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('descr', 'Angular frequency', 0);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('expr', 'imag(freq)/abs(freq)', 1);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('unit', '1', 1);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('descr', 'Damping ratio', 1);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('expr', 'abs(freq)/imag(freq)/2', 2);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('unit', '1', 2);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('descr', 'Quality factor', 2);
model.result.evaluationGroup('std1EvgFrq').run;
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Electric Potential (es)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('showlegendsmaxmin', true);
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 1, 0);
model.result('pg2').setIndex('looplevel', 8, 1);
model.result('pg2').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom2/pdef1/pcond2/pcond1/pcond1/pg1');
model.result('pg2').feature.create('mslc1', 'Multislice');
model.result('pg2').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg2').feature('mslc1').set('solutionparams', 'parent');
model.result('pg2').feature('mslc1').set('expr', 'V');
model.result('pg2').feature('mslc1').set('multiplanexmethod', 'coord');
model.result('pg2').feature('mslc1').set('xcoord', 'es.CPx');
model.result('pg2').feature('mslc1').set('multiplaneymethod', 'coord');
model.result('pg2').feature('mslc1').set('ycoord', 'es.CPy');
model.result('pg2').feature('mslc1').set('multiplanezmethod', 'coord');
model.result('pg2').feature('mslc1').set('zcoord', 'es.CPz');
model.result('pg2').feature('mslc1').set('colortable', 'Dipole');
model.result('pg2').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg2').feature('mslc1').set('data', 'parent');
model.result('pg2').feature.create('strmsl1', 'StreamlineMultislice');
model.result('pg2').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg2').feature('strmsl1').set('solutionparams', 'parent');
model.result('pg2').feature('strmsl1').set('expr', {'es.Ex' 'es.Ey' 'es.Ez'});
model.result('pg2').feature('strmsl1').set('multiplanexmethod', 'coord');
model.result('pg2').feature('strmsl1').set('xcoord', 'es.CPx');
model.result('pg2').feature('strmsl1').set('multiplaneymethod', 'coord');
model.result('pg2').feature('strmsl1').set('ycoord', 'es.CPy');
model.result('pg2').feature('strmsl1').set('multiplanezmethod', 'coord');
model.result('pg2').feature('strmsl1').set('zcoord', 'es.CPz');
model.result('pg2').feature('strmsl1').set('titletype', 'none');
model.result('pg2').feature('strmsl1').set('posmethod', 'uniform');
model.result('pg2').feature('strmsl1').set('udist', 0.02);
model.result('pg2').feature('strmsl1').set('maxlen', 0.4);
model.result('pg2').feature('strmsl1').set('maxtime', Inf);
model.result('pg2').feature('strmsl1').set('inheritcolor', false);
model.result('pg2').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg2').feature('strmsl1').set('maxtime', Inf);
model.result('pg2').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg2').feature('strmsl1').set('maxtime', Inf);
model.result('pg2').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg2').feature('strmsl1').set('maxtime', Inf);
model.result('pg2').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg2').feature('strmsl1').set('maxtime', Inf);
model.result('pg2').feature('strmsl1').set('data', 'parent');
model.result('pg2').feature('strmsl1').set('inheritplot', 'mslc1');
model.result('pg2').feature('strmsl1').feature.create('col1', 'Color');
model.result('pg2').feature('strmsl1').feature('col1').set('expr', 'V');
model.result('pg2').feature('strmsl1').feature('col1').set('colortable', 'DipoleDark');
model.result('pg2').feature('strmsl1').feature('col1').set('colorlegend', false);
model.result('pg2').feature('strmsl1').feature.create('filt1', 'Filter');
model.result('pg2').feature('strmsl1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').label('Electric Field Norm (es)');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').set('showlegendsmaxmin', true);
model.result('pg3').set('data', 'dset1');
model.result('pg3').setIndex('looplevel', 1, 0);
model.result('pg3').setIndex('looplevel', 8, 1);
model.result('pg3').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom3/pdef1/pcond2/pcond1/pg1');
model.result('pg3').feature.create('mslc1', 'Multislice');
model.result('pg3').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg3').feature('mslc1').set('solutionparams', 'parent');
model.result('pg3').feature('mslc1').set('expr', 'es.normE');
model.result('pg3').feature('mslc1').set('multiplanexmethod', 'coord');
model.result('pg3').feature('mslc1').set('xcoord', 'es.CPx');
model.result('pg3').feature('mslc1').set('multiplaneymethod', 'coord');
model.result('pg3').feature('mslc1').set('ycoord', 'es.CPy');
model.result('pg3').feature('mslc1').set('multiplanezmethod', 'coord');
model.result('pg3').feature('mslc1').set('zcoord', 'es.CPz');
model.result('pg3').feature('mslc1').set('colortable', 'Prism');
model.result('pg3').feature('mslc1').set('colortabletrans', 'nonlinear');
model.result('pg3').feature('mslc1').set('colorcalibration', -0.8);
model.result('pg3').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg3').feature('mslc1').set('data', 'parent');
model.result('pg3').feature.create('strmsl1', 'StreamlineMultislice');
model.result('pg3').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg3').feature('strmsl1').set('solutionparams', 'parent');
model.result('pg3').feature('strmsl1').set('expr', {'es.Ex' 'es.Ey' 'es.Ez'});
model.result('pg3').feature('strmsl1').set('multiplanexmethod', 'coord');
model.result('pg3').feature('strmsl1').set('xcoord', 'es.CPx');
model.result('pg3').feature('strmsl1').set('multiplaneymethod', 'coord');
model.result('pg3').feature('strmsl1').set('ycoord', 'es.CPy');
model.result('pg3').feature('strmsl1').set('multiplanezmethod', 'coord');
model.result('pg3').feature('strmsl1').set('zcoord', 'es.CPz');
model.result('pg3').feature('strmsl1').set('titletype', 'none');
model.result('pg3').feature('strmsl1').set('posmethod', 'uniform');
model.result('pg3').feature('strmsl1').set('udist', 0.02);
model.result('pg3').feature('strmsl1').set('maxlen', 0.4);
model.result('pg3').feature('strmsl1').set('maxtime', Inf);
model.result('pg3').feature('strmsl1').set('inheritcolor', false);
model.result('pg3').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg3').feature('strmsl1').set('maxtime', Inf);
model.result('pg3').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg3').feature('strmsl1').set('maxtime', Inf);
model.result('pg3').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg3').feature('strmsl1').set('maxtime', Inf);
model.result('pg3').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg3').feature('strmsl1').set('maxtime', Inf);
model.result('pg3').feature('strmsl1').set('data', 'parent');
model.result('pg3').feature('strmsl1').set('inheritplot', 'mslc1');
model.result('pg3').feature('strmsl1').feature.create('col1', 'Color');
model.result('pg3').feature('strmsl1').feature('col1').set('expr', 'es.normE');
model.result('pg3').feature('strmsl1').feature('col1').set('colortable', 'PrismDark');
model.result('pg3').feature('strmsl1').feature('col1').set('colorlegend', false);
model.result('pg3').feature('strmsl1').feature('col1').set('colortabletrans', 'nonlinear');
model.result('pg3').feature('strmsl1').feature('col1').set('colorcalibration', -0.8);
model.result('pg3').feature('strmsl1').feature.create('filt1', 'Filter');
model.result('pg3').feature('strmsl1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result.evaluationGroup.create('std1mpf1', 'EvaluationGroup');
model.result.evaluationGroup('std1mpf1').set('data', 'dset1');
model.result.evaluationGroup('std1mpf1').label('Participation Factors (Study 1 - Eigenfrequency & Sensitivity)');
model.result.evaluationGroup('std1mpf1').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfLnormX', 0);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 0);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, X-translation', 0);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfLnormY', 1);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 1);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Y-translation', 1);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfLnormZ', 2);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 2);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Z-translation', 2);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfRnormX', 3);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 3);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, X-rotation', 3);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfRnormY', 4);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 4);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Y-rotation', 4);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfRnormZ', 5);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 5);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Z-rotation', 5);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffLX', 6);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg', 6);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, X-translation', 6);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffLY', 7);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg', 7);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Y-translation', 7);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffLZ', 8);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg', 8);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Z-translation', 8);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffRX', 9);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg*m^2', 9);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, X-rotation', 9);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffRY', 10);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg*m^2', 10);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Y-rotation', 10);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffRZ', 11);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg*m^2', 11);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Z-rotation', 11);
model.result.evaluationGroup('std1mpf1').run;
model.result('pg1').run;

model.selection.create('com2', 'Complement');
model.selection('com2').model('comp1');
model.selection('com2').label('Not particles');
model.selection('com2').set('entitydim', 2);
model.selection('com2').set('input', {'geom1_csel5_bnd'});

model.result('pg1').run;
model.result('pg1').feature('surf1').create('sel1', 'Selection');
model.result('pg1').feature('surf1').feature('sel1').selection.named('com2');
model.result('pg1').run;
model.result('pg1').feature('surf1').feature('def').active(false);
model.result('pg1').run;
model.result('pg1').set('looplevel', [1 1]);
model.result('pg1').run;
model.result('pg1').set('looplevel', [1 4]);
model.result('pg1').run;
model.result('pg1').set('looplevel', [1 3]);
model.result('pg1').run;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Sensitivity');
model.result('pg4').set('titletype', 'label');
model.result('pg4').set('showlegends', false);
model.result('pg4').create('glob1', 'Global');
model.result('pg4').feature('glob1').set('markerpos', 'datapoints');
model.result('pg4').feature('glob1').set('linewidth', 'preference');
model.result('pg4').feature('glob1').setIndex('expr', 'freq', 0);
model.result('pg4').feature('glob1').setIndex('unit', 'MHz', 0);
model.result('pg4').feature('glob1').setIndex('descr', 'Eigenfrequency', 0);
model.result('pg4').feature('glob1').set('xdatasolnumtype', 'all');
model.result('pg4').feature('glob1').set('xdata', 'expr');
model.result('pg4').feature('glob1').set('xdataexpr', 'intop1(solid.rho)');
model.result('pg4').feature('glob1').set('xdataunit', 'ng');
model.result('pg4').feature('glob1').set('xdatadescractive', true);
model.result('pg4').feature('glob1').set('xdatadescr', 'Added Particle Mass');
model.result('pg4').feature('glob1').set('linestyle', 'none');
model.result('pg4').feature('glob1').set('linemarker', 'point');
model.result('pg4').run;

model.study.create('std2');
model.study('std2').create('freq', 'Frequency');
model.study('std2').feature('freq').setSolveFor('/physics/solid', true);
model.study('std2').feature('freq').setSolveFor('/physics/es', true);
model.study('std2').feature('freq').setSolveFor('/multiphysics/pze1', true);
model.study('std2').feature('freq').set('punit', 'MHz');
model.study('std2').feature('freq').set('plist', 'range(870.3,0.05,870.9)');
model.study('std2').label('Study 2 - Frequency response');
model.study('std2').create('param', 'Parametric');
model.study('std2').feature('param').setIndex('pname', 'E_Al', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', 'Pa', 0);
model.study('std2').feature('param').setIndex('pname', 'E_Al', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', 'Pa', 0);
model.study('std2').feature('param').setIndex('pname', 'p1', 0);
model.study('std2').feature('param').setIndex('plistarr', '0 1', 0);
model.study('std2').feature('param').setIndex('pname', 'E_Al', 1);
model.study('std2').feature('param').setIndex('plistarr', '', 1);
model.study('std2').feature('param').setIndex('punit', 'Pa', 1);
model.study('std2').feature('param').setIndex('pname', 'E_Al', 1);
model.study('std2').feature('param').setIndex('plistarr', '', 1);
model.study('std2').feature('param').setIndex('punit', 'Pa', 1);
model.study('std2').feature('param').setIndex('pname', 'p2', 1);
model.study('std2').feature('param').setIndex('plistarr', '0 1', 1);
model.study('std2').feature('param').setIndex('pname', 'E_Al', 2);
model.study('std2').feature('param').setIndex('plistarr', '', 2);
model.study('std2').feature('param').setIndex('punit', 'Pa', 2);
model.study('std2').feature('param').setIndex('pname', 'E_Al', 2);
model.study('std2').feature('param').setIndex('plistarr', '', 2);
model.study('std2').feature('param').setIndex('punit', 'Pa', 2);
model.study('std2').feature('param').setIndex('pname', 'p3', 2);
model.study('std2').feature('param').setIndex('plistarr', '0 1', 2);
model.study('std2').feature('param').setIndex('pname', 'E_Al', 3);
model.study('std2').feature('param').setIndex('plistarr', '', 3);
model.study('std2').feature('param').setIndex('punit', 'Pa', 3);
model.study('std2').feature('param').setIndex('pname', 'E_Al', 3);
model.study('std2').feature('param').setIndex('plistarr', '', 3);
model.study('std2').feature('param').setIndex('punit', 'Pa', 3);
model.study('std2').feature('param').setIndex('pname', 'p4', 3);
model.study('std2').feature('param').setIndex('plistarr', '0 1', 3);
model.study('std2').feature('param').setIndex('pname', 'E_Al', 4);
model.study('std2').feature('param').setIndex('plistarr', '', 4);
model.study('std2').feature('param').setIndex('punit', 'Pa', 4);
model.study('std2').feature('param').setIndex('pname', 'E_Al', 4);
model.study('std2').feature('param').setIndex('plistarr', '', 4);
model.study('std2').feature('param').setIndex('punit', 'Pa', 4);
model.study('std2').feature('param').setIndex('pname', 'p5', 4);
model.study('std2').feature('param').setIndex('plistarr', '0 1', 4);
model.study('std2').feature('param').setIndex('pname', 'E_Al', 5);
model.study('std2').feature('param').setIndex('plistarr', '', 5);
model.study('std2').feature('param').setIndex('punit', 'Pa', 5);
model.study('std2').feature('param').setIndex('pname', 'E_Al', 5);
model.study('std2').feature('param').setIndex('plistarr', '', 5);
model.study('std2').feature('param').setIndex('punit', 'Pa', 5);
model.study('std2').feature('param').setIndex('pname', 'p6', 5);
model.study('std2').feature('param').setIndex('plistarr', '0 1', 5);

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'freq');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'freq');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('p1', 'Parametric');
model.sol('sol2').feature('s1').feature.remove('pDef');
model.sol('sol2').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol2').feature('s1').feature('p1').set('plistarr', {'range(870.3,0.05,870.9)'});
model.sol('sol2').feature('s1').feature('p1').set('punit', {'MHz'});
model.sol('sol2').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol2').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol2').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol2').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol2').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol2').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol2').feature('s1').feature('p1').set('probes', {});
model.sol('sol2').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol2').feature('s1').set('linpmethod', 'sol');
model.sol('sol2').feature('s1').set('linpsol', 'zero');
model.sol('sol2').feature('s1').set('control', 'freq');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('seDef', 'Segregated');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol2').feature('s1').feature('d1').label('Suggested Direct Solver (pze1) (Merged)');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol2').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol2').feature('s1').feature('i1').label('Suggested Iterative Solver (pze1)');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').feature('s1').feature.remove('seDef');
model.sol('sol2').attach('std2');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std2');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol2');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'p1' 'p2' 'p3' 'p4' 'p5' 'p6'});
model.batch('p1').set('plistarr', {'0 1' '0 1' '0 1' '0 1' '0 1' '0 1'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std2');
model.batch('p1').set('control', 'param');

model.sol.create('sol3');
model.sol('sol3').study('std2');
model.sol('sol3').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol3');
model.batch('p1').run('compute');

model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').set('data', 'dset3');
model.result('pg5').setIndex('looplevel', 13, 0);
model.result('pg5').setIndex('looplevel', 2, 1);
model.result('pg5').set('defaultPlotID', 'stress');
model.result('pg5').label('Stress (solid)');
model.result('pg5').set('frametype', 'spatial');
model.result('pg5').create('vol1', 'Volume');
model.result('pg5').feature('vol1').set('expr', {'solid.misesGp_peak'});
model.result('pg5').feature('vol1').set('threshold', 'manual');
model.result('pg5').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg5').feature('vol1').set('colortable', 'Rainbow');
model.result('pg5').feature('vol1').set('colortabletrans', 'none');
model.result('pg5').feature('vol1').set('colorscalemode', 'linear');
model.result('pg5').feature('vol1').set('resolution', 'custom');
model.result('pg5').feature('vol1').set('refine', 2);
model.result('pg5').feature('vol1').set('colortable', 'Prism');
model.result('pg5').feature('vol1').create('def', 'Deform');
model.result('pg5').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg5').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').label('Electric Potential (es) 1');
model.result('pg6').set('data', 'dset3');
model.result('pg6').setIndex('looplevel', 13, 0);
model.result('pg6').setIndex('looplevel', 2, 1);
model.result('pg6').set('frametype', 'spatial');
model.result('pg6').set('showlegendsmaxmin', true);
model.result('pg6').set('data', 'dset3');
model.result('pg6').setIndex('looplevel', 13, 0);
model.result('pg6').setIndex('looplevel', 2, 1);
model.result('pg6').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom2/pdef1/pcond2/pcond1/pcond1/pg1');
model.result('pg6').feature.create('mslc1', 'Multislice');
model.result('pg6').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg6').feature('mslc1').set('solutionparams', 'parent');
model.result('pg6').feature('mslc1').set('expr', 'V');
model.result('pg6').feature('mslc1').set('multiplanexmethod', 'coord');
model.result('pg6').feature('mslc1').set('xcoord', 'es.CPx');
model.result('pg6').feature('mslc1').set('multiplaneymethod', 'coord');
model.result('pg6').feature('mslc1').set('ycoord', 'es.CPy');
model.result('pg6').feature('mslc1').set('multiplanezmethod', 'coord');
model.result('pg6').feature('mslc1').set('zcoord', 'es.CPz');
model.result('pg6').feature('mslc1').set('colortable', 'Dipole');
model.result('pg6').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg6').feature('mslc1').set('data', 'parent');
model.result('pg6').feature.create('strmsl1', 'StreamlineMultislice');
model.result('pg6').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg6').feature('strmsl1').set('solutionparams', 'parent');
model.result('pg6').feature('strmsl1').set('expr', {'es.Ex' 'es.Ey' 'es.Ez'});
model.result('pg6').feature('strmsl1').set('multiplanexmethod', 'coord');
model.result('pg6').feature('strmsl1').set('xcoord', 'es.CPx');
model.result('pg6').feature('strmsl1').set('multiplaneymethod', 'coord');
model.result('pg6').feature('strmsl1').set('ycoord', 'es.CPy');
model.result('pg6').feature('strmsl1').set('multiplanezmethod', 'coord');
model.result('pg6').feature('strmsl1').set('zcoord', 'es.CPz');
model.result('pg6').feature('strmsl1').set('titletype', 'none');
model.result('pg6').feature('strmsl1').set('posmethod', 'uniform');
model.result('pg6').feature('strmsl1').set('udist', 0.02);
model.result('pg6').feature('strmsl1').set('maxlen', 0.4);
model.result('pg6').feature('strmsl1').set('maxtime', Inf);
model.result('pg6').feature('strmsl1').set('inheritcolor', false);
model.result('pg6').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg6').feature('strmsl1').set('maxtime', Inf);
model.result('pg6').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg6').feature('strmsl1').set('maxtime', Inf);
model.result('pg6').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg6').feature('strmsl1').set('maxtime', Inf);
model.result('pg6').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg6').feature('strmsl1').set('maxtime', Inf);
model.result('pg6').feature('strmsl1').set('data', 'parent');
model.result('pg6').feature('strmsl1').set('inheritplot', 'mslc1');
model.result('pg6').feature('strmsl1').feature.create('col1', 'Color');
model.result('pg6').feature('strmsl1').feature('col1').set('expr', 'V');
model.result('pg6').feature('strmsl1').feature('col1').set('colortable', 'DipoleDark');
model.result('pg6').feature('strmsl1').feature('col1').set('colorlegend', false);
model.result('pg6').feature('strmsl1').feature.create('filt1', 'Filter');
model.result('pg6').feature('strmsl1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result.create('pg7', 'PlotGroup3D');
model.result('pg7').label('Electric Field Norm (es) 1');
model.result('pg7').set('data', 'dset3');
model.result('pg7').setIndex('looplevel', 13, 0);
model.result('pg7').setIndex('looplevel', 2, 1);
model.result('pg7').set('frametype', 'spatial');
model.result('pg7').set('showlegendsmaxmin', true);
model.result('pg7').set('data', 'dset3');
model.result('pg7').setIndex('looplevel', 13, 0);
model.result('pg7').setIndex('looplevel', 2, 1);
model.result('pg7').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom3/pdef1/pcond2/pcond1/pg1');
model.result('pg7').feature.create('mslc1', 'Multislice');
model.result('pg7').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg7').feature('mslc1').set('solutionparams', 'parent');
model.result('pg7').feature('mslc1').set('expr', 'es.normE');
model.result('pg7').feature('mslc1').set('multiplanexmethod', 'coord');
model.result('pg7').feature('mslc1').set('xcoord', 'es.CPx');
model.result('pg7').feature('mslc1').set('multiplaneymethod', 'coord');
model.result('pg7').feature('mslc1').set('ycoord', 'es.CPy');
model.result('pg7').feature('mslc1').set('multiplanezmethod', 'coord');
model.result('pg7').feature('mslc1').set('zcoord', 'es.CPz');
model.result('pg7').feature('mslc1').set('colortable', 'Prism');
model.result('pg7').feature('mslc1').set('colortabletrans', 'nonlinear');
model.result('pg7').feature('mslc1').set('colorcalibration', -0.8);
model.result('pg7').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg7').feature('mslc1').set('data', 'parent');
model.result('pg7').feature.create('strmsl1', 'StreamlineMultislice');
model.result('pg7').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg7').feature('strmsl1').set('solutionparams', 'parent');
model.result('pg7').feature('strmsl1').set('expr', {'es.Ex' 'es.Ey' 'es.Ez'});
model.result('pg7').feature('strmsl1').set('multiplanexmethod', 'coord');
model.result('pg7').feature('strmsl1').set('xcoord', 'es.CPx');
model.result('pg7').feature('strmsl1').set('multiplaneymethod', 'coord');
model.result('pg7').feature('strmsl1').set('ycoord', 'es.CPy');
model.result('pg7').feature('strmsl1').set('multiplanezmethod', 'coord');
model.result('pg7').feature('strmsl1').set('zcoord', 'es.CPz');
model.result('pg7').feature('strmsl1').set('titletype', 'none');
model.result('pg7').feature('strmsl1').set('posmethod', 'uniform');
model.result('pg7').feature('strmsl1').set('udist', 0.02);
model.result('pg7').feature('strmsl1').set('maxlen', 0.4);
model.result('pg7').feature('strmsl1').set('maxtime', Inf);
model.result('pg7').feature('strmsl1').set('inheritcolor', false);
model.result('pg7').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg7').feature('strmsl1').set('maxtime', Inf);
model.result('pg7').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg7').feature('strmsl1').set('maxtime', Inf);
model.result('pg7').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg7').feature('strmsl1').set('maxtime', Inf);
model.result('pg7').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg7').feature('strmsl1').set('maxtime', Inf);
model.result('pg7').feature('strmsl1').set('data', 'parent');
model.result('pg7').feature('strmsl1').set('inheritplot', 'mslc1');
model.result('pg7').feature('strmsl1').feature.create('col1', 'Color');
model.result('pg7').feature('strmsl1').feature('col1').set('expr', 'es.normE');
model.result('pg7').feature('strmsl1').feature('col1').set('colortable', 'PrismDark');
model.result('pg7').feature('strmsl1').feature('col1').set('colorlegend', false);
model.result('pg7').feature('strmsl1').feature('col1').set('colortabletrans', 'nonlinear');
model.result('pg7').feature('strmsl1').feature('col1').set('colorcalibration', -0.8);
model.result('pg7').feature('strmsl1').feature.create('filt1', 'Filter');
model.result('pg7').feature('strmsl1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result('pg5').run;
model.result('pg6').run;
model.result('pg6').setIndex('looplevel', 1, 1);
model.result('pg6').setIndex('looplevel', 10, 0);
model.result('pg6').run;
model.result('pg6').feature('mslc1').active(false);
model.result('pg6').run;
model.result('pg6').feature('strmsl1').active(false);
model.result('pg6').run;
model.result('pg6').create('vol1', 'Volume');
model.result('pg6').feature('vol1').set('expr', 'V');
model.result('pg6').run;
model.result.create('pg8', 'PlotGroup1D');
model.result('pg8').run;
model.result('pg8').label('Frequency Response');
model.result('pg8').set('data', 'dset3');
model.result('pg8').set('titletype', 'label');
model.result('pg8').set('legendpos', 'uppermiddle');
model.result('pg8').create('glob1', 'Global');
model.result('pg8').feature('glob1').set('markerpos', 'datapoints');
model.result('pg8').feature('glob1').set('linewidth', 'preference');
model.result('pg8').feature('glob1').setIndex('expr', 'log10(abs(1/es.Y11)/1[ohm])', 0);
model.result('pg8').feature('glob1').setIndex('descr', 'log10|Z| (Ohms)', 0);
model.result('pg8').run;

model.title('Solidly Mounted Resonator 3D');

model.description('A solidly-mounted resonator (SMR) is a piezoelectric MEMS resonator formed on top of an acoustic mirror stack deposited on a thick substrate. This tutorial shows how to simulate an SMR in 3D. In this example, the eigenmodes were computed with varying number of particles attached to the sensor surface for computing the sensitivity, and the corresponding change in frequency response was analyzed. The resonant frequency decreases with more attached particles, and the sensitivity depends on the attachment location relative to the mode shape - both observations are as expected.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;

model.label('solidly_mounted_resonator_3d.mph');

model.modelNode.label('Components');

out = model;
