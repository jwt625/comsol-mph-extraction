function out = model
%
% solidly_mounted_resonator_2d.m
%
% Model exported on May 26 2025, 21:30 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/MEMS_Module/Piezoelectric_Devices');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');
model.physics('solid').create('pzm1', 'PiezoelectricMaterialModel');
model.physics('solid').feature('pzm1').selection.all;
model.physics.create('es', 'Electrostatics', 'geom1');
model.physics('es').model('comp1');
model.physics('es').create('ccnp1', 'ChargeConservationPiezo');
model.physics('es').feature('ccnp1').selection.all;

model.multiphysics.create('pze1', 'PiezoelectricEffect', 'geom1', 2);
model.multiphysics('pze1').set('Solid_physics', 'solid');
model.multiphysics('pze1').set('Electrostatics_physics', 'es');

model.study.create('std1');
model.study('std1').create('eig', 'Eigenfrequency');
model.study('std1').feature('eig').set('shift', '1[Hz]');
model.study('std1').feature('eig').set('chkeigregion', true);
model.study('std1').feature('eig').set('conrad', '1');
model.study('std1').feature('eig').set('conradynhm', '1');
model.study('std1').feature('eig').set('storefact', false);
model.study('std1').feature('eig').set('linpsolnum', 'auto');
model.study('std1').feature('eig').set('solnum', 'auto');
model.study('std1').feature('eig').set('notsolnum', 'auto');
model.study('std1').feature('eig').set('outputmap', {});
model.study('std1').feature('eig').set('ngenAUX', '1');
model.study('std1').feature('eig').set('goalngenAUX', '1');
model.study('std1').feature('eig').set('ngenAUX', '1');
model.study('std1').feature('eig').set('goalngenAUX', '1');
model.study('std1').feature('eig').setSolveFor('/physics/solid', true);
model.study('std1').feature('eig').setSolveFor('/physics/es', true);
model.study('std1').feature('eig').setSolveFor('/multiphysics/pze1', true);

model.common.create('mpf1', 'ParticipationFactors', 'comp1');

model.geom('geom1').lengthUnit([native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']);

model.view('view1').axis.set('viewscaletype', 'manual');
model.view('view1').axis.set('yscale', 35);

model.param.label('Parameters 1 - Geometry');
model.param.set('t_s', '500[um]/25');
model.param.descr('t_s', 'Substrate thickness (truncated)');
model.param.set('t_i', '200[nm]');
model.param.descr('t_i', 'Insulator thickness');
model.param.set('t_hil', '1.82[um]');
model.param.descr('t_hil', 'High impedance layer thickness');
model.param.set('t_lil', '1.65[um]');
model.param.descr('t_lil', 'Low impedance layer thickness');
model.param.set('t_pe', '3.35[um]');
model.param.descr('t_pe', 'Piezoelectric layer thickness');
model.param.set('t_e', '200[nm]');
model.param.descr('t_e', 'Electrode thickness');
model.param.set('w_ar', '200[um]');
model.param.descr('w_ar', 'Active area width');
model.param.set('w_pe', '800[um]');
model.param.descr('w_pe', 'Piezoelectric layer width');
model.param.set('w', '1000[um]');
model.param.descr('w', 'Device width');
model.param.create('par2');
model.param('par2').label('Parameters 2 - Material properties');
model.param('par2').set('rho_ZnO', '5680[kg/m^3]');
model.param('par2').descr('rho_ZnO', 'Density of ZnO');
model.param('par2').set('rho_Mo', '10200[kg/m^3]');
model.param('par2').descr('rho_Mo', 'Density of Mo');
model.param('par2').set('rho_SiO2', '2170[kg/m^3]');
model.param('par2').descr('rho_SiO2', 'Density of SiO2');
model.param('par2').set('rho_Al', '2700[kg/m^3]');
model.param('par2').descr('rho_Al', 'Density of Al');
model.param('par2').set('rho_Si', '2330[kg/m^3]');
model.param('par2').descr('rho_Si', 'Density of Si');
model.param('par2').set('v_ZnO', '6330[m/s]');
model.param('par2').descr('v_ZnO', 'Acoustic velocity of ZnO');
model.param('par2').set('v_Mo', '6280[m/s]');
model.param('par2').descr('v_Mo', 'Acoustic velocity_of Mo');
model.param('par2').set('v_SiO2', '5540[m/s]');
model.param('par2').descr('v_SiO2', 'Acoustic velocity of SiO2');
model.param('par2').set('v_Al', '6450[m/s]');
model.param('par2').descr('v_Al', 'Acoustic velocity of Al');
model.param('par2').set('v_Si', '8320[m/s]');
model.param('par2').descr('v_Si', 'Acoustic velocity of Si');
model.param('par2').set('E_Mo', 'rho_Mo*(v_Mo)^2');
model.param('par2').descr('E_Mo', 'Young''s modulus of Mo');
model.param('par2').set('E_SiO2', 'rho_SiO2*(v_SiO2)^2');
model.param('par2').descr('E_SiO2', 'Young''s modulus of SiO2');
model.param('par2').set('E_Al', 'rho_Al*(v_Al)^2');
model.param('par2').descr('E_Al', 'Young''s modulus of Al');
model.param('par2').set('E_Si', 'rho_Si*(v_Si)^2');
model.param('par2').descr('E_Si', 'Young''s modulus of Si');
model.param('par2').set('eta0', '1.5e-4');
model.param('par2').descr('eta0', 'Loss factor (guessed)');
model.param('par2').set('lambda_Si', 'v_Si/870[MHz]');
model.param('par2').descr('lambda_Si', 'Wavelength in Si');

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').label('Piezo - ZnO');
model.geom('geom1').feature('r1').set('size', {'w_pe' 't_pe'});
model.geom('geom1').feature('r1').set('pos', {'-w_pe/2' 't_e'});
model.geom('geom1').feature('r1').set('selresult', true);
model.geom('geom1').feature.duplicate('r2', 'r1');
model.geom('geom1').feature('r2').label('Top electrode - Al');
model.geom('geom1').feature('r2').set('size', {'w_ar' 't_e'});
model.geom('geom1').feature('r2').set('pos', {'-w_ar/2' 't_pe+t_e'});
model.geom('geom1').feature('r2').set('selresultshow', 'all');
model.geom('geom1').selection.create('csel1', 'CumulativeSelection');
model.geom('geom1').selection('csel1').label('Al');
model.geom('geom1').feature('r2').set('contributeto', 'csel1');
model.geom('geom1').feature.duplicate('r3', 'r2');
model.geom('geom1').feature('r3').label('Bottom electrode - Al');
model.geom('geom1').feature('r3').set('size', {'w_pe' 't_e'});
model.geom('geom1').feature('r3').set('pos', {'-w_pe/2' '0'});
model.geom('geom1').run('r3');
model.geom('geom1').create('r4', 'Rectangle');
model.geom('geom1').feature('r4').label('Low impedance - SiO2');
model.geom('geom1').feature('r4').set('size', {'w' 't_lil'});
model.geom('geom1').feature('r4').set('pos', {'-w/2' '-t_lil'});
model.geom('geom1').feature('r4').setIndex('layer', '(w-w_pe)/2', 0);
model.geom('geom1').feature('r4').set('layerleft', true);
model.geom('geom1').feature('r4').set('layerright', true);
model.geom('geom1').feature('r4').set('layerbottom', false);
model.geom('geom1').selection.create('csel2', 'CumulativeSelection');
model.geom('geom1').selection('csel2').label('SiO2');
model.geom('geom1').feature('r4').set('contributeto', 'csel2');
model.geom('geom1').run('r4');
model.geom('geom1').create('arr1', 'Array');
model.geom('geom1').feature('arr1').label('Array - SiO2');
model.geom('geom1').feature('arr1').selection('input').named('csel2');
model.geom('geom1').feature('arr1').set('fullsize', [1 3]);
model.geom('geom1').feature('arr1').set('displ', {'0' '-t_lil-t_hil'});
model.geom('geom1').feature.duplicate('r5', 'r4');
model.geom('geom1').feature('r5').label('High impedance - Mo');
model.geom('geom1').feature('r5').set('size', {'w' 't_hil'});
model.geom('geom1').feature('r5').set('pos', {'-w/2' '-t_lil-t_hil'});
model.geom('geom1').selection.create('csel3', 'CumulativeSelection');
model.geom('geom1').selection('csel3').label('Mo');
model.geom('geom1').feature('r5').set('contributeto', 'csel3');
model.geom('geom1').feature.duplicate('arr2', 'arr1');
model.geom('geom1').feature('arr2').label('Array - Mo');
model.geom('geom1').runPre('arr2');
model.geom('geom1').feature('arr2').selection('input').named('csel3');
model.geom('geom1').run('arr2');
model.geom('geom1').feature.duplicate('r6', 'r4');
model.geom('geom1').feature('r6').label('Insulator - SiO2');
model.geom('geom1').feature('r6').set('size', {'w' 't_i'});
model.geom('geom1').feature('r6').set('pos', {'-w/2' '-(t_lil*3)-(t_hil*3)-t_i'});
model.geom('geom1').feature.duplicate('r7', 'r6');
model.geom('geom1').feature('r7').label('Substrate - Si');
model.geom('geom1').feature('r7').set('size', {'w' 't_s'});
model.geom('geom1').feature('r7').set('pos', {'-w/2' '-(t_lil*3)-(t_hil*3)-t_i-t_s'});
model.geom('geom1').selection.create('csel4', 'CumulativeSelection');
model.geom('geom1').selection('csel4').label('Si');
model.geom('geom1').feature('r7').set('contributeto', 'csel4');
model.geom('geom1').feature.duplicate('r8', 'r7');
model.geom('geom1').feature('r8').label('Bottom PML - Si');
model.geom('geom1').feature('r8').set('size', {'w' 'lambda_Si'});
model.geom('geom1').feature('r8').set('pos', {'-w/2' '-(t_lil*3)-(t_hil*3)-t_i-t_s-lambda_Si'});
model.geom('geom1').run('fin');

model.selection.create('box1', 'Box');
model.selection('box1').model('comp1');
model.selection('box1').label('Not PML');
model.selection('box1').set('xmin', '-w_ar');
model.selection('box1').set('xmax', 'w_ar');
model.selection('box1').set('ymin', '-(t_hil*3)-(t_lil*3)-t_i-t_s/2');
model.selection.create('com1', 'Complement');
model.selection('com1').model('comp1');
model.selection('com1').label('PML');
model.selection('com1').set('input', {'box1'});
model.selection.create('box2', 'Box');
model.selection('box2').model('comp1');
model.selection('box2').label('Left fixed B.C.');
model.selection('box2').set('entitydim', 1);
model.selection('box2').set('xmax', '-(w+w_pe)/4');
model.selection('box2').set('condition', 'inside');
model.selection.duplicate('box3', 'box2');
model.selection('box3').label('Right fixed B.C.');
model.selection('box3').set('xmin', '(w+w_pe)/4');
model.selection('box3').set('xmax', Inf);
model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');
model.selection('sel1').label('Bottom fixed B.C.');
model.selection('sel1').geom(1);
model.selection('sel1').set([2 21 49]);
model.selection.create('uni1', 'Union');
model.selection('uni1').model('comp1');
model.selection('uni1').label('Fixed B.C.');
model.selection('uni1').set('entitydim', 1);
model.selection('uni1').set('input', {'box2' 'box3' 'sel1'});

model.coordSystem.create('pml1', 'geom1', 'PML');
model.coordSystem('pml1').selection.named('com1');

model.physics('solid').prop('d').set('d', 'w_ar');
model.physics('solid').feature('lemm1').create('dmp1', 'Damping', 2);
model.physics('solid').feature('lemm1').feature('dmp1').set('DampingType', 'IsotropicLossFactor');
model.physics('solid').feature('pzm1').selection.named('geom1_r1_dom');
model.physics('solid').feature('pzm1').create('mdmp1', 'MechanicalDamping', 2);
model.physics('solid').create('fix1', 'Fixed', 1);
model.physics('solid').feature('fix1').selection.named('uni1');
model.physics('es').selection.named('geom1_r1_dom');
model.physics('es').prop('d').set('d', 'w_ar');
model.physics('es').create('gnd1', 'Ground', 1);
model.physics('es').feature('gnd1').selection.named('geom1_r3_bnd');
model.physics('es').create('term1', 'Terminal', 1);
model.physics('es').feature('term1').selection.named('geom1_r2_bnd');
model.physics('es').feature('term1').set('TerminalType', 'Voltage');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('StrainCharge', 'Strain-charge form');
model.material('mat1').propertyGroup.create('StressCharge', 'Stress-charge form');
model.material('mat1').label('Zinc Oxide');
model.material('mat1').set('family', 'custom');
model.material('mat1').set('customspecular', [0.7843137254901961 1 1]);
model.material('mat1').set('customdiffuse', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat1').set('noise', true);
model.material('mat1').set('fresnel', 0.9);
model.material('mat1').set('roughness', 0.1);
model.material('mat1').set('metallic', 0);
model.material('mat1').set('pearl', 0);
model.material('mat1').set('diffusewrap', 0);
model.material('mat1').set('clearcoat', 0);
model.material('mat1').set('reflectance', 0);
model.material('mat1').propertyGroup('def').set('relpermittivity', {'8.5446' '0' '0' '0' '8.5446' '0' '0' '0' '10.204'});
model.material('mat1').propertyGroup('def').set('density', '5680[kg/m^3]');
model.material('mat1').propertyGroup('StrainCharge').set('sE', {'7.86e-012[1/Pa]' '-3.43e-012[1/Pa]' '-2.21e-012[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '-3.43e-012[1/Pa]' '7.86e-012[1/Pa]' '-2.21e-012[1/Pa]' '0[1/Pa]'  ...
'0[1/Pa]' '0[1/Pa]' '-2.21e-012[1/Pa]' '-2.21e-012[1/Pa]' '6.94e-012[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]'  ...
'0[1/Pa]' '2.36e-011[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '2.36e-011[1/Pa]' '0[1/Pa]'  ...
'0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '2.26e-011[1/Pa]'});
model.material('mat1').propertyGroup('StrainCharge').set('dET', {'0[C/N]' '0[C/N]' '-5.43e-012[C/N]' '0[C/N]' '0[C/N]' '-5.43e-012[C/N]' '0[C/N]' '0[C/N]' '1.167e-011[C/N]' '0[C/N]'  ...
'-1.134e-011[C/N]' '0[C/N]' '-1.134e-011[C/N]' '0[C/N]' '0[C/N]' '0[C/N]' '0[C/N]' '0[C/N]'});
model.material('mat1').propertyGroup('StrainCharge').set('epsilonrT', {'9.16' '0' '0' '0' '9.16' '0' '0' '0' '12.64'});
model.material('mat1').propertyGroup('StressCharge').set('cE', {'2.09714e+011[Pa]' '1.2114e+011[Pa]' '1.05359e+011[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '1.2114e+011[Pa]' '2.09714e+011[Pa]' '1.05359e+011[Pa]' '0[Pa]'  ...
'0[Pa]' '0[Pa]' '1.05359e+011[Pa]' '1.05359e+011[Pa]' '2.11194e+011[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]'  ...
'0[Pa]' '4.23729e+010[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '4.23729e+010[Pa]' '0[Pa]'  ...
'0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '4.42478e+010[Pa]'});
model.material('mat1').propertyGroup('StressCharge').set('eES', {'0[C/m^2]' '0[C/m^2]' '-0.567005[C/m^2]' '0[C/m^2]' '0[C/m^2]' '-0.567005[C/m^2]' '0[C/m^2]' '0[C/m^2]' '1.32044[C/m^2]' '0[C/m^2]'  ...
'-0.480508[C/m^2]' '0[C/m^2]' '-0.480508[C/m^2]' '0[C/m^2]' '0[C/m^2]' '0[C/m^2]' '0[C/m^2]' '0[C/m^2]'});
model.material('mat1').propertyGroup('StressCharge').set('epsilonrS', {'8.5446' '0' '0' '0' '8.5446' '0' '0' '0' '10.204'});
model.material('mat1').selection.named('geom1_r1_dom');
model.material('mat1').propertyGroup('def').set('density', {'rho_ZnO'});
model.material('mat1').propertyGroup('StressCharge').set('eta_cE', {'eta0'});
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat2').label('Al - Aluminum');
model.material('mat2').set('family', 'aluminum');
model.material('mat2').propertyGroup('def').set('electricconductivity', {'35.5e6[S/m]' '0' '0' '0' '35.5e6[S/m]' '0' '0' '0' '35.5e6[S/m]'});
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'23.1e-6[1/K]' '0' '0' '0' '23.1e-6[1/K]' '0' '0' '0' '23.1e-6[1/K]'});
model.material('mat2').propertyGroup('def').set('heatcapacity', '904[J/(kg*K)]');
model.material('mat2').propertyGroup('def').set('density', '2700[kg/m^3]');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'237[W/(m*K)]' '0' '0' '0' '237[W/(m*K)]' '0' '0' '0' '237[W/(m*K)]'});
model.material('mat2').propertyGroup('Enu').set('E', '70.0e9[Pa]');
model.material('mat2').propertyGroup('Enu').set('nu', '0.35');
model.material('mat2').selection.named('geom1_csel1_dom');
model.material('mat2').propertyGroup('def').set('lossfactor', {'eta0'});
model.material('mat2').propertyGroup('def').set('density', {'rho_Al'});
model.material('mat2').propertyGroup('Enu').set('E', {'E_Al'});
model.material.create('mat3', 'Common', 'comp1');
model.material('mat3').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat3').label('SiO2 - Silicon oxide');
model.material('mat3').propertyGroup('def').set('electricconductivity', {'0[S/m]' '0' '0' '0' '0[S/m]' '0' '0' '0' '0[S/m]'});
model.material('mat3').propertyGroup('def').set('thermalexpansioncoefficient', {'0.5e-6[1/K]' '0' '0' '0' '0.5e-6[1/K]' '0' '0' '0' '0.5e-6[1/K]'});
model.material('mat3').propertyGroup('def').set('heatcapacity', '730[J/(kg*K)]');
model.material('mat3').propertyGroup('def').set('relpermittivity', {'4.2' '0' '0' '0' '4.2' '0' '0' '0' '4.2'});
model.material('mat3').propertyGroup('def').set('density', '2200[kg/m^3]');
model.material('mat3').propertyGroup('def').set('thermalconductivity', {'1.4[W/(m*K)]' '0' '0' '0' '1.4[W/(m*K)]' '0' '0' '0' '1.4[W/(m*K)]'});
model.material('mat3').propertyGroup('Enu').set('E', '70e9[Pa]');
model.material('mat3').propertyGroup('Enu').set('nu', '0.17');
model.material('mat3').selection.named('geom1_csel2_dom');
model.material('mat3').propertyGroup('def').set('lossfactor', {'eta0'});
model.material('mat3').propertyGroup('def').set('density', {'rho_SiO2'});
model.material('mat3').propertyGroup('Enu').set('E', {'E_SiO2'});
model.material.create('mat4', 'Common', 'comp1');
model.material('mat4').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat4').label('Si - Silicon (single-crystal, isotropic)');
model.material('mat4').set('family', 'custom');
model.material('mat4').set('customspecular', [0.7843137254901961 1 1]);
model.material('mat4').set('customdiffuse', [0.6666666666666666 0.6666666666666666 0.7058823529411765]);
model.material('mat4').set('customambient', [0.6666666666666666 0.6666666666666666 0.7058823529411765]);
model.material('mat4').set('noise', true);
model.material('mat4').set('fresnel', 0.7);
model.material('mat4').set('metallic', 0);
model.material('mat4').set('pearl', 0);
model.material('mat4').set('diffusewrap', 0);
model.material('mat4').set('clearcoat', 0);
model.material('mat4').set('reflectance', 0);
model.material('mat4').propertyGroup('def').set('thermalexpansioncoefficient', {'2.6e-6[1/K]' '0' '0' '0' '2.6e-6[1/K]' '0' '0' '0' '2.6e-6[1/K]'});
model.material('mat4').propertyGroup('def').set('heatcapacity', '700[J/(kg*K)]');
model.material('mat4').propertyGroup('def').set('relpermittivity', {'11.7' '0' '0' '0' '11.7' '0' '0' '0' '11.7'});
model.material('mat4').propertyGroup('def').set('density', '2329[kg/m^3]');
model.material('mat4').propertyGroup('def').set('thermalconductivity', {'130[W/(m*K)]' '0' '0' '0' '130[W/(m*K)]' '0' '0' '0' '130[W/(m*K)]'});
model.material('mat4').propertyGroup('Enu').set('E', '170e9[Pa]');
model.material('mat4').propertyGroup('Enu').set('nu', '0.28');
model.material('mat4').selection.named('geom1_csel4_dom');
model.material('mat4').propertyGroup('def').set('lossfactor', {'eta0'});
model.material('mat4').propertyGroup('def').set('density', {'rho_Si'});
model.material('mat4').propertyGroup('Enu').set('E', {'E_Si'});
model.material.create('mat5', 'Common', 'comp1');
model.material('mat5').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat5').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat5').label('Molybdenum');
model.material('mat5').set('family', 'custom');
model.material('mat5').set('customspecular', [0.7843137254901961 1 1]);
model.material('mat5').set('customdiffuse', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat5').set('noise', true);
model.material('mat5').set('fresnel', 0.3);
model.material('mat5').set('roughness', 0.1);
model.material('mat5').set('metallic', 0);
model.material('mat5').set('pearl', 0);
model.material('mat5').set('diffusewrap', 0);
model.material('mat5').set('clearcoat', 0);
model.material('mat5').set('reflectance', 0);
model.material('mat5').propertyGroup('def').set('thermalexpansioncoefficient', {'4.8e-6[1/K]' '0' '0' '0' '4.8e-6[1/K]' '0' '0' '0' '4.8e-6[1/K]'});
model.material('mat5').propertyGroup('def').set('density', '10200[kg/m^3]');
model.material('mat5').propertyGroup('def').set('heatcapacity', '250[J/(kg*K)]');
model.material('mat5').propertyGroup('def').set('thermalconductivity', {'138[W/(m*K)]' '0' '0' '0' '138[W/(m*K)]' '0' '0' '0' '138[W/(m*K)]'});
model.material('mat5').propertyGroup('Enu').set('E', '312[GPa]');
model.material('mat5').propertyGroup('Enu').set('nu', '0.31');
model.material('mat5').propertyGroup('Murnaghan').set('l', '-300[GPa]');
model.material('mat5').propertyGroup('Murnaghan').set('m', '-850[GPa]');
model.material('mat5').propertyGroup('Murnaghan').set('n', '-910[GPa]');
model.material('mat5').selection.named('geom1_csel3_dom');
model.material('mat5').propertyGroup('def').set('lossfactor', {'eta0'});
model.material('mat5').propertyGroup('def').set('density', {'rho_Mo'});
model.material('mat5').propertyGroup('Enu').set('E', {'E_Mo'});

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('map1').selection.named('geom1_r2_dom');
model.mesh('mesh1').feature('map1').set('smoothcontrol', false);
model.mesh('mesh1').feature('map1').set('adjustedgdistr', true);
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([45]);
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 16);
model.mesh('mesh1').feature('map1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis2').selection.set([43]);
model.mesh('mesh1').feature('map1').feature('dis2').set('numelem', 1);
model.mesh('mesh1').create('edg1', 'Edge');
model.mesh('mesh1').feature('edg1').selection.set([42 47]);
model.mesh('mesh1').feature('edg1').set('smoothcontrol', false);
model.mesh('mesh1').feature('edg1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('edg1').feature('dis1').selection.set([47]);
model.mesh('mesh1').feature('edg1').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('edg1').feature('dis1').set('elemcount', 16);
model.mesh('mesh1').feature('edg1').feature('dis1').set('elemratio', 2);
model.mesh('mesh1').feature('edg1').feature('dis1').set('growthrate', 'exponential');
model.mesh('mesh1').feature('edg1').feature.duplicate('dis2', 'dis1');
model.mesh('mesh1').feature('edg1').feature('dis2').selection.set([42]);
model.mesh('mesh1').feature('edg1').feature('dis2').set('reverse', true);
model.mesh('mesh1').create('cpe1', 'CopyEdge');
model.mesh('mesh1').feature('cpe1').selection('source').geom(1);
model.mesh('mesh1').feature('cpe1').selection('destination').geom(1);
model.mesh('mesh1').feature('cpe1').selection('source').set([42 44 47]);
model.mesh('mesh1').feature('cpe1').selection('destination').set([21 23 25 27 29 31 33 35 37 39 41]);
model.mesh('mesh1').create('map2', 'Map');
model.mesh('mesh1').feature('map2').set('smoothcontrol', false);
model.mesh('mesh1').feature('map2').set('adjustedgdistr', true);
model.mesh('mesh1').feature('map2').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map2').feature('dis1').selection.set([40]);
model.mesh('mesh1').feature('map2').feature('dis1').set('numelem', 8);
model.mesh('mesh1').feature('map2').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map2').feature('dis2').selection.set([5 38]);
model.mesh('mesh1').feature('map2').feature('dis2').set('numelem', 1);
model.mesh('mesh1').feature('map2').create('dis3', 'Distribution');
model.mesh('mesh1').feature('map2').feature('dis3').selection.set([7 9 11 13 15 17 19 67]);
model.mesh('mesh1').feature('map2').create('dis4', 'Distribution');
model.mesh('mesh1').feature('map2').feature('dis4').selection.set([3 22 50 70]);
model.mesh('mesh1').feature('map2').feature('dis4').set('type', 'predefined');
model.mesh('mesh1').feature('map2').feature('dis4').set('elemcount', 16);
model.mesh('mesh1').feature('map2').feature('dis4').set('elemratio', 2);
model.mesh('mesh1').feature('map2').feature('dis4').set('growthrate', 'exponential');
model.mesh('mesh1').feature('map2').feature('dis4').set('reverse', true);
model.mesh('mesh1').feature('map2').create('dis5', 'Distribution');
model.mesh('mesh1').feature('map2').feature('dis5').selection.set([1]);
model.mesh('mesh1').feature('map2').feature('dis5').set('numelem', 8);
model.mesh('mesh1').run;

model.study('std1').label('Study 1 - Modes');
model.study('std1').setGenPlots(false);
model.study('std1').feature('eig').set('neigsactive', true);
model.study('std1').feature('eig').set('neigs', 4);
model.study('std1').feature('eig').set('eigunit', 'MHz');
model.study('std1').feature('eig').set('shift', '870');
model.study('std1').feature('eig').set('eigwhich', 'lr');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'eig');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'eig');
model.sol('sol1').create('e1', 'Eigenvalue');
model.sol('sol1').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol1').feature('e1').set('eigvfunscaleparam', '1.0E-9');
model.sol('sol1').feature('e1').set('control', 'eig');
model.sol('sol1').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').run;
model.result('pg1').label('Mode Shape (solid)');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('colortable', 'AuroraBorealis');
model.result('pg1').feature('surf1').create('def1', 'Deform');
model.result('pg1').run;
model.result('pg1').feature('surf1').feature('def1').set('scaleactive', true);
model.result('pg1').feature('surf1').feature('def1').set('scale', '2E12');
model.result('pg1').run;
model.result('pg1').run;

model.study.create('std2');
model.study('std2').create('freq', 'Frequency');
model.study('std2').feature('freq').setSolveFor('/physics/solid', true);
model.study('std2').feature('freq').setSolveFor('/physics/es', true);
model.study('std2').feature('freq').setSolveFor('/multiphysics/pze1', true);
model.study('std2').feature('freq').set('punit', 'MHz');
model.study('std2').feature('freq').set('plist', 'range(500,50,800) range(810,10,850) range(860,2,870) range(870.1,0.05,870.9) range(871,1,910) 920 930 940 range(950,50,1200)');
model.study('std2').label('Study 2 - Frequency Response');
model.study('std2').setGenPlots(false);

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'freq');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'freq');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('p1', 'Parametric');
model.sol('sol2').feature('s1').feature.remove('pDef');
model.sol('sol2').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol2').feature('s1').feature('p1').set('plistarr', {'range(500,50,800) range(810,10,850) range(860,2,870) range(870.1,0.05,870.9) range(871,1,910) 920 930 940 range(950,50,1200)'});
model.sol('sol2').feature('s1').feature('p1').set('punit', {'MHz'});
model.sol('sol2').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol2').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol2').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol2').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol2').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol2').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol2').feature('s1').feature('p1').set('probes', {});
model.sol('sol2').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol2').feature('s1').set('linpmethod', 'sol');
model.sol('sol2').feature('s1').set('linpsol', 'zero');
model.sol('sol2').feature('s1').set('control', 'freq');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('seDef', 'Segregated');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').feature('s1').feature.remove('seDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').run;
model.result('pg2').label('Electric Potential (es)');
model.result('pg2').set('data', 'dset2');
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', 'V');
model.result('pg2').feature('surf1').set('descractive', true);
model.result('pg2').feature('surf1').set('colortable', 'Dipole');
model.result('pg2').run;
model.result('pg2').setIndex('looplevel', 28, 0);
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('Log10|Z| - Fig.4');
model.result('pg3').set('data', 'dset2');
model.result('pg3').set('titletype', 'label');
model.result('pg3').set('showlegends', false);
model.result('pg3').create('glob1', 'Global');
model.result('pg3').feature('glob1').set('markerpos', 'datapoints');
model.result('pg3').feature('glob1').set('linewidth', 'preference');
model.result('pg3').feature('glob1').setIndex('expr', 'log10(abs(1/es.Y11)/1[ohm])', 0);
model.result('pg3').feature('glob1').setIndex('descr', 'log10|Z| (Ohms)', 0);
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').run;
model.result('pg4').label('Displacement profile - Fig.5(a)');
model.result('pg4').set('data', 'dset2');
model.result('pg4').setIndex('looplevel', 28, 0);
model.result('pg4').set('titletype', 'label');
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', 'sqrt(abs(u)^2+abs(v)^2)');
model.result('pg4').feature('surf1').set('rangecoloractive', true);
model.result('pg4').feature('surf1').set('rangecolormax', 0.02);
model.result('pg4').run;
model.result.dataset.create('cln1', 'CutLine2D');
model.result.dataset('cln1').set('data', 'dset2');
model.result.dataset('cln1').setIndex('genpoints', '4[um]', 0, 1);
model.result.dataset('cln1').setIndex('genpoints', '-20[um]', 1, 1);
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').label('Y Displacement - Fig.5(b)');
model.result('pg5').set('data', 'cln1');
model.result('pg5').setIndex('looplevelinput', 'manual', 0);
model.result('pg5').setIndex('looplevel', [28], 0);
model.result('pg5').set('titletype', 'label');
model.result('pg5').set('axislimits', true);
model.result('pg5').set('xmin', -0.02);
model.result('pg5').set('xmax', 0.02);
model.result('pg5').set('ymin', -20.5);
model.result('pg5').set('ymax', 4.5);
model.result('pg5').create('lngr1', 'LineGraph');
model.result('pg5').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg5').feature('lngr1').set('linewidth', 'preference');
model.result('pg5').feature('lngr1').set('expr', 'y');
model.result('pg5').feature('lngr1').set('xdata', 'expr');
model.result('pg5').feature('lngr1').set('xdataexpr', '-imag(v)');
model.result('pg5').feature('lngr1').set('xdatadescractive', true);
model.result('pg5').feature('lngr1').set('xdatadescr', 'Displacement, Y component');
model.result('pg5').feature('lngr1').set('linecolor', 'red');
model.result('pg5').feature('lngr1').set('linewidth', 2);
model.result('pg5').run;
model.result('pg5').create('lnsg1', 'LineSegments');
model.result('pg5').feature('lnsg1').set('markerpos', 'datapoints');
model.result('pg5').feature('lnsg1').set('linewidth', 'preference');
model.result('pg5').feature('lnsg1').setIndex('xexpr', -0.02, 0);
model.result('pg5').feature('lnsg1').setIndex('xexpr', 0.02, 1);
model.result('pg5').feature('lnsg1').setIndex('xexpr', 0.02, 2);
model.result('pg5').feature('lnsg1').setIndex('xexpr', -0.02, 3);
model.result('pg5').feature('lnsg1').setIndex('xexpr', -0.02, 4);
model.result('pg5').feature('lnsg1').setIndex('xexpr', 0.02, 5);
model.result('pg5').feature('lnsg1').setIndex('xexpr', 0.02, 6);
model.result('pg5').feature('lnsg1').setIndex('xexpr', -0.02, 7);
model.result('pg5').feature('lnsg1').setIndex('xexpr', -0.02, 8);
model.result('pg5').feature('lnsg1').setIndex('xexpr', 0.02, 9);
model.result('pg5').feature('lnsg1').setIndex('xexpr', 0.02, 10);
model.result('pg5').feature('lnsg1').setIndex('xexpr', -0.02, 11);
model.result('pg5').feature('lnsg1').setIndex('xexpr', -0.02, 12);
model.result('pg5').feature('lnsg1').setIndex('xexpr', 0.02, 13);
model.result('pg5').feature('lnsg1').setIndex('xexpr', 0.02, 14);
model.result('pg5').feature('lnsg1').setIndex('xexpr', -0.02, 15);
model.result('pg5').feature('lnsg1').setIndex('xexpr', -0.02, 16);
model.result('pg5').feature('lnsg1').setIndex('xexpr', 0.02, 17);
model.result('pg5').feature('lnsg1').setIndex('xexpr', 0.02, 18);
model.result('pg5').feature('lnsg1').setIndex('xexpr', -0.02, 19);
model.result('pg5').feature('lnsg1').setIndex('xexpr', -0.02, 20);
model.result('pg5').feature('lnsg1').setIndex('xexpr', 0.02, 21);
model.result('pg5').feature('lnsg1').setIndex('yexpr', '2*t_e+t_pe', 0);
model.result('pg5').feature('lnsg1').setIndex('yexpr', '2*t_e+t_pe', 1);
model.result('pg5').feature('lnsg1').setIndex('yexpr', 't_e+t_pe', 2);
model.result('pg5').feature('lnsg1').setIndex('yexpr', 't_e+t_pe', 3);
model.result('pg5').feature('lnsg1').setIndex('yexpr', 't_e', 4);
model.result('pg5').feature('lnsg1').setIndex('yexpr', 't_e', 5);
model.result('pg5').feature('lnsg1').setIndex('yexpr', 0, 6);
model.result('pg5').feature('lnsg1').setIndex('yexpr', 0, 7);
model.result('pg5').feature('lnsg1').setIndex('yexpr', '-t_lil', 8);
model.result('pg5').feature('lnsg1').setIndex('yexpr', '-t_lil', 9);
model.result('pg5').feature('lnsg1').setIndex('yexpr', '-t_lil-t_hil', 10);
model.result('pg5').feature('lnsg1').setIndex('yexpr', '-t_lil-t_hil', 11);
model.result('pg5').feature('lnsg1').setIndex('yexpr', '-2*t_lil-t_hil', 12);
model.result('pg5').feature('lnsg1').setIndex('yexpr', '-2*t_lil-t_hil', 13);
model.result('pg5').feature('lnsg1').setIndex('yexpr', '-2*t_lil-2*t_hil', 14);
model.result('pg5').feature('lnsg1').setIndex('yexpr', '-2*t_lil-2*t_hil', 15);
model.result('pg5').feature('lnsg1').setIndex('yexpr', '-3*t_lil-2*t_hil', 16);
model.result('pg5').feature('lnsg1').setIndex('yexpr', '-3*t_lil-2*t_hil', 17);
model.result('pg5').feature('lnsg1').setIndex('yexpr', '-3*t_lil-3*t_hil', 18);
model.result('pg5').feature('lnsg1').setIndex('yexpr', '-3*t_lil-3*t_hil', 19);
model.result('pg5').feature('lnsg1').setIndex('yexpr', '-3*t_lil-3*t_hil-t_i', 20);
model.result('pg5').feature('lnsg1').setIndex('yexpr', '-3*t_lil-3*t_hil-t_i', 21);
model.result('pg5').feature('lnsg1').set('linecolor', 'black');
model.result('pg5').run;
model.result('pg5').create('tlan1', 'TableAnnotation');
model.result('pg5').feature('tlan1').set('source', 'localtable');
model.result('pg5').feature('tlan1').setIndex('localtablematrix', -0.02, 0, 0);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', 2, 0, 1);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', 'ZnO', 0, 2);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', -0.02, 1, 0);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', -0.85, 1, 1);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', 'SiO2', 1, 2);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', -0.02, 2, 0);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', -2.6, 2, 1);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', 'Mo', 2, 2);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', -0.02, 3, 0);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', -4.3, 3, 1);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', 'SiO2', 3, 2);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', -0.02, 4, 0);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', -6, 4, 1);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', 'Mo', 4, 2);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', -0.02, 5, 0);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', -7.8, 5, 1);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', 'SiO2', 5, 2);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', -0.02, 6, 0);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', -9.5, 6, 1);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', 'Mo', 6, 2);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', -0.02, 7, 0);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', -14, 7, 1);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', 'Substrate', 7, 2);
model.result('pg5').feature('tlan1').set('showpoint', false);
model.result('pg5').feature('tlan1').set('anchorpoint', 'middleleft');
model.result('pg5').run;

model.title('Solidly Mounted Resonator 2D');

model.description(['A solidly mounted resonator (SMR) is a piezoelectric MEMS resonator formed on top of an acoustic mirror stack deposited on a thick substrate. This tutorial shows how to simulate an SMR in 2D. In this example, the eigenmodes were computed and the frequency response from 500 to 1200' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'MHz was analyzed. The computed impedance curve and displacement profile agree reasonably well with the simulation results found in the literature.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('solidly_mounted_resonator_2d.mph');

model.modelNode.label('Components');

out = model;
