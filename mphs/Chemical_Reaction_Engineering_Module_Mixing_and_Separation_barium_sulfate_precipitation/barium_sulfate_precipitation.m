function out = model
%
% barium_sulfate_precipitation.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Chemical_Reaction_Engineering_Module/Mixing_and_Separation');

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('u_in', 'u_out/0.5', 'Average inlet velocity');
model.param.set('cBa_2p_0', '0.5[kmol/m^3]', 'Inlet concentration Ba');
model.param.set('cHSO4_1m_0', '0.31879[kmol/m^3]', 'Inlet concentration HSO4');
model.param.set('cCl_1m_0', '2*cBa_2p_0', 'Inlet concentration Cl');
model.param.set('cH_1p_0', '0.34121[kmol/m^3]', 'Inlet concentration H');
model.param.set('cSO4_2m_0', '0.01121[kmol/m^3]', 'Inlet concentration SO4');
model.param.set('K_dis', '1.2e-2 [kmol/m^3]', 'Dissociation equilibrium constant');
model.param.set('K_ip', '5.4e-3 [kmol/m^3]', 'Ion pair equilibrium constant');
model.param.set('M_BaSO4', '233.38[g/mol]', 'Molar mass BaSO4');
model.param.set('rho_BaSO4', '4.48[g/cm^3]', 'Density BaSO4');
model.param.set('V_m', '8.61e-29[m^3]', 'Molecular volume BaSO4');
model.param.set('gamma_CL', '118.1[mJ/m^2]', 'Interfacial energy');
model.param.set('M_SO4_2m', '96.06[g/mol]', 'Molar mass SO4');
model.param.set('M_Ba_2p', '137.32[g/mol]', 'Molar mass Ba');
model.param.set('D', '1[mm]', 'Mixing tube diameter');
model.param.set('Lc', '10[mm]', 'Channel length');
model.param.set('Re', '255', 'Reynolds number');
model.param.set('mu_sol', '8.866e-4[Pa*s]', 'Solvent viscosity');
model.param.set('rho_sol', '996.9[kg/m^3]', 'Solvent density');
model.param.set('M_sol', '0.018[kg/mol]', 'Solvent molar mass');
model.param.set('u_out', 'Re*mu_sol/rho_sol/D', 'Mean outlet velocity');
model.param.set('T', '25[degC]', 'Temperature');
model.param.set('k_a', 'pi', 'Surface shape factor');
model.param.set('Sh', '2', 'Sherwood number');
model.param.set('D_AB', '9.46e-10[m^2/s]', 'Apparent diffusion');
model.param.set('K_sp', '9.82e-11[mol^2/l^2]', 'Solubility product');
model.param.set('D_particles', 'nu_sol/Schmidt', 'Particle diffusion coefficient');
model.param.set('Schmidt', '1', 'Schmidt number');
model.param.set('D_species', 'nu_sol/Schmidt', 'Species diffusion coefficient');
model.param.set('nu_sol', 'mu_sol/rho_sol', 'Kinematic viscosity of fluid');
model.param.set('c_sol', 'rho_sol/M_sol', 'Pure solvent concentration');
model.param.create('par2');
model.param('par2').label(['Debye H' native2unicode(hex2dec({'00' 'fc'}), 'unicode') 'ckel constants']);

% To import content from file, use:
% model.param('par2').loadFile('FILENAME');
model.param('par2').set('A_gamma', '0.511', ['Debye-H' native2unicode(hex2dec({'00' 'fc'}), 'unicode') 'ckel constant']);
model.param('par2').set('Delta_Ba_2p', '0.098', 'Individual ion value Ba');
model.param('par2').set('Delta_SO4_2m', '-0.4', 'Individual ion value SO4');
model.param('par2').set('Delta_H_1p', '0.103', 'Individual ion value H');
model.param('par2').set('Delta_Cl_1m', '-0.067', 'Individual ion value Cl');
model.param('par2').set('B_Ba_2p', '0.0022[kg/mol]', 'Individual ion value Ba');
model.param('par2').set('B_SO4_2m', '0[kg/mol]', 'Individual ion value SO4');
model.param('par2').set('B_H_1p', '0.0875[kg/mol]', 'Individual ion value H');
model.param('par2').set('B_Cl_1m', '0.0643[kg/mol]', 'Individual ion value Cl');
model.param('par2').set('B_HSO4_1m', '-0.013[kg/mol]', 'Individual ion value HSO4');
model.param('par2').set('Z_Ba_2p', '2', 'Ion charge Ba, absolute value');
model.param('par2').set('Z_SO4_2m', '2', 'Ion charge SO4, absolute value');
model.param('par2').set('Z_H_1p', '1', 'Ion charge H, absolute value');
model.param('par2').set('Z_Cl_1m', '1', 'Ion charge Cl, absolute value');
model.param('par2').set('Z_HSO4_1m', '1', 'Ion charge HSO4, absolute value');

model.func.create('an1', 'Analytic');
model.func('an1').label('Ion interaction');
model.func('an1').set('funcname', 'B_dot');
model.func('an1').set('expr', '((0.06+0.6*B)*(Z1*Z2))/((1+I*1.5/(Z1*Z2))^2)+B');
model.func('an1').set('args', 'B, Z1, Z2, I');
model.func('an1').set('fununit', 'kg/mol');
model.func('an1').setIndex('argunit', 'kg/mol', 0);
model.func('an1').setIndex('argunit', 'mol/kg', 3);

model.modelNode.create('comp1', true);

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').label(['Activity coefficient (Debye H' native2unicode(hex2dec({'00' 'fc'}), 'unicode') 'ckel model)']);

% To import content from file, use:
% model.variable('var1').loadFile('FILENAME');
model.variable('var1').set('B_Ba_2p_SO4_2m', 'B_Ba_2p+B_SO4_2m+Delta_Ba_2p*Delta_SO4_2m', 'Ion interaction constant');
model.variable('var1').set('B_Ba_2p_Cl_1m', 'B_Ba_2p+B_Cl_1m+Delta_Ba_2p*Delta_Cl_1m', 'Ion interaction constant');
model.variable('var1').set('B_Ba_2p_HSO4_1m', 'B_Ba_2p+B_HSO4_1m', 'Ion interaction constant');
model.variable('var1').set('B_SO4_2m_H_1p', 'B_H_1p+B_SO4_2m+Delta_H_1p*Delta_SO4_2m', 'Ion interaction constant');
model.variable('var1').set('B_dot_Ba_2p_SO4_2m', 'B_dot(B_Ba_2p_SO4_2m, Z_Ba_2p, Z_SO4_2m, I)', 'Ion interaction variable');
model.variable('var1').set('B_dot_Ba_2p_Cl_1m', 'B_dot(B_Ba_2p_Cl_1m, Z_Ba_2p, Z_Cl_1m, I)', 'Ion interaction variable');
model.variable('var1').set('B_dot_Ba_2p_HSO4_1m', 'B_dot(B_Ba_2p_HSO4_1m, Z_Ba_2p, Z_HSO4_1m, I)', 'Ion interaction variable');
model.variable('var1').set('B_dot_SO4_2m_H_1p', 'B_dot(B_SO4_2m_H_1p, Z_H_1p, Z_SO4_2m, I)', 'Ion interaction variable');
model.variable('var1').set('F_Ba_2p', '(B_dot_Ba_2p_SO4_2m*((Z_Ba_2p+Z_SO4_2m)/2)^2*m_SO4_2m+B_dot_Ba_2p_Cl_1m*((Z_Ba_2p+Z_Cl_1m)/2)^2*m_Cl_1m+B_dot_Ba_2p_HSO4_1m*((Z_Ba_2p+Z_HSO4_1m)/2)^2*m_HSO4_1m)', 'Interaction term of barium ions');
model.variable('var1').set('F_SO4_2m', '(B_dot_SO4_2m_H_1p*((Z_H_1p+Z_SO4_2m)/2)^2*m_H_1p+B_dot_Ba_2p_SO4_2m*((Z_Ba_2p+Z_SO4_2m)/2)^2*m_Ba_2p)', 'Interaction term of sulfate ions');
model.variable('var1').set('gamma', '10^(-A_gamma*(Z_Ba_2p*Z_SO4_2m)*sqrt(I*1[kg/mol])/(1+sqrt(I*1[kg/mol]))+(Z_Ba_2p*Z_SO4_2m)/(Z_Ba_2p+Z_SO4_2m)*(F_Ba_2p/Z_Ba_2p+F_SO4_2m/Z_SO4_2m))', 'Mean activity coefficient');
model.variable('var1').set('I', 'max(1/2*(m_Ba_2p*Z_Ba_2p^2+m_SO4_2m*Z_SO4_2m^2+m_H_1p*Z_H_1p^2+m_Cl_1m*Z_Cl_1m^2+m_HSO4_1m*Z_HSO4_1m^2),eps)', 'Ionic strength');
model.variable('var1').set('m_Ba_2p', 're.c_Ba_2p/rho_sol', 'Molality Ba');
model.variable('var1').set('m_SO4_2m', 're.c_SO4_2m/rho_sol', 'Molality SO4');
model.variable('var1').set('m_H_1p', 're.c_H_1p/rho_sol', 'Molality H');
model.variable('var1').set('m_Cl_1m', 're.c_Cl_1m/rho_sol', 'Molality Cl');
model.variable('var1').set('m_HSO4_1m', 're.c_HSO4_1m/rho_sol', 'Molality HSO4');
model.variable.create('var2');
model.variable('var2').model('comp1');
model.variable('var2').label('Nucleation rate');

% To import content from file, use:
% model.variable('var2').loadFile('FILENAME');
model.variable('var2').set('BN', 'Bpre1*Bpre2*exp(BexpFac)', 'Nucleation rate');
model.variable('var2').set('Bpre1', '1.5*D_AB*(sqrt(K_sp)*S*N_A_const)^(7/3)', 'B pre-exponential factor 1');
model.variable('var2').set('Bpre2', 'sqrt(gamma_CL/k_B_const/T)*V_m', 'B pre-exponential factor 2');
model.variable('var2').set('BexpFac', '(-16*pi/3)*(gamma_CL/k_B_const/T)^3*V_m^2/(nu*max(eps,log(S)))^2', 'B exponent');
model.variable('var2').set('nu', '2', 'Dissociation number');
model.variable('var2').set('Lc_stab', '4*gamma_CL*V_m/(nu*k_B_const*T*log(S))', 'Diameter of smallest thermodynamically stable nucleus');
model.variable('var2').set('B_0', 'BN/dL1', 'Nucleation rate as source of number density');

model.physics.create('re', 'ReactionEng');
model.physics('re').model('comp1');
model.physics('re').prop('energybalance').set('T', 'T');
model.physics('re').create('rch1', 'ReactionChem', -1);
model.physics('re').feature('rch1').set('formula', 'HSO4(-)=H(+)+SO4(2-)');
model.physics('re').feature('rch1').set('Keq0', 'K_dis');
model.physics('re').create('rch2', 'ReactionChem', -1);
model.physics('re').feature('rch2').set('formula', 'BaSO4 = Ba(++) + SO4(2-)');
model.physics('re').feature('rch2').set('Keq0', 'K_ip');
model.physics('re').create('spec1', 'SpeciesChem', -1);
model.physics('re').feature('spec1').set('specName', 'Cl(-)');
model.physics('re').feature('SO4_2m').set('SpeciesrateSelection', 'UserDefined');
model.physics('re').feature('SO4_2m').set('Speciesrate', 're.r_1+re.r_2-r_c_sum');
model.physics('re').feature('Ba_2p').set('SpeciesrateSelection', 'UserDefined');
model.physics('re').feature('Ba_2p').set('Speciesrate', 're.r_2-r_c_sum');
model.physics('re').feature('inits1').setIndex('initialValue', 'cBa_2p_0', 0, 0);
model.physics('re').feature('inits1').setIndex('initialValue', 'cCl_1m_0', 2, 0);
model.physics('re').feature('inits1').setIndex('initialValue', 'cH_1p_0', 3, 0);
model.physics('re').feature('inits1').setIndex('initialValue', 'cHSO4_1m_0', 4, 0);
model.physics('re').feature('inits1').setIndex('initialValue', 'cSO4_2m_0', 5, 0);

model.modelNode.create('comp2', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp2');

model.mesh.create('mesh1', 'geom1');

model.variable.create('var3');
model.variable('var3').model('comp2');

model.geom('geom1').run;

model.variable('var3').label(['Activity coefficient (Debye H' native2unicode(hex2dec({'00' 'fc'}), 'unicode') 'ckel model)']);

% To import content from file, use:
% model.variable('var3').loadFile('FILENAME');
model.variable('var3').set('B_Ba_2p_SO4_2m', 'B_Ba_2p+B_SO4_2m+Delta_Ba_2p*Delta_SO4_2m', 'Ion interaction constant');
model.variable('var3').set('B_Ba_2p_Cl_1m', 'B_Ba_2p+B_Cl_1m+Delta_Ba_2p*Delta_Cl_1m', 'Ion interaction constant');
model.variable('var3').set('B_Ba_2p_HSO4_1m', 'B_Ba_2p+B_HSO4_1m', 'Ion interaction constant');
model.variable('var3').set('B_SO4_2m_H_1p', 'B_H_1p+B_SO4_2m+Delta_H_1p*Delta_SO4_2m', 'Ion interaction constant');
model.variable('var3').set('B_dot_Ba_2p_SO4_2m', 'B_dot(B_Ba_2p_SO4_2m, Z_Ba_2p, Z_SO4_2m, I)', 'Ion interaction variable');
model.variable('var3').set('B_dot_Ba_2p_Cl_1m', 'B_dot(B_Ba_2p_Cl_1m, Z_Ba_2p, Z_Cl_1m, I)', 'Ion interaction variable');
model.variable('var3').set('B_dot_Ba_2p_HSO4_1m', 'B_dot(B_Ba_2p_HSO4_1m, Z_Ba_2p, Z_HSO4_1m, I)', 'Ion interaction variable');
model.variable('var3').set('B_dot_SO4_2m_H_1p', 'B_dot(B_SO4_2m_H_1p, Z_H_1p, Z_SO4_2m, I)', 'Ion interaction variable');
model.variable('var3').set('F_Ba_2p', '(B_dot_Ba_2p_SO4_2m*((Z_Ba_2p+Z_SO4_2m)/2)^2*m_SO4_2m+B_dot_Ba_2p_Cl_1m*((Z_Ba_2p+Z_Cl_1m)/2)^2*m_Cl_1m+B_dot_Ba_2p_HSO4_1m*((Z_Ba_2p+Z_HSO4_1m)/2)^2*m_HSO4_1m)', 'Interaction term of barium ions');
model.variable('var3').set('F_SO4_2m', '(B_dot_SO4_2m_H_1p*((Z_H_1p+Z_SO4_2m)/2)^2*m_H_1p+B_dot_Ba_2p_SO4_2m*((Z_Ba_2p+Z_SO4_2m)/2)^2*m_Ba_2p)', 'Interaction term of sulfate ions');
model.variable('var3').set('gamma', '10^(-A_gamma*(Z_Ba_2p*Z_SO4_2m)*sqrt(I*1[kg/mol])/(1+sqrt(I*1[kg/mol]))+(Z_Ba_2p*Z_SO4_2m)/(Z_Ba_2p+Z_SO4_2m)*(F_Ba_2p/Z_Ba_2p+F_SO4_2m/Z_SO4_2m))', 'Mean activity coefficient');
model.variable('var3').set('I', 'max(1/2*(m_Ba_2p*Z_Ba_2p^2+m_SO4_2m*Z_SO4_2m^2+m_H_1p*Z_H_1p^2+m_Cl_1m*Z_Cl_1m^2+m_HSO4_1m*Z_HSO4_1m^2),eps)', 'Ionic strength');
model.variable('var3').set('m_Ba_2p', 'cBa_2p/rho_sol', 'Molality Ba');
model.variable('var3').set('m_SO4_2m', 'cSO4_2m/rho_sol', 'Molality SO4');
model.variable('var3').set('m_H_1p', 'cH_1p/rho_sol', 'Molality H');
model.variable('var3').set('m_Cl_1m', 'cCl_1m/rho_sol', 'Molality Cl');
model.variable('var3').set('m_HSO4_1m', 'cHSO4_1m/rho_sol', 'Molality HSO4');
model.variable.create('var4');
model.variable('var4').model('comp2');
model.variable('var4').label('Nucleation rate');

% To import content from file, use:
% model.variable('var4').loadFile('FILENAME');
model.variable('var4').set('BN', 'Bpre1*Bpre2*exp(BexpFac)', 'Nucleation rate');
model.variable('var4').set('Bpre1', '1.5*D_AB*(sqrt(K_sp)*S*N_A_const)^(7/3)', 'B pre-exponential factor 1');
model.variable('var4').set('Bpre2', 'sqrt(gamma_CL/k_B_const/T)*V_m', 'B pre-exponential factor 2');
model.variable('var4').set('BexpFac', '(-16*pi/3)*(gamma_CL/k_B_const/T)^3*V_m^2/(nu*max(eps,log(S)))^2', 'B exponent');
model.variable('var4').set('nu', '2', 'Dissociation number');
model.variable('var4').set('Lc_stab', '4*gamma_CL*V_m/(nu*k_B_const*T*log(S))', 'Diameter of smallest thermodynamically stable nucleus');
model.variable('var4').set('B_0', 'BN/dL1', 'Nucleation rate as source of number density');

model.geom('geom1').create('cyl1', 'Cylinder');
model.geom('geom1').feature('cyl1').set('r', 'D/2');
model.geom('geom1').feature('cyl1').set('h', 'Lc');
model.geom('geom1').run('cyl1');
model.geom('geom1').create('cyl2', 'Cylinder');
model.geom('geom1').feature('cyl2').set('r', 'D/4');
model.geom('geom1').feature('cyl2').set('h', '2*D');
model.geom('geom1').feature('cyl2').set('pos', {'-D' '0' 'Lc-D/4'});
model.geom('geom1').feature('cyl2').set('axistype', 'x');
model.geom('geom1').run('cyl2');
model.geom('geom1').create('wp1', 'WorkPlane');
model.geom('geom1').feature('wp1').set('unite', true);
model.geom('geom1').feature('wp1').set('quickz', '9[mm]');
model.geom('geom1').feature('wp1').geom.create('c1', 'Circle');
model.geom('geom1').feature('wp1').geom.feature('c1').set('r', 'D/2');
model.geom('geom1').run('wp1');
model.geom('geom1').create('wp2', 'WorkPlane');
model.geom('geom1').feature('wp2').set('unite', true);
model.geom('geom1').feature('wp2').set('quickplane', 'yz');
model.geom('geom1').feature('wp2').geom.create('r1', 'Rectangle');
model.geom('geom1').feature('wp2').geom.feature('r1').set('size', {'D' 'Lc'});
model.geom('geom1').feature('wp2').geom.feature('r1').set('pos', {'-D/2' '0'});
model.geom('geom1').run('fin');
model.geom('geom1').create('igf1', 'IgnoreFaces');
model.geom('geom1').feature('igf1').selection('input').set('fin', [12 13 14 15 16 17 28 29 30 31 35 38]);
model.geom('geom1').run('igf1');

model.material.create('mat1', 'Common', 'comp2');
model.material('mat1').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('rho', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('cs', 'Interpolation');
model.material('mat1').propertyGroup('def').func.create('an1', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an2', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an3', 'Analytic');
model.material('mat1').label('Water, liquid');
model.material('mat1').set('family', 'water');
model.material('mat1').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('eta').set('pieces', {'273.15' '413.15' '1.3799566804-0.021224019151*T^1+1.3604562827E-4*T^2-4.6454090319E-7*T^3+8.9042735735E-10*T^4-9.0790692686E-13*T^5+3.8457331488E-16*T^6'; '413.15' '553.75' '0.00401235783-2.10746715E-5*T^1+3.85772275E-8*T^2-2.39730284E-11*T^3'});
model.material('mat1').propertyGroup('def').func('eta').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('Cp').set('pieces', {'273.15' '553.75' '12010.1471-80.4072879*T^1+0.309866854*T^2-5.38186884E-4*T^3+3.62536437E-7*T^4'});
model.material('mat1').propertyGroup('def').func('Cp').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('def').func('rho').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('rho').set('smooth', 'contd1');
model.material('mat1').propertyGroup('def').func('rho').set('pieces', {'273.15' '293.15' '0.000063092789034*T^3-0.060367639882855*T^2+18.9229382407066*T-950.704055329848'; '293.15' '373.15' '0.000010335053319*T^3-0.013395065634452*T^2+4.969288832655160*T+432.257114008512'});
model.material('mat1').propertyGroup('def').func('rho').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.material('mat1').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('k').set('pieces', {'273.15' '553.75' '-0.869083936+0.00894880345*T^1-1.58366345E-5*T^2+7.97543259E-9*T^3'});
model.material('mat1').propertyGroup('def').func('k').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.material('mat1').propertyGroup('def').func('cs').set('table', {'273' '1403';  ...
'278' '1427';  ...
'283' '1447';  ...
'293' '1481';  ...
'303' '1507';  ...
'313' '1526';  ...
'323' '1541';  ...
'333' '1552';  ...
'343' '1555';  ...
'353' '1555';  ...
'363' '1550';  ...
'373' '1543'});
model.material('mat1').propertyGroup('def').func('cs').set('interp', 'piecewisecubic');
model.material('mat1').propertyGroup('def').func('cs').set('fununit', {'m/s'});
model.material('mat1').propertyGroup('def').func('cs').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.material('mat1').propertyGroup('def').func('an1').set('expr', '-1/rho(T)*d(rho(T),T)');
model.material('mat1').propertyGroup('def').func('an1').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('an1').set('fununit', '1/K');
model.material('mat1').propertyGroup('def').func('an1').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an1').set('plotfixedvalue', {'273.15'});
model.material('mat1').propertyGroup('def').func('an1').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an2').set('funcname', 'gamma_w');
model.material('mat1').propertyGroup('def').func('an2').set('expr', '1+(T/Cp(T))*(alpha_p(T)*cs(T))^2');
model.material('mat1').propertyGroup('def').func('an2').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('an2').set('fununit', '1');
model.material('mat1').propertyGroup('def').func('an2').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an2').set('plotfixedvalue', {'273.15'});
model.material('mat1').propertyGroup('def').func('an2').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an3').set('funcname', 'muB');
model.material('mat1').propertyGroup('def').func('an3').set('expr', '2.79*eta(T)');
model.material('mat1').propertyGroup('def').func('an3').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('an3').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('an3').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an3').set('plotfixedvalue', {'273.15'});
model.material('mat1').propertyGroup('def').func('an3').set('plotargs', {'T' '273.15' '553.75'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.material('mat1').propertyGroup('def').set('bulkviscosity', '');
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(T)' '0' '0' '0' 'alpha_p(T)' '0' '0' '0' 'alpha_p(T)'});
model.material('mat1').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.material('mat1').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.material('mat1').propertyGroup('def').set('ratioofspecificheat', 'gamma_w(T)');
model.material('mat1').propertyGroup('def').set('electricconductivity', {'5.5e-6[S/m]' '0' '0' '0' '5.5e-6[S/m]' '0' '0' '0' '5.5e-6[S/m]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.material('mat1').propertyGroup('def').set('density', 'rho(T)');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.material('mat1').propertyGroup('def').set('soundspeed', 'cs(T)');
model.material('mat1').propertyGroup('def').addInput('temperature');

model.physics.create('chem', 'Chemistry', 'geom1');
model.physics('chem').model('comp2');
model.physics('chem').create('rch1', 'ReactionChem', 3);
model.physics('chem').feature('rch1').set('formula', 'HSO4(-)<=>H(+)+SO4(2-)');
model.physics('chem').feature('rch1').set('kf', '1e5');
model.physics('chem').feature('rch1').set('setKeq0', true);
model.physics('chem').feature('rch1').set('EquilibriumConstantSettings', 'UserDefined');
model.physics('chem').feature('rch1').set('Keq0', 'K_dis');
model.physics('chem').create('rch2', 'ReactionChem', 3);
model.physics('chem').feature('rch2').set('formula', 'Ba(++)+SO4(2-)<=>BaSO4');
model.physics('chem').feature('rch2').set('kf', '1e5');
model.physics('chem').feature('rch2').set('setKeq0', true);
model.physics('chem').feature('rch2').set('EquilibriumConstantSettings', 'UserDefined');
model.physics('chem').feature('rch2').set('Keq0', '1/K_ip');
model.physics('chem').create('spec1', 'SpeciesChem', 3);
model.physics('chem').feature('spec1').set('specName', 'Cl(-)');
model.physics('chem').create('spec1', 'SpeciesChem', 3);
model.physics('chem').feature('spec1').set('specName', 'H2O');
model.physics('chem').feature('H2O').set('sType', 'solvent');
model.physics('chem').feature('SO4_2m').set('SpeciesrateSelection', 'UserDefined');
model.physics('chem').feature('SO4_2m').set('Speciesrate', 'chem.r_1-chem.r_2-r_c_sum');
model.physics('chem').feature('Ba_2p').set('SpeciesrateSelection', 'UserDefined');
model.physics('chem').feature('Ba_2p').set('Speciesrate', '-chem.r_2-r_c_sum');
model.physics('chem').prop('mixture').set('mixture', 'liquid');
model.physics.create('spf', 'LaminarFlow', 'geom1');
model.physics('spf').model('comp2');
model.physics('spf').create('inl1', 'InletBoundary', 2);
model.physics('spf').feature('inl1').set('BoundaryCondition', 'FullyDevelopedFlow');
model.physics('spf').feature('inl1').set('Uavfdf', 'u_in');
model.physics('spf').feature('inl1').selection.set([1]);
model.physics('spf').create('inl2', 'InletBoundary', 2);
model.physics('spf').feature('inl2').set('BoundaryCondition', 'FullyDevelopedFlow');
model.physics('spf').feature('inl2').set('Uavfdf', 'u_in');
model.physics('spf').feature('inl2').selection.set([26]);
model.physics('spf').create('out1', 'OutletBoundary', 2);
model.physics('spf').feature('out1').selection.set([8 15]);
model.physics('spf').prop('PhysicalModelProperty').set('Tref', 'T');

model.common('cminpt').set('modified', {'temperature' 'T'});

model.physics.create('tds', 'DilutedSpecies', 'geom1', {'c'});
model.physics('tds').field('concentration').component({'c' 'c2' 'c3' 'c4' 'c5' 'c6'});
model.physics('tds').field('concentration').component(1, 'cBa_2p');
model.physics('tds').field('concentration').component(2, 'cSO4_2m');
model.physics('tds').field('concentration').component(3, 'cHSO4_1m');
model.physics('tds').field('concentration').component(4, 'cH_1p');
model.physics('tds').field('concentration').component(5, 'cCl_1m');
model.physics('tds').field('concentration').component(6, 'cBaSO4');
model.physics('tds').feature('cdm1').set('u_src', 'root.comp2.u');
model.physics('tds').feature('cdm1').set('D_cBa_2p', {'D_species' '0' '0' '0' 'D_species' '0' '0' '0' 'D_species'});
model.physics('tds').feature('cdm1').set('D_cSO4_2m', {'D_species' '0' '0' '0' 'D_species' '0' '0' '0' 'D_species'});
model.physics('tds').feature('cdm1').set('D_cHSO4_1m', {'D_species' '0' '0' '0' 'D_species' '0' '0' '0' 'D_species'});
model.physics('tds').feature('cdm1').set('D_cH_1p', {'D_species' '0' '0' '0' 'D_species' '0' '0' '0' 'D_species'});
model.physics('tds').feature('cdm1').set('D_cCl_1m', {'D_species' '0' '0' '0' 'D_species' '0' '0' '0' 'D_species'});
model.physics('tds').feature('cdm1').set('D_cBaSO4', {'D_species' '0' '0' '0' 'D_species' '0' '0' '0' 'D_species'});
model.physics('tds').feature('init1').setIndex('initc', 'cBa_2p_0', 0);
model.physics('tds').feature('init1').setIndex('initc', 'cSO4_2m_0', 1);
model.physics('tds').feature('init1').setIndex('initc', 'cHSO4_1m_0', 2);
model.physics('tds').feature('init1').setIndex('initc', 'cH_1p_0', 3);
model.physics('tds').feature('init1').setIndex('initc', 'cCl_1m_0', 4);
model.physics('tds').create('in1', 'Inflow', 2);
model.physics('tds').feature('in1').selection.set([26]);
model.physics('tds').feature('in1').setIndex('c0', 'cBa_2p_0', 0);
model.physics('tds').feature('in1').setIndex('c0', 'cCl_1m_0', 4);
model.physics('tds').create('in2', 'Inflow', 2);
model.physics('tds').feature('in2').selection.set([1]);
model.physics('tds').feature('in2').setIndex('c0', 'cSO4_2m_0', 1);
model.physics('tds').feature('in2').setIndex('c0', 'cHSO4_1m_0', 2);
model.physics('tds').feature('in2').setIndex('c0', 'cH_1p_0', 3);
model.physics('tds').create('reac1', 'Reactions', 3);
model.physics('tds').feature('reac1').setIndex('R_cBa_2p_src', 'root.comp2.chem.R_Ba_2p', 0);
model.physics('tds').feature('reac1').setIndex('R_cSO4_2m_src', 'root.comp2.chem.R_SO4_2m', 0);
model.physics('tds').feature('reac1').setIndex('R_cHSO4_1m_src', 'root.comp2.chem.R_HSO4_1m', 0);
model.physics('tds').feature('reac1').setIndex('R_cH_1p_src', 'root.comp2.chem.R_H_1p', 0);
model.physics('tds').feature('reac1').setIndex('R_cCl_1m_src', 'root.comp2.chem.R_Cl_1m', 0);
model.physics('tds').feature('reac1').setIndex('R_cBaSO4_src', 'root.comp2.chem.R_BaSO4', 0);
model.physics('tds').feature('reac1').selection.all;
model.physics('tds').create('out1', 'Outflow', 2);
model.physics('tds').feature('out1').selection.set([8 15]);
model.physics('chem').prop('ChemistryModelInputParameter').set('MassTransfer', 'tds');
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'cBa_2p', 0, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'cBaSO4', 1, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'cCl_1m', 2, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'cH_1p', 3, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationValue', 'c_sol', 4, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'cHSO4_1m', 5, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'cSO4_2m', 6, 0);

model.mesh('mesh1').run;
model.mesh.create('mesh2', 'geom1');
model.mesh('mesh2').automatic(false);
model.mesh('mesh2').feature('size').set('custom', true);
model.mesh('mesh2').feature('size').set('hmax', '5E-5');
model.mesh('mesh2').feature('size').set('hmin', '2E-5');
model.mesh('mesh2').feature('size').set('hcurve', 0.6);
model.mesh('mesh2').feature('size').set('hnarrow', 0.5);
model.mesh('mesh2').feature('size1').set('custom', true);
model.mesh('mesh2').feature('size1').set('hmaxactive', true);
model.mesh('mesh2').feature('size1').set('hmax', '4E-5');
model.mesh('mesh2').feature('size1').active(false);
model.mesh('mesh2').feature('cr1').set('refinement', 0.5);
model.mesh('mesh2').feature('ftet1').selection.geom('geom1', 3);
model.mesh('mesh2').feature('ftet1').selection.set([1 4]);
model.mesh('mesh2').create('swe1', 'Sweep');
model.mesh('mesh2').feature('swe1').selection.geom('geom1', 3);
model.mesh('mesh2').feature('swe1').selection.set([2 3]);
model.mesh('mesh2').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh2').feature('swe1').feature('dis1').set('type', 'predefined');
model.mesh('mesh2').feature('swe1').feature('dis1').set('elemcount', 50);
model.mesh('mesh2').feature('swe1').feature('dis1').set('elemratio', 10);
model.mesh('mesh2').create('bl2', 'BndLayer');
model.mesh('mesh2').feature('bl2').create('blp', 'BndLayerProp');
model.mesh('mesh2').feature('bl2').selection.geom(3);
model.mesh('mesh2').feature('bl2').selection.set([]);
model.mesh('mesh2').feature('bl2').selection.allGeom;
model.mesh('mesh2').feature('bl2').feature('blp').selection.set([13 16]);
model.mesh('mesh2').feature('bl2').feature('blp').set('blnlayers', 10);
model.mesh('mesh2').feature('bl2').feature('blp').set('blstretch', 1);
model.mesh('mesh2').feature('bl2').feature('blp').set('inittype', 'blhmin');
model.mesh('mesh2').feature('bl2').feature('blp').set('blhmin', '0.8E-5');
model.mesh('mesh2').feature.move('bl2', 4);
model.mesh('mesh2').feature.move('swe1', 4);
model.mesh('mesh2').run;

model.param.create('par_c');
model.param('par_c').label('Crystal properties');
model.param('par_c').set('k_v', '1[1]');
model.param('par_c').descr('k_v', 'Crystal volume shape factor');
model.param('par_c').set('rho_C', '1[kg/m^3]');
model.param('par_c').descr('rho_C', 'Crystal density');
model.param('par_c').set('M_C', '1[kg/mol]');
model.param('par_c').descr('M_C', 'Crystal molecular weight');
model.param('par_c').set('nstart', '0[1/m^4]');
model.param('par_c').descr('nstart', 'Initial number density');

model.func.create('an2', 'Analytic');
model.func('an2').label('Growth Rate');
model.func('an2').set('funcname', 'GL');
model.func('an2').set('expr', '1');
model.func('an2').set('args', 'L,S');
model.func('an2').set('fununit', 'm/s');
model.func.create('an_GD1', 'Analytic');
model.func('an_GD1').model('comp1');
model.func('an_GD1').label('Discretization function');
model.func('an_GD1').set('funcname', 'GD');
model.func('an_GD1').set('fununit', 'm');
model.func('an_GD1').set('expr', 'Lmin+2^((j-N)/60)*(Lmax-Lmin)');
model.func('an_GD1').set('args', 'Lmax, j, N, Lmin');
model.func('an_GD1').setIndex('argunit', 'm', 0);
model.func('an_GD1').setIndex('argunit', 'm', 3);

model.variable.create('var5');
model.variable.var5.model('comp1');
model.variable('var5').label('Discretization points');
model.variable('var5').set('N', '100');
model.variable('var5').descr('N', 'Number of intervals');
model.variable('var5').set('q', '60');
model.variable('var5').descr('q', 'Discretization interval size growth constant');
model.variable('var5').set('Lmin', '(0.82[nm]-2^(-N/60)*Lmax)/(1-2^(-N/60))');
model.variable('var5').descr('Lmin', 'Constant for calculating geometric discretization');
model.variable('var5').set('Lmax', '500.0[nm]');
model.variable('var5').descr('Lmax', 'Maximum crystal size');
model.variable('var5').set('L0', 'GD(Lmax,0,N,Lmin)');
model.variable('var5').descr('L0', 'Discretization point 1');
model.variable('var5').set('L1', 'GD(Lmax,1,N,Lmin)');
model.variable('var5').descr('L1', 'Discretization point 2');
model.variable('var5').set('L2', 'GD(Lmax,2,N,Lmin)');
model.variable('var5').descr('L2', 'Discretization point 3');
model.variable('var5').set('L3', 'GD(Lmax,3,N,Lmin)');
model.variable('var5').descr('L3', 'Discretization point 4');
model.variable('var5').set('L4', 'GD(Lmax,4,N,Lmin)');
model.variable('var5').descr('L4', 'Discretization point 5');
model.variable('var5').set('L5', 'GD(Lmax,5,N,Lmin)');
model.variable('var5').descr('L5', 'Discretization point 6');
model.variable('var5').set('L6', 'GD(Lmax,6,N,Lmin)');
model.variable('var5').descr('L6', 'Discretization point 7');
model.variable('var5').set('L7', 'GD(Lmax,7,N,Lmin)');
model.variable('var5').descr('L7', 'Discretization point 8');
model.variable('var5').set('L8', 'GD(Lmax,8,N,Lmin)');
model.variable('var5').descr('L8', 'Discretization point 9');
model.variable('var5').set('L9', 'GD(Lmax,9,N,Lmin)');
model.variable('var5').descr('L9', 'Discretization point 10');
model.variable('var5').set('L10', 'GD(Lmax,10,N,Lmin)');
model.variable('var5').descr('L10', 'Discretization point 11');
model.variable('var5').set('L11', 'GD(Lmax,11,N,Lmin)');
model.variable('var5').descr('L11', 'Discretization point 12');
model.variable('var5').set('L12', 'GD(Lmax,12,N,Lmin)');
model.variable('var5').descr('L12', 'Discretization point 13');
model.variable('var5').set('L13', 'GD(Lmax,13,N,Lmin)');
model.variable('var5').descr('L13', 'Discretization point 14');
model.variable('var5').set('L14', 'GD(Lmax,14,N,Lmin)');
model.variable('var5').descr('L14', 'Discretization point 15');
model.variable('var5').set('L15', 'GD(Lmax,15,N,Lmin)');
model.variable('var5').descr('L15', 'Discretization point 16');
model.variable('var5').set('L16', 'GD(Lmax,16,N,Lmin)');
model.variable('var5').descr('L16', 'Discretization point 17');
model.variable('var5').set('L17', 'GD(Lmax,17,N,Lmin)');
model.variable('var5').descr('L17', 'Discretization point 18');
model.variable('var5').set('L18', 'GD(Lmax,18,N,Lmin)');
model.variable('var5').descr('L18', 'Discretization point 19');
model.variable('var5').set('L19', 'GD(Lmax,19,N,Lmin)');
model.variable('var5').descr('L19', 'Discretization point 20');
model.variable('var5').set('L20', 'GD(Lmax,20,N,Lmin)');
model.variable('var5').descr('L20', 'Discretization point 21');
model.variable('var5').set('L21', 'GD(Lmax,21,N,Lmin)');
model.variable('var5').descr('L21', 'Discretization point 22');
model.variable('var5').set('L22', 'GD(Lmax,22,N,Lmin)');
model.variable('var5').descr('L22', 'Discretization point 23');
model.variable('var5').set('L23', 'GD(Lmax,23,N,Lmin)');
model.variable('var5').descr('L23', 'Discretization point 24');
model.variable('var5').set('L24', 'GD(Lmax,24,N,Lmin)');
model.variable('var5').descr('L24', 'Discretization point 25');
model.variable('var5').set('L25', 'GD(Lmax,25,N,Lmin)');
model.variable('var5').descr('L25', 'Discretization point 26');
model.variable('var5').set('L26', 'GD(Lmax,26,N,Lmin)');
model.variable('var5').descr('L26', 'Discretization point 27');
model.variable('var5').set('L27', 'GD(Lmax,27,N,Lmin)');
model.variable('var5').descr('L27', 'Discretization point 28');
model.variable('var5').set('L28', 'GD(Lmax,28,N,Lmin)');
model.variable('var5').descr('L28', 'Discretization point 29');
model.variable('var5').set('L29', 'GD(Lmax,29,N,Lmin)');
model.variable('var5').descr('L29', 'Discretization point 30');
model.variable('var5').set('L30', 'GD(Lmax,30,N,Lmin)');
model.variable('var5').descr('L30', 'Discretization point 31');
model.variable('var5').set('L31', 'GD(Lmax,31,N,Lmin)');
model.variable('var5').descr('L31', 'Discretization point 32');
model.variable('var5').set('L32', 'GD(Lmax,32,N,Lmin)');
model.variable('var5').descr('L32', 'Discretization point 33');
model.variable('var5').set('L33', 'GD(Lmax,33,N,Lmin)');
model.variable('var5').descr('L33', 'Discretization point 34');
model.variable('var5').set('L34', 'GD(Lmax,34,N,Lmin)');
model.variable('var5').descr('L34', 'Discretization point 35');
model.variable('var5').set('L35', 'GD(Lmax,35,N,Lmin)');
model.variable('var5').descr('L35', 'Discretization point 36');
model.variable('var5').set('L36', 'GD(Lmax,36,N,Lmin)');
model.variable('var5').descr('L36', 'Discretization point 37');
model.variable('var5').set('L37', 'GD(Lmax,37,N,Lmin)');
model.variable('var5').descr('L37', 'Discretization point 38');
model.variable('var5').set('L38', 'GD(Lmax,38,N,Lmin)');
model.variable('var5').descr('L38', 'Discretization point 39');
model.variable('var5').set('L39', 'GD(Lmax,39,N,Lmin)');
model.variable('var5').descr('L39', 'Discretization point 40');
model.variable('var5').set('L40', 'GD(Lmax,40,N,Lmin)');
model.variable('var5').descr('L40', 'Discretization point 41');
model.variable('var5').set('L41', 'GD(Lmax,41,N,Lmin)');
model.variable('var5').descr('L41', 'Discretization point 42');
model.variable('var5').set('L42', 'GD(Lmax,42,N,Lmin)');
model.variable('var5').descr('L42', 'Discretization point 43');
model.variable('var5').set('L43', 'GD(Lmax,43,N,Lmin)');
model.variable('var5').descr('L43', 'Discretization point 44');
model.variable('var5').set('L44', 'GD(Lmax,44,N,Lmin)');
model.variable('var5').descr('L44', 'Discretization point 45');
model.variable('var5').set('L45', 'GD(Lmax,45,N,Lmin)');
model.variable('var5').descr('L45', 'Discretization point 46');
model.variable('var5').set('L46', 'GD(Lmax,46,N,Lmin)');
model.variable('var5').descr('L46', 'Discretization point 47');
model.variable('var5').set('L47', 'GD(Lmax,47,N,Lmin)');
model.variable('var5').descr('L47', 'Discretization point 48');
model.variable('var5').set('L48', 'GD(Lmax,48,N,Lmin)');
model.variable('var5').descr('L48', 'Discretization point 49');
model.variable('var5').set('L49', 'GD(Lmax,49,N,Lmin)');
model.variable('var5').descr('L49', 'Discretization point 50');
model.variable('var5').set('L50', 'GD(Lmax,50,N,Lmin)');
model.variable('var5').descr('L50', 'Discretization point 51');
model.variable('var5').set('L51', 'GD(Lmax,51,N,Lmin)');
model.variable('var5').descr('L51', 'Discretization point 52');
model.variable('var5').set('L52', 'GD(Lmax,52,N,Lmin)');
model.variable('var5').descr('L52', 'Discretization point 53');
model.variable('var5').set('L53', 'GD(Lmax,53,N,Lmin)');
model.variable('var5').descr('L53', 'Discretization point 54');
model.variable('var5').set('L54', 'GD(Lmax,54,N,Lmin)');
model.variable('var5').descr('L54', 'Discretization point 55');
model.variable('var5').set('L55', 'GD(Lmax,55,N,Lmin)');
model.variable('var5').descr('L55', 'Discretization point 56');
model.variable('var5').set('L56', 'GD(Lmax,56,N,Lmin)');
model.variable('var5').descr('L56', 'Discretization point 57');
model.variable('var5').set('L57', 'GD(Lmax,57,N,Lmin)');
model.variable('var5').descr('L57', 'Discretization point 58');
model.variable('var5').set('L58', 'GD(Lmax,58,N,Lmin)');
model.variable('var5').descr('L58', 'Discretization point 59');
model.variable('var5').set('L59', 'GD(Lmax,59,N,Lmin)');
model.variable('var5').descr('L59', 'Discretization point 60');
model.variable('var5').set('L60', 'GD(Lmax,60,N,Lmin)');
model.variable('var5').descr('L60', 'Discretization point 61');
model.variable('var5').set('L61', 'GD(Lmax,61,N,Lmin)');
model.variable('var5').descr('L61', 'Discretization point 62');
model.variable('var5').set('L62', 'GD(Lmax,62,N,Lmin)');
model.variable('var5').descr('L62', 'Discretization point 63');
model.variable('var5').set('L63', 'GD(Lmax,63,N,Lmin)');
model.variable('var5').descr('L63', 'Discretization point 64');
model.variable('var5').set('L64', 'GD(Lmax,64,N,Lmin)');
model.variable('var5').descr('L64', 'Discretization point 65');
model.variable('var5').set('L65', 'GD(Lmax,65,N,Lmin)');
model.variable('var5').descr('L65', 'Discretization point 66');
model.variable('var5').set('L66', 'GD(Lmax,66,N,Lmin)');
model.variable('var5').descr('L66', 'Discretization point 67');
model.variable('var5').set('L67', 'GD(Lmax,67,N,Lmin)');
model.variable('var5').descr('L67', 'Discretization point 68');
model.variable('var5').set('L68', 'GD(Lmax,68,N,Lmin)');
model.variable('var5').descr('L68', 'Discretization point 69');
model.variable('var5').set('L69', 'GD(Lmax,69,N,Lmin)');
model.variable('var5').descr('L69', 'Discretization point 70');
model.variable('var5').set('L70', 'GD(Lmax,70,N,Lmin)');
model.variable('var5').descr('L70', 'Discretization point 71');
model.variable('var5').set('L71', 'GD(Lmax,71,N,Lmin)');
model.variable('var5').descr('L71', 'Discretization point 72');
model.variable('var5').set('L72', 'GD(Lmax,72,N,Lmin)');
model.variable('var5').descr('L72', 'Discretization point 73');
model.variable('var5').set('L73', 'GD(Lmax,73,N,Lmin)');
model.variable('var5').descr('L73', 'Discretization point 74');
model.variable('var5').set('L74', 'GD(Lmax,74,N,Lmin)');
model.variable('var5').descr('L74', 'Discretization point 75');
model.variable('var5').set('L75', 'GD(Lmax,75,N,Lmin)');
model.variable('var5').descr('L75', 'Discretization point 76');
model.variable('var5').set('L76', 'GD(Lmax,76,N,Lmin)');
model.variable('var5').descr('L76', 'Discretization point 77');
model.variable('var5').set('L77', 'GD(Lmax,77,N,Lmin)');
model.variable('var5').descr('L77', 'Discretization point 78');
model.variable('var5').set('L78', 'GD(Lmax,78,N,Lmin)');
model.variable('var5').descr('L78', 'Discretization point 79');
model.variable('var5').set('L79', 'GD(Lmax,79,N,Lmin)');
model.variable('var5').descr('L79', 'Discretization point 80');
model.variable('var5').set('L80', 'GD(Lmax,80,N,Lmin)');
model.variable('var5').descr('L80', 'Discretization point 81');
model.variable('var5').set('L81', 'GD(Lmax,81,N,Lmin)');
model.variable('var5').descr('L81', 'Discretization point 82');
model.variable('var5').set('L82', 'GD(Lmax,82,N,Lmin)');
model.variable('var5').descr('L82', 'Discretization point 83');
model.variable('var5').set('L83', 'GD(Lmax,83,N,Lmin)');
model.variable('var5').descr('L83', 'Discretization point 84');
model.variable('var5').set('L84', 'GD(Lmax,84,N,Lmin)');
model.variable('var5').descr('L84', 'Discretization point 85');
model.variable('var5').set('L85', 'GD(Lmax,85,N,Lmin)');
model.variable('var5').descr('L85', 'Discretization point 86');
model.variable('var5').set('L86', 'GD(Lmax,86,N,Lmin)');
model.variable('var5').descr('L86', 'Discretization point 87');
model.variable('var5').set('L87', 'GD(Lmax,87,N,Lmin)');
model.variable('var5').descr('L87', 'Discretization point 88');
model.variable('var5').set('L88', 'GD(Lmax,88,N,Lmin)');
model.variable('var5').descr('L88', 'Discretization point 89');
model.variable('var5').set('L89', 'GD(Lmax,89,N,Lmin)');
model.variable('var5').descr('L89', 'Discretization point 90');
model.variable('var5').set('L90', 'GD(Lmax,90,N,Lmin)');
model.variable('var5').descr('L90', 'Discretization point 91');
model.variable('var5').set('L91', 'GD(Lmax,91,N,Lmin)');
model.variable('var5').descr('L91', 'Discretization point 92');
model.variable('var5').set('L92', 'GD(Lmax,92,N,Lmin)');
model.variable('var5').descr('L92', 'Discretization point 93');
model.variable('var5').set('L93', 'GD(Lmax,93,N,Lmin)');
model.variable('var5').descr('L93', 'Discretization point 94');
model.variable('var5').set('L94', 'GD(Lmax,94,N,Lmin)');
model.variable('var5').descr('L94', 'Discretization point 95');
model.variable('var5').set('L95', 'GD(Lmax,95,N,Lmin)');
model.variable('var5').descr('L95', 'Discretization point 96');
model.variable('var5').set('L96', 'GD(Lmax,96,N,Lmin)');
model.variable('var5').descr('L96', 'Discretization point 97');
model.variable('var5').set('L97', 'GD(Lmax,97,N,Lmin)');
model.variable('var5').descr('L97', 'Discretization point 98');
model.variable('var5').set('L98', 'GD(Lmax,98,N,Lmin)');
model.variable('var5').descr('L98', 'Discretization point 99');
model.variable('var5').set('L99', 'GD(Lmax,99,N,Lmin)');
model.variable('var5').descr('L99', 'Discretization point 100');
model.variable('var5').set('L100', 'GD(Lmax,100,N,Lmin)');
model.variable('var5').descr('L100', 'Discretization point 101');
model.variable.create('var6');
model.variable.var6.model('comp1');
model.variable('var6').label('Interval length');
model.variable('var6').set('dL1', 'abs(L1-L0)');
model.variable('var6').descr('dL1', 'Length of interval 1');
model.variable('var6').set('dL2', 'abs(L2-L1)');
model.variable('var6').descr('dL2', 'Length of interval 2');
model.variable('var6').set('dL3', 'abs(L3-L2)');
model.variable('var6').descr('dL3', 'Length of interval 3');
model.variable('var6').set('dL4', 'abs(L4-L3)');
model.variable('var6').descr('dL4', 'Length of interval 4');
model.variable('var6').set('dL5', 'abs(L5-L4)');
model.variable('var6').descr('dL5', 'Length of interval 5');
model.variable('var6').set('dL6', 'abs(L6-L5)');
model.variable('var6').descr('dL6', 'Length of interval 6');
model.variable('var6').set('dL7', 'abs(L7-L6)');
model.variable('var6').descr('dL7', 'Length of interval 7');
model.variable('var6').set('dL8', 'abs(L8-L7)');
model.variable('var6').descr('dL8', 'Length of interval 8');
model.variable('var6').set('dL9', 'abs(L9-L8)');
model.variable('var6').descr('dL9', 'Length of interval 9');
model.variable('var6').set('dL10', 'abs(L10-L9)');
model.variable('var6').descr('dL10', 'Length of interval 10');
model.variable('var6').set('dL11', 'abs(L11-L10)');
model.variable('var6').descr('dL11', 'Length of interval 11');
model.variable('var6').set('dL12', 'abs(L12-L11)');
model.variable('var6').descr('dL12', 'Length of interval 12');
model.variable('var6').set('dL13', 'abs(L13-L12)');
model.variable('var6').descr('dL13', 'Length of interval 13');
model.variable('var6').set('dL14', 'abs(L14-L13)');
model.variable('var6').descr('dL14', 'Length of interval 14');
model.variable('var6').set('dL15', 'abs(L15-L14)');
model.variable('var6').descr('dL15', 'Length of interval 15');
model.variable('var6').set('dL16', 'abs(L16-L15)');
model.variable('var6').descr('dL16', 'Length of interval 16');
model.variable('var6').set('dL17', 'abs(L17-L16)');
model.variable('var6').descr('dL17', 'Length of interval 17');
model.variable('var6').set('dL18', 'abs(L18-L17)');
model.variable('var6').descr('dL18', 'Length of interval 18');
model.variable('var6').set('dL19', 'abs(L19-L18)');
model.variable('var6').descr('dL19', 'Length of interval 19');
model.variable('var6').set('dL20', 'abs(L20-L19)');
model.variable('var6').descr('dL20', 'Length of interval 20');
model.variable('var6').set('dL21', 'abs(L21-L20)');
model.variable('var6').descr('dL21', 'Length of interval 21');
model.variable('var6').set('dL22', 'abs(L22-L21)');
model.variable('var6').descr('dL22', 'Length of interval 22');
model.variable('var6').set('dL23', 'abs(L23-L22)');
model.variable('var6').descr('dL23', 'Length of interval 23');
model.variable('var6').set('dL24', 'abs(L24-L23)');
model.variable('var6').descr('dL24', 'Length of interval 24');
model.variable('var6').set('dL25', 'abs(L25-L24)');
model.variable('var6').descr('dL25', 'Length of interval 25');
model.variable('var6').set('dL26', 'abs(L26-L25)');
model.variable('var6').descr('dL26', 'Length of interval 26');
model.variable('var6').set('dL27', 'abs(L27-L26)');
model.variable('var6').descr('dL27', 'Length of interval 27');
model.variable('var6').set('dL28', 'abs(L28-L27)');
model.variable('var6').descr('dL28', 'Length of interval 28');
model.variable('var6').set('dL29', 'abs(L29-L28)');
model.variable('var6').descr('dL29', 'Length of interval 29');
model.variable('var6').set('dL30', 'abs(L30-L29)');
model.variable('var6').descr('dL30', 'Length of interval 30');
model.variable('var6').set('dL31', 'abs(L31-L30)');
model.variable('var6').descr('dL31', 'Length of interval 31');
model.variable('var6').set('dL32', 'abs(L32-L31)');
model.variable('var6').descr('dL32', 'Length of interval 32');
model.variable('var6').set('dL33', 'abs(L33-L32)');
model.variable('var6').descr('dL33', 'Length of interval 33');
model.variable('var6').set('dL34', 'abs(L34-L33)');
model.variable('var6').descr('dL34', 'Length of interval 34');
model.variable('var6').set('dL35', 'abs(L35-L34)');
model.variable('var6').descr('dL35', 'Length of interval 35');
model.variable('var6').set('dL36', 'abs(L36-L35)');
model.variable('var6').descr('dL36', 'Length of interval 36');
model.variable('var6').set('dL37', 'abs(L37-L36)');
model.variable('var6').descr('dL37', 'Length of interval 37');
model.variable('var6').set('dL38', 'abs(L38-L37)');
model.variable('var6').descr('dL38', 'Length of interval 38');
model.variable('var6').set('dL39', 'abs(L39-L38)');
model.variable('var6').descr('dL39', 'Length of interval 39');
model.variable('var6').set('dL40', 'abs(L40-L39)');
model.variable('var6').descr('dL40', 'Length of interval 40');
model.variable('var6').set('dL41', 'abs(L41-L40)');
model.variable('var6').descr('dL41', 'Length of interval 41');
model.variable('var6').set('dL42', 'abs(L42-L41)');
model.variable('var6').descr('dL42', 'Length of interval 42');
model.variable('var6').set('dL43', 'abs(L43-L42)');
model.variable('var6').descr('dL43', 'Length of interval 43');
model.variable('var6').set('dL44', 'abs(L44-L43)');
model.variable('var6').descr('dL44', 'Length of interval 44');
model.variable('var6').set('dL45', 'abs(L45-L44)');
model.variable('var6').descr('dL45', 'Length of interval 45');
model.variable('var6').set('dL46', 'abs(L46-L45)');
model.variable('var6').descr('dL46', 'Length of interval 46');
model.variable('var6').set('dL47', 'abs(L47-L46)');
model.variable('var6').descr('dL47', 'Length of interval 47');
model.variable('var6').set('dL48', 'abs(L48-L47)');
model.variable('var6').descr('dL48', 'Length of interval 48');
model.variable('var6').set('dL49', 'abs(L49-L48)');
model.variable('var6').descr('dL49', 'Length of interval 49');
model.variable('var6').set('dL50', 'abs(L50-L49)');
model.variable('var6').descr('dL50', 'Length of interval 50');
model.variable('var6').set('dL51', 'abs(L51-L50)');
model.variable('var6').descr('dL51', 'Length of interval 51');
model.variable('var6').set('dL52', 'abs(L52-L51)');
model.variable('var6').descr('dL52', 'Length of interval 52');
model.variable('var6').set('dL53', 'abs(L53-L52)');
model.variable('var6').descr('dL53', 'Length of interval 53');
model.variable('var6').set('dL54', 'abs(L54-L53)');
model.variable('var6').descr('dL54', 'Length of interval 54');
model.variable('var6').set('dL55', 'abs(L55-L54)');
model.variable('var6').descr('dL55', 'Length of interval 55');
model.variable('var6').set('dL56', 'abs(L56-L55)');
model.variable('var6').descr('dL56', 'Length of interval 56');
model.variable('var6').set('dL57', 'abs(L57-L56)');
model.variable('var6').descr('dL57', 'Length of interval 57');
model.variable('var6').set('dL58', 'abs(L58-L57)');
model.variable('var6').descr('dL58', 'Length of interval 58');
model.variable('var6').set('dL59', 'abs(L59-L58)');
model.variable('var6').descr('dL59', 'Length of interval 59');
model.variable('var6').set('dL60', 'abs(L60-L59)');
model.variable('var6').descr('dL60', 'Length of interval 60');
model.variable('var6').set('dL61', 'abs(L61-L60)');
model.variable('var6').descr('dL61', 'Length of interval 61');
model.variable('var6').set('dL62', 'abs(L62-L61)');
model.variable('var6').descr('dL62', 'Length of interval 62');
model.variable('var6').set('dL63', 'abs(L63-L62)');
model.variable('var6').descr('dL63', 'Length of interval 63');
model.variable('var6').set('dL64', 'abs(L64-L63)');
model.variable('var6').descr('dL64', 'Length of interval 64');
model.variable('var6').set('dL65', 'abs(L65-L64)');
model.variable('var6').descr('dL65', 'Length of interval 65');
model.variable('var6').set('dL66', 'abs(L66-L65)');
model.variable('var6').descr('dL66', 'Length of interval 66');
model.variable('var6').set('dL67', 'abs(L67-L66)');
model.variable('var6').descr('dL67', 'Length of interval 67');
model.variable('var6').set('dL68', 'abs(L68-L67)');
model.variable('var6').descr('dL68', 'Length of interval 68');
model.variable('var6').set('dL69', 'abs(L69-L68)');
model.variable('var6').descr('dL69', 'Length of interval 69');
model.variable('var6').set('dL70', 'abs(L70-L69)');
model.variable('var6').descr('dL70', 'Length of interval 70');
model.variable('var6').set('dL71', 'abs(L71-L70)');
model.variable('var6').descr('dL71', 'Length of interval 71');
model.variable('var6').set('dL72', 'abs(L72-L71)');
model.variable('var6').descr('dL72', 'Length of interval 72');
model.variable('var6').set('dL73', 'abs(L73-L72)');
model.variable('var6').descr('dL73', 'Length of interval 73');
model.variable('var6').set('dL74', 'abs(L74-L73)');
model.variable('var6').descr('dL74', 'Length of interval 74');
model.variable('var6').set('dL75', 'abs(L75-L74)');
model.variable('var6').descr('dL75', 'Length of interval 75');
model.variable('var6').set('dL76', 'abs(L76-L75)');
model.variable('var6').descr('dL76', 'Length of interval 76');
model.variable('var6').set('dL77', 'abs(L77-L76)');
model.variable('var6').descr('dL77', 'Length of interval 77');
model.variable('var6').set('dL78', 'abs(L78-L77)');
model.variable('var6').descr('dL78', 'Length of interval 78');
model.variable('var6').set('dL79', 'abs(L79-L78)');
model.variable('var6').descr('dL79', 'Length of interval 79');
model.variable('var6').set('dL80', 'abs(L80-L79)');
model.variable('var6').descr('dL80', 'Length of interval 80');
model.variable('var6').set('dL81', 'abs(L81-L80)');
model.variable('var6').descr('dL81', 'Length of interval 81');
model.variable('var6').set('dL82', 'abs(L82-L81)');
model.variable('var6').descr('dL82', 'Length of interval 82');
model.variable('var6').set('dL83', 'abs(L83-L82)');
model.variable('var6').descr('dL83', 'Length of interval 83');
model.variable('var6').set('dL84', 'abs(L84-L83)');
model.variable('var6').descr('dL84', 'Length of interval 84');
model.variable('var6').set('dL85', 'abs(L85-L84)');
model.variable('var6').descr('dL85', 'Length of interval 85');
model.variable('var6').set('dL86', 'abs(L86-L85)');
model.variable('var6').descr('dL86', 'Length of interval 86');
model.variable('var6').set('dL87', 'abs(L87-L86)');
model.variable('var6').descr('dL87', 'Length of interval 87');
model.variable('var6').set('dL88', 'abs(L88-L87)');
model.variable('var6').descr('dL88', 'Length of interval 88');
model.variable('var6').set('dL89', 'abs(L89-L88)');
model.variable('var6').descr('dL89', 'Length of interval 89');
model.variable('var6').set('dL90', 'abs(L90-L89)');
model.variable('var6').descr('dL90', 'Length of interval 90');
model.variable('var6').set('dL91', 'abs(L91-L90)');
model.variable('var6').descr('dL91', 'Length of interval 91');
model.variable('var6').set('dL92', 'abs(L92-L91)');
model.variable('var6').descr('dL92', 'Length of interval 92');
model.variable('var6').set('dL93', 'abs(L93-L92)');
model.variable('var6').descr('dL93', 'Length of interval 93');
model.variable('var6').set('dL94', 'abs(L94-L93)');
model.variable('var6').descr('dL94', 'Length of interval 94');
model.variable('var6').set('dL95', 'abs(L95-L94)');
model.variable('var6').descr('dL95', 'Length of interval 95');
model.variable('var6').set('dL96', 'abs(L96-L95)');
model.variable('var6').descr('dL96', 'Length of interval 96');
model.variable('var6').set('dL97', 'abs(L97-L96)');
model.variable('var6').descr('dL97', 'Length of interval 97');
model.variable('var6').set('dL98', 'abs(L98-L97)');
model.variable('var6').descr('dL98', 'Length of interval 98');
model.variable('var6').set('dL99', 'abs(L99-L98)');
model.variable('var6').descr('dL99', 'Length of interval 99');
model.variable('var6').set('dL100', 'abs(L100-L99)');
model.variable('var6').descr('dL100', 'Length of interval 100');
model.variable.create('var7');
model.variable.var7.model('comp1');
model.variable.create('var8');
model.variable.var8.model('comp1');
model.variable('var7').label('Crystallization Reaction Rate');
model.variable('var8').label('Crystallization variables');
model.variable('var7').set('r_c1', '(((L1+L0)/2)^3*k_v*(Gst1)+B0*L0^3*k_v)*rho_C/M_C*dL1');
model.variable('var7').descr('r_c1', 'Crystallization reaction rate from interval 1');
model.variable('var7').set('r_c_sum', '0+r_c1');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c2', '((L2+L1)/2)^3*k_v*Gst2*rho_C/M_C*dL2');
model.variable('var7').descr('r_c2', 'Crystallization reaction rate from interval 2');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c3', '((L3+L2)/2)^3*k_v*Gst3*rho_C/M_C*dL3');
model.variable('var7').descr('r_c3', 'Crystallization reaction rate from interval 3');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c4', '((L4+L3)/2)^3*k_v*Gst4*rho_C/M_C*dL4');
model.variable('var7').descr('r_c4', 'Crystallization reaction rate from interval 4');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c5', '((L5+L4)/2)^3*k_v*Gst5*rho_C/M_C*dL5');
model.variable('var7').descr('r_c5', 'Crystallization reaction rate from interval 5');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c6', '((L6+L5)/2)^3*k_v*Gst6*rho_C/M_C*dL6');
model.variable('var7').descr('r_c6', 'Crystallization reaction rate from interval 6');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c7', '((L7+L6)/2)^3*k_v*Gst7*rho_C/M_C*dL7');
model.variable('var7').descr('r_c7', 'Crystallization reaction rate from interval 7');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c8', '((L8+L7)/2)^3*k_v*Gst8*rho_C/M_C*dL8');
model.variable('var7').descr('r_c8', 'Crystallization reaction rate from interval 8');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c9', '((L9+L8)/2)^3*k_v*Gst9*rho_C/M_C*dL9');
model.variable('var7').descr('r_c9', 'Crystallization reaction rate from interval 9');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c10', '((L10+L9)/2)^3*k_v*Gst10*rho_C/M_C*dL10');
model.variable('var7').descr('r_c10', 'Crystallization reaction rate from interval 10');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c11', '((L11+L10)/2)^3*k_v*Gst11*rho_C/M_C*dL11');
model.variable('var7').descr('r_c11', 'Crystallization reaction rate from interval 11');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c12', '((L12+L11)/2)^3*k_v*Gst12*rho_C/M_C*dL12');
model.variable('var7').descr('r_c12', 'Crystallization reaction rate from interval 12');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c13', '((L13+L12)/2)^3*k_v*Gst13*rho_C/M_C*dL13');
model.variable('var7').descr('r_c13', 'Crystallization reaction rate from interval 13');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c14', '((L14+L13)/2)^3*k_v*Gst14*rho_C/M_C*dL14');
model.variable('var7').descr('r_c14', 'Crystallization reaction rate from interval 14');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c15', '((L15+L14)/2)^3*k_v*Gst15*rho_C/M_C*dL15');
model.variable('var7').descr('r_c15', 'Crystallization reaction rate from interval 15');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c16', '((L16+L15)/2)^3*k_v*Gst16*rho_C/M_C*dL16');
model.variable('var7').descr('r_c16', 'Crystallization reaction rate from interval 16');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c17', '((L17+L16)/2)^3*k_v*Gst17*rho_C/M_C*dL17');
model.variable('var7').descr('r_c17', 'Crystallization reaction rate from interval 17');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c18', '((L18+L17)/2)^3*k_v*Gst18*rho_C/M_C*dL18');
model.variable('var7').descr('r_c18', 'Crystallization reaction rate from interval 18');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c19', '((L19+L18)/2)^3*k_v*Gst19*rho_C/M_C*dL19');
model.variable('var7').descr('r_c19', 'Crystallization reaction rate from interval 19');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c20', '((L20+L19)/2)^3*k_v*Gst20*rho_C/M_C*dL20');
model.variable('var7').descr('r_c20', 'Crystallization reaction rate from interval 20');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c21', '((L21+L20)/2)^3*k_v*Gst21*rho_C/M_C*dL21');
model.variable('var7').descr('r_c21', 'Crystallization reaction rate from interval 21');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c22', '((L22+L21)/2)^3*k_v*Gst22*rho_C/M_C*dL22');
model.variable('var7').descr('r_c22', 'Crystallization reaction rate from interval 22');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c23', '((L23+L22)/2)^3*k_v*Gst23*rho_C/M_C*dL23');
model.variable('var7').descr('r_c23', 'Crystallization reaction rate from interval 23');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c24', '((L24+L23)/2)^3*k_v*Gst24*rho_C/M_C*dL24');
model.variable('var7').descr('r_c24', 'Crystallization reaction rate from interval 24');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c25', '((L25+L24)/2)^3*k_v*Gst25*rho_C/M_C*dL25');
model.variable('var7').descr('r_c25', 'Crystallization reaction rate from interval 25');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c26', '((L26+L25)/2)^3*k_v*Gst26*rho_C/M_C*dL26');
model.variable('var7').descr('r_c26', 'Crystallization reaction rate from interval 26');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c27', '((L27+L26)/2)^3*k_v*Gst27*rho_C/M_C*dL27');
model.variable('var7').descr('r_c27', 'Crystallization reaction rate from interval 27');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c28', '((L28+L27)/2)^3*k_v*Gst28*rho_C/M_C*dL28');
model.variable('var7').descr('r_c28', 'Crystallization reaction rate from interval 28');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c29', '((L29+L28)/2)^3*k_v*Gst29*rho_C/M_C*dL29');
model.variable('var7').descr('r_c29', 'Crystallization reaction rate from interval 29');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c30', '((L30+L29)/2)^3*k_v*Gst30*rho_C/M_C*dL30');
model.variable('var7').descr('r_c30', 'Crystallization reaction rate from interval 30');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c31', '((L31+L30)/2)^3*k_v*Gst31*rho_C/M_C*dL31');
model.variable('var7').descr('r_c31', 'Crystallization reaction rate from interval 31');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c32', '((L32+L31)/2)^3*k_v*Gst32*rho_C/M_C*dL32');
model.variable('var7').descr('r_c32', 'Crystallization reaction rate from interval 32');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c33', '((L33+L32)/2)^3*k_v*Gst33*rho_C/M_C*dL33');
model.variable('var7').descr('r_c33', 'Crystallization reaction rate from interval 33');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c34', '((L34+L33)/2)^3*k_v*Gst34*rho_C/M_C*dL34');
model.variable('var7').descr('r_c34', 'Crystallization reaction rate from interval 34');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c35', '((L35+L34)/2)^3*k_v*Gst35*rho_C/M_C*dL35');
model.variable('var7').descr('r_c35', 'Crystallization reaction rate from interval 35');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c36', '((L36+L35)/2)^3*k_v*Gst36*rho_C/M_C*dL36');
model.variable('var7').descr('r_c36', 'Crystallization reaction rate from interval 36');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c37', '((L37+L36)/2)^3*k_v*Gst37*rho_C/M_C*dL37');
model.variable('var7').descr('r_c37', 'Crystallization reaction rate from interval 37');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c38', '((L38+L37)/2)^3*k_v*Gst38*rho_C/M_C*dL38');
model.variable('var7').descr('r_c38', 'Crystallization reaction rate from interval 38');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c39', '((L39+L38)/2)^3*k_v*Gst39*rho_C/M_C*dL39');
model.variable('var7').descr('r_c39', 'Crystallization reaction rate from interval 39');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c40', '((L40+L39)/2)^3*k_v*Gst40*rho_C/M_C*dL40');
model.variable('var7').descr('r_c40', 'Crystallization reaction rate from interval 40');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c41', '((L41+L40)/2)^3*k_v*Gst41*rho_C/M_C*dL41');
model.variable('var7').descr('r_c41', 'Crystallization reaction rate from interval 41');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c42', '((L42+L41)/2)^3*k_v*Gst42*rho_C/M_C*dL42');
model.variable('var7').descr('r_c42', 'Crystallization reaction rate from interval 42');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c43', '((L43+L42)/2)^3*k_v*Gst43*rho_C/M_C*dL43');
model.variable('var7').descr('r_c43', 'Crystallization reaction rate from interval 43');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c44', '((L44+L43)/2)^3*k_v*Gst44*rho_C/M_C*dL44');
model.variable('var7').descr('r_c44', 'Crystallization reaction rate from interval 44');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c45', '((L45+L44)/2)^3*k_v*Gst45*rho_C/M_C*dL45');
model.variable('var7').descr('r_c45', 'Crystallization reaction rate from interval 45');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c46', '((L46+L45)/2)^3*k_v*Gst46*rho_C/M_C*dL46');
model.variable('var7').descr('r_c46', 'Crystallization reaction rate from interval 46');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c47', '((L47+L46)/2)^3*k_v*Gst47*rho_C/M_C*dL47');
model.variable('var7').descr('r_c47', 'Crystallization reaction rate from interval 47');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c48', '((L48+L47)/2)^3*k_v*Gst48*rho_C/M_C*dL48');
model.variable('var7').descr('r_c48', 'Crystallization reaction rate from interval 48');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c49', '((L49+L48)/2)^3*k_v*Gst49*rho_C/M_C*dL49');
model.variable('var7').descr('r_c49', 'Crystallization reaction rate from interval 49');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c50', '((L50+L49)/2)^3*k_v*Gst50*rho_C/M_C*dL50');
model.variable('var7').descr('r_c50', 'Crystallization reaction rate from interval 50');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c51', '((L51+L50)/2)^3*k_v*Gst51*rho_C/M_C*dL51');
model.variable('var7').descr('r_c51', 'Crystallization reaction rate from interval 51');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c52', '((L52+L51)/2)^3*k_v*Gst52*rho_C/M_C*dL52');
model.variable('var7').descr('r_c52', 'Crystallization reaction rate from interval 52');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c53', '((L53+L52)/2)^3*k_v*Gst53*rho_C/M_C*dL53');
model.variable('var7').descr('r_c53', 'Crystallization reaction rate from interval 53');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c54', '((L54+L53)/2)^3*k_v*Gst54*rho_C/M_C*dL54');
model.variable('var7').descr('r_c54', 'Crystallization reaction rate from interval 54');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c55', '((L55+L54)/2)^3*k_v*Gst55*rho_C/M_C*dL55');
model.variable('var7').descr('r_c55', 'Crystallization reaction rate from interval 55');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c56', '((L56+L55)/2)^3*k_v*Gst56*rho_C/M_C*dL56');
model.variable('var7').descr('r_c56', 'Crystallization reaction rate from interval 56');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c57', '((L57+L56)/2)^3*k_v*Gst57*rho_C/M_C*dL57');
model.variable('var7').descr('r_c57', 'Crystallization reaction rate from interval 57');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c58', '((L58+L57)/2)^3*k_v*Gst58*rho_C/M_C*dL58');
model.variable('var7').descr('r_c58', 'Crystallization reaction rate from interval 58');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c59', '((L59+L58)/2)^3*k_v*Gst59*rho_C/M_C*dL59');
model.variable('var7').descr('r_c59', 'Crystallization reaction rate from interval 59');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c60', '((L60+L59)/2)^3*k_v*Gst60*rho_C/M_C*dL60');
model.variable('var7').descr('r_c60', 'Crystallization reaction rate from interval 60');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c61', '((L61+L60)/2)^3*k_v*Gst61*rho_C/M_C*dL61');
model.variable('var7').descr('r_c61', 'Crystallization reaction rate from interval 61');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c62', '((L62+L61)/2)^3*k_v*Gst62*rho_C/M_C*dL62');
model.variable('var7').descr('r_c62', 'Crystallization reaction rate from interval 62');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c63', '((L63+L62)/2)^3*k_v*Gst63*rho_C/M_C*dL63');
model.variable('var7').descr('r_c63', 'Crystallization reaction rate from interval 63');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c64', '((L64+L63)/2)^3*k_v*Gst64*rho_C/M_C*dL64');
model.variable('var7').descr('r_c64', 'Crystallization reaction rate from interval 64');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c65', '((L65+L64)/2)^3*k_v*Gst65*rho_C/M_C*dL65');
model.variable('var7').descr('r_c65', 'Crystallization reaction rate from interval 65');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c66', '((L66+L65)/2)^3*k_v*Gst66*rho_C/M_C*dL66');
model.variable('var7').descr('r_c66', 'Crystallization reaction rate from interval 66');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c67', '((L67+L66)/2)^3*k_v*Gst67*rho_C/M_C*dL67');
model.variable('var7').descr('r_c67', 'Crystallization reaction rate from interval 67');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c68', '((L68+L67)/2)^3*k_v*Gst68*rho_C/M_C*dL68');
model.variable('var7').descr('r_c68', 'Crystallization reaction rate from interval 68');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c69', '((L69+L68)/2)^3*k_v*Gst69*rho_C/M_C*dL69');
model.variable('var7').descr('r_c69', 'Crystallization reaction rate from interval 69');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c70', '((L70+L69)/2)^3*k_v*Gst70*rho_C/M_C*dL70');
model.variable('var7').descr('r_c70', 'Crystallization reaction rate from interval 70');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c71', '((L71+L70)/2)^3*k_v*Gst71*rho_C/M_C*dL71');
model.variable('var7').descr('r_c71', 'Crystallization reaction rate from interval 71');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c72', '((L72+L71)/2)^3*k_v*Gst72*rho_C/M_C*dL72');
model.variable('var7').descr('r_c72', 'Crystallization reaction rate from interval 72');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c73', '((L73+L72)/2)^3*k_v*Gst73*rho_C/M_C*dL73');
model.variable('var7').descr('r_c73', 'Crystallization reaction rate from interval 73');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c74', '((L74+L73)/2)^3*k_v*Gst74*rho_C/M_C*dL74');
model.variable('var7').descr('r_c74', 'Crystallization reaction rate from interval 74');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73+r_c74');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73+n74*((L74+L73)/2)^3*k_v*dL74)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73+n74*dL74');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2+n74*dL74*(L74+L73)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c75', '((L75+L74)/2)^3*k_v*Gst75*rho_C/M_C*dL75');
model.variable('var7').descr('r_c75', 'Crystallization reaction rate from interval 75');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73+r_c74+r_c75');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73+n74*((L74+L73)/2)^3*k_v*dL74+n75*((L75+L74)/2)^3*k_v*dL75)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73+n74*dL74+n75*dL75');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2+n74*dL74*(L74+L73)/2+n75*dL75*(L75+L74)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c76', '((L76+L75)/2)^3*k_v*Gst76*rho_C/M_C*dL76');
model.variable('var7').descr('r_c76', 'Crystallization reaction rate from interval 76');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73+r_c74+r_c75+r_c76');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73+n74*((L74+L73)/2)^3*k_v*dL74+n75*((L75+L74)/2)^3*k_v*dL75+n76*((L76+L75)/2)^3*k_v*dL76)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73+n74*dL74+n75*dL75+n76*dL76');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2+n74*dL74*(L74+L73)/2+n75*dL75*(L75+L74)/2+n76*dL76*(L76+L75)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c77', '((L77+L76)/2)^3*k_v*Gst77*rho_C/M_C*dL77');
model.variable('var7').descr('r_c77', 'Crystallization reaction rate from interval 77');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73+r_c74+r_c75+r_c76+r_c77');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73+n74*((L74+L73)/2)^3*k_v*dL74+n75*((L75+L74)/2)^3*k_v*dL75+n76*((L76+L75)/2)^3*k_v*dL76+n77*((L77+L76)/2)^3*k_v*dL77)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73+n74*dL74+n75*dL75+n76*dL76+n77*dL77');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2+n74*dL74*(L74+L73)/2+n75*dL75*(L75+L74)/2+n76*dL76*(L76+L75)/2+n77*dL77*(L77+L76)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c78', '((L78+L77)/2)^3*k_v*Gst78*rho_C/M_C*dL78');
model.variable('var7').descr('r_c78', 'Crystallization reaction rate from interval 78');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73+r_c74+r_c75+r_c76+r_c77+r_c78');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73+n74*((L74+L73)/2)^3*k_v*dL74+n75*((L75+L74)/2)^3*k_v*dL75+n76*((L76+L75)/2)^3*k_v*dL76+n77*((L77+L76)/2)^3*k_v*dL77+n78*((L78+L77)/2)^3*k_v*dL78)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73+n74*dL74+n75*dL75+n76*dL76+n77*dL77+n78*dL78');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2+n74*dL74*(L74+L73)/2+n75*dL75*(L75+L74)/2+n76*dL76*(L76+L75)/2+n77*dL77*(L77+L76)/2+n78*dL78*(L78+L77)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c79', '((L79+L78)/2)^3*k_v*Gst79*rho_C/M_C*dL79');
model.variable('var7').descr('r_c79', 'Crystallization reaction rate from interval 79');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73+r_c74+r_c75+r_c76+r_c77+r_c78+r_c79');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73+n74*((L74+L73)/2)^3*k_v*dL74+n75*((L75+L74)/2)^3*k_v*dL75+n76*((L76+L75)/2)^3*k_v*dL76+n77*((L77+L76)/2)^3*k_v*dL77+n78*((L78+L77)/2)^3*k_v*dL78+n79*((L79+L78)/2)^3*k_v*dL79)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73+n74*dL74+n75*dL75+n76*dL76+n77*dL77+n78*dL78+n79*dL79');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2+n74*dL74*(L74+L73)/2+n75*dL75*(L75+L74)/2+n76*dL76*(L76+L75)/2+n77*dL77*(L77+L76)/2+n78*dL78*(L78+L77)/2+n79*dL79*(L79+L78)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c80', '((L80+L79)/2)^3*k_v*Gst80*rho_C/M_C*dL80');
model.variable('var7').descr('r_c80', 'Crystallization reaction rate from interval 80');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73+r_c74+r_c75+r_c76+r_c77+r_c78+r_c79+r_c80');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73+n74*((L74+L73)/2)^3*k_v*dL74+n75*((L75+L74)/2)^3*k_v*dL75+n76*((L76+L75)/2)^3*k_v*dL76+n77*((L77+L76)/2)^3*k_v*dL77+n78*((L78+L77)/2)^3*k_v*dL78+n79*((L79+L78)/2)^3*k_v*dL79+n80*((L80+L79)/2)^3*k_v*dL80)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73+n74*dL74+n75*dL75+n76*dL76+n77*dL77+n78*dL78+n79*dL79+n80*dL80');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2+n74*dL74*(L74+L73)/2+n75*dL75*(L75+L74)/2+n76*dL76*(L76+L75)/2+n77*dL77*(L77+L76)/2+n78*dL78*(L78+L77)/2+n79*dL79*(L79+L78)/2+n80*dL80*(L80+L79)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c81', '((L81+L80)/2)^3*k_v*Gst81*rho_C/M_C*dL81');
model.variable('var7').descr('r_c81', 'Crystallization reaction rate from interval 81');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73+r_c74+r_c75+r_c76+r_c77+r_c78+r_c79+r_c80+r_c81');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73+n74*((L74+L73)/2)^3*k_v*dL74+n75*((L75+L74)/2)^3*k_v*dL75+n76*((L76+L75)/2)^3*k_v*dL76+n77*((L77+L76)/2)^3*k_v*dL77+n78*((L78+L77)/2)^3*k_v*dL78+n79*((L79+L78)/2)^3*k_v*dL79+n80*((L80+L79)/2)^3*k_v*dL80+n81*((L81+L80)/2)^3*k_v*dL81)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73+n74*dL74+n75*dL75+n76*dL76+n77*dL77+n78*dL78+n79*dL79+n80*dL80+n81*dL81');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2+n74*dL74*(L74+L73)/2+n75*dL75*(L75+L74)/2+n76*dL76*(L76+L75)/2+n77*dL77*(L77+L76)/2+n78*dL78*(L78+L77)/2+n79*dL79*(L79+L78)/2+n80*dL80*(L80+L79)/2+n81*dL81*(L81+L80)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c82', '((L82+L81)/2)^3*k_v*Gst82*rho_C/M_C*dL82');
model.variable('var7').descr('r_c82', 'Crystallization reaction rate from interval 82');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73+r_c74+r_c75+r_c76+r_c77+r_c78+r_c79+r_c80+r_c81+r_c82');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73+n74*((L74+L73)/2)^3*k_v*dL74+n75*((L75+L74)/2)^3*k_v*dL75+n76*((L76+L75)/2)^3*k_v*dL76+n77*((L77+L76)/2)^3*k_v*dL77+n78*((L78+L77)/2)^3*k_v*dL78+n79*((L79+L78)/2)^3*k_v*dL79+n80*((L80+L79)/2)^3*k_v*dL80+n81*((L81+L80)/2)^3*k_v*dL81+n82*((L82+L81)/2)^3*k_v*dL82)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73+n74*dL74+n75*dL75+n76*dL76+n77*dL77+n78*dL78+n79*dL79+n80*dL80+n81*dL81+n82*dL82');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2+n74*dL74*(L74+L73)/2+n75*dL75*(L75+L74)/2+n76*dL76*(L76+L75)/2+n77*dL77*(L77+L76)/2+n78*dL78*(L78+L77)/2+n79*dL79*(L79+L78)/2+n80*dL80*(L80+L79)/2+n81*dL81*(L81+L80)/2+n82*dL82*(L82+L81)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c83', '((L83+L82)/2)^3*k_v*Gst83*rho_C/M_C*dL83');
model.variable('var7').descr('r_c83', 'Crystallization reaction rate from interval 83');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73+r_c74+r_c75+r_c76+r_c77+r_c78+r_c79+r_c80+r_c81+r_c82+r_c83');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73+n74*((L74+L73)/2)^3*k_v*dL74+n75*((L75+L74)/2)^3*k_v*dL75+n76*((L76+L75)/2)^3*k_v*dL76+n77*((L77+L76)/2)^3*k_v*dL77+n78*((L78+L77)/2)^3*k_v*dL78+n79*((L79+L78)/2)^3*k_v*dL79+n80*((L80+L79)/2)^3*k_v*dL80+n81*((L81+L80)/2)^3*k_v*dL81+n82*((L82+L81)/2)^3*k_v*dL82+n83*((L83+L82)/2)^3*k_v*dL83)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73+n74*dL74+n75*dL75+n76*dL76+n77*dL77+n78*dL78+n79*dL79+n80*dL80+n81*dL81+n82*dL82+n83*dL83');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2+n74*dL74*(L74+L73)/2+n75*dL75*(L75+L74)/2+n76*dL76*(L76+L75)/2+n77*dL77*(L77+L76)/2+n78*dL78*(L78+L77)/2+n79*dL79*(L79+L78)/2+n80*dL80*(L80+L79)/2+n81*dL81*(L81+L80)/2+n82*dL82*(L82+L81)/2+n83*dL83*(L83+L82)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c84', '((L84+L83)/2)^3*k_v*Gst84*rho_C/M_C*dL84');
model.variable('var7').descr('r_c84', 'Crystallization reaction rate from interval 84');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73+r_c74+r_c75+r_c76+r_c77+r_c78+r_c79+r_c80+r_c81+r_c82+r_c83+r_c84');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73+n74*((L74+L73)/2)^3*k_v*dL74+n75*((L75+L74)/2)^3*k_v*dL75+n76*((L76+L75)/2)^3*k_v*dL76+n77*((L77+L76)/2)^3*k_v*dL77+n78*((L78+L77)/2)^3*k_v*dL78+n79*((L79+L78)/2)^3*k_v*dL79+n80*((L80+L79)/2)^3*k_v*dL80+n81*((L81+L80)/2)^3*k_v*dL81+n82*((L82+L81)/2)^3*k_v*dL82+n83*((L83+L82)/2)^3*k_v*dL83+n84*((L84+L83)/2)^3*k_v*dL84)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73+n74*dL74+n75*dL75+n76*dL76+n77*dL77+n78*dL78+n79*dL79+n80*dL80+n81*dL81+n82*dL82+n83*dL83+n84*dL84');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2+n74*dL74*(L74+L73)/2+n75*dL75*(L75+L74)/2+n76*dL76*(L76+L75)/2+n77*dL77*(L77+L76)/2+n78*dL78*(L78+L77)/2+n79*dL79*(L79+L78)/2+n80*dL80*(L80+L79)/2+n81*dL81*(L81+L80)/2+n82*dL82*(L82+L81)/2+n83*dL83*(L83+L82)/2+n84*dL84*(L84+L83)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c85', '((L85+L84)/2)^3*k_v*Gst85*rho_C/M_C*dL85');
model.variable('var7').descr('r_c85', 'Crystallization reaction rate from interval 85');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73+r_c74+r_c75+r_c76+r_c77+r_c78+r_c79+r_c80+r_c81+r_c82+r_c83+r_c84+r_c85');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73+n74*((L74+L73)/2)^3*k_v*dL74+n75*((L75+L74)/2)^3*k_v*dL75+n76*((L76+L75)/2)^3*k_v*dL76+n77*((L77+L76)/2)^3*k_v*dL77+n78*((L78+L77)/2)^3*k_v*dL78+n79*((L79+L78)/2)^3*k_v*dL79+n80*((L80+L79)/2)^3*k_v*dL80+n81*((L81+L80)/2)^3*k_v*dL81+n82*((L82+L81)/2)^3*k_v*dL82+n83*((L83+L82)/2)^3*k_v*dL83+n84*((L84+L83)/2)^3*k_v*dL84+n85*((L85+L84)/2)^3*k_v*dL85)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73+n74*dL74+n75*dL75+n76*dL76+n77*dL77+n78*dL78+n79*dL79+n80*dL80+n81*dL81+n82*dL82+n83*dL83+n84*dL84+n85*dL85');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2+n74*dL74*(L74+L73)/2+n75*dL75*(L75+L74)/2+n76*dL76*(L76+L75)/2+n77*dL77*(L77+L76)/2+n78*dL78*(L78+L77)/2+n79*dL79*(L79+L78)/2+n80*dL80*(L80+L79)/2+n81*dL81*(L81+L80)/2+n82*dL82*(L82+L81)/2+n83*dL83*(L83+L82)/2+n84*dL84*(L84+L83)/2+n85*dL85*(L85+L84)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c86', '((L86+L85)/2)^3*k_v*Gst86*rho_C/M_C*dL86');
model.variable('var7').descr('r_c86', 'Crystallization reaction rate from interval 86');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73+r_c74+r_c75+r_c76+r_c77+r_c78+r_c79+r_c80+r_c81+r_c82+r_c83+r_c84+r_c85+r_c86');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73+n74*((L74+L73)/2)^3*k_v*dL74+n75*((L75+L74)/2)^3*k_v*dL75+n76*((L76+L75)/2)^3*k_v*dL76+n77*((L77+L76)/2)^3*k_v*dL77+n78*((L78+L77)/2)^3*k_v*dL78+n79*((L79+L78)/2)^3*k_v*dL79+n80*((L80+L79)/2)^3*k_v*dL80+n81*((L81+L80)/2)^3*k_v*dL81+n82*((L82+L81)/2)^3*k_v*dL82+n83*((L83+L82)/2)^3*k_v*dL83+n84*((L84+L83)/2)^3*k_v*dL84+n85*((L85+L84)/2)^3*k_v*dL85+n86*((L86+L85)/2)^3*k_v*dL86)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73+n74*dL74+n75*dL75+n76*dL76+n77*dL77+n78*dL78+n79*dL79+n80*dL80+n81*dL81+n82*dL82+n83*dL83+n84*dL84+n85*dL85+n86*dL86');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2+n74*dL74*(L74+L73)/2+n75*dL75*(L75+L74)/2+n76*dL76*(L76+L75)/2+n77*dL77*(L77+L76)/2+n78*dL78*(L78+L77)/2+n79*dL79*(L79+L78)/2+n80*dL80*(L80+L79)/2+n81*dL81*(L81+L80)/2+n82*dL82*(L82+L81)/2+n83*dL83*(L83+L82)/2+n84*dL84*(L84+L83)/2+n85*dL85*(L85+L84)/2+n86*dL86*(L86+L85)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c87', '((L87+L86)/2)^3*k_v*Gst87*rho_C/M_C*dL87');
model.variable('var7').descr('r_c87', 'Crystallization reaction rate from interval 87');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73+r_c74+r_c75+r_c76+r_c77+r_c78+r_c79+r_c80+r_c81+r_c82+r_c83+r_c84+r_c85+r_c86+r_c87');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73+n74*((L74+L73)/2)^3*k_v*dL74+n75*((L75+L74)/2)^3*k_v*dL75+n76*((L76+L75)/2)^3*k_v*dL76+n77*((L77+L76)/2)^3*k_v*dL77+n78*((L78+L77)/2)^3*k_v*dL78+n79*((L79+L78)/2)^3*k_v*dL79+n80*((L80+L79)/2)^3*k_v*dL80+n81*((L81+L80)/2)^3*k_v*dL81+n82*((L82+L81)/2)^3*k_v*dL82+n83*((L83+L82)/2)^3*k_v*dL83+n84*((L84+L83)/2)^3*k_v*dL84+n85*((L85+L84)/2)^3*k_v*dL85+n86*((L86+L85)/2)^3*k_v*dL86+n87*((L87+L86)/2)^3*k_v*dL87)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73+n74*dL74+n75*dL75+n76*dL76+n77*dL77+n78*dL78+n79*dL79+n80*dL80+n81*dL81+n82*dL82+n83*dL83+n84*dL84+n85*dL85+n86*dL86+n87*dL87');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2+n74*dL74*(L74+L73)/2+n75*dL75*(L75+L74)/2+n76*dL76*(L76+L75)/2+n77*dL77*(L77+L76)/2+n78*dL78*(L78+L77)/2+n79*dL79*(L79+L78)/2+n80*dL80*(L80+L79)/2+n81*dL81*(L81+L80)/2+n82*dL82*(L82+L81)/2+n83*dL83*(L83+L82)/2+n84*dL84*(L84+L83)/2+n85*dL85*(L85+L84)/2+n86*dL86*(L86+L85)/2+n87*dL87*(L87+L86)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c88', '((L88+L87)/2)^3*k_v*Gst88*rho_C/M_C*dL88');
model.variable('var7').descr('r_c88', 'Crystallization reaction rate from interval 88');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73+r_c74+r_c75+r_c76+r_c77+r_c78+r_c79+r_c80+r_c81+r_c82+r_c83+r_c84+r_c85+r_c86+r_c87+r_c88');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73+n74*((L74+L73)/2)^3*k_v*dL74+n75*((L75+L74)/2)^3*k_v*dL75+n76*((L76+L75)/2)^3*k_v*dL76+n77*((L77+L76)/2)^3*k_v*dL77+n78*((L78+L77)/2)^3*k_v*dL78+n79*((L79+L78)/2)^3*k_v*dL79+n80*((L80+L79)/2)^3*k_v*dL80+n81*((L81+L80)/2)^3*k_v*dL81+n82*((L82+L81)/2)^3*k_v*dL82+n83*((L83+L82)/2)^3*k_v*dL83+n84*((L84+L83)/2)^3*k_v*dL84+n85*((L85+L84)/2)^3*k_v*dL85+n86*((L86+L85)/2)^3*k_v*dL86+n87*((L87+L86)/2)^3*k_v*dL87+n88*((L88+L87)/2)^3*k_v*dL88)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73+n74*dL74+n75*dL75+n76*dL76+n77*dL77+n78*dL78+n79*dL79+n80*dL80+n81*dL81+n82*dL82+n83*dL83+n84*dL84+n85*dL85+n86*dL86+n87*dL87+n88*dL88');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2+n74*dL74*(L74+L73)/2+n75*dL75*(L75+L74)/2+n76*dL76*(L76+L75)/2+n77*dL77*(L77+L76)/2+n78*dL78*(L78+L77)/2+n79*dL79*(L79+L78)/2+n80*dL80*(L80+L79)/2+n81*dL81*(L81+L80)/2+n82*dL82*(L82+L81)/2+n83*dL83*(L83+L82)/2+n84*dL84*(L84+L83)/2+n85*dL85*(L85+L84)/2+n86*dL86*(L86+L85)/2+n87*dL87*(L87+L86)/2+n88*dL88*(L88+L87)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c89', '((L89+L88)/2)^3*k_v*Gst89*rho_C/M_C*dL89');
model.variable('var7').descr('r_c89', 'Crystallization reaction rate from interval 89');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73+r_c74+r_c75+r_c76+r_c77+r_c78+r_c79+r_c80+r_c81+r_c82+r_c83+r_c84+r_c85+r_c86+r_c87+r_c88+r_c89');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73+n74*((L74+L73)/2)^3*k_v*dL74+n75*((L75+L74)/2)^3*k_v*dL75+n76*((L76+L75)/2)^3*k_v*dL76+n77*((L77+L76)/2)^3*k_v*dL77+n78*((L78+L77)/2)^3*k_v*dL78+n79*((L79+L78)/2)^3*k_v*dL79+n80*((L80+L79)/2)^3*k_v*dL80+n81*((L81+L80)/2)^3*k_v*dL81+n82*((L82+L81)/2)^3*k_v*dL82+n83*((L83+L82)/2)^3*k_v*dL83+n84*((L84+L83)/2)^3*k_v*dL84+n85*((L85+L84)/2)^3*k_v*dL85+n86*((L86+L85)/2)^3*k_v*dL86+n87*((L87+L86)/2)^3*k_v*dL87+n88*((L88+L87)/2)^3*k_v*dL88+n89*((L89+L88)/2)^3*k_v*dL89)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73+n74*dL74+n75*dL75+n76*dL76+n77*dL77+n78*dL78+n79*dL79+n80*dL80+n81*dL81+n82*dL82+n83*dL83+n84*dL84+n85*dL85+n86*dL86+n87*dL87+n88*dL88+n89*dL89');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2+n74*dL74*(L74+L73)/2+n75*dL75*(L75+L74)/2+n76*dL76*(L76+L75)/2+n77*dL77*(L77+L76)/2+n78*dL78*(L78+L77)/2+n79*dL79*(L79+L78)/2+n80*dL80*(L80+L79)/2+n81*dL81*(L81+L80)/2+n82*dL82*(L82+L81)/2+n83*dL83*(L83+L82)/2+n84*dL84*(L84+L83)/2+n85*dL85*(L85+L84)/2+n86*dL86*(L86+L85)/2+n87*dL87*(L87+L86)/2+n88*dL88*(L88+L87)/2+n89*dL89*(L89+L88)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c90', '((L90+L89)/2)^3*k_v*Gst90*rho_C/M_C*dL90');
model.variable('var7').descr('r_c90', 'Crystallization reaction rate from interval 90');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73+r_c74+r_c75+r_c76+r_c77+r_c78+r_c79+r_c80+r_c81+r_c82+r_c83+r_c84+r_c85+r_c86+r_c87+r_c88+r_c89+r_c90');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73+n74*((L74+L73)/2)^3*k_v*dL74+n75*((L75+L74)/2)^3*k_v*dL75+n76*((L76+L75)/2)^3*k_v*dL76+n77*((L77+L76)/2)^3*k_v*dL77+n78*((L78+L77)/2)^3*k_v*dL78+n79*((L79+L78)/2)^3*k_v*dL79+n80*((L80+L79)/2)^3*k_v*dL80+n81*((L81+L80)/2)^3*k_v*dL81+n82*((L82+L81)/2)^3*k_v*dL82+n83*((L83+L82)/2)^3*k_v*dL83+n84*((L84+L83)/2)^3*k_v*dL84+n85*((L85+L84)/2)^3*k_v*dL85+n86*((L86+L85)/2)^3*k_v*dL86+n87*((L87+L86)/2)^3*k_v*dL87+n88*((L88+L87)/2)^3*k_v*dL88+n89*((L89+L88)/2)^3*k_v*dL89+n90*((L90+L89)/2)^3*k_v*dL90)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73+n74*dL74+n75*dL75+n76*dL76+n77*dL77+n78*dL78+n79*dL79+n80*dL80+n81*dL81+n82*dL82+n83*dL83+n84*dL84+n85*dL85+n86*dL86+n87*dL87+n88*dL88+n89*dL89+n90*dL90');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2+n74*dL74*(L74+L73)/2+n75*dL75*(L75+L74)/2+n76*dL76*(L76+L75)/2+n77*dL77*(L77+L76)/2+n78*dL78*(L78+L77)/2+n79*dL79*(L79+L78)/2+n80*dL80*(L80+L79)/2+n81*dL81*(L81+L80)/2+n82*dL82*(L82+L81)/2+n83*dL83*(L83+L82)/2+n84*dL84*(L84+L83)/2+n85*dL85*(L85+L84)/2+n86*dL86*(L86+L85)/2+n87*dL87*(L87+L86)/2+n88*dL88*(L88+L87)/2+n89*dL89*(L89+L88)/2+n90*dL90*(L90+L89)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c91', '((L91+L90)/2)^3*k_v*Gst91*rho_C/M_C*dL91');
model.variable('var7').descr('r_c91', 'Crystallization reaction rate from interval 91');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73+r_c74+r_c75+r_c76+r_c77+r_c78+r_c79+r_c80+r_c81+r_c82+r_c83+r_c84+r_c85+r_c86+r_c87+r_c88+r_c89+r_c90+r_c91');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73+n74*((L74+L73)/2)^3*k_v*dL74+n75*((L75+L74)/2)^3*k_v*dL75+n76*((L76+L75)/2)^3*k_v*dL76+n77*((L77+L76)/2)^3*k_v*dL77+n78*((L78+L77)/2)^3*k_v*dL78+n79*((L79+L78)/2)^3*k_v*dL79+n80*((L80+L79)/2)^3*k_v*dL80+n81*((L81+L80)/2)^3*k_v*dL81+n82*((L82+L81)/2)^3*k_v*dL82+n83*((L83+L82)/2)^3*k_v*dL83+n84*((L84+L83)/2)^3*k_v*dL84+n85*((L85+L84)/2)^3*k_v*dL85+n86*((L86+L85)/2)^3*k_v*dL86+n87*((L87+L86)/2)^3*k_v*dL87+n88*((L88+L87)/2)^3*k_v*dL88+n89*((L89+L88)/2)^3*k_v*dL89+n90*((L90+L89)/2)^3*k_v*dL90+n91*((L91+L90)/2)^3*k_v*dL91)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73+n74*dL74+n75*dL75+n76*dL76+n77*dL77+n78*dL78+n79*dL79+n80*dL80+n81*dL81+n82*dL82+n83*dL83+n84*dL84+n85*dL85+n86*dL86+n87*dL87+n88*dL88+n89*dL89+n90*dL90+n91*dL91');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2+n74*dL74*(L74+L73)/2+n75*dL75*(L75+L74)/2+n76*dL76*(L76+L75)/2+n77*dL77*(L77+L76)/2+n78*dL78*(L78+L77)/2+n79*dL79*(L79+L78)/2+n80*dL80*(L80+L79)/2+n81*dL81*(L81+L80)/2+n82*dL82*(L82+L81)/2+n83*dL83*(L83+L82)/2+n84*dL84*(L84+L83)/2+n85*dL85*(L85+L84)/2+n86*dL86*(L86+L85)/2+n87*dL87*(L87+L86)/2+n88*dL88*(L88+L87)/2+n89*dL89*(L89+L88)/2+n90*dL90*(L90+L89)/2+n91*dL91*(L91+L90)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c92', '((L92+L91)/2)^3*k_v*Gst92*rho_C/M_C*dL92');
model.variable('var7').descr('r_c92', 'Crystallization reaction rate from interval 92');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73+r_c74+r_c75+r_c76+r_c77+r_c78+r_c79+r_c80+r_c81+r_c82+r_c83+r_c84+r_c85+r_c86+r_c87+r_c88+r_c89+r_c90+r_c91+r_c92');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73+n74*((L74+L73)/2)^3*k_v*dL74+n75*((L75+L74)/2)^3*k_v*dL75+n76*((L76+L75)/2)^3*k_v*dL76+n77*((L77+L76)/2)^3*k_v*dL77+n78*((L78+L77)/2)^3*k_v*dL78+n79*((L79+L78)/2)^3*k_v*dL79+n80*((L80+L79)/2)^3*k_v*dL80+n81*((L81+L80)/2)^3*k_v*dL81+n82*((L82+L81)/2)^3*k_v*dL82+n83*((L83+L82)/2)^3*k_v*dL83+n84*((L84+L83)/2)^3*k_v*dL84+n85*((L85+L84)/2)^3*k_v*dL85+n86*((L86+L85)/2)^3*k_v*dL86+n87*((L87+L86)/2)^3*k_v*dL87+n88*((L88+L87)/2)^3*k_v*dL88+n89*((L89+L88)/2)^3*k_v*dL89+n90*((L90+L89)/2)^3*k_v*dL90+n91*((L91+L90)/2)^3*k_v*dL91+n92*((L92+L91)/2)^3*k_v*dL92)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73+n74*dL74+n75*dL75+n76*dL76+n77*dL77+n78*dL78+n79*dL79+n80*dL80+n81*dL81+n82*dL82+n83*dL83+n84*dL84+n85*dL85+n86*dL86+n87*dL87+n88*dL88+n89*dL89+n90*dL90+n91*dL91+n92*dL92');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2+n74*dL74*(L74+L73)/2+n75*dL75*(L75+L74)/2+n76*dL76*(L76+L75)/2+n77*dL77*(L77+L76)/2+n78*dL78*(L78+L77)/2+n79*dL79*(L79+L78)/2+n80*dL80*(L80+L79)/2+n81*dL81*(L81+L80)/2+n82*dL82*(L82+L81)/2+n83*dL83*(L83+L82)/2+n84*dL84*(L84+L83)/2+n85*dL85*(L85+L84)/2+n86*dL86*(L86+L85)/2+n87*dL87*(L87+L86)/2+n88*dL88*(L88+L87)/2+n89*dL89*(L89+L88)/2+n90*dL90*(L90+L89)/2+n91*dL91*(L91+L90)/2+n92*dL92*(L92+L91)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c93', '((L93+L92)/2)^3*k_v*Gst93*rho_C/M_C*dL93');
model.variable('var7').descr('r_c93', 'Crystallization reaction rate from interval 93');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73+r_c74+r_c75+r_c76+r_c77+r_c78+r_c79+r_c80+r_c81+r_c82+r_c83+r_c84+r_c85+r_c86+r_c87+r_c88+r_c89+r_c90+r_c91+r_c92+r_c93');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73+n74*((L74+L73)/2)^3*k_v*dL74+n75*((L75+L74)/2)^3*k_v*dL75+n76*((L76+L75)/2)^3*k_v*dL76+n77*((L77+L76)/2)^3*k_v*dL77+n78*((L78+L77)/2)^3*k_v*dL78+n79*((L79+L78)/2)^3*k_v*dL79+n80*((L80+L79)/2)^3*k_v*dL80+n81*((L81+L80)/2)^3*k_v*dL81+n82*((L82+L81)/2)^3*k_v*dL82+n83*((L83+L82)/2)^3*k_v*dL83+n84*((L84+L83)/2)^3*k_v*dL84+n85*((L85+L84)/2)^3*k_v*dL85+n86*((L86+L85)/2)^3*k_v*dL86+n87*((L87+L86)/2)^3*k_v*dL87+n88*((L88+L87)/2)^3*k_v*dL88+n89*((L89+L88)/2)^3*k_v*dL89+n90*((L90+L89)/2)^3*k_v*dL90+n91*((L91+L90)/2)^3*k_v*dL91+n92*((L92+L91)/2)^3*k_v*dL92+n93*((L93+L92)/2)^3*k_v*dL93)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73+n74*dL74+n75*dL75+n76*dL76+n77*dL77+n78*dL78+n79*dL79+n80*dL80+n81*dL81+n82*dL82+n83*dL83+n84*dL84+n85*dL85+n86*dL86+n87*dL87+n88*dL88+n89*dL89+n90*dL90+n91*dL91+n92*dL92+n93*dL93');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2+n74*dL74*(L74+L73)/2+n75*dL75*(L75+L74)/2+n76*dL76*(L76+L75)/2+n77*dL77*(L77+L76)/2+n78*dL78*(L78+L77)/2+n79*dL79*(L79+L78)/2+n80*dL80*(L80+L79)/2+n81*dL81*(L81+L80)/2+n82*dL82*(L82+L81)/2+n83*dL83*(L83+L82)/2+n84*dL84*(L84+L83)/2+n85*dL85*(L85+L84)/2+n86*dL86*(L86+L85)/2+n87*dL87*(L87+L86)/2+n88*dL88*(L88+L87)/2+n89*dL89*(L89+L88)/2+n90*dL90*(L90+L89)/2+n91*dL91*(L91+L90)/2+n92*dL92*(L92+L91)/2+n93*dL93*(L93+L92)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c94', '((L94+L93)/2)^3*k_v*Gst94*rho_C/M_C*dL94');
model.variable('var7').descr('r_c94', 'Crystallization reaction rate from interval 94');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73+r_c74+r_c75+r_c76+r_c77+r_c78+r_c79+r_c80+r_c81+r_c82+r_c83+r_c84+r_c85+r_c86+r_c87+r_c88+r_c89+r_c90+r_c91+r_c92+r_c93+r_c94');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73+n74*((L74+L73)/2)^3*k_v*dL74+n75*((L75+L74)/2)^3*k_v*dL75+n76*((L76+L75)/2)^3*k_v*dL76+n77*((L77+L76)/2)^3*k_v*dL77+n78*((L78+L77)/2)^3*k_v*dL78+n79*((L79+L78)/2)^3*k_v*dL79+n80*((L80+L79)/2)^3*k_v*dL80+n81*((L81+L80)/2)^3*k_v*dL81+n82*((L82+L81)/2)^3*k_v*dL82+n83*((L83+L82)/2)^3*k_v*dL83+n84*((L84+L83)/2)^3*k_v*dL84+n85*((L85+L84)/2)^3*k_v*dL85+n86*((L86+L85)/2)^3*k_v*dL86+n87*((L87+L86)/2)^3*k_v*dL87+n88*((L88+L87)/2)^3*k_v*dL88+n89*((L89+L88)/2)^3*k_v*dL89+n90*((L90+L89)/2)^3*k_v*dL90+n91*((L91+L90)/2)^3*k_v*dL91+n92*((L92+L91)/2)^3*k_v*dL92+n93*((L93+L92)/2)^3*k_v*dL93+n94*((L94+L93)/2)^3*k_v*dL94)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73+n74*dL74+n75*dL75+n76*dL76+n77*dL77+n78*dL78+n79*dL79+n80*dL80+n81*dL81+n82*dL82+n83*dL83+n84*dL84+n85*dL85+n86*dL86+n87*dL87+n88*dL88+n89*dL89+n90*dL90+n91*dL91+n92*dL92+n93*dL93+n94*dL94');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2+n74*dL74*(L74+L73)/2+n75*dL75*(L75+L74)/2+n76*dL76*(L76+L75)/2+n77*dL77*(L77+L76)/2+n78*dL78*(L78+L77)/2+n79*dL79*(L79+L78)/2+n80*dL80*(L80+L79)/2+n81*dL81*(L81+L80)/2+n82*dL82*(L82+L81)/2+n83*dL83*(L83+L82)/2+n84*dL84*(L84+L83)/2+n85*dL85*(L85+L84)/2+n86*dL86*(L86+L85)/2+n87*dL87*(L87+L86)/2+n88*dL88*(L88+L87)/2+n89*dL89*(L89+L88)/2+n90*dL90*(L90+L89)/2+n91*dL91*(L91+L90)/2+n92*dL92*(L92+L91)/2+n93*dL93*(L93+L92)/2+n94*dL94*(L94+L93)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c95', '((L95+L94)/2)^3*k_v*Gst95*rho_C/M_C*dL95');
model.variable('var7').descr('r_c95', 'Crystallization reaction rate from interval 95');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73+r_c74+r_c75+r_c76+r_c77+r_c78+r_c79+r_c80+r_c81+r_c82+r_c83+r_c84+r_c85+r_c86+r_c87+r_c88+r_c89+r_c90+r_c91+r_c92+r_c93+r_c94+r_c95');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73+n74*((L74+L73)/2)^3*k_v*dL74+n75*((L75+L74)/2)^3*k_v*dL75+n76*((L76+L75)/2)^3*k_v*dL76+n77*((L77+L76)/2)^3*k_v*dL77+n78*((L78+L77)/2)^3*k_v*dL78+n79*((L79+L78)/2)^3*k_v*dL79+n80*((L80+L79)/2)^3*k_v*dL80+n81*((L81+L80)/2)^3*k_v*dL81+n82*((L82+L81)/2)^3*k_v*dL82+n83*((L83+L82)/2)^3*k_v*dL83+n84*((L84+L83)/2)^3*k_v*dL84+n85*((L85+L84)/2)^3*k_v*dL85+n86*((L86+L85)/2)^3*k_v*dL86+n87*((L87+L86)/2)^3*k_v*dL87+n88*((L88+L87)/2)^3*k_v*dL88+n89*((L89+L88)/2)^3*k_v*dL89+n90*((L90+L89)/2)^3*k_v*dL90+n91*((L91+L90)/2)^3*k_v*dL91+n92*((L92+L91)/2)^3*k_v*dL92+n93*((L93+L92)/2)^3*k_v*dL93+n94*((L94+L93)/2)^3*k_v*dL94+n95*((L95+L94)/2)^3*k_v*dL95)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73+n74*dL74+n75*dL75+n76*dL76+n77*dL77+n78*dL78+n79*dL79+n80*dL80+n81*dL81+n82*dL82+n83*dL83+n84*dL84+n85*dL85+n86*dL86+n87*dL87+n88*dL88+n89*dL89+n90*dL90+n91*dL91+n92*dL92+n93*dL93+n94*dL94+n95*dL95');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2+n74*dL74*(L74+L73)/2+n75*dL75*(L75+L74)/2+n76*dL76*(L76+L75)/2+n77*dL77*(L77+L76)/2+n78*dL78*(L78+L77)/2+n79*dL79*(L79+L78)/2+n80*dL80*(L80+L79)/2+n81*dL81*(L81+L80)/2+n82*dL82*(L82+L81)/2+n83*dL83*(L83+L82)/2+n84*dL84*(L84+L83)/2+n85*dL85*(L85+L84)/2+n86*dL86*(L86+L85)/2+n87*dL87*(L87+L86)/2+n88*dL88*(L88+L87)/2+n89*dL89*(L89+L88)/2+n90*dL90*(L90+L89)/2+n91*dL91*(L91+L90)/2+n92*dL92*(L92+L91)/2+n93*dL93*(L93+L92)/2+n94*dL94*(L94+L93)/2+n95*dL95*(L95+L94)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c96', '((L96+L95)/2)^3*k_v*Gst96*rho_C/M_C*dL96');
model.variable('var7').descr('r_c96', 'Crystallization reaction rate from interval 96');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73+r_c74+r_c75+r_c76+r_c77+r_c78+r_c79+r_c80+r_c81+r_c82+r_c83+r_c84+r_c85+r_c86+r_c87+r_c88+r_c89+r_c90+r_c91+r_c92+r_c93+r_c94+r_c95+r_c96');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73+n74*((L74+L73)/2)^3*k_v*dL74+n75*((L75+L74)/2)^3*k_v*dL75+n76*((L76+L75)/2)^3*k_v*dL76+n77*((L77+L76)/2)^3*k_v*dL77+n78*((L78+L77)/2)^3*k_v*dL78+n79*((L79+L78)/2)^3*k_v*dL79+n80*((L80+L79)/2)^3*k_v*dL80+n81*((L81+L80)/2)^3*k_v*dL81+n82*((L82+L81)/2)^3*k_v*dL82+n83*((L83+L82)/2)^3*k_v*dL83+n84*((L84+L83)/2)^3*k_v*dL84+n85*((L85+L84)/2)^3*k_v*dL85+n86*((L86+L85)/2)^3*k_v*dL86+n87*((L87+L86)/2)^3*k_v*dL87+n88*((L88+L87)/2)^3*k_v*dL88+n89*((L89+L88)/2)^3*k_v*dL89+n90*((L90+L89)/2)^3*k_v*dL90+n91*((L91+L90)/2)^3*k_v*dL91+n92*((L92+L91)/2)^3*k_v*dL92+n93*((L93+L92)/2)^3*k_v*dL93+n94*((L94+L93)/2)^3*k_v*dL94+n95*((L95+L94)/2)^3*k_v*dL95+n96*((L96+L95)/2)^3*k_v*dL96)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73+n74*dL74+n75*dL75+n76*dL76+n77*dL77+n78*dL78+n79*dL79+n80*dL80+n81*dL81+n82*dL82+n83*dL83+n84*dL84+n85*dL85+n86*dL86+n87*dL87+n88*dL88+n89*dL89+n90*dL90+n91*dL91+n92*dL92+n93*dL93+n94*dL94+n95*dL95+n96*dL96');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2+n74*dL74*(L74+L73)/2+n75*dL75*(L75+L74)/2+n76*dL76*(L76+L75)/2+n77*dL77*(L77+L76)/2+n78*dL78*(L78+L77)/2+n79*dL79*(L79+L78)/2+n80*dL80*(L80+L79)/2+n81*dL81*(L81+L80)/2+n82*dL82*(L82+L81)/2+n83*dL83*(L83+L82)/2+n84*dL84*(L84+L83)/2+n85*dL85*(L85+L84)/2+n86*dL86*(L86+L85)/2+n87*dL87*(L87+L86)/2+n88*dL88*(L88+L87)/2+n89*dL89*(L89+L88)/2+n90*dL90*(L90+L89)/2+n91*dL91*(L91+L90)/2+n92*dL92*(L92+L91)/2+n93*dL93*(L93+L92)/2+n94*dL94*(L94+L93)/2+n95*dL95*(L95+L94)/2+n96*dL96*(L96+L95)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c97', '((L97+L96)/2)^3*k_v*Gst97*rho_C/M_C*dL97');
model.variable('var7').descr('r_c97', 'Crystallization reaction rate from interval 97');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73+r_c74+r_c75+r_c76+r_c77+r_c78+r_c79+r_c80+r_c81+r_c82+r_c83+r_c84+r_c85+r_c86+r_c87+r_c88+r_c89+r_c90+r_c91+r_c92+r_c93+r_c94+r_c95+r_c96+r_c97');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73+n74*((L74+L73)/2)^3*k_v*dL74+n75*((L75+L74)/2)^3*k_v*dL75+n76*((L76+L75)/2)^3*k_v*dL76+n77*((L77+L76)/2)^3*k_v*dL77+n78*((L78+L77)/2)^3*k_v*dL78+n79*((L79+L78)/2)^3*k_v*dL79+n80*((L80+L79)/2)^3*k_v*dL80+n81*((L81+L80)/2)^3*k_v*dL81+n82*((L82+L81)/2)^3*k_v*dL82+n83*((L83+L82)/2)^3*k_v*dL83+n84*((L84+L83)/2)^3*k_v*dL84+n85*((L85+L84)/2)^3*k_v*dL85+n86*((L86+L85)/2)^3*k_v*dL86+n87*((L87+L86)/2)^3*k_v*dL87+n88*((L88+L87)/2)^3*k_v*dL88+n89*((L89+L88)/2)^3*k_v*dL89+n90*((L90+L89)/2)^3*k_v*dL90+n91*((L91+L90)/2)^3*k_v*dL91+n92*((L92+L91)/2)^3*k_v*dL92+n93*((L93+L92)/2)^3*k_v*dL93+n94*((L94+L93)/2)^3*k_v*dL94+n95*((L95+L94)/2)^3*k_v*dL95+n96*((L96+L95)/2)^3*k_v*dL96+n97*((L97+L96)/2)^3*k_v*dL97)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73+n74*dL74+n75*dL75+n76*dL76+n77*dL77+n78*dL78+n79*dL79+n80*dL80+n81*dL81+n82*dL82+n83*dL83+n84*dL84+n85*dL85+n86*dL86+n87*dL87+n88*dL88+n89*dL89+n90*dL90+n91*dL91+n92*dL92+n93*dL93+n94*dL94+n95*dL95+n96*dL96+n97*dL97');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2+n74*dL74*(L74+L73)/2+n75*dL75*(L75+L74)/2+n76*dL76*(L76+L75)/2+n77*dL77*(L77+L76)/2+n78*dL78*(L78+L77)/2+n79*dL79*(L79+L78)/2+n80*dL80*(L80+L79)/2+n81*dL81*(L81+L80)/2+n82*dL82*(L82+L81)/2+n83*dL83*(L83+L82)/2+n84*dL84*(L84+L83)/2+n85*dL85*(L85+L84)/2+n86*dL86*(L86+L85)/2+n87*dL87*(L87+L86)/2+n88*dL88*(L88+L87)/2+n89*dL89*(L89+L88)/2+n90*dL90*(L90+L89)/2+n91*dL91*(L91+L90)/2+n92*dL92*(L92+L91)/2+n93*dL93*(L93+L92)/2+n94*dL94*(L94+L93)/2+n95*dL95*(L95+L94)/2+n96*dL96*(L96+L95)/2+n97*dL97*(L97+L96)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c98', '((L98+L97)/2)^3*k_v*Gst98*rho_C/M_C*dL98');
model.variable('var7').descr('r_c98', 'Crystallization reaction rate from interval 98');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73+r_c74+r_c75+r_c76+r_c77+r_c78+r_c79+r_c80+r_c81+r_c82+r_c83+r_c84+r_c85+r_c86+r_c87+r_c88+r_c89+r_c90+r_c91+r_c92+r_c93+r_c94+r_c95+r_c96+r_c97+r_c98');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73+n74*((L74+L73)/2)^3*k_v*dL74+n75*((L75+L74)/2)^3*k_v*dL75+n76*((L76+L75)/2)^3*k_v*dL76+n77*((L77+L76)/2)^3*k_v*dL77+n78*((L78+L77)/2)^3*k_v*dL78+n79*((L79+L78)/2)^3*k_v*dL79+n80*((L80+L79)/2)^3*k_v*dL80+n81*((L81+L80)/2)^3*k_v*dL81+n82*((L82+L81)/2)^3*k_v*dL82+n83*((L83+L82)/2)^3*k_v*dL83+n84*((L84+L83)/2)^3*k_v*dL84+n85*((L85+L84)/2)^3*k_v*dL85+n86*((L86+L85)/2)^3*k_v*dL86+n87*((L87+L86)/2)^3*k_v*dL87+n88*((L88+L87)/2)^3*k_v*dL88+n89*((L89+L88)/2)^3*k_v*dL89+n90*((L90+L89)/2)^3*k_v*dL90+n91*((L91+L90)/2)^3*k_v*dL91+n92*((L92+L91)/2)^3*k_v*dL92+n93*((L93+L92)/2)^3*k_v*dL93+n94*((L94+L93)/2)^3*k_v*dL94+n95*((L95+L94)/2)^3*k_v*dL95+n96*((L96+L95)/2)^3*k_v*dL96+n97*((L97+L96)/2)^3*k_v*dL97+n98*((L98+L97)/2)^3*k_v*dL98)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73+n74*dL74+n75*dL75+n76*dL76+n77*dL77+n78*dL78+n79*dL79+n80*dL80+n81*dL81+n82*dL82+n83*dL83+n84*dL84+n85*dL85+n86*dL86+n87*dL87+n88*dL88+n89*dL89+n90*dL90+n91*dL91+n92*dL92+n93*dL93+n94*dL94+n95*dL95+n96*dL96+n97*dL97+n98*dL98');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2+n74*dL74*(L74+L73)/2+n75*dL75*(L75+L74)/2+n76*dL76*(L76+L75)/2+n77*dL77*(L77+L76)/2+n78*dL78*(L78+L77)/2+n79*dL79*(L79+L78)/2+n80*dL80*(L80+L79)/2+n81*dL81*(L81+L80)/2+n82*dL82*(L82+L81)/2+n83*dL83*(L83+L82)/2+n84*dL84*(L84+L83)/2+n85*dL85*(L85+L84)/2+n86*dL86*(L86+L85)/2+n87*dL87*(L87+L86)/2+n88*dL88*(L88+L87)/2+n89*dL89*(L89+L88)/2+n90*dL90*(L90+L89)/2+n91*dL91*(L91+L90)/2+n92*dL92*(L92+L91)/2+n93*dL93*(L93+L92)/2+n94*dL94*(L94+L93)/2+n95*dL95*(L95+L94)/2+n96*dL96*(L96+L95)/2+n97*dL97*(L97+L96)/2+n98*dL98*(L98+L97)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c99', '((L99+L98)/2)^3*k_v*Gst99*rho_C/M_C*dL99');
model.variable('var7').descr('r_c99', 'Crystallization reaction rate from interval 99');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73+r_c74+r_c75+r_c76+r_c77+r_c78+r_c79+r_c80+r_c81+r_c82+r_c83+r_c84+r_c85+r_c86+r_c87+r_c88+r_c89+r_c90+r_c91+r_c92+r_c93+r_c94+r_c95+r_c96+r_c97+r_c98+r_c99');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73+n74*((L74+L73)/2)^3*k_v*dL74+n75*((L75+L74)/2)^3*k_v*dL75+n76*((L76+L75)/2)^3*k_v*dL76+n77*((L77+L76)/2)^3*k_v*dL77+n78*((L78+L77)/2)^3*k_v*dL78+n79*((L79+L78)/2)^3*k_v*dL79+n80*((L80+L79)/2)^3*k_v*dL80+n81*((L81+L80)/2)^3*k_v*dL81+n82*((L82+L81)/2)^3*k_v*dL82+n83*((L83+L82)/2)^3*k_v*dL83+n84*((L84+L83)/2)^3*k_v*dL84+n85*((L85+L84)/2)^3*k_v*dL85+n86*((L86+L85)/2)^3*k_v*dL86+n87*((L87+L86)/2)^3*k_v*dL87+n88*((L88+L87)/2)^3*k_v*dL88+n89*((L89+L88)/2)^3*k_v*dL89+n90*((L90+L89)/2)^3*k_v*dL90+n91*((L91+L90)/2)^3*k_v*dL91+n92*((L92+L91)/2)^3*k_v*dL92+n93*((L93+L92)/2)^3*k_v*dL93+n94*((L94+L93)/2)^3*k_v*dL94+n95*((L95+L94)/2)^3*k_v*dL95+n96*((L96+L95)/2)^3*k_v*dL96+n97*((L97+L96)/2)^3*k_v*dL97+n98*((L98+L97)/2)^3*k_v*dL98+n99*((L99+L98)/2)^3*k_v*dL99)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73+n74*dL74+n75*dL75+n76*dL76+n77*dL77+n78*dL78+n79*dL79+n80*dL80+n81*dL81+n82*dL82+n83*dL83+n84*dL84+n85*dL85+n86*dL86+n87*dL87+n88*dL88+n89*dL89+n90*dL90+n91*dL91+n92*dL92+n93*dL93+n94*dL94+n95*dL95+n96*dL96+n97*dL97+n98*dL98+n99*dL99');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2+n74*dL74*(L74+L73)/2+n75*dL75*(L75+L74)/2+n76*dL76*(L76+L75)/2+n77*dL77*(L77+L76)/2+n78*dL78*(L78+L77)/2+n79*dL79*(L79+L78)/2+n80*dL80*(L80+L79)/2+n81*dL81*(L81+L80)/2+n82*dL82*(L82+L81)/2+n83*dL83*(L83+L82)/2+n84*dL84*(L84+L83)/2+n85*dL85*(L85+L84)/2+n86*dL86*(L86+L85)/2+n87*dL87*(L87+L86)/2+n88*dL88*(L88+L87)/2+n89*dL89*(L89+L88)/2+n90*dL90*(L90+L89)/2+n91*dL91*(L91+L90)/2+n92*dL92*(L92+L91)/2+n93*dL93*(L93+L92)/2+n94*dL94*(L94+L93)/2+n95*dL95*(L95+L94)/2+n96*dL96*(L96+L95)/2+n97*dL97*(L97+L96)/2+n98*dL98*(L98+L97)/2+n99*dL99*(L99+L98)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable('var7').set('r_c100', '((L100+L99)/2)^3*k_v*Gst100*rho_C/M_C*dL100');
model.variable('var7').descr('r_c100', 'Crystallization reaction rate from interval 100');
model.variable('var7').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30+r_c31+r_c32+r_c33+r_c34+r_c35+r_c36+r_c37+r_c38+r_c39+r_c40+r_c41+r_c42+r_c43+r_c44+r_c45+r_c46+r_c47+r_c48+r_c49+r_c50+r_c51+r_c52+r_c53+r_c54+r_c55+r_c56+r_c57+r_c58+r_c59+r_c60+r_c61+r_c62+r_c63+r_c64+r_c65+r_c66+r_c67+r_c68+r_c69+r_c70+r_c71+r_c72+r_c73+r_c74+r_c75+r_c76+r_c77+r_c78+r_c79+r_c80+r_c81+r_c82+r_c83+r_c84+r_c85+r_c86+r_c87+r_c88+r_c89+r_c90+r_c91+r_c92+r_c93+r_c94+r_c95+r_c96+r_c97+r_c98+r_c99+r_c100');
model.variable('var7').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var8').set('S', '1[1]');
model.variable('var8').descr('S', 'Supersaturation ratio');
model.variable('var8').set('B0', '1[1/m^4/s]');
model.variable('var8').descr('B0', 'Nucleation rate as source of number density');
model.variable('var8').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30+n31*((L31+L30)/2)^3*k_v*dL31+n32*((L32+L31)/2)^3*k_v*dL32+n33*((L33+L32)/2)^3*k_v*dL33+n34*((L34+L33)/2)^3*k_v*dL34+n35*((L35+L34)/2)^3*k_v*dL35+n36*((L36+L35)/2)^3*k_v*dL36+n37*((L37+L36)/2)^3*k_v*dL37+n38*((L38+L37)/2)^3*k_v*dL38+n39*((L39+L38)/2)^3*k_v*dL39+n40*((L40+L39)/2)^3*k_v*dL40+n41*((L41+L40)/2)^3*k_v*dL41+n42*((L42+L41)/2)^3*k_v*dL42+n43*((L43+L42)/2)^3*k_v*dL43+n44*((L44+L43)/2)^3*k_v*dL44+n45*((L45+L44)/2)^3*k_v*dL45+n46*((L46+L45)/2)^3*k_v*dL46+n47*((L47+L46)/2)^3*k_v*dL47+n48*((L48+L47)/2)^3*k_v*dL48+n49*((L49+L48)/2)^3*k_v*dL49+n50*((L50+L49)/2)^3*k_v*dL50+n51*((L51+L50)/2)^3*k_v*dL51+n52*((L52+L51)/2)^3*k_v*dL52+n53*((L53+L52)/2)^3*k_v*dL53+n54*((L54+L53)/2)^3*k_v*dL54+n55*((L55+L54)/2)^3*k_v*dL55+n56*((L56+L55)/2)^3*k_v*dL56+n57*((L57+L56)/2)^3*k_v*dL57+n58*((L58+L57)/2)^3*k_v*dL58+n59*((L59+L58)/2)^3*k_v*dL59+n60*((L60+L59)/2)^3*k_v*dL60+n61*((L61+L60)/2)^3*k_v*dL61+n62*((L62+L61)/2)^3*k_v*dL62+n63*((L63+L62)/2)^3*k_v*dL63+n64*((L64+L63)/2)^3*k_v*dL64+n65*((L65+L64)/2)^3*k_v*dL65+n66*((L66+L65)/2)^3*k_v*dL66+n67*((L67+L66)/2)^3*k_v*dL67+n68*((L68+L67)/2)^3*k_v*dL68+n69*((L69+L68)/2)^3*k_v*dL69+n70*((L70+L69)/2)^3*k_v*dL70+n71*((L71+L70)/2)^3*k_v*dL71+n72*((L72+L71)/2)^3*k_v*dL72+n73*((L73+L72)/2)^3*k_v*dL73+n74*((L74+L73)/2)^3*k_v*dL74+n75*((L75+L74)/2)^3*k_v*dL75+n76*((L76+L75)/2)^3*k_v*dL76+n77*((L77+L76)/2)^3*k_v*dL77+n78*((L78+L77)/2)^3*k_v*dL78+n79*((L79+L78)/2)^3*k_v*dL79+n80*((L80+L79)/2)^3*k_v*dL80+n81*((L81+L80)/2)^3*k_v*dL81+n82*((L82+L81)/2)^3*k_v*dL82+n83*((L83+L82)/2)^3*k_v*dL83+n84*((L84+L83)/2)^3*k_v*dL84+n85*((L85+L84)/2)^3*k_v*dL85+n86*((L86+L85)/2)^3*k_v*dL86+n87*((L87+L86)/2)^3*k_v*dL87+n88*((L88+L87)/2)^3*k_v*dL88+n89*((L89+L88)/2)^3*k_v*dL89+n90*((L90+L89)/2)^3*k_v*dL90+n91*((L91+L90)/2)^3*k_v*dL91+n92*((L92+L91)/2)^3*k_v*dL92+n93*((L93+L92)/2)^3*k_v*dL93+n94*((L94+L93)/2)^3*k_v*dL94+n95*((L95+L94)/2)^3*k_v*dL95+n96*((L96+L95)/2)^3*k_v*dL96+n97*((L97+L96)/2)^3*k_v*dL97+n98*((L98+L97)/2)^3*k_v*dL98+n99*((L99+L98)/2)^3*k_v*dL99+n100*((L100+L99)/2)^3*k_v*dL100)*rho_C');
model.variable('var8').descr('M_c_sum', 'Total crystal mass');
model.variable('var8').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30+n31*dL31+n32*dL32+n33*dL33+n34*dL34+n35*dL35+n36*dL36+n37*dL37+n38*dL38+n39*dL39+n40*dL40+n41*dL41+n42*dL42+n43*dL43+n44*dL44+n45*dL45+n46*dL46+n47*dL47+n48*dL48+n49*dL49+n50*dL50+n51*dL51+n52*dL52+n53*dL53+n54*dL54+n55*dL55+n56*dL56+n57*dL57+n58*dL58+n59*dL59+n60*dL60+n61*dL61+n62*dL62+n63*dL63+n64*dL64+n65*dL65+n66*dL66+n67*dL67+n68*dL68+n69*dL69+n70*dL70+n71*dL71+n72*dL72+n73*dL73+n74*dL74+n75*dL75+n76*dL76+n77*dL77+n78*dL78+n79*dL79+n80*dL80+n81*dL81+n82*dL82+n83*dL83+n84*dL84+n85*dL85+n86*dL86+n87*dL87+n88*dL88+n89*dL89+n90*dL90+n91*dL91+n92*dL92+n93*dL93+n94*dL94+n95*dL95+n96*dL96+n97*dL97+n98*dL98+n99*dL99+n100*dL100');
model.variable('var8').descr('N_c', 'Crystal particle concentration sum');
model.variable('var8').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2+n31*dL31*(L31+L30)/2+n32*dL32*(L32+L31)/2+n33*dL33*(L33+L32)/2+n34*dL34*(L34+L33)/2+n35*dL35*(L35+L34)/2+n36*dL36*(L36+L35)/2+n37*dL37*(L37+L36)/2+n38*dL38*(L38+L37)/2+n39*dL39*(L39+L38)/2+n40*dL40*(L40+L39)/2+n41*dL41*(L41+L40)/2+n42*dL42*(L42+L41)/2+n43*dL43*(L43+L42)/2+n44*dL44*(L44+L43)/2+n45*dL45*(L45+L44)/2+n46*dL46*(L46+L45)/2+n47*dL47*(L47+L46)/2+n48*dL48*(L48+L47)/2+n49*dL49*(L49+L48)/2+n50*dL50*(L50+L49)/2+n51*dL51*(L51+L50)/2+n52*dL52*(L52+L51)/2+n53*dL53*(L53+L52)/2+n54*dL54*(L54+L53)/2+n55*dL55*(L55+L54)/2+n56*dL56*(L56+L55)/2+n57*dL57*(L57+L56)/2+n58*dL58*(L58+L57)/2+n59*dL59*(L59+L58)/2+n60*dL60*(L60+L59)/2+n61*dL61*(L61+L60)/2+n62*dL62*(L62+L61)/2+n63*dL63*(L63+L62)/2+n64*dL64*(L64+L63)/2+n65*dL65*(L65+L64)/2+n66*dL66*(L66+L65)/2+n67*dL67*(L67+L66)/2+n68*dL68*(L68+L67)/2+n69*dL69*(L69+L68)/2+n70*dL70*(L70+L69)/2+n71*dL71*(L71+L70)/2+n72*dL72*(L72+L71)/2+n73*dL73*(L73+L72)/2+n74*dL74*(L74+L73)/2+n75*dL75*(L75+L74)/2+n76*dL76*(L76+L75)/2+n77*dL77*(L77+L76)/2+n78*dL78*(L78+L77)/2+n79*dL79*(L79+L78)/2+n80*dL80*(L80+L79)/2+n81*dL81*(L81+L80)/2+n82*dL82*(L82+L81)/2+n83*dL83*(L83+L82)/2+n84*dL84*(L84+L83)/2+n85*dL85*(L85+L84)/2+n86*dL86*(L86+L85)/2+n87*dL87*(L87+L86)/2+n88*dL88*(L88+L87)/2+n89*dL89*(L89+L88)/2+n90*dL90*(L90+L89)/2+n91*dL91*(L91+L90)/2+n92*dL92*(L92+L91)/2+n93*dL93*(L93+L92)/2+n94*dL94*(L94+L93)/2+n95*dL95*(L95+L94)/2+n96*dL96*(L96+L95)/2+n97*dL97*(L97+L96)/2+n98*dL98*(L98+L97)/2+n99*dL99*(L99+L98)/2+n100*dL100*(L100+L99)/2)/N_c');
model.variable('var8').descr('L_av', 'Average crystal size');
model.variable.create('var9');
model.variable.var9.model('comp1');
model.variable('var9').label('Growth Source Term');

model.func.create('an_phi1', 'Analytic');
model.func('an_phi1').model('comp1');
model.func('an_phi1').label('Limiter');
model.func('an_phi1').set('funcname', 'phi');
model.func('an_phi1').set('args', 'r');
model.func('an_phi1').set('expr', 'max(0,(min(2*r,min(0.3333333333333335+0.6666666666666665*r,2))))');

model.variable('var9').set('Gst1', '-(GL(L1,S)*(n1+0.5*phi((n2-n1+eps)/(n1-0+eps))*(n1-0))-0)/dL1');
model.variable('var9').descr('Gst1', 'Growth rate source term for interval 1');
model.variable('var9').set('Gst2', '-(GL(L2,S)*(n2+0.5*phi((n3-n2+eps)/(n2-n1+eps))*(n2-n1))-GL(L1,S)*(n1+0.5*phi((n2-n1+eps)/(n1-0+eps))*(n1-0)))/dL2');
model.variable('var9').descr('Gst2', 'Growth rate source term for interval 2');
model.variable('var9').set('Gst3', '-(GL(L3,S)*(n3+0.5*phi((n4-n3+eps)/(n3-n2+eps))*(n3-n2))-GL(L2,S)*(n2+0.5*phi((n3-n2+eps)/(n2-n1+eps))*(n2-n1)))/dL3');
model.variable('var9').descr('Gst3', 'Growth rate source term for interval 3');
model.variable('var9').set('Gst4', '-(GL(L4,S)*(n4+0.5*phi((n5-n4+eps)/(n4-n3+eps))*(n4-n3))-GL(L3,S)*(n3+0.5*phi((n4-n3+eps)/(n3-n2+eps))*(n3-n2)))/dL4');
model.variable('var9').descr('Gst4', 'Growth rate source term for interval 4');
model.variable('var9').set('Gst5', '-(GL(L5,S)*(n5+0.5*phi((n6-n5+eps)/(n5-n4+eps))*(n5-n4))-GL(L4,S)*(n4+0.5*phi((n5-n4+eps)/(n4-n3+eps))*(n4-n3)))/dL5');
model.variable('var9').descr('Gst5', 'Growth rate source term for interval 5');
model.variable('var9').set('Gst6', '-(GL(L6,S)*(n6+0.5*phi((n7-n6+eps)/(n6-n5+eps))*(n6-n5))-GL(L5,S)*(n5+0.5*phi((n6-n5+eps)/(n5-n4+eps))*(n5-n4)))/dL6');
model.variable('var9').descr('Gst6', 'Growth rate source term for interval 6');
model.variable('var9').set('Gst7', '-(GL(L7,S)*(n7+0.5*phi((n8-n7+eps)/(n7-n6+eps))*(n7-n6))-GL(L6,S)*(n6+0.5*phi((n7-n6+eps)/(n6-n5+eps))*(n6-n5)))/dL7');
model.variable('var9').descr('Gst7', 'Growth rate source term for interval 7');
model.variable('var9').set('Gst8', '-(GL(L8,S)*(n8+0.5*phi((n9-n8+eps)/(n8-n7+eps))*(n8-n7))-GL(L7,S)*(n7+0.5*phi((n8-n7+eps)/(n7-n6+eps))*(n7-n6)))/dL8');
model.variable('var9').descr('Gst8', 'Growth rate source term for interval 8');
model.variable('var9').set('Gst9', '-(GL(L9,S)*(n9+0.5*phi((n10-n9+eps)/(n9-n8+eps))*(n9-n8))-GL(L8,S)*(n8+0.5*phi((n9-n8+eps)/(n8-n7+eps))*(n8-n7)))/dL9');
model.variable('var9').descr('Gst9', 'Growth rate source term for interval 9');
model.variable('var9').set('Gst10', '-(GL(L10,S)*(n10+0.5*phi((n11-n10+eps)/(n10-n9+eps))*(n10-n9))-GL(L9,S)*(n9+0.5*phi((n10-n9+eps)/(n9-n8+eps))*(n9-n8)))/dL10');
model.variable('var9').descr('Gst10', 'Growth rate source term for interval 10');
model.variable('var9').set('Gst11', '-(GL(L11,S)*(n11+0.5*phi((n12-n11+eps)/(n11-n10+eps))*(n11-n10))-GL(L10,S)*(n10+0.5*phi((n11-n10+eps)/(n10-n9+eps))*(n10-n9)))/dL11');
model.variable('var9').descr('Gst11', 'Growth rate source term for interval 11');
model.variable('var9').set('Gst12', '-(GL(L12,S)*(n12+0.5*phi((n13-n12+eps)/(n12-n11+eps))*(n12-n11))-GL(L11,S)*(n11+0.5*phi((n12-n11+eps)/(n11-n10+eps))*(n11-n10)))/dL12');
model.variable('var9').descr('Gst12', 'Growth rate source term for interval 12');
model.variable('var9').set('Gst13', '-(GL(L13,S)*(n13+0.5*phi((n14-n13+eps)/(n13-n12+eps))*(n13-n12))-GL(L12,S)*(n12+0.5*phi((n13-n12+eps)/(n12-n11+eps))*(n12-n11)))/dL13');
model.variable('var9').descr('Gst13', 'Growth rate source term for interval 13');
model.variable('var9').set('Gst14', '-(GL(L14,S)*(n14+0.5*phi((n15-n14+eps)/(n14-n13+eps))*(n14-n13))-GL(L13,S)*(n13+0.5*phi((n14-n13+eps)/(n13-n12+eps))*(n13-n12)))/dL14');
model.variable('var9').descr('Gst14', 'Growth rate source term for interval 14');
model.variable('var9').set('Gst15', '-(GL(L15,S)*(n15+0.5*phi((n16-n15+eps)/(n15-n14+eps))*(n15-n14))-GL(L14,S)*(n14+0.5*phi((n15-n14+eps)/(n14-n13+eps))*(n14-n13)))/dL15');
model.variable('var9').descr('Gst15', 'Growth rate source term for interval 15');
model.variable('var9').set('Gst16', '-(GL(L16,S)*(n16+0.5*phi((n17-n16+eps)/(n16-n15+eps))*(n16-n15))-GL(L15,S)*(n15+0.5*phi((n16-n15+eps)/(n15-n14+eps))*(n15-n14)))/dL16');
model.variable('var9').descr('Gst16', 'Growth rate source term for interval 16');
model.variable('var9').set('Gst17', '-(GL(L17,S)*(n17+0.5*phi((n18-n17+eps)/(n17-n16+eps))*(n17-n16))-GL(L16,S)*(n16+0.5*phi((n17-n16+eps)/(n16-n15+eps))*(n16-n15)))/dL17');
model.variable('var9').descr('Gst17', 'Growth rate source term for interval 17');
model.variable('var9').set('Gst18', '-(GL(L18,S)*(n18+0.5*phi((n19-n18+eps)/(n18-n17+eps))*(n18-n17))-GL(L17,S)*(n17+0.5*phi((n18-n17+eps)/(n17-n16+eps))*(n17-n16)))/dL18');
model.variable('var9').descr('Gst18', 'Growth rate source term for interval 18');
model.variable('var9').set('Gst19', '-(GL(L19,S)*(n19+0.5*phi((n20-n19+eps)/(n19-n18+eps))*(n19-n18))-GL(L18,S)*(n18+0.5*phi((n19-n18+eps)/(n18-n17+eps))*(n18-n17)))/dL19');
model.variable('var9').descr('Gst19', 'Growth rate source term for interval 19');
model.variable('var9').set('Gst20', '-(GL(L20,S)*(n20+0.5*phi((n21-n20+eps)/(n20-n19+eps))*(n20-n19))-GL(L19,S)*(n19+0.5*phi((n20-n19+eps)/(n19-n18+eps))*(n19-n18)))/dL20');
model.variable('var9').descr('Gst20', 'Growth rate source term for interval 20');
model.variable('var9').set('Gst21', '-(GL(L21,S)*(n21+0.5*phi((n22-n21+eps)/(n21-n20+eps))*(n21-n20))-GL(L20,S)*(n20+0.5*phi((n21-n20+eps)/(n20-n19+eps))*(n20-n19)))/dL21');
model.variable('var9').descr('Gst21', 'Growth rate source term for interval 21');
model.variable('var9').set('Gst22', '-(GL(L22,S)*(n22+0.5*phi((n23-n22+eps)/(n22-n21+eps))*(n22-n21))-GL(L21,S)*(n21+0.5*phi((n22-n21+eps)/(n21-n20+eps))*(n21-n20)))/dL22');
model.variable('var9').descr('Gst22', 'Growth rate source term for interval 22');
model.variable('var9').set('Gst23', '-(GL(L23,S)*(n23+0.5*phi((n24-n23+eps)/(n23-n22+eps))*(n23-n22))-GL(L22,S)*(n22+0.5*phi((n23-n22+eps)/(n22-n21+eps))*(n22-n21)))/dL23');
model.variable('var9').descr('Gst23', 'Growth rate source term for interval 23');
model.variable('var9').set('Gst24', '-(GL(L24,S)*(n24+0.5*phi((n25-n24+eps)/(n24-n23+eps))*(n24-n23))-GL(L23,S)*(n23+0.5*phi((n24-n23+eps)/(n23-n22+eps))*(n23-n22)))/dL24');
model.variable('var9').descr('Gst24', 'Growth rate source term for interval 24');
model.variable('var9').set('Gst25', '-(GL(L25,S)*(n25+0.5*phi((n26-n25+eps)/(n25-n24+eps))*(n25-n24))-GL(L24,S)*(n24+0.5*phi((n25-n24+eps)/(n24-n23+eps))*(n24-n23)))/dL25');
model.variable('var9').descr('Gst25', 'Growth rate source term for interval 25');
model.variable('var9').set('Gst26', '-(GL(L26,S)*(n26+0.5*phi((n27-n26+eps)/(n26-n25+eps))*(n26-n25))-GL(L25,S)*(n25+0.5*phi((n26-n25+eps)/(n25-n24+eps))*(n25-n24)))/dL26');
model.variable('var9').descr('Gst26', 'Growth rate source term for interval 26');
model.variable('var9').set('Gst27', '-(GL(L27,S)*(n27+0.5*phi((n28-n27+eps)/(n27-n26+eps))*(n27-n26))-GL(L26,S)*(n26+0.5*phi((n27-n26+eps)/(n26-n25+eps))*(n26-n25)))/dL27');
model.variable('var9').descr('Gst27', 'Growth rate source term for interval 27');
model.variable('var9').set('Gst28', '-(GL(L28,S)*(n28+0.5*phi((n29-n28+eps)/(n28-n27+eps))*(n28-n27))-GL(L27,S)*(n27+0.5*phi((n28-n27+eps)/(n27-n26+eps))*(n27-n26)))/dL28');
model.variable('var9').descr('Gst28', 'Growth rate source term for interval 28');
model.variable('var9').set('Gst29', '-(GL(L29,S)*(n29+0.5*phi((n30-n29+eps)/(n29-n28+eps))*(n29-n28))-GL(L28,S)*(n28+0.5*phi((n29-n28+eps)/(n28-n27+eps))*(n28-n27)))/dL29');
model.variable('var9').descr('Gst29', 'Growth rate source term for interval 29');
model.variable('var9').set('Gst30', '-(GL(L30,S)*(n30+0.5*phi((n31-n30+eps)/(n30-n29+eps))*(n30-n29))-GL(L29,S)*(n29+0.5*phi((n30-n29+eps)/(n29-n28+eps))*(n29-n28)))/dL30');
model.variable('var9').descr('Gst30', 'Growth rate source term for interval 30');
model.variable('var9').set('Gst31', '-(GL(L31,S)*(n31+0.5*phi((n32-n31+eps)/(n31-n30+eps))*(n31-n30))-GL(L30,S)*(n30+0.5*phi((n31-n30+eps)/(n30-n29+eps))*(n30-n29)))/dL31');
model.variable('var9').descr('Gst31', 'Growth rate source term for interval 31');
model.variable('var9').set('Gst32', '-(GL(L32,S)*(n32+0.5*phi((n33-n32+eps)/(n32-n31+eps))*(n32-n31))-GL(L31,S)*(n31+0.5*phi((n32-n31+eps)/(n31-n30+eps))*(n31-n30)))/dL32');
model.variable('var9').descr('Gst32', 'Growth rate source term for interval 32');
model.variable('var9').set('Gst33', '-(GL(L33,S)*(n33+0.5*phi((n34-n33+eps)/(n33-n32+eps))*(n33-n32))-GL(L32,S)*(n32+0.5*phi((n33-n32+eps)/(n32-n31+eps))*(n32-n31)))/dL33');
model.variable('var9').descr('Gst33', 'Growth rate source term for interval 33');
model.variable('var9').set('Gst34', '-(GL(L34,S)*(n34+0.5*phi((n35-n34+eps)/(n34-n33+eps))*(n34-n33))-GL(L33,S)*(n33+0.5*phi((n34-n33+eps)/(n33-n32+eps))*(n33-n32)))/dL34');
model.variable('var9').descr('Gst34', 'Growth rate source term for interval 34');
model.variable('var9').set('Gst35', '-(GL(L35,S)*(n35+0.5*phi((n36-n35+eps)/(n35-n34+eps))*(n35-n34))-GL(L34,S)*(n34+0.5*phi((n35-n34+eps)/(n34-n33+eps))*(n34-n33)))/dL35');
model.variable('var9').descr('Gst35', 'Growth rate source term for interval 35');
model.variable('var9').set('Gst36', '-(GL(L36,S)*(n36+0.5*phi((n37-n36+eps)/(n36-n35+eps))*(n36-n35))-GL(L35,S)*(n35+0.5*phi((n36-n35+eps)/(n35-n34+eps))*(n35-n34)))/dL36');
model.variable('var9').descr('Gst36', 'Growth rate source term for interval 36');
model.variable('var9').set('Gst37', '-(GL(L37,S)*(n37+0.5*phi((n38-n37+eps)/(n37-n36+eps))*(n37-n36))-GL(L36,S)*(n36+0.5*phi((n37-n36+eps)/(n36-n35+eps))*(n36-n35)))/dL37');
model.variable('var9').descr('Gst37', 'Growth rate source term for interval 37');
model.variable('var9').set('Gst38', '-(GL(L38,S)*(n38+0.5*phi((n39-n38+eps)/(n38-n37+eps))*(n38-n37))-GL(L37,S)*(n37+0.5*phi((n38-n37+eps)/(n37-n36+eps))*(n37-n36)))/dL38');
model.variable('var9').descr('Gst38', 'Growth rate source term for interval 38');
model.variable('var9').set('Gst39', '-(GL(L39,S)*(n39+0.5*phi((n40-n39+eps)/(n39-n38+eps))*(n39-n38))-GL(L38,S)*(n38+0.5*phi((n39-n38+eps)/(n38-n37+eps))*(n38-n37)))/dL39');
model.variable('var9').descr('Gst39', 'Growth rate source term for interval 39');
model.variable('var9').set('Gst40', '-(GL(L40,S)*(n40+0.5*phi((n41-n40+eps)/(n40-n39+eps))*(n40-n39))-GL(L39,S)*(n39+0.5*phi((n40-n39+eps)/(n39-n38+eps))*(n39-n38)))/dL40');
model.variable('var9').descr('Gst40', 'Growth rate source term for interval 40');
model.variable('var9').set('Gst41', '-(GL(L41,S)*(n41+0.5*phi((n42-n41+eps)/(n41-n40+eps))*(n41-n40))-GL(L40,S)*(n40+0.5*phi((n41-n40+eps)/(n40-n39+eps))*(n40-n39)))/dL41');
model.variable('var9').descr('Gst41', 'Growth rate source term for interval 41');
model.variable('var9').set('Gst42', '-(GL(L42,S)*(n42+0.5*phi((n43-n42+eps)/(n42-n41+eps))*(n42-n41))-GL(L41,S)*(n41+0.5*phi((n42-n41+eps)/(n41-n40+eps))*(n41-n40)))/dL42');
model.variable('var9').descr('Gst42', 'Growth rate source term for interval 42');
model.variable('var9').set('Gst43', '-(GL(L43,S)*(n43+0.5*phi((n44-n43+eps)/(n43-n42+eps))*(n43-n42))-GL(L42,S)*(n42+0.5*phi((n43-n42+eps)/(n42-n41+eps))*(n42-n41)))/dL43');
model.variable('var9').descr('Gst43', 'Growth rate source term for interval 43');
model.variable('var9').set('Gst44', '-(GL(L44,S)*(n44+0.5*phi((n45-n44+eps)/(n44-n43+eps))*(n44-n43))-GL(L43,S)*(n43+0.5*phi((n44-n43+eps)/(n43-n42+eps))*(n43-n42)))/dL44');
model.variable('var9').descr('Gst44', 'Growth rate source term for interval 44');
model.variable('var9').set('Gst45', '-(GL(L45,S)*(n45+0.5*phi((n46-n45+eps)/(n45-n44+eps))*(n45-n44))-GL(L44,S)*(n44+0.5*phi((n45-n44+eps)/(n44-n43+eps))*(n44-n43)))/dL45');
model.variable('var9').descr('Gst45', 'Growth rate source term for interval 45');
model.variable('var9').set('Gst46', '-(GL(L46,S)*(n46+0.5*phi((n47-n46+eps)/(n46-n45+eps))*(n46-n45))-GL(L45,S)*(n45+0.5*phi((n46-n45+eps)/(n45-n44+eps))*(n45-n44)))/dL46');
model.variable('var9').descr('Gst46', 'Growth rate source term for interval 46');
model.variable('var9').set('Gst47', '-(GL(L47,S)*(n47+0.5*phi((n48-n47+eps)/(n47-n46+eps))*(n47-n46))-GL(L46,S)*(n46+0.5*phi((n47-n46+eps)/(n46-n45+eps))*(n46-n45)))/dL47');
model.variable('var9').descr('Gst47', 'Growth rate source term for interval 47');
model.variable('var9').set('Gst48', '-(GL(L48,S)*(n48+0.5*phi((n49-n48+eps)/(n48-n47+eps))*(n48-n47))-GL(L47,S)*(n47+0.5*phi((n48-n47+eps)/(n47-n46+eps))*(n47-n46)))/dL48');
model.variable('var9').descr('Gst48', 'Growth rate source term for interval 48');
model.variable('var9').set('Gst49', '-(GL(L49,S)*(n49+0.5*phi((n50-n49+eps)/(n49-n48+eps))*(n49-n48))-GL(L48,S)*(n48+0.5*phi((n49-n48+eps)/(n48-n47+eps))*(n48-n47)))/dL49');
model.variable('var9').descr('Gst49', 'Growth rate source term for interval 49');
model.variable('var9').set('Gst50', '-(GL(L50,S)*(n50+0.5*phi((n51-n50+eps)/(n50-n49+eps))*(n50-n49))-GL(L49,S)*(n49+0.5*phi((n50-n49+eps)/(n49-n48+eps))*(n49-n48)))/dL50');
model.variable('var9').descr('Gst50', 'Growth rate source term for interval 50');
model.variable('var9').set('Gst51', '-(GL(L51,S)*(n51+0.5*phi((n52-n51+eps)/(n51-n50+eps))*(n51-n50))-GL(L50,S)*(n50+0.5*phi((n51-n50+eps)/(n50-n49+eps))*(n50-n49)))/dL51');
model.variable('var9').descr('Gst51', 'Growth rate source term for interval 51');
model.variable('var9').set('Gst52', '-(GL(L52,S)*(n52+0.5*phi((n53-n52+eps)/(n52-n51+eps))*(n52-n51))-GL(L51,S)*(n51+0.5*phi((n52-n51+eps)/(n51-n50+eps))*(n51-n50)))/dL52');
model.variable('var9').descr('Gst52', 'Growth rate source term for interval 52');
model.variable('var9').set('Gst53', '-(GL(L53,S)*(n53+0.5*phi((n54-n53+eps)/(n53-n52+eps))*(n53-n52))-GL(L52,S)*(n52+0.5*phi((n53-n52+eps)/(n52-n51+eps))*(n52-n51)))/dL53');
model.variable('var9').descr('Gst53', 'Growth rate source term for interval 53');
model.variable('var9').set('Gst54', '-(GL(L54,S)*(n54+0.5*phi((n55-n54+eps)/(n54-n53+eps))*(n54-n53))-GL(L53,S)*(n53+0.5*phi((n54-n53+eps)/(n53-n52+eps))*(n53-n52)))/dL54');
model.variable('var9').descr('Gst54', 'Growth rate source term for interval 54');
model.variable('var9').set('Gst55', '-(GL(L55,S)*(n55+0.5*phi((n56-n55+eps)/(n55-n54+eps))*(n55-n54))-GL(L54,S)*(n54+0.5*phi((n55-n54+eps)/(n54-n53+eps))*(n54-n53)))/dL55');
model.variable('var9').descr('Gst55', 'Growth rate source term for interval 55');
model.variable('var9').set('Gst56', '-(GL(L56,S)*(n56+0.5*phi((n57-n56+eps)/(n56-n55+eps))*(n56-n55))-GL(L55,S)*(n55+0.5*phi((n56-n55+eps)/(n55-n54+eps))*(n55-n54)))/dL56');
model.variable('var9').descr('Gst56', 'Growth rate source term for interval 56');
model.variable('var9').set('Gst57', '-(GL(L57,S)*(n57+0.5*phi((n58-n57+eps)/(n57-n56+eps))*(n57-n56))-GL(L56,S)*(n56+0.5*phi((n57-n56+eps)/(n56-n55+eps))*(n56-n55)))/dL57');
model.variable('var9').descr('Gst57', 'Growth rate source term for interval 57');
model.variable('var9').set('Gst58', '-(GL(L58,S)*(n58+0.5*phi((n59-n58+eps)/(n58-n57+eps))*(n58-n57))-GL(L57,S)*(n57+0.5*phi((n58-n57+eps)/(n57-n56+eps))*(n57-n56)))/dL58');
model.variable('var9').descr('Gst58', 'Growth rate source term for interval 58');
model.variable('var9').set('Gst59', '-(GL(L59,S)*(n59+0.5*phi((n60-n59+eps)/(n59-n58+eps))*(n59-n58))-GL(L58,S)*(n58+0.5*phi((n59-n58+eps)/(n58-n57+eps))*(n58-n57)))/dL59');
model.variable('var9').descr('Gst59', 'Growth rate source term for interval 59');
model.variable('var9').set('Gst60', '-(GL(L60,S)*(n60+0.5*phi((n61-n60+eps)/(n60-n59+eps))*(n60-n59))-GL(L59,S)*(n59+0.5*phi((n60-n59+eps)/(n59-n58+eps))*(n59-n58)))/dL60');
model.variable('var9').descr('Gst60', 'Growth rate source term for interval 60');
model.variable('var9').set('Gst61', '-(GL(L61,S)*(n61+0.5*phi((n62-n61+eps)/(n61-n60+eps))*(n61-n60))-GL(L60,S)*(n60+0.5*phi((n61-n60+eps)/(n60-n59+eps))*(n60-n59)))/dL61');
model.variable('var9').descr('Gst61', 'Growth rate source term for interval 61');
model.variable('var9').set('Gst62', '-(GL(L62,S)*(n62+0.5*phi((n63-n62+eps)/(n62-n61+eps))*(n62-n61))-GL(L61,S)*(n61+0.5*phi((n62-n61+eps)/(n61-n60+eps))*(n61-n60)))/dL62');
model.variable('var9').descr('Gst62', 'Growth rate source term for interval 62');
model.variable('var9').set('Gst63', '-(GL(L63,S)*(n63+0.5*phi((n64-n63+eps)/(n63-n62+eps))*(n63-n62))-GL(L62,S)*(n62+0.5*phi((n63-n62+eps)/(n62-n61+eps))*(n62-n61)))/dL63');
model.variable('var9').descr('Gst63', 'Growth rate source term for interval 63');
model.variable('var9').set('Gst64', '-(GL(L64,S)*(n64+0.5*phi((n65-n64+eps)/(n64-n63+eps))*(n64-n63))-GL(L63,S)*(n63+0.5*phi((n64-n63+eps)/(n63-n62+eps))*(n63-n62)))/dL64');
model.variable('var9').descr('Gst64', 'Growth rate source term for interval 64');
model.variable('var9').set('Gst65', '-(GL(L65,S)*(n65+0.5*phi((n66-n65+eps)/(n65-n64+eps))*(n65-n64))-GL(L64,S)*(n64+0.5*phi((n65-n64+eps)/(n64-n63+eps))*(n64-n63)))/dL65');
model.variable('var9').descr('Gst65', 'Growth rate source term for interval 65');
model.variable('var9').set('Gst66', '-(GL(L66,S)*(n66+0.5*phi((n67-n66+eps)/(n66-n65+eps))*(n66-n65))-GL(L65,S)*(n65+0.5*phi((n66-n65+eps)/(n65-n64+eps))*(n65-n64)))/dL66');
model.variable('var9').descr('Gst66', 'Growth rate source term for interval 66');
model.variable('var9').set('Gst67', '-(GL(L67,S)*(n67+0.5*phi((n68-n67+eps)/(n67-n66+eps))*(n67-n66))-GL(L66,S)*(n66+0.5*phi((n67-n66+eps)/(n66-n65+eps))*(n66-n65)))/dL67');
model.variable('var9').descr('Gst67', 'Growth rate source term for interval 67');
model.variable('var9').set('Gst68', '-(GL(L68,S)*(n68+0.5*phi((n69-n68+eps)/(n68-n67+eps))*(n68-n67))-GL(L67,S)*(n67+0.5*phi((n68-n67+eps)/(n67-n66+eps))*(n67-n66)))/dL68');
model.variable('var9').descr('Gst68', 'Growth rate source term for interval 68');
model.variable('var9').set('Gst69', '-(GL(L69,S)*(n69+0.5*phi((n70-n69+eps)/(n69-n68+eps))*(n69-n68))-GL(L68,S)*(n68+0.5*phi((n69-n68+eps)/(n68-n67+eps))*(n68-n67)))/dL69');
model.variable('var9').descr('Gst69', 'Growth rate source term for interval 69');
model.variable('var9').set('Gst70', '-(GL(L70,S)*(n70+0.5*phi((n71-n70+eps)/(n70-n69+eps))*(n70-n69))-GL(L69,S)*(n69+0.5*phi((n70-n69+eps)/(n69-n68+eps))*(n69-n68)))/dL70');
model.variable('var9').descr('Gst70', 'Growth rate source term for interval 70');
model.variable('var9').set('Gst71', '-(GL(L71,S)*(n71+0.5*phi((n72-n71+eps)/(n71-n70+eps))*(n71-n70))-GL(L70,S)*(n70+0.5*phi((n71-n70+eps)/(n70-n69+eps))*(n70-n69)))/dL71');
model.variable('var9').descr('Gst71', 'Growth rate source term for interval 71');
model.variable('var9').set('Gst72', '-(GL(L72,S)*(n72+0.5*phi((n73-n72+eps)/(n72-n71+eps))*(n72-n71))-GL(L71,S)*(n71+0.5*phi((n72-n71+eps)/(n71-n70+eps))*(n71-n70)))/dL72');
model.variable('var9').descr('Gst72', 'Growth rate source term for interval 72');
model.variable('var9').set('Gst73', '-(GL(L73,S)*(n73+0.5*phi((n74-n73+eps)/(n73-n72+eps))*(n73-n72))-GL(L72,S)*(n72+0.5*phi((n73-n72+eps)/(n72-n71+eps))*(n72-n71)))/dL73');
model.variable('var9').descr('Gst73', 'Growth rate source term for interval 73');
model.variable('var9').set('Gst74', '-(GL(L74,S)*(n74+0.5*phi((n75-n74+eps)/(n74-n73+eps))*(n74-n73))-GL(L73,S)*(n73+0.5*phi((n74-n73+eps)/(n73-n72+eps))*(n73-n72)))/dL74');
model.variable('var9').descr('Gst74', 'Growth rate source term for interval 74');
model.variable('var9').set('Gst75', '-(GL(L75,S)*(n75+0.5*phi((n76-n75+eps)/(n75-n74+eps))*(n75-n74))-GL(L74,S)*(n74+0.5*phi((n75-n74+eps)/(n74-n73+eps))*(n74-n73)))/dL75');
model.variable('var9').descr('Gst75', 'Growth rate source term for interval 75');
model.variable('var9').set('Gst76', '-(GL(L76,S)*(n76+0.5*phi((n77-n76+eps)/(n76-n75+eps))*(n76-n75))-GL(L75,S)*(n75+0.5*phi((n76-n75+eps)/(n75-n74+eps))*(n75-n74)))/dL76');
model.variable('var9').descr('Gst76', 'Growth rate source term for interval 76');
model.variable('var9').set('Gst77', '-(GL(L77,S)*(n77+0.5*phi((n78-n77+eps)/(n77-n76+eps))*(n77-n76))-GL(L76,S)*(n76+0.5*phi((n77-n76+eps)/(n76-n75+eps))*(n76-n75)))/dL77');
model.variable('var9').descr('Gst77', 'Growth rate source term for interval 77');
model.variable('var9').set('Gst78', '-(GL(L78,S)*(n78+0.5*phi((n79-n78+eps)/(n78-n77+eps))*(n78-n77))-GL(L77,S)*(n77+0.5*phi((n78-n77+eps)/(n77-n76+eps))*(n77-n76)))/dL78');
model.variable('var9').descr('Gst78', 'Growth rate source term for interval 78');
model.variable('var9').set('Gst79', '-(GL(L79,S)*(n79+0.5*phi((n80-n79+eps)/(n79-n78+eps))*(n79-n78))-GL(L78,S)*(n78+0.5*phi((n79-n78+eps)/(n78-n77+eps))*(n78-n77)))/dL79');
model.variable('var9').descr('Gst79', 'Growth rate source term for interval 79');
model.variable('var9').set('Gst80', '-(GL(L80,S)*(n80+0.5*phi((n81-n80+eps)/(n80-n79+eps))*(n80-n79))-GL(L79,S)*(n79+0.5*phi((n80-n79+eps)/(n79-n78+eps))*(n79-n78)))/dL80');
model.variable('var9').descr('Gst80', 'Growth rate source term for interval 80');
model.variable('var9').set('Gst81', '-(GL(L81,S)*(n81+0.5*phi((n82-n81+eps)/(n81-n80+eps))*(n81-n80))-GL(L80,S)*(n80+0.5*phi((n81-n80+eps)/(n80-n79+eps))*(n80-n79)))/dL81');
model.variable('var9').descr('Gst81', 'Growth rate source term for interval 81');
model.variable('var9').set('Gst82', '-(GL(L82,S)*(n82+0.5*phi((n83-n82+eps)/(n82-n81+eps))*(n82-n81))-GL(L81,S)*(n81+0.5*phi((n82-n81+eps)/(n81-n80+eps))*(n81-n80)))/dL82');
model.variable('var9').descr('Gst82', 'Growth rate source term for interval 82');
model.variable('var9').set('Gst83', '-(GL(L83,S)*(n83+0.5*phi((n84-n83+eps)/(n83-n82+eps))*(n83-n82))-GL(L82,S)*(n82+0.5*phi((n83-n82+eps)/(n82-n81+eps))*(n82-n81)))/dL83');
model.variable('var9').descr('Gst83', 'Growth rate source term for interval 83');
model.variable('var9').set('Gst84', '-(GL(L84,S)*(n84+0.5*phi((n85-n84+eps)/(n84-n83+eps))*(n84-n83))-GL(L83,S)*(n83+0.5*phi((n84-n83+eps)/(n83-n82+eps))*(n83-n82)))/dL84');
model.variable('var9').descr('Gst84', 'Growth rate source term for interval 84');
model.variable('var9').set('Gst85', '-(GL(L85,S)*(n85+0.5*phi((n86-n85+eps)/(n85-n84+eps))*(n85-n84))-GL(L84,S)*(n84+0.5*phi((n85-n84+eps)/(n84-n83+eps))*(n84-n83)))/dL85');
model.variable('var9').descr('Gst85', 'Growth rate source term for interval 85');
model.variable('var9').set('Gst86', '-(GL(L86,S)*(n86+0.5*phi((n87-n86+eps)/(n86-n85+eps))*(n86-n85))-GL(L85,S)*(n85+0.5*phi((n86-n85+eps)/(n85-n84+eps))*(n85-n84)))/dL86');
model.variable('var9').descr('Gst86', 'Growth rate source term for interval 86');
model.variable('var9').set('Gst87', '-(GL(L87,S)*(n87+0.5*phi((n88-n87+eps)/(n87-n86+eps))*(n87-n86))-GL(L86,S)*(n86+0.5*phi((n87-n86+eps)/(n86-n85+eps))*(n86-n85)))/dL87');
model.variable('var9').descr('Gst87', 'Growth rate source term for interval 87');
model.variable('var9').set('Gst88', '-(GL(L88,S)*(n88+0.5*phi((n89-n88+eps)/(n88-n87+eps))*(n88-n87))-GL(L87,S)*(n87+0.5*phi((n88-n87+eps)/(n87-n86+eps))*(n87-n86)))/dL88');
model.variable('var9').descr('Gst88', 'Growth rate source term for interval 88');
model.variable('var9').set('Gst89', '-(GL(L89,S)*(n89+0.5*phi((n90-n89+eps)/(n89-n88+eps))*(n89-n88))-GL(L88,S)*(n88+0.5*phi((n89-n88+eps)/(n88-n87+eps))*(n88-n87)))/dL89');
model.variable('var9').descr('Gst89', 'Growth rate source term for interval 89');
model.variable('var9').set('Gst90', '-(GL(L90,S)*(n90+0.5*phi((n91-n90+eps)/(n90-n89+eps))*(n90-n89))-GL(L89,S)*(n89+0.5*phi((n90-n89+eps)/(n89-n88+eps))*(n89-n88)))/dL90');
model.variable('var9').descr('Gst90', 'Growth rate source term for interval 90');
model.variable('var9').set('Gst91', '-(GL(L91,S)*(n91+0.5*phi((n92-n91+eps)/(n91-n90+eps))*(n91-n90))-GL(L90,S)*(n90+0.5*phi((n91-n90+eps)/(n90-n89+eps))*(n90-n89)))/dL91');
model.variable('var9').descr('Gst91', 'Growth rate source term for interval 91');
model.variable('var9').set('Gst92', '-(GL(L92,S)*(n92+0.5*phi((n93-n92+eps)/(n92-n91+eps))*(n92-n91))-GL(L91,S)*(n91+0.5*phi((n92-n91+eps)/(n91-n90+eps))*(n91-n90)))/dL92');
model.variable('var9').descr('Gst92', 'Growth rate source term for interval 92');
model.variable('var9').set('Gst93', '-(GL(L93,S)*(n93+0.5*phi((n94-n93+eps)/(n93-n92+eps))*(n93-n92))-GL(L92,S)*(n92+0.5*phi((n93-n92+eps)/(n92-n91+eps))*(n92-n91)))/dL93');
model.variable('var9').descr('Gst93', 'Growth rate source term for interval 93');
model.variable('var9').set('Gst94', '-(GL(L94,S)*(n94+0.5*phi((n95-n94+eps)/(n94-n93+eps))*(n94-n93))-GL(L93,S)*(n93+0.5*phi((n94-n93+eps)/(n93-n92+eps))*(n93-n92)))/dL94');
model.variable('var9').descr('Gst94', 'Growth rate source term for interval 94');
model.variable('var9').set('Gst95', '-(GL(L95,S)*(n95+0.5*phi((n96-n95+eps)/(n95-n94+eps))*(n95-n94))-GL(L94,S)*(n94+0.5*phi((n95-n94+eps)/(n94-n93+eps))*(n94-n93)))/dL95');
model.variable('var9').descr('Gst95', 'Growth rate source term for interval 95');
model.variable('var9').set('Gst96', '-(GL(L96,S)*(n96+0.5*phi((n97-n96+eps)/(n96-n95+eps))*(n96-n95))-GL(L95,S)*(n95+0.5*phi((n96-n95+eps)/(n95-n94+eps))*(n95-n94)))/dL96');
model.variable('var9').descr('Gst96', 'Growth rate source term for interval 96');
model.variable('var9').set('Gst97', '-(GL(L97,S)*(n97+0.5*phi((n98-n97+eps)/(n97-n96+eps))*(n97-n96))-GL(L96,S)*(n96+0.5*phi((n97-n96+eps)/(n96-n95+eps))*(n96-n95)))/dL97');
model.variable('var9').descr('Gst97', 'Growth rate source term for interval 97');
model.variable('var9').set('Gst98', '-(GL(L98,S)*(n98+0.5*phi((n99-n98+eps)/(n98-n97+eps))*(n98-n97))-GL(L97,S)*(n97+0.5*phi((n98-n97+eps)/(n97-n96+eps))*(n97-n96)))/dL98');
model.variable('var9').descr('Gst98', 'Growth rate source term for interval 98');
model.variable('var9').set('Gst99', '-(GL(L99,S)*(n99+0.5*phi((n100-n99+eps)/(n99-n98+eps))*(n99-n98))-GL(L98,S)*(n98+0.5*phi((n99-n98+eps)/(n98-n97+eps))*(n98-n97)))/dL99');
model.variable('var9').descr('Gst99', 'Growth rate source term for interval 99');
model.variable('var9').set('Gst100', '-(GL(L100,S)*(n100+0.5*phi((n100-n100+eps)/(n100-n99+eps))*(n100-n99))-GL(L99,S)*(n99+0.5*phi((n100-n99+eps)/(n99-n98+eps))*(n99-n98)))/dL100');
model.variable('var9').descr('Gst100', 'Growth rate source term for interval 100');

model.physics.create('ge1', 'GlobalEquations');
model.physics('ge1').model('comp1');
model.physics('ge1').feature('ge1').set('fieldName', 'n');
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n1', 0, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n1t-B0-Gst1', 0, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 0, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 0, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 1', 0, 0);
model.physics('ge1').feature('ge1').set('CustomDependentVariableUnit', '1');
model.physics('ge1').feature('ge1').set('DependentVariableQuantity', 'none');
model.physics('ge1').feature('ge1').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('ge1').feature('ge1').set('CustomSourceTermUnit', '1');
model.physics('ge1').feature('ge1').set('SourceTermQuantity', 'none');
model.physics('ge1').feature('ge1').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n2', 1, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n2t-Gst2', 1, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 1, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 1, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 2', 1, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n3', 2, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n3t-Gst3', 2, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 2, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 2, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 3', 2, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n4', 3, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n4t-Gst4', 3, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 3, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 3, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 4', 3, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n5', 4, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n5t-Gst5', 4, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 4, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 4, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 5', 4, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n6', 5, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n6t-Gst6', 5, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 5, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 5, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 6', 5, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n7', 6, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n7t-Gst7', 6, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 6, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 6, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 7', 6, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n8', 7, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n8t-Gst8', 7, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 7, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 7, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 8', 7, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n9', 8, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n9t-Gst9', 8, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 8, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 8, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 9', 8, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n10', 9, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n10t-Gst10', 9, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 9, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 9, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 10', 9, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n11', 10, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n11t-Gst11', 10, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 10, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 10, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 11', 10, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n12', 11, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n12t-Gst12', 11, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 11, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 11, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 12', 11, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n13', 12, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n13t-Gst13', 12, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 12, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 12, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 13', 12, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n14', 13, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n14t-Gst14', 13, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 13, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 13, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 14', 13, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n15', 14, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n15t-Gst15', 14, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 14, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 14, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 15', 14, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n16', 15, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n16t-Gst16', 15, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 15, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 15, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 16', 15, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n17', 16, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n17t-Gst17', 16, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 16, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 16, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 17', 16, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n18', 17, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n18t-Gst18', 17, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 17, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 17, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 18', 17, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n19', 18, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n19t-Gst19', 18, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 18, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 18, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 19', 18, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n20', 19, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n20t-Gst20', 19, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 19, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 19, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 20', 19, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n21', 20, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n21t-Gst21', 20, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 20, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 20, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 21', 20, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n22', 21, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n22t-Gst22', 21, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 21, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 21, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 22', 21, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n23', 22, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n23t-Gst23', 22, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 22, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 22, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 23', 22, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n24', 23, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n24t-Gst24', 23, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 23, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 23, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 24', 23, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n25', 24, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n25t-Gst25', 24, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 24, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 24, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 25', 24, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n26', 25, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n26t-Gst26', 25, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 25, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 25, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 26', 25, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n27', 26, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n27t-Gst27', 26, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 26, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 26, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 27', 26, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n28', 27, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n28t-Gst28', 27, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 27, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 27, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 28', 27, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n29', 28, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n29t-Gst29', 28, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 28, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 28, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 29', 28, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n30', 29, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n30t-Gst30', 29, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 29, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 29, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 30', 29, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n31', 30, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n31t-Gst31', 30, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 30, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 30, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 31', 30, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n32', 31, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n32t-Gst32', 31, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 31, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 31, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 32', 31, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n33', 32, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n33t-Gst33', 32, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 32, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 32, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 33', 32, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n34', 33, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n34t-Gst34', 33, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 33, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 33, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 34', 33, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n35', 34, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n35t-Gst35', 34, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 34, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 34, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 35', 34, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n36', 35, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n36t-Gst36', 35, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 35, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 35, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 36', 35, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n37', 36, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n37t-Gst37', 36, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 36, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 36, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 37', 36, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n38', 37, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n38t-Gst38', 37, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 37, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 37, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 38', 37, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n39', 38, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n39t-Gst39', 38, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 38, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 38, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 39', 38, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n40', 39, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n40t-Gst40', 39, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 39, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 39, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 40', 39, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n41', 40, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n41t-Gst41', 40, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 40, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 40, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 41', 40, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n42', 41, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n42t-Gst42', 41, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 41, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 41, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 42', 41, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n43', 42, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n43t-Gst43', 42, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 42, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 42, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 43', 42, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n44', 43, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n44t-Gst44', 43, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 43, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 43, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 44', 43, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n45', 44, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n45t-Gst45', 44, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 44, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 44, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 45', 44, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n46', 45, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n46t-Gst46', 45, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 45, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 45, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 46', 45, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n47', 46, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n47t-Gst47', 46, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 46, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 46, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 47', 46, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n48', 47, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n48t-Gst48', 47, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 47, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 47, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 48', 47, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n49', 48, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n49t-Gst49', 48, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 48, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 48, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 49', 48, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n50', 49, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n50t-Gst50', 49, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 49, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 49, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 50', 49, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n51', 50, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n51t-Gst51', 50, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 50, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 50, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 51', 50, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n52', 51, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n52t-Gst52', 51, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 51, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 51, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 52', 51, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n53', 52, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n53t-Gst53', 52, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 52, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 52, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 53', 52, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n54', 53, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n54t-Gst54', 53, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 53, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 53, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 54', 53, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n55', 54, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n55t-Gst55', 54, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 54, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 54, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 55', 54, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n56', 55, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n56t-Gst56', 55, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 55, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 55, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 56', 55, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n57', 56, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n57t-Gst57', 56, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 56, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 56, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 57', 56, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n58', 57, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n58t-Gst58', 57, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 57, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 57, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 58', 57, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n59', 58, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n59t-Gst59', 58, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 58, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 58, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 59', 58, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n60', 59, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n60t-Gst60', 59, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 59, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 59, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 60', 59, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n61', 60, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n61t-Gst61', 60, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 60, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 60, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 61', 60, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n62', 61, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n62t-Gst62', 61, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 61, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 61, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 62', 61, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n63', 62, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n63t-Gst63', 62, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 62, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 62, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 63', 62, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n64', 63, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n64t-Gst64', 63, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 63, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 63, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 64', 63, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n65', 64, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n65t-Gst65', 64, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 64, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 64, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 65', 64, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n66', 65, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n66t-Gst66', 65, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 65, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 65, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 66', 65, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n67', 66, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n67t-Gst67', 66, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 66, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 66, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 67', 66, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n68', 67, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n68t-Gst68', 67, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 67, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 67, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 68', 67, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n69', 68, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n69t-Gst69', 68, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 68, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 68, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 69', 68, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n70', 69, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n70t-Gst70', 69, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 69, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 69, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 70', 69, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n71', 70, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n71t-Gst71', 70, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 70, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 70, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 71', 70, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n72', 71, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n72t-Gst72', 71, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 71, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 71, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 72', 71, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n73', 72, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n73t-Gst73', 72, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 72, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 72, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 73', 72, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n74', 73, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n74t-Gst74', 73, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 73, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 73, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 74', 73, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n75', 74, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n75t-Gst75', 74, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 74, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 74, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 75', 74, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n76', 75, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n76t-Gst76', 75, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 75, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 75, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 76', 75, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n77', 76, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n77t-Gst77', 76, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 76, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 76, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 77', 76, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n78', 77, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n78t-Gst78', 77, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 77, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 77, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 78', 77, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n79', 78, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n79t-Gst79', 78, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 78, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 78, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 79', 78, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n80', 79, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n80t-Gst80', 79, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 79, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 79, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 80', 79, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n81', 80, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n81t-Gst81', 80, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 80, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 80, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 81', 80, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n82', 81, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n82t-Gst82', 81, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 81, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 81, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 82', 81, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n83', 82, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n83t-Gst83', 82, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 82, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 82, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 83', 82, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n84', 83, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n84t-Gst84', 83, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 83, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 83, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 84', 83, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n85', 84, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n85t-Gst85', 84, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 84, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 84, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 85', 84, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n86', 85, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n86t-Gst86', 85, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 85, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 85, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 86', 85, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n87', 86, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n87t-Gst87', 86, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 86, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 86, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 87', 86, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n88', 87, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n88t-Gst88', 87, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 87, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 87, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 88', 87, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n89', 88, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n89t-Gst89', 88, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 88, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 88, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 89', 88, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n90', 89, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n90t-Gst90', 89, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 89, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 89, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 90', 89, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n91', 90, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n91t-Gst91', 90, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 90, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 90, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 91', 90, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n92', 91, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n92t-Gst92', 91, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 91, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 91, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 92', 91, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n93', 92, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n93t-Gst93', 92, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 92, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 92, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 93', 92, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n94', 93, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n94t-Gst94', 93, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 93, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 93, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 94', 93, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n95', 94, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n95t-Gst95', 94, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 94, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 94, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 95', 94, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n96', 95, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n96t-Gst96', 95, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 95, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 95, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 96', 95, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n97', 96, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n97t-Gst97', 96, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 96, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 96, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 97', 96, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n98', 97, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n98t-Gst98', 97, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 97, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 97, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 98', 97, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n99', 98, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n99t-Gst99', 98, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 98, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 98, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 99', 98, 0);
model.physics('ge1').prop('EquationForm').set('form', 'Automatic');
model.physics('ge1').feature('ge1').setIndex('name', 'n100', 99, 0);
model.physics('ge1').feature('ge1').setIndex('equation', 'n100t-Gst100', 99, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueU', 'nstart', 99, 0);
model.physics('ge1').feature('ge1').setIndex('initialValueUt', '0', 99, 0);
model.physics('ge1').feature('ge1').setIndex('description', 'Number density interval 100', 99, 0);

model.func.create('an_GD2', 'Analytic');
model.func('an_GD2').model('comp2');
model.func('an_GD2').label('Discretization function');
model.func('an_GD2').set('funcname', 'GD');
model.func('an_GD2').set('fununit', 'm');
model.func('an_GD2').set('expr', 'Lmin+2^((j-N)/8)*(Lmax-Lmin)');
model.func('an_GD2').set('args', 'Lmax, j, N, Lmin');
model.func('an_GD2').setIndex('argunit', 'm', 0);
model.func('an_GD2').setIndex('argunit', 'm', 3);

model.variable.create('var10');
model.variable.var10.model('comp2');
model.variable('var10').label('Discretization points');
model.variable('var10').set('N', '30');
model.variable('var10').descr('N', 'Number of intervals');
model.variable('var10').set('q', '8');
model.variable('var10').descr('q', 'Discretization interval size growth constant');
model.variable('var10').set('Lmin', '(0.82[nm]-2^(-N/8)*Lmax)/(1-2^(-N/8))');
model.variable('var10').descr('Lmin', 'Constant for calculating geometric discretization');
model.variable('var10').set('Lmax', '500.0[nm]');
model.variable('var10').descr('Lmax', 'Maximum crystal size');
model.variable('var10').set('L0', 'GD(Lmax,0,N,Lmin)');
model.variable('var10').descr('L0', 'Discretization point 1');
model.variable('var10').set('L1', 'GD(Lmax,1,N,Lmin)');
model.variable('var10').descr('L1', 'Discretization point 2');
model.variable('var10').set('L2', 'GD(Lmax,2,N,Lmin)');
model.variable('var10').descr('L2', 'Discretization point 3');
model.variable('var10').set('L3', 'GD(Lmax,3,N,Lmin)');
model.variable('var10').descr('L3', 'Discretization point 4');
model.variable('var10').set('L4', 'GD(Lmax,4,N,Lmin)');
model.variable('var10').descr('L4', 'Discretization point 5');
model.variable('var10').set('L5', 'GD(Lmax,5,N,Lmin)');
model.variable('var10').descr('L5', 'Discretization point 6');
model.variable('var10').set('L6', 'GD(Lmax,6,N,Lmin)');
model.variable('var10').descr('L6', 'Discretization point 7');
model.variable('var10').set('L7', 'GD(Lmax,7,N,Lmin)');
model.variable('var10').descr('L7', 'Discretization point 8');
model.variable('var10').set('L8', 'GD(Lmax,8,N,Lmin)');
model.variable('var10').descr('L8', 'Discretization point 9');
model.variable('var10').set('L9', 'GD(Lmax,9,N,Lmin)');
model.variable('var10').descr('L9', 'Discretization point 10');
model.variable('var10').set('L10', 'GD(Lmax,10,N,Lmin)');
model.variable('var10').descr('L10', 'Discretization point 11');
model.variable('var10').set('L11', 'GD(Lmax,11,N,Lmin)');
model.variable('var10').descr('L11', 'Discretization point 12');
model.variable('var10').set('L12', 'GD(Lmax,12,N,Lmin)');
model.variable('var10').descr('L12', 'Discretization point 13');
model.variable('var10').set('L13', 'GD(Lmax,13,N,Lmin)');
model.variable('var10').descr('L13', 'Discretization point 14');
model.variable('var10').set('L14', 'GD(Lmax,14,N,Lmin)');
model.variable('var10').descr('L14', 'Discretization point 15');
model.variable('var10').set('L15', 'GD(Lmax,15,N,Lmin)');
model.variable('var10').descr('L15', 'Discretization point 16');
model.variable('var10').set('L16', 'GD(Lmax,16,N,Lmin)');
model.variable('var10').descr('L16', 'Discretization point 17');
model.variable('var10').set('L17', 'GD(Lmax,17,N,Lmin)');
model.variable('var10').descr('L17', 'Discretization point 18');
model.variable('var10').set('L18', 'GD(Lmax,18,N,Lmin)');
model.variable('var10').descr('L18', 'Discretization point 19');
model.variable('var10').set('L19', 'GD(Lmax,19,N,Lmin)');
model.variable('var10').descr('L19', 'Discretization point 20');
model.variable('var10').set('L20', 'GD(Lmax,20,N,Lmin)');
model.variable('var10').descr('L20', 'Discretization point 21');
model.variable('var10').set('L21', 'GD(Lmax,21,N,Lmin)');
model.variable('var10').descr('L21', 'Discretization point 22');
model.variable('var10').set('L22', 'GD(Lmax,22,N,Lmin)');
model.variable('var10').descr('L22', 'Discretization point 23');
model.variable('var10').set('L23', 'GD(Lmax,23,N,Lmin)');
model.variable('var10').descr('L23', 'Discretization point 24');
model.variable('var10').set('L24', 'GD(Lmax,24,N,Lmin)');
model.variable('var10').descr('L24', 'Discretization point 25');
model.variable('var10').set('L25', 'GD(Lmax,25,N,Lmin)');
model.variable('var10').descr('L25', 'Discretization point 26');
model.variable('var10').set('L26', 'GD(Lmax,26,N,Lmin)');
model.variable('var10').descr('L26', 'Discretization point 27');
model.variable('var10').set('L27', 'GD(Lmax,27,N,Lmin)');
model.variable('var10').descr('L27', 'Discretization point 28');
model.variable('var10').set('L28', 'GD(Lmax,28,N,Lmin)');
model.variable('var10').descr('L28', 'Discretization point 29');
model.variable('var10').set('L29', 'GD(Lmax,29,N,Lmin)');
model.variable('var10').descr('L29', 'Discretization point 30');
model.variable('var10').set('L30', 'GD(Lmax,30,N,Lmin)');
model.variable('var10').descr('L30', 'Discretization point 31');
model.variable.create('var11');
model.variable.var11.model('comp2');
model.variable('var11').label('Interval length');
model.variable('var11').set('dL1', 'abs(L1-L0)');
model.variable('var11').descr('dL1', 'Length of interval 1');
model.variable('var11').set('dL2', 'abs(L2-L1)');
model.variable('var11').descr('dL2', 'Length of interval 2');
model.variable('var11').set('dL3', 'abs(L3-L2)');
model.variable('var11').descr('dL3', 'Length of interval 3');
model.variable('var11').set('dL4', 'abs(L4-L3)');
model.variable('var11').descr('dL4', 'Length of interval 4');
model.variable('var11').set('dL5', 'abs(L5-L4)');
model.variable('var11').descr('dL5', 'Length of interval 5');
model.variable('var11').set('dL6', 'abs(L6-L5)');
model.variable('var11').descr('dL6', 'Length of interval 6');
model.variable('var11').set('dL7', 'abs(L7-L6)');
model.variable('var11').descr('dL7', 'Length of interval 7');
model.variable('var11').set('dL8', 'abs(L8-L7)');
model.variable('var11').descr('dL8', 'Length of interval 8');
model.variable('var11').set('dL9', 'abs(L9-L8)');
model.variable('var11').descr('dL9', 'Length of interval 9');
model.variable('var11').set('dL10', 'abs(L10-L9)');
model.variable('var11').descr('dL10', 'Length of interval 10');
model.variable('var11').set('dL11', 'abs(L11-L10)');
model.variable('var11').descr('dL11', 'Length of interval 11');
model.variable('var11').set('dL12', 'abs(L12-L11)');
model.variable('var11').descr('dL12', 'Length of interval 12');
model.variable('var11').set('dL13', 'abs(L13-L12)');
model.variable('var11').descr('dL13', 'Length of interval 13');
model.variable('var11').set('dL14', 'abs(L14-L13)');
model.variable('var11').descr('dL14', 'Length of interval 14');
model.variable('var11').set('dL15', 'abs(L15-L14)');
model.variable('var11').descr('dL15', 'Length of interval 15');
model.variable('var11').set('dL16', 'abs(L16-L15)');
model.variable('var11').descr('dL16', 'Length of interval 16');
model.variable('var11').set('dL17', 'abs(L17-L16)');
model.variable('var11').descr('dL17', 'Length of interval 17');
model.variable('var11').set('dL18', 'abs(L18-L17)');
model.variable('var11').descr('dL18', 'Length of interval 18');
model.variable('var11').set('dL19', 'abs(L19-L18)');
model.variable('var11').descr('dL19', 'Length of interval 19');
model.variable('var11').set('dL20', 'abs(L20-L19)');
model.variable('var11').descr('dL20', 'Length of interval 20');
model.variable('var11').set('dL21', 'abs(L21-L20)');
model.variable('var11').descr('dL21', 'Length of interval 21');
model.variable('var11').set('dL22', 'abs(L22-L21)');
model.variable('var11').descr('dL22', 'Length of interval 22');
model.variable('var11').set('dL23', 'abs(L23-L22)');
model.variable('var11').descr('dL23', 'Length of interval 23');
model.variable('var11').set('dL24', 'abs(L24-L23)');
model.variable('var11').descr('dL24', 'Length of interval 24');
model.variable('var11').set('dL25', 'abs(L25-L24)');
model.variable('var11').descr('dL25', 'Length of interval 25');
model.variable('var11').set('dL26', 'abs(L26-L25)');
model.variable('var11').descr('dL26', 'Length of interval 26');
model.variable('var11').set('dL27', 'abs(L27-L26)');
model.variable('var11').descr('dL27', 'Length of interval 27');
model.variable('var11').set('dL28', 'abs(L28-L27)');
model.variable('var11').descr('dL28', 'Length of interval 28');
model.variable('var11').set('dL29', 'abs(L29-L28)');
model.variable('var11').descr('dL29', 'Length of interval 29');
model.variable('var11').set('dL30', 'abs(L30-L29)');
model.variable('var11').descr('dL30', 'Length of interval 30');
model.variable.create('var12');
model.variable.var12.model('comp2');
model.variable.create('var13');
model.variable.var13.model('comp2');
model.variable('var12').label('Crystallization Reaction Rate');
model.variable('var13').label('Crystallization variables');
model.variable('var12').set('r_c1', '(((L1+L0)/2)^3*k_v*(Gst1)+B0*L0^3*k_v)*rho_C/M_C*dL1');
model.variable('var12').descr('r_c1', 'Crystallization reaction rate from interval 1');
model.variable('var12').set('r_c_sum', '0+r_c1');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c2', '((L2+L1)/2)^3*k_v*Gst2*rho_C/M_C*dL2');
model.variable('var12').descr('r_c2', 'Crystallization reaction rate from interval 2');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c3', '((L3+L2)/2)^3*k_v*Gst3*rho_C/M_C*dL3');
model.variable('var12').descr('r_c3', 'Crystallization reaction rate from interval 3');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c4', '((L4+L3)/2)^3*k_v*Gst4*rho_C/M_C*dL4');
model.variable('var12').descr('r_c4', 'Crystallization reaction rate from interval 4');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c5', '((L5+L4)/2)^3*k_v*Gst5*rho_C/M_C*dL5');
model.variable('var12').descr('r_c5', 'Crystallization reaction rate from interval 5');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c6', '((L6+L5)/2)^3*k_v*Gst6*rho_C/M_C*dL6');
model.variable('var12').descr('r_c6', 'Crystallization reaction rate from interval 6');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c7', '((L7+L6)/2)^3*k_v*Gst7*rho_C/M_C*dL7');
model.variable('var12').descr('r_c7', 'Crystallization reaction rate from interval 7');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c8', '((L8+L7)/2)^3*k_v*Gst8*rho_C/M_C*dL8');
model.variable('var12').descr('r_c8', 'Crystallization reaction rate from interval 8');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c9', '((L9+L8)/2)^3*k_v*Gst9*rho_C/M_C*dL9');
model.variable('var12').descr('r_c9', 'Crystallization reaction rate from interval 9');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c10', '((L10+L9)/2)^3*k_v*Gst10*rho_C/M_C*dL10');
model.variable('var12').descr('r_c10', 'Crystallization reaction rate from interval 10');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c11', '((L11+L10)/2)^3*k_v*Gst11*rho_C/M_C*dL11');
model.variable('var12').descr('r_c11', 'Crystallization reaction rate from interval 11');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c12', '((L12+L11)/2)^3*k_v*Gst12*rho_C/M_C*dL12');
model.variable('var12').descr('r_c12', 'Crystallization reaction rate from interval 12');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c13', '((L13+L12)/2)^3*k_v*Gst13*rho_C/M_C*dL13');
model.variable('var12').descr('r_c13', 'Crystallization reaction rate from interval 13');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c14', '((L14+L13)/2)^3*k_v*Gst14*rho_C/M_C*dL14');
model.variable('var12').descr('r_c14', 'Crystallization reaction rate from interval 14');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c15', '((L15+L14)/2)^3*k_v*Gst15*rho_C/M_C*dL15');
model.variable('var12').descr('r_c15', 'Crystallization reaction rate from interval 15');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c16', '((L16+L15)/2)^3*k_v*Gst16*rho_C/M_C*dL16');
model.variable('var12').descr('r_c16', 'Crystallization reaction rate from interval 16');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c17', '((L17+L16)/2)^3*k_v*Gst17*rho_C/M_C*dL17');
model.variable('var12').descr('r_c17', 'Crystallization reaction rate from interval 17');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c18', '((L18+L17)/2)^3*k_v*Gst18*rho_C/M_C*dL18');
model.variable('var12').descr('r_c18', 'Crystallization reaction rate from interval 18');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c19', '((L19+L18)/2)^3*k_v*Gst19*rho_C/M_C*dL19');
model.variable('var12').descr('r_c19', 'Crystallization reaction rate from interval 19');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c20', '((L20+L19)/2)^3*k_v*Gst20*rho_C/M_C*dL20');
model.variable('var12').descr('r_c20', 'Crystallization reaction rate from interval 20');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c21', '((L21+L20)/2)^3*k_v*Gst21*rho_C/M_C*dL21');
model.variable('var12').descr('r_c21', 'Crystallization reaction rate from interval 21');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c22', '((L22+L21)/2)^3*k_v*Gst22*rho_C/M_C*dL22');
model.variable('var12').descr('r_c22', 'Crystallization reaction rate from interval 22');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c23', '((L23+L22)/2)^3*k_v*Gst23*rho_C/M_C*dL23');
model.variable('var12').descr('r_c23', 'Crystallization reaction rate from interval 23');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c24', '((L24+L23)/2)^3*k_v*Gst24*rho_C/M_C*dL24');
model.variable('var12').descr('r_c24', 'Crystallization reaction rate from interval 24');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c25', '((L25+L24)/2)^3*k_v*Gst25*rho_C/M_C*dL25');
model.variable('var12').descr('r_c25', 'Crystallization reaction rate from interval 25');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c26', '((L26+L25)/2)^3*k_v*Gst26*rho_C/M_C*dL26');
model.variable('var12').descr('r_c26', 'Crystallization reaction rate from interval 26');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c27', '((L27+L26)/2)^3*k_v*Gst27*rho_C/M_C*dL27');
model.variable('var12').descr('r_c27', 'Crystallization reaction rate from interval 27');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c28', '((L28+L27)/2)^3*k_v*Gst28*rho_C/M_C*dL28');
model.variable('var12').descr('r_c28', 'Crystallization reaction rate from interval 28');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c29', '((L29+L28)/2)^3*k_v*Gst29*rho_C/M_C*dL29');
model.variable('var12').descr('r_c29', 'Crystallization reaction rate from interval 29');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable('var12').set('r_c30', '((L30+L29)/2)^3*k_v*Gst30*rho_C/M_C*dL30');
model.variable('var12').descr('r_c30', 'Crystallization reaction rate from interval 30');
model.variable('var12').set('r_c_sum', '0+r_c1+r_c2+r_c3+r_c4+r_c5+r_c6+r_c7+r_c8+r_c9+r_c10+r_c11+r_c12+r_c13+r_c14+r_c15+r_c16+r_c17+r_c18+r_c19+r_c20+r_c21+r_c22+r_c23+r_c24+r_c25+r_c26+r_c27+r_c28+r_c29+r_c30');
model.variable('var12').descr('r_c_sum', 'Crystallization reaction rate sum');
model.variable('var13').set('S', '1[1]');
model.variable('var13').descr('S', 'Supersaturation ratio');
model.variable('var13').set('B0', '1[1/m^4/s]');
model.variable('var13').descr('B0', 'Nucleation rate as source of number density');
model.variable('var13').set('M_c_sum', '(0+n1*((L1+L0)/2)^3*k_v*dL1+n2*((L2+L1)/2)^3*k_v*dL2+n3*((L3+L2)/2)^3*k_v*dL3+n4*((L4+L3)/2)^3*k_v*dL4+n5*((L5+L4)/2)^3*k_v*dL5+n6*((L6+L5)/2)^3*k_v*dL6+n7*((L7+L6)/2)^3*k_v*dL7+n8*((L8+L7)/2)^3*k_v*dL8+n9*((L9+L8)/2)^3*k_v*dL9+n10*((L10+L9)/2)^3*k_v*dL10+n11*((L11+L10)/2)^3*k_v*dL11+n12*((L12+L11)/2)^3*k_v*dL12+n13*((L13+L12)/2)^3*k_v*dL13+n14*((L14+L13)/2)^3*k_v*dL14+n15*((L15+L14)/2)^3*k_v*dL15+n16*((L16+L15)/2)^3*k_v*dL16+n17*((L17+L16)/2)^3*k_v*dL17+n18*((L18+L17)/2)^3*k_v*dL18+n19*((L19+L18)/2)^3*k_v*dL19+n20*((L20+L19)/2)^3*k_v*dL20+n21*((L21+L20)/2)^3*k_v*dL21+n22*((L22+L21)/2)^3*k_v*dL22+n23*((L23+L22)/2)^3*k_v*dL23+n24*((L24+L23)/2)^3*k_v*dL24+n25*((L25+L24)/2)^3*k_v*dL25+n26*((L26+L25)/2)^3*k_v*dL26+n27*((L27+L26)/2)^3*k_v*dL27+n28*((L28+L27)/2)^3*k_v*dL28+n29*((L29+L28)/2)^3*k_v*dL29+n30*((L30+L29)/2)^3*k_v*dL30)*rho_C');
model.variable('var13').descr('M_c_sum', 'Total crystal mass');
model.variable('var13').set('N_c', '0+n1*dL1+n2*dL2+n3*dL3+n4*dL4+n5*dL5+n6*dL6+n7*dL7+n8*dL8+n9*dL9+n10*dL10+n11*dL11+n12*dL12+n13*dL13+n14*dL14+n15*dL15+n16*dL16+n17*dL17+n18*dL18+n19*dL19+n20*dL20+n21*dL21+n22*dL22+n23*dL23+n24*dL24+n25*dL25+n26*dL26+n27*dL27+n28*dL28+n29*dL29+n30*dL30');
model.variable('var13').descr('N_c', 'Crystal particle concentration sum');
model.variable('var13').set('L_av', '(0+n1*dL1*(L1+L0)/2+n2*dL2*(L2+L1)/2+n3*dL3*(L3+L2)/2+n4*dL4*(L4+L3)/2+n5*dL5*(L5+L4)/2+n6*dL6*(L6+L5)/2+n7*dL7*(L7+L6)/2+n8*dL8*(L8+L7)/2+n9*dL9*(L9+L8)/2+n10*dL10*(L10+L9)/2+n11*dL11*(L11+L10)/2+n12*dL12*(L12+L11)/2+n13*dL13*(L13+L12)/2+n14*dL14*(L14+L13)/2+n15*dL15*(L15+L14)/2+n16*dL16*(L16+L15)/2+n17*dL17*(L17+L16)/2+n18*dL18*(L18+L17)/2+n19*dL19*(L19+L18)/2+n20*dL20*(L20+L19)/2+n21*dL21*(L21+L20)/2+n22*dL22*(L22+L21)/2+n23*dL23*(L23+L22)/2+n24*dL24*(L24+L23)/2+n25*dL25*(L25+L24)/2+n26*dL26*(L26+L25)/2+n27*dL27*(L27+L26)/2+n28*dL28*(L28+L27)/2+n29*dL29*(L29+L28)/2+n30*dL30*(L30+L29)/2)/N_c');
model.variable('var13').descr('L_av', 'Average crystal size');
model.variable.create('var14');
model.variable.var14.model('comp2');
model.variable('var14').label('Growth Source Term');

model.func.create('an_phi2', 'Analytic');
model.func('an_phi2').model('comp2');
model.func('an_phi2').label('Limiter');
model.func('an_phi2').set('funcname', 'phi');
model.func('an_phi2').set('args', 'r');
model.func('an_phi2').set('expr', 'max(0,(min(2*r,min(0.3333333333333335+0.6666666666666665*r,2))))');

model.variable('var14').set('Gst1', '-(GL(L1,S)*(n1+0.5*phi((n2-n1+eps)/(n1-0+eps))*(n1-0))-0)/dL1');
model.variable('var14').descr('Gst1', 'Growth rate source term for interval 1');
model.variable('var14').set('Gst2', '-(GL(L2,S)*(n2+0.5*phi((n3-n2+eps)/(n2-n1+eps))*(n2-n1))-GL(L1,S)*(n1+0.5*phi((n2-n1+eps)/(n1-0+eps))*(n1-0)))/dL2');
model.variable('var14').descr('Gst2', 'Growth rate source term for interval 2');
model.variable('var14').set('Gst3', '-(GL(L3,S)*(n3+0.5*phi((n4-n3+eps)/(n3-n2+eps))*(n3-n2))-GL(L2,S)*(n2+0.5*phi((n3-n2+eps)/(n2-n1+eps))*(n2-n1)))/dL3');
model.variable('var14').descr('Gst3', 'Growth rate source term for interval 3');
model.variable('var14').set('Gst4', '-(GL(L4,S)*(n4+0.5*phi((n5-n4+eps)/(n4-n3+eps))*(n4-n3))-GL(L3,S)*(n3+0.5*phi((n4-n3+eps)/(n3-n2+eps))*(n3-n2)))/dL4');
model.variable('var14').descr('Gst4', 'Growth rate source term for interval 4');
model.variable('var14').set('Gst5', '-(GL(L5,S)*(n5+0.5*phi((n6-n5+eps)/(n5-n4+eps))*(n5-n4))-GL(L4,S)*(n4+0.5*phi((n5-n4+eps)/(n4-n3+eps))*(n4-n3)))/dL5');
model.variable('var14').descr('Gst5', 'Growth rate source term for interval 5');
model.variable('var14').set('Gst6', '-(GL(L6,S)*(n6+0.5*phi((n7-n6+eps)/(n6-n5+eps))*(n6-n5))-GL(L5,S)*(n5+0.5*phi((n6-n5+eps)/(n5-n4+eps))*(n5-n4)))/dL6');
model.variable('var14').descr('Gst6', 'Growth rate source term for interval 6');
model.variable('var14').set('Gst7', '-(GL(L7,S)*(n7+0.5*phi((n8-n7+eps)/(n7-n6+eps))*(n7-n6))-GL(L6,S)*(n6+0.5*phi((n7-n6+eps)/(n6-n5+eps))*(n6-n5)))/dL7');
model.variable('var14').descr('Gst7', 'Growth rate source term for interval 7');
model.variable('var14').set('Gst8', '-(GL(L8,S)*(n8+0.5*phi((n9-n8+eps)/(n8-n7+eps))*(n8-n7))-GL(L7,S)*(n7+0.5*phi((n8-n7+eps)/(n7-n6+eps))*(n7-n6)))/dL8');
model.variable('var14').descr('Gst8', 'Growth rate source term for interval 8');
model.variable('var14').set('Gst9', '-(GL(L9,S)*(n9+0.5*phi((n10-n9+eps)/(n9-n8+eps))*(n9-n8))-GL(L8,S)*(n8+0.5*phi((n9-n8+eps)/(n8-n7+eps))*(n8-n7)))/dL9');
model.variable('var14').descr('Gst9', 'Growth rate source term for interval 9');
model.variable('var14').set('Gst10', '-(GL(L10,S)*(n10+0.5*phi((n11-n10+eps)/(n10-n9+eps))*(n10-n9))-GL(L9,S)*(n9+0.5*phi((n10-n9+eps)/(n9-n8+eps))*(n9-n8)))/dL10');
model.variable('var14').descr('Gst10', 'Growth rate source term for interval 10');
model.variable('var14').set('Gst11', '-(GL(L11,S)*(n11+0.5*phi((n12-n11+eps)/(n11-n10+eps))*(n11-n10))-GL(L10,S)*(n10+0.5*phi((n11-n10+eps)/(n10-n9+eps))*(n10-n9)))/dL11');
model.variable('var14').descr('Gst11', 'Growth rate source term for interval 11');
model.variable('var14').set('Gst12', '-(GL(L12,S)*(n12+0.5*phi((n13-n12+eps)/(n12-n11+eps))*(n12-n11))-GL(L11,S)*(n11+0.5*phi((n12-n11+eps)/(n11-n10+eps))*(n11-n10)))/dL12');
model.variable('var14').descr('Gst12', 'Growth rate source term for interval 12');
model.variable('var14').set('Gst13', '-(GL(L13,S)*(n13+0.5*phi((n14-n13+eps)/(n13-n12+eps))*(n13-n12))-GL(L12,S)*(n12+0.5*phi((n13-n12+eps)/(n12-n11+eps))*(n12-n11)))/dL13');
model.variable('var14').descr('Gst13', 'Growth rate source term for interval 13');
model.variable('var14').set('Gst14', '-(GL(L14,S)*(n14+0.5*phi((n15-n14+eps)/(n14-n13+eps))*(n14-n13))-GL(L13,S)*(n13+0.5*phi((n14-n13+eps)/(n13-n12+eps))*(n13-n12)))/dL14');
model.variable('var14').descr('Gst14', 'Growth rate source term for interval 14');
model.variable('var14').set('Gst15', '-(GL(L15,S)*(n15+0.5*phi((n16-n15+eps)/(n15-n14+eps))*(n15-n14))-GL(L14,S)*(n14+0.5*phi((n15-n14+eps)/(n14-n13+eps))*(n14-n13)))/dL15');
model.variable('var14').descr('Gst15', 'Growth rate source term for interval 15');
model.variable('var14').set('Gst16', '-(GL(L16,S)*(n16+0.5*phi((n17-n16+eps)/(n16-n15+eps))*(n16-n15))-GL(L15,S)*(n15+0.5*phi((n16-n15+eps)/(n15-n14+eps))*(n15-n14)))/dL16');
model.variable('var14').descr('Gst16', 'Growth rate source term for interval 16');
model.variable('var14').set('Gst17', '-(GL(L17,S)*(n17+0.5*phi((n18-n17+eps)/(n17-n16+eps))*(n17-n16))-GL(L16,S)*(n16+0.5*phi((n17-n16+eps)/(n16-n15+eps))*(n16-n15)))/dL17');
model.variable('var14').descr('Gst17', 'Growth rate source term for interval 17');
model.variable('var14').set('Gst18', '-(GL(L18,S)*(n18+0.5*phi((n19-n18+eps)/(n18-n17+eps))*(n18-n17))-GL(L17,S)*(n17+0.5*phi((n18-n17+eps)/(n17-n16+eps))*(n17-n16)))/dL18');
model.variable('var14').descr('Gst18', 'Growth rate source term for interval 18');
model.variable('var14').set('Gst19', '-(GL(L19,S)*(n19+0.5*phi((n20-n19+eps)/(n19-n18+eps))*(n19-n18))-GL(L18,S)*(n18+0.5*phi((n19-n18+eps)/(n18-n17+eps))*(n18-n17)))/dL19');
model.variable('var14').descr('Gst19', 'Growth rate source term for interval 19');
model.variable('var14').set('Gst20', '-(GL(L20,S)*(n20+0.5*phi((n21-n20+eps)/(n20-n19+eps))*(n20-n19))-GL(L19,S)*(n19+0.5*phi((n20-n19+eps)/(n19-n18+eps))*(n19-n18)))/dL20');
model.variable('var14').descr('Gst20', 'Growth rate source term for interval 20');
model.variable('var14').set('Gst21', '-(GL(L21,S)*(n21+0.5*phi((n22-n21+eps)/(n21-n20+eps))*(n21-n20))-GL(L20,S)*(n20+0.5*phi((n21-n20+eps)/(n20-n19+eps))*(n20-n19)))/dL21');
model.variable('var14').descr('Gst21', 'Growth rate source term for interval 21');
model.variable('var14').set('Gst22', '-(GL(L22,S)*(n22+0.5*phi((n23-n22+eps)/(n22-n21+eps))*(n22-n21))-GL(L21,S)*(n21+0.5*phi((n22-n21+eps)/(n21-n20+eps))*(n21-n20)))/dL22');
model.variable('var14').descr('Gst22', 'Growth rate source term for interval 22');
model.variable('var14').set('Gst23', '-(GL(L23,S)*(n23+0.5*phi((n24-n23+eps)/(n23-n22+eps))*(n23-n22))-GL(L22,S)*(n22+0.5*phi((n23-n22+eps)/(n22-n21+eps))*(n22-n21)))/dL23');
model.variable('var14').descr('Gst23', 'Growth rate source term for interval 23');
model.variable('var14').set('Gst24', '-(GL(L24,S)*(n24+0.5*phi((n25-n24+eps)/(n24-n23+eps))*(n24-n23))-GL(L23,S)*(n23+0.5*phi((n24-n23+eps)/(n23-n22+eps))*(n23-n22)))/dL24');
model.variable('var14').descr('Gst24', 'Growth rate source term for interval 24');
model.variable('var14').set('Gst25', '-(GL(L25,S)*(n25+0.5*phi((n26-n25+eps)/(n25-n24+eps))*(n25-n24))-GL(L24,S)*(n24+0.5*phi((n25-n24+eps)/(n24-n23+eps))*(n24-n23)))/dL25');
model.variable('var14').descr('Gst25', 'Growth rate source term for interval 25');
model.variable('var14').set('Gst26', '-(GL(L26,S)*(n26+0.5*phi((n27-n26+eps)/(n26-n25+eps))*(n26-n25))-GL(L25,S)*(n25+0.5*phi((n26-n25+eps)/(n25-n24+eps))*(n25-n24)))/dL26');
model.variable('var14').descr('Gst26', 'Growth rate source term for interval 26');
model.variable('var14').set('Gst27', '-(GL(L27,S)*(n27+0.5*phi((n28-n27+eps)/(n27-n26+eps))*(n27-n26))-GL(L26,S)*(n26+0.5*phi((n27-n26+eps)/(n26-n25+eps))*(n26-n25)))/dL27');
model.variable('var14').descr('Gst27', 'Growth rate source term for interval 27');
model.variable('var14').set('Gst28', '-(GL(L28,S)*(n28+0.5*phi((n29-n28+eps)/(n28-n27+eps))*(n28-n27))-GL(L27,S)*(n27+0.5*phi((n28-n27+eps)/(n27-n26+eps))*(n27-n26)))/dL28');
model.variable('var14').descr('Gst28', 'Growth rate source term for interval 28');
model.variable('var14').set('Gst29', '-(GL(L29,S)*(n29+0.5*phi((n30-n29+eps)/(n29-n28+eps))*(n29-n28))-GL(L28,S)*(n28+0.5*phi((n29-n28+eps)/(n28-n27+eps))*(n28-n27)))/dL29');
model.variable('var14').descr('Gst29', 'Growth rate source term for interval 29');
model.variable('var14').set('Gst30', '-(GL(L30,S)*(n30+0.5*phi((n30-n30+eps)/(n30-n29+eps))*(n30-n29))-GL(L29,S)*(n29+0.5*phi((n30-n29+eps)/(n29-n28+eps))*(n29-n28)))/dL30');
model.variable('var14').descr('Gst30', 'Growth rate source term for interval 30');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp2');
model.selection('sel1').label('Inlet selection');
model.selection('sel1').geom(2);

model.physics.create('scdeq1', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq1').model('comp2');
model.physics('scdeq1').label('Interval 1');
model.physics('scdeq1').field('none').field('n1');
model.physics('scdeq1').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq1').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq1').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq1').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq1').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq1').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq1').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq1').feature('dir1').selection.named('sel1');
model.physics('scdeq1').feature('cdeq1').set('f', 'Gst1+B0');
model.physics('scdeq1').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq2', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq2').model('comp2');
model.physics('scdeq2').label('Interval 2');
model.physics('scdeq2').field('none').field('n2');
model.physics('scdeq2').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq2').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq2').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq2').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq2').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq2').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq2').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq2').feature('dir1').selection.named('sel1');
model.physics('scdeq2').feature('cdeq1').set('f', 'Gst2');
model.physics('scdeq2').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq3', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq3').model('comp2');
model.physics('scdeq3').label('Interval 3');
model.physics('scdeq3').field('none').field('n3');
model.physics('scdeq3').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq3').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq3').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq3').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq3').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq3').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq3').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq3').feature('dir1').selection.named('sel1');
model.physics('scdeq3').feature('cdeq1').set('f', 'Gst3');
model.physics('scdeq3').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq4', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq4').model('comp2');
model.physics('scdeq4').label('Interval 4');
model.physics('scdeq4').field('none').field('n4');
model.physics('scdeq4').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq4').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq4').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq4').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq4').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq4').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq4').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq4').feature('dir1').selection.named('sel1');
model.physics('scdeq4').feature('cdeq1').set('f', 'Gst4');
model.physics('scdeq4').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq5', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq5').model('comp2');
model.physics('scdeq5').label('Interval 5');
model.physics('scdeq5').field('none').field('n5');
model.physics('scdeq5').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq5').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq5').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq5').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq5').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq5').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq5').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq5').feature('dir1').selection.named('sel1');
model.physics('scdeq5').feature('cdeq1').set('f', 'Gst5');
model.physics('scdeq5').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq6', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq6').model('comp2');
model.physics('scdeq6').label('Interval 6');
model.physics('scdeq6').field('none').field('n6');
model.physics('scdeq6').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq6').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq6').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq6').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq6').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq6').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq6').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq6').feature('dir1').selection.named('sel1');
model.physics('scdeq6').feature('cdeq1').set('f', 'Gst6');
model.physics('scdeq6').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq7', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq7').model('comp2');
model.physics('scdeq7').label('Interval 7');
model.physics('scdeq7').field('none').field('n7');
model.physics('scdeq7').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq7').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq7').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq7').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq7').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq7').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq7').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq7').feature('dir1').selection.named('sel1');
model.physics('scdeq7').feature('cdeq1').set('f', 'Gst7');
model.physics('scdeq7').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq8', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq8').model('comp2');
model.physics('scdeq8').label('Interval 8');
model.physics('scdeq8').field('none').field('n8');
model.physics('scdeq8').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq8').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq8').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq8').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq8').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq8').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq8').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq8').feature('dir1').selection.named('sel1');
model.physics('scdeq8').feature('cdeq1').set('f', 'Gst8');
model.physics('scdeq8').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq9', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq9').model('comp2');
model.physics('scdeq9').label('Interval 9');
model.physics('scdeq9').field('none').field('n9');
model.physics('scdeq9').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq9').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq9').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq9').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq9').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq9').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq9').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq9').feature('dir1').selection.named('sel1');
model.physics('scdeq9').feature('cdeq1').set('f', 'Gst9');
model.physics('scdeq9').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq10', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq10').model('comp2');
model.physics('scdeq10').label('Interval 10');
model.physics('scdeq10').field('none').field('n10');
model.physics('scdeq10').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq10').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq10').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq10').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq10').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq10').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq10').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq10').feature('dir1').selection.named('sel1');
model.physics('scdeq10').feature('cdeq1').set('f', 'Gst10');
model.physics('scdeq10').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq11', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq11').model('comp2');
model.physics('scdeq11').label('Interval 11');
model.physics('scdeq11').field('none').field('n11');
model.physics('scdeq11').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq11').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq11').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq11').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq11').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq11').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq11').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq11').feature('dir1').selection.named('sel1');
model.physics('scdeq11').feature('cdeq1').set('f', 'Gst11');
model.physics('scdeq11').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq12', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq12').model('comp2');
model.physics('scdeq12').label('Interval 12');
model.physics('scdeq12').field('none').field('n12');
model.physics('scdeq12').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq12').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq12').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq12').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq12').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq12').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq12').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq12').feature('dir1').selection.named('sel1');
model.physics('scdeq12').feature('cdeq1').set('f', 'Gst12');
model.physics('scdeq12').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq13', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq13').model('comp2');
model.physics('scdeq13').label('Interval 13');
model.physics('scdeq13').field('none').field('n13');
model.physics('scdeq13').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq13').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq13').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq13').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq13').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq13').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq13').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq13').feature('dir1').selection.named('sel1');
model.physics('scdeq13').feature('cdeq1').set('f', 'Gst13');
model.physics('scdeq13').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq14', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq14').model('comp2');
model.physics('scdeq14').label('Interval 14');
model.physics('scdeq14').field('none').field('n14');
model.physics('scdeq14').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq14').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq14').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq14').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq14').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq14').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq14').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq14').feature('dir1').selection.named('sel1');
model.physics('scdeq14').feature('cdeq1').set('f', 'Gst14');
model.physics('scdeq14').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq15', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq15').model('comp2');
model.physics('scdeq15').label('Interval 15');
model.physics('scdeq15').field('none').field('n15');
model.physics('scdeq15').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq15').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq15').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq15').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq15').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq15').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq15').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq15').feature('dir1').selection.named('sel1');
model.physics('scdeq15').feature('cdeq1').set('f', 'Gst15');
model.physics('scdeq15').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq16', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq16').model('comp2');
model.physics('scdeq16').label('Interval 16');
model.physics('scdeq16').field('none').field('n16');
model.physics('scdeq16').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq16').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq16').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq16').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq16').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq16').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq16').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq16').feature('dir1').selection.named('sel1');
model.physics('scdeq16').feature('cdeq1').set('f', 'Gst16');
model.physics('scdeq16').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq17', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq17').model('comp2');
model.physics('scdeq17').label('Interval 17');
model.physics('scdeq17').field('none').field('n17');
model.physics('scdeq17').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq17').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq17').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq17').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq17').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq17').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq17').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq17').feature('dir1').selection.named('sel1');
model.physics('scdeq17').feature('cdeq1').set('f', 'Gst17');
model.physics('scdeq17').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq18', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq18').model('comp2');
model.physics('scdeq18').label('Interval 18');
model.physics('scdeq18').field('none').field('n18');
model.physics('scdeq18').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq18').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq18').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq18').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq18').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq18').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq18').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq18').feature('dir1').selection.named('sel1');
model.physics('scdeq18').feature('cdeq1').set('f', 'Gst18');
model.physics('scdeq18').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq19', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq19').model('comp2');
model.physics('scdeq19').label('Interval 19');
model.physics('scdeq19').field('none').field('n19');
model.physics('scdeq19').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq19').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq19').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq19').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq19').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq19').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq19').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq19').feature('dir1').selection.named('sel1');
model.physics('scdeq19').feature('cdeq1').set('f', 'Gst19');
model.physics('scdeq19').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq20', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq20').model('comp2');
model.physics('scdeq20').label('Interval 20');
model.physics('scdeq20').field('none').field('n20');
model.physics('scdeq20').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq20').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq20').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq20').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq20').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq20').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq20').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq20').feature('dir1').selection.named('sel1');
model.physics('scdeq20').feature('cdeq1').set('f', 'Gst20');
model.physics('scdeq20').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq21', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq21').model('comp2');
model.physics('scdeq21').label('Interval 21');
model.physics('scdeq21').field('none').field('n21');
model.physics('scdeq21').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq21').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq21').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq21').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq21').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq21').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq21').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq21').feature('dir1').selection.named('sel1');
model.physics('scdeq21').feature('cdeq1').set('f', 'Gst21');
model.physics('scdeq21').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq22', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq22').model('comp2');
model.physics('scdeq22').label('Interval 22');
model.physics('scdeq22').field('none').field('n22');
model.physics('scdeq22').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq22').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq22').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq22').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq22').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq22').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq22').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq22').feature('dir1').selection.named('sel1');
model.physics('scdeq22').feature('cdeq1').set('f', 'Gst22');
model.physics('scdeq22').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq23', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq23').model('comp2');
model.physics('scdeq23').label('Interval 23');
model.physics('scdeq23').field('none').field('n23');
model.physics('scdeq23').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq23').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq23').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq23').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq23').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq23').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq23').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq23').feature('dir1').selection.named('sel1');
model.physics('scdeq23').feature('cdeq1').set('f', 'Gst23');
model.physics('scdeq23').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq24', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq24').model('comp2');
model.physics('scdeq24').label('Interval 24');
model.physics('scdeq24').field('none').field('n24');
model.physics('scdeq24').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq24').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq24').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq24').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq24').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq24').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq24').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq24').feature('dir1').selection.named('sel1');
model.physics('scdeq24').feature('cdeq1').set('f', 'Gst24');
model.physics('scdeq24').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq25', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq25').model('comp2');
model.physics('scdeq25').label('Interval 25');
model.physics('scdeq25').field('none').field('n25');
model.physics('scdeq25').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq25').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq25').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq25').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq25').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq25').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq25').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq25').feature('dir1').selection.named('sel1');
model.physics('scdeq25').feature('cdeq1').set('f', 'Gst25');
model.physics('scdeq25').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq26', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq26').model('comp2');
model.physics('scdeq26').label('Interval 26');
model.physics('scdeq26').field('none').field('n26');
model.physics('scdeq26').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq26').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq26').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq26').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq26').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq26').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq26').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq26').feature('dir1').selection.named('sel1');
model.physics('scdeq26').feature('cdeq1').set('f', 'Gst26');
model.physics('scdeq26').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq27', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq27').model('comp2');
model.physics('scdeq27').label('Interval 27');
model.physics('scdeq27').field('none').field('n27');
model.physics('scdeq27').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq27').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq27').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq27').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq27').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq27').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq27').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq27').feature('dir1').selection.named('sel1');
model.physics('scdeq27').feature('cdeq1').set('f', 'Gst27');
model.physics('scdeq27').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq28', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq28').model('comp2');
model.physics('scdeq28').label('Interval 28');
model.physics('scdeq28').field('none').field('n28');
model.physics('scdeq28').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq28').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq28').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq28').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq28').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq28').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq28').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq28').feature('dir1').selection.named('sel1');
model.physics('scdeq28').feature('cdeq1').set('f', 'Gst28');
model.physics('scdeq28').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq29', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq29').model('comp2');
model.physics('scdeq29').label('Interval 29');
model.physics('scdeq29').field('none').field('n29');
model.physics('scdeq29').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq29').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq29').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq29').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq29').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq29').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq29').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq29').feature('dir1').selection.named('sel1');
model.physics('scdeq29').feature('cdeq1').set('f', 'Gst29');
model.physics('scdeq29').feature('init1').set('initialValue', 'nstart');
model.physics.create('scdeq30', 'StabilizedConvectionDiffusionEquation', 'geom1');
model.physics('scdeq30').model('comp2');
model.physics('scdeq30').label('Interval 30');
model.physics('scdeq30').field('none').field('n30');
model.physics('scdeq30').prop('Units').set('CustomDependentVariableUnit', '1');
model.physics('scdeq30').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('scdeq30').prop('Units').setIndex('CustomDependentVariableUnit', '1/m^4', 0, 0);
model.physics('scdeq30').prop('Units').setIndex('CustomSourceTermUnit', '1/m^4/s', 0, 0);
model.physics('scdeq30').feature('cdeq1').set('c', {'D_particles' '0' '0' '0' 'D_particles' '0' '0' '0' 'D_particles'});
model.physics('scdeq30').feature('cdeq1').set('be', {'u' 'v' 'w'});
model.physics('scdeq30').create('dir1', 'DirichletBoundaryCondition', 2);
model.physics('scdeq30').feature('dir1').selection.named('sel1');
model.physics('scdeq30').feature('cdeq1').set('f', 'Gst30');
model.physics('scdeq30').feature('init1').set('initialValue', 'nstart');

model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').run;
model.result('pg1').create('lnsg1', 'LineSegments');
model.result('pg1').label('Particle Number Density Distribution 1');
model.result('pg1').feature('lnsg1').set('markerpos', 'datapoints');
model.result('pg1').feature('lnsg1').set('linewidth', 'preference');
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L0', 0);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L1', 1);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n1/comp1.N_c', 0);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n1/comp1.N_c', 1);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L1', 2);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L2', 3);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n2/comp1.N_c', 2);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n2/comp1.N_c', 3);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L2', 4);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L3', 5);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n3/comp1.N_c', 4);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n3/comp1.N_c', 5);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L3', 6);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L4', 7);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n4/comp1.N_c', 6);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n4/comp1.N_c', 7);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L4', 8);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L5', 9);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n5/comp1.N_c', 8);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n5/comp1.N_c', 9);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L5', 10);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L6', 11);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n6/comp1.N_c', 10);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n6/comp1.N_c', 11);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L6', 12);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L7', 13);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n7/comp1.N_c', 12);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n7/comp1.N_c', 13);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L7', 14);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L8', 15);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n8/comp1.N_c', 14);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n8/comp1.N_c', 15);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L8', 16);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L9', 17);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n9/comp1.N_c', 16);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n9/comp1.N_c', 17);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L9', 18);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L10', 19);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n10/comp1.N_c', 18);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n10/comp1.N_c', 19);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L10', 20);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L11', 21);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n11/comp1.N_c', 20);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n11/comp1.N_c', 21);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L11', 22);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L12', 23);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n12/comp1.N_c', 22);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n12/comp1.N_c', 23);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L12', 24);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L13', 25);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n13/comp1.N_c', 24);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n13/comp1.N_c', 25);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L13', 26);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L14', 27);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n14/comp1.N_c', 26);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n14/comp1.N_c', 27);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L14', 28);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L15', 29);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n15/comp1.N_c', 28);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n15/comp1.N_c', 29);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L15', 30);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L16', 31);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n16/comp1.N_c', 30);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n16/comp1.N_c', 31);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L16', 32);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L17', 33);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n17/comp1.N_c', 32);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n17/comp1.N_c', 33);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L17', 34);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L18', 35);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n18/comp1.N_c', 34);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n18/comp1.N_c', 35);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L18', 36);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L19', 37);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n19/comp1.N_c', 36);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n19/comp1.N_c', 37);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L19', 38);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L20', 39);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n20/comp1.N_c', 38);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n20/comp1.N_c', 39);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L20', 40);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L21', 41);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n21/comp1.N_c', 40);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n21/comp1.N_c', 41);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L21', 42);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L22', 43);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n22/comp1.N_c', 42);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n22/comp1.N_c', 43);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L22', 44);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L23', 45);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n23/comp1.N_c', 44);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n23/comp1.N_c', 45);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L23', 46);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L24', 47);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n24/comp1.N_c', 46);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n24/comp1.N_c', 47);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L24', 48);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L25', 49);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n25/comp1.N_c', 48);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n25/comp1.N_c', 49);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L25', 50);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L26', 51);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n26/comp1.N_c', 50);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n26/comp1.N_c', 51);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L26', 52);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L27', 53);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n27/comp1.N_c', 52);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n27/comp1.N_c', 53);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L27', 54);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L28', 55);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n28/comp1.N_c', 54);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n28/comp1.N_c', 55);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L28', 56);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L29', 57);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n29/comp1.N_c', 56);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n29/comp1.N_c', 57);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L29', 58);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L30', 59);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n30/comp1.N_c', 58);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n30/comp1.N_c', 59);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L30', 60);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L31', 61);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n31/comp1.N_c', 60);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n31/comp1.N_c', 61);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L31', 62);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L32', 63);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n32/comp1.N_c', 62);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n32/comp1.N_c', 63);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L32', 64);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L33', 65);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n33/comp1.N_c', 64);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n33/comp1.N_c', 65);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L33', 66);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L34', 67);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n34/comp1.N_c', 66);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n34/comp1.N_c', 67);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L34', 68);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L35', 69);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n35/comp1.N_c', 68);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n35/comp1.N_c', 69);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L35', 70);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L36', 71);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n36/comp1.N_c', 70);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n36/comp1.N_c', 71);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L36', 72);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L37', 73);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n37/comp1.N_c', 72);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n37/comp1.N_c', 73);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L37', 74);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L38', 75);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n38/comp1.N_c', 74);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n38/comp1.N_c', 75);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L38', 76);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L39', 77);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n39/comp1.N_c', 76);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n39/comp1.N_c', 77);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L39', 78);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L40', 79);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n40/comp1.N_c', 78);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n40/comp1.N_c', 79);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L40', 80);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L41', 81);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n41/comp1.N_c', 80);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n41/comp1.N_c', 81);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L41', 82);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L42', 83);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n42/comp1.N_c', 82);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n42/comp1.N_c', 83);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L42', 84);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L43', 85);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n43/comp1.N_c', 84);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n43/comp1.N_c', 85);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L43', 86);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L44', 87);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n44/comp1.N_c', 86);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n44/comp1.N_c', 87);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L44', 88);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L45', 89);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n45/comp1.N_c', 88);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n45/comp1.N_c', 89);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L45', 90);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L46', 91);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n46/comp1.N_c', 90);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n46/comp1.N_c', 91);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L46', 92);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L47', 93);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n47/comp1.N_c', 92);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n47/comp1.N_c', 93);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L47', 94);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L48', 95);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n48/comp1.N_c', 94);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n48/comp1.N_c', 95);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L48', 96);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L49', 97);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n49/comp1.N_c', 96);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n49/comp1.N_c', 97);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L49', 98);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L50', 99);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n50/comp1.N_c', 98);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n50/comp1.N_c', 99);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L50', 100);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L51', 101);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n51/comp1.N_c', 100);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n51/comp1.N_c', 101);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L51', 102);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L52', 103);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n52/comp1.N_c', 102);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n52/comp1.N_c', 103);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L52', 104);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L53', 105);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n53/comp1.N_c', 104);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n53/comp1.N_c', 105);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L53', 106);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L54', 107);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n54/comp1.N_c', 106);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n54/comp1.N_c', 107);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L54', 108);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L55', 109);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n55/comp1.N_c', 108);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n55/comp1.N_c', 109);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L55', 110);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L56', 111);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n56/comp1.N_c', 110);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n56/comp1.N_c', 111);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L56', 112);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L57', 113);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n57/comp1.N_c', 112);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n57/comp1.N_c', 113);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L57', 114);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L58', 115);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n58/comp1.N_c', 114);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n58/comp1.N_c', 115);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L58', 116);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L59', 117);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n59/comp1.N_c', 116);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n59/comp1.N_c', 117);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L59', 118);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L60', 119);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n60/comp1.N_c', 118);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n60/comp1.N_c', 119);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L60', 120);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L61', 121);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n61/comp1.N_c', 120);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n61/comp1.N_c', 121);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L61', 122);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L62', 123);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n62/comp1.N_c', 122);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n62/comp1.N_c', 123);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L62', 124);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L63', 125);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n63/comp1.N_c', 124);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n63/comp1.N_c', 125);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L63', 126);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L64', 127);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n64/comp1.N_c', 126);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n64/comp1.N_c', 127);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L64', 128);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L65', 129);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n65/comp1.N_c', 128);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n65/comp1.N_c', 129);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L65', 130);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L66', 131);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n66/comp1.N_c', 130);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n66/comp1.N_c', 131);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L66', 132);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L67', 133);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n67/comp1.N_c', 132);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n67/comp1.N_c', 133);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L67', 134);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L68', 135);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n68/comp1.N_c', 134);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n68/comp1.N_c', 135);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L68', 136);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L69', 137);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n69/comp1.N_c', 136);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n69/comp1.N_c', 137);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L69', 138);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L70', 139);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n70/comp1.N_c', 138);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n70/comp1.N_c', 139);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L70', 140);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L71', 141);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n71/comp1.N_c', 140);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n71/comp1.N_c', 141);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L71', 142);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L72', 143);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n72/comp1.N_c', 142);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n72/comp1.N_c', 143);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L72', 144);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L73', 145);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n73/comp1.N_c', 144);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n73/comp1.N_c', 145);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L73', 146);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L74', 147);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n74/comp1.N_c', 146);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n74/comp1.N_c', 147);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L74', 148);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L75', 149);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n75/comp1.N_c', 148);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n75/comp1.N_c', 149);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L75', 150);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L76', 151);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n76/comp1.N_c', 150);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n76/comp1.N_c', 151);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L76', 152);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L77', 153);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n77/comp1.N_c', 152);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n77/comp1.N_c', 153);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L77', 154);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L78', 155);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n78/comp1.N_c', 154);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n78/comp1.N_c', 155);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L78', 156);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L79', 157);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n79/comp1.N_c', 156);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n79/comp1.N_c', 157);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L79', 158);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L80', 159);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n80/comp1.N_c', 158);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n80/comp1.N_c', 159);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L80', 160);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L81', 161);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n81/comp1.N_c', 160);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n81/comp1.N_c', 161);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L81', 162);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L82', 163);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n82/comp1.N_c', 162);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n82/comp1.N_c', 163);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L82', 164);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L83', 165);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n83/comp1.N_c', 164);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n83/comp1.N_c', 165);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L83', 166);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L84', 167);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n84/comp1.N_c', 166);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n84/comp1.N_c', 167);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L84', 168);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L85', 169);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n85/comp1.N_c', 168);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n85/comp1.N_c', 169);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L85', 170);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L86', 171);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n86/comp1.N_c', 170);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n86/comp1.N_c', 171);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L86', 172);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L87', 173);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n87/comp1.N_c', 172);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n87/comp1.N_c', 173);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L87', 174);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L88', 175);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n88/comp1.N_c', 174);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n88/comp1.N_c', 175);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L88', 176);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L89', 177);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n89/comp1.N_c', 176);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n89/comp1.N_c', 177);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L89', 178);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L90', 179);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n90/comp1.N_c', 178);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n90/comp1.N_c', 179);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L90', 180);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L91', 181);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n91/comp1.N_c', 180);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n91/comp1.N_c', 181);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L91', 182);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L92', 183);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n92/comp1.N_c', 182);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n92/comp1.N_c', 183);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L92', 184);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L93', 185);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n93/comp1.N_c', 184);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n93/comp1.N_c', 185);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L93', 186);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L94', 187);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n94/comp1.N_c', 186);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n94/comp1.N_c', 187);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L94', 188);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L95', 189);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n95/comp1.N_c', 188);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n95/comp1.N_c', 189);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L95', 190);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L96', 191);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n96/comp1.N_c', 190);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n96/comp1.N_c', 191);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L96', 192);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L97', 193);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n97/comp1.N_c', 192);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n97/comp1.N_c', 193);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L97', 194);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L98', 195);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n98/comp1.N_c', 194);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n98/comp1.N_c', 195);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L98', 196);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L99', 197);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n99/comp1.N_c', 196);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n99/comp1.N_c', 197);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L99', 198);
model.result('pg1').feature('lnsg1').setIndex('xexpr', 'comp1.L100', 199);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n100/comp1.N_c', 198);
model.result('pg1').feature('lnsg1').setIndex('yexpr', 'comp1.n100/comp1.N_c', 199);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 0);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 0);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 1);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 1);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 2);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 2);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 3);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 3);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 4);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 4);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 5);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 5);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 6);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 6);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 7);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 7);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 8);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 8);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 9);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 9);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 10);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 10);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 11);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 11);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 12);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 12);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 13);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 13);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 14);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 14);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 15);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 15);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 16);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 16);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 17);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 17);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 18);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 18);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 19);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 19);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 20);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 20);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 21);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 21);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 22);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 22);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 23);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 23);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 24);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 24);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 25);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 25);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 26);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 26);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 27);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 27);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 28);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 28);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 29);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 29);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 30);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 30);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 31);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 31);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 32);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 32);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 33);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 33);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 34);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 34);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 35);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 35);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 36);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 36);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 37);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 37);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 38);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 38);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 39);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 39);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 40);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 40);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 41);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 41);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 42);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 42);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 43);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 43);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 44);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 44);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 45);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 45);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 46);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 46);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 47);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 47);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 48);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 48);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 49);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 49);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 50);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 50);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 51);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 51);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 52);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 52);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 53);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 53);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 54);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 54);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 55);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 55);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 56);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 56);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 57);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 57);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 58);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 58);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 59);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 59);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 60);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 60);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 61);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 61);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 62);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 62);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 63);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 63);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 64);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 64);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 65);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 65);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 66);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 66);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 67);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 67);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 68);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 68);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 69);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 69);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 70);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 70);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 71);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 71);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 72);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 72);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 73);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 73);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 74);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 74);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 75);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 75);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 76);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 76);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 77);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 77);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 78);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 78);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 79);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 79);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 80);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 80);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 81);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 81);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 82);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 82);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 83);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 83);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 84);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 84);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 85);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 85);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 86);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 86);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 87);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 87);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 88);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 88);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 89);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 89);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 90);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 90);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 91);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 91);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 92);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 92);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 93);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 93);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 94);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 94);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 95);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 95);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 96);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 96);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 97);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 97);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 98);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 98);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 99);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 99);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 100);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 100);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 101);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 101);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 102);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 102);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 103);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 103);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 104);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 104);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 105);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 105);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 106);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 106);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 107);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 107);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 108);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 108);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 109);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 109);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 110);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 110);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 111);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 111);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 112);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 112);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 113);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 113);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 114);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 114);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 115);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 115);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 116);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 116);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 117);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 117);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 118);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 118);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 119);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 119);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 120);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 120);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 121);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 121);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 122);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 122);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 123);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 123);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 124);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 124);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 125);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 125);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 126);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 126);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 127);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 127);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 128);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 128);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 129);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 129);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 130);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 130);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 131);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 131);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 132);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 132);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 133);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 133);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 134);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 134);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 135);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 135);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 136);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 136);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 137);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 137);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 138);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 138);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 139);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 139);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 140);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 140);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 141);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 141);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 142);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 142);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 143);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 143);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 144);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 144);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 145);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 145);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 146);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 146);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 147);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 147);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 148);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 148);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 149);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 149);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 150);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 150);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 151);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 151);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 152);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 152);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 153);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 153);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 154);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 154);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 155);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 155);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 156);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 156);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 157);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 157);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 158);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 158);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 159);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 159);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 160);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 160);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 161);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 161);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 162);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 162);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 163);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 163);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 164);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 164);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 165);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 165);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 166);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 166);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 167);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 167);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 168);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 168);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 169);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 169);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 170);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 170);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 171);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 171);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 172);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 172);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 173);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 173);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 174);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 174);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 175);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 175);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 176);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 176);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 177);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 177);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 178);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 178);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 179);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 179);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 180);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 180);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 181);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 181);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 182);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 182);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 183);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 183);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 184);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 184);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 185);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 185);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 186);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 186);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 187);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 187);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 188);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 188);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 189);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 189);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 190);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 190);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 191);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 191);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 192);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 192);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 193);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 193);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 194);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 194);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 195);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 195);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 196);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 196);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 197);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 197);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 198);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 198);
model.result('pg1').feature('lnsg1').setIndex('xunit', 'nm', 199);
model.result('pg1').feature('lnsg1').setIndex('yunit', '1/nm', 199);
model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').create('glob1', 'Global');
model.result('pg2').label('Discretized points 1');
model.result('pg2').set('titletype', 'manual');
model.result('pg2').set('title', 'Crystal size bins');
model.result('pg2').feature('glob1').set('markerpos', 'datapoints');
model.result('pg2').feature('glob1').set('expr', {});
model.result('pg2').feature('glob1').set('descr', {});
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L0', 0);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L1', 1);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L2', 2);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L3', 3);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L4', 4);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L5', 5);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L6', 6);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L7', 7);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L8', 8);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L9', 9);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L10', 10);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L11', 11);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L12', 12);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L13', 13);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L14', 14);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L15', 15);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L16', 16);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L17', 17);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L18', 18);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L19', 19);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L20', 20);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L21', 21);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L22', 22);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L23', 23);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L24', 24);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L25', 25);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L26', 26);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L27', 27);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L28', 28);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L29', 29);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L30', 30);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L31', 31);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L32', 32);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L33', 33);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L34', 34);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L35', 35);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L36', 36);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L37', 37);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L38', 38);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L39', 39);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L40', 40);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L41', 41);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L42', 42);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L43', 43);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L44', 44);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L45', 45);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L46', 46);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L47', 47);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L48', 48);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L49', 49);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L50', 50);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L51', 51);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L52', 52);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L53', 53);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L54', 54);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L55', 55);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L56', 56);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L57', 57);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L58', 58);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L59', 59);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L60', 60);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L61', 61);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L62', 62);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L63', 63);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L64', 64);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L65', 65);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L66', 66);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L67', 67);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L68', 68);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L69', 69);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L70', 70);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L71', 71);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L72', 72);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L73', 73);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L74', 74);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L75', 75);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L76', 76);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L77', 77);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L78', 78);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L79', 79);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L80', 80);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L81', 81);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L82', 82);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L83', 83);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L84', 84);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L85', 85);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L86', 86);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L87', 87);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L88', 88);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L89', 89);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L90', 90);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L91', 91);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L92', 92);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L93', 93);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L94', 94);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L95', 95);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L96', 96);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L97', 97);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L98', 98);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L99', 99);
model.result('pg2').feature('glob1').setIndex('expr', 'comp1.L100', 100);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 0);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 1);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 2);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 3);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 4);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 5);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 6);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 7);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 8);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 9);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 10);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 11);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 12);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 13);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 14);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 15);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 16);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 17);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 18);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 19);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 20);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 21);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 22);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 23);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 24);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 25);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 26);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 27);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 28);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 29);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 30);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 31);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 32);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 33);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 34);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 35);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 36);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 37);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 38);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 39);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 40);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 41);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 42);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 43);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 44);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 45);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 46);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 47);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 48);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 49);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 50);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 51);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 52);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 53);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 54);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 55);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 56);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 57);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 58);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 59);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 60);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 61);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 62);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 63);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 64);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 65);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 66);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 67);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 68);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 69);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 70);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 71);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 72);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 73);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 74);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 75);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 76);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 77);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 78);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 79);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 80);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 81);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 82);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 83);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 84);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 85);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 86);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 87);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 88);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 89);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 90);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 91);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 92);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 93);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 94);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 95);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 96);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 97);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 98);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 99);
model.result('pg2').feature('glob1').setIndex('unit', 'nm', 100);
model.result('pg2').set('xlabelactive', true);
model.result('pg2').set('switchxy', true);
model.result('pg2').set('ylabelactive', true);
model.result('pg2').set('ylabel', '');
model.result('pg2').set('xlabel', 'Crystal size (nm)');
model.result('pg2').feature('glob1').set('linestyle', 'solid');
model.result('pg2').feature('glob1').set('linecolor', 'black');
model.result('pg2').feature('glob1').set('xdata', 'phase');
model.result('pg2').feature('glob1').set('xdataphaserange', 'range(0,1,1)');
model.result('pg2').set('showlegends', false);
model.result.evaluationGroup.create('eg1', 'EvaluationGroup');
model.result.evaluationGroup('eg1').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg1').create('int1', 'IntSurface');
model.result.evaluationGroup('eg1').create('int2', 'IntSurface');
model.result.evaluationGroup('eg1').create('int3', 'IntSurface');
model.result.evaluationGroup('eg1').feature('gev1').set('expr', {});
model.result.evaluationGroup('eg1').feature('gev1').set('descr', {});
model.result.evaluationGroup('eg1').feature('int1').set('intvolume', true);
model.result.evaluationGroup('eg1').feature('int2').set('intvolume', true);
model.result.evaluationGroup('eg1').feature('int3').set('intvolume', true);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L0', 0);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n1*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq.dfluxx*scdeq.nx+scdeq.dfluxz*scdeq.ny+scdeq.dfluxz*scdeq.nz)', 0);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n1*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq.dfluxx*scdeq.nx+scdeq.dfluxz*scdeq.ny+scdeq.dfluxz*scdeq.nz)', 1);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L1', 1);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 0);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 0);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 1);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 1);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L1', 2);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L2', 3);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n2*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq2.dfluxx*scdeq.nx+scdeq2.dfluxz*scdeq.ny+scdeq2.dfluxz*scdeq.nz)', 2);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 2);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 2);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n2*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq2.dfluxx*scdeq.nx+scdeq2.dfluxz*scdeq.ny+scdeq2.dfluxz*scdeq.nz)', 3);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 3);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 3);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L2', 4);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L3', 5);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n3*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq3.dfluxx*scdeq.nx+scdeq3.dfluxz*scdeq.ny+scdeq3.dfluxz*scdeq.nz)', 4);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 4);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 4);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n3*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq3.dfluxx*scdeq.nx+scdeq3.dfluxz*scdeq.ny+scdeq3.dfluxz*scdeq.nz)', 5);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 5);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 5);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L3', 6);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L4', 7);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n4*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq4.dfluxx*scdeq.nx+scdeq4.dfluxz*scdeq.ny+scdeq4.dfluxz*scdeq.nz)', 6);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 6);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 6);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n4*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq4.dfluxx*scdeq.nx+scdeq4.dfluxz*scdeq.ny+scdeq4.dfluxz*scdeq.nz)', 7);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 7);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 7);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L4', 8);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L5', 9);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n5*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq5.dfluxx*scdeq.nx+scdeq5.dfluxz*scdeq.ny+scdeq5.dfluxz*scdeq.nz)', 8);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 8);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 8);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n5*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq5.dfluxx*scdeq.nx+scdeq5.dfluxz*scdeq.ny+scdeq5.dfluxz*scdeq.nz)', 9);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 9);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 9);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L5', 10);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L6', 11);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n6*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq6.dfluxx*scdeq.nx+scdeq6.dfluxz*scdeq.ny+scdeq6.dfluxz*scdeq.nz)', 10);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 10);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 10);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n6*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq6.dfluxx*scdeq.nx+scdeq6.dfluxz*scdeq.ny+scdeq6.dfluxz*scdeq.nz)', 11);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 11);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 11);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L6', 12);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L7', 13);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n7*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq7.dfluxx*scdeq.nx+scdeq7.dfluxz*scdeq.ny+scdeq7.dfluxz*scdeq.nz)', 12);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 12);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 12);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n7*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq7.dfluxx*scdeq.nx+scdeq7.dfluxz*scdeq.ny+scdeq7.dfluxz*scdeq.nz)', 13);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 13);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 13);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L7', 14);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L8', 15);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n8*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq8.dfluxx*scdeq.nx+scdeq8.dfluxz*scdeq.ny+scdeq8.dfluxz*scdeq.nz)', 14);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 14);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 14);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n8*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq8.dfluxx*scdeq.nx+scdeq8.dfluxz*scdeq.ny+scdeq8.dfluxz*scdeq.nz)', 15);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 15);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 15);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L8', 16);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L9', 17);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n9*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq9.dfluxx*scdeq.nx+scdeq9.dfluxz*scdeq.ny+scdeq9.dfluxz*scdeq.nz)', 16);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 16);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 16);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n9*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq9.dfluxx*scdeq.nx+scdeq9.dfluxz*scdeq.ny+scdeq9.dfluxz*scdeq.nz)', 17);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 17);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 17);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L9', 18);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L10', 19);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n10*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq10.dfluxx*scdeq.nx+scdeq10.dfluxz*scdeq.ny+scdeq10.dfluxz*scdeq.nz)', 18);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 18);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 18);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n10*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq10.dfluxx*scdeq.nx+scdeq10.dfluxz*scdeq.ny+scdeq10.dfluxz*scdeq.nz)', 19);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 19);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 19);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L10', 20);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L11', 21);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n11*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq11.dfluxx*scdeq.nx+scdeq11.dfluxz*scdeq.ny+scdeq11.dfluxz*scdeq.nz)', 20);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 20);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 20);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n11*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq11.dfluxx*scdeq.nx+scdeq11.dfluxz*scdeq.ny+scdeq11.dfluxz*scdeq.nz)', 21);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 21);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 21);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L11', 22);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L12', 23);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n12*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq12.dfluxx*scdeq.nx+scdeq12.dfluxz*scdeq.ny+scdeq12.dfluxz*scdeq.nz)', 22);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 22);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 22);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n12*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq12.dfluxx*scdeq.nx+scdeq12.dfluxz*scdeq.ny+scdeq12.dfluxz*scdeq.nz)', 23);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 23);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 23);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L12', 24);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L13', 25);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n13*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq13.dfluxx*scdeq.nx+scdeq13.dfluxz*scdeq.ny+scdeq13.dfluxz*scdeq.nz)', 24);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 24);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 24);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n13*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq13.dfluxx*scdeq.nx+scdeq13.dfluxz*scdeq.ny+scdeq13.dfluxz*scdeq.nz)', 25);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 25);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 25);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L13', 26);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L14', 27);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n14*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq14.dfluxx*scdeq.nx+scdeq14.dfluxz*scdeq.ny+scdeq14.dfluxz*scdeq.nz)', 26);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 26);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 26);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n14*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq14.dfluxx*scdeq.nx+scdeq14.dfluxz*scdeq.ny+scdeq14.dfluxz*scdeq.nz)', 27);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 27);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 27);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L14', 28);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L15', 29);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n15*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq15.dfluxx*scdeq.nx+scdeq15.dfluxz*scdeq.ny+scdeq15.dfluxz*scdeq.nz)', 28);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 28);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 28);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n15*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq15.dfluxx*scdeq.nx+scdeq15.dfluxz*scdeq.ny+scdeq15.dfluxz*scdeq.nz)', 29);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 29);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 29);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L15', 30);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L16', 31);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n16*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq16.dfluxx*scdeq.nx+scdeq16.dfluxz*scdeq.ny+scdeq16.dfluxz*scdeq.nz)', 30);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 30);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 30);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n16*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq16.dfluxx*scdeq.nx+scdeq16.dfluxz*scdeq.ny+scdeq16.dfluxz*scdeq.nz)', 31);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 31);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 31);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L16', 32);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L17', 33);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n17*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq17.dfluxx*scdeq.nx+scdeq17.dfluxz*scdeq.ny+scdeq17.dfluxz*scdeq.nz)', 32);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 32);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 32);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n17*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq17.dfluxx*scdeq.nx+scdeq17.dfluxz*scdeq.ny+scdeq17.dfluxz*scdeq.nz)', 33);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 33);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 33);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L17', 34);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L18', 35);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n18*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq18.dfluxx*scdeq.nx+scdeq18.dfluxz*scdeq.ny+scdeq18.dfluxz*scdeq.nz)', 34);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 34);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 34);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n18*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq18.dfluxx*scdeq.nx+scdeq18.dfluxz*scdeq.ny+scdeq18.dfluxz*scdeq.nz)', 35);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 35);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 35);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L18', 36);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L19', 37);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n19*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq19.dfluxx*scdeq.nx+scdeq19.dfluxz*scdeq.ny+scdeq19.dfluxz*scdeq.nz)', 36);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 36);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 36);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n19*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq19.dfluxx*scdeq.nx+scdeq19.dfluxz*scdeq.ny+scdeq19.dfluxz*scdeq.nz)', 37);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 37);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 37);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L19', 38);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L20', 39);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n20*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq20.dfluxx*scdeq.nx+scdeq20.dfluxz*scdeq.ny+scdeq20.dfluxz*scdeq.nz)', 38);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 38);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 38);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n20*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq20.dfluxx*scdeq.nx+scdeq20.dfluxz*scdeq.ny+scdeq20.dfluxz*scdeq.nz)', 39);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 39);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 39);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L20', 40);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L21', 41);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n21*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq21.dfluxx*scdeq.nx+scdeq21.dfluxz*scdeq.ny+scdeq21.dfluxz*scdeq.nz)', 40);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 40);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 40);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n21*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq21.dfluxx*scdeq.nx+scdeq21.dfluxz*scdeq.ny+scdeq21.dfluxz*scdeq.nz)', 41);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 41);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 41);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L21', 42);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L22', 43);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n22*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq22.dfluxx*scdeq.nx+scdeq22.dfluxz*scdeq.ny+scdeq22.dfluxz*scdeq.nz)', 42);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 42);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 42);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n22*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq22.dfluxx*scdeq.nx+scdeq22.dfluxz*scdeq.ny+scdeq22.dfluxz*scdeq.nz)', 43);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 43);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 43);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L22', 44);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L23', 45);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n23*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq23.dfluxx*scdeq.nx+scdeq23.dfluxz*scdeq.ny+scdeq23.dfluxz*scdeq.nz)', 44);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 44);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 44);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n23*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq23.dfluxx*scdeq.nx+scdeq23.dfluxz*scdeq.ny+scdeq23.dfluxz*scdeq.nz)', 45);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 45);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 45);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L23', 46);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L24', 47);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n24*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq24.dfluxx*scdeq.nx+scdeq24.dfluxz*scdeq.ny+scdeq24.dfluxz*scdeq.nz)', 46);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 46);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 46);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n24*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq24.dfluxx*scdeq.nx+scdeq24.dfluxz*scdeq.ny+scdeq24.dfluxz*scdeq.nz)', 47);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 47);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 47);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L24', 48);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L25', 49);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n25*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq25.dfluxx*scdeq.nx+scdeq25.dfluxz*scdeq.ny+scdeq25.dfluxz*scdeq.nz)', 48);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 48);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 48);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n25*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq25.dfluxx*scdeq.nx+scdeq25.dfluxz*scdeq.ny+scdeq25.dfluxz*scdeq.nz)', 49);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 49);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 49);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L25', 50);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L26', 51);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n26*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq26.dfluxx*scdeq.nx+scdeq26.dfluxz*scdeq.ny+scdeq26.dfluxz*scdeq.nz)', 50);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 50);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 50);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n26*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq26.dfluxx*scdeq.nx+scdeq26.dfluxz*scdeq.ny+scdeq26.dfluxz*scdeq.nz)', 51);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 51);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 51);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L26', 52);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L27', 53);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n27*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq27.dfluxx*scdeq.nx+scdeq27.dfluxz*scdeq.ny+scdeq27.dfluxz*scdeq.nz)', 52);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 52);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 52);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n27*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq27.dfluxx*scdeq.nx+scdeq27.dfluxz*scdeq.ny+scdeq27.dfluxz*scdeq.nz)', 53);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 53);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 53);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L27', 54);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L28', 55);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n28*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq28.dfluxx*scdeq.nx+scdeq28.dfluxz*scdeq.ny+scdeq28.dfluxz*scdeq.nz)', 54);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 54);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 54);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n28*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq28.dfluxx*scdeq.nx+scdeq28.dfluxz*scdeq.ny+scdeq28.dfluxz*scdeq.nz)', 55);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 55);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 55);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L28', 56);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L29', 57);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n29*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq29.dfluxx*scdeq.nx+scdeq29.dfluxz*scdeq.ny+scdeq29.dfluxz*scdeq.nz)', 56);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 56);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 56);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n29*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq29.dfluxx*scdeq.nx+scdeq29.dfluxz*scdeq.ny+scdeq29.dfluxz*scdeq.nz)', 57);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 57);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 57);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L29', 58);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'comp2.L30', 59);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n30*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq30.dfluxx*scdeq.nx+scdeq30.dfluxz*scdeq.ny+scdeq30.dfluxz*scdeq.nz)', 58);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 58);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 58);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'comp2.n30*(u*spf.nx+v*spf.ny+w*spf.nz)+(scdeq30.dfluxx*scdeq.nx+scdeq30.dfluxz*scdeq.ny+scdeq30.dfluxz*scdeq.nz)', 59);
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'u*spf.nx+v*spf.ny+w*spf.nz', 59);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'comp2.N_c*(u*spf.nx+v*spf.ny+w*spf.nz)', 59);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 1);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 2);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 3);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 4);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 5);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 6);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 7);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 8);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 9);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 10);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 11);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 12);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 13);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 14);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 15);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 16);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 17);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 18);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 19);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 20);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 21);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 22);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 23);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 24);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 25);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 26);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 27);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 28);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 29);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 30);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 31);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 32);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 33);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 34);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 35);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 36);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 37);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 38);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 39);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 40);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 41);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 42);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 43);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 44);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 45);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 46);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 47);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 48);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 49);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 50);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 51);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 52);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 53);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 54);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 55);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 56);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 57);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 58);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'nm', 59);
model.result.evaluationGroup('eg1').label('Density Distribution Evaluation Group');
model.result.evaluationGroup('eg1').set('type', 'general');
model.result.evaluationGroup('eg1').set('generalexpr', '(int1/int2)/(int3/int2)*1e-9');
model.result.evaluationGroup('eg1').set('keepchildnodes', true);
model.result.evaluationGroup('eg1').set('includeparameters', false);
model.result.evaluationGroup('eg1').set('concatenation', 'vertical');
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').create('tblp1', 'Table');
model.result('pg3').feature('tblp1').set('source', 'evaluationgroup');
model.result('pg3').label('Particle Number Density Distribution 2');
model.result('pg3').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg3').feature('tblp1').set('linewidth', 'preference');
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').create('glob1', 'Global');
model.result('pg4').label('Discretized points 2');
model.result('pg4').set('titletype', 'manual');
model.result('pg4').set('title', 'Crystal size bins');
model.result('pg4').feature('glob1').set('markerpos', 'datapoints');
model.result('pg4').feature('glob1').set('expr', {});
model.result('pg4').feature('glob1').set('descr', {});
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L0', 0);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L1', 1);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L2', 2);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L3', 3);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L4', 4);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L5', 5);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L6', 6);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L7', 7);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L8', 8);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L9', 9);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L10', 10);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L11', 11);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L12', 12);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L13', 13);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L14', 14);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L15', 15);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L16', 16);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L17', 17);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L18', 18);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L19', 19);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L20', 20);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L21', 21);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L22', 22);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L23', 23);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L24', 24);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L25', 25);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L26', 26);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L27', 27);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L28', 28);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L29', 29);
model.result('pg4').feature('glob1').setIndex('expr', 'comp2.L30', 30);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 0);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 1);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 2);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 3);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 4);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 5);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 6);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 7);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 8);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 9);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 10);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 11);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 12);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 13);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 14);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 15);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 16);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 17);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 18);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 19);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 20);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 21);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 22);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 23);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 24);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 25);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 26);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 27);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 28);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 29);
model.result('pg4').feature('glob1').setIndex('unit', 'nm', 30);
model.result('pg4').set('xlabelactive', true);
model.result('pg4').set('switchxy', true);
model.result('pg4').set('ylabelactive', true);
model.result('pg4').set('ylabel', '');
model.result('pg4').set('xlabel', 'Crystal size (nm)');
model.result('pg4').feature('glob1').set('linestyle', 'solid');
model.result('pg4').feature('glob1').set('linecolor', 'black');
model.result('pg4').feature('glob1').set('xdata', 'phase');
model.result('pg4').feature('glob1').set('xdataphaserange', 'range(0,1,2)');
model.result('pg4').set('showlegends', false);

model.func('an2').set('expr', 'k_a/(3*k_v)*Sh*D_AB*sqrt(K_sp)*M_C*(S-1)/rho_C/L');
model.func('an2').setIndex('argunit', 'm', 0);
model.func('an2').setIndex('argunit', '(mol/m^3)*(mol/m^3)/(mol^2/m^6)', 1);

model.param('par_c').set('k_v', 'pi/6');
model.param('par_c').set('rho_C', 'rho_BaSO4');
model.param('par_c').set('M_C', 'M_BaSO4');
model.param('par_c').set('nstart', '1e10');

model.variable('var8').set('S', 'gamma*sqrt(max(eps,re.c_Ba_2p*re.c_SO4_2m/K_sp))');
model.variable('var8').set('B0', 'B_0');
model.variable('var13').set('S', 'gamma*sqrt(max(eps,cBa_2p*cSO4_2m/K_sp))');
model.variable('var13').set('B0', 'B_0');

model.selection('sel1').set([1 26]);

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/re', true);
model.study('std1').feature('time').setSolveFor('/physics/chem', false);
model.study('std1').feature('time').setSolveFor('/physics/spf', false);
model.study('std1').feature('time').setSolveFor('/physics/tds', false);
model.study('std1').feature('time').setSolveFor('/physics/ge1', true);
model.study('std1').feature('time').setSolveFor('/physics/scdeq1', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq2', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq3', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq4', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq5', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq6', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq7', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq8', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq9', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq10', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq11', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq12', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq13', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq14', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq15', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq16', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq17', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq18', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq19', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq20', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq21', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq22', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq23', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq24', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq25', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq26', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq27', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq28', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq29', false);
model.study('std1').feature('time').setSolveFor('/physics/scdeq30', false);
model.study('std1').setGenPlots(false);

model.sol.create('sol1');

model.mesh('mesh2').stat.selection.geom(3);
model.mesh('mesh2').stat.selection.set([1 2 3 4]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.1,1)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'pg1');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('tout', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 1.0E-5);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('consistent', 'bweuler');
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('t1').set('tout', 'tlist');

model.study('std1').feature('time').set('tlist', '0 0.001 range(0.002,2.0e-3,0.06)');

model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevelinput', 'manual', 0);
model.result('pg1').setIndex('looplevel', [2 3 4 6 10 18 32], 0);
model.result('pg1').run;
model.result('pg1').set('titletype', 'none');
model.result('pg1').set('xlabelactive', true);
model.result('pg1').set('xlabel', 'Crystal size (nm)');
model.result('pg1').set('ylabelactive', true);
model.result('pg1').set('ylabel', 'Normalized Number Density 1/nm');
model.result('pg1').set('axislimits', true);
model.result('pg1').set('xmin', 0);
model.result('pg1').set('xmax', 300);
model.result('pg1').run;
model.result('pg1').feature('lnsg1').set('legend', true);
model.result('pg1').run;
model.result('pg2').run;
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevelinput', 'last', 0);
model.result('pg2').run;
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').set('titletype', 'none');
model.result('pg5').label('Supersaturation');
model.result('pg5').create('glob1', 'Global');
model.result('pg5').feature('glob1').set('markerpos', 'datapoints');
model.result('pg5').feature('glob1').set('linewidth', 'preference');
model.result('pg5').feature('glob1').set('expr', {});
model.result('pg5').feature('glob1').set('descr', {});
model.result('pg5').feature('glob1').setIndex('expr', 'comp1.S', 0);
model.result('pg5').feature('glob1').set('legend', false);
model.result('pg5').run;
model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').run;
model.result('pg6').label('Mass Balance');
model.result('pg6').set('titletype', 'none');
model.result('pg6').set('xlabelactive', true);
model.result('pg6').set('xlabel', 'Time (s)');
model.result('pg6').set('ylabelactive', true);
model.result('pg6').set('ylabel', 'Mass concentration (kg/m<SUP>3</SUP>)');
model.result('pg6').set('legendpos', 'upperleft');
model.result('pg6').create('glob1', 'Global');
model.result('pg6').feature('glob1').set('markerpos', 'datapoints');
model.result('pg6').feature('glob1').set('linewidth', 'preference');
model.result('pg6').feature('glob1').set('expr', {});
model.result('pg6').feature('glob1').set('descr', {});
model.result('pg6').feature('glob1').setIndex('expr', '(comp1.re.c_HSO4_1m+comp1.re.c_SO4_2m)*M_SO4_2m', 0);
model.result('pg6').feature('glob1').setIndex('expr', 'M_Ba_2p*comp1.re.c_Ba_2p', 1);
model.result('pg6').feature('glob1').setIndex('expr', 'M_C*comp1.re.c_BaSO4', 2);
model.result('pg6').feature('glob1').setIndex('expr', 'comp1.M_c_sum', 3);
model.result('pg6').feature('glob1').setIndex('expr', 'M_SO4_2m*(comp1.re.c_SO4_2m+comp1.re.c_HSO4_1m)+M_Ba_2p*comp1.re.c_Ba_2p+M_C*comp1.re.c_BaSO4+comp1.M_c_sum', 4);
model.result('pg6').feature('glob1').setIndex('descr', 'Sulfate mass concentration', 0);
model.result('pg6').feature('glob1').setIndex('descr', 'Barium mass concentration', 1);
model.result('pg6').feature('glob1').setIndex('descr', 'Barium sulfate mass concentration', 2);
model.result('pg6').feature('glob1').setIndex('descr', 'Total crystal mass concentration', 3);
model.result('pg6').feature('glob1').setIndex('descr', 'Total mass concentration', 4);
model.result('pg6').feature('glob1').set('legendmethod', 'manual');
model.result('pg6').feature('glob1').setIndex('legends', 'Sulfate', 0);
model.result('pg6').feature('glob1').setIndex('legends', 'Barium', 1);
model.result('pg6').feature('glob1').setIndex('legends', 'Aqueous Barium Sulfate', 2);
model.result('pg6').feature('glob1').setIndex('legends', 'Crystalline Barium Sulfate', 3);
model.result('pg6').feature('glob1').setIndex('legends', 'Total', 4);
model.result('pg6').run;
model.result('pg1').run;

model.nodeGroup.create('grp1', 'Results');
model.nodeGroup('grp1').set('type', 'plotgroup');
model.nodeGroup('grp1').add('plotgroup', 'pg1');
model.nodeGroup('grp1').add('plotgroup', 'pg2');
model.nodeGroup('grp1').add('plotgroup', 'pg5');
model.nodeGroup('grp1').add('plotgroup', 'pg6');
model.nodeGroup('grp1').label('Perfectly Mixed Batch Reactor');

% Started method call generateStudy

model.study.create('std2');
model.study('std2').create('stat1', 'Stationary');
model.study('std2').feature('stat1').set('useinitsol', true);
model.study('std2').feature('stat1').set('usesol', true);
model.study('std2').feature('stat1').setEntry('activate', 'ge1', false);
model.study('std2').feature('stat1').setEntry('activate', 'chem', false);
model.study('std2').feature('stat1').setEntry('activate', 'tds', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq1', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq2', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq3', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq4', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq5', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq6', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq7', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq8', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq9', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq10', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq11', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq12', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq13', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq14', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq15', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq16', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq17', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq18', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq19', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq20', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq21', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq22', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq23', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq24', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq25', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq26', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq27', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq28', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq29', false);
model.study('std2').feature('stat1').setEntry('activate', 'scdeq30', false);
model.study('std2').feature('stat1').setEntry('mesh', 'geom1', 'mesh2');
model.study('std2').create('stat2', 'Stationary');
model.study('std2').feature('stat2').setEntry('activate', 'spf', false);
model.study('std2').feature('stat2').setEntry('activate', 'ge1', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq1', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq2', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq3', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq4', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq5', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq6', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq7', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq8', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq9', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq10', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq11', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq12', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq13', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq14', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq15', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq16', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq17', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq18', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq19', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq20', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq21', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq22', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq23', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq24', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq25', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq26', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq27', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq28', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq29', false);
model.study('std2').feature('stat2').setEntry('activate', 'scdeq30', false);
model.study('std2').feature('stat2').setEntry('mesh', 'geom1', 'mesh1');
model.study('std2').feature('stat2').set('useinitsol', true);
model.study('std2').feature('stat2').set('usesol', true);
model.study('std2').feature('stat2').set('initmethod', 'init');
model.study('std2').feature('stat2').set('initstudy', 'std2');
model.study('std2').feature('stat2').set('initsol', 'current');
model.study('std2').feature('stat2').set('notsolmethod', 'sol');
model.study('std2').feature('stat2').set('notstudy', 'std2');
model.study('std2').feature('stat2').set('notsol', 'current');
model.study('std2').create('stat3', 'Stationary');
model.study('std2').feature('stat3').setEntry('activate', 'spf', false);
model.study('std2').feature('stat3').setEntry('activate', 'ge1', false);
model.study('std2').feature('stat3').setEntry('activate', 'chem', false);
model.study('std2').feature('stat3').setEntry('activate', 'tds', false);
model.study('std2').feature('stat3').setEntry('mesh', 'geom1', 'mesh1');
model.study('std2').feature('stat3').set('useinitsol', true);
model.study('std2').feature('stat3').set('usesol', true);
model.study('std2').feature('stat3').set('initmethod', 'sol');
model.study('std2').feature('stat3').set('initstudy', 'std2');
model.study('std2').feature('stat3').set('initsol', 'current');
model.study('std2').feature('stat3').set('notsolmethod', 'sol');
model.study('std2').feature('stat3').set('notstudy', 'std2');
model.study('std2').feature('stat3').set('notsol', 'current');
model.study('std2').create('stat4', 'Stationary');
model.study('std2').feature('stat4').setEntry('activate', 'spf', false);
model.study('std2').feature('stat4').setEntry('activate', 'ge1', false);
model.study('std2').feature('stat4').setEntry('mesh', 'geom1', 'mesh1');
model.study('std2').feature('stat4').set('useinitsol', true);
model.study('std2').feature('stat4').set('usesol', true);
model.study('std2').feature('stat4').set('initmethod', 'sol');
model.study('std2').feature('stat4').set('initstudy', 'std2');
model.study('std2').feature('stat4').set('initsol', 'current');
model.study('std2').feature('stat4').set('notsolmethod', 'sol');
model.study('std2').feature('stat4').set('notstudy', 'std2');
model.study('std2').feature('stat4').set('notsol', 'current');
model.study('std2').create('stat5', 'Stationary');
model.study('std2').feature('stat5').setEntry('activate', 'ge1', false);
model.study('std2').feature('stat5').setEntry('activate', 'chem', false);
model.study('std2').feature('stat5').setEntry('activate', 'tds', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq1', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq2', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq3', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq4', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq5', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq6', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq7', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq8', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq9', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq10', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq11', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq12', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq13', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq14', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq15', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq16', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq17', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq18', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq19', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq20', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq21', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq22', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq23', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq24', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq25', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq26', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq27', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq28', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq29', false);
model.study('std2').feature('stat5').setEntry('activate', 'scdeq30', false);
model.study('std2').feature('stat5').setEntry('mesh', 'geom1', 'mesh2');
model.study('std2').feature('stat5').set('useinitsol', true);
model.study('std2').feature('stat5').set('usesol', true);
model.study('std2').feature('stat5').set('initmethod', 'sol');
model.study('std2').feature('stat5').set('initstudy', 'std2');
model.study('std2').feature('stat5').set('initsol', 'current');
model.study('std2').feature('stat5').set('notsolmethod', 'sol');
model.study('std2').feature('stat5').set('notstudy', 'std2');
model.study('std2').feature('stat5').set('notsol', 'current');
model.study('std2').create('stat6', 'Stationary');
model.study('std2').feature('stat6').setEntry('activate', 'ge1', false);
model.study('std2').feature('stat6').setEntry('activate', 'spf', false);
model.study('std2').feature('stat6').setEntry('mesh', 'geom1', 'mesh2');
model.study('std2').feature('stat6').set('useinitsol', true);
model.study('std2').feature('stat6').set('usesol', true);
model.study('std2').feature('stat6').set('initmethod', 'sol');
model.study('std2').feature('stat6').set('initstudy', 'std2');
model.study('std2').feature('stat6').set('initsol', 'current');
model.study('std2').feature('stat6').set('notsolmethod', 'sol');
model.study('std2').feature('stat6').set('notstudy', 'std2');
model.study('std2').feature('stat6').set('notsol', 'current');

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat1');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat1');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol2').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol2').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol2').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol2').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol2').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol2').feature('s1').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp2_spf_inl1_Pinlfdf' 'comp2_spf_inl2_Pinlfdf'});
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp2_spf_inl1_Pinlfdf' 'comp2_spf_inl2_Pinlfdf'});
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s1').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s1').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol2').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol2').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol2').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').create('su1', 'StoreSolution');
model.sol('sol2').create('st2', 'StudyStep');
model.sol('sol2').feature('st2').set('study', 'std2');
model.sol('sol2').feature('st2').set('studystep', 'stat2');
model.sol('sol2').create('v2', 'Variables');
model.sol('sol2').feature('v2').set('initmethod', 'sol');
model.sol('sol2').feature('v2').set('initsol', 'sol2');
model.sol('sol2').feature('v2').set('notsolmethod', 'sol');
model.sol('sol2').feature('v2').set('notsol', 'sol2');
model.sol('sol2').feature('v2').set('control', 'stat2');
model.sol('sol2').create('s2', 'Stationary');
model.sol('sol2').feature('s2').set('stol', 0.001);
model.sol('sol2').feature('s2').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s2').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol2').feature('s2').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol2').feature('s2').feature('fc1').set('maxiter', 50);
model.sol('sol2').feature('s2').create('d1', 'Direct');
model.sol('sol2').feature('s2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s2').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s2').feature('d1').label('Direct, concentrations (tds)');
model.sol('sol2').feature('s2').create('i1', 'Iterative');
model.sol('sol2').feature('s2').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('s2').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('s2').feature('i1').set('itrestart', 50);
model.sol('sol2').feature('s2').feature('i1').set('rhob', 400);
model.sol('sol2').feature('s2').feature('i1').set('maxlinit', 1000);
model.sol('sol2').feature('s2').feature('i1').set('nlinnormuse', 'on');
model.sol('sol2').feature('s2').feature('i1').label('AMG, concentrations (tds)');
model.sol('sol2').feature('s2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s2').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol2').feature('s2').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol2').feature('s2').feature('fc1').set('maxiter', 50);
model.sol('sol2').feature('s2').feature.remove('fcDef');
model.sol('sol2').create('su2', 'StoreSolution');
model.sol('sol2').feature('s2').feature('i1').active(true);
model.sol('sol2').feature('s2').feature('fc1').set('dtech', 'const');
model.sol('sol2').feature('s2').feature('fc1').set('damp', '0.5');
model.sol('sol2').feature('s2').feature('fc1').set('maxiter', 200);
model.sol('sol2').create('st3', 'StudyStep');
model.sol('sol2').feature('st3').set('study', 'std2');
model.sol('sol2').feature('st3').set('studystep', 'stat3');
model.sol('sol2').create('v3', 'Variables');
model.sol('sol2').feature('v3').set('control', 'stat3');
model.sol('sol2').feature('v3').set('scalemethod', 'manual');
model.sol('sol2').feature('v3').set('scaleval', '1e24');
model.sol('sol2').feature('v3').feature('comp2_cBa_2p').set('scalemethod', 'init');
model.sol('sol2').feature('v3').feature('comp2_cBaSO4').set('scalemethod', 'init');
model.sol('sol2').feature('v3').feature('comp2_cCl_1m').set('scalemethod', 'init');
model.sol('sol2').feature('v3').feature('comp2_cH_1p').set('scalemethod', 'init');
model.sol('sol2').feature('v3').feature('comp2_cHSO4_1m').set('scalemethod', 'init');
model.sol('sol2').feature('v3').feature('comp2_cSO4_2m').set('scalemethod', 'init');
model.sol('sol2').create('s3', 'Stationary');
model.sol('sol2').feature('s3').create('se1', 'Segregated');
model.sol('sol2').feature('s3').create('i1', 'Iterative');
model.sol('sol2').feature('s3').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s3').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('s3').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('s3').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol2').feature('s3').feature('i1').feature('mg1').feature('pr').feature.remove('soDef');
model.sol('sol2').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol2').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('s3').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol2').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol2').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s3').feature('i1').feature('mg1').feature('po').feature.remove('soDef');
model.sol('sol2').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('s3').feature('i1').feature('mg1').feature('cs').feature('dDef').set('linsolver', 'pardiso');
model.sol('sol2').feature('s3').feature('i1').feature('mg1').feature('cs').feature('dDef').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s3').create('i2', 'Iterative');
model.sol('sol2').feature('s3').feature('i2').create('mg1', 'Multigrid');
model.sol('sol2').feature('s3').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('s3').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('s3').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol2').feature('s3').feature('i2').feature('mg1').feature('pr').feature.remove('soDef');
model.sol('sol2').feature('s3').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s3').feature('i2').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol2').feature('s3').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('s3').feature('i2').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('s3').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol2').feature('s3').feature('i2').feature('mg1').feature('po').feature.remove('soDef');
model.sol('sol2').feature('s3').feature('i2').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol2').feature('s3').feature('i2').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('s3').feature('i2').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('s3').feature('i2').feature('mg1').feature('cs').feature('dDef').set('linsolver', 'pardiso');
model.sol('sol2').feature('s3').feature('i2').feature('mg1').feature('cs').feature('dDef').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s3').feature('se1').feature('ssDef').set('segvar', {'comp2_cBa_2p' 'comp2_cBaSO4' 'comp2_cCl_1m' 'comp2_cH_1p' 'comp2_cHSO4_1m' 'comp2_cSO4_2m'});
model.sol('sol2').feature('s3').feature('se1').feature('ssDef').set('linsolver', 'i2');
model.sol('sol2').feature('s3').feature('se1').feature('ssDef').set('subdamp', '0.5');
model.sol('sol2').feature('s3').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol2').feature('s3').feature('se1').feature('ss1').set('segvar', {'comp2_n3' 'comp2_n2' 'comp2_n1'});
model.sol('sol2').feature('s3').feature('se1').feature('ss1').set('linsolver', 'dDef');
model.sol('sol2').feature('s3').feature('se1').feature('ss1').set('subdamp', '0.25');
model.sol('sol2').feature('s3').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol2').feature('s3').feature('se1').feature('ss2').set('segvar', {'comp2_n6' 'comp2_n5' 'comp2_n4'});
model.sol('sol2').feature('s3').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol2').feature('s3').feature('se1').feature('ss2').set('subdamp', '0.5');
model.sol('sol2').feature('s3').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol2').feature('s3').feature('se1').feature('ss3').set('segvar', {'comp2_n9' 'comp2_n8' 'comp2_n7'});
model.sol('sol2').feature('s3').feature('se1').feature('ss3').set('linsolver', 'dDef');
model.sol('sol2').feature('s3').feature('se1').feature('ss3').set('subdamp', '0.5');
model.sol('sol2').feature('s3').feature('se1').create('ss4', 'SegregatedStep');
model.sol('sol2').feature('s3').feature('se1').feature('ss4').set('segvar', {'comp2_n12' 'comp2_n11' 'comp2_n10'});
model.sol('sol2').feature('s3').feature('se1').feature('ss4').set('linsolver', 'i1');
model.sol('sol2').feature('s3').feature('se1').feature('ss4').set('subdamp', '0.5');
model.sol('sol2').feature('s3').feature('se1').create('ss5', 'SegregatedStep');
model.sol('sol2').feature('s3').feature('se1').feature('ss5').set('segvar', {'comp2_n15' 'comp2_n14' 'comp2_n13'});
model.sol('sol2').feature('s3').feature('se1').feature('ss5').set('linsolver', 'i1');
model.sol('sol2').feature('s3').feature('se1').feature('ss5').set('subdamp', '0.5');
model.sol('sol2').feature('s3').feature('se1').create('ss6', 'SegregatedStep');
model.sol('sol2').feature('s3').feature('se1').feature('ss6').set('segvar', {'comp2_n18' 'comp2_n17' 'comp2_n16'});
model.sol('sol2').feature('s3').feature('se1').feature('ss6').set('linsolver', 'i1');
model.sol('sol2').feature('s3').feature('se1').feature('ss6').set('subdamp', '0.5');
model.sol('sol2').feature('s3').feature('se1').create('ss7', 'SegregatedStep');
model.sol('sol2').feature('s3').feature('se1').feature('ss7').set('segvar', {'comp2_n21' 'comp2_n20' 'comp2_n19'});
model.sol('sol2').feature('s3').feature('se1').feature('ss7').set('linsolver', 'i1');
model.sol('sol2').feature('s3').feature('se1').feature('ss7').set('subdamp', '0.5');
model.sol('sol2').feature('s3').feature('se1').create('ss8', 'SegregatedStep');
model.sol('sol2').feature('s3').feature('se1').feature('ss8').set('segvar', {'comp2_n24' 'comp2_n23' 'comp2_n22'});
model.sol('sol2').feature('s3').feature('se1').feature('ss8').set('linsolver', 'i1');
model.sol('sol2').feature('s3').feature('se1').feature('ss8').set('subdamp', '0.5');
model.sol('sol2').feature('s3').feature('se1').create('ss9', 'SegregatedStep');
model.sol('sol2').feature('s3').feature('se1').feature('ss9').set('segvar', {'comp2_n27' 'comp2_n26' 'comp2_n25'});
model.sol('sol2').feature('s3').feature('se1').feature('ss9').set('linsolver', 'i1');
model.sol('sol2').feature('s3').feature('se1').feature('ss9').set('subdamp', '0.5');
model.sol('sol2').feature('s3').feature('se1').create('ss10', 'SegregatedStep');
model.sol('sol2').feature('s3').feature('se1').feature('ss10').set('segvar', {'comp2_n30' 'comp2_n29' 'comp2_n28'});
model.sol('sol2').feature('s3').feature('se1').feature('ss10').set('linsolver', 'i1');
model.sol('sol2').feature('s3').feature('se1').feature('ss10').set('subdamp', '0.5');
model.sol('sol2').feature('s3').feature('dDef').set('linsolver', 'pardiso');
model.sol('sol2').feature('s3').feature('dDef').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s3').feature('i2').set('nlinnormuse', true);
model.sol('sol2').feature('s3').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s3').feature('i1').set('nlinnormuse', true);
model.sol('sol2').feature('s3').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s3').feature('i1').set('rhob', 20);
model.sol('sol2').feature('s3').feature('i1').set('maxlinit', 1000);
model.sol('sol2').feature('s3').feature('i2').set('maxlinit', 1000);
model.sol('sol2').feature('s3').feature('i2').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s3').feature('se1').feature.move('ssDef', 10);
model.sol('sol2').create('su3', 'StoreSolution');
model.sol('sol2').create('st4', 'StudyStep');
model.sol('sol2').feature('st4').set('study', 'std2');
model.sol('sol2').feature('st4').set('studystep', 'stat4');
model.sol('sol2').create('v4', 'Variables');
model.sol('sol2').feature('v4').set('control', 'stat4');
model.sol('sol2').feature('v4').set('scalemethod', 'manual');
model.sol('sol2').feature('v4').set('scaleval', '1e24');
model.sol('sol2').feature('v4').feature('comp2_cBa_2p').set('scalemethod', 'init');
model.sol('sol2').feature('v4').feature('comp2_cBaSO4').set('scalemethod', 'init');
model.sol('sol2').feature('v4').feature('comp2_cCl_1m').set('scalemethod', 'init');
model.sol('sol2').feature('v4').feature('comp2_cH_1p').set('scalemethod', 'init');
model.sol('sol2').feature('v4').feature('comp2_cHSO4_1m').set('scalemethod', 'init');
model.sol('sol2').feature('v4').feature('comp2_cSO4_2m').set('scalemethod', 'init');
model.sol('sol2').create('s4', 'Stationary');
model.sol('sol2').feature('s4').create('se1', 'Segregated');
model.sol('sol2').feature('s4').create('i1', 'Iterative');
model.sol('sol2').feature('s4').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s4').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('s4').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('s4').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol2').feature('s4').feature('i1').feature('mg1').feature('pr').feature.remove('soDef');
model.sol('sol2').feature('s4').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol2').feature('s4').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('s4').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('s4').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol2').feature('s4').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol2').feature('s4').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('s4').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s4').feature('i1').feature('mg1').feature('po').feature.remove('soDef');
model.sol('sol2').feature('s4').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s4').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('s4').feature('i1').feature('mg1').feature('cs').feature('dDef').set('linsolver', 'pardiso');
model.sol('sol2').feature('s4').feature('i1').feature('mg1').feature('cs').feature('dDef').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s4').create('i2', 'Iterative');
model.sol('sol2').feature('s4').feature('i2').create('mg1', 'Multigrid');
model.sol('sol2').feature('s4').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('s4').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('s4').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol2').feature('s4').feature('i2').feature('mg1').feature('pr').feature.remove('soDef');
model.sol('sol2').feature('s4').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s4').feature('i2').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol2').feature('s4').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('s4').feature('i2').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('s4').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol2').feature('s4').feature('i2').feature('mg1').feature('po').feature.remove('soDef');
model.sol('sol2').feature('s4').feature('i2').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol2').feature('s4').feature('i2').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('s4').feature('i2').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('s4').feature('i2').feature('mg1').feature('cs').feature('dDef').set('linsolver', 'pardiso');
model.sol('sol2').feature('s4').feature('i2').feature('mg1').feature('cs').feature('dDef').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s4').feature('se1').feature('ssDef').set('segvar', {'comp2_cBa_2p' 'comp2_cBaSO4' 'comp2_cCl_1m' 'comp2_cH_1p' 'comp2_cHSO4_1m' 'comp2_cSO4_2m'});
model.sol('sol2').feature('s4').feature('se1').feature('ssDef').set('linsolver', 'i2');
model.sol('sol2').feature('s4').feature('se1').feature('ssDef').set('subdamp', '0.5');
model.sol('sol2').feature('s4').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol2').feature('s4').feature('se1').feature('ss1').set('segvar', {'comp2_n3' 'comp2_n2' 'comp2_n1'});
model.sol('sol2').feature('s4').feature('se1').feature('ss1').set('linsolver', 'dDef');
model.sol('sol2').feature('s4').feature('se1').feature('ss1').set('subdamp', '0.25');
model.sol('sol2').feature('s4').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol2').feature('s4').feature('se1').feature('ss2').set('segvar', {'comp2_n6' 'comp2_n5' 'comp2_n4'});
model.sol('sol2').feature('s4').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol2').feature('s4').feature('se1').feature('ss2').set('subdamp', '0.5');
model.sol('sol2').feature('s4').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol2').feature('s4').feature('se1').feature('ss3').set('segvar', {'comp2_n9' 'comp2_n8' 'comp2_n7'});
model.sol('sol2').feature('s4').feature('se1').feature('ss3').set('linsolver', 'dDef');
model.sol('sol2').feature('s4').feature('se1').feature('ss3').set('subdamp', '0.5');
model.sol('sol2').feature('s4').feature('se1').create('ss4', 'SegregatedStep');
model.sol('sol2').feature('s4').feature('se1').feature('ss4').set('segvar', {'comp2_n12' 'comp2_n11' 'comp2_n10'});
model.sol('sol2').feature('s4').feature('se1').feature('ss4').set('linsolver', 'i1');
model.sol('sol2').feature('s4').feature('se1').feature('ss4').set('subdamp', '0.5');
model.sol('sol2').feature('s4').feature('se1').create('ss5', 'SegregatedStep');
model.sol('sol2').feature('s4').feature('se1').feature('ss5').set('segvar', {'comp2_n15' 'comp2_n14' 'comp2_n13'});
model.sol('sol2').feature('s4').feature('se1').feature('ss5').set('linsolver', 'i1');
model.sol('sol2').feature('s4').feature('se1').feature('ss5').set('subdamp', '0.5');
model.sol('sol2').feature('s4').feature('se1').create('ss6', 'SegregatedStep');
model.sol('sol2').feature('s4').feature('se1').feature('ss6').set('segvar', {'comp2_n18' 'comp2_n17' 'comp2_n16'});
model.sol('sol2').feature('s4').feature('se1').feature('ss6').set('linsolver', 'i1');
model.sol('sol2').feature('s4').feature('se1').feature('ss6').set('subdamp', '0.5');
model.sol('sol2').feature('s4').feature('se1').create('ss7', 'SegregatedStep');
model.sol('sol2').feature('s4').feature('se1').feature('ss7').set('segvar', {'comp2_n21' 'comp2_n20' 'comp2_n19'});
model.sol('sol2').feature('s4').feature('se1').feature('ss7').set('linsolver', 'i1');
model.sol('sol2').feature('s4').feature('se1').feature('ss7').set('subdamp', '0.5');
model.sol('sol2').feature('s4').feature('se1').create('ss8', 'SegregatedStep');
model.sol('sol2').feature('s4').feature('se1').feature('ss8').set('segvar', {'comp2_n24' 'comp2_n23' 'comp2_n22'});
model.sol('sol2').feature('s4').feature('se1').feature('ss8').set('linsolver', 'i1');
model.sol('sol2').feature('s4').feature('se1').feature('ss8').set('subdamp', '0.5');
model.sol('sol2').feature('s4').feature('se1').create('ss9', 'SegregatedStep');
model.sol('sol2').feature('s4').feature('se1').feature('ss9').set('segvar', {'comp2_n27' 'comp2_n26' 'comp2_n25'});
model.sol('sol2').feature('s4').feature('se1').feature('ss9').set('linsolver', 'i1');
model.sol('sol2').feature('s4').feature('se1').feature('ss9').set('subdamp', '0.5');
model.sol('sol2').feature('s4').feature('se1').create('ss10', 'SegregatedStep');
model.sol('sol2').feature('s4').feature('se1').feature('ss10').set('segvar', {'comp2_n30' 'comp2_n29' 'comp2_n28'});
model.sol('sol2').feature('s4').feature('se1').feature('ss10').set('linsolver', 'i1');
model.sol('sol2').feature('s4').feature('se1').feature('ss10').set('subdamp', '0.5');
model.sol('sol2').feature('s4').feature('dDef').set('linsolver', 'pardiso');
model.sol('sol2').feature('s4').feature('dDef').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s4').feature('i2').set('nlinnormuse', true);
model.sol('sol2').feature('s4').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s4').feature('i1').set('nlinnormuse', true);
model.sol('sol2').feature('s4').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s4').feature('i1').set('rhob', 20);
model.sol('sol2').feature('s4').feature('i1').set('maxlinit', 1000);
model.sol('sol2').feature('s4').feature('i2').set('maxlinit', 1000);
model.sol('sol2').feature('s4').feature('i2').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s4').feature('se1').feature.move('ssDef', 10);
model.sol('sol2').create('su4', 'StoreSolution');
model.sol('sol2').create('st5', 'StudyStep');
model.sol('sol2').feature('st5').set('study', 'std2');
model.sol('sol2').feature('st5').set('studystep', 'stat5');
model.sol('sol2').create('v5', 'Variables');
model.sol('sol2').feature('v5').set('initmethod', 'sol');
model.sol('sol2').feature('v5').set('initsol', 'sol2');
model.sol('sol2').feature('v5').set('initsoluse', 'sol3');
model.sol('sol2').feature('v5').set('notsolmethod', 'sol');
model.sol('sol2').feature('v5').set('notsol', 'sol2');
model.sol('sol2').feature('v5').set('control', 'stat5');
model.sol('sol2').create('s5', 'Stationary');
model.sol('sol2').feature('s5').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s5').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s5').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('s5').feature('fc1').set('initstep', 0.01);
model.sol('sol2').feature('s5').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol2').feature('s5').feature('fc1').set('maxiter', 100);
model.sol('sol2').feature('s5').create('i1', 'Iterative');
model.sol('sol2').feature('s5').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('s5').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('s5').feature('i1').set('itrestart', 50);
model.sol('sol2').feature('s5').feature('i1').set('rhob', 20);
model.sol('sol2').feature('s5').feature('i1').set('maxlinit', 1000);
model.sol('sol2').feature('s5').feature('i1').set('nlinnormuse', 'on');
model.sol('sol2').feature('s5').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol2').feature('s5').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s5').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('s5').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('s5').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol2').feature('s5').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol2').feature('s5').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('s5').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('s5').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('s5').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('s5').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('s5').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol2').feature('s5').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s5').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol2').feature('s5').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol2').feature('s5').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol2').feature('s5').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol2').feature('s5').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol2').feature('s5').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol2').feature('s5').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp2_spf_inl1_Pinlfdf' 'comp2_spf_inl2_Pinlfdf'});
model.sol('sol2').feature('s5').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol2').feature('s5').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol2').feature('s5').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol2').feature('s5').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol2').feature('s5').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s5').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol2').feature('s5').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol2').feature('s5').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol2').feature('s5').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol2').feature('s5').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol2').feature('s5').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol2').feature('s5').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp2_spf_inl1_Pinlfdf' 'comp2_spf_inl2_Pinlfdf'});
model.sol('sol2').feature('s5').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol2').feature('s5').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol2').feature('s5').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol2').feature('s5').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('s5').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s5').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s5').create('d1', 'Direct');
model.sol('sol2').feature('s5').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s5').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s5').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol2').feature('s5').feature('fc1').set('linsolver', 'i1');
model.sol('sol2').feature('s5').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('s5').feature('fc1').set('initstep', 0.01);
model.sol('sol2').feature('s5').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol2').feature('s5').feature('fc1').set('maxiter', 100);
model.sol('sol2').feature('s5').feature.remove('fcDef');
model.sol('sol2').create('su5', 'StoreSolution');
model.sol('sol2').create('st6', 'StudyStep');
model.sol('sol2').feature('st6').set('study', 'std2');
model.sol('sol2').feature('st6').set('studystep', 'stat6');
model.sol('sol2').create('v6', 'Variables');
model.sol('sol2').feature('v6').set('control', 'stat6');
model.sol('sol2').feature('v6').set('scalemethod', 'manual');
model.sol('sol2').feature('v6').set('scaleval', '1e24');
model.sol('sol2').feature('v6').feature('comp2_cBa_2p').set('scalemethod', 'init');
model.sol('sol2').feature('v6').feature('comp2_cBaSO4').set('scalemethod', 'init');
model.sol('sol2').feature('v6').feature('comp2_cCl_1m').set('scalemethod', 'init');
model.sol('sol2').feature('v6').feature('comp2_cH_1p').set('scalemethod', 'init');
model.sol('sol2').feature('v6').feature('comp2_cHSO4_1m').set('scalemethod', 'init');
model.sol('sol2').feature('v6').feature('comp2_cSO4_2m').set('scalemethod', 'init');
model.sol('sol2').create('s6', 'Stationary');
model.sol('sol2').feature('s6').create('se1', 'Segregated');
model.sol('sol2').feature('s6').create('i1', 'Iterative');
model.sol('sol2').feature('s6').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s6').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('s6').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('s6').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol2').feature('s6').feature('i1').feature('mg1').feature('pr').feature.remove('soDef');
model.sol('sol2').feature('s6').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol2').feature('s6').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('s6').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('s6').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol2').feature('s6').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol2').feature('s6').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('s6').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s6').feature('i1').feature('mg1').feature('po').feature.remove('soDef');
model.sol('sol2').feature('s6').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s6').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('s6').feature('i1').feature('mg1').feature('cs').feature('dDef').set('linsolver', 'pardiso');
model.sol('sol2').feature('s6').feature('i1').feature('mg1').feature('cs').feature('dDef').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s6').create('i2', 'Iterative');
model.sol('sol2').feature('s6').feature('i2').create('mg1', 'Multigrid');
model.sol('sol2').feature('s6').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('s6').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('s6').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol2').feature('s6').feature('i2').feature('mg1').feature('pr').feature.remove('soDef');
model.sol('sol2').feature('s6').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s6').feature('i2').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol2').feature('s6').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('s6').feature('i2').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('s6').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol2').feature('s6').feature('i2').feature('mg1').feature('po').feature.remove('soDef');
model.sol('sol2').feature('s6').feature('i2').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol2').feature('s6').feature('i2').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('s6').feature('i2').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('s6').feature('i2').feature('mg1').feature('cs').feature('dDef').set('linsolver', 'pardiso');
model.sol('sol2').feature('s6').feature('i2').feature('mg1').feature('cs').feature('dDef').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s6').feature('se1').feature('ssDef').set('segvar', {'comp2_cBa_2p' 'comp2_cBaSO4' 'comp2_cCl_1m' 'comp2_cH_1p' 'comp2_cHSO4_1m' 'comp2_cSO4_2m'});
model.sol('sol2').feature('s6').feature('se1').feature('ssDef').set('linsolver', 'i2');
model.sol('sol2').feature('s6').feature('se1').feature('ssDef').set('subdamp', '0.5');
model.sol('sol2').feature('s6').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol2').feature('s6').feature('se1').feature('ss1').set('segvar', {'comp2_n3' 'comp2_n2' 'comp2_n1'});
model.sol('sol2').feature('s6').feature('se1').feature('ss1').set('linsolver', 'dDef');
model.sol('sol2').feature('s6').feature('se1').feature('ss1').set('subdamp', '0.25');
model.sol('sol2').feature('s6').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol2').feature('s6').feature('se1').feature('ss2').set('segvar', {'comp2_n6' 'comp2_n5' 'comp2_n4'});
model.sol('sol2').feature('s6').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol2').feature('s6').feature('se1').feature('ss2').set('subdamp', '0.5');
model.sol('sol2').feature('s6').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol2').feature('s6').feature('se1').feature('ss3').set('segvar', {'comp2_n9' 'comp2_n8' 'comp2_n7'});
model.sol('sol2').feature('s6').feature('se1').feature('ss3').set('linsolver', 'dDef');
model.sol('sol2').feature('s6').feature('se1').feature('ss3').set('subdamp', '0.5');
model.sol('sol2').feature('s6').feature('se1').create('ss4', 'SegregatedStep');
model.sol('sol2').feature('s6').feature('se1').feature('ss4').set('segvar', {'comp2_n12' 'comp2_n11' 'comp2_n10'});
model.sol('sol2').feature('s6').feature('se1').feature('ss4').set('linsolver', 'i1');
model.sol('sol2').feature('s6').feature('se1').feature('ss4').set('subdamp', '0.5');
model.sol('sol2').feature('s6').feature('se1').create('ss5', 'SegregatedStep');
model.sol('sol2').feature('s6').feature('se1').feature('ss5').set('segvar', {'comp2_n15' 'comp2_n14' 'comp2_n13'});
model.sol('sol2').feature('s6').feature('se1').feature('ss5').set('linsolver', 'i1');
model.sol('sol2').feature('s6').feature('se1').feature('ss5').set('subdamp', '0.5');
model.sol('sol2').feature('s6').feature('se1').create('ss6', 'SegregatedStep');
model.sol('sol2').feature('s6').feature('se1').feature('ss6').set('segvar', {'comp2_n18' 'comp2_n17' 'comp2_n16'});
model.sol('sol2').feature('s6').feature('se1').feature('ss6').set('linsolver', 'i1');
model.sol('sol2').feature('s6').feature('se1').feature('ss6').set('subdamp', '0.5');
model.sol('sol2').feature('s6').feature('se1').create('ss7', 'SegregatedStep');
model.sol('sol2').feature('s6').feature('se1').feature('ss7').set('segvar', {'comp2_n21' 'comp2_n20' 'comp2_n19'});
model.sol('sol2').feature('s6').feature('se1').feature('ss7').set('linsolver', 'i1');
model.sol('sol2').feature('s6').feature('se1').feature('ss7').set('subdamp', '0.5');
model.sol('sol2').feature('s6').feature('se1').create('ss8', 'SegregatedStep');
model.sol('sol2').feature('s6').feature('se1').feature('ss8').set('segvar', {'comp2_n24' 'comp2_n23' 'comp2_n22'});
model.sol('sol2').feature('s6').feature('se1').feature('ss8').set('linsolver', 'i1');
model.sol('sol2').feature('s6').feature('se1').feature('ss8').set('subdamp', '0.5');
model.sol('sol2').feature('s6').feature('se1').create('ss9', 'SegregatedStep');
model.sol('sol2').feature('s6').feature('se1').feature('ss9').set('segvar', {'comp2_n27' 'comp2_n26' 'comp2_n25'});
model.sol('sol2').feature('s6').feature('se1').feature('ss9').set('linsolver', 'i1');
model.sol('sol2').feature('s6').feature('se1').feature('ss9').set('subdamp', '0.5');
model.sol('sol2').feature('s6').feature('se1').create('ss10', 'SegregatedStep');
model.sol('sol2').feature('s6').feature('se1').feature('ss10').set('segvar', {'comp2_n30' 'comp2_n29' 'comp2_n28'});
model.sol('sol2').feature('s6').feature('se1').feature('ss10').set('linsolver', 'i1');
model.sol('sol2').feature('s6').feature('se1').feature('ss10').set('subdamp', '0.5');
model.sol('sol2').feature('s6').feature('dDef').set('linsolver', 'pardiso');
model.sol('sol2').feature('s6').feature('dDef').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s6').feature('i2').set('nlinnormuse', true);
model.sol('sol2').feature('s6').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s6').feature('i1').set('nlinnormuse', true);
model.sol('sol2').feature('s6').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s6').feature('i1').set('rhob', 20);
model.sol('sol2').feature('s6').feature('i1').set('maxlinit', 1000);
model.sol('sol2').feature('s6').feature('i2').set('maxlinit', 1000);
model.sol('sol2').feature('s6').feature('i2').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s6').feature('se1').feature.move('ssDef', 10);
model.sol('sol2').create('su6', 'StoreSolution');
model.sol('sol2').feature('s3').feature('se1').set('maxsegiter', 200);
model.sol('sol2').attach('std2');

% Finished method call generateStudy

model.study('std2').setGenPlots(false);

model.sol('sol2').runAll;

% Started method call generateEvaluationGroups

model.result.evaluationGroup.create('eg_densdistr1', 'EvaluationGroup');
model.result.evaluationGroup('eg_densdistr1').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg_densdistr1').feature('gev1').set('data', 'dset2');
model.result.evaluationGroup('eg_densdistr1').create('int1', 'IntSurface');
model.result.evaluationGroup('eg_densdistr1').feature('int1').set('intvolume', true);
model.result.evaluationGroup('eg_densdistr1').create('int2', 'IntSurface');
model.result.evaluationGroup('eg_densdistr1').feature('int2').set('intvolume', true);
model.result.evaluationGroup('eg_densdistr1').create('int3', 'IntSurface');
model.result.evaluationGroup('eg_densdistr1').feature('int3').set('intvolume', true);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').set('expr', {});
model.result.evaluationGroup('eg_densdistr1').feature('gev1').set('descr', {});
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L0', 0);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n1*w+(scdeq.dfluxz)', 0);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n1*w+(scdeq.dfluxz)', 1);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L1', 1);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 0);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 0);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 1);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 1);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L1', 2);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L2', 3);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n2*w+(scdeq2.dfluxz)', 2);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 2);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 2);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n2*w+(scdeq2.dfluxz)', 3);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 3);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 3);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L2', 4);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L3', 5);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n3*w+(scdeq3.dfluxz)', 4);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 4);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 4);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n3*w+(scdeq3.dfluxz)', 5);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 5);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 5);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L3', 6);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L4', 7);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n4*w+(scdeq4.dfluxz)', 6);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 6);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 6);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n4*w+(scdeq4.dfluxz)', 7);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 7);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 7);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L4', 8);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L5', 9);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n5*w+(scdeq5.dfluxz)', 8);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 8);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 8);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n5*w+(scdeq5.dfluxz)', 9);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 9);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 9);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L5', 10);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L6', 11);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n6*w+(scdeq6.dfluxz)', 10);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 10);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 10);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n6*w+(scdeq6.dfluxz)', 11);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 11);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 11);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L6', 12);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L7', 13);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n7*w+(scdeq7.dfluxz)', 12);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 12);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 12);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n7*w+(scdeq7.dfluxz)', 13);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 13);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 13);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L7', 14);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L8', 15);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n8*w+(scdeq8.dfluxz)', 14);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 14);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 14);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n8*w+(scdeq8.dfluxz)', 15);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 15);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 15);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L8', 16);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L9', 17);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n9*w+(scdeq9.dfluxz)', 16);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 16);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 16);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n9*w+(scdeq9.dfluxz)', 17);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 17);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 17);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L9', 18);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L10', 19);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n10*w+(scdeq10.dfluxz)', 18);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 18);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 18);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n10*w+(scdeq10.dfluxz)', 19);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 19);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 19);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L10', 20);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L11', 21);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n11*w+(scdeq11.dfluxz)', 20);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 20);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 20);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n11*w+(scdeq11.dfluxz)', 21);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 21);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 21);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L11', 22);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L12', 23);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n12*w+(scdeq12.dfluxz)', 22);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 22);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 22);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n12*w+(scdeq12.dfluxz)', 23);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 23);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 23);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L12', 24);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L13', 25);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n13*w+(scdeq13.dfluxz)', 24);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 24);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 24);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n13*w+(scdeq13.dfluxz)', 25);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 25);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 25);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L13', 26);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L14', 27);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n14*w+(scdeq14.dfluxz)', 26);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 26);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 26);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n14*w+(scdeq14.dfluxz)', 27);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 27);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 27);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L14', 28);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L15', 29);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n15*w+(scdeq15.dfluxz)', 28);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 28);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 28);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n15*w+(scdeq15.dfluxz)', 29);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 29);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 29);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L15', 30);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L16', 31);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n16*w+(scdeq16.dfluxz)', 30);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 30);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 30);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n16*w+(scdeq16.dfluxz)', 31);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 31);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 31);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L16', 32);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L17', 33);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n17*w+(scdeq17.dfluxz)', 32);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 32);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 32);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n17*w+(scdeq17.dfluxz)', 33);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 33);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 33);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L17', 34);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L18', 35);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n18*w+(scdeq18.dfluxz)', 34);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 34);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 34);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n18*w+(scdeq18.dfluxz)', 35);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 35);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 35);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L18', 36);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L19', 37);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n19*w+(scdeq19.dfluxz)', 36);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 36);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 36);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n19*w+(scdeq19.dfluxz)', 37);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 37);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 37);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L19', 38);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L20', 39);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n20*w+(scdeq20.dfluxz)', 38);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 38);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 38);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n20*w+(scdeq20.dfluxz)', 39);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 39);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 39);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L20', 40);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L21', 41);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n21*w+(scdeq21.dfluxz)', 40);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 40);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 40);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n21*w+(scdeq21.dfluxz)', 41);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 41);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 41);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L21', 42);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L22', 43);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n22*w+(scdeq22.dfluxz)', 42);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 42);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 42);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n22*w+(scdeq22.dfluxz)', 43);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 43);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 43);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L22', 44);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L23', 45);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n23*w+(scdeq23.dfluxz)', 44);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 44);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 44);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n23*w+(scdeq23.dfluxz)', 45);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 45);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 45);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L23', 46);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L24', 47);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n24*w+(scdeq24.dfluxz)', 46);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 46);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 46);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n24*w+(scdeq24.dfluxz)', 47);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 47);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 47);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L24', 48);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L25', 49);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n25*w+(scdeq25.dfluxz)', 48);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 48);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 48);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n25*w+(scdeq25.dfluxz)', 49);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 49);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 49);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L25', 50);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L26', 51);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n26*w+(scdeq26.dfluxz)', 50);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 50);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 50);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n26*w+(scdeq26.dfluxz)', 51);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 51);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 51);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L26', 52);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L27', 53);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n27*w+(scdeq27.dfluxz)', 52);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 52);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 52);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n27*w+(scdeq27.dfluxz)', 53);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 53);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 53);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L27', 54);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L28', 55);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n28*w+(scdeq28.dfluxz)', 54);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 54);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 54);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n28*w+(scdeq28.dfluxz)', 55);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 55);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 55);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L28', 56);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L29', 57);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n29*w+(scdeq29.dfluxz)', 56);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 56);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 56);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n29*w+(scdeq29.dfluxz)', 57);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 57);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 57);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L29', 58);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('expr', 'comp2.L30', 59);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n30*w+(scdeq30.dfluxz)', 58);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 58);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 58);
model.result.evaluationGroup('eg_densdistr1').feature('int1').setIndex('expr', 'comp2.n30*w+(scdeq30.dfluxz)', 59);
model.result.evaluationGroup('eg_densdistr1').feature('int2').setIndex('expr', 'w', 59);
model.result.evaluationGroup('eg_densdistr1').feature('int3').setIndex('expr', 'comp2.N_c*w', 59);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 0);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 1);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 2);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 3);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 4);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 5);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 6);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 7);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 8);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 9);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 10);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 11);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 12);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 13);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 14);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 15);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 16);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 17);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 18);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 19);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 20);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 21);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 22);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 23);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 24);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 25);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 26);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 27);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 28);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 29);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 30);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 31);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 32);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 33);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 34);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 35);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 36);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 37);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 38);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 39);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 40);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 41);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 42);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 43);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 44);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 45);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 46);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 47);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 48);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 49);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 50);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 51);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 52);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 53);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 54);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 55);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 56);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 57);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 58);
model.result.evaluationGroup('eg_densdistr1').feature('gev1').setIndex('unit', 'nm', 59);
model.result.evaluationGroup('eg_densdistr1').set('type', 'general');
model.result.evaluationGroup('eg_densdistr1').set('generalexpr', '(int1/int2)/(int3/int2)*1e-9');
model.result.evaluationGroup('eg_densdistr1').set('keepchildnodes', true);
model.result.evaluationGroup('eg_densdistr1').set('includeparameters', false);
model.result.evaluationGroup('eg_densdistr1').set('concatenation', 'vertical');
model.result.evaluationGroup.create('eg_densdistr2', 'EvaluationGroup');
model.result.evaluationGroup('eg_densdistr2').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg_densdistr2').feature('gev1').set('data', 'dset2');
model.result.evaluationGroup('eg_densdistr2').create('int1', 'IntSurface');
model.result.evaluationGroup('eg_densdistr2').feature('int1').set('intvolume', true);
model.result.evaluationGroup('eg_densdistr2').create('int2', 'IntSurface');
model.result.evaluationGroup('eg_densdistr2').feature('int2').set('intvolume', true);
model.result.evaluationGroup('eg_densdistr2').create('int3', 'IntSurface');
model.result.evaluationGroup('eg_densdistr2').feature('int3').set('intvolume', true);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').set('expr', {});
model.result.evaluationGroup('eg_densdistr2').feature('gev1').set('descr', {});
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L0', 0);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n1*w+(scdeq.dfluxz)', 0);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n1*w+(scdeq.dfluxz)', 1);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L1', 1);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 0);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 0);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 1);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 1);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L1', 2);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L2', 3);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n2*w+(scdeq2.dfluxz)', 2);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 2);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 2);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n2*w+(scdeq2.dfluxz)', 3);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 3);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 3);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L2', 4);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L3', 5);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n3*w+(scdeq3.dfluxz)', 4);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 4);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 4);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n3*w+(scdeq3.dfluxz)', 5);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 5);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 5);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L3', 6);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L4', 7);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n4*w+(scdeq4.dfluxz)', 6);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 6);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 6);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n4*w+(scdeq4.dfluxz)', 7);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 7);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 7);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L4', 8);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L5', 9);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n5*w+(scdeq5.dfluxz)', 8);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 8);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 8);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n5*w+(scdeq5.dfluxz)', 9);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 9);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 9);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L5', 10);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L6', 11);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n6*w+(scdeq6.dfluxz)', 10);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 10);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 10);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n6*w+(scdeq6.dfluxz)', 11);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 11);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 11);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L6', 12);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L7', 13);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n7*w+(scdeq7.dfluxz)', 12);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 12);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 12);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n7*w+(scdeq7.dfluxz)', 13);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 13);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 13);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L7', 14);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L8', 15);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n8*w+(scdeq8.dfluxz)', 14);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 14);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 14);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n8*w+(scdeq8.dfluxz)', 15);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 15);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 15);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L8', 16);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L9', 17);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n9*w+(scdeq9.dfluxz)', 16);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 16);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 16);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n9*w+(scdeq9.dfluxz)', 17);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 17);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 17);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L9', 18);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L10', 19);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n10*w+(scdeq10.dfluxz)', 18);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 18);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 18);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n10*w+(scdeq10.dfluxz)', 19);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 19);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 19);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L10', 20);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L11', 21);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n11*w+(scdeq11.dfluxz)', 20);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 20);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 20);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n11*w+(scdeq11.dfluxz)', 21);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 21);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 21);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L11', 22);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L12', 23);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n12*w+(scdeq12.dfluxz)', 22);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 22);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 22);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n12*w+(scdeq12.dfluxz)', 23);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 23);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 23);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L12', 24);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L13', 25);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n13*w+(scdeq13.dfluxz)', 24);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 24);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 24);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n13*w+(scdeq13.dfluxz)', 25);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 25);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 25);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L13', 26);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L14', 27);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n14*w+(scdeq14.dfluxz)', 26);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 26);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 26);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n14*w+(scdeq14.dfluxz)', 27);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 27);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 27);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L14', 28);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L15', 29);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n15*w+(scdeq15.dfluxz)', 28);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 28);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 28);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n15*w+(scdeq15.dfluxz)', 29);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 29);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 29);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L15', 30);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L16', 31);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n16*w+(scdeq16.dfluxz)', 30);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 30);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 30);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n16*w+(scdeq16.dfluxz)', 31);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 31);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 31);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L16', 32);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L17', 33);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n17*w+(scdeq17.dfluxz)', 32);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 32);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 32);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n17*w+(scdeq17.dfluxz)', 33);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 33);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 33);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L17', 34);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L18', 35);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n18*w+(scdeq18.dfluxz)', 34);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 34);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 34);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n18*w+(scdeq18.dfluxz)', 35);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 35);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 35);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L18', 36);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L19', 37);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n19*w+(scdeq19.dfluxz)', 36);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 36);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 36);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n19*w+(scdeq19.dfluxz)', 37);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 37);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 37);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L19', 38);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L20', 39);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n20*w+(scdeq20.dfluxz)', 38);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 38);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 38);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n20*w+(scdeq20.dfluxz)', 39);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 39);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 39);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L20', 40);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L21', 41);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n21*w+(scdeq21.dfluxz)', 40);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 40);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 40);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n21*w+(scdeq21.dfluxz)', 41);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 41);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 41);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L21', 42);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L22', 43);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n22*w+(scdeq22.dfluxz)', 42);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 42);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 42);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n22*w+(scdeq22.dfluxz)', 43);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 43);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 43);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L22', 44);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L23', 45);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n23*w+(scdeq23.dfluxz)', 44);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 44);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 44);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n23*w+(scdeq23.dfluxz)', 45);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 45);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 45);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L23', 46);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L24', 47);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n24*w+(scdeq24.dfluxz)', 46);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 46);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 46);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n24*w+(scdeq24.dfluxz)', 47);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 47);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 47);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L24', 48);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L25', 49);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n25*w+(scdeq25.dfluxz)', 48);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 48);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 48);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n25*w+(scdeq25.dfluxz)', 49);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 49);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 49);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L25', 50);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L26', 51);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n26*w+(scdeq26.dfluxz)', 50);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 50);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 50);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n26*w+(scdeq26.dfluxz)', 51);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 51);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 51);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L26', 52);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L27', 53);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n27*w+(scdeq27.dfluxz)', 52);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 52);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 52);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n27*w+(scdeq27.dfluxz)', 53);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 53);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 53);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L27', 54);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L28', 55);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n28*w+(scdeq28.dfluxz)', 54);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 54);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 54);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n28*w+(scdeq28.dfluxz)', 55);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 55);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 55);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L28', 56);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L29', 57);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n29*w+(scdeq29.dfluxz)', 56);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 56);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 56);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n29*w+(scdeq29.dfluxz)', 57);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 57);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 57);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L29', 58);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('expr', 'comp2.L30', 59);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n30*w+(scdeq30.dfluxz)', 58);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 58);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 58);
model.result.evaluationGroup('eg_densdistr2').feature('int1').setIndex('expr', 'comp2.n30*w+(scdeq30.dfluxz)', 59);
model.result.evaluationGroup('eg_densdistr2').feature('int2').setIndex('expr', 'w', 59);
model.result.evaluationGroup('eg_densdistr2').feature('int3').setIndex('expr', 'comp2.N_c*w', 59);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 0);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 1);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 2);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 3);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 4);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 5);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 6);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 7);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 8);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 9);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 10);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 11);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 12);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 13);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 14);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 15);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 16);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 17);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 18);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 19);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 20);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 21);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 22);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 23);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 24);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 25);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 26);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 27);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 28);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 29);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 30);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 31);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 32);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 33);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 34);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 35);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 36);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 37);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 38);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 39);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 40);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 41);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 42);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 43);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 44);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 45);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 46);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 47);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 48);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 49);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 50);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 51);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 52);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 53);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 54);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 55);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 56);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 57);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 58);
model.result.evaluationGroup('eg_densdistr2').feature('gev1').setIndex('unit', 'nm', 59);
model.result.evaluationGroup('eg_densdistr2').set('type', 'general');
model.result.evaluationGroup('eg_densdistr2').set('generalexpr', '(int1/int2)/(int3/int2)*1e-9');
model.result.evaluationGroup('eg_densdistr2').set('keepchildnodes', true);
model.result.evaluationGroup('eg_densdistr2').set('includeparameters', false);
model.result.evaluationGroup('eg_densdistr2').set('concatenation', 'vertical');
model.result.evaluationGroup.create('eg_densdistr3', 'EvaluationGroup');
model.result.evaluationGroup('eg_densdistr3').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg_densdistr3').feature('gev1').set('data', 'dset2');
model.result.evaluationGroup('eg_densdistr3').create('int1', 'IntSurface');
model.result.evaluationGroup('eg_densdistr3').feature('int1').set('intvolume', true);
model.result.evaluationGroup('eg_densdistr3').create('int2', 'IntSurface');
model.result.evaluationGroup('eg_densdistr3').feature('int2').set('intvolume', true);
model.result.evaluationGroup('eg_densdistr3').create('int3', 'IntSurface');
model.result.evaluationGroup('eg_densdistr3').feature('int3').set('intvolume', true);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').set('expr', {});
model.result.evaluationGroup('eg_densdistr3').feature('gev1').set('descr', {});
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L0', 0);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n1*w+(scdeq.dfluxz)', 0);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n1*w+(scdeq.dfluxz)', 1);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L1', 1);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 0);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 0);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 1);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 1);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L1', 2);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L2', 3);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n2*w+(scdeq2.dfluxz)', 2);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 2);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 2);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n2*w+(scdeq2.dfluxz)', 3);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 3);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 3);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L2', 4);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L3', 5);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n3*w+(scdeq3.dfluxz)', 4);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 4);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 4);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n3*w+(scdeq3.dfluxz)', 5);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 5);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 5);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L3', 6);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L4', 7);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n4*w+(scdeq4.dfluxz)', 6);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 6);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 6);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n4*w+(scdeq4.dfluxz)', 7);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 7);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 7);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L4', 8);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L5', 9);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n5*w+(scdeq5.dfluxz)', 8);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 8);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 8);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n5*w+(scdeq5.dfluxz)', 9);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 9);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 9);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L5', 10);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L6', 11);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n6*w+(scdeq6.dfluxz)', 10);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 10);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 10);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n6*w+(scdeq6.dfluxz)', 11);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 11);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 11);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L6', 12);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L7', 13);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n7*w+(scdeq7.dfluxz)', 12);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 12);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 12);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n7*w+(scdeq7.dfluxz)', 13);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 13);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 13);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L7', 14);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L8', 15);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n8*w+(scdeq8.dfluxz)', 14);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 14);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 14);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n8*w+(scdeq8.dfluxz)', 15);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 15);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 15);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L8', 16);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L9', 17);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n9*w+(scdeq9.dfluxz)', 16);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 16);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 16);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n9*w+(scdeq9.dfluxz)', 17);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 17);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 17);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L9', 18);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L10', 19);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n10*w+(scdeq10.dfluxz)', 18);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 18);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 18);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n10*w+(scdeq10.dfluxz)', 19);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 19);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 19);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L10', 20);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L11', 21);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n11*w+(scdeq11.dfluxz)', 20);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 20);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 20);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n11*w+(scdeq11.dfluxz)', 21);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 21);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 21);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L11', 22);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L12', 23);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n12*w+(scdeq12.dfluxz)', 22);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 22);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 22);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n12*w+(scdeq12.dfluxz)', 23);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 23);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 23);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L12', 24);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L13', 25);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n13*w+(scdeq13.dfluxz)', 24);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 24);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 24);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n13*w+(scdeq13.dfluxz)', 25);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 25);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 25);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L13', 26);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L14', 27);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n14*w+(scdeq14.dfluxz)', 26);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 26);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 26);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n14*w+(scdeq14.dfluxz)', 27);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 27);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 27);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L14', 28);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L15', 29);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n15*w+(scdeq15.dfluxz)', 28);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 28);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 28);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n15*w+(scdeq15.dfluxz)', 29);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 29);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 29);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L15', 30);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L16', 31);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n16*w+(scdeq16.dfluxz)', 30);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 30);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 30);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n16*w+(scdeq16.dfluxz)', 31);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 31);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 31);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L16', 32);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L17', 33);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n17*w+(scdeq17.dfluxz)', 32);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 32);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 32);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n17*w+(scdeq17.dfluxz)', 33);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 33);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 33);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L17', 34);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L18', 35);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n18*w+(scdeq18.dfluxz)', 34);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 34);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 34);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n18*w+(scdeq18.dfluxz)', 35);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 35);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 35);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L18', 36);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L19', 37);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n19*w+(scdeq19.dfluxz)', 36);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 36);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 36);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n19*w+(scdeq19.dfluxz)', 37);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 37);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 37);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L19', 38);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L20', 39);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n20*w+(scdeq20.dfluxz)', 38);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 38);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 38);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n20*w+(scdeq20.dfluxz)', 39);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 39);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 39);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L20', 40);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L21', 41);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n21*w+(scdeq21.dfluxz)', 40);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 40);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 40);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n21*w+(scdeq21.dfluxz)', 41);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 41);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 41);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L21', 42);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L22', 43);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n22*w+(scdeq22.dfluxz)', 42);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 42);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 42);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n22*w+(scdeq22.dfluxz)', 43);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 43);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 43);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L22', 44);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L23', 45);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n23*w+(scdeq23.dfluxz)', 44);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 44);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 44);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n23*w+(scdeq23.dfluxz)', 45);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 45);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 45);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L23', 46);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L24', 47);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n24*w+(scdeq24.dfluxz)', 46);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 46);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 46);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n24*w+(scdeq24.dfluxz)', 47);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 47);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 47);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L24', 48);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L25', 49);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n25*w+(scdeq25.dfluxz)', 48);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 48);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 48);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n25*w+(scdeq25.dfluxz)', 49);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 49);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 49);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L25', 50);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L26', 51);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n26*w+(scdeq26.dfluxz)', 50);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 50);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 50);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n26*w+(scdeq26.dfluxz)', 51);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 51);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 51);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L26', 52);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L27', 53);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n27*w+(scdeq27.dfluxz)', 52);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 52);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 52);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n27*w+(scdeq27.dfluxz)', 53);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 53);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 53);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L27', 54);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L28', 55);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n28*w+(scdeq28.dfluxz)', 54);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 54);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 54);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n28*w+(scdeq28.dfluxz)', 55);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 55);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 55);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L28', 56);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L29', 57);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n29*w+(scdeq29.dfluxz)', 56);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 56);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 56);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n29*w+(scdeq29.dfluxz)', 57);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 57);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 57);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L29', 58);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('expr', 'comp2.L30', 59);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n30*w+(scdeq30.dfluxz)', 58);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 58);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 58);
model.result.evaluationGroup('eg_densdistr3').feature('int1').setIndex('expr', 'comp2.n30*w+(scdeq30.dfluxz)', 59);
model.result.evaluationGroup('eg_densdistr3').feature('int2').setIndex('expr', 'w', 59);
model.result.evaluationGroup('eg_densdistr3').feature('int3').setIndex('expr', 'comp2.N_c*w', 59);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 0);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 1);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 2);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 3);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 4);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 5);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 6);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 7);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 8);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 9);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 10);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 11);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 12);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 13);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 14);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 15);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 16);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 17);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 18);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 19);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 20);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 21);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 22);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 23);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 24);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 25);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 26);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 27);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 28);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 29);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 30);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 31);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 32);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 33);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 34);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 35);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 36);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 37);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 38);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 39);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 40);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 41);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 42);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 43);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 44);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 45);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 46);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 47);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 48);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 49);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 50);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 51);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 52);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 53);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 54);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 55);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 56);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 57);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 58);
model.result.evaluationGroup('eg_densdistr3').feature('gev1').setIndex('unit', 'nm', 59);
model.result.evaluationGroup('eg_densdistr3').set('type', 'general');
model.result.evaluationGroup('eg_densdistr3').set('generalexpr', '(int1/int2)/(int3/int2)*1e-9');
model.result.evaluationGroup('eg_densdistr3').set('keepchildnodes', true);
model.result.evaluationGroup('eg_densdistr3').set('includeparameters', false);
model.result.evaluationGroup('eg_densdistr3').set('concatenation', 'vertical');
model.result.evaluationGroup.create('eg_densdistr4', 'EvaluationGroup');
model.result.evaluationGroup('eg_densdistr4').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg_densdistr4').feature('gev1').set('data', 'dset2');
model.result.evaluationGroup('eg_densdistr4').create('int1', 'IntSurface');
model.result.evaluationGroup('eg_densdistr4').feature('int1').set('intvolume', true);
model.result.evaluationGroup('eg_densdistr4').create('int2', 'IntSurface');
model.result.evaluationGroup('eg_densdistr4').feature('int2').set('intvolume', true);
model.result.evaluationGroup('eg_densdistr4').create('int3', 'IntSurface');
model.result.evaluationGroup('eg_densdistr4').feature('int3').set('intvolume', true);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').set('expr', {});
model.result.evaluationGroup('eg_densdistr4').feature('gev1').set('descr', {});
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L0', 0);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n1*w+(scdeq.dfluxz)', 0);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n1*w+(scdeq.dfluxz)', 1);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L1', 1);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 0);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 0);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 1);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 1);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L1', 2);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L2', 3);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n2*w+(scdeq2.dfluxz)', 2);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 2);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 2);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n2*w+(scdeq2.dfluxz)', 3);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 3);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 3);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L2', 4);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L3', 5);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n3*w+(scdeq3.dfluxz)', 4);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 4);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 4);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n3*w+(scdeq3.dfluxz)', 5);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 5);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 5);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L3', 6);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L4', 7);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n4*w+(scdeq4.dfluxz)', 6);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 6);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 6);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n4*w+(scdeq4.dfluxz)', 7);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 7);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 7);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L4', 8);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L5', 9);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n5*w+(scdeq5.dfluxz)', 8);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 8);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 8);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n5*w+(scdeq5.dfluxz)', 9);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 9);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 9);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L5', 10);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L6', 11);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n6*w+(scdeq6.dfluxz)', 10);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 10);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 10);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n6*w+(scdeq6.dfluxz)', 11);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 11);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 11);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L6', 12);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L7', 13);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n7*w+(scdeq7.dfluxz)', 12);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 12);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 12);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n7*w+(scdeq7.dfluxz)', 13);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 13);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 13);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L7', 14);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L8', 15);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n8*w+(scdeq8.dfluxz)', 14);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 14);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 14);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n8*w+(scdeq8.dfluxz)', 15);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 15);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 15);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L8', 16);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L9', 17);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n9*w+(scdeq9.dfluxz)', 16);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 16);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 16);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n9*w+(scdeq9.dfluxz)', 17);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 17);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 17);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L9', 18);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L10', 19);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n10*w+(scdeq10.dfluxz)', 18);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 18);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 18);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n10*w+(scdeq10.dfluxz)', 19);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 19);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 19);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L10', 20);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L11', 21);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n11*w+(scdeq11.dfluxz)', 20);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 20);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 20);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n11*w+(scdeq11.dfluxz)', 21);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 21);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 21);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L11', 22);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L12', 23);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n12*w+(scdeq12.dfluxz)', 22);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 22);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 22);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n12*w+(scdeq12.dfluxz)', 23);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 23);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 23);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L12', 24);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L13', 25);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n13*w+(scdeq13.dfluxz)', 24);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 24);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 24);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n13*w+(scdeq13.dfluxz)', 25);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 25);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 25);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L13', 26);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L14', 27);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n14*w+(scdeq14.dfluxz)', 26);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 26);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 26);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n14*w+(scdeq14.dfluxz)', 27);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 27);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 27);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L14', 28);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L15', 29);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n15*w+(scdeq15.dfluxz)', 28);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 28);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 28);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n15*w+(scdeq15.dfluxz)', 29);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 29);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 29);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L15', 30);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L16', 31);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n16*w+(scdeq16.dfluxz)', 30);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 30);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 30);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n16*w+(scdeq16.dfluxz)', 31);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 31);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 31);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L16', 32);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L17', 33);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n17*w+(scdeq17.dfluxz)', 32);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 32);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 32);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n17*w+(scdeq17.dfluxz)', 33);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 33);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 33);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L17', 34);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L18', 35);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n18*w+(scdeq18.dfluxz)', 34);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 34);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 34);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n18*w+(scdeq18.dfluxz)', 35);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 35);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 35);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L18', 36);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L19', 37);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n19*w+(scdeq19.dfluxz)', 36);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 36);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 36);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n19*w+(scdeq19.dfluxz)', 37);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 37);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 37);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L19', 38);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L20', 39);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n20*w+(scdeq20.dfluxz)', 38);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 38);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 38);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n20*w+(scdeq20.dfluxz)', 39);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 39);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 39);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L20', 40);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L21', 41);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n21*w+(scdeq21.dfluxz)', 40);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 40);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 40);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n21*w+(scdeq21.dfluxz)', 41);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 41);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 41);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L21', 42);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L22', 43);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n22*w+(scdeq22.dfluxz)', 42);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 42);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 42);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n22*w+(scdeq22.dfluxz)', 43);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 43);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 43);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L22', 44);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L23', 45);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n23*w+(scdeq23.dfluxz)', 44);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 44);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 44);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n23*w+(scdeq23.dfluxz)', 45);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 45);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 45);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L23', 46);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L24', 47);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n24*w+(scdeq24.dfluxz)', 46);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 46);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 46);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n24*w+(scdeq24.dfluxz)', 47);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 47);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 47);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L24', 48);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L25', 49);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n25*w+(scdeq25.dfluxz)', 48);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 48);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 48);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n25*w+(scdeq25.dfluxz)', 49);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 49);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 49);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L25', 50);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L26', 51);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n26*w+(scdeq26.dfluxz)', 50);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 50);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 50);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n26*w+(scdeq26.dfluxz)', 51);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 51);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 51);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L26', 52);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L27', 53);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n27*w+(scdeq27.dfluxz)', 52);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 52);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 52);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n27*w+(scdeq27.dfluxz)', 53);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 53);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 53);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L27', 54);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L28', 55);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n28*w+(scdeq28.dfluxz)', 54);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 54);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 54);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n28*w+(scdeq28.dfluxz)', 55);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 55);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 55);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L28', 56);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L29', 57);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n29*w+(scdeq29.dfluxz)', 56);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 56);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 56);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n29*w+(scdeq29.dfluxz)', 57);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 57);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 57);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L29', 58);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('expr', 'comp2.L30', 59);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n30*w+(scdeq30.dfluxz)', 58);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 58);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 58);
model.result.evaluationGroup('eg_densdistr4').feature('int1').setIndex('expr', 'comp2.n30*w+(scdeq30.dfluxz)', 59);
model.result.evaluationGroup('eg_densdistr4').feature('int2').setIndex('expr', 'w', 59);
model.result.evaluationGroup('eg_densdistr4').feature('int3').setIndex('expr', 'comp2.N_c*w', 59);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 0);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 1);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 2);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 3);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 4);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 5);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 6);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 7);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 8);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 9);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 10);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 11);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 12);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 13);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 14);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 15);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 16);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 17);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 18);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 19);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 20);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 21);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 22);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 23);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 24);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 25);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 26);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 27);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 28);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 29);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 30);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 31);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 32);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 33);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 34);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 35);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 36);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 37);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 38);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 39);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 40);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 41);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 42);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 43);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 44);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 45);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 46);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 47);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 48);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 49);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 50);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 51);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 52);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 53);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 54);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 55);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 56);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 57);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 58);
model.result.evaluationGroup('eg_densdistr4').feature('gev1').setIndex('unit', 'nm', 59);
model.result.evaluationGroup('eg_densdistr4').set('type', 'general');
model.result.evaluationGroup('eg_densdistr4').set('generalexpr', '(int1/int2)/(int3/int2)*1e-9');
model.result.evaluationGroup('eg_densdistr4').set('keepchildnodes', true);
model.result.evaluationGroup('eg_densdistr4').set('includeparameters', false);
model.result.evaluationGroup('eg_densdistr4').set('concatenation', 'vertical');

% Finished method call generateEvaluationGroups

model.result.dataset.create('cpl1', 'CutPlane');
model.result.dataset('cpl1').set('data', 'dset2');
model.result.dataset('cpl1').set('planetype', 'general');
model.result.dataset('cpl1').set('genmethod', 'pointnormal');
model.result.dataset('cpl1').set('genpnpoint', {'0' '0' '5e-3'});
model.result.dataset.duplicate('cpl2', 'cpl1');
model.result.dataset('cpl2').set('genpnpoint', {'0' '0' '7.5e-3'});
model.result.dataset.duplicate('cpl3', 'cpl2');
model.result.dataset('cpl3').set('genpnpoint', {'0' '0' '8.75e-3'});
model.result.dataset.duplicate('cpl4', 'cpl3');
model.result.dataset('cpl4').set('genpnpoint', {'0' '0' '9.375e-3'});
model.result.evaluationGroup('eg1').set('data', 'dset2');
model.result.evaluationGroup('eg1').feature('int1').selection.set([8 15]);
model.result.evaluationGroup('eg1').feature('int2').selection.set([8 15]);
model.result.evaluationGroup('eg1').feature('int3').selection.set([8 15]);
model.result.evaluationGroup('eg1').run;
model.result.evaluationGroup('eg_densdistr1').set('data', 'cpl1');
model.result.evaluationGroup('eg_densdistr1').run;
model.result.evaluationGroup('eg_densdistr2').set('data', 'cpl2');
model.result.evaluationGroup('eg_densdistr2').run;
model.result.evaluationGroup('eg_densdistr3').set('data', 'cpl3');
model.result.evaluationGroup('eg_densdistr3').run;
model.result.evaluationGroup('eg_densdistr4').set('data', 'cpl4');
model.result.evaluationGroup('eg_densdistr4').run;
model.result('pg3').run;
model.result('pg3').set('titletype', 'none');
model.result('pg3').set('xlabelactive', true);
model.result('pg3').set('ylabelactive', true);
model.result('pg3').set('xlabel', 'Crystal size (nm)');
model.result('pg3').set('ylabel', 'Normalized Number Density (1/nm)');
model.result('pg3').run;
model.result('pg3').feature('tblp1').set('rowbased', true);
model.result('pg3').feature('tblp1').set('xaxisdata', 2);
model.result('pg3').feature('tblp1').set('plotcolumninput', 'manual');
model.result('pg3').feature('tblp1').set('plotcolumns', [1]);
model.result('pg3').feature('tblp1').set('legendmethod', 'manual');
model.result('pg3').feature('tblp1').set('legend', true);
model.result('pg3').feature('tblp1').setIndex('legends', 'z=0mm', 0);
model.result('pg3').feature.duplicate('tblp2', 'tblp1');
model.result('pg3').run;
model.result('pg3').feature('tblp2').set('evaluationgroup', 'eg_densdistr1');
model.result('pg3').feature('tblp2').setIndex('legends', 'z=5 mm', 0);
model.result('pg3').feature.duplicate('tblp3', 'tblp2');
model.result('pg3').run;
model.result('pg3').feature('tblp3').set('evaluationgroup', 'eg_densdistr2');
model.result('pg3').feature('tblp3').setIndex('legends', 'z=7.5 mm', 0);
model.result('pg3').feature.duplicate('tblp4', 'tblp3');
model.result('pg3').run;
model.result('pg3').feature('tblp4').set('evaluationgroup', 'eg_densdistr3');
model.result('pg3').feature('tblp4').setIndex('legends', 'z=8.75 mm', 0);
model.result('pg3').feature.duplicate('tblp5', 'tblp4');
model.result('pg3').run;
model.result('pg3').feature('tblp5').setIndex('legends', 'z=9.375 mm', 0);
model.result('pg3').feature('tblp5').set('evaluationgroup', 'eg_densdistr4');
model.result('pg3').run;
model.result('pg3').set('axislimits', true);
model.result('pg3').set('xmin', 0);
model.result('pg3').set('xmax', 350);
model.result('pg3').set('ymin', '-1e-4');
model.result('pg3').set('ymax', 0.02);
model.result('pg3').run;
model.result.create('pg7', 'PlotGroup3D');
model.result('pg7').run;
model.result('pg7').set('data', 'dset2');
model.result('pg7').label('Velocity Field, Supersaturation and Concentrations');
model.result('pg7').set('titletype', 'none');
model.result('pg7').set('edges', false);
model.result('pg7').set('showlegendsunit', true);
model.result('pg7').set('legendpos', 'rightdouble');
model.result('pg7').set('plotarrayenable', true);
model.result('pg7').create('slc1', 'Slice');
model.result('pg7').feature('slc1').set('arraydim', '1');
model.result('pg7').feature('slc1').set('quickplane', 'xy');
model.result('pg7').feature('slc1').set('colortable', 'Prism');
model.result('pg7').feature('slc1').set('manualindexing', true);
model.result('pg7').run;
model.result('pg7').create('surf1', 'Surface');
model.result('pg7').feature('surf1').set('arraydim', '1');
model.result('pg7').feature('surf1').set('expr', '1');
model.result('pg7').feature('surf1').set('manualindexing', true);
model.result('pg7').feature('surf1').create('sel1', 'Selection');
model.result('pg7').feature('surf1').feature('sel1').selection.set([4 5 7 10 20 21 24 25]);
model.result('pg7').feature('surf1').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('surf1').create('mtrl1', 'MaterialAppearance');
model.result('pg7').run;
model.result('pg7').feature('surf1').feature('mtrl1').set('appearance', 'custom');
model.result('pg7').feature('surf1').feature('mtrl1').set('family', 'steelanodized');
model.result('pg7').run;
model.result('pg7').create('str1', 'Streamline');
model.result('pg7').feature('str1').set('arraydim', '1');
model.result('pg7').feature('str1').selection.set([1]);
model.result('pg7').feature('str1').set('selnumber', 3);
model.result('pg7').feature('str1').set('linetype', 'ribbon');
model.result('pg7').feature('str1').set('pointtype', 'arrow');
model.result('pg7').feature('str1').set('arrowscaleactive', true);
model.result('pg7').feature('str1').set('arrowscale', 0.0016);
model.result('pg7').feature('str1').set('color', 'yellow');
model.result('pg7').feature('str1').set('manualindexing', true);
model.result('pg7').feature.duplicate('str2', 'str1');
model.result('pg7').feature('str2').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('str2').selection.set([26]);
model.result('pg7').run;
model.result('pg7').create('slc2', 'Slice');
model.result('pg7').feature('slc2').set('arraydim', '1');
model.result('pg7').feature('slc2').set('expr', 'S');
model.result('pg7').feature('slc2').set('quickplane', 'zx');
model.result('pg7').feature('slc2').set('quickynumber', 1);
model.result('pg7').feature('slc2').set('colortable', 'HeatCamera');
model.result('pg7').feature('slc2').set('manualindexing', true);
model.result('pg7').feature('slc2').set('arrayindex', 1);
model.result('pg7').feature('slc1').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature.duplicate('slc3', 'slc1');
model.result('pg7').feature.duplicate('surf2', 'surf1');
model.result('pg7').feature('slc3').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('slc2').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('slc2').create('tran1', 'Transparency');
model.result('pg7').run;
model.result('pg7').feature('slc2').feature('tran1').set('transparency', 0.4);
model.result('pg7').feature('slc3').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('slc3').set('expr', 'S');
model.result('pg7').feature('slc3').set('inheritplot', 'slc2');
model.result('pg7').feature('slc3').set('arrayindex', 1);
model.result('pg7').feature('surf2').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('surf2').set('arrayindex', 1);
model.result('pg7').feature('slc2').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature.duplicate('slc4', 'slc2');
model.result('pg7').feature.duplicate('slc5', 'slc3');
model.result('pg7').feature.duplicate('surf3', 'surf2');
model.result('pg7').feature('slc4').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('slc4').set('expr', 'cBaSO4');
model.result('pg7').feature('slc4').set('colortable', 'Prism');
model.result('pg7').feature('slc4').set('arrayindex', 2);
model.result('pg7').feature('slc5').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('slc5').set('expr', 'cBaSO4');
model.result('pg7').feature('slc5').set('inheritplot', 'slc4');
model.result('pg7').feature('slc5').set('arrayindex', 2);
model.result('pg7').feature('surf3').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('surf3').set('arrayindex', 2);
model.result('pg7').feature('slc4').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature.duplicate('slc6', 'slc4');
model.result('pg7').feature.duplicate('slc7', 'slc5');
model.result('pg7').feature.duplicate('surf4', 'surf3');
model.result('pg7').feature('slc6').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('slc6').set('expr', 'cSO4_2m');
model.result('pg7').feature('slc6').set('arrayindex', 3);
model.result('pg7').feature('slc7').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('slc7').set('expr', 'cSO4_2m');
model.result('pg7').feature('slc7').set('inheritplot', 'slc6');
model.result('pg7').feature('slc7').set('arrayindex', 3);
model.result('pg7').feature('surf4').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('surf4').set('arrayindex', 3);
model.result('pg7').feature('slc6').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature.duplicate('slc8', 'slc6');
model.result('pg7').feature.duplicate('slc9', 'slc7');
model.result('pg7').feature.duplicate('surf5', 'surf4');
model.result('pg7').feature('slc8').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('slc8').set('expr', 'cBa_2p');
model.result('pg7').feature('slc8').set('arrayindex', 4);
model.result('pg7').feature('slc9').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('slc9').set('expr', 'cBa_2p');
model.result('pg7').feature('slc9').set('inheritplot', 'slc8');
model.result('pg7').feature('slc9').set('arrayindex', 4);
model.result('pg7').feature('surf5').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('surf5').set('arrayindex', 4);
model.result('pg7').run;
model.result('pg7').create('ann1', 'Annotation');
model.result('pg7').feature('ann1').set('arraydim', '1');
model.result('pg7').feature('ann1').set('text', 'Velocity field');
model.result('pg7').feature('ann1').set('showpoint', false);
model.result('pg7').feature.duplicate('ann2', 'ann1');
model.result('pg7').feature('ann2').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('ann2').set('text', 'Supersaturation');
model.result('pg7').feature.duplicate('ann3', 'ann2');
model.result('pg7').feature('ann3').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('ann3').set('text', 'Aqueous barium sulfate');
model.result('pg7').feature.duplicate('ann4', 'ann3');
model.result('pg7').feature('ann4').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('ann4').set('text', 'Sulfate');
model.result('pg7').feature.duplicate('ann5', 'ann4');
model.result('pg7').feature('ann5').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('ann5').set('text', 'Barium');
model.result('pg7').run;
model.result('pg7').feature('slc4').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('slc4').active(false);
model.result('pg7').feature('slc5').active(false);
model.result('pg7').feature('surf3').active(false);
model.result('pg7').feature('slc6').active(false);
model.result('pg7').feature('slc7').active(false);
model.result('pg7').feature('surf4').active(false);
model.result('pg7').feature('slc8').active(false);
model.result('pg7').feature('slc9').active(false);
model.result('pg7').feature('surf5').active(false);
model.result('pg7').feature('ann3').active(false);
model.result('pg7').feature('ann4').active(false);
model.result('pg7').feature('ann5').active(false);

model.view('view1').set('showaxisorientation', false);
model.view('view1').set('showgrid', false);

model.result('pg7').run;
model.result('pg7').set('legendpos', 'right');
model.result('pg7').run;
model.result('pg7').set('legendpos', 'rightdouble');
model.result('pg7').feature('slc4').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('slc4').active(true);
model.result('pg7').feature('slc5').active(true);
model.result('pg7').feature('surf3').active(true);
model.result('pg7').feature('slc6').active(true);
model.result('pg7').feature('slc7').active(true);
model.result('pg7').feature('surf4').active(true);
model.result('pg7').feature('slc8').active(true);
model.result('pg7').feature('slc9').active(true);
model.result('pg7').feature('surf5').active(true);
model.result('pg7').feature('ann3').active(true);
model.result('pg7').feature('ann4').active(true);
model.result('pg7').feature('ann5').active(true);

model.view('view1').set('showaxisorientation', true);
model.view('view1').set('showgrid', true);

model.result('pg7').run;
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').run;
model.result('pg8').set('data', 'dset2');
model.result('pg8').label('Size bins');
model.result('pg8').set('legendpos', 'rightdouble');
model.result('pg8').set('plotarrayenable', true);
model.result('pg8').set('edges', false);
model.result('pg8').create('slc1', 'Slice');
model.result('pg8').feature('slc1').set('arraydim', '1');
model.result('pg8').feature('slc1').set('expr', 'n5');
model.result('pg8').feature('slc1').set('colortable', 'Prism');
model.result('pg8').feature('slc1').set('titletype', 'manual');
model.result('pg8').feature('slc1').set('title', 'n5 (1/m<SUP>4</SUP>)');
model.result('pg8').feature('slc1').set('quickplane', 'xy');
model.result('pg8').feature('slc1').set('manualindexing', true);
model.result('pg8').run;
model.result('pg8').create('slc2', 'Slice');
model.result('pg8').feature('slc2').set('arraydim', '1');
model.result('pg8').feature('slc2').set('expr', 'n5');
model.result('pg8').feature('slc2').set('titletype', 'none');
model.result('pg8').feature('slc2').set('quickplane', 'zx');
model.result('pg8').feature('slc2').set('quickynumber', 1);
model.result('pg8').feature('slc2').set('inheritplot', 'slc1');
model.result('pg8').feature('slc2').set('manualindexing', true);
model.result('pg8').feature('slc2').create('tran1', 'Transparency');
model.result('pg8').run;
model.result('pg8').feature('slc2').feature('tran1').set('transparency', 0.4);
model.result('pg8').run;
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').feature('surf1').set('arraydim', '1');
model.result('pg8').feature('surf1').set('expr', '1');
model.result('pg8').feature('surf1').set('titletype', 'none');
model.result('pg8').feature('surf1').set('manualindexing', true);
model.result('pg8').feature('surf1').create('sel1', 'Selection');
model.result('pg8').feature('surf1').feature('sel1').selection.set([4 5 7 10 20 21 24 25]);
model.result('pg8').feature('surf1').set('arraydim', '1');
model.result('pg8').run;
model.result('pg8').feature('surf1').create('mtrl1', 'MaterialAppearance');
model.result('pg8').run;
model.result('pg8').feature('surf1').feature('mtrl1').set('appearance', 'custom');
model.result('pg8').feature('surf1').feature('mtrl1').set('family', 'steelanodized');
model.result('pg8').feature('slc1').set('arraydim', '1');
model.result('pg8').run;
model.result('pg8').feature.duplicate('slc3', 'slc1');
model.result('pg8').feature.duplicate('slc4', 'slc2');
model.result('pg8').feature.duplicate('surf2', 'surf1');
model.result('pg8').feature('slc3').set('arraydim', '1');
model.result('pg8').run;
model.result('pg8').feature('slc3').set('expr', 'n10');
model.result('pg8').feature('slc3').set('inheritplot', 'slc1');
model.result('pg8').feature('slc3').set('title', 'n10 (1/m<SUP>4</SUP>)');
model.result('pg8').feature('slc3').set('arrayindex', 1);
model.result('pg8').feature('slc4').set('arraydim', '1');
model.result('pg8').run;
model.result('pg8').feature('slc4').set('expr', 'n10');
model.result('pg8').feature('slc4').set('arrayindex', 1);
model.result('pg8').feature('surf2').set('arraydim', '1');
model.result('pg8').run;
model.result('pg8').feature('surf2').set('arrayindex', 1);
model.result('pg8').feature('slc3').set('arraydim', '1');
model.result('pg8').run;
model.result('pg8').feature.duplicate('slc5', 'slc3');
model.result('pg8').feature.duplicate('slc6', 'slc4');
model.result('pg8').feature.duplicate('surf3', 'surf2');
model.result('pg8').feature('slc5').set('arraydim', '1');
model.result('pg8').run;
model.result('pg8').feature('slc5').set('expr', 'n15');
model.result('pg8').feature('slc5').set('title', 'n15 (1/m<SUP>4</SUP>)');
model.result('pg8').feature('slc5').set('arrayindex', 2);
model.result('pg8').feature('slc6').set('arraydim', '1');
model.result('pg8').run;
model.result('pg8').feature('slc6').set('expr', 'n15');
model.result('pg8').feature('slc6').set('arrayindex', 2);
model.result('pg8').feature('surf3').set('arraydim', '1');
model.result('pg8').run;
model.result('pg8').feature('surf3').set('arrayindex', 2);
model.result('pg8').feature('slc5').set('arraydim', '1');
model.result('pg8').run;
model.result('pg8').feature.duplicate('slc7', 'slc5');
model.result('pg8').feature.duplicate('slc8', 'slc6');
model.result('pg8').feature.duplicate('surf4', 'surf3');
model.result('pg8').feature('slc7').set('arraydim', '1');
model.result('pg8').run;
model.result('pg8').feature('slc7').set('expr', 'n20');
model.result('pg8').feature('slc7').set('title', 'n20 (1/m<SUP>4</SUP>)');
model.result('pg8').feature('slc7').set('arrayindex', 3);
model.result('pg8').feature('slc8').set('arraydim', '1');
model.result('pg8').run;
model.result('pg8').feature('slc8').set('expr', 'n20');
model.result('pg8').feature('slc8').set('arrayindex', 3);
model.result('pg8').feature('surf4').set('arraydim', '1');
model.result('pg8').run;
model.result('pg8').feature('surf4').set('arrayindex', 3);
model.result('pg8').run;
model.result('pg8').create('ann1', 'Annotation');
model.result('pg8').feature('ann1').set('arraydim', '1');
model.result('pg8').feature('ann1').set('text', 'Interval 5');
model.result('pg8').feature('ann1').set('showpoint', false);
model.result('pg8').feature.duplicate('ann2', 'ann1');
model.result('pg8').feature('ann2').set('arraydim', '1');
model.result('pg8').run;
model.result('pg8').feature('ann2').set('text', 'Interval 10');
model.result('pg8').feature.duplicate('ann3', 'ann2');
model.result('pg8').feature('ann3').set('arraydim', '1');
model.result('pg8').run;
model.result('pg8').feature('ann3').set('text', 'Interval 15');
model.result('pg8').feature.duplicate('ann4', 'ann3');
model.result('pg8').feature('ann4').set('arraydim', '1');
model.result('pg8').run;
model.result('pg8').feature('ann4').set('text', 'Interval 20');

model.view('view1').set('showgrid', false);
model.view('view1').set('showaxisorientation', false);
model.view('view1').set('showgrid', true);
model.view('view1').set('showaxisorientation', true);

model.result('pg4').run;
model.result('pg4').set('data', 'dset1');
model.result('pg4').run;
model.result('pg3').run;

model.nodeGroup.create('grp2', 'Results');
model.nodeGroup('grp2').set('type', 'plotgroup');
model.nodeGroup.move('grp2', 1);
model.nodeGroup('grp2').add('plotgroup', 'pg3');
model.nodeGroup('grp2').add('plotgroup', 'pg4');
model.nodeGroup('grp2').add('plotgroup', 'pg7');
model.nodeGroup('grp2').add('plotgroup', 'pg8');
model.nodeGroup('grp2').label('T-mixer');

model.result('pg8').run;

model.title('Precipitation of Barium Sulfate');

model.description('Crystallization is an important separation process in the chemical industry. It is used for the production of pharmaceuticals and industrial chemicals. Crystallization can also be used in resource recovery as a way of separating valuable materials from waste. This model solves a discretized formulation of the population balance equation to obtain the crystal size distribution from precipitation of barium sulfate in 0D and a 3D T-mixer.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;
model.sol('sol8').clearSolutionData;

model.label('barium_sulfate_precipitation.mph');

model.modelNode.label('Components');

out = model;
