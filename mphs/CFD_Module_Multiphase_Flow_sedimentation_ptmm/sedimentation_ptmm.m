function out = model
%
% sedimentation_ptmm.m
%
% Model exported on May 26 2025, 21:26 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/CFD_Module/Multiphase_Flow');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('spf', 'TurbulentFlowkeps', 'geom1');
model.physics('spf').model('comp1');
model.physics('spf').prop('PhysicalModelProperty').set('Compressibility', 'CompressibleMALT03');
model.physics.create('phtr', 'PhaseTransport', 'geom1', {'s1' 's2'});

model.multiphysics.create('mfmm1', 'MultiphaseFlowMixtureModel', 'geom1', 2);
model.multiphysics('mfmm1').set('multiphaseflow_physics', 'phtr');
model.multiphysics('mfmm1').set('fluidflow_physics', 'spf');
model.multiphysics('mfmm1').selection.all;

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/spf', true);
model.study('std1').feature('time').setSolveFor('/physics/phtr', true);
model.study('std1').feature('time').setSolveFor('/multiphysics/mfmm1', true);

model.geom('geom1').insertFile('sedimentation_ptmm_geom_sequence.mph', 'geom1');
model.geom('geom1').run('fin');
model.geom('geom1').create('mce1', 'MeshControlEdges');
model.geom('geom1').feature('mce1').selection('input').set('fin', [8 10 11]);
model.geom('geom1').run('mce1');

model.param.set('rho_c', '1000[kg/m^3]');
model.param.descr('rho_c', 'Continuous phase density');
model.param.set('mu_c', '1e-3[Pa*s]');
model.param.descr('mu_c', 'Continuous phase viscosity');
model.param.set('rho_d', '1100[kg/m^3]');
model.param.descr('rho_d', 'Dispersed phase density');
model.param.set('d_d', '0.2[mm]');
model.param.descr('d_d', 'Dispersed phase particle diameter');

model.func.create('step1', 'Step');
model.func('step1').model('comp1');
model.func('step1').set('location', 1);
model.func('step1').set('smooth', 2);

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').set('v_in', '1.25*step1(t[1/s])[m/s]');
model.variable('var1').descr('v_in', 'Inlet velocity');
model.variable('var1').set('v_out', '0.05*step1(t[1/s])[m/s]');
model.variable('var1').descr('v_out', 'Outlet velocity');
model.variable('var1').set('phid_in', '0.003*step1(t[1/s])');
model.variable('var1').descr('phid_in', 'Inlet dispersed phase volume fraction');
model.variable('var1').set('qd_out', '2*pi*r*s2*(mfmm1.u_s2r*nr+mfmm1.u_s2z*nz)*mfmm1.rho_s2');
model.variable('var1').descr('qd_out', 'Dispersed phase mass-outflux');

model.physics('spf').prop('PhysicalModelProperty').set('IncludeGravity', true);
model.physics('spf').feature('init1').set('p_init', '-g_const*z*rho_c');
model.physics('spf').feature('init1').set('CompensateForHydrostaticPressureApproximation', false);
model.physics('spf').create('wallbc2', 'WallBC', 1);
model.physics('spf').feature('wallbc2').set('BoundaryCondition', 'Slip');
model.physics('spf').feature('wallbc2').selection.set([7]);
model.physics('spf').create('inl1', 'InletBoundary', 1);
model.physics('spf').feature('inl1').selection.set([5]);
model.physics('spf').feature('inl1').set('U0in', 'v_in');
model.physics('spf').feature('inl1').set('IT_list', 'user_defined');
model.physics('spf').feature('inl1').set('LT_list', 'user_defined');
model.physics('spf').feature('inl1').set('LT', '0.2*0.07');
model.physics('spf').feature('inl1').set('constraintType', 'symmetricConstraint');
model.physics('spf').create('out1', 'OutletBoundary', 1);
model.physics('spf').feature('out1').selection.set([2]);
model.physics('spf').feature('out1').set('BoundaryCondition', 'Velocity');
model.physics('spf').feature('out1').set('U0out', 'v_out');
model.physics('spf').feature('out1').set('constraintType', 'symmetricConstraint');
model.physics('spf').create('out2', 'OutletBoundary', 1);
model.physics('spf').feature('out2').selection.set([18]);
model.physics('spf').feature('out2').set('constraintType', 'symmetricConstraint');
model.physics('phtr').create('sa1', 'VolumeFraction', 1);
model.physics('phtr').feature('sa1').selection.set([5]);
model.physics('phtr').feature('sa1').setIndex('phases', true, 1);
model.physics('phtr').feature('sa1').setIndex('s0', 'phid_in', 1);
model.physics('phtr').create('of1', 'Outflow', 1);
model.physics('phtr').feature('of1').selection.set([2 18]);

model.multiphysics('mfmm1').set('SlipModel', 'HadamardRybczynski');
model.multiphysics('mfmm1').set('rhoc_mat', 'userdef');
model.multiphysics('mfmm1').set('rhoc', 'rho_c');
model.multiphysics('mfmm1').set('muc_mat', 'userdef');
model.multiphysics('mfmm1').set('muc', 'mu_c');
model.multiphysics('mfmm1').set('rho_s2_mat', 'userdef');
model.multiphysics('mfmm1').set('rho_s2', 'rho_d');
model.multiphysics('mfmm1').set('diam_s2', 'd_d');

model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('size').set('hauto', 2);
model.mesh('mesh1').feature('size1').set('hauto', 1);
model.mesh('mesh1').feature('cr1').active(false);
model.mesh('mesh1').create('size2', 'Size');
model.mesh('mesh1').feature.move('size2', 2);
model.mesh('mesh1').feature('size2').selection.geom('geom1', 1);
model.mesh('mesh1').feature('size2').selection.set([26 27 28]);
model.mesh('mesh1').feature('size2').set('table', 'cfd');
model.mesh('mesh1').feature('size2').set('hauto', 1);
model.mesh('mesh1').feature('ftri1').set('smoothmaxiter', 8);
model.mesh('mesh1').feature('ftri1').set('smoothmaxdepth', 8);
model.mesh('mesh1').feature('bl1').set('sharpcorners', 'split');
model.mesh('mesh1').feature('bl1').set('smoothmaxiter', 8);
model.mesh('mesh1').feature('bl1').set('smoothmaxdepth', 16);
model.mesh('mesh1').feature('bl1').feature('blp1').set('blnlayers', 12);
model.mesh('mesh1').feature('bl1').feature('blp1').set('blhminfact', 1);
model.mesh('mesh1').run;

model.study('std1').feature('time').set('tlist', 'range(0,0.01,0.1) range(1,10) 100*range(1,10) 1800*range(1,24)');

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_s2').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_s2').set('scaleval', '1');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.01,0.1) range(1,10) 100*range(1,10) 1800*range(1,24)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.005);
model.sol('sol1').feature('t1').set('atolglobalmethod', 'scaled');
model.sol('sol1').feature('t1').set('atolglobalfactor', 0.05);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('atolmethod', {'comp1_ep' 'unscaled' 'comp1_k' 'unscaled' 'comp1_p' 'scaled' 'comp1_s2' 'global' 'comp1_u' 'global'});
model.sol('sol1').feature('t1').set('atol', {'comp1_ep' '0.09*sqrt((0.01*1)^3)/(0.035*7.900000000000001)' 'comp1_k' '(0.01*1)^2' 'comp1_p' '1e-3' 'comp1_s2' '1e-3' 'comp1_u' '1e-3'});
model.sol('sol1').feature('t1').set('atolvaluemethod', {'comp1_ep' 'manual' 'comp1_k' 'manual' 'comp1_p' 'factor' 'comp1_s2' 'factor' 'comp1_u' 'factor'});
model.sol('sol1').feature('t1').set('atolfactor', {'comp1_ep' '0.1' 'comp1_k' '0.1' 'comp1_p' '1' 'comp1_s2' '0.1' 'comp1_u' '0.1'});
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('estrat', 'exclude');
model.sol('sol1').feature('t1').set('rhoinf', 0.5);
model.sol('sol1').feature('t1').set('predictor', 'constant');
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('stabcntrl', true);
model.sol('sol1').feature('t1').set('bwinitstepfrac', '0.01');
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_u' 'comp1_p'});
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('subdamp', 0.8);
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('subjtech', 'once');
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Velocity u, Pressure p');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_k' 'comp1_ep'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('subdamp', 0.8);
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('subiter', 1);
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('subtermconst', 'iter');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('subjtech', 'onevery');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('subntolfact', 0.1);
model.sol('sol1').feature('t1').create('d2', 'Direct');
model.sol('sol1').feature('t1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d2').label('Direct, turbulence variables (spf)');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Turbulence Variables');
model.sol('sol1').feature('t1').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('segvar', {'comp1_s2'});
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('subjtech', 'once');
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('subdamp', 0.8);
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('subiter', 1);
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('subntolfact', 0.1);
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('subtermconst', 'iter');
model.sol('sol1').feature('t1').create('d3', 'Direct');
model.sol('sol1').feature('t1').feature('d3').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d3').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d3').label('Direct, volume fractions (phtr)');
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('linsolver', 'd3');
model.sol('sol1').feature('t1').feature('se1').feature('ss3').label('Volume Fractions');
model.sol('sol1').feature('t1').feature('se1').set('ntolfact', 0.5);
model.sol('sol1').feature('t1').feature('se1').set('segstabacc', 'segaacc');
model.sol('sol1').feature('t1').feature('se1').set('segaaccdim', 5);
model.sol('sol1').feature('t1').feature('se1').set('segaaccmix', 0.9);
model.sol('sol1').feature('t1').feature('se1').set('segaaccdelay', 1);
model.sol('sol1').feature('t1').feature('se1').set('maxsegiter', 10);
model.sol('sol1').feature('t1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol1').feature('t1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.k 0 comp1.ep 0 ');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('t1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('t1').feature('i1').set('maxlinit', 100);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').create('i2', 'Iterative');
model.sol('sol1').feature('t1').feature('i2').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i2').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i2').set('itrestart', 50);
model.sol('sol1').feature('t1').feature('i2').set('rhob', 20);
model.sol('sol1').feature('t1').feature('i2').set('maxlinit', 200);
model.sol('sol1').feature('t1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i2').label('AMG, turbulence variables (spf)');
model.sol('sol1').feature('t1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('iter', 0);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').create('i3', 'Iterative');
model.sol('sol1').feature('t1').feature('i3').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i3').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i3').set('itrestart', 50);
model.sol('sol1').feature('t1').feature('i3').set('rhob', 20);
model.sol('sol1').feature('t1').feature('i3').set('maxlinit', 50);
model.sol('sol1').feature('t1').feature('i3').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i3').label('AMG, volume fractions (phtr)');
model.sol('sol1').feature('t1').feature('i3').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').set('saamgcompwise', false);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'sor');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.6);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'matrix');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('relax', 0.4);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('maxline', 15);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'soru');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.6);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'matrix');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('po').feature('sl1').set('relax', 0.4);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('po').feature('sl1').set('maxline', 15);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('v1').feature('comp1_ep').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_ep').set('scaleval', 0.1);
model.sol('sol1').feature('v1').feature('comp1_k').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_k').set('scaleval', 0.1);
model.sol('sol1').feature('v1').feature('comp1_p').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_p').set('scaleval', '1e4');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('t1').set('initialstepbdfactive', true);
model.sol('sol1').feature('t1').set('initialstepbdf', 0.005);
model.sol('sol1').feature('t1').feature('se1').set('ratelimitactive', true);
model.sol('sol1').feature('t1').feature('se1').set('ratelimit', 10);
model.sol('sol1').runAll;

model.result.dataset('dset1').set('geom', 'geom1');
model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').label('Velocity (spf)');
model.result('pg1').set('dataisaxisym', 'off');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 55, 0);
model.result('pg1').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg1');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').label('Surface');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('smooth', 'internal');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').label('Pressure (spf)');
model.result('pg2').set('dataisaxisym', 'off');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 55, 0);
model.result('pg2').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg2');
model.result('pg2').feature.create('con1', 'Contour');
model.result('pg2').feature('con1').label('Contour');
model.result('pg2').feature('con1').set('showsolutionparams', 'on');
model.result('pg2').feature('con1').set('expr', 'p');
model.result('pg2').feature('con1').set('number', 40);
model.result('pg2').feature('con1').set('levelrounding', false);
model.result('pg2').feature('con1').set('smooth', 'internal');
model.result('pg2').feature('con1').set('showsolutionparams', 'on');
model.result('pg2').feature('con1').set('data', 'parent');
model.result.dataset.create('rev1', 'Revolve2D');
model.result.dataset('rev1').label('Revolution 2D');
model.result.dataset('rev1').set('data', 'none');
model.result.dataset('rev1').set('startangle', -90);
model.result.dataset('rev1').set('revangle', 225);
model.result.dataset('rev1').set('data', 'dset1');
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').label('Velocity, 3D (spf)');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').set('data', 'rev1');
model.result('pg3').setIndex('looplevel', 55, 0);
model.result('pg3').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pcond1/pg1');
model.result('pg3').feature.create('surf1', 'Surface');
model.result('pg3').feature('surf1').label('Surface');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('smooth', 'internal');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('data', 'parent');
model.result.dataset.create('edg1', 'Edge2D');
model.result.dataset('edg1').label('Exterior Walls');
model.result.dataset('edg1').set('data', 'dset1');
model.result.dataset('edg1').selection.geom('geom1', 1);
model.result.dataset('edg1').selection.set([3 7 8 9 10 11 12 13 14 15 16 17 19 20 21 22 23 24 25 26]);
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').label('Wall Resolution (spf)');
model.result('pg4').set('dataisaxisym', 'off');
model.result('pg4').set('frametype', 'spatial');
model.result('pg4').set('data', 'dset1');
model.result('pg4').setIndex('looplevel', 55, 0);
model.result('pg4').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pcond2/pcond4/pg2');
model.result('pg4').feature.create('line1', 'Line');
model.result('pg4').feature('line1').label('Wall Resolution');
model.result('pg4').feature('line1').set('showsolutionparams', 'on');
model.result('pg4').feature('line1').set('expr', 'spf.Delta_wPlus');
model.result('pg4').feature('line1').set('linetype', 'tube');
model.result('pg4').feature('line1').set('smooth', 'internal');
model.result('pg4').feature('line1').set('showsolutionparams', 'on');
model.result('pg4').feature('line1').set('data', 'parent');
model.result('pg4').feature('line1').feature.create('hght1', 'Height');
model.result('pg4').feature('line1').feature('hght1').label('Height Expression');
model.result('pg4').feature('line1').feature('hght1').set('heightdata', 'expr');
model.result('pg4').feature('line1').feature('hght1').set('expr', 'spf.WRHeightExpr');
model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').label('Volume Fraction (phtr)');
model.result('pg5').set('dataisaxisym', 'off');
model.result('pg5').set('data', 'dset1');
model.result('pg5').setIndex('looplevel', 55, 0);
model.result('pg5').set('defaultPlotID', 'ResultDefaults_Phtr/icom2/pdef1/pcond2/pg1');
model.result('pg5').feature.create('surf1', 'Surface');
model.result('pg5').feature('surf1').label('Surface');
model.result('pg5').feature('surf1').set('showsolutionparams', 'on');
model.result('pg5').feature('surf1').set('expr', 's1');
model.result('pg5').feature('surf1').set('smooth', 'internal');
model.result('pg5').feature('surf1').set('showsolutionparams', 'on');
model.result('pg5').feature('surf1').set('data', 'parent');
model.result.dataset('rev1').set('data', 'dset1');
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').label('Volume Fraction (phtr) 1');
model.result('pg6').set('data', 'rev1');
model.result('pg6').setIndex('looplevel', 55, 0);
model.result('pg6').set('defaultPlotID', 'ResultDefaults_Phtr/icom2/pdef1/pcond2/pcond1/pg1');
model.result('pg6').feature.create('surf1', 'Surface');
model.result('pg6').feature('surf1').label('Surface');
model.result('pg6').feature('surf1').set('showsolutionparams', 'on');
model.result('pg6').feature('surf1').set('expr', 's1');
model.result('pg6').feature('surf1').set('smooth', 'internal');
model.result('pg6').feature('surf1').set('showsolutionparams', 'on');
model.result('pg6').feature('surf1').set('data', 'parent');
model.result('pg1').run;
model.result.numerical.create('int1', 'IntLine');
model.result.numerical('int1').set('intsurface', true);
model.result.numerical('int1').selection.set([5]);
model.result.numerical('int1').setIndex('expr', '-qd_out', 0);
model.result.numerical('int1').setIndex('unit', 'N*s', 0);
model.result.numerical('int1').setIndex('descr', 'Dispersed phase mass-influx', 0);
model.result.numerical('int1').set('intsurface', false);
model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').comments('Line Integration 1');
model.result.numerical('int1').set('table', 'tbl1');
model.result.numerical('int1').setResult;
model.result.numerical.create('int2', 'IntLine');
model.result.numerical('int2').set('intsurface', true);
model.result.numerical('int2').selection.set([2]);
model.result.numerical('int2').setIndex('expr', 'qd_out', 0);
model.result.numerical('int2').setIndex('unit', 'N*s', 0);
model.result.numerical('int2').setIndex('descr', 'Dispersed phase mass-outflux', 0);
model.result.numerical('int2').set('intsurface', false);
model.result.numerical('int2').set('table', 'tbl1');
model.result.numerical('int2').appendResult;
model.result.numerical.create('int3', 'IntLine');
model.result.numerical('int3').set('intsurface', true);
model.result.numerical('int3').selection.set([18]);
model.result.numerical('int3').setIndex('expr', 'qd_out', 0);
model.result.numerical('int3').setIndex('unit', 'kg/s', 0);
model.result.numerical('int3').setIndex('descr', 'Dispersed phase mass-outflux', 0);
model.result.numerical('int3').set('intsurface', false);
model.result.numerical('int3').set('table', 'tbl1');
model.result.numerical('int3').appendResult;
model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').run;
model.result('pg7').set('ylabelactive', true);
model.result('pg7').set('ylabel', 'Mass flow (kg/s)');
model.result('pg7').create('tblp1', 'Table');
model.result('pg7').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg7').feature('tblp1').set('linewidth', 'preference');
model.result('pg7').feature('tblp1').set('legend', true);
model.result('pg7').feature('tblp1').set('legendmethod', 'manual');
model.result('pg7').feature('tblp1').setIndex('legends', 'Dispersed phase mass-influx', 0);
model.result('pg7').feature('tblp1').setIndex('legends', 'Dispersed phase mass-outflux, outlet 1', 1);
model.result('pg7').feature('tblp1').setIndex('legends', 'Dispersed phase mass-outflux, outlet 2', 2);
model.result('pg7').run;
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').feature('surf1').set('expr', 's2');
model.result('pg5').run;
model.result('pg5').feature('surf1').set('rangecoloractive', true);
model.result('pg5').feature('surf1').set('rangecolormin', 0);
model.result('pg5').feature('surf1').set('rangecolormax', 0.006);
model.result('pg5').run;
model.result('pg5').create('str1', 'Streamline');
model.result('pg5').feature('str1').set('posmethod', 'uniform');
model.result('pg5').feature('str1').set('udist', 0.02);
model.result('pg5').run;
model.result.dataset('rev1').set('startangle', 0);
model.result.dataset('rev1').set('revangle', 270);
model.result('pg6').run;
model.result('pg6').run;
model.result('pg6').feature('surf1').set('expr', 's2');
model.result('pg6').feature('surf1').set('rangecoloractive', true);
model.result('pg6').feature('surf1').set('rangecolormin', 0);
model.result('pg6').feature('surf1').set('rangecolormax', 0.006);
model.result('pg6').run;
model.result('pg6').create('surf2', 'Surface');
model.result('pg6').feature('surf2').set('expr', 'spf.Delta_wPlus');
model.result('pg6').feature('surf2').set('descr', 'Wall resolution in viscous units');
model.result('pg6').feature('surf2').set('coloring', 'uniform');
model.result('pg6').feature('surf2').set('color', 'gray');
model.result('pg6').run;
model.result('pg6').create('str1', 'Streamline');
model.result('pg6').feature('str1').set('revcoordsys', 'cylindrical');
model.result('pg6').feature('str1').set('expr', {'mfmm1.u_s2r' 'mfmm1.u_s2phi' 'mfmm1.u_s2z'});
model.result('pg6').feature('str1').set('descr', 'Convective velocity dispersed phase s2');
model.result('pg6').feature('str1').setIndex('expr', 0, 1);
model.result('pg6').feature('str1').set('descractive', true);
model.result('pg6').feature('str1').set('descr', 'Dispersed phase (black)');
model.result('pg6').feature('str1').set('startmethod', 'coord');
model.result('pg6').feature('str1').set('xcoord', 'range(0.01,0.02,0.19)');
model.result('pg6').feature('str1').set('ycoord', 0);
model.result('pg6').feature('str1').set('zcoord', '-1*1^range(1,10)');
model.result('pg6').feature('str1').set('color', 'black');
model.result('pg6').run;
model.result('pg6').create('str2', 'Streamline');
model.result('pg6').feature('str2').set('revcoordsys', 'cylindrical');
model.result('pg6').feature('str2').set('expr', {'mfmm1.ucontr' 'mfmm1.ucontphi' 'mfmm1.ucontz'});
model.result('pg6').feature('str2').set('descr', 'Velocity field, continuous phase');
model.result('pg6').feature('str2').setIndex('expr', 0, 1);
model.result('pg6').feature('str2').set('descractive', true);
model.result('pg6').feature('str2').set('descr', 'Continuous phase (white)');
model.result('pg6').feature('str2').set('startmethod', 'coord');
model.result('pg6').feature('str2').set('xcoord', 'range(0,0.02,0.2) range(0.5,0.5,12)');
model.result('pg6').feature('str2').set('ycoord', 0);
model.result('pg6').feature('str2').set('zcoord', '-1^range(1,35)');
model.result('pg6').feature('str2').set('color', 'white');
model.result('pg6').run;
model.result('pg6').run;

model.view('view2').set('showgrid', false);
model.view('view2').set('showaxisorientation', false);
model.view('view2').camera.setIndex('position', -93.78635, 0);
model.view('view2').camera.setIndex('position', -125.0611, 1);
model.view('view2').camera.setIndex('position', 90.09177, 2);
model.view('view2').camera.setIndex('target', 0.0054, 0);
model.view('view2').camera.setIndex('target', -0.00542, 1);
model.view('view2').camera.setIndex('position', 126.03422, 0);
model.view('view2').camera.set('zoomanglefull', 8.55975);
model.view('view2').camera.setIndex('position', 117.87974, 0);
model.view('view2').camera.setIndex('position', -117.66473, 1);
model.view('view2').camera.setIndex('position', 42.79494, 2);
model.view('view2').camera.setIndex('target', 0.00556, 0);
model.view('view2').camera.setIndex('target', -0.00516, 1);
model.view('view2').camera.setIndex('target', -3.7, 2);
model.view('view2').camera.setIndex('up', -0.18644, 0);
model.view('view2').camera.setIndex('up', 0.17431, 1);
model.view('view2').camera.setIndex('up', 0.96688, 2);
model.view('view2').camera.setIndex('rotationpoint', 0.00541, 0);
model.view('view2').camera.setIndex('rotationpoint', -0.00541, 1);
model.view('view2').camera.setIndex('rotationpoint', -3.7, 2);
model.view('view2').camera.setIndex('viewoffset', -0.02242, 0);
model.view('view2').camera.set('viewoffset', [-0.02242 -0.17423]);

model.result('pg6').run;
model.result('pg6').set('view', 'view2');
model.result('pg6').set('titletype', 'none');

model.view('view2').set('scenelight', false);

model.result('pg6').run;
model.result('pg6').set('titletype', 'auto');

model.title('Contaminant-Removal from Wastewater in a Secondary Clarifier by Sedimentation');

model.description('This example studies the removal of contaminants from wastewater by sedimentation in a circular secondary clarifier. The example uses the k-epsilon turbulence model.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;

model.label('sedimentation_ptmm.mph');

model.modelNode.label('Components');

out = model;
