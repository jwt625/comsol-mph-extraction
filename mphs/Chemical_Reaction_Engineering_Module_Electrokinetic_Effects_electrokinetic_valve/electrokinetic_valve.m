function out = model
%
% electrokinetic_valve.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Chemical_Reaction_Engineering_Module/Electrokinetic_Effects');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('ec', 'ConductiveMedia', 'geom1');
model.physics('ec').model('comp1');
model.physics.create('tds', 'DilutedSpecies', 'geom1', {'c'});
model.physics.create('spf', 'CreepingFlow', 'geom1');
model.physics('spf').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/ec', true);
model.study('std1').feature('stat').setSolveFor('/physics/tds', true);
model.study('std1').feature('stat').setSolveFor('/physics/spf', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('V_appUB', '-3.2[V]', 'Applied voltage, upper buffer inlet');
model.param.set('V_appS', '-1[V]', 'Applied voltage, sample inlet');
model.param.set('u_a', '0.2[mm/s]', 'Average velocity, sample inlet');
model.param.set('w_a', '0.67[mm/s]', 'Average velocity, buffer inlets');
model.param.set('D', '1e-9[m^2/s]', 'Sample ion diffusivity');
model.param.set('T', '298[K]', 'Temperature');
model.param.set('c_in', '0.05*3.5[g/l]/(22+35)[g/mol]', 'Sample ion concentration, inlet');
model.param.set('z_c', '-1', 'Charge number');

model.geom('geom1').insertFile('electrokinetic_valve_geom_sequence.mph', 'geom1');
model.geom('geom1').run('boxsel5');

model.view('view1').camera.set('projection', 'orthographic');
model.view('view1').set('showaxisorientation', false);
model.view('view1').set('showgrid', false);
model.view('view1').camera.set('projection', 'perspective');
model.view('view1').set('showaxisorientation', true);
model.view('view1').set('showgrid', true);

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').label('Electrolyte fluid');
model.material('mat1').propertyGroup('def').set('electricconductivity', {'1[S/m]'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1'});
model.material('mat1').propertyGroup('def').set('density', {'1e3[kg/m^3]'});
model.material('mat1').propertyGroup('def').set('dynamicviscosity', {'1e-3[Pa*s]'});

model.physics('ec').create('pot1', 'ElectricPotential', 2);
model.physics('ec').feature('pot1').label('Electric Potential - Focusing stage and Injection stage mode B');
model.physics('ec').feature('pot1').selection.named('geom1_boxsel1');
model.physics('ec').feature('pot1').set('V0', 'V_appS');
model.physics('ec').create('gnd1', 'Ground', 2);
model.physics('ec').feature('gnd1').label('Ground - Focusing stage and Injection stage mode B');
model.physics('ec').feature('gnd1').selection.named('geom1_boxsel4');
model.physics('ec').create('pot2', 'ElectricPotential', 2);
model.physics('ec').feature('pot2').label('Electric Potential - Injection stage');
model.physics('ec').feature('pot2').selection.named('geom1_boxsel2');
model.physics('ec').feature('pot2').set('V0', 'V_appUB');
model.physics('ec').create('gnd2', 'Ground', 2);
model.physics('ec').feature('gnd2').label('Ground - Injection stage');
model.physics('ec').feature('gnd2').selection.named('geom1_boxsel3');
model.physics('tds').prop('TransportMechanism').set('Migration', true);
model.physics('tds').prop('ShapeProperty').set('order_concentration', 2);
model.physics('tds').feature('sp1').setIndex('z', 'z_c', 0);
model.physics('tds').feature('cdm1').label('Transport Properties - Focusing stage');
model.physics('tds').feature('cdm1').set('minput_temperature_src', 'userdef');
model.physics('tds').feature('cdm1').set('minput_temperature', 'T');
model.physics('tds').feature('cdm1').set('u_src', 'root.comp1.u');
model.physics('tds').feature('cdm1').set('V_src', 'root.comp1.V');
model.physics('tds').feature('cdm1').set('D_c', {'D' '0' '0' '0' 'D' '0' '0' '0' 'D'});
model.physics('tds').feature.duplicate('cdm2', 'cdm1');
model.physics('tds').feature('cdm2').label('Transport Properties - Injection stage');
model.physics('tds').feature('cdm2').set('u_src', 'userdef');
model.physics('tds').create('conc1', 'Concentration', 2);
model.physics('tds').feature('conc1').label('Concentration at sample inlet');
model.physics('tds').feature('conc1').selection.named('geom1_boxsel1');
model.physics('tds').feature('conc1').setIndex('species', true, 0);
model.physics('tds').feature('conc1').setIndex('c0', 'c_in', 0);
model.physics('tds').create('conc2', 'Concentration', 2);
model.physics('tds').feature('conc2').label('Concentration at buffer inlets');
model.physics('tds').feature('conc2').selection.named('geom1_unisel1');
model.physics('tds').feature('conc2').setIndex('species', true, 0);
model.physics('tds').create('out1', 'Outflow', 2);
model.physics('tds').feature('out1').selection.named('geom1_boxsel4');
model.physics('tds').create('fl1', 'FluxBoundary', 2);
model.physics('tds').feature('fl1').label('Migration at inlets and outlets - Injection stage');
model.physics('tds').feature('fl1').selection.named('geom1_unisel3');
model.physics('tds').feature('fl1').setIndex('species', true, 0);
model.physics('tds').feature('fl1').setIndex('J0', '-tds.nmflux_c', 0);
model.physics('spf').create('inl1', 'InletBoundary', 2);
model.physics('spf').feature('inl1').label('Inlet, sample');
model.physics('spf').feature('inl1').selection.named('geom1_boxsel1');
model.physics('spf').feature('inl1').set('BoundaryCondition', 'FullyDevelopedFlow');
model.physics('spf').feature('inl1').set('Uavfdf', 'u_a');
model.physics('spf').create('inl2', 'InletBoundary', 2);
model.physics('spf').feature('inl2').label('Inlet, upper buffer');
model.physics('spf').feature('inl2').selection.named('geom1_boxsel2');
model.physics('spf').feature('inl2').set('BoundaryCondition', 'FullyDevelopedFlow');
model.physics('spf').feature('inl2').set('Uavfdf', 'w_a');
model.physics('spf').create('inl3', 'InletBoundary', 2);
model.physics('spf').feature('inl3').label('Inlet, lower buffer');
model.physics('spf').feature('inl3').selection.named('geom1_boxsel3');
model.physics('spf').feature('inl3').set('BoundaryCondition', 'FullyDevelopedFlow');
model.physics('spf').feature('inl3').set('Uavfdf', 'w_a');
model.physics('spf').create('out1', 'OutletBoundary', 2);
model.physics('spf').feature('out1').selection.named('geom1_boxsel4');
model.physics('spf').feature('out1').set('NormalFlow', true);

model.mesh('mesh1').create('ftet1', 'FreeTet');
model.mesh('mesh1').feature('size').set('custom', true);
model.mesh('mesh1').feature('size').set('hmax', 29);
model.mesh('mesh1').feature('size').set('hmin', 5);
model.mesh('mesh1').run;

model.study('std1').label('Study - for mode A');
model.study('std1').feature('stat').label('Stationary - Focusing stage');
model.study('std1').feature('stat').setEntry('activate', 'ec', false);
model.study('std1').feature('stat').setEntry('activate', 'tds', false);
model.study('std1').create('stat2', 'Stationary');
model.study('std1').feature('stat2').label('Stationary 2 - Focusing stage');
model.study('std1').feature('stat2').set('useadvanceddisable', true);
model.study('std1').feature('stat2').setSolveFor('/physics/tds', false);
model.study('std1').feature('stat2').setSolveFor('/physics/spf', false);
model.study('std1').feature('stat2').set('disabledphysics', {'ec/pot2' 'ec/gnd2'});
model.study('std1').create('stat3', 'Stationary');
model.study('std1').feature('stat3').label('Stationary 3 - Focusing stage');
model.study('std1').feature('stat3').set('useadvanceddisable', true);
model.study('std1').feature('stat3').setSolveFor('/physics/ec', false);
model.study('std1').feature('stat3').setSolveFor('/physics/spf', false);
model.study('std1').feature('stat3').set('disabledphysics', {'tds/cdm2' 'tds/fl1'});
model.study('std1').create('stat4', 'Stationary');
model.study('std1').feature('stat4').label('Stationary - Injection stage');
model.study('std1').feature('stat4').set('useadvanceddisable', true);
model.study('std1').feature('stat4').set('disabledphysics', {'ec/pot1' 'ec/gnd1'});
model.study('std1').feature('stat4').setSolveFor('/physics/tds', false);
model.study('std1').feature('stat4').setSolveFor('/physics/spf', false);
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').label('Time Dependent - Injection stage');
model.study('std1').feature('time').set('tlist', 'range(0,0.06,0.6)');
model.study('std1').feature('time').setEntry('activate', 'ec', false);
model.study('std1').feature('time').setEntry('activate', 'spf', false);

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.4);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.4);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf' 'comp1_spf_inl2_Pinlfdf' 'comp1_spf_inl3_Pinlfdf'});
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.4);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.4);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf' 'comp1_spf_inl2_Pinlfdf' 'comp1_spf_inl3_Pinlfdf'});
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'stat2');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'stat2');
model.sol('sol1').create('s2', 'Stationary');
model.sol('sol1').feature('s2').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s2').create('i1', 'Iterative');
model.sol('sol1').feature('s2').feature('i1').set('linsolver', 'cg');
model.sol('sol1').feature('s2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol1').feature('s2').feature('fc1').set('linsolver', 'i1');
model.sol('sol1').feature('s2').feature.remove('fcDef');
model.sol('sol1').create('su2', 'StoreSolution');
model.sol('sol1').create('st3', 'StudyStep');
model.sol('sol1').feature('st3').set('study', 'std1');
model.sol('sol1').feature('st3').set('studystep', 'stat3');
model.sol('sol1').create('v3', 'Variables');
model.sol('sol1').feature('v3').set('initmethod', 'sol');
model.sol('sol1').feature('v3').set('initsol', 'sol1');
model.sol('sol1').feature('v3').set('notsolmethod', 'sol');
model.sol('sol1').feature('v3').set('notsol', 'sol1');
model.sol('sol1').feature('v3').set('control', 'stat3');
model.sol('sol1').create('s3', 'Stationary');
model.sol('sol1').feature('s3').set('stol', 0.001);
model.sol('sol1').feature('s3').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s3').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s3').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s3').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s3').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s3').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s3').create('i1', 'Iterative');
model.sol('sol1').feature('s3').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s3').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s3').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s3').feature('i1').set('rhob', 400);
model.sol('sol1').feature('s3').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s3').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s3').feature('i1').label('AMG, concentrations (tds)');
model.sol('sol1').feature('s3').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s3').create('d1', 'Direct');
model.sol('sol1').feature('s3').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s3').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s3').feature('d1').label('Direct, concentrations (tds)');
model.sol('sol1').feature('s3').feature('fc1').set('linsolver', 'i1');
model.sol('sol1').feature('s3').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s3').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s3').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s3').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s3').feature.remove('fcDef');
model.sol('sol1').create('su3', 'StoreSolution');
model.sol('sol1').create('st4', 'StudyStep');
model.sol('sol1').feature('st4').set('study', 'std1');
model.sol('sol1').feature('st4').set('studystep', 'stat4');
model.sol('sol1').create('v4', 'Variables');
model.sol('sol1').feature('v4').set('initmethod', 'sol');
model.sol('sol1').feature('v4').set('initsol', 'sol1');
model.sol('sol1').feature('v4').set('initsoluse', 'sol3');
model.sol('sol1').feature('v4').set('notsolmethod', 'sol');
model.sol('sol1').feature('v4').set('notsol', 'sol1');
model.sol('sol1').feature('v4').set('control', 'stat4');
model.sol('sol1').create('s4', 'Stationary');
model.sol('sol1').feature('s4').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s4').create('i1', 'Iterative');
model.sol('sol1').feature('s4').feature('i1').set('linsolver', 'cg');
model.sol('sol1').feature('s4').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s4').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol1').feature('s4').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol1').feature('s4').feature('fc1').set('linsolver', 'i1');
model.sol('sol1').feature('s4').feature.remove('fcDef');
model.sol('sol1').create('su4', 'StoreSolution');
model.sol('sol1').create('st5', 'StudyStep');
model.sol('sol1').feature('st5').set('study', 'std1');
model.sol('sol1').feature('st5').set('studystep', 'time');
model.sol('sol1').create('v5', 'Variables');
model.sol('sol1').feature('v5').set('initmethod', 'sol');
model.sol('sol1').feature('v5').set('initsol', 'sol1');
model.sol('sol1').feature('v5').set('initsoluse', 'sol4');
model.sol('sol1').feature('v5').set('notsolmethod', 'sol');
model.sol('sol1').feature('v5').set('notsol', 'sol1');
model.sol('sol1').feature('v5').set('notsoluse', 'sol5');
model.sol('sol1').feature('v5').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.06,0.6)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.005);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('stabcntrl', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('t1').feature('i1').set('maxlinit', 50);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i1').label('AMG, concentrations (tds)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d1').label('Direct, concentrations (tds)');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('v4').set('notsolnum', 'auto');
model.sol('sol1').feature('v4').set('notsolvertype', 'solnum');
model.sol('sol1').feature('v3').set('notsolnum', 'auto');
model.sol('sol1').feature('v3').set('notsolvertype', 'solnum');
model.sol('sol1').feature('v3').set('solnum', 'auto');
model.sol('sol1').feature('v3').set('solvertype', 'solnum');
model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol1').feature('v2').set('solnum', 'auto');
model.sol('sol1').feature('v2').set('solvertype', 'solnum');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').label('Electric Potential (ec)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').set('showlegendsmaxmin', true);
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 11, 0);
model.result('pg1').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom2/pdef1/pcond2/pcond1/pcond2/pg1');
model.result('pg1').feature.create('vol1', 'Volume');
model.result('pg1').feature('vol1').set('showsolutionparams', 'on');
model.result('pg1').feature('vol1').set('solutionparams', 'parent');
model.result('pg1').feature('vol1').set('colortable', 'Dipole');
model.result('pg1').feature('vol1').set('showsolutionparams', 'on');
model.result('pg1').feature('vol1').set('data', 'parent');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Electric Field Norm (ec)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('showlegendsmaxmin', true);
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 11, 0);
model.result('pg2').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom3/pdef1/pcond2/pcond1/pg1');
model.result('pg2').feature.create('mslc1', 'Multislice');
model.result('pg2').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg2').feature('mslc1').set('solutionparams', 'parent');
model.result('pg2').feature('mslc1').set('expr', 'ec.normE');
model.result('pg2').feature('mslc1').set('multiplanexmethod', 'coord');
model.result('pg2').feature('mslc1').set('xcoord', 'ec.CPx');
model.result('pg2').feature('mslc1').set('multiplaneymethod', 'coord');
model.result('pg2').feature('mslc1').set('ycoord', 'ec.CPy');
model.result('pg2').feature('mslc1').set('multiplanezmethod', 'coord');
model.result('pg2').feature('mslc1').set('zcoord', 'ec.CPz');
model.result('pg2').feature('mslc1').set('colortable', 'Prism');
model.result('pg2').feature('mslc1').set('colortabletrans', 'nonlinear');
model.result('pg2').feature('mslc1').set('colorcalibration', -0.8);
model.result('pg2').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg2').feature('mslc1').set('data', 'parent');
model.result('pg2').feature.create('strmsl1', 'StreamlineMultislice');
model.result('pg2').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg2').feature('strmsl1').set('solutionparams', 'parent');
model.result('pg2').feature('strmsl1').set('expr', {'ec.Ex' 'ec.Ey' 'ec.Ez'});
model.result('pg2').feature('strmsl1').set('multiplanexmethod', 'coord');
model.result('pg2').feature('strmsl1').set('xcoord', 'ec.CPx');
model.result('pg2').feature('strmsl1').set('multiplaneymethod', 'coord');
model.result('pg2').feature('strmsl1').set('ycoord', 'ec.CPy');
model.result('pg2').feature('strmsl1').set('multiplanezmethod', 'coord');
model.result('pg2').feature('strmsl1').set('zcoord', 'ec.CPz');
model.result('pg2').feature('strmsl1').set('titletype', 'none');
model.result('pg2').feature('strmsl1').set('posmethod', 'uniform');
model.result('pg2').feature('strmsl1').set('udist', 0.02);
model.result('pg2').feature('strmsl1').set('maxlen', 0.4);
model.result('pg2').feature('strmsl1').set('maxtime', Inf);
model.result('pg2').feature('strmsl1').set('inheritcolor', false);
model.result('pg2').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg2').feature('strmsl1').set('maxtime', Inf);
model.result('pg2').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg2').feature('strmsl1').set('maxtime', Inf);
model.result('pg2').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg2').feature('strmsl1').set('maxtime', Inf);
model.result('pg2').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg2').feature('strmsl1').set('maxtime', Inf);
model.result('pg2').feature('strmsl1').set('data', 'parent');
model.result('pg2').feature('strmsl1').set('inheritplot', 'mslc1');
model.result('pg2').feature('strmsl1').feature.create('col1', 'Color');
model.result('pg2').feature('strmsl1').feature('col1').set('expr', 'ec.normE');
model.result('pg2').feature('strmsl1').feature('col1').set('colortable', 'PrismDark');
model.result('pg2').feature('strmsl1').feature('col1').set('colorlegend', false);
model.result('pg2').feature('strmsl1').feature('col1').set('colortabletrans', 'nonlinear');
model.result('pg2').feature('strmsl1').feature('col1').set('colorcalibration', -0.8);
model.result('pg2').feature('strmsl1').feature.create('filt1', 'Filter');
model.result('pg2').feature('strmsl1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').set('data', 'dset1');
model.result('pg3').setIndex('looplevel', 11, 0);
model.result('pg3').label('Concentration, Streamline (tds)');
model.result('pg3').set('titletype', 'custom');
model.result('pg3').set('typeintitle', true);
model.result('pg3').set('prefixintitle', '');
model.result('pg3').create('str1', 'Streamline');
model.result('pg3').feature('str1').set('expr', {'tds.tflux_cx' 'tds.tflux_cy' 'tds.tflux_cz'});
model.result('pg3').feature('str1').set('posmethod', 'start');
model.result('pg3').feature('str1').set('pointtype', 'arrow');
model.result('pg3').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg3').feature('str1').set('color', 'gray');
model.result('pg3').feature('str1').create('col', 'Color');
model.result('pg3').feature('str1').feature('col').set('expr', 'c');
model.result('pg3').feature('str1').feature('col').set('titletype', 'custom');
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').set('data', 'dset1');
model.result('pg4').setIndex('looplevel', 11, 0);
model.result('pg4').label('Concentration, Surface (tds)');
model.result('pg4').set('titletype', 'custom');
model.result('pg4').set('prefixintitle', '');
model.result('pg4').set('expressionintitle', false);
model.result('pg4').set('typeintitle', false);
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', {'c'});
model.result.dataset('dset1').set('geom', 'geom1');
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').label('Velocity (spf)');
model.result('pg5').set('frametype', 'spatial');
model.result('pg5').set('data', 'dset1');
model.result('pg5').setIndex('looplevel', 11, 0);
model.result('pg5').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pg1');
model.result('pg5').feature.create('slc1', 'Slice');
model.result('pg5').feature('slc1').label('Slice');
model.result('pg5').feature('slc1').set('showsolutionparams', 'on');
model.result('pg5').feature('slc1').set('expr', 'spf.U');
model.result('pg5').feature('slc1').set('smooth', 'internal');
model.result('pg5').feature('slc1').set('showsolutionparams', 'on');
model.result('pg5').feature('slc1').set('data', 'parent');
model.result.dataset.create('surf1', 'Surface');
model.result.dataset('surf1').label('Exterior Walls');
model.result.dataset('surf1').set('data', 'dset1');
model.result.dataset('surf1').selection.geom('geom1', 2);
model.result.dataset('surf1').selection.set([2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 21 22 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49]);
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').label('Pressure (spf)');
model.result('pg6').set('data', 'surf1');
model.result('pg6').setIndex('looplevel', 11, 0);
model.result('pg6').set('frametype', 'spatial');
model.result('pg6').set('data', 'surf1');
model.result('pg6').setIndex('looplevel', 11, 0);
model.result('pg6').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pcond2/pcond1/pg4');
model.result('pg6').feature.create('surf1', 'Surface');
model.result('pg6').feature('surf1').label('Surface');
model.result('pg6').feature('surf1').set('showsolutionparams', 'on');
model.result('pg6').feature('surf1').set('expr', 'p');
model.result('pg6').feature('surf1').set('colortable', 'Dipole');
model.result('pg6').feature('surf1').set('smooth', 'internal');
model.result('pg6').feature('surf1').set('showsolutionparams', 'on');
model.result('pg6').feature('surf1').set('data', 'parent');
model.result('pg6').feature('surf1').feature.create('tran1', 'Transparency');
model.result('pg1').run;
model.result('pg4').run;
model.result('pg4').label('Concentration - Mode A');
model.result('pg4').setIndex('looplevel', 1, 0);
model.result('pg4').set('titletype', 'none');
model.result('pg4').set('showlegendsunit', true);
model.result('pg4').run;
model.result('pg4').set('showlegends', false);
model.result('pg4').setIndex('looplevel', 2, 0);
model.result('pg4').run;
model.result('pg4').setIndex('looplevel', 3, 0);
model.result('pg4').run;
model.result.dataset.create('cln1', 'CutLine3D');
model.result.dataset('cln1').setIndex('genpoints', 10, 0, 0);
model.result.dataset('cln1').setIndex('genpoints', 10, 0, 1);
model.result.dataset('cln1').setIndex('genpoints', 20, 0, 2);
model.result.dataset('cln1').setIndex('genpoints', 10, 1, 0);
model.result.dataset('cln1').setIndex('genpoints', 10, 1, 1);
model.result.dataset('cln1').setIndex('genpoints', -200, 1, 2);
model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').run;
model.result('pg7').label('Concentration Line Plot - Mode A');
model.result('pg7').set('data', 'cln1');
model.result('pg7').set('titletype', 'none');
model.result('pg7').set('legendlayout', 'outside');
model.result('pg7').create('lngr1', 'LineGraph');
model.result('pg7').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg7').feature('lngr1').set('linewidth', 'preference');
model.result('pg7').feature('lngr1').set('expr', 'c');
model.result('pg7').feature('lngr1').set('descr', 'Concentration');
model.result('pg7').feature('lngr1').set('xdata', 'expr');
model.result('pg7').feature('lngr1').set('xdataexpr', '10[um]-z');
model.result('pg7').feature('lngr1').set('colorcycle', 'long');
model.result('pg7').feature('lngr1').set('legend', true);
model.result('pg7').run;

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/ec', true);
model.study('std2').feature('stat').setSolveFor('/physics/tds', true);
model.study('std2').feature('stat').setSolveFor('/physics/spf', true);
model.study('std2').label('Study - for mode B');
model.study('std2').feature('stat').setEntry('activate', 'ec', false);
model.study('std2').feature('stat').setEntry('activate', 'tds', false);
model.study('std2').feature('stat').label('Stationary - Focusing stage');
model.study('std2').create('stat2', 'Stationary');
model.study('std2').feature('stat2').label('Stationary 2 - Focusing stage');
model.study('std2').feature('stat2').set('useadvanceddisable', true);
model.study('std2').feature('stat2').set('disabledphysics', {'ec/pot2' 'ec/gnd2'});
model.study('std2').feature('stat2').setSolveFor('/physics/tds', false);
model.study('std2').feature('stat2').setSolveFor('/physics/spf', false);
model.study('std2').create('stat3', 'Stationary');
model.study('std2').feature('stat3').label('Stationary 3 - Focusing stage');
model.study('std2').feature('stat3').set('useadvanceddisable', true);
model.study('std2').feature('stat3').setSolveFor('/physics/ec', false);
model.study('std2').feature('stat3').set('disabledphysics', {'tds/cdm2' 'tds/fl1'});
model.study('std2').feature('stat3').setSolveFor('/physics/spf', false);
model.study('std2').create('stat4', 'Stationary');
model.study('std2').feature('stat4').label('Stationary - Injection stage');
model.study('std2').feature('stat4').setEntry('activate', 'tds', false);
model.study('std2').feature('stat4').setEntry('activate', 'spf', false);
model.study('std2').create('time', 'Transient');
model.study('std2').feature('time').label('Time Dependent - Injection stage');
model.study('std2').feature('time').set('tlist', 'range(0,0.06,0.6)');
model.study('std2').feature('time').setEntry('activate', 'ec', false);
model.study('std2').feature('time').setEntry('activate', 'spf', false);

model.sol.create('sol6');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol6').study('std2');
model.sol('sol6').create('st1', 'StudyStep');
model.sol('sol6').feature('st1').set('study', 'std2');
model.sol('sol6').feature('st1').set('studystep', 'stat');
model.sol('sol6').create('v1', 'Variables');
model.sol('sol6').feature('v1').set('control', 'stat');
model.sol('sol6').create('s1', 'Stationary');
model.sol('sol6').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol6').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol6').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol6').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol6').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol6').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol6').feature('s1').create('i1', 'Iterative');
model.sol('sol6').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol6').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol6').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol6').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol6').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol6').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol6').feature('s1').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol6').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.4);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.4);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf' 'comp1_spf_inl2_Pinlfdf' 'comp1_spf_inl3_Pinlfdf'});
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.4);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.4);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf' 'comp1_spf_inl2_Pinlfdf' 'comp1_spf_inl3_Pinlfdf'});
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol6').feature('s1').create('d1', 'Direct');
model.sol('sol6').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol6').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol6').feature('s1').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol6').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol6').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol6').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol6').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol6').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol6').feature('s1').feature.remove('fcDef');
model.sol('sol6').create('su1', 'StoreSolution');
model.sol('sol6').create('st2', 'StudyStep');
model.sol('sol6').feature('st2').set('study', 'std2');
model.sol('sol6').feature('st2').set('studystep', 'stat2');
model.sol('sol6').create('v2', 'Variables');
model.sol('sol6').feature('v2').set('initmethod', 'sol');
model.sol('sol6').feature('v2').set('initsol', 'sol6');
model.sol('sol6').feature('v2').set('notsolmethod', 'sol');
model.sol('sol6').feature('v2').set('notsol', 'sol6');
model.sol('sol6').feature('v2').set('control', 'stat2');
model.sol('sol6').create('s2', 'Stationary');
model.sol('sol6').feature('s2').create('fc1', 'FullyCoupled');
model.sol('sol6').feature('s2').create('i1', 'Iterative');
model.sol('sol6').feature('s2').feature('i1').set('linsolver', 'cg');
model.sol('sol6').feature('s2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol6').feature('s2').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol6').feature('s2').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol6').feature('s2').feature('fc1').set('linsolver', 'i1');
model.sol('sol6').feature('s2').feature.remove('fcDef');
model.sol('sol6').create('su2', 'StoreSolution');
model.sol('sol6').create('st3', 'StudyStep');
model.sol('sol6').feature('st3').set('study', 'std2');
model.sol('sol6').feature('st3').set('studystep', 'stat3');
model.sol('sol6').create('v3', 'Variables');
model.sol('sol6').feature('v3').set('initmethod', 'sol');
model.sol('sol6').feature('v3').set('initsol', 'sol6');
model.sol('sol6').feature('v3').set('notsolmethod', 'sol');
model.sol('sol6').feature('v3').set('notsol', 'sol6');
model.sol('sol6').feature('v3').set('control', 'stat3');
model.sol('sol6').create('s3', 'Stationary');
model.sol('sol6').feature('s3').set('stol', 0.001);
model.sol('sol6').feature('s3').feature('aDef').set('cachepattern', true);
model.sol('sol6').feature('s3').create('fc1', 'FullyCoupled');
model.sol('sol6').feature('s3').feature('fc1').set('dtech', 'auto');
model.sol('sol6').feature('s3').feature('fc1').set('initstep', 0.01);
model.sol('sol6').feature('s3').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol6').feature('s3').feature('fc1').set('maxiter', 50);
model.sol('sol6').feature('s3').create('i1', 'Iterative');
model.sol('sol6').feature('s3').feature('i1').set('linsolver', 'gmres');
model.sol('sol6').feature('s3').feature('i1').set('prefuntype', 'left');
model.sol('sol6').feature('s3').feature('i1').set('itrestart', 50);
model.sol('sol6').feature('s3').feature('i1').set('rhob', 400);
model.sol('sol6').feature('s3').feature('i1').set('maxlinit', 1000);
model.sol('sol6').feature('s3').feature('i1').set('nlinnormuse', 'on');
model.sol('sol6').feature('s3').feature('i1').label('AMG, concentrations (tds)');
model.sol('sol6').feature('s3').feature('i1').create('mg1', 'Multigrid');
model.sol('sol6').feature('s3').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol6').feature('s3').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol6').feature('s3').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol6').feature('s3').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol6').feature('s3').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol6').feature('s3').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol6').feature('s3').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol6').feature('s3').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol6').feature('s3').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol6').feature('s3').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol6').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol6').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol6').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol6').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol6').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol6').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol6').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol6').feature('s3').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol6').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol6').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol6').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol6').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol6').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol6').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol6').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol6').feature('s3').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol6').feature('s3').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol6').feature('s3').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol6').feature('s3').create('d1', 'Direct');
model.sol('sol6').feature('s3').feature('d1').set('linsolver', 'pardiso');
model.sol('sol6').feature('s3').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol6').feature('s3').feature('d1').label('Direct, concentrations (tds)');
model.sol('sol6').feature('s3').feature('fc1').set('linsolver', 'i1');
model.sol('sol6').feature('s3').feature('fc1').set('dtech', 'auto');
model.sol('sol6').feature('s3').feature('fc1').set('initstep', 0.01);
model.sol('sol6').feature('s3').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol6').feature('s3').feature('fc1').set('maxiter', 50);
model.sol('sol6').feature('s3').feature.remove('fcDef');
model.sol('sol6').create('su3', 'StoreSolution');
model.sol('sol6').create('st4', 'StudyStep');
model.sol('sol6').feature('st4').set('study', 'std2');
model.sol('sol6').feature('st4').set('studystep', 'stat4');
model.sol('sol6').create('v4', 'Variables');
model.sol('sol6').feature('v4').set('initmethod', 'sol');
model.sol('sol6').feature('v4').set('initsol', 'sol6');
model.sol('sol6').feature('v4').set('initsoluse', 'sol8');
model.sol('sol6').feature('v4').set('notsolmethod', 'sol');
model.sol('sol6').feature('v4').set('notsol', 'sol6');
model.sol('sol6').feature('v4').set('control', 'stat4');
model.sol('sol6').create('s4', 'Stationary');
model.sol('sol6').feature('s4').create('fc1', 'FullyCoupled');
model.sol('sol6').feature('s4').create('i1', 'Iterative');
model.sol('sol6').feature('s4').feature('i1').set('linsolver', 'cg');
model.sol('sol6').feature('s4').feature('i1').create('mg1', 'Multigrid');
model.sol('sol6').feature('s4').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol6').feature('s4').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol6').feature('s4').feature('fc1').set('linsolver', 'i1');
model.sol('sol6').feature('s4').feature.remove('fcDef');
model.sol('sol6').create('su4', 'StoreSolution');
model.sol('sol6').create('st5', 'StudyStep');
model.sol('sol6').feature('st5').set('study', 'std2');
model.sol('sol6').feature('st5').set('studystep', 'time');
model.sol('sol6').create('v5', 'Variables');
model.sol('sol6').feature('v5').set('initmethod', 'sol');
model.sol('sol6').feature('v5').set('initsol', 'sol6');
model.sol('sol6').feature('v5').set('initsoluse', 'sol9');
model.sol('sol6').feature('v5').set('notsolmethod', 'sol');
model.sol('sol6').feature('v5').set('notsol', 'sol6');
model.sol('sol6').feature('v5').set('notsoluse', 'sol10');
model.sol('sol6').feature('v5').set('control', 'time');
model.sol('sol6').create('t1', 'Time');
model.sol('sol6').feature('t1').set('tlist', 'range(0,0.06,0.6)');
model.sol('sol6').feature('t1').set('plot', 'off');
model.sol('sol6').feature('t1').set('plotgroup', 'pg1');
model.sol('sol6').feature('t1').set('plotfreq', 'tout');
model.sol('sol6').feature('t1').set('probesel', 'all');
model.sol('sol6').feature('t1').set('probes', {});
model.sol('sol6').feature('t1').set('probefreq', 'tsteps');
model.sol('sol6').feature('t1').set('rtol', 0.005);
model.sol('sol6').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol6').feature('t1').set('reacf', true);
model.sol('sol6').feature('t1').set('storeudot', true);
model.sol('sol6').feature('t1').set('endtimeinterpolation', true);
model.sol('sol6').feature('t1').set('maxorder', 2);
model.sol('sol6').feature('t1').set('stabcntrl', true);
model.sol('sol6').feature('t1').set('control', 'time');
model.sol('sol6').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol6').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol6').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol6').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol6').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol6').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol6').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol6').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol6').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol6').feature('t1').create('i1', 'Iterative');
model.sol('sol6').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol6').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol6').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol6').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol6').feature('t1').feature('i1').set('maxlinit', 50);
model.sol('sol6').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol6').feature('t1').feature('i1').label('AMG, concentrations (tds)');
model.sol('sol6').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol6').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol6').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol6').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol6').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol6').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol6').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol6').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol6').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol6').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol6').feature('t1').create('d1', 'Direct');
model.sol('sol6').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol6').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol6').feature('t1').feature('d1').label('Direct, concentrations (tds)');
model.sol('sol6').feature('t1').feature('fc1').set('linsolver', 'i1');
model.sol('sol6').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol6').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol6').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol6').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol6').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol6').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol6').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol6').feature('t1').feature.remove('fcDef');
model.sol('sol6').feature('v4').set('notsolnum', 'auto');
model.sol('sol6').feature('v4').set('notsolvertype', 'solnum');
model.sol('sol6').feature('v3').set('notsolnum', 'auto');
model.sol('sol6').feature('v3').set('notsolvertype', 'solnum');
model.sol('sol6').feature('v3').set('solnum', 'auto');
model.sol('sol6').feature('v3').set('solvertype', 'solnum');
model.sol('sol6').feature('v2').set('notsolnum', 'auto');
model.sol('sol6').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol6').feature('v2').set('solnum', 'auto');
model.sol('sol6').feature('v2').set('solvertype', 'solnum');
model.sol('sol6').attach('std2');
model.sol('sol6').runAll;

model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').label('Electric Potential (ec) 1');
model.result('pg8').set('data', 'dset6');
model.result('pg8').setIndex('looplevel', 11, 0);
model.result('pg8').set('frametype', 'spatial');
model.result('pg8').set('showlegendsmaxmin', true);
model.result('pg8').set('data', 'dset6');
model.result('pg8').setIndex('looplevel', 11, 0);
model.result('pg8').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom2/pdef1/pcond2/pcond1/pcond2/pg1');
model.result('pg8').feature.create('vol1', 'Volume');
model.result('pg8').feature('vol1').set('showsolutionparams', 'on');
model.result('pg8').feature('vol1').set('solutionparams', 'parent');
model.result('pg8').feature('vol1').set('colortable', 'Dipole');
model.result('pg8').feature('vol1').set('showsolutionparams', 'on');
model.result('pg8').feature('vol1').set('data', 'parent');
model.result.create('pg9', 'PlotGroup3D');
model.result('pg9').label('Electric Field Norm (ec) 1');
model.result('pg9').set('data', 'dset6');
model.result('pg9').setIndex('looplevel', 11, 0);
model.result('pg9').set('frametype', 'spatial');
model.result('pg9').set('showlegendsmaxmin', true);
model.result('pg9').set('data', 'dset6');
model.result('pg9').setIndex('looplevel', 11, 0);
model.result('pg9').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom3/pdef1/pcond2/pcond1/pg1');
model.result('pg9').feature.create('mslc1', 'Multislice');
model.result('pg9').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg9').feature('mslc1').set('solutionparams', 'parent');
model.result('pg9').feature('mslc1').set('expr', 'ec.normE');
model.result('pg9').feature('mslc1').set('multiplanexmethod', 'coord');
model.result('pg9').feature('mslc1').set('xcoord', 'ec.CPx');
model.result('pg9').feature('mslc1').set('multiplaneymethod', 'coord');
model.result('pg9').feature('mslc1').set('ycoord', 'ec.CPy');
model.result('pg9').feature('mslc1').set('multiplanezmethod', 'coord');
model.result('pg9').feature('mslc1').set('zcoord', 'ec.CPz');
model.result('pg9').feature('mslc1').set('colortable', 'Prism');
model.result('pg9').feature('mslc1').set('colortabletrans', 'nonlinear');
model.result('pg9').feature('mslc1').set('colorcalibration', -0.8);
model.result('pg9').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg9').feature('mslc1').set('data', 'parent');
model.result('pg9').feature.create('strmsl1', 'StreamlineMultislice');
model.result('pg9').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg9').feature('strmsl1').set('solutionparams', 'parent');
model.result('pg9').feature('strmsl1').set('expr', {'ec.Ex' 'ec.Ey' 'ec.Ez'});
model.result('pg9').feature('strmsl1').set('multiplanexmethod', 'coord');
model.result('pg9').feature('strmsl1').set('xcoord', 'ec.CPx');
model.result('pg9').feature('strmsl1').set('multiplaneymethod', 'coord');
model.result('pg9').feature('strmsl1').set('ycoord', 'ec.CPy');
model.result('pg9').feature('strmsl1').set('multiplanezmethod', 'coord');
model.result('pg9').feature('strmsl1').set('zcoord', 'ec.CPz');
model.result('pg9').feature('strmsl1').set('titletype', 'none');
model.result('pg9').feature('strmsl1').set('posmethod', 'uniform');
model.result('pg9').feature('strmsl1').set('udist', 0.02);
model.result('pg9').feature('strmsl1').set('maxlen', 0.4);
model.result('pg9').feature('strmsl1').set('maxtime', Inf);
model.result('pg9').feature('strmsl1').set('inheritcolor', false);
model.result('pg9').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg9').feature('strmsl1').set('maxtime', Inf);
model.result('pg9').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg9').feature('strmsl1').set('maxtime', Inf);
model.result('pg9').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg9').feature('strmsl1').set('maxtime', Inf);
model.result('pg9').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg9').feature('strmsl1').set('maxtime', Inf);
model.result('pg9').feature('strmsl1').set('data', 'parent');
model.result('pg9').feature('strmsl1').set('inheritplot', 'mslc1');
model.result('pg9').feature('strmsl1').feature.create('col1', 'Color');
model.result('pg9').feature('strmsl1').feature('col1').set('expr', 'ec.normE');
model.result('pg9').feature('strmsl1').feature('col1').set('colortable', 'PrismDark');
model.result('pg9').feature('strmsl1').feature('col1').set('colorlegend', false);
model.result('pg9').feature('strmsl1').feature('col1').set('colortabletrans', 'nonlinear');
model.result('pg9').feature('strmsl1').feature('col1').set('colorcalibration', -0.8);
model.result('pg9').feature('strmsl1').feature.create('filt1', 'Filter');
model.result('pg9').feature('strmsl1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result.create('pg10', 'PlotGroup3D');
model.result('pg10').set('data', 'dset6');
model.result('pg10').setIndex('looplevel', 11, 0);
model.result('pg10').label('Concentration, Streamline (tds) 1');
model.result('pg10').set('titletype', 'custom');
model.result('pg10').set('typeintitle', true);
model.result('pg10').set('prefixintitle', '');
model.result('pg10').create('str1', 'Streamline');
model.result('pg10').feature('str1').set('expr', {'tds.tflux_cx' 'tds.tflux_cy' 'tds.tflux_cz'});
model.result('pg10').feature('str1').set('posmethod', 'start');
model.result('pg10').feature('str1').set('pointtype', 'arrow');
model.result('pg10').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg10').feature('str1').set('color', 'gray');
model.result('pg10').feature('str1').create('col', 'Color');
model.result('pg10').feature('str1').feature('col').set('expr', 'c');
model.result('pg10').feature('str1').feature('col').set('titletype', 'custom');
model.result.create('pg11', 'PlotGroup3D');
model.result('pg11').set('data', 'dset6');
model.result('pg11').setIndex('looplevel', 11, 0);
model.result('pg11').label('Concentration, Surface (tds)');
model.result('pg11').set('titletype', 'custom');
model.result('pg11').set('prefixintitle', '');
model.result('pg11').set('expressionintitle', false);
model.result('pg11').set('typeintitle', false);
model.result('pg11').create('surf1', 'Surface');
model.result('pg11').feature('surf1').set('expr', {'c'});
model.result.dataset('dset6').set('geom', 'geom1');
model.result.create('pg12', 'PlotGroup3D');
model.result('pg12').label('Velocity (spf) 1');
model.result('pg12').set('data', 'dset6');
model.result('pg12').setIndex('looplevel', 11, 0);
model.result('pg12').set('frametype', 'spatial');
model.result('pg12').set('data', 'dset6');
model.result('pg12').setIndex('looplevel', 11, 0);
model.result('pg12').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pg1');
model.result('pg12').feature.create('slc1', 'Slice');
model.result('pg12').feature('slc1').label('Slice');
model.result('pg12').feature('slc1').set('showsolutionparams', 'on');
model.result('pg12').feature('slc1').set('expr', 'spf.U');
model.result('pg12').feature('slc1').set('smooth', 'internal');
model.result('pg12').feature('slc1').set('showsolutionparams', 'on');
model.result('pg12').feature('slc1').set('data', 'parent');
model.result.dataset.create('surf2', 'Surface');
model.result.dataset('surf2').label('Exterior Walls 1');
model.result.dataset('surf2').set('data', 'dset6');
model.result.dataset('surf2').selection.geom('geom1', 2);
model.result.dataset('surf2').selection.set([2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 21 22 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49]);
model.result.create('pg13', 'PlotGroup3D');
model.result('pg13').label('Pressure (spf) 1');
model.result('pg13').set('data', 'surf2');
model.result('pg13').setIndex('looplevel', 11, 0);
model.result('pg13').set('frametype', 'spatial');
model.result('pg13').set('data', 'surf2');
model.result('pg13').setIndex('looplevel', 11, 0);
model.result('pg13').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pcond2/pcond1/pg4');
model.result('pg13').feature.create('surf1', 'Surface');
model.result('pg13').feature('surf1').label('Surface');
model.result('pg13').feature('surf1').set('showsolutionparams', 'on');
model.result('pg13').feature('surf1').set('expr', 'p');
model.result('pg13').feature('surf1').set('colortable', 'Dipole');
model.result('pg13').feature('surf1').set('smooth', 'internal');
model.result('pg13').feature('surf1').set('showsolutionparams', 'on');
model.result('pg13').feature('surf1').set('data', 'parent');
model.result('pg13').feature('surf1').feature.create('tran1', 'Transparency');
model.result('pg8').run;
model.result('pg11').run;
model.result('pg11').label('Concentration - Mode B');
model.result('pg11').setIndex('looplevel', 2, 0);
model.result('pg11').set('titletype', 'none');
model.result('pg11').set('showlegendsunit', true);

model.view('view1').set('showgrid', false);
model.view('view1').set('showaxisorientation', false);

model.result('pg11').run;
model.result('pg11').setIndex('looplevel', 3, 0);
model.result('pg11').run;
model.result.dataset.create('cln2', 'CutLine3D');
model.result.dataset('cln2').set('data', 'dset6');
model.result.dataset('cln2').setIndex('genpoints', 10, 0, 0);
model.result.dataset('cln2').setIndex('genpoints', 10, 0, 1);
model.result.dataset('cln2').setIndex('genpoints', 20, 0, 2);
model.result.dataset('cln2').setIndex('genpoints', 10, 1, 0);
model.result.dataset('cln2').setIndex('genpoints', 10, 1, 1);
model.result.dataset('cln2').setIndex('genpoints', -200, 1, 2);
model.result.create('pg14', 'PlotGroup1D');
model.result('pg14').run;
model.result('pg14').label('Concentration Line Plot - Mode B');
model.result('pg14').set('data', 'cln2');
model.result('pg14').set('titletype', 'none');
model.result('pg14').set('legendlayout', 'outside');
model.result('pg14').create('lngr1', 'LineGraph');
model.result('pg14').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg14').feature('lngr1').set('linewidth', 'preference');
model.result('pg14').feature('lngr1').set('expr', 'c');
model.result('pg14').feature('lngr1').set('descr', 'Concentration');
model.result('pg14').feature('lngr1').set('xdata', 'expr');
model.result('pg14').feature('lngr1').set('xdataexpr', '10[um]-z');
model.result('pg14').feature('lngr1').set('colorcycle', 'long');
model.result('pg14').feature('lngr1').set('legend', true);
model.result('pg14').run;
model.result('pg1').run;
model.result.remove('pg1');
model.result('pg2').run;
model.result.remove('pg2');
model.result('pg3').run;
model.result.remove('pg3');
model.result('pg4').run;
model.result('pg5').run;
model.result.remove('pg5');
model.result('pg6').run;
model.result.remove('pg6');
model.result('pg7').run;
model.result('pg8').run;
model.result.remove('pg8');
model.result('pg9').run;
model.result.remove('pg9');
model.result('pg10').run;
model.result.remove('pg10');
model.result('pg11').run;
model.result('pg12').run;
model.result.remove('pg12');
model.result('pg13').run;
model.result.remove('pg13');
model.result('pg14').run;
model.result('pg4').run;

model.title('Transport in an Electrokinetic Valve');

model.description('This is an example of pressure-driven flow and electrophoresis in a microchannel system. Focusing is obtained through pressure-driven flow of the sample and buffer solution, which confines the sample in the focusing channel. When steady state has been obtained, the pressure driven flow is turned off and an electric field is applied, which drives the dissociated sample ions through the injection channel.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;
model.sol('sol8').clearSolutionData;
model.sol('sol9').clearSolutionData;
model.sol('sol10').clearSolutionData;

model.label('electrokinetic_valve.mph');

model.modelNode.label('Components');

out = model;
