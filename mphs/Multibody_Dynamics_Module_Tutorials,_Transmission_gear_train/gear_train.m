function out = model
%
% gear_train.m
%
% Model exported on May 26 2025, 21:31 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Multibody_Dynamics_Module/Tutorials,_Transmission');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('mbd', 'MultibodyDynamics', 'geom1');
model.physics('mbd').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/mbd', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('n_pn', '20', 'Number of teeth, pinion');
model.param.set('dp_pn', '50[mm]', 'Pitch diameter, pinion');
model.param.set('n_wh', '30', 'Number of teeth, wheel');
model.param.set('dp_wh', '75[mm]', 'Pitch diameter, wheel');
model.param.set('alpha', '25[deg]', 'Pressure angle');
model.param.set('wg', '10[mm]', 'Gear width');
model.param.set('gr', 'n_wh/n_pn', 'Gear ratio');
model.param.set('theta', '0[deg]', 'Pinion rotation');
model.param.set('twist', '0.5[deg]', 'Wheel twisting');
model.param.set('omega', '600[rad/s]', 'Angular velocity of drive shaft');
model.param.set('T_ext', '100[N*m]', 'External torque');

model.geom.load({'part1'}, 'Multibody_Dynamics_Module/2D/External_Gears/spur_gear_2d.mph', {'part1'});
model.geom('geom1').create('pi1', 'PartInstance');
model.geom('geom1').feature('pi1').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi1').set('part', 'part1');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'n', 'n_pn');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'dp', 'dp_pn');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'alpha', 'alpha');
model.geom('geom1').feature('pi1').set('selkeepnoncontr', true);
model.geom('geom1').run('pi1');
model.geom('geom1').create('pi2', 'PartInstance');
model.geom('geom1').feature('pi2').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi2').set('part', 'part1');
model.geom('geom1').feature('pi2').setEntry('inputexpr', 'n', 'n_wh');
model.geom('geom1').feature('pi2').setEntry('inputexpr', 'dp', 'dp_wh');
model.geom('geom1').feature('pi2').setEntry('inputexpr', 'alpha', 'alpha');
model.geom('geom1').feature('pi2').setEntry('inputexpr', 'xc', '(dp_pn+dp_wh)/2');
model.geom('geom1').feature('pi2').setEntry('inputexpr', 'th', '360/(2*n_wh)[deg]');
model.geom('geom1').feature('pi2').set('selkeepnoncontr', true);
model.geom('geom1').feature('fin').set('action', 'assembly');
model.geom('geom1').feature('fin').set('createpairs', false);

model.pair.create('p1', 'Contact', 'geom1');

model.geom('geom1').run;

model.pair('p1').source.named('geom1_pi1_sel3');
model.pair('p1').destination.named('geom1_pi2_sel3');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat1').propertyGroup('Enu').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup('Enu').func.create('int2', 'Interpolation');
model.material('mat1').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat1').propertyGroup.create('ElastoplasticModel', 'Elastoplastic material model');
model.material('mat1').propertyGroup('ElastoplasticModel').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('Ludwik', 'Ludwik');
model.material('mat1').propertyGroup('Ludwik').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('JohnsonCook', 'Johnson-Cook');
model.material('mat1').propertyGroup.create('Swift', 'Swift');
model.material('mat1').propertyGroup.create('Voce', 'Voce');
model.material('mat1').propertyGroup('Voce').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('HockettSherby', 'Hockett-Sherby');
model.material('mat1').propertyGroup('HockettSherby').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('ArmstrongFrederick', 'Armstrong-Frederick');
model.material('mat1').propertyGroup('ArmstrongFrederick').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('Norton', 'Norton');
model.material('mat1').propertyGroup.create('Garofalo', 'Garofalo (hyperbolic sine)');
model.material('mat1').propertyGroup.create('ChabocheViscoplasticity', 'Chaboche viscoplasticity');
model.material('mat1').label('Structural steel');
model.material('mat1').set('family', 'custom');
model.material('mat1').set('customspecular', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat1').set('customdiffuse', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat1').set('customambient', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat1').set('noise', true);
model.material('mat1').set('fresnel', 0.9);
model.material('mat1').set('roughness', 0.3);
model.material('mat1').set('metallic', 0);
model.material('mat1').set('pearl', 0);
model.material('mat1').set('diffusewrap', 0);
model.material('mat1').set('clearcoat', 0);
model.material('mat1').set('reflectance', 0);
model.material('mat1').propertyGroup('def').set('lossfactor', '0.02');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('heatcapacity', '475[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]'});
model.material('mat1').propertyGroup('def').set('density', '7850[kg/m^3]');
model.material('mat1').propertyGroup('Enu').func('int1').set('funcname', 'E');
model.material('mat1').propertyGroup('Enu').func('int1').set('table', {'293.15' '200e9'; '793.15' '166.6e9'});
model.material('mat1').propertyGroup('Enu').func('int1').set('extrap', 'linear');
model.material('mat1').propertyGroup('Enu').func('int1').set('fununit', {'Pa'});
model.material('mat1').propertyGroup('Enu').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Enu').func('int2').set('funcname', 'nu');
model.material('mat1').propertyGroup('Enu').func('int2').set('table', {'293.15' '0.30'; '793.15' '0.315'});
model.material('mat1').propertyGroup('Enu').func('int2').set('extrap', 'linear');
model.material('mat1').propertyGroup('Enu').func('int2').set('fununit', {'1'});
model.material('mat1').propertyGroup('Enu').func('int2').set('argunit', {'K'});
model.material('mat1').propertyGroup('Enu').set('E', 'E(T)');
model.material('mat1').propertyGroup('Enu').set('nu', 'nu(T)');
model.material('mat1').propertyGroup('Enu').addInput('temperature');
model.material('mat1').propertyGroup('Murnaghan').set('l', '-3.0e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('m', '-6.2e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('n', '-7.2e11[Pa]');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmags', '350[MPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('Et', '1.045[GPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('Ek', '1.045[GPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmagh', '1.050[GPa]*epe*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').addInput('temperature');
model.material('mat1').propertyGroup('ElastoplasticModel').addInput('effectiveplasticstrain');
model.material('mat1').propertyGroup('Ludwik').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('Ludwik').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('Ludwik').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('Ludwik').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Ludwik').set('k_lud', '560[MPa]*a(T)');
model.material('mat1').propertyGroup('Ludwik').set('n_lud', '0.61');
model.material('mat1').propertyGroup('Ludwik').addInput('temperature');
model.material('mat1').propertyGroup('JohnsonCook').set('k_jcook', '560[MPa]');
model.material('mat1').propertyGroup('JohnsonCook').set('n_jcook', '0.61');
model.material('mat1').propertyGroup('JohnsonCook').set('C_jcook', '0.12');
model.material('mat1').propertyGroup('JohnsonCook').set('epet0_jcook', '1[1/s]');
model.material('mat1').propertyGroup('JohnsonCook').set('m_jcook', '0.6');
model.material('mat1').propertyGroup('Swift').set('e0_swi', '0.021');
model.material('mat1').propertyGroup('Swift').set('n_swi', '0.2');
model.material('mat1').propertyGroup('Voce').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('Voce').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('Voce').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('Voce').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Voce').set('sigma_voc', '249[MPa]*a(T)');
model.material('mat1').propertyGroup('Voce').set('beta_voc', '9.3');
model.material('mat1').propertyGroup('Voce').addInput('temperature');
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('HockettSherby').set('sigma_hoc', '684[MPa]*a(T)');
model.material('mat1').propertyGroup('HockettSherby').set('m_hoc', '3.9');
model.material('mat1').propertyGroup('HockettSherby').set('n_hoc', '0.85');
model.material('mat1').propertyGroup('HockettSherby').addInput('temperature');
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('ArmstrongFrederick').set('Ck', '2.070[GPa]*a(T)');
model.material('mat1').propertyGroup('ArmstrongFrederick').set('gammak', '8.0');
model.material('mat1').propertyGroup('ArmstrongFrederick').addInput('temperature');
model.material('mat1').propertyGroup('Norton').set('A_nor', '1.2e-15[1/s]');
model.material('mat1').propertyGroup('Norton').set('sigRef_nor', '1[MPa]');
model.material('mat1').propertyGroup('Norton').set('n_nor', '4.5');
model.material('mat1').propertyGroup('Garofalo').set('A_gar', '1e-6[1/s]');
model.material('mat1').propertyGroup('Garofalo').set('sigRef_gar', '100[MPa]');
model.material('mat1').propertyGroup('Garofalo').set('n_gar', '4.6');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('A_cha', '1');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('sigRef_cha', '490[MPa]');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('n_cha', '9');

model.physics('mbd').prop('d').set('d', 'wg');
model.physics('mbd').create('cnt1', 'SolidContact', 1);
model.physics('mbd').feature('cnt1').set('pairs', {'p1'});
model.physics('mbd').feature('cnt1').set('ContactMethodCtrl', 'Nitsche');
model.physics('mbd').create('att1', 'Attachment', 1);
model.physics('mbd').feature('att1').selection.set([52 53 64 65]);
model.physics('mbd').create('hgj1', 'HingeJoint', -1);
model.physics('mbd').feature('hgj1').set('Source', 'fixed');
model.physics('mbd').feature('hgj1').set('Destination', 'att1');
model.physics('mbd').feature('hgj1').create('pm1', 'PrescribedMotion', -1);
model.physics('mbd').feature('hgj1').feature('pm1').set('thp', 'theta');
model.physics('mbd').create('att2', 'Attachment', 1);
model.physics('mbd').feature('att2').selection.set([246 247 257 262]);
model.physics('mbd').create('hgj2', 'HingeJoint', -1);
model.physics('mbd').feature('hgj2').set('Source', 'fixed');
model.physics('mbd').feature('hgj2').set('Destination', 'att2');
model.physics('mbd').feature('hgj2').create('pm1', 'PrescribedMotion', -1);
model.physics('mbd').feature('hgj2').feature('pm1').set('thp', '-theta/gr+twist');
model.physics('mbd').feature('hgj2').feature('pm1').set('WeakConstraints', true);

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').set('T', 'mbd.hgj2.pm1.RM');
model.variable('var1').descr('T', 'Required twisting moment');
model.variable('var1').set('kt', 'T/twist');
model.variable('var1').descr('kt', 'Torsional stiffness');
model.variable('var1').set('kg', 'kt/(dp_wh/2*cos(alpha))^2');
model.variable('var1').descr('kg', 'Stiffness along the line of action');

model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 'n_pn', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', '', 0);
model.study('std1').feature('stat').setIndex('pname', 'n_pn', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', '', 0);
model.study('std1').feature('stat').setIndex('pname', 'theta', 0);
model.study('std1').feature('stat').setIndex('plistarr', 'range(1,1,40)', 0);
model.study('std1').feature('stat').setIndex('punit', 'deg', 0);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_mbd_hgj2_pm1_RM').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_mbd_att_rot').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_mbd_jnt_rot').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_mbd_att_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_mbd_att_rot').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_mbd_jnt_rot').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_mbd_att_disp').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_mbd_hgj2_pm1_RM').set('scaleval', '1e8*(0.1*0.15147907531488924)^3');
model.sol('sol1').feature('v1').feature('comp1_mbd_att_rot').set('scaleval', '0.1');
model.sol('sol1').feature('v1').feature('comp1_mbd_jnt_rot').set('scaleval', '0.1');
model.sol('sol1').feature('v1').feature('comp1_mbd_att_disp').set('scaleval', '0.0015147907531488924');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.15147907531488924');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol1').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s1').set('control', 'stat');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('jtech', 'onevery');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'const');
model.sol('sol1').feature('s1').feature('fc1').set('damp', 1);
model.sol('sol1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s1').feature('fc1').set('ntermconst', 'tol');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('jtech', 'onevery');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'const');
model.sol('sol1').feature('s1').feature('fc1').set('damp', 1);
model.sol('sol1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s1').feature('fc1').set('ntermconst', 'tol');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 8);
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').label('Displacement (mbd)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 40, 0);
model.result('pg1').set('defaultPlotID', 'displacement');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').label('Surface');
model.result('pg1').feature('surf1').set('colortable', 'SpectrumLight');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result('pg1').feature('surf1').feature.create('def1', 'Deform');
model.result('pg1').feature('surf1').feature('def1').label('Deformation');
model.result('pg1').feature('surf1').feature('def1').set('scaleactive', true);
model.result('pg1').run;
model.result.duplicate('pg2', 'pg1');
model.result('pg2').run;
model.result('pg2').label('Stress');
model.result('pg2').run;
model.result('pg2').feature('surf1').set('expr', 'mbd.mises');
model.result('pg2').feature('surf1').set('colortable', 'Prism');
model.result('pg2').run;
model.result.numerical.create('gev1', 'EvalGlobal');
model.result.numerical('gev1').set('expr', {'kg'});
model.result.numerical('gev1').set('descr', {'Stiffness along the line of action'});
model.result.numerical('gev1').set('unit', {'N/m'});
model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').comments('Global Evaluation 1');
model.result.numerical('gev1').set('table', 'tbl1');
model.result.numerical('gev1').setResult;
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('Gear Mesh Stiffness');
model.result('pg3').set('titletype', 'label');
model.result('pg3').create('glob1', 'Global');
model.result('pg3').feature('glob1').set('markerpos', 'datapoints');
model.result('pg3').feature('glob1').set('linewidth', 'preference');
model.result('pg3').feature('glob1').set('expr', {'kg'});
model.result('pg3').feature('glob1').set('descr', {'Stiffness along the line of action'});
model.result('pg3').feature('glob1').set('unit', {'N/m'});
model.result('pg3').feature('glob1').set('xdata', 'expr');
model.result('pg3').feature('glob1').set('xdataexpr', 'theta');
model.result('pg3').feature('glob1').set('xdataunit', [native2unicode(hex2dec({'00' 'b0'}), 'unicode') ]);
model.result('pg3').feature('glob1').set('linewidth', 2);
model.result('pg3').feature('glob1').set('legend', false);
model.result('pg3').run;
model.result.export.create('anim1', 'Animation');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('fontsize', '9');
model.result.export('anim1').set('colortheme', 'globaltheme');
model.result.export('anim1').set('customcolor', [1 1 1]);
model.result.export('anim1').set('background', 'color');
model.result.export('anim1').set('gltfincludelines', 'on');
model.result.export('anim1').set('title1d', 'on');
model.result.export('anim1').set('legend1d', 'on');
model.result.export('anim1').set('logo1d', 'on');
model.result.export('anim1').set('options1d', 'on');
model.result.export('anim1').set('title2d', 'on');
model.result.export('anim1').set('legend2d', 'on');
model.result.export('anim1').set('logo2d', 'on');
model.result.export('anim1').set('options2d', 'off');
model.result.export('anim1').set('title3d', 'on');
model.result.export('anim1').set('legend3d', 'on');
model.result.export('anim1').set('logo3d', 'on');
model.result.export('anim1').set('options3d', 'off');
model.result.export('anim1').set('axisorientation', 'on');
model.result.export('anim1').set('grid', 'on');
model.result.export('anim1').set('axes1d', 'on');
model.result.export('anim1').set('axes2d', 'on');
model.result.export('anim1').set('showgrid', 'on');
model.result.export('anim1').showFrame;
model.result.export('anim1').set('plotgroup', 'pg2');
model.result.export('anim1').set('maxframes', 40);

model.modelNode.create('comp2', true);

model.geom.create('geom2', 3);
model.geom('geom2').model('comp2');

model.mesh.create('mesh2', 'geom2');

model.geom('geom2').create('imp1', 'Import');
model.geom('geom2').feature('imp1').set('filename', 'gear_train.mphbin');
model.geom('geom2').feature('imp1').importData;
model.geom('geom2').feature('fin').set('action', 'assembly');
model.geom('geom2').feature('fin').set('createpairs', false);
model.geom('geom2').run('fin');

model.physics.create('mbd2', 'MultibodyDynamics', 'geom2');
model.physics('mbd2').model('comp2');

model.study('std1').feature('stat').setSolveFor('/physics/mbd2', false);

model.view('view4').set('renderwireframe', true);

model.func.create('int1', 'Interpolation');
model.func('int1').model('comp2');
model.func('int1').set('source', 'resultTable');
model.func('int1').setIndex('funcs', 'gearStiffness', 0, 0);
model.func.create('step1', 'Step');
model.func('step1').model('comp2');
model.func('step1').set('location', '0.5[ms]');
model.func('step1').set('smooth', '1e-3');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp2');
model.selection('sel1').geom(2);
model.selection('sel1').set([71 72 75 76]);
model.selection('sel1').set('groupcontang', true);
model.selection.duplicate('sel2', 'sel1');
model.selection('sel2').remove([71 72 75 76]);
model.selection('sel2').add([69 70 73 74]);
model.selection.duplicate('sel3', 'sel2');
model.selection('sel3').remove([69 70 73 74]);
model.selection('sel3').add([79 80 82 84]);
model.selection.duplicate('sel4', 'sel3');
model.selection('sel4').remove([79 80 82 84]);
model.selection('sel4').add([77 78 81 83]);
model.selection.duplicate('sel5', 'sel4');
model.selection('sel5').remove([77 78 81 83]);
model.selection('sel5').add([87 88 90 92]);
model.selection.duplicate('sel6', 'sel5');
model.selection('sel6').remove([87 88 90 92]);
model.selection('sel6').add([85 86 89 91]);

model.material.create('mat2', 'Common', 'comp2');
model.material('mat2').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat2').propertyGroup('Enu').func.create('int1', 'Interpolation');
model.material('mat2').propertyGroup('Enu').func.create('int2', 'Interpolation');
model.material('mat2').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat2').propertyGroup.create('ElastoplasticModel', 'Elastoplastic material model');
model.material('mat2').propertyGroup('ElastoplasticModel').func.create('int1', 'Interpolation');
model.material('mat2').propertyGroup.create('Ludwik', 'Ludwik');
model.material('mat2').propertyGroup('Ludwik').func.create('int1', 'Interpolation');
model.material('mat2').propertyGroup.create('JohnsonCook', 'Johnson-Cook');
model.material('mat2').propertyGroup.create('Swift', 'Swift');
model.material('mat2').propertyGroup.create('Voce', 'Voce');
model.material('mat2').propertyGroup('Voce').func.create('int1', 'Interpolation');
model.material('mat2').propertyGroup.create('HockettSherby', 'Hockett-Sherby');
model.material('mat2').propertyGroup('HockettSherby').func.create('int1', 'Interpolation');
model.material('mat2').propertyGroup.create('ArmstrongFrederick', 'Armstrong-Frederick');
model.material('mat2').propertyGroup('ArmstrongFrederick').func.create('int1', 'Interpolation');
model.material('mat2').propertyGroup.create('Norton', 'Norton');
model.material('mat2').propertyGroup.create('Garofalo', 'Garofalo (hyperbolic sine)');
model.material('mat2').propertyGroup.create('ChabocheViscoplasticity', 'Chaboche viscoplasticity');
model.material('mat2').label('Structural steel');
model.material('mat2').set('family', 'custom');
model.material('mat2').set('customspecular', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat2').set('customdiffuse', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat2').set('customambient', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat2').set('noise', true);
model.material('mat2').set('fresnel', 0.9);
model.material('mat2').set('roughness', 0.3);
model.material('mat2').set('metallic', 0);
model.material('mat2').set('pearl', 0);
model.material('mat2').set('diffusewrap', 0);
model.material('mat2').set('clearcoat', 0);
model.material('mat2').set('reflectance', 0);
model.material('mat2').propertyGroup('def').set('lossfactor', '0.02');
model.material('mat2').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('heatcapacity', '475[J/(kg*K)]');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]'});
model.material('mat2').propertyGroup('def').set('electricconductivity', {'4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]'});
model.material('mat2').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]'});
model.material('mat2').propertyGroup('def').set('density', '7850[kg/m^3]');
model.material('mat2').propertyGroup('Enu').func('int1').set('funcname', 'E');
model.material('mat2').propertyGroup('Enu').func('int1').set('table', {'293.15' '200e9'; '793.15' '166.6e9'});
model.material('mat2').propertyGroup('Enu').func('int1').set('extrap', 'linear');
model.material('mat2').propertyGroup('Enu').func('int1').set('fununit', {'Pa'});
model.material('mat2').propertyGroup('Enu').func('int1').set('argunit', {'K'});
model.material('mat2').propertyGroup('Enu').func('int2').set('funcname', 'nu');
model.material('mat2').propertyGroup('Enu').func('int2').set('table', {'293.15' '0.30'; '793.15' '0.315'});
model.material('mat2').propertyGroup('Enu').func('int2').set('extrap', 'linear');
model.material('mat2').propertyGroup('Enu').func('int2').set('fununit', {'1'});
model.material('mat2').propertyGroup('Enu').func('int2').set('argunit', {'K'});
model.material('mat2').propertyGroup('Enu').set('E', 'E(T)');
model.material('mat2').propertyGroup('Enu').set('nu', 'nu(T)');
model.material('mat2').propertyGroup('Enu').addInput('temperature');
model.material('mat2').propertyGroup('Murnaghan').set('l', '-3.0e11[Pa]');
model.material('mat2').propertyGroup('Murnaghan').set('m', '-6.2e11[Pa]');
model.material('mat2').propertyGroup('Murnaghan').set('n', '-7.2e11[Pa]');
model.material('mat2').propertyGroup('ElastoplasticModel').func('int1').set('funcname', 'a');
model.material('mat2').propertyGroup('ElastoplasticModel').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat2').propertyGroup('ElastoplasticModel').func('int1').set('fununit', {'1'});
model.material('mat2').propertyGroup('ElastoplasticModel').func('int1').set('argunit', {'K'});
model.material('mat2').propertyGroup('ElastoplasticModel').set('sigmags', '350[MPa]*a(T)');
model.material('mat2').propertyGroup('ElastoplasticModel').set('Et', '1.045[GPa]*a(T)');
model.material('mat2').propertyGroup('ElastoplasticModel').set('Ek', '1.045[GPa]*a(T)');
model.material('mat2').propertyGroup('ElastoplasticModel').set('sigmagh', '1.050[GPa]*epe*a(T)');
model.material('mat2').propertyGroup('ElastoplasticModel').addInput('temperature');
model.material('mat2').propertyGroup('ElastoplasticModel').addInput('effectiveplasticstrain');
model.material('mat2').propertyGroup('Ludwik').func('int1').set('funcname', 'a');
model.material('mat2').propertyGroup('Ludwik').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat2').propertyGroup('Ludwik').func('int1').set('fununit', {'1'});
model.material('mat2').propertyGroup('Ludwik').func('int1').set('argunit', {'K'});
model.material('mat2').propertyGroup('Ludwik').set('k_lud', '560[MPa]*a(T)');
model.material('mat2').propertyGroup('Ludwik').set('n_lud', '0.61');
model.material('mat2').propertyGroup('Ludwik').addInput('temperature');
model.material('mat2').propertyGroup('JohnsonCook').set('k_jcook', '560[MPa]');
model.material('mat2').propertyGroup('JohnsonCook').set('n_jcook', '0.61');
model.material('mat2').propertyGroup('JohnsonCook').set('C_jcook', '0.12');
model.material('mat2').propertyGroup('JohnsonCook').set('epet0_jcook', '1[1/s]');
model.material('mat2').propertyGroup('JohnsonCook').set('m_jcook', '0.6');
model.material('mat2').propertyGroup('Swift').set('e0_swi', '0.021');
model.material('mat2').propertyGroup('Swift').set('n_swi', '0.2');
model.material('mat2').propertyGroup('Voce').func('int1').set('funcname', 'a');
model.material('mat2').propertyGroup('Voce').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat2').propertyGroup('Voce').func('int1').set('fununit', {'1'});
model.material('mat2').propertyGroup('Voce').func('int1').set('argunit', {'K'});
model.material('mat2').propertyGroup('Voce').set('sigma_voc', '249[MPa]*a(T)');
model.material('mat2').propertyGroup('Voce').set('beta_voc', '9.3');
model.material('mat2').propertyGroup('Voce').addInput('temperature');
model.material('mat2').propertyGroup('HockettSherby').func('int1').set('funcname', 'a');
model.material('mat2').propertyGroup('HockettSherby').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat2').propertyGroup('HockettSherby').func('int1').set('fununit', {'1'});
model.material('mat2').propertyGroup('HockettSherby').func('int1').set('argunit', {'K'});
model.material('mat2').propertyGroup('HockettSherby').set('sigma_hoc', '684[MPa]*a(T)');
model.material('mat2').propertyGroup('HockettSherby').set('m_hoc', '3.9');
model.material('mat2').propertyGroup('HockettSherby').set('n_hoc', '0.85');
model.material('mat2').propertyGroup('HockettSherby').addInput('temperature');
model.material('mat2').propertyGroup('ArmstrongFrederick').func('int1').set('funcname', 'a');
model.material('mat2').propertyGroup('ArmstrongFrederick').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat2').propertyGroup('ArmstrongFrederick').func('int1').set('fununit', {'1'});
model.material('mat2').propertyGroup('ArmstrongFrederick').func('int1').set('argunit', {'K'});
model.material('mat2').propertyGroup('ArmstrongFrederick').set('Ck', '2.070[GPa]*a(T)');
model.material('mat2').propertyGroup('ArmstrongFrederick').set('gammak', '8.0');
model.material('mat2').propertyGroup('ArmstrongFrederick').addInput('temperature');
model.material('mat2').propertyGroup('Norton').set('A_nor', '1.2e-15[1/s]');
model.material('mat2').propertyGroup('Norton').set('sigRef_nor', '1[MPa]');
model.material('mat2').propertyGroup('Norton').set('n_nor', '4.5');
model.material('mat2').propertyGroup('Garofalo').set('A_gar', '1e-6[1/s]');
model.material('mat2').propertyGroup('Garofalo').set('sigRef_gar', '100[MPa]');
model.material('mat2').propertyGroup('Garofalo').set('n_gar', '4.6');
model.material('mat2').propertyGroup('ChabocheViscoplasticity').set('A_cha', '1');
model.material('mat2').propertyGroup('ChabocheViscoplasticity').set('sigRef_cha', '490[MPa]');
model.material('mat2').propertyGroup('ChabocheViscoplasticity').set('n_cha', '9');

model.physics('mbd2').create('spg1', 'SpurGear', 3);
model.physics('mbd2').feature('spg1').selection.set([27 28]);
model.physics('mbd2').feature('spg1').set('nt', 'n_pn');
model.physics('mbd2').feature('spg1').set('dp', 'dp_pn');
model.physics('mbd2').feature('spg1').set('alpha', 'alpha');
model.physics('mbd2').feature('spg1').set('eg', [0 1 0]);
model.physics('mbd2').feature('spg1').set('InitialValueType', 'locallyDefined');
model.physics('mbd2').feature('spg1').feature('init1').set('omega', {'0' 'omega' '0'});
model.physics('mbd2').create('spg2', 'SpurGear', 3);
model.physics('mbd2').feature('spg2').selection.set([29 30]);
model.physics('mbd2').feature('spg2').set('nt', 'n_wh');
model.physics('mbd2').feature('spg2').set('dp', 'dp_wh');
model.physics('mbd2').feature('spg2').set('alpha', 'alpha');
model.physics('mbd2').feature('spg2').set('eg', [0 1 0]);
model.physics('mbd2').feature('spg2').set('InitialValueType', 'locallyDefined');
model.physics('mbd2').feature('spg2').feature('init1').set('omega', {'0' '-omega/gr' '0'});
model.physics('mbd2').create('spg3', 'SpurGear', 3);
model.physics('mbd2').feature('spg3').selection.set([31]);
model.physics('mbd2').feature('spg3').set('nt', 'n_pn');
model.physics('mbd2').feature('spg3').set('dp', 'dp_pn');
model.physics('mbd2').feature('spg3').set('alpha', 'alpha');
model.physics('mbd2').feature('spg3').set('eg', [0 1 0]);
model.physics('mbd2').feature('spg3').set('InitialValueType', 'locallyDefined');
model.physics('mbd2').feature('spg3').feature('init1').set('omega', {'0' '-omega/gr' '0'});
model.physics('mbd2').create('spg4', 'SpurGear', 3);
model.physics('mbd2').feature('spg4').selection.set([32 33]);
model.physics('mbd2').feature('spg4').set('nt', 'n_wh');
model.physics('mbd2').feature('spg4').set('dp', 'dp_wh');
model.physics('mbd2').feature('spg4').set('alpha', 'alpha');
model.physics('mbd2').feature('spg4').set('eg', [0 1 0]);
model.physics('mbd2').feature('spg4').set('InitialValueType', 'locallyDefined');
model.physics('mbd2').feature('spg4').feature('init1').set('omega', {'0' 'omega/gr^2' '0'});
model.physics('mbd2').create('grp1', 'GearPair', -1);
model.physics('mbd2').feature('grp1').set('Wheel', 'spg1');
model.physics('mbd2').feature('grp1').set('Pinion', 'spg2');
model.physics('mbd2').feature('grp1').set('IncludeGearElasticity', true);
model.physics('mbd2').feature('grp1').set('ContactForceComputation', 'WeakConstraints');
model.physics('mbd2').feature('grp1').feature('gel1').set('Specify', 'GearPair');
model.physics('mbd2').feature('grp1').feature('gel1').set('km_dr', 'gearStiffness(mbd2.grp1.thm_wh*180/pi)');
model.physics('mbd2').create('grp2', 'GearPair', -1);
model.physics('mbd2').feature('grp2').set('Wheel', 'spg3');
model.physics('mbd2').feature('grp2').set('Pinion', 'spg4');
model.physics('mbd2').feature('grp2').set('ObtainedThrough', 'CounterclockwiseDirection');
model.physics('mbd2').feature('grp2').set('IncludeGearElasticity', true);
model.physics('mbd2').feature('grp2').set('ContactForceComputation', 'WeakConstraints');
model.physics('mbd2').feature('grp2').feature('gel1').set('Specify', 'GearPair');
model.physics('mbd2').feature('grp2').feature('gel1').set('km_dr', 'gearStiffness(mbd2.grp2.thm_wh*180/pi)');
model.physics('mbd2').create('fxj1', 'FixedJoint', -1);
model.physics('mbd2').feature('fxj1').set('Source', 'spg2');
model.physics('mbd2').feature('fxj1').set('Destination', 'spg3');
model.physics('mbd2').create('att1', 'Attachment', 2);
model.physics('mbd2').feature('att1').selection.named('sel1');
model.physics('mbd2').create('att2', 'Attachment', 2);
model.physics('mbd2').feature('att2').selection.named('sel2');
model.physics('mbd2').create('att3', 'Attachment', 2);
model.physics('mbd2').feature('att3').selection.named('sel3');
model.physics('mbd2').create('att4', 'Attachment', 2);
model.physics('mbd2').feature('att4').selection.named('sel4');
model.physics('mbd2').create('att5', 'Attachment', 2);
model.physics('mbd2').feature('att5').selection.named('sel5');
model.physics('mbd2').create('att6', 'Attachment', 2);
model.physics('mbd2').feature('att6').selection.named('sel6');
model.physics('mbd2').create('hgj1', 'HingeJoint', -1);
model.physics('mbd2').feature('hgj1').set('Source', 'att1');
model.physics('mbd2').feature('hgj1').set('Destination', 'spg1');
model.physics('mbd2').feature('hgj1').set('e', [0 1 0]);
model.physics('mbd2').create('hgj2', 'HingeJoint', -1);
model.physics('mbd2').feature('hgj2').set('Source', 'att2');
model.physics('mbd2').feature('hgj2').set('Destination', 'spg1');
model.physics('mbd2').feature('hgj2').set('e', [0 1 0]);
model.physics('mbd2').feature.duplicate('hgj3', 'hgj2');
model.physics('mbd2').feature('hgj3').set('Source', 'att3');
model.physics('mbd2').feature('hgj3').set('Destination', 'spg2');
model.physics('mbd2').feature.duplicate('hgj4', 'hgj3');
model.physics('mbd2').feature('hgj4').set('Source', 'att4');
model.physics('mbd2').feature.duplicate('hgj5', 'hgj4');
model.physics('mbd2').feature('hgj5').set('Source', 'att5');
model.physics('mbd2').feature('hgj5').set('Destination', 'spg4');
model.physics('mbd2').feature.duplicate('hgj6', 'hgj5');
model.physics('mbd2').feature('hgj6').set('Source', 'att6');
model.physics('mbd2').feature('hgj1').create('pm1', 'PrescribedMotion', -1);
model.physics('mbd2').feature('hgj1').feature('pm1').set('PrescribedMotionThroughRotational', 'AngularVelocity');
model.physics('mbd2').feature('hgj1').feature('pm1').set('omegap', 'omega');
model.physics('mbd2').feature('hgj5').create('afm1', 'AppliedForceAndMoment', -1);
model.physics('mbd2').feature('hgj5').feature('afm1').set('AppliedOnSelectedAttachment', 'Joint');
model.physics('mbd2').feature('hgj5').feature('afm1').set('Ms', '-T_ext*step1(t)');
model.physics('mbd2').create('fix1', 'Fixed', 2);
model.physics('mbd2').feature('fix1').selection.set([67 68 93 94]);

model.mesh('mesh2').autoMeshSize(4);
model.mesh('mesh2').run;

model.study.create('std2');
model.study('std2').create('time', 'Transient');
model.study('std2').feature('time').setSolveFor('/physics/mbd', false);
model.study('std2').feature('time').setSolveFor('/physics/mbd2', true);
model.study('std2').feature('time').set('tlist', 'range(0,3.5e-5,7e-3)');
model.study('std2').feature('time').set('usertol', true);
model.study('std2').feature('time').set('rtol', '1e-6');

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'time');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp2_mbd_att_rot2').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp2_u2').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp2_mbd_gr_fc2').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp2_mbd_gr_mc2').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp2_mbd_gr_disp2').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp2_mbd_jnt_rot2').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp2_mbd_gr_rot2').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp2_mbd_att_disp2').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp2_mbd_att_rot2').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp2_mbd_gr_fc2').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp2_mbd_gr_mc2').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp2_mbd_gr_disp2').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp2_mbd_jnt_rot2').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp2_mbd_gr_rot2').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp2_mbd_att_disp2').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp2_mbd_att_rot2').set('scaleval', '0.1');
model.sol('sol2').feature('v1').feature('comp2_u2').set('scaleval', '1e-2*0.3287917273898479');
model.sol('sol2').feature('v1').feature('comp2_mbd_gr_fc2').set('scaleval', '108104.0000000001');
model.sol('sol2').feature('v1').feature('comp2_mbd_gr_mc2').set('scaleval', '3554.370089775216');
model.sol('sol2').feature('v1').feature('comp2_mbd_gr_disp2').set('scaleval', '0.003287917273898479');
model.sol('sol2').feature('v1').feature('comp2_mbd_jnt_rot2').set('scaleval', '0.1');
model.sol('sol2').feature('v1').feature('comp2_mbd_gr_rot2').set('scaleval', '0.1');
model.sol('sol2').feature('v1').feature('comp2_mbd_att_disp2').set('scaleval', '0.003287917273898479');
model.sol('sol2').feature('v1').set('control', 'time');
model.sol('sol2').create('t1', 'Time');
model.sol('sol2').feature('t1').set('tlist', 'range(0,3.5e-5,7e-3)');
model.sol('sol2').feature('t1').set('plot', 'off');
model.sol('sol2').feature('t1').set('plotgroup', 'pg1');
model.sol('sol2').feature('t1').set('plotfreq', 'tout');
model.sol('sol2').feature('t1').set('probesel', 'all');
model.sol('sol2').feature('t1').set('probes', {});
model.sol('sol2').feature('t1').set('probefreq', 'tsteps');
model.sol('sol2').feature('t1').set('rtol', 0.001);
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol2').feature('t1').set('atolglobalmethod', 'scaled');
model.sol('sol2').feature('t1').set('atolglobalfactor', 0.1);
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol2').feature('t1').set('eventtol', 0.01);
model.sol('sol2').feature('t1').set('reacf', true);
model.sol('sol2').feature('t1').set('storeudot', true);
model.sol('sol2').feature('t1').set('tstepsbdf', 'strict');
model.sol('sol2').feature('t1').set('endtimeinterpolation', true);
model.sol('sol2').feature('t1').set('maxorder', 2);
model.sol('sol2').feature('t1').set('minorder', 1);
model.sol('sol2').feature('t1').set('rescaleafterinitbw', false);
model.sol('sol2').feature('t1').set('bwinitstepfrac', '0.001');
model.sol('sol2').feature('t1').set('control', 'time');
model.sol('sol2').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('t1').feature('fc1').set('maxiter', 50);
model.sol('sol2').feature('t1').feature('fc1').set('jtech', 'onevery');
model.sol('sol2').feature('t1').feature('fc1').set('dtech', 'const');
model.sol('sol2').feature('t1').feature('fc1').set('damp', 1);
model.sol('sol2').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol2').feature('t1').feature('fc1').set('ntermconst', 'tol');
model.sol('sol2').feature('t1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol2').feature('t1').feature('fc1').set('maxiter', 50);
model.sol('sol2').feature('t1').feature('fc1').set('jtech', 'onevery');
model.sol('sol2').feature('t1').feature('fc1').set('dtech', 'const');
model.sol('sol2').feature('t1').feature('fc1').set('damp', 1);
model.sol('sol2').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol2').feature('t1').feature('fc1').set('ntermconst', 'tol');
model.sol('sol2').feature('t1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'manual');
model.sol('sol2').runAll;

model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').label('Displacement (mbd2)');
model.result('pg4').set('frametype', 'spatial');
model.result('pg4').set('data', 'dset3');
model.result('pg4').setIndex('looplevel', 201, 0);
model.result('pg4').set('defaultPlotID', 'displacement');
model.result('pg4').feature.create('surf1', 'Surface');
model.result('pg4').feature('surf1').label('Surface');
model.result('pg4').feature('surf1').set('colortable', 'SpectrumLight');
model.result('pg4').feature('surf1').set('data', 'parent');
model.result('pg4').feature('surf1').feature.create('def1', 'Deform');
model.result('pg4').feature('surf1').feature('def1').label('Deformation');
model.result('pg4').feature('surf1').feature('def1').set('scaleactive', true);
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').label('Velocity (mbd2)');
model.result('pg5').set('frametype', 'spatial');
model.result('pg5').set('data', 'dset3');
model.result('pg5').setIndex('looplevel', 201, 0);
model.result('pg5').set('defaultPlotID', 'velocity');
model.result('pg5').feature.create('vol1', 'Volume');
model.result('pg5').feature('vol1').label('Volume');
model.result('pg5').feature('vol1').set('expr', 'mod(dom,10)');
model.result('pg5').feature('vol1').set('unit', '1');
model.result('pg5').feature('vol1').set('colortable', 'Cyclic');
model.result('pg5').feature('vol1').set('colorlegend', false);
model.result('pg5').feature('vol1').set('data', 'parent');
model.result('pg5').feature('vol1').feature.create('def1', 'Deform');
model.result('pg5').feature('vol1').feature('def1').label('Deformation');
model.result('pg5').feature('vol1').feature('def1').set('scaleactive', true);
model.result('pg5').feature.create('arwl1', 'ArrowLine');
model.result('pg5').feature('arwl1').label('Arrow Line');
model.result('pg5').feature('arwl1').set('expr', {'mbd2.u_tX' 'mbd2.u_tY' 'mbd2.u_tZ'});
model.result('pg5').feature('arwl1').set('placement', 'elements');
model.result('pg5').feature('arwl1').set('data', 'parent');
model.result('pg5').feature('arwl1').feature.create('def1', 'Deform');
model.result('pg5').feature('arwl1').feature('def1').label('Deformation');
model.result('pg5').feature('arwl1').feature('def1').set('scaleactive', true);
model.result('pg4').run;
model.result.dataset.duplicate('dset4', 'dset3');
model.result.dataset('dset4').selection.geom('geom2', 3);
model.result.dataset('dset4').selection.geom('geom2', 3);
model.result.dataset('dset4').selection.set([27 28 29 30 31 32 33]);
model.result.dataset.duplicate('dset5', 'dset3');
model.result.dataset('dset5').selection.geom('geom2', 3);
model.result.dataset('dset5').selection.geom('geom2', 3);
model.result.dataset('dset5').selection.set([13 16 22]);
model.result('pg4').run;
model.result('pg4').setIndex('looplevel', 131, 0);
model.result('pg4').run;
model.result('pg4').feature('surf1').set('data', 'dset4');
model.result('pg4').feature('surf1').set('solutionparams', 'parent');
model.result('pg4').feature('surf1').set('colortable', 'AuroraAustralis');
model.result('pg4').feature.duplicate('surf2', 'surf1');
model.result('pg4').run;
model.result('pg4').feature('surf2').set('data', 'dset5');
model.result('pg4').feature('surf2').set('expr', 'mbd2.an');
model.result('pg4').feature('surf2').set('colortable', 'SpectrumLight');
model.result('pg4').feature('surf2').set('rangecoloractive', true);
model.result('pg4').feature('surf2').set('rangecolormin', -15);
model.result('pg4').feature('surf2').set('rangecolormax', 15);
model.result('pg4').run;
model.result('pg4').label('Displacement-Normal Acceleration');
model.result('pg4').run;
model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').run;
model.result('pg6').label('Contact force');
model.result('pg6').set('data', 'dset3');
model.result('pg6').set('titletype', 'none');
model.result('pg6').create('glob1', 'Global');
model.result('pg6').feature('glob1').set('markerpos', 'datapoints');
model.result('pg6').feature('glob1').set('linewidth', 'preference');
model.result('pg6').feature('glob1').set('expr', {'mbd2.grp1.Fc'});
model.result('pg6').feature('glob1').set('descr', {'Force at contact point'});
model.result('pg6').feature('glob1').set('unit', {'N'});
model.result('pg6').feature('glob1').set('expr', {'mbd2.grp1.Fc' 'mbd2.grp2.Fc'});
model.result('pg6').feature('glob1').set('descr', {'Force at contact point' 'Force at contact point'});
model.result('pg6').feature('glob1').setIndex('unit', 'N', 0);
model.result('pg6').feature('glob1').setIndex('expr', '-mbd2.grp2.Fc', 1);
model.result('pg6').feature('glob1').setIndex('unit', 'N', 1);
model.result('pg6').feature('glob1').setIndex('descr', 'Force at contact point', 1);
model.result('pg6').feature('glob1').set('xdata', 'expr');
model.result('pg6').feature('glob1').set('xdataexpr', 'mbd2.hgj1.th');
model.result('pg6').feature('glob1').set('xdatadescr', 'Relative rotation');
model.result('pg6').feature('glob1').set('xdataunit', [native2unicode(hex2dec({'00' 'b0'}), 'unicode') ]);
model.result('pg6').feature('glob1').set('xdatadescractive', true);
model.result('pg6').feature('glob1').set('xdatadescr', 'Drive shaft rotation');
model.result('pg6').run;
model.result('pg6').feature('glob1').set('linewidth', 2);
model.result('pg6').feature('glob1').set('legendmethod', 'manual');
model.result('pg6').feature('glob1').setIndex('legends', 'Gear pair 1', 0);
model.result('pg6').feature('glob1').setIndex('legends', 'Gear pair 2', 1);
model.result('pg6').run;
model.result('pg6').set('legendpos', 'lowerright');
model.result('pg6').run;
model.result.duplicate('pg7', 'pg6');
model.result('pg7').run;
model.result('pg7').label('Angular Velocity');
model.result('pg7').set('ylabelactive', true);
model.result('pg7').set('ylabel', 'Angular velocity (rad/s)');
model.result('pg7').set('legendpos', 'upperright');
model.result('pg7').run;
model.result('pg7').feature('glob1').set('expr', {'mbd2.hgj1.th_t'});
model.result('pg7').feature('glob1').set('descr', {'Relative angular velocity'});
model.result('pg7').feature('glob1').set('unit', {'rad/s'});
model.result('pg7').feature('glob1').setIndex('expr', '-mbd2.hgj3.th_t', 1);
model.result('pg7').feature('glob1').setIndex('expr', 'mbd2.hgj5.th_t', 2);
model.result('pg7').feature('glob1').setIndex('legends', 'Drive shaft', 0);
model.result('pg7').feature('glob1').setIndex('legends', 'Intermediate shaft', 1);
model.result('pg7').feature('glob1').setIndex('legends', 'Output shaft', 2);
model.result('pg7').run;
model.result('pg7').run;
model.result.duplicate('pg8', 'pg7');
model.result('pg8').run;
model.result('pg8').label('Angular Acceleration');
model.result('pg8').set('ylabel', 'Angular acceleration (rad/s^2)');
model.result('pg8').run;
model.result('pg8').feature('glob1').setIndex('expr', 'mbd2.hgj1.th_tt', 0);
model.result('pg8').feature('glob1').setIndex('expr', '-mbd2.hgj3.th_tt', 1);
model.result('pg8').feature('glob1').setIndex('expr', 'mbd2.hgj5.th_tt', 2);
model.result('pg8').run;
model.result.create('pg9', 'PlotGroup1D');
model.result('pg9').run;
model.result('pg9').label('Normal Acceleration');
model.result('pg9').set('data', 'dset3');
model.result('pg9').set('titletype', 'manual');
model.result('pg9').set('title', 'Normal acceleration at Attachment-5');
model.result('pg9').create('glob1', 'Global');
model.result('pg9').feature('glob1').set('markerpos', 'datapoints');
model.result('pg9').feature('glob1').set('linewidth', 'preference');
model.result('pg9').feature('glob1').setIndex('expr', 'mbd2.att5.u_tty', 0);
model.result('pg9').feature('glob1').setIndex('unit', 'm/s^2', 0);
model.result('pg9').feature('glob1').setIndex('descr', 'Rigid body acceleration, y-component', 0);
model.result('pg9').feature('glob1').set('xdata', 'expr');
model.result('pg9').feature('glob1').set('xdataexpr', 'mbd2.hgj1.th');
model.result('pg9').feature('glob1').set('xdataunit', [native2unicode(hex2dec({'00' 'b0'}), 'unicode') ]);
model.result('pg9').feature('glob1').set('xdatadescractive', true);
model.result('pg9').feature('glob1').set('xdatadescr', 'Drive shaft rotation');
model.result('pg9').feature('glob1').set('linewidth', 2);
model.result('pg9').feature('glob1').set('legend', false);
model.result('pg9').run;
model.result('pg9').run;
model.result.duplicate('pg10', 'pg9');
model.result('pg10').run;
model.result('pg10').label('Normal Acceleration: Frequency');
model.result('pg10').run;
model.result('pg10').feature('glob1').set('xdata', 'fourier');
model.result('pg10').feature('glob1').set('fouriershow', 'spectrum');
model.result('pg10').run;
model.result.export.create('anim2', 'Animation');
model.result.export('anim2').set('target', 'player');
model.result.export('anim2').set('fontsize', '9');
model.result.export('anim2').set('colortheme', 'globaltheme');
model.result.export('anim2').set('customcolor', [1 1 1]);
model.result.export('anim2').set('background', 'color');
model.result.export('anim2').set('gltfincludelines', 'on');
model.result.export('anim2').set('title1d', 'on');
model.result.export('anim2').set('legend1d', 'on');
model.result.export('anim2').set('logo1d', 'on');
model.result.export('anim2').set('options1d', 'on');
model.result.export('anim2').set('title2d', 'on');
model.result.export('anim2').set('legend2d', 'on');
model.result.export('anim2').set('logo2d', 'on');
model.result.export('anim2').set('options2d', 'off');
model.result.export('anim2').set('title3d', 'on');
model.result.export('anim2').set('legend3d', 'on');
model.result.export('anim2').set('logo3d', 'on');
model.result.export('anim2').set('options3d', 'off');
model.result.export('anim2').set('axisorientation', 'on');
model.result.export('anim2').set('grid', 'on');
model.result.export('anim2').set('axes1d', 'on');
model.result.export('anim2').set('axes2d', 'on');
model.result.export('anim2').set('showgrid', 'on');
model.result.export('anim2').showFrame;
model.result.export('anim2').set('plotgroup', 'pg4');
model.result.export('anim2').set('maxframes', 50);

model.nodeGroup.create('grp1', 'Physics', 'mbd2');
model.nodeGroup('grp1').placeAfter('init1');
model.nodeGroup('grp1').add('spg1');
model.nodeGroup('grp1').add('spg2');
model.nodeGroup('grp1').add('spg3');
model.nodeGroup('grp1').add('spg4');
model.nodeGroup('grp1').label('Gears');
model.nodeGroup.create('grp2', 'Physics', 'mbd2');
model.nodeGroup('grp2').placeAfter('init1');
model.nodeGroup('grp2').add('grp1');
model.nodeGroup('grp2').add('grp2');
model.nodeGroup('grp2').label('Gear Pairs');
model.nodeGroup.create('grp3', 'Physics', 'mbd2');
model.nodeGroup('grp3').placeAfter('fxj1');
model.nodeGroup('grp3').add('att1');
model.nodeGroup('grp3').add('att2');
model.nodeGroup('grp3').add('att3');
model.nodeGroup('grp3').add('att4');
model.nodeGroup('grp3').add('att5');
model.nodeGroup('grp3').add('att6');
model.nodeGroup('grp3').label('Attachments');
model.nodeGroup.create('grp4', 'Physics', 'mbd2');
model.nodeGroup('grp4').placeAfter('fxj1');
model.nodeGroup('grp4').add('hgj1');
model.nodeGroup('grp4').add('hgj2');
model.nodeGroup('grp4').add('hgj3');
model.nodeGroup('grp4').add('hgj4');
model.nodeGroup('grp4').add('hgj5');
model.nodeGroup('grp4').add('hgj6');
model.nodeGroup('grp4').label('Hinge Joints');

model.result('pg4').run;

model.title('Vibrations in a Compound Gear Train');

model.description('This example illustrates the modeling of a spur gear train. A transient analysis is performed to compute the angular velocity of all the gears as well as the forces and moments experienced by all the gears. The gear mesh is assumed elastic and the contact modeling is used for the computation of gear mesh stiffness. A parametric analysis is performed to compute the gear mesh stiffness as a function of gear rotation in one mesh cycle.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('gear_train.mph');

model.modelNode.label('Components');

out = model;
