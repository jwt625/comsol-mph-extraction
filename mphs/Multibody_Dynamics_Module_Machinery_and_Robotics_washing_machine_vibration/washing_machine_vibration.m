function out = model
%
% washing_machine_vibration.m
%
% Model exported on May 26 2025, 21:30 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Multibody_Dynamics_Module/Machinery_and_Robotics');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('mbd', 'MultibodyDynamics', 'geom1');
model.physics('mbd').model('comp1');
model.physics.create('shell', 'Shell', 'geom1');
model.physics('shell').model('comp1');

model.study.create('std1');
model.study('std1').create('eig', 'Eigenfrequency');
model.study('std1').feature('eig').set('chkeigregion', true);
model.study('std1').feature('eig').set('conrad', '1');
model.study('std1').feature('eig').set('conradynhm', '1');
model.study('std1').feature('eig').set('storefact', false);
model.study('std1').feature('eig').set('solnum', 'auto');
model.study('std1').feature('eig').set('notsolnum', 'auto');
model.study('std1').feature('eig').set('outputmap', {});
model.study('std1').feature('eig').set('ngenAUX', '1');
model.study('std1').feature('eig').set('goalngenAUX', '1');
model.study('std1').feature('eig').set('ngenAUX', '1');
model.study('std1').feature('eig').set('goalngenAUX', '1');
model.study('std1').feature('eig').setSolveFor('/physics/mbd', true);
model.study('std1').feature('eig').setSolveFor('/physics/shell', true);

model.common.create('mpf1', 'ParticipationFactors', 'comp1');

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('Mc', '0.25[kg]', 'Mass of unbalanced clothes');
model.param.set('Mm', '2[kg]', 'Mass of motor');
model.param.set('Im', '0.003[kg*m^2]', 'Moment of inertia of motor');
model.param.set('ks', '3000[N/m]', 'Spring constant of struts');
model.param.set('cs', '100[N*s/m]', 'Damping coefficient of struts');
model.param.set('kbr', '3[N*m/deg]', 'Spring constant of bushings');
model.param.set('cbr', '0.05[N*m*s/deg]', 'Damping coefficient of bushings');
model.param.set('kt', '1000[N/m]', 'Spring constant of stabilizing springs');
model.param.set('rho0', '5000[kg/m^3]', 'Density of components');
model.param.set('omega', '(100*2*pi/60)[rad/s]', 'Angular velocity of drum');

model.geom('geom1').lengthUnit('mm');
model.geom('geom1').create('imp1', 'Import');
model.geom('geom1').feature('imp1').set('filename', 'washing_machine_vibration.mphbin');
model.geom('geom1').feature('imp1').importData;
model.geom('geom1').feature('fin').set('action', 'assembly');
model.geom('geom1').feature('fin').set('createpairs', false);
model.geom('geom1').run('fin');

model.view('view1').set('renderwireframe', true);
model.view('view1').hideObjects.create('hide1');
model.view('view1').hideObjects('hide1').init(2);
model.view('view1').hideObjects('hide1').set('fin', [1 2 5 6 10 12 14]);

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');
model.selection('sel1').label('Housing');
model.selection('sel1').geom(2);
model.selection('sel1').set([36]);
model.selection('sel1').set('groupcontang', true);
model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').geom(1);
model.selection('sel2').set([228]);
model.selection('sel2').label('Strut axis 1');
model.selection.duplicate('sel3', 'sel2');
model.selection('sel3').label('Strut axis 2');
model.selection('sel3').set([444]);
model.selection.duplicate('sel4', 'sel3');
model.selection('sel4').label('Strut axis 3');
model.selection('sel4').set([484]);
model.selection.duplicate('sel5', 'sel4');
model.selection('sel5').label('Strut axis 4');
model.selection('sel5').set([268]);

model.physics('mbd').create('rd1', 'RigidDomain', 3);
model.physics('mbd').feature('rd1').label('Clothes');
model.physics('mbd').feature('rd1').selection.set([13]);
model.physics('mbd').feature('rd1').set('rho_mat', 'userdef');
model.physics('mbd').feature('rd1').create('mmi1', 'MassInertia', -1);
model.physics('mbd').feature('rd1').feature('mmi1').set('mt', 'Mc');
model.physics('mbd').feature('rd1').create('af1', 'AppliedForce', -1);
model.physics('mbd').feature('rd1').feature('af1').set('Ft', {'0' '0' '-Mc*g_const'});
model.physics('mbd').create('rd2', 'RigidDomain', 3);
model.physics('mbd').feature('rd2').label('Drum');
model.physics('mbd').feature('rd2').selection.set([8]);
model.physics('mbd').feature('rd2').set('InitialValueType', 'locallyDefined');
model.physics('mbd').feature('rd2').set('ConsistentInitialization', 'ForceInitialValues');
model.physics('mbd').feature('rd2').set('TranslationFirstAxis', true);
model.physics('mbd').feature('rd2').set('TranslationSecondAxis', true);
model.physics('mbd').feature('rd2').set('TranslationThirdAxis', true);
model.physics('mbd').feature('rd2').set('TotalRotation', true);
model.physics('mbd').feature('rd2').feature('init1').set('CenterOfRotationType', 'CentroidOfSelectedEntities');
model.physics('mbd').feature('rd2').feature('init1').set('EntityLevel', 'Point');
model.physics('mbd').feature('rd2').feature('init1').set('omega', {'0' 'omega' '0'});
model.physics('mbd').feature('rd2').feature('init1').feature('crp1').selection.set([141 151]);
model.physics('mbd').create('rd3', 'RigidDomain', 3);
model.physics('mbd').feature('rd3').label('Tub');
model.physics('mbd').feature('rd3').selection.set([5 15 16]);
model.physics('mbd').create('rd4', 'RigidDomain', 3);
model.physics('mbd').feature('rd4').label('Motor');
model.physics('mbd').feature('rd4').selection.set([14]);
model.physics('mbd').feature('rd4').set('rho_mat', 'userdef');
model.physics('mbd').feature('rd4').create('mmi1', 'MassInertia', -1);
model.physics('mbd').feature('rd4').feature('mmi1').set('mt', 'Mm');
model.physics('mbd').feature('rd4').feature('mmi1').set('mi', {'Im' '0' '0' '0' 'Im' '0' '0' '0' 'Im'});
model.physics('mbd').create('rd5', 'RigidDomain', 3);
model.physics('mbd').feature('rd5').label('Piston 1');
model.physics('mbd').feature('rd5').selection.set([11]);
model.physics('mbd').feature.duplicate('rd6', 'rd5');
model.physics('mbd').feature('rd6').label('Piston 2');
model.physics('mbd').feature('rd6').selection.set([17]);
model.physics('mbd').feature.duplicate('rd7', 'rd6');
model.physics('mbd').feature('rd7').label('Piston 3');
model.physics('mbd').feature('rd7').selection.set([18]);
model.physics('mbd').feature.duplicate('rd8', 'rd7');
model.physics('mbd').feature('rd8').label('Piston 4');
model.physics('mbd').feature('rd8').selection.set([12]);
model.physics('mbd').feature.duplicate('rd9', 'rd8');
model.physics('mbd').feature('rd9').label('Cylinder 1');
model.physics('mbd').feature('rd9').selection.set([9]);
model.physics('mbd').feature.duplicate('rd10', 'rd9');
model.physics('mbd').feature('rd10').label('Cylinder 2');
model.physics('mbd').feature('rd10').selection.set([19]);
model.physics('mbd').feature.duplicate('rd11', 'rd10');
model.physics('mbd').feature('rd11').label('Cylinder 3');
model.physics('mbd').feature('rd11').selection.set([20]);
model.physics('mbd').feature.duplicate('rd12', 'rd11');
model.physics('mbd').feature('rd12').label('Cylinder 4');
model.physics('mbd').feature('rd12').selection.set([10]);
model.physics('mbd').feature.duplicate('rd13', 'rd12');
model.physics('mbd').feature('rd13').label('Mounting 1');
model.physics('mbd').feature('rd13').selection.set([6]);
model.physics('mbd').feature.duplicate('rd14', 'rd13');
model.physics('mbd').feature('rd14').label('Mounting 2');
model.physics('mbd').feature('rd14').selection.set([21]);
model.physics('mbd').feature.duplicate('rd15', 'rd14');
model.physics('mbd').feature('rd15').label('Mounting 3');
model.physics('mbd').feature('rd15').selection.set([22]);
model.physics('mbd').feature.duplicate('rd16', 'rd15');
model.physics('mbd').feature('rd16').label('Mounting 4');
model.physics('mbd').feature('rd16').selection.set([7]);
model.physics('mbd').feature.duplicate('rd17', 'rd16');
model.physics('mbd').feature('rd17').label('Base');
model.physics('mbd').feature('rd17').selection.set([1 2 3 4]);
model.physics('mbd').feature('rd17').create('fix1', 'FixedConstraint', -1);

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup('def').set('density', {'rho0'});
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat2').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat2').label('Aluminum');
model.material('mat2').set('family', 'aluminum');
model.material('mat2').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('heatcapacity', '900[J/(kg*K)]');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'238[W/(m*K)]' '0' '0' '0' '238[W/(m*K)]' '0' '0' '0' '238[W/(m*K)]'});
model.material('mat2').propertyGroup('def').set('electricconductivity', {'3.774e7[S/m]' '0' '0' '0' '3.774e7[S/m]' '0' '0' '0' '3.774e7[S/m]'});
model.material('mat2').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'23e-6[1/K]' '0' '0' '0' '23e-6[1/K]' '0' '0' '0' '23e-6[1/K]'});
model.material('mat2').propertyGroup('def').set('density', '2700[kg/m^3]');
model.material('mat2').propertyGroup('Enu').set('E', '70[GPa]');
model.material('mat2').propertyGroup('Enu').set('nu', '0.33');
model.material('mat2').propertyGroup('Murnaghan').set('l', '-250[GPa]');
model.material('mat2').propertyGroup('Murnaghan').set('m', '-330[GPa]');
model.material('mat2').propertyGroup('Murnaghan').set('n', '-350[GPa]');
model.material('mat2').selection.geom('geom1', 2);
model.material('mat2').selection.named('sel1');

model.physics('shell').label('Shell [Housing]');
model.physics('shell').selection.named('sel1');
model.physics('shell').prop('ShapeProperty').set('order_displacement', 1);
model.physics('shell').feature('to1').set('d', '0.001[m]');
model.physics('shell').feature('emm1').set('geometricNonlinearity', 'linear');
model.physics('shell').create('att1', 'Attachment', 1);
model.physics('shell').feature('att1').label('Front spring');
model.physics('shell').feature('att1').selection.set([45 46 49 50]);
model.physics('shell').feature.duplicate('att2', 'att1');
model.physics('shell').feature('att2').label('Back spring');
model.physics('shell').feature('att2').selection.set([47 48 51 52]);
model.physics('shell').feature.duplicate('att3', 'att2');
model.physics('shell').feature('att3').label('Mounting 1');
model.physics('shell').feature('att3').selection.set([37 38 41 42]);
model.physics('shell').feature.duplicate('att4', 'att3');
model.physics('shell').feature('att4').label('Mounting 2');
model.physics('shell').feature('att4').selection.set([53 54 57 58]);
model.physics('shell').feature.duplicate('att5', 'att4');
model.physics('shell').feature('att5').label('Mounting 3');
model.physics('shell').feature('att5').selection.set([55 56 59 60]);
model.physics('shell').feature.duplicate('att6', 'att5');
model.physics('shell').feature('att6').label('Mounting 4');
model.physics('shell').feature('att6').selection.set([39 40 43 44]);
model.physics('shell').feature.duplicate('att7', 'att6');
model.physics('shell').feature('att7').label('Base 1');
model.physics('shell').feature('att7').selection.set([29 30 33 34]);
model.physics('shell').feature.duplicate('att8', 'att7');
model.physics('shell').feature('att8').label('Base 2');
model.physics('shell').feature('att8').selection.set([61 62 65 66]);
model.physics('shell').feature.duplicate('att9', 'att8');
model.physics('shell').feature('att9').label('Base 3');
model.physics('shell').feature('att9').selection.set([63 64 67 68]);
model.physics('shell').feature.duplicate('att10', 'att9');
model.physics('shell').feature('att10').label('Base 4');
model.physics('shell').feature('att10').selection.set([31 32 35 36]);
model.physics('mbd').create('spd1', 'SpringDamper', -1);
model.physics('mbd').feature('spd1').label('Housing-tub (front)');
model.physics('mbd').feature('spd1').set('Source', 'root.comp1.shell.att1');
model.physics('mbd').feature('spd1').set('k', 'kt');
model.physics('mbd').feature('spd1').feature('dp1').selection.set([246 248]);
model.physics('mbd').feature.duplicate('spd2', 'spd1');
model.physics('mbd').feature('spd2').label('Housing-tub (back)');
model.physics('mbd').feature('spd2').set('Source', 'root.comp1.shell.att2');
model.physics('mbd').feature('spd2').feature('dp1').selection.set([258 260]);
model.physics('mbd').create('hgj1', 'HingeJoint', -1);
model.physics('mbd').feature('hgj1').label('Tub-drum');
model.physics('mbd').feature('hgj1').set('Source', 'rd3');
model.physics('mbd').feature('hgj1').set('Destination', 'rd2');
model.physics('mbd').feature('hgj1').set('EntityLevel', 'Point');
model.physics('mbd').feature('hgj1').set('e', [0 1 0]);
model.physics('mbd').feature('hgj1').feature('cjp1').selection.set([141 151]);
model.physics('mbd').feature('hgj1').create('pm1', 'PrescribedMotion', -1);
model.physics('mbd').feature('hgj1').feature('pm1').set('PrescribedMotionThroughRotational', 'AngularVelocity');
model.physics('mbd').feature('hgj1').feature('pm1').set('omegap', 'omega');
model.physics('mbd').create('fxj1', 'FixedJoint', -1);
model.physics('mbd').feature('fxj1').label('Motor-tub');
model.physics('mbd').feature('fxj1').set('Source', 'rd4');
model.physics('mbd').feature('fxj1').set('Destination', 'rd3');
model.physics('mbd').feature('fxj1').feature('cjb1').selection.set([168 171]);
model.physics('mbd').feature.duplicate('fxj2', 'fxj1');
model.physics('mbd').feature('fxj2').label('Drum-clothes');
model.physics('mbd').feature('fxj2').set('Source', 'rd2');
model.physics('mbd').feature('fxj2').set('Destination', 'rd1');
model.physics('mbd').feature('fxj2').feature('cjb1').selection.set([157]);
model.physics('mbd').create('prj1', 'PrismaticJoint', -1);
model.physics('mbd').feature('prj1').label('Cylinder 1-piston 1');
model.physics('mbd').feature('prj1').set('Source', 'rd9');
model.physics('mbd').feature('prj1').set('Destination', 'rd5');
model.physics('mbd').feature('prj1').set('AxisOfJointType', 'SelectEdge');
model.physics('mbd').feature('prj1').feature('cjb1').selection.set([144]);
model.physics('mbd').feature('prj1').feature('ja1').selection.named('sel2');
model.physics('mbd').feature('prj1').create('sd1', 'SpringAndDamper', -1);
model.physics('mbd').feature('prj1').feature('sd1').set('k_u', 'ks');
model.physics('mbd').feature('prj1').feature('sd1').set('c_u', 'cs');
model.physics('mbd').feature.duplicate('prj2', 'prj1');
model.physics('mbd').feature('prj2').label('Cylinder 2-piston 2');
model.physics('mbd').feature('prj2').set('Source', 'rd10');
model.physics('mbd').feature('prj2').set('Destination', 'rd6');
model.physics('mbd').feature('prj2').feature('cjb1').selection.set([195]);
model.physics('mbd').feature('prj2').feature('ja1').selection.named('sel3');
model.physics('mbd').feature.duplicate('prj3', 'prj2');
model.physics('mbd').feature('prj3').label('Cylinder 3-piston 3');
model.physics('mbd').feature('prj3').set('Source', 'rd11');
model.physics('mbd').feature('prj3').set('Destination', 'rd7');
model.physics('mbd').feature('prj3').feature('cjb1').selection.set([201]);
model.physics('mbd').feature('prj3').feature('ja1').selection.named('sel4');
model.physics('mbd').feature.duplicate('prj4', 'prj3');
model.physics('mbd').feature('prj4').label('Cylinder 4-piston 4');
model.physics('mbd').feature('prj4').set('Source', 'rd12');
model.physics('mbd').feature('prj4').set('Destination', 'rd8');
model.physics('mbd').feature('prj4').feature('cjb1').selection.set([150]);
model.physics('mbd').feature('prj4').feature('ja1').selection.named('sel5');
model.physics('mbd').create('fxj3', 'FixedJoint', -1);
model.physics('mbd').feature('fxj3').label('Tub-piston 1');
model.physics('mbd').feature('fxj3').set('Source', 'rd3');
model.physics('mbd').feature('fxj3').set('Destination', 'rd5');
model.physics('mbd').feature('fxj3').set('AxisOfJointType', 'SelectEdge');
model.physics('mbd').feature('fxj3').set('JointElasticity', 'ElasticJoint');
model.physics('mbd').feature('fxj3').feature('cjb1').selection.set([149]);
model.physics('mbd').feature('fxj3').feature('ja1').selection.named('sel2');
model.physics('mbd').feature('fxj3').feature('je1').set('ul1', false);
model.physics('mbd').feature('fxj3').feature('je1').set('ul2', false);
model.physics('mbd').feature('fxj3').feature('je1').set('ul3', false);
model.physics('mbd').feature('fxj3').feature('je1').set('k_th', {'kbr' '0' '0' '0' 'kbr' '0' '0' '0' 'kbr'});
model.physics('mbd').feature('fxj3').feature('je1').set('c_th', {'cbr' '0' '0' '0' 'cbr' '0' '0' '0' 'cbr'});
model.physics('mbd').feature.duplicate('fxj4', 'fxj3');
model.physics('mbd').feature('fxj4').label('Tub-piston 2');
model.physics('mbd').feature('fxj4').set('Destination', 'rd6');
model.physics('mbd').feature('fxj4').feature('cjb1').selection.set([190]);
model.physics('mbd').feature('fxj4').feature('ja1').selection.named('sel3');
model.physics('mbd').feature.duplicate('fxj5', 'fxj4');
model.physics('mbd').feature('fxj5').label('Tub-piston 3');
model.physics('mbd').feature('fxj5').set('Destination', 'rd7');
model.physics('mbd').feature('fxj5').feature('cjb1').selection.set([196]);
model.physics('mbd').feature('fxj5').feature('ja1').selection.named('sel4');
model.physics('mbd').feature.duplicate('fxj6', 'fxj5');
model.physics('mbd').feature('fxj6').label('Tub-piston 4');
model.physics('mbd').feature('fxj6').set('Destination', 'rd8');
model.physics('mbd').feature('fxj6').feature('cjb1').selection.set([155]);
model.physics('mbd').feature('fxj6').feature('ja1').selection.named('sel5');
model.physics('mbd').feature.duplicate('fxj7', 'fxj6');
model.physics('mbd').feature('fxj7').label('Cylinder 1-mounting 1');
model.physics('mbd').feature('fxj7').set('Source', 'rd9');
model.physics('mbd').feature('fxj7').set('Destination', 'rd13');
model.physics('mbd').feature('fxj7').feature('cjb1').selection.set([74]);
model.physics('mbd').feature('fxj7').feature('ja1').selection.named('sel2');
model.physics('mbd').feature.duplicate('fxj8', 'fxj7');
model.physics('mbd').feature('fxj8').label('Cylinder 2-mounting 2');
model.physics('mbd').feature('fxj8').set('Source', 'rd10');
model.physics('mbd').feature('fxj8').set('Destination', 'rd14');
model.physics('mbd').feature('fxj8').feature('cjb1').selection.set([247]);
model.physics('mbd').feature('fxj8').feature('ja1').selection.named('sel3');
model.physics('mbd').feature.duplicate('fxj9', 'fxj8');
model.physics('mbd').feature('fxj9').label('Cylinder 3-mounting 3');
model.physics('mbd').feature('fxj9').set('Source', 'rd11');
model.physics('mbd').feature('fxj9').set('Destination', 'rd15');
model.physics('mbd').feature('fxj9').feature('cjb1').selection.set([257]);
model.physics('mbd').feature('fxj9').feature('ja1').selection.named('sel4');
model.physics('mbd').feature.duplicate('fxj10', 'fxj9');
model.physics('mbd').feature('fxj10').label('Cylinder 4-mounting 4');
model.physics('mbd').feature('fxj10').set('Source', 'rd12');
model.physics('mbd').feature('fxj10').set('Destination', 'rd16');
model.physics('mbd').feature('fxj10').feature('cjb1').selection.set([84]);
model.physics('mbd').feature('fxj10').feature('ja1').selection.named('sel5');
model.physics('mbd').feature('prj2').set('ReverseDirection', true);
model.physics('mbd').feature('prj3').set('ReverseDirection', true);
model.physics('mbd').feature('fxj4').set('ReverseDirection', true);
model.physics('mbd').feature('fxj5').set('ReverseDirection', true);
model.physics('mbd').feature('fxj8').set('ReverseDirection', true);
model.physics('mbd').feature('fxj9').set('ReverseDirection', true);
model.physics('mbd').feature.duplicate('fxj11', 'fxj10');
model.physics('mbd').feature('fxj11').label('Mounting 1-housing');
model.physics('mbd').feature('fxj11').set('Source', 'rd13');
model.physics('mbd').feature('fxj11').set('Destination', 'root.comp1.shell.att3');
model.physics('mbd').feature('fxj11').set('AxisOfJointType', 'SpecifyDirection');
model.physics('mbd').feature('fxj11').set('JointElasticity', 'RigidJoint');
model.physics('mbd').feature('fxj11').set('CenterOfJointType', 'CentroidOfDestination');
model.physics('mbd').feature.duplicate('fxj12', 'fxj11');
model.physics('mbd').feature('fxj12').label('Mounting 2-housing');
model.physics('mbd').feature('fxj12').set('Source', 'rd14');
model.physics('mbd').feature('fxj12').set('Destination', 'root.comp1.shell.att4');
model.physics('mbd').feature.duplicate('fxj13', 'fxj12');
model.physics('mbd').feature('fxj13').label('Mounting 3-housing');
model.physics('mbd').feature('fxj13').set('Source', 'rd15');
model.physics('mbd').feature('fxj13').set('Destination', 'root.comp1.shell.att5');
model.physics('mbd').feature.duplicate('fxj14', 'fxj13');
model.physics('mbd').feature('fxj14').label('Mounting 4-housing');
model.physics('mbd').feature('fxj14').set('Source', 'rd16');
model.physics('mbd').feature('fxj14').set('Destination', 'root.comp1.shell.att6');
model.physics('mbd').feature.duplicate('fxj15', 'fxj14');
model.physics('mbd').feature('fxj15').label('Housing-base 1');
model.physics('mbd').feature('fxj15').set('Source', 'root.comp1.shell.att7');
model.physics('mbd').feature('fxj15').set('Destination', 'rd17');
model.physics('mbd').feature.duplicate('fxj16', 'fxj15');
model.physics('mbd').feature('fxj16').label('Housing-base 2');
model.physics('mbd').feature('fxj16').set('Source', 'root.comp1.shell.att8');
model.physics('mbd').feature.duplicate('fxj17', 'fxj16');
model.physics('mbd').feature('fxj17').label('Housing-base 3');
model.physics('mbd').feature('fxj17').set('Source', 'root.comp1.shell.att9');
model.physics('mbd').feature.duplicate('fxj18', 'fxj17');
model.physics('mbd').feature('fxj18').label('Housing-base 4');
model.physics('mbd').feature('fxj18').set('Source', 'root.comp1.shell.att10');

model.nodeGroup.create('grp1', 'Physics', 'mbd');
model.nodeGroup('grp1').placeAfter('init1');
model.nodeGroup('grp1').add('rd1');
model.nodeGroup('grp1').add('rd2');
model.nodeGroup('grp1').add('rd3');
model.nodeGroup('grp1').add('rd4');
model.nodeGroup('grp1').add('rd5');
model.nodeGroup('grp1').add('rd6');
model.nodeGroup('grp1').add('rd7');
model.nodeGroup('grp1').add('rd8');
model.nodeGroup('grp1').add('rd9');
model.nodeGroup('grp1').add('rd10');
model.nodeGroup('grp1').add('rd11');
model.nodeGroup('grp1').add('rd12');
model.nodeGroup('grp1').add('rd13');
model.nodeGroup('grp1').add('rd14');
model.nodeGroup('grp1').add('rd15');
model.nodeGroup('grp1').add('rd16');
model.nodeGroup('grp1').add('rd17');
model.nodeGroup('grp1').label('Rigid Materials');
model.nodeGroup.create('grp2', 'Physics', 'mbd');
model.nodeGroup('grp2').placeAfter('hgj1');
model.nodeGroup('grp2').add('fxj1');
model.nodeGroup('grp2').add('fxj2');
model.nodeGroup('grp2').add('fxj3');
model.nodeGroup('grp2').add('fxj4');
model.nodeGroup('grp2').add('fxj5');
model.nodeGroup('grp2').add('fxj6');
model.nodeGroup('grp2').add('fxj7');
model.nodeGroup('grp2').add('fxj8');
model.nodeGroup('grp2').add('fxj9');
model.nodeGroup('grp2').add('fxj10');
model.nodeGroup('grp2').add('fxj11');
model.nodeGroup('grp2').add('fxj12');
model.nodeGroup('grp2').add('fxj13');
model.nodeGroup('grp2').add('fxj14');
model.nodeGroup('grp2').add('fxj15');
model.nodeGroup('grp2').add('fxj16');
model.nodeGroup('grp2').add('fxj17');
model.nodeGroup('grp2').add('fxj18');
model.nodeGroup('grp2').label('Fixed Joints');
model.nodeGroup.create('grp3', 'Physics', 'mbd');
model.nodeGroup('grp3').placeAfter('hgj1');
model.nodeGroup('grp3').add('prj1');
model.nodeGroup('grp3').add('prj2');
model.nodeGroup('grp3').add('prj3');
model.nodeGroup('grp3').add('prj4');
model.nodeGroup('grp3').label('Prismatic Joints');
model.nodeGroup.create('grp4', 'Physics', 'mbd');
model.nodeGroup('grp4').placeAfter('init1');
model.nodeGroup('grp4').add('spd1');
model.nodeGroup('grp4').add('spd2');
model.nodeGroup('grp4').label('Spring-Dampers');
model.nodeGroup.create('grp5', 'Physics', 'shell');
model.nodeGroup('grp5').placeAfter('dcont1');
model.nodeGroup('grp5').add('att1');
model.nodeGroup('grp5').add('att2');
model.nodeGroup('grp5').add('att3');
model.nodeGroup('grp5').add('att4');
model.nodeGroup('grp5').add('att5');
model.nodeGroup('grp5').add('att6');
model.nodeGroup('grp5').add('att7');
model.nodeGroup('grp5').add('att8');
model.nodeGroup('grp5').add('att9');
model.nodeGroup('grp5').add('att10');
model.nodeGroup('grp5').label('Attachments');

model.mesh('mesh1').autoMeshSize(4);
model.mesh('mesh1').run;

model.study('std1').feature('eig').set('shift', '2');
model.study('std1').setGenPlots(false);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'eig');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_mbd_rd_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_shell_att_rot').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_ar').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_shell_att_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_mbd_jnt_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_mbd_jnt_rot').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_mbd_rd_rot').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_mbd_rd_disp').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_shell_att_rot').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_ar').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_shell_att_disp').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_mbd_jnt_disp').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_mbd_jnt_rot').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_mbd_rd_rot').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_mbd_rd_disp').set('scaleval', '0.012030066500231827');
model.sol('sol1').feature('v1').feature('comp1_shell_att_rot').set('scaleval', '0.1');
model.sol('sol1').feature('v1').feature('comp1_ar').set('scaleval', '0.01');
model.sol('sol1').feature('v1').feature('comp1_shell_att_disp').set('scaleval', '0.012030066500231827');
model.sol('sol1').feature('v1').feature('comp1_mbd_jnt_disp').set('scaleval', '0.012030066500231827');
model.sol('sol1').feature('v1').feature('comp1_mbd_jnt_rot').set('scaleval', '0.1');
model.sol('sol1').feature('v1').feature('comp1_mbd_rd_rot').set('scaleval', '0.1');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*1.2030066500231826');
model.sol('sol1').feature('v1').set('control', 'eig');
model.sol('sol1').create('e1', 'Eigenvalue');
model.sol('sol1').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol1').feature('e1').set('eigvfunscaleparam', '1.2E-6');
model.sol('sol1').feature('e1').set('control', 'eig');
model.sol('sol1').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').run;
model.result('pg1').label('Mode Shape');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('colortable', 'SpectrumLight');
model.result('pg1').feature('surf1').create('def1', 'Deform');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').create('surf2', 'Surface');
model.result('pg1').feature('surf2').set('expr', 'shell.disp');
model.result('pg1').feature('surf2').set('titletype', 'none');
model.result('pg1').feature('surf2').set('colortable', 'GrayScale');
model.result('pg1').feature('surf2').set('colortabletrans', 'reverse');
model.result('pg1').feature('surf2').create('def1', 'Deform');
model.result('pg1').run;
model.result('pg1').feature('surf2').feature('def1').set('expr', {'u2' 'v2' 'w2'});
model.result('pg1').run;
model.result('pg1').set('looplevel', [3]);
model.result('pg1').run;
model.result('pg1').set('looplevel', [4]);
model.result('pg1').run;

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').set('uin_tub', 'sqrt(mbd.rd3.u^2+mbd.rd3.w^2)');
model.variable('var1').descr('uin_tub', 'Tub displacement magnitude (in-plane)');
model.variable('var1').set('uout_tub', 'abs(mbd.rd3.v)');
model.variable('var1').descr('uout_tub', 'Tub displacement magnitude (out-of-plane)');
model.variable('var1').set('th_drum', 'mbd.hgj1.th');
model.variable('var1').descr('th_drum', 'Drum rotation');
model.variable('var1').set('n_cycle', 'th_drum/360[deg]');
model.variable('var1').descr('n_cycle', 'Number of cycles');

model.study.create('std2');
model.study('std2').create('time', 'Transient');
model.study('std2').feature('time').setSolveFor('/physics/mbd', true);
model.study('std2').feature('time').setSolveFor('/physics/shell', true);
model.study('std2').feature('time').set('tlist', 'range(0,0.01,2)');
model.study('std2').setGenPlots(false);

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'time');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_u2').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_mbd_rd_disp').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_shell_att_rot').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_ar').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_shell_att_disp').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_mbd_jnt_disp').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_mbd_jnt_rot').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_mbd_rd_rot').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_mbd_rd_disp').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_shell_att_rot').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_ar').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_shell_att_disp').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_mbd_jnt_disp').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_mbd_jnt_rot').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_mbd_rd_rot').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_u2').set('scaleval', '1e-2*1.2030066500231826');
model.sol('sol2').feature('v1').feature('comp1_mbd_rd_disp').set('scaleval', '0.012030066500231827');
model.sol('sol2').feature('v1').feature('comp1_shell_att_rot').set('scaleval', '0.1');
model.sol('sol2').feature('v1').feature('comp1_ar').set('scaleval', '0.01');
model.sol('sol2').feature('v1').feature('comp1_shell_att_disp').set('scaleval', '0.012030066500231827');
model.sol('sol2').feature('v1').feature('comp1_mbd_jnt_disp').set('scaleval', '0.012030066500231827');
model.sol('sol2').feature('v1').feature('comp1_mbd_jnt_rot').set('scaleval', '0.1');
model.sol('sol2').feature('v1').feature('comp1_mbd_rd_rot').set('scaleval', '0.1');
model.sol('sol2').feature('v1').feature('comp1_u').set('scaleval', '1e-2*1.2030066500231826');
model.sol('sol2').feature('v1').set('control', 'time');
model.sol('sol2').create('t1', 'Time');
model.sol('sol2').feature('t1').set('tlist', 'range(0,0.01,2)');
model.sol('sol2').feature('t1').set('plot', 'off');
model.sol('sol2').feature('t1').set('plotgroup', 'pg1');
model.sol('sol2').feature('t1').set('plotfreq', 'tout');
model.sol('sol2').feature('t1').set('probesel', 'all');
model.sol('sol2').feature('t1').set('probes', {});
model.sol('sol2').feature('t1').set('probefreq', 'tsteps');
model.sol('sol2').feature('t1').set('rtol', 0.001);
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol2').feature('t1').set('atolglobalmethod', 'scaled');
model.sol('sol2').feature('t1').set('atolglobalfactor', 0.1);
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol2').feature('t1').set('eventtol', 0.01);
model.sol('sol2').feature('t1').set('reacf', true);
model.sol('sol2').feature('t1').set('storeudot', true);
model.sol('sol2').feature('t1').set('tstepsbdf', 'strict');
model.sol('sol2').feature('t1').set('endtimeinterpolation', true);
model.sol('sol2').feature('t1').set('maxorder', 2);
model.sol('sol2').feature('t1').set('minorder', 1);
model.sol('sol2').feature('t1').set('rescaleafterinitbw', false);
model.sol('sol2').feature('t1').set('bwinitstepfrac', '0.001');
model.sol('sol2').feature('t1').set('control', 'time');
model.sol('sol2').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('t1').create('se1', 'Segregated');
model.sol('sol2').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol2').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol2').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_u' 'comp1_mbd_rd_disp' 'comp1_mbd_rd_rot' 'comp1_mbd_rd2_uInt' 'comp1_mbd_rd2_thInt' 'comp1_mbd_spd1_Wd' 'comp1_mbd_spd2_Wd' 'comp1_mbd_jnt_rot' 'comp1_mbd_hgj1_pm1_thp' 'comp1_mbd_jnt_disp'});
model.sol('sol2').feature('t1').feature('se1').feature('ss1').set('linsolver', 'dDef');
model.sol('sol2').feature('t1').feature('se1').feature('ss1').label('Multibody Dynamics');
model.sol('sol2').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_u2' 'comp1_ar' 'comp1_shell_att_disp' 'comp1_shell_att_rot'});
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol2').feature('t1').feature('se1').feature('ss2').label('Shell [Housing]');
model.sol('sol2').feature('t1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'manual');
model.sol('sol2').feature('t1').set('tstepsbdf', 'intermediate');
model.sol('sol2').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('t1').feature('fc1').set('jtech', 'onevery');
model.sol('sol2').feature('t1').feature('fc1').set('maxiter', 15);
model.sol('sol2').feature('t1').feature('aDef').set('nullfun', 'flnullorth');
model.sol('sol2').runAll;

model.result('pg1').run;
model.result.duplicate('pg2', 'pg1');
model.result('pg2').run;
model.result('pg2').label('Displacement');
model.result('pg2').set('data', 'dset2');
model.result('pg2').setIndex('looplevel', 101, 0);
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').run;
model.result('pg2').feature('surf1').feature('def1').set('scaleactive', true);
model.result('pg2').feature('surf1').feature('def1').set('scale', 1);
model.result('pg2').run;
model.result('pg2').feature('surf2').feature('def1').set('scaleactive', true);
model.result('pg2').feature('surf2').feature('def1').set('scale', 1);
model.result('pg2').run;
model.result.create('pg3', 'PolarGroup');
model.result('pg3').run;
model.result('pg3').label('Tub displacement magnitude (in-plane)');
model.result('pg3').set('data', 'dset2');
model.result('pg3').set('titletype', 'label');
model.result('pg3').create('glob1', 'Global');
model.result('pg3').feature('glob1').set('markerpos', 'datapoints');
model.result('pg3').feature('glob1').set('linewidth', 'preference');
model.result('pg3').feature('glob1').set('expr', {'uin_tub'});
model.result('pg3').feature('glob1').set('descr', {'Tub displacement magnitude (in-plane)'});
model.result('pg3').feature('glob1').set('unit', {'mm'});
model.result('pg3').feature('glob1').set('xdata', 'expr');
model.result('pg3').feature('glob1').set('xdataexpr', 'th_drum');
model.result('pg3').feature('glob1').set('xdatadescr', 'Drum rotation');
model.result('pg3').feature('glob1').set('linewidth', 2);
model.result('pg3').feature('glob1').set('legend', false);
model.result('pg3').feature('glob1').create('col1', 'Color');
model.result('pg3').run;
model.result('pg3').feature('glob1').feature('col1').set('expr', 't');
model.result('pg3').feature('glob1').feature('col1').set('descr', 'Time');
model.result('pg3').feature('glob1').feature('col1').set('colortabletrans', 'reverse');
model.result('pg3').run;
model.result('pg3').run;
model.result.duplicate('pg4', 'pg3');
model.result('pg4').run;
model.result('pg4').label('Tub displacement magnitude (out-of-plane)');
model.result('pg4').run;
model.result('pg4').feature('glob1').set('expr', {'uout_tub'});
model.result('pg4').feature('glob1').set('descr', {'Tub displacement magnitude (out-of-plane)'});
model.result('pg4').feature('glob1').set('unit', {'mm'});
model.result('pg4').run;
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').label('Tub rotation');
model.result('pg5').set('data', 'dset2');
model.result('pg5').set('titletype', 'none');
model.result('pg5').set('xlabelactive', true);
model.result('pg5').set('xlabel', 'Number of cycles');
model.result('pg5').set('ylabelactive', true);
model.result('pg5').set('ylabel', 'Tub rotation (deg)');
model.result('pg5').create('glob1', 'Global');
model.result('pg5').feature('glob1').set('markerpos', 'datapoints');
model.result('pg5').feature('glob1').set('linewidth', 'preference');
model.result('pg5').feature('glob1').set('expr', {'mbd.rd3.thx'});
model.result('pg5').feature('glob1').set('descr', {'Rigid body rotation, x-component'});
model.result('pg5').feature('glob1').set('unit', {'rad'});
model.result('pg5').feature('glob1').set('expr', {'mbd.rd3.thx' 'mbd.rd3.thy'});
model.result('pg5').feature('glob1').set('descr', {'Rigid body rotation, x-component' 'Rigid body rotation, y-component'});
model.result('pg5').feature('glob1').set('expr', {'mbd.rd3.thx' 'mbd.rd3.thy' 'mbd.rd3.thz'});
model.result('pg5').feature('glob1').set('descr', {'Rigid body rotation, x-component' 'Rigid body rotation, y-component' 'Rigid body rotation, z-component'});
model.result('pg5').feature('glob1').setIndex('unit', 'deg', 0);
model.result('pg5').feature('glob1').setIndex('unit', 'deg', 1);
model.result('pg5').feature('glob1').setIndex('unit', 'deg', 2);
model.result('pg5').feature('glob1').set('xdataexpr', 'n_cycle');
model.result('pg5').feature('glob1').set('xdatadescr', 'Number of cycles');
model.result('pg5').feature('glob1').set('linewidth', 2);
model.result('pg5').feature('glob1').set('linemarker', 'cycle');
model.result('pg5').feature('glob1').set('markerpos', 'interp');
model.result('pg5').feature('glob1').set('markers', 20);
model.result('pg5').feature('glob1').set('legendmethod', 'manual');
model.result('pg5').feature('glob1').setIndex('legends', 'x-component', 0);
model.result('pg5').feature('glob1').setIndex('legends', 'y-component', 1);
model.result('pg5').feature('glob1').setIndex('legends', 'z-component', 2);
model.result('pg5').run;
model.result('pg5').run;
model.result.duplicate('pg6', 'pg5');
model.result('pg6').run;
model.result('pg6').label('Stabilizing spring extension');
model.result('pg6').set('ylabelactive', false);
model.result('pg6').set('legendpos', 'lowerleft');
model.result('pg6').run;
model.result('pg6').feature('glob1').set('expr', {'mbd.spd1.dl'});
model.result('pg6').feature('glob1').set('descr', {'Spring extension'});
model.result('pg6').feature('glob1').set('unit', {'mm'});
model.result('pg6').feature('glob1').set('expr', {'mbd.spd1.dl' 'mbd.spd2.dl'});
model.result('pg6').feature('glob1').set('descr', {'Spring extension' 'Spring extension'});
model.result('pg6').feature('glob1').setIndex('legends', 'Front spring', 0);
model.result('pg6').feature('glob1').setIndex('legends', 'Back spring', 1);
model.result('pg6').feature('glob1').setIndex('legends', '', 2);
model.result('pg6').run;
model.result('pg6').run;
model.result.duplicate('pg7', 'pg6');
model.result('pg7').run;
model.result('pg7').label('Strut displacement');
model.result('pg7').set('legendpos', 'upperright');
model.result('pg7').run;
model.result('pg7').feature('glob1').set('expr', {'mbd.prj1.u'});
model.result('pg7').feature('glob1').set('descr', {'Relative displacement'});
model.result('pg7').feature('glob1').set('unit', {'mm'});
model.result('pg7').feature('glob1').set('expr', {'mbd.prj1.u' 'mbd.prj2.u'});
model.result('pg7').feature('glob1').set('descr', {'Relative displacement' 'Relative displacement'});
model.result('pg7').feature('glob1').set('expr', {'mbd.prj1.u' 'mbd.prj2.u' 'mbd.prj3.u'});
model.result('pg7').feature('glob1').set('descr', {'Relative displacement' 'Relative displacement' 'Relative displacement'});
model.result('pg7').feature('glob1').set('expr', {'mbd.prj1.u' 'mbd.prj2.u' 'mbd.prj3.u' 'mbd.prj4.u'});
model.result('pg7').feature('glob1').set('descr', {'Relative displacement' 'Relative displacement' 'Relative displacement' 'Relative displacement'});
model.result('pg7').feature('glob1').setIndex('legends', 'Strut 1', 0);
model.result('pg7').feature('glob1').setIndex('legends', 'Strut 2', 1);
model.result('pg7').feature('glob1').setIndex('legends', 'Strut 3', 2);
model.result('pg7').feature('glob1').setIndex('legends', 'Strut 4', 3);
model.result('pg7').run;
model.result('pg7').run;
model.result.duplicate('pg8', 'pg7');
model.result('pg8').run;
model.result('pg8').label('Energy dissipation rate');
model.result('pg8').run;
model.result('pg8').feature('glob1').setIndex('expr', 'mbd.prj1.Qdamper', 0);
model.result('pg8').feature('glob1').setIndex('unit', 'W', 0);
model.result('pg8').feature('glob1').setIndex('descr', 'Energy dissipation rate in damper', 0);
model.result('pg8').feature('glob1').setIndex('expr', 'mbd.prj2.Qdamper', 1);
model.result('pg8').feature('glob1').setIndex('unit', 'W', 1);
model.result('pg8').feature('glob1').setIndex('descr', 'Energy dissipation rate in damper', 1);
model.result('pg8').feature('glob1').setIndex('expr', 'mbd.prj3.Qdamper', 2);
model.result('pg8').feature('glob1').setIndex('unit', 'W', 2);
model.result('pg8').feature('glob1').setIndex('descr', 'Energy dissipation rate in damper', 2);
model.result('pg8').feature('glob1').setIndex('expr', 'mbd.prj4.Qdamper', 3);
model.result('pg8').feature('glob1').setIndex('unit', 'W', 3);
model.result('pg8').feature('glob1').setIndex('descr', 'Energy dissipation rate in damper', 3);
model.result('pg8').run;
model.result('pg8').run;
model.result.duplicate('pg9', 'pg8');
model.result('pg9').run;
model.result('pg9').label('Shell deformation (mountings)');
model.result('pg9').set('titletype', 'label');
model.result('pg9').run;
model.result('pg9').feature('glob1').setIndex('expr', 'shell.att3.w', 0);
model.result('pg9').feature('glob1').setIndex('expr', 'shell.att4.w', 1);
model.result('pg9').feature('glob1').setIndex('expr', 'shell.att5.w', 2);
model.result('pg9').feature('glob1').setIndex('expr', 'shell.att6.w', 3);
model.result('pg9').feature('glob1').setIndex('legends', 'Mounting 1', 0);
model.result('pg9').feature('glob1').setIndex('legends', 'Mounting 2', 1);
model.result('pg9').feature('glob1').setIndex('legends', 'Mounting 3', 2);
model.result('pg9').feature('glob1').setIndex('legends', 'Mounting 4', 3);
model.result('pg9').run;
model.result.dataset.create('cpt1', 'CutPoint3D');
model.result.dataset('cpt1').set('data', 'dset2');
model.result.dataset('cpt1').set('pointx', 600);
model.result.dataset('cpt1').set('pointy', 250);
model.result.dataset('cpt1').set('pointz', 450);
model.result.dataset('cpt1').set('snapping', 'boundary');
model.result.create('pg10', 'PlotGroup1D');
model.result('pg10').run;
model.result('pg10').label('Shell deformation (side wall)');
model.result('pg10').set('data', 'cpt1');
model.result('pg10').set('titletype', 'label');
model.result('pg10').set('xlabelactive', true);
model.result('pg10').set('xlabel', 'Number of cycles');
model.result('pg10').set('ylabelactive', true);
model.result('pg10').set('ylabel', 'Displacement (mm)');
model.result('pg10').set('legendpos', 'lowerleft');
model.result('pg10').create('ptgr1', 'PointGraph');
model.result('pg10').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg10').feature('ptgr1').set('linewidth', 'preference');
model.result('pg10').feature('ptgr1').set('expr', 'u2');
model.result('pg10').feature('ptgr1').set('xdataexpr', 'n_cycle');
model.result('pg10').feature('ptgr1').set('xdatadescr', 'Number of cycles');
model.result('pg10').feature('ptgr1').set('linewidth', 2);
model.result('pg10').feature('ptgr1').set('linemarker', 'cycle');
model.result('pg10').feature('ptgr1').set('markerpos', 'interp');
model.result('pg10').feature('ptgr1').set('markers', 20);
model.result('pg10').feature('ptgr1').set('legend', true);
model.result('pg10').feature('ptgr1').set('legendmethod', 'manual');
model.result('pg10').feature('ptgr1').setIndex('legends', 'x-component', 0);
model.result('pg10').feature.duplicate('ptgr2', 'ptgr1');
model.result('pg10').run;
model.result('pg10').feature('ptgr2').set('expr', 'v2');
model.result('pg10').feature('ptgr2').setIndex('legends', 'y-component', 0);
model.result('pg10').feature.duplicate('ptgr3', 'ptgr2');
model.result('pg10').run;
model.result('pg10').feature('ptgr3').set('expr', 'w2');
model.result('pg10').feature('ptgr3').setIndex('legends', 'z-component', 0);
model.result('pg10').run;
model.result('pg1').run;

model.title('Vibration in a Washing Machine Assembly');

model.description('This example simulates a simplified multibody dynamics model of a horizontal-axis portable washing machine. Eigenfrequency analysis is performed to compute the natural frequencies and mode shapes of the entire assembly. Transient analysis is performed to find out the vibrations induced in the housing, modeled as a flexible shell, during the spinning cycle. The radial and axial displacement of the drum, and the energy dissipation in the struts are also analyzed.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('washing_machine_vibration.mph');

model.modelNode.label('Components');

out = model;
