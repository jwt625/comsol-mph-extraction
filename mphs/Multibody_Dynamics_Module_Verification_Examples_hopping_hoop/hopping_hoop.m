function out = model
%
% hopping_hoop.m
%
% Model exported on May 26 2025, 21:31 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Multibody_Dynamics_Module/Verification_Examples');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('mbd', 'MultibodyDynamics', 'geom1');
model.physics('mbd').model('comp1');

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/mbd', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('Rc', '1[m]', 'Ring radius');
model.param.set('Lbase', '10*pi*Rc', 'Length of plane');
model.param.set('mtot', '1[kg]', 'Total mass');
model.param.set('gamma', '0.75', 'Mass ratio');
model.param.set('v0', '0.1[m/s]', 'Initial velocity');
model.param.set('omega0', 'v0/Rc', 'Initial angular velocity');
model.param.set('mu', '1', 'Coefficient of friction');
model.param.set('Wk0', 'mtot*v0^2*(1+gamma)', 'Initial kinetic energy');
model.param.set('Wgmax', 'mtot*gamma*g_const*2*Rc', 'Available potential energy');
model.param.set('vmax', 'sqrt((Wgmax/mtot+v0^2*(1+gamma))/(1-gamma))', 'Maximum velocity');
model.param.set('vchar', 'vmax-6[m/s]', 'Estimated mean velocity');
model.param.set('t_end', '10*pi*Rc/vchar', 'Simulation time');
model.param.set('dt', 'Rc/vmax/36', 'Time step');

model.geom('geom1').create('c1', 'Circle');
model.geom('geom1').feature('c1').set('r', 'Rc');
model.geom('geom1').feature('c1').setIndex('layer', '0.1*Rc', 0);
model.geom('geom1').run('c1');
model.geom('geom1').create('del1', 'Delete');
model.geom('geom1').feature('del1').selection('input').init(2);
model.geom('geom1').feature('del1').selection('input').set('c1', 5);
model.geom('geom1').run('del1');
model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', {'Lbase' '0.1'});
model.geom('geom1').feature('r1').set('pos', [-0.1 -1.1]);
model.geom('geom1').run('r1');
model.geom('geom1').feature('fin').set('action', 'assembly');
model.geom('geom1').feature('fin').set('createpairs', false);
model.geom('geom1').run('fin');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');
model.selection('sel1').label('Point Mass');
model.selection('sel1').geom(0);
model.selection('sel1').set([6]);
model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').label('Ring Edges');
model.selection('sel2').geom(1);
model.selection('sel2').set([5]);
model.selection('sel2').set('groupcontang', true);

model.cpl.create('aveop1', 'Average', 'geom1');
model.cpl('aveop1').set('axisym', true);
model.cpl('aveop1').label('Average: Point Mass');
model.cpl('aveop1').selection.geom('geom1', 0);
model.cpl('aveop1').selection.named('sel1');
model.cpl.duplicate('aveop2', 'aveop1');
model.cpl('aveop2').label('Average: Ring Edges');
model.cpl('aveop2').selection.geom('geom1', 1);
model.cpl('aveop2').selection.named('sel2');

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').set('Wg', 'g_const*mtot*((aveop1(y)-Rc)*gamma+aveop2(y)*(1-gamma))');
model.variable('var1').descr('Wg', 'Current potential energy');

model.physics('mbd').prop('InitialValues').set('ut_Init', {'v0' '0' '0'});
model.physics('mbd').prop('InitialValues').set('phit_Init', '-omega0');
model.physics('mbd').create('rd1', 'RigidDomain', 2);
model.physics('mbd').feature('rd1').label('Rigid Material: Plane');
model.physics('mbd').feature('rd1').selection.set([5]);
model.physics('mbd').feature('rd1').set('rho_mat', 'userdef');
model.physics('mbd').feature('rd1').create('fix1', 'FixedConstraint', -1);
model.physics('mbd').create('rd2', 'RigidDomain', 2);
model.physics('mbd').feature('rd2').label('Rigid Material: Ring');
model.physics('mbd').feature('rd2').selection.set([1 2 3 4]);
model.physics('mbd').feature('rd2').set('rho_mat', 'userdef');
model.physics('mbd').feature('rd2').create('mmi1', 'MassInertia', -1);
model.physics('mbd').feature('rd2').feature('mmi1').set('CenterOfMassType', 'CentroidOfSelectedEntities');
model.physics('mbd').feature('rd2').feature('mmi1').set('EntityLevel', 'Point');
model.physics('mbd').feature('rd2').feature('mmi1').set('mt', 'mtot*gamma');
model.physics('mbd').feature('rd2').feature('mmi1').feature('cmp1').selection.named('sel1');
model.physics('mbd').create('adm1', 'AddedMass1', 1);
model.physics('mbd').feature('adm1').label('Added Mass: Ring');
model.physics('mbd').feature('adm1').selection.named('sel2');
model.physics('mbd').feature('adm1').set('MassType', 'mTot');
model.physics('mbd').feature('adm1').set('mTot', {'mtot*(1-gamma)' '0' '0' '0' 'mtot*(1-gamma)' '0' '0' '0' 'mtot*(1-gamma)'});
model.physics('mbd').create('gacc1', 'GravityAcceleration', -1);
model.physics('mbd').create('rbc1', 'RigidBodyContact', -1);
model.physics('mbd').feature('rbc1').set('Source', 'rd2');
model.physics('mbd').feature('rbc1').set('DestinationShape', 'Planar');
model.physics('mbd').feature('rbc1').selection('planarDestinationSelection').set([15]);
model.physics('mbd').feature('rbc1').set('fp', 0.001);
model.physics('mbd').feature('rbc1').set('taun', '0.05[ms]');
model.physics('mbd').feature('rbc1').set('storeContactEnergy', true);
model.physics('mbd').feature('rbc1').create('fric1', 'Friction', -1);
model.physics('mbd').feature('rbc1').feature('fric1').set('mu', 'mu');
model.physics('mbd').feature('rbc1').feature('fric1').set('v0', '1e-4');
model.physics('mbd').feature('rbc1').feature('fric1').set('storeFrictionEnergy', true);

model.mesh('mesh1').create('edg1', 'Edge');
model.mesh('mesh1').feature('edg1').selection.named('sel2');
model.mesh('mesh1').feature('edg1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('edg1').feature('dis1').set('numelem', 10);
model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([15]);
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 1);
model.mesh('mesh1').run;

model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'Rc', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);
model.study('std1').feature('param').setIndex('pname', 'Rc', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);
model.study('std1').feature('param').setIndex('pname', 'v0', 0);
model.study('std1').feature('param').setIndex('plistarr', '0.1 1 2 2.8 3.1 3.5', 0);
model.study('std1').feature('time').set('tlist', 'range(0,dt,t_end)');
model.study('std1').feature('time').set('usertol', true);
model.study('std1').feature('time').set('rtol', '0.0001');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_mbd_rd_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_mbd_rbc1_Wf').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_mbd_rbc1_Wv').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_mbd_rd_rot').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_mbd_rd_disp').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_mbd_rbc1_Wf').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_mbd_rbc1_Wv').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_mbd_rd_rot').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_mbd_rd_disp').set('scaleval', '0.32384087263246314');
model.sol('sol1').feature('v1').feature('comp1_mbd_rbc1_Wf').set('scaleval', '1000');
model.sol('sol1').feature('v1').feature('comp1_mbd_rbc1_Wv').set('scaleval', '1000');
model.sol('sol1').feature('v1').feature('comp1_mbd_rd_rot').set('scaleval', '0.1');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*32.384087263246315');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,dt,t_end)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('atolglobalmethod', 'scaled');
model.sol('sol1').feature('t1').set('atolglobalfactor', 0.1);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('eventtol', 0.01);
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('tstepsbdf', 'strict');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('minorder', 1);
model.sol('sol1').feature('t1').set('rescaleafterinitbw', false);
model.sol('sol1').feature('t1').set('bwinitstepfrac', '0.001');
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'onevery');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'const');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 1);
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('t1').feature('fc1').set('ntermconst', 'tol');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'onevery');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'const');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 1);
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('t1').feature('fc1').set('ntermconst', 'tol');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'v0'});
model.batch('p1').set('plistarr', {'0.1 1 2 2.8 3.1 3.5'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol('sol1').feature('t1').set('maxorder', 3);
model.sol('sol1').feature('t1').set('consistent', false);
model.sol.create('sol2');
model.sol('sol2').study('std1');
model.sol('sol2').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').run('compute');

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').label('Displacement (mbd)');
model.result('pg1').set('data', 'dset2');
model.result('pg1').setIndex('looplevel', 2258, 0);
model.result('pg1').setIndex('looplevel', 6, 1);
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').set('data', 'dset2');
model.result('pg1').setIndex('looplevel', 2258, 0);
model.result('pg1').setIndex('looplevel', 6, 1);
model.result('pg1').set('defaultPlotID', 'displacement');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').label('Surface');
model.result('pg1').feature('surf1').set('colortable', 'SpectrumLight');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result('pg1').feature('surf1').feature.create('def1', 'Deform');
model.result('pg1').feature('surf1').feature('def1').label('Deformation');
model.result('pg1').feature('surf1').feature('def1').set('scaleactive', true);
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').label('Velocity (mbd)');
model.result('pg2').set('data', 'dset2');
model.result('pg2').setIndex('looplevel', 2258, 0);
model.result('pg2').setIndex('looplevel', 6, 1);
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('data', 'dset2');
model.result('pg2').setIndex('looplevel', 2258, 0);
model.result('pg2').setIndex('looplevel', 6, 1);
model.result('pg2').set('defaultPlotID', 'velocity');
model.result('pg2').feature.create('surf1', 'Surface');
model.result('pg2').feature('surf1').label('Surface');
model.result('pg2').feature('surf1').set('expr', 'mod(dom,10)');
model.result('pg2').feature('surf1').set('unit', '1');
model.result('pg2').feature('surf1').set('colortable', 'Cyclic');
model.result('pg2').feature('surf1').set('colorlegend', false);
model.result('pg2').feature('surf1').set('data', 'parent');
model.result('pg2').feature('surf1').feature.create('def1', 'Deform');
model.result('pg2').feature('surf1').feature('def1').label('Deformation');
model.result('pg2').feature('surf1').feature('def1').set('scaleactive', true);
model.result('pg2').feature.create('arwl1', 'ArrowLine');
model.result('pg2').feature('arwl1').label('Arrow Line');
model.result('pg2').feature('arwl1').set('expr', {'mbd.u_tX' 'mbd.u_tY'});
model.result('pg2').feature('arwl1').set('placement', 'elements');
model.result('pg2').feature('arwl1').set('data', 'parent');
model.result('pg2').feature('arwl1').feature.create('def1', 'Deform');
model.result('pg2').feature('arwl1').feature('def1').label('Deformation');
model.result('pg2').feature('arwl1').feature('def1').set('scaleactive', true);
model.result('pg1').run;
model.result('pg2').run;
model.result('pg2').set('titletype', 'none');
model.result('pg2').set('showlegends', false);
model.result('pg2').run;
model.result('pg2').feature('surf1').set('expr', 'mbd.vel');
model.result('pg2').feature('surf1').set('colortable', 'SpectrumLight');
model.result('pg2').run;
model.result('pg2').feature.remove('arwl1');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').create('pttraj1', 'PointTrajectories');
model.result('pg2').feature('pttraj1').label('Point Trajectories: Point Mass');
model.result('pg2').feature('pttraj1').selection.named('sel1');
model.result('pg2').feature('pttraj1').set('linetype', 'tube');
model.result('pg2').feature('pttraj1').set('tuberadiusscaleactive', true);
model.result('pg2').feature('pttraj1').set('tuberadiusscale', 0.03);
model.result('pg2').feature('pttraj1').set('pointtype', 'point');
model.result('pg2').feature('pttraj1').set('pointradiusexpr', '0.15');
model.result('pg2').feature('pttraj1').set('sphereradiusscaleactive', true);
model.result('pg2').feature('pttraj1').set('pointcolor', 'magenta');
model.result('pg2').feature.duplicate('pttraj2', 'pttraj1');
model.result('pg2').run;
model.result('pg2').feature('pttraj2').label('Point Trajectories: Center of Gravity');
model.result('pg2').feature('pttraj2').set('plotdata', 'global');
model.result('pg2').feature('pttraj2').set('expr', {'aveop1(x)*gamma+aveop2(x)*(1-gamma)' '0'});
model.result('pg2').feature('pttraj2').setIndex('expr', 'aveop1(y)*gamma+aveop2(y)*(1-gamma)', 1);
model.result('pg2').feature('pttraj2').set('pointtype', 'none');
model.result('pg2').feature('pttraj2').create('col1', 'Color');
model.result('pg2').run;
model.result('pg2').feature('pttraj2').feature('col1').set('expr', 'aveop2(y)>1e-3');
model.result('pg2').feature('pttraj2').feature('col1').set('colortable', 'TrafficLight');
model.result('pg2').run;
model.result('pg2').feature.duplicate('pttraj3', 'pttraj1');
model.result('pg2').run;
model.result('pg2').feature('pttraj3').label('Point Trajectories: Contact Force');
model.result('pg2').feature('pttraj3').set('plotdata', 'global');
model.result('pg2').feature('pttraj3').set('expr', {'aveop2(x)' 'aveop2(y)-Rc'});
model.result('pg2').feature('pttraj3').set('linetype', 'none');
model.result('pg2').feature('pttraj3').set('pointtype', 'arrow');
model.result('pg2').feature('pttraj3').set('arrowexpr', {'0' '-mbd.rbc1.Fny'});
model.result('pg2').feature('pttraj3').set('arrowscaleactive', true);
model.result('pg2').feature('pttraj3').set('arrowscale', 0.08);
model.result('pg2').feature('pttraj3').set('pointcolor', 'red');
model.result('pg2').feature.duplicate('pttraj4', 'pttraj3');
model.result('pg2').run;
model.result('pg2').feature('pttraj4').label('Point Trajectories: Friction Force');
model.result('pg2').feature('pttraj4').setIndex('arrowexpr', 'mbd.rbc1.Ffx', 0);
model.result('pg2').feature('pttraj4').setIndex('arrowexpr', 0, 1);
model.result('pg2').feature('pttraj4').set('inheritplot', 'pttraj3');
model.result('pg2').run;
model.result('pg2').set('edges', false);
model.result('pg2').set('view', 'new');
model.result('pg2').set('looplevel', [2 6]);
model.result('pg2').run;

model.view('view2').axis.set('xmin', '-.0033931732177734');
model.view('view2').axis.set('xmax', 27.710580825805664);
model.view('view2').axis.set('ymin', -17.96312713623047);
model.view('view2').axis.set('ymax', 1.9402942657470703);
model.view('view2').set('locked', true);
model.view('view2').set('showgrid', false);

model.result('pg2').run;
model.result('pg2').feature('surf1').set('data', 'dset2');
model.result('pg2').feature('surf1').set('looplevel', {'interp' '1'});
model.result('pg2').feature('surf1').set('interp', [5.2]);
model.result('pg2').run;
model.result('pg2').feature('pttraj1').set('data', 'dset2');
model.result('pg2').feature('pttraj1').set('looplevel', {'interp' '1'});
model.result('pg2').feature('pttraj1').set('interp', [5.2]);
model.result('pg2').run;
model.result('pg2').feature('pttraj2').set('data', 'dset2');
model.result('pg2').feature('pttraj2').set('looplevel', {'interp' '1'});
model.result('pg2').feature('pttraj2').set('interp', [5.2]);
model.result('pg2').run;
model.result('pg2').feature('pttraj3').set('data', 'dset2');
model.result('pg2').feature('pttraj3').set('looplevel', {'interp' '1'});
model.result('pg2').feature('pttraj3').set('interp', [5.2]);
model.result('pg2').run;
model.result('pg2').feature('pttraj4').set('data', 'dset2');
model.result('pg2').feature('pttraj4').set('looplevel', {'interp' '1'});
model.result('pg2').feature('pttraj4').set('interp', [5.2]);
model.result('pg2').run;
model.result('pg2').feature.duplicate('surf2', 'surf1');
model.result('pg2').feature.duplicate('pttraj5', 'pttraj1');
model.result('pg2').feature.duplicate('pttraj6', 'pttraj2');
model.result('pg2').feature.duplicate('pttraj7', 'pttraj3');
model.result('pg2').feature.duplicate('pttraj8', 'pttraj4');
model.result('pg2').run;
model.result('pg2').feature.duplicate('surf3', 'surf2');
model.result('pg2').feature.duplicate('pttraj9', 'pttraj5');
model.result('pg2').feature.duplicate('pttraj10', 'pttraj6');
model.result('pg2').feature.duplicate('pttraj11', 'pttraj7');
model.result('pg2').feature.duplicate('pttraj12', 'pttraj8');
model.result('pg2').run;
model.result('pg2').feature.duplicate('surf4', 'surf3');
model.result('pg2').feature.duplicate('pttraj13', 'pttraj9');
model.result('pg2').feature.duplicate('pttraj14', 'pttraj10');
model.result('pg2').feature.duplicate('pttraj15', 'pttraj11');
model.result('pg2').feature.duplicate('pttraj16', 'pttraj12');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('surf2').set('looplevel', {'interp' '4'});
model.result('pg2').run;
model.result('pg2').feature('pttraj5').set('looplevel', {'interp' '4'});
model.result('pg2').run;
model.result('pg2').feature('pttraj6').set('looplevel', {'interp' '4'});
model.result('pg2').run;
model.result('pg2').feature('pttraj7').set('looplevel', {'interp' '4'});
model.result('pg2').run;
model.result('pg2').feature('pttraj8').set('looplevel', {'interp' '4'});
model.result('pg2').run;
model.result('pg2').feature('surf3').set('looplevel', {'interp' '5'});
model.result('pg2').run;
model.result('pg2').feature('pttraj9').set('looplevel', {'interp' '5'});
model.result('pg2').run;
model.result('pg2').feature('pttraj10').set('looplevel', {'interp' '5'});
model.result('pg2').run;
model.result('pg2').feature('pttraj11').set('looplevel', {'interp' '5'});
model.result('pg2').run;
model.result('pg2').feature('pttraj12').set('looplevel', {'interp' '5'});
model.result('pg2').run;
model.result('pg2').feature('surf4').set('looplevel', {'interp' '6'});
model.result('pg2').run;
model.result('pg2').feature('pttraj13').set('looplevel', {'interp' '6'});
model.result('pg2').run;
model.result('pg2').feature('pttraj14').set('looplevel', {'interp' '6'});
model.result('pg2').run;
model.result('pg2').feature('pttraj15').set('looplevel', {'interp' '6'});
model.result('pg2').run;
model.result('pg2').feature('pttraj16').set('looplevel', {'interp' '6'});
model.result('pg2').run;
model.result('pg2').feature('surf2').create('trn1', 'Translation');
model.result('pg2').run;
model.result('pg2').feature('surf2').feature('trn1').set('trans', [0 -5]);
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('surf3').feature.copy('trn1', 'pg2/surf2/trn1');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('surf4').feature.copy('trn1', 'pg2/surf2/trn1');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('pttraj5').feature.copy('trn1', 'pg2/surf2/trn1');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('pttraj6').feature.copy('trn1', 'pg2/surf2/trn1');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('pttraj7').feature.copy('trn1', 'pg2/surf2/trn1');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('pttraj8').feature.copy('trn1', 'pg2/surf2/trn1');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('pttraj9').feature.copy('trn1', 'pg2/surf2/trn1');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('pttraj10').feature.copy('trn1', 'pg2/surf2/trn1');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('pttraj11').feature.copy('trn1', 'pg2/surf2/trn1');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('pttraj12').feature.copy('trn1', 'pg2/surf2/trn1');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('pttraj13').feature.copy('trn1', 'pg2/surf2/trn1');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('pttraj14').feature.copy('trn1', 'pg2/surf2/trn1');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('pttraj15').feature.copy('trn1', 'pg2/surf2/trn1');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('pttraj16').feature.copy('trn1', 'pg2/surf2/trn1');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('surf3').feature('trn1').set('trans', [0 -10]);
model.result('pg2').run;
model.result('pg2').feature('pttraj9').feature('trn1').set('trans', [0 -10]);
model.result('pg2').run;
model.result('pg2').feature('pttraj10').feature('trn1').set('trans', [0 -10]);
model.result('pg2').run;
model.result('pg2').feature('pttraj11').feature('trn1').set('trans', [0 -10]);
model.result('pg2').run;
model.result('pg2').feature('pttraj12').feature('trn1').set('trans', [0 -10]);
model.result('pg2').run;
model.result('pg2').feature('surf4').feature('trn1').set('trans', [0 -15]);
model.result('pg2').run;
model.result('pg2').feature('pttraj13').feature('trn1').set('trans', [0 -15]);
model.result('pg2').run;
model.result('pg2').feature('pttraj14').feature('trn1').set('trans', [0 -15]);
model.result('pg2').run;
model.result('pg2').feature('pttraj15').feature('trn1').set('trans', [0 -15]);
model.result('pg2').run;
model.result('pg2').feature('pttraj16').feature('trn1').set('trans', [0 -15]);
model.result('pg2').run;
model.result('pg2').create('ann1', 'Annotation');
model.result('pg2').feature('ann1').set('text', 'v0 = 0.1 (m/s)');
model.result('pg2').feature('ann1').set('showpoint', false);
model.result('pg2').feature('ann1').set('posxexpr', 10);
model.result('pg2').feature('ann1').set('posyexpr', -1.2);
model.result('pg2').feature.duplicate('ann2', 'ann1');
model.result('pg2').run;
model.result('pg2').feature.duplicate('ann3', 'ann2');
model.result('pg2').run;
model.result('pg2').feature.duplicate('ann4', 'ann3');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('ann2').set('text', 'v0 = 2.8 (m/s)');
model.result('pg2').feature('ann2').set('posyexpr', -6.2);
model.result('pg2').run;
model.result('pg2').feature('ann3').set('text', 'v0 = 3.1 (m/s)');
model.result('pg2').feature('ann3').set('posyexpr', -11.2);
model.result('pg2').run;
model.result('pg2').feature('ann4').set('text', 'v0 = 3.5 (m/s)');
model.result('pg2').feature('ann4').set('posyexpr', -16.2);
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature.remove('surf2');
model.result('pg2').feature.remove('pttraj5');
model.result('pg2').feature.remove('pttraj6');
model.result('pg2').feature.remove('pttraj7');
model.result('pg2').feature.remove('pttraj8');
model.result('pg2').feature.remove('surf3');
model.result('pg2').feature.remove('pttraj9');
model.result('pg2').feature.remove('pttraj10');
model.result('pg2').feature.remove('pttraj11');
model.result('pg2').feature.remove('pttraj12');
model.result('pg2').feature.remove('surf4');
model.result('pg2').feature.remove('pttraj13');
model.result('pg2').feature.remove('pttraj14');
model.result('pg2').feature.remove('pttraj15');
model.result('pg2').feature.remove('pttraj16');
model.result('pg2').feature.remove('ann1');
model.result('pg2').feature.remove('ann2');
model.result('pg2').feature.remove('ann3');
model.result('pg2').feature.remove('ann4');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('surf1').set('data', 'parent');
model.result('pg2').run;
model.result('pg2').feature('pttraj1').set('data', 'parent');
model.result('pg2').run;
model.result('pg2').feature('pttraj2').set('data', 'parent');
model.result('pg2').run;
model.result('pg2').feature('pttraj3').set('data', 'parent');
model.result('pg2').run;
model.result('pg2').feature('pttraj4').set('data', 'parent');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').set('looplevel', [2429 5]);
model.result('pg2').run;
model.result.dataset.create('extr1', 'Extrude2D');
model.result.dataset('extr1').set('data', 'dset2');
model.result.dataset('extr1').set('planemap', 'xz');
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').run;
model.result('pg3').label('Velocity (3D)');
model.result('pg3').set('looplevel', [2258 5]);
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').set('showlegends', false);
model.result('pg3').create('vol1', 'Volume');
model.result('pg3').feature('vol1').set('expr', 'mbd.vel');
model.result('pg3').feature('vol1').set('colortable', 'SpectrumLight');
model.result('pg3').feature('vol1').create('def1', 'Deform');
model.result('pg3').run;
model.result('pg3').feature('vol1').feature('def1').set('expr', {'u' '0' 'v'});
model.result('pg3').feature('vol1').feature('def1').set('scaleactive', true);
model.result('pg3').feature('vol1').feature('def1').set('scale', 1);
model.result('pg3').run;
model.result('pg3').create('pttraj1', 'PointTrajectories');
model.result('pg3').feature('pttraj1').set('plotdata', 'global');
model.result('pg3').feature('pttraj1').set('expr', {'aveop1(x)' '0' 'aveop1(y)'});
model.result('pg3').feature('pttraj1').set('linetype', 'tube');
model.result('pg3').feature('pttraj1').create('col1', 'Color');
model.result('pg3').run;
model.result('pg3').feature('pttraj1').feature('col1').set('expr', 'aveop2(y)>1e-3');
model.result('pg3').feature('pttraj1').feature('col1').set('colortable', 'TrafficLight');
model.result('pg3').run;
model.result('pg3').set('view', 'new');
model.result('pg3').run;

model.view('view3').set('showgrid', false);
model.view('view3').set('showaxisorientation', false);
model.view('view3').set('locked', true);
model.view('view3').camera.setIndex('position', '-81.66296386718750', 0);
model.view('view3').camera.setIndex('position', '-113.48427581787110', 1);
model.view('view3').camera.setIndex('position', '82.196243286132810', 2);
model.view('view3').camera.setIndex('target', '15.1656341552734380', 0);
model.view('view3').camera.setIndex('target', '-0.50008392333984380', 1);
model.view('view3').camera.setIndex('target', '-0.04994201660156250', 2);
model.view('view3').camera.setIndex('up', '0.36129981279373170', 0);
model.view('view3').camera.setIndex('up', '0.326234698295593260', 1);
model.view('view3').camera.setIndex('up', '0.87351799011230470', 2);
model.view('view3').camera.setIndex('rotationpoint', '15.1656894683837890', 0);
model.view('view3').camera.setIndex('rotationpoint', '-0.50', 1);
model.view('view3').camera.setIndex('rotationpoint', '-0.0500000119209289550', 2);
model.view('view3').camera.setIndex('viewoffset', '0.0167525894939899440', 0);
model.view('view3').camera.setIndex('viewoffset', '0.09610880002171010', 1);

model.result('pg3').run;
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Velocity vs. Rotation Angle');
model.result('pg4').set('data', 'dset2');
model.result('pg4').set('titletype', 'none');
model.result('pg4').setIndex('looplevelinput', 'manual', 1);
model.result('pg4').setIndex('looplevel', [1 3], 1);
model.result('pg4').set('xlabelactive', true);
model.result('pg4').set('xlabel', ['Rotation Angle  (' native2unicode(hex2dec({'00' 'b0'}), 'unicode') ')']);
model.result('pg4').set('ylabelactive', true);
model.result('pg4').set('ylabel', 'Velocity (m/s)');
model.result('pg4').set('axislimits', true);
model.result('pg4').set('xmin', 0);
model.result('pg4').set('xmax', 1080);
model.result('pg4').set('ymin', -0.1);
model.result('pg4').set('ymax', 14);
model.result('pg4').set('manualgrid', true);
model.result('pg4').set('xspacing', 180);
model.result('pg4').set('legendmaxwidthinside', 1);
model.result('pg4').create('glob1', 'Global');
model.result('pg4').feature('glob1').set('markerpos', 'datapoints');
model.result('pg4').feature('glob1').set('linewidth', 'preference');
model.result('pg4').feature('glob1').setIndex('expr', 'aveop2(mbd.u_tX)', 0);
model.result('pg4').feature('glob1').setIndex('descr', 'Translational velocity', 0);
model.result('pg4').feature('glob1').setIndex('expr', '-mbd.rd2.th_tz*Rc', 1);
model.result('pg4').feature('glob1').setIndex('descr', 'Angular velocity (normalized)', 1);
model.result('pg4').feature('glob1').set('xdatasolnumtype', 'inner');
model.result('pg4').feature('glob1').set('xdata', 'expr');
model.result('pg4').feature('glob1').set('xdataexpr', '-mbd.rd2.thz');
model.result('pg4').feature('glob1').set('xdataunit', [native2unicode(hex2dec({'00' 'b0'}), 'unicode') ]);
model.result('pg4').feature('glob1').set('linestyle', 'cycle');
model.result('pg4').feature('glob1').set('linewidth', 4);
model.result('pg4').run;
model.result('pg4').run;
model.result.duplicate('pg5', 'pg4');
model.result('pg5').run;
model.result('pg5').label('Velocity vs. Time');
model.result('pg5').set('xlabel', 'Time (s)');
model.result('pg5').setIndex('looplevel', [5], 1);
model.result('pg5').set('axislimits', false);
model.result('pg5').set('manualgrid', false);
model.result('pg5').run;
model.result('pg5').feature('glob1').set('xdata', 'solution');
model.result('pg5').run;
model.result('pg4').run;
model.result.duplicate('pg6', 'pg4');
model.result('pg6').run;
model.result('pg6').label('Energy vs. Rotation Angle');
model.result('pg6').setIndex('looplevel', [1], 1);
model.result('pg6').set('ylabel', 'Energy (J)');
model.result('pg6').set('yspacing', 5);
model.result('pg6').set('ymin', -16);
model.result('pg6').set('ymax', 30);
model.result('pg6').run;
model.result('pg6').feature('glob1').setIndex('expr', 'mbd.Wk_tot', 0);
model.result('pg6').feature('glob1').setIndex('descr', 'Total kinetic energy', 0);
model.result('pg6').feature('glob1').setIndex('expr', 'Wg', 1);
model.result('pg6').feature('glob1').setIndex('descr', 'Current potential energy', 1);
model.result('pg6').feature('glob1').setIndex('expr', 'mbd.Wk_tot+Wg', 2);
model.result('pg6').feature('glob1').setIndex('descr', 'Total energy', 2);
model.result('pg6').feature('glob1').set('expr', {'mbd.Wk_tot' 'Wg' 'mbd.Wk_tot+Wg' 'mbd.rbc1.Wf'});
model.result('pg6').feature('glob1').set('descr', {'Total kinetic energy' 'Current potential energy' 'Total energy' 'Frictional energy dissipation'});
model.result('pg6').feature('glob1').set('linestyle', 'solid');
model.result('pg6').run;
model.result('pg6').run;
model.result.duplicate('pg7', 'pg6');
model.result('pg7').run;
model.result('pg7').label('Energy vs. Time');
model.result('pg7').setIndex('looplevel', [5], 1);
model.result('pg7').set('xlabel', 'Time (s)');
model.result('pg7').set('axislimits', false);
model.result('pg7').set('manualgrid', false);
model.result('pg7').run;
model.result('pg7').feature('glob1').set('xdata', 'solution');
model.result('pg7').run;
model.result('pg4').run;
model.result.duplicate('pg8', 'pg4');
model.result('pg8').run;
model.result('pg8').label('Contact Forces');
model.result('pg8').set('ylabel', 'Force (N)');
model.result('pg8').set('yspacing', 10);
model.result('pg8').set('ymax', 115);
model.result('pg8').set('ymin', -12);
model.result('pg8').run;
model.result('pg8').feature('glob1').set('expr', {});
model.result('pg8').feature('glob1').set('descr', {});
model.result('pg8').feature('glob1').setIndex('expr', '-mbd.rbc1.Fny', 0);
model.result('pg8').feature('glob1').setIndex('descr', 'Contact force, vertical', 0);
model.result('pg8').feature('glob1').setIndex('expr', 'mbd.rbc1.Ffx', 1);
model.result('pg8').feature('glob1').setIndex('descr', 'Friction force, horizontal', 1);
model.result('pg8').run;
model.result('pg8').run;
model.result.duplicate('pg9', 'pg8');
model.result('pg9').run;
model.result('pg9').set('titletype', 'label');
model.result('pg9').label('Friction Utilization Factor');
model.result('pg9').set('ylabelactive', false);
model.result('pg9').set('yspacing', 0.2);
model.result('pg9').set('ymax', 1.6);
model.result('pg9').set('ymin', -1.1);
model.result('pg9').run;
model.result('pg9').feature('glob1').set('expr', {});
model.result('pg9').feature('glob1').set('descr', {});
model.result('pg9').feature('glob1').setIndex('expr', 'mbd.rbc1.Ffx/(mbd.rbc1.Fny+0.001)/mbd.rbc1.fric1.mu', 0);
model.result('pg9').run;
model.result('pg4').run;
model.result('pg4').setIndex('looplevel', [4], 1);
model.result('pg4').set('xmax', 1740);
model.result('pg4').set('ymax', 13);
model.result('pg4').set('ymin', 2);
model.result('pg4').run;
model.result('pg6').run;
model.result('pg6').setIndex('looplevel', [4], 1);
model.result('pg6').set('xmax', 1740);
model.result('pg6').set('ymax', 47);
model.result('pg6').run;
model.result('pg8').run;
model.result('pg8').setIndex('looplevel', [4], 1);
model.result('pg8').set('ymax', 118);
model.result('pg8').set('ymin', -15);
model.result('pg8').set('xmax', 1740);
model.result('pg8').run;
model.result('pg9').run;
model.result('pg9').setIndex('looplevel', [4], 1);
model.result('pg9').set('xmax', 1740);
model.result('pg9').run;
model.result('pg4').run;
model.result('pg4').setIndex('looplevel', [5], 1);
model.result('pg4').set('xmax', 1440);
model.result('pg4').set('ymin', 1);
model.result('pg4').run;
model.result('pg6').run;
model.result('pg6').setIndex('looplevel', [5], 1);
model.result('pg6').set('xmax', 1440);
model.result('pg6').set('ymax', 46);
model.result('pg6').run;
model.result('pg8').run;
model.result('pg8').setIndex('looplevel', [5], 1);
model.result('pg8').set('xmax', 1440);
model.result('pg8').set('ymax', 105);
model.result('pg8').run;
model.result('pg9').run;
model.result('pg9').setIndex('looplevel', [5], 1);
model.result('pg9').set('xmax', 1440);
model.result('pg9').run;
model.result('pg2').run;

model.nodeGroup.create('grp1', 'Results');
model.nodeGroup('grp1').set('type', 'plotgroup');
model.nodeGroup('grp1').placeAfter('plotgroup', 'pg1');
model.nodeGroup('grp1').add('plotgroup', 'pg2');
model.nodeGroup('grp1').add('plotgroup', 'pg3');
model.nodeGroup('grp1').add('plotgroup', 'pg4');
model.nodeGroup('grp1').add('plotgroup', 'pg5');
model.nodeGroup('grp1').label('Velocity');

model.result('pg6').run;

model.nodeGroup.create('grp2', 'Results');
model.nodeGroup('grp2').set('type', 'plotgroup');
model.nodeGroup('grp2').placeAfter('plotgroup', 'pg1');
model.nodeGroup.move('grp2', 1);
model.nodeGroup('grp2').add('plotgroup', 'pg6');
model.nodeGroup('grp2').add('plotgroup', 'pg7');
model.nodeGroup('grp2').label('Energy');

model.result('pg8').run;

model.nodeGroup.create('grp3', 'Results');
model.nodeGroup('grp3').set('type', 'plotgroup');
model.nodeGroup('grp3').placeAfter('plotgroup', 'pg1');
model.nodeGroup.move('grp3', 2);
model.nodeGroup('grp3').add('plotgroup', 'pg8');
model.nodeGroup('grp3').add('plotgroup', 'pg9');
model.nodeGroup('grp3').label('Contact Forces');

model.result.export.create('anim1', 'Animation');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('fontsize', '9');
model.result.export('anim1').set('colortheme', 'globaltheme');
model.result.export('anim1').set('customcolor', [1 1 1]);
model.result.export('anim1').set('background', 'color');
model.result.export('anim1').set('gltfincludelines', 'on');
model.result.export('anim1').set('title1d', 'on');
model.result.export('anim1').set('legend1d', 'on');
model.result.export('anim1').set('logo1d', 'on');
model.result.export('anim1').set('options1d', 'on');
model.result.export('anim1').set('title2d', 'on');
model.result.export('anim1').set('legend2d', 'on');
model.result.export('anim1').set('logo2d', 'on');
model.result.export('anim1').set('options2d', 'off');
model.result.export('anim1').set('title3d', 'on');
model.result.export('anim1').set('legend3d', 'on');
model.result.export('anim1').set('logo3d', 'on');
model.result.export('anim1').set('options3d', 'off');
model.result.export('anim1').set('axisorientation', 'on');
model.result.export('anim1').set('grid', 'on');
model.result.export('anim1').set('axes1d', 'on');
model.result.export('anim1').set('axes2d', 'on');
model.result.export('anim1').set('showgrid', 'on');
model.result.export('anim1').showFrame;
model.result.export('anim1').label('Velocity');
model.result.export('anim1').set('plotgroup', 'pg2');
model.result.export('anim1').setIndex('singlelooplevel', 5, 1);
model.result.export('anim1').set('maxframes', 100);
model.result.export.duplicate('anim2', 'anim1');
model.result.export('anim2').showFrame;
model.result.export('anim2').label('Velocity (3D)');
model.result.export('anim2').set('plotgroup', 'pg3');
model.result('pg2').run;
model.result('pg2').set('looplevel', [2258 5]);
model.result('pg2').set('view', 'auto');
model.result('pg2').run;
model.result('pg4').run;
model.result('pg4').set('axislimits', false);
model.result('pg6').run;
model.result('pg6').set('axislimits', false);
model.result('pg8').run;
model.result('pg8').set('axislimits', false);
model.result('pg9').run;
model.result('pg9').set('axislimits', false);
model.result('pg3').run;

model.view('view4').set('showgrid', false);

model.result('pg3').run;

model.title('Dynamics of a Hopping Hoop');

model.description('In this example, the dynamics of a hopping hoop is simulated. A rolling ring with a point mass on the perimeter can, under certain conditions, jump up from the surface on which it is rolling.');

model.label('hopping_hoop.mph');

model.modelNode.label('Components');

out = model;
