function out = model
%
% protein_adsorption.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Chemical_Reaction_Engineering_Module/Mixing_and_Separation');

model.modelNode.create('comp1', true);

model.physics.create('re', 'ReactionEng');
model.physics('re').model('comp1');

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/re', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('Arsurf', '2e4[m^2]', 'Surface reaction area');
model.param.set('vfp', '1[m^3/s]', 'Volumetric feed to the inlet');
model.param.set('Keq01', '2', 'Equilibrium constant reaction 1');
model.param.set('Keq02', '5', 'Equilibrium constant reaction 2');
model.param.set('CAmax_inlet', '5e-2[mol/m^3]', 'Maximum concentration A in inlet');
model.param.set('CBmax_inlet', '5e-2[mol/m^3]', 'Maximum concentration B in inlet');
model.param.set('CS0surf', '0.99e-5[mol/m^2]', 'Initial surface concentration S');
model.param.set('CH2O', '55600[mol/m^3]', 'Concentration solvent (water)');
model.param.set('G0', '1e-5[mol/m^2]', 'Initial site density of reactive surface');
model.param.set('MA', '0.2[kg/mol]', 'Molar mass protein A');
model.param.set('MB', '0.15[kg/mol]', 'Molar mass protein B');
model.param.set('MS', '0.058[kg/mol]', 'Molar mass S');
model.param.set('MH2O', '0.018[kg/mol]', 'Molar mass water');
model.param.set('rho_H2O', '1000[kg/m^3]', 'Density water');
model.param.set('rho_p', '1400[kg/m^3]', 'Density protein');
model.param.set('rho_S', '1000[kg/m^3]', 'Density S');
model.param.set('muH2O', '1e-3[Pa*s]', 'Dynamic viscosity water');
model.param.set('U_column', '1e-4[m/s]', 'Average fluid velocity within the ion-exchange column');

model.func.create('gp1', 'GaussianPulse');
model.func('gp1').set('location', 5);
model.func('gp1').set('sigma', 1.5);

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').set('pulse11', '3.76*gp1(t/1[s])');
model.variable('var1').descr('pulse11', 'Pulse with amplitude 1');

model.physics('re').prop('reactor').set('reactor', 'cstrvol');
model.physics('re').prop('mixture').set('mixture', 'liquid');
model.physics('re').create('rch1', 'ReactionChem', -1);
model.physics('re').feature('rch1').set('formula', 'S(ads)+A=S+A(ads)');
model.physics('re').feature('rch1').set('Keq0', 'Keq01');
model.physics('re').feature('S_surf').set('enableChemicalFormulaCheckbox', false);
model.physics('re').feature('S_surf').set('M', 'MS');
model.physics('re').feature('A').set('M', 'MA');
model.physics('re').feature('A').set('rho', 'rho_p');
model.physics('re').feature('S').set('enableChemicalFormulaCheckbox', false);
model.physics('re').feature('S').set('M', 'MS');
model.physics('re').feature('S').set('rho', 'rho_S');
model.physics('re').feature('A_surf').set('M', 'MA');
model.physics('re').create('rch2', 'ReactionChem', -1);
model.physics('re').feature('rch2').set('formula', 'S(ads)+B=S+B(ads)');
model.physics('re').feature('rch2').set('Keq0', 'Keq02');
model.physics('re').feature('B').set('enableChemicalFormulaCheckbox', false);
model.physics('re').feature('B').set('M', 'MB');
model.physics('re').feature('B').set('rho', 'rho_p');
model.physics('re').feature('B_surf').set('enableChemicalFormulaCheckbox', false);
model.physics('re').feature('B_surf').set('M', 'MB');
model.physics('re').prop('EquilibriumReactionProperty').set('PredefinedDependentSpecies', 'A(ads):B(ads)');
model.physics('re').prop('reactor').set('reactorparsource', 'UserDefined');
model.physics('re').prop('reactor').set('vp', 0);
model.physics('re').prop('reactor').set('Ar', 'Arsurf');
model.physics('re').feature('inits1').set('gamman0', 'G0');
model.physics('re').feature('inits1').setIndex('initialValues', 'CS0surf', 2, 0);
model.physics('re').create('feed1', 'FeedStream', -1);
model.physics('re').feature('feed1').set('vf', 'vfp');
model.physics('re').feature('feed1').setIndex('FeedSpeciesConcentration', 'CAmax_inlet*pulse11', 0, 0);
model.physics('re').feature('feed1').setIndex('FeedSpeciesConcentration', 'CBmax_inlet*pulse11', 1, 0);

model.study('std1').label('Study 1 - Space Independent');
model.study('std1').feature('time').set('tlist', 'range(0,0.1,14)');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.1,14)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('tout', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 1.0E-5);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('consistent', 'bweuler');
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').create('glob1', 'Global');
model.result('pg1').feature('glob1').set('expr', {'re.csurf_S_surf' 're.c_A' 're.c_S' 're.c_B' 're.csurf_A_surf' 're.csurf_B_surf'});
model.result('pg1').feature('glob1').set('descr', {'Surface concentration' 'Concentration' 'Concentration' 'Concentration' 'Surface concentration' 'Surface concentration'});
model.result('pg1').feature('glob1').set('unit', {'' '' '' '' '' ''});
model.result('pg1').feature('glob1').set('expr', {'re.csurf_S_surf' 're.c_A' 're.c_S' 're.c_B' 're.csurf_A_surf' 're.csurf_B_surf'});
model.result('pg1').feature('glob1').set('descr', {'Surface concentration' 'Concentration' 'Concentration' 'Concentration' 'Surface concentration' 'Surface concentration'});
model.result('pg1').label('Concentration (re)');
model.result('pg1').feature('glob1').set('xdatasolnumtype', 'level1');
model.result('pg1').run;
model.result('pg1').label('Concentrations 0D model');
model.result('pg1').set('titletype', 'none');
model.result('pg1').set('xlabelactive', true);
model.result('pg1').set('ylabelactive', true);
model.result('pg1').set('ylabel', 'Concentration (mol/m<sup>3</sup>) | Surface concentration (mol/m<sup>2</sup>)');
model.result('pg1').set('legendlayout', 'outside');
model.result('pg1').run;
model.result('pg1').feature('glob1').set('expr', {'re.c_A'});
model.result('pg1').feature('glob1').set('descr', {'Concentration'});
model.result('pg1').feature('glob1').set('unit', {'mol/m^3'});
model.result('pg1').feature('glob1').set('expr', {'re.c_A' 're.c_B'});
model.result('pg1').feature('glob1').set('descr', {'Concentration' 'Concentration'});
model.result('pg1').feature('glob1').set('expr', {'re.c_A' 're.c_B' 're.c_S'});
model.result('pg1').feature('glob1').set('descr', {'Concentration' 'Concentration' 'Concentration'});
model.result('pg1').feature('glob1').set('expr', {'re.c_A' 're.c_B' 're.c_S' 're.csurf_A_surf'});
model.result('pg1').feature('glob1').set('descr', {'Concentration' 'Concentration' 'Concentration' 'Surface concentration'});
model.result('pg1').feature('glob1').set('expr', {'re.c_A' 're.c_B' 're.c_S' 're.csurf_A_surf' 're.csurf_B_surf'});
model.result('pg1').feature('glob1').set('descr', {'Concentration' 'Concentration' 'Concentration' 'Surface concentration' 'Surface concentration'});
model.result('pg1').feature('glob1').set('expr', {'re.c_A' 're.c_B' 're.c_S' 're.csurf_A_surf' 're.csurf_B_surf' 're.csurf_S_surf'});
model.result('pg1').feature('glob1').set('descr', {'Concentration' 'Concentration' 'Concentration' 'Surface concentration' 'Surface concentration' 'Surface concentration'});
model.result('pg1').feature('glob1').setIndex('expr', 're.csurf_A_surf*1e4', 3);
model.result('pg1').feature('glob1').setIndex('descr', 'Surface concentration per square dm', 3);
model.result('pg1').feature('glob1').setIndex('expr', 're.csurf_B_surf*1e4', 4);
model.result('pg1').feature('glob1').setIndex('descr', 'Surface concentration per square dm', 4);
model.result('pg1').feature('glob1').setIndex('expr', 're.csurf_S_surf*1e4', 5);
model.result('pg1').feature('glob1').setIndex('descr', 'Surface concentration per square dm', 5);
model.result('pg1').feature('glob1').set('linewidth', 2);
model.result('pg1').feature('glob1').set('legendmethod', 'manual');
model.result('pg1').feature('glob1').setIndex('legends', 'A', 0);
model.result('pg1').feature('glob1').setIndex('legends', 'B', 1);
model.result('pg1').feature('glob1').setIndex('legends', 'S', 2);
model.result('pg1').feature('glob1').setIndex('legends', 'Surface A', 3);
model.result('pg1').feature('glob1').setIndex('legends', 'Surface B', 4);
model.result('pg1').feature('glob1').setIndex('legends', 'Surface S', 5);
model.result('pg1').run;

model.physics('re').create('spec1', 'SpeciesChem', -1);
model.physics('re').feature('spec1').set('specName', 'H2O');
model.physics('re').feature('H2O').set('sType', 'solvent');
model.physics('re').feature('H2O').set('M', 'MH2O');
model.physics('re').feature('H2O').set('rho', 'rho_H2O');
model.physics('re').feature('inits1').setIndex('initialValue', 'CH2O', 2, 0);
model.physics('re').prop('calcTransport').set('calcTransport', true);
model.physics('re').prop('calcTransport').set('dynamicViscositySel', 'UserDefined');
model.physics('re').prop('calcTransport').set('eta', 'muH2O');
model.physics('re').create('sync1', 'ReactionToMph', -1);
model.physics('re').feature('sync1').set('study', 'Transient');
model.physics('re').feature('sync1').set('momentumbalance', 'LaminarFlow');
model.physics('re').prop('synchronize').set('synchronize', '1');

model.modelNode.create('comp2', true);

model.physics('re').feature('sync1').set('model', {'comp2'});

model.geom.create('geom1', 3);
model.geom('geom1').model('comp2');
model.geom('geom1').axisymmetric(false);
model.geom('geom1').label('Geometry 1(3D)');

model.physics('re').feature('sync1').set('genom', {'geom1'});

model.mesh.create('mesh1', 'geom1');

model.study.create('std2');

model.physics('re').feature('sync1').set('studyname', {'std2'});

model.study('std2').create('time', 'Transient');

model.physics.create('chem1', 'Chemistry', 'geom1');
model.physics('chem1').model('comp2');
model.physics('re').feature('sync1').set('Chemistry', {'chem1'});
model.physics.create('tds', 'DilutedSpecies', 'geom1');
model.physics('tds').model('comp2');
model.physics('chem1').prop('TPFeatureInput').set('T_src', 'userdef');
model.physics('chem1').prop('TPFeatureInput').set('T', '293.15[K]');
model.physics('chem1').prop('mixture').set('mixture', 'liquid');
model.physics('chem1').prop('mixture').set('liquidDensitySel', 'Automatic');
model.physics('chem1').prop('Activity').set('useActivity', '0');
model.physics('chem1').prop('chemkin').set('chemkin', '0');
model.physics('chem1').prop('ChemistryCommonProperty').set('VolumetricConcentrationGlobalActivityStandardState', '1[mol/m^3]');
model.physics('chem1').prop('ChemistryCommonProperty').set('SurfaceSpeciesConcentrationType', 'SurfaceConcentration');
model.physics('chem1').prop('ChemistryCommonProperty').set('SurfaceGlobalActivityStandardState', '1[mol/m^2]');
model.physics('chem1').prop('ChemistryCommonProperty').set('SpeciesrateUserDefinedList', {'H2O'});
model.physics('chem1').prop('ChemistryCommonProperty').set('AdditionalSourceFeature', '0');
model.physics('chem1').prop('ActiveSpecies').set('SumActiveSpecies', '7');
model.physics('chem1').prop('ActiveSpecies').set('NumActiveVolumeSpecies', '4');
model.physics('chem1').prop('ActiveSpecies').set('NumActiveSurfaceSpecies', '3');
model.physics('chem1').prop('ActiveSpecies').set('NumActiveSurfaceSpeciesVariable', '3');
model.physics('chem1').prop('ActiveSpecies').set('surface', '1');
model.physics('chem1').prop('solventIsSet').set('solventIsSet', '1');
model.physics('chem1').prop('solventIsSet').set('solventTag', 'H2O');
model.physics('chem1').prop('calcTransport').set('etaRef', '1.787E-3[Pa*s]');
model.physics('chem1').prop('calcTransport').set('Tref', '273[K]');
model.physics('chem1').prop('calcTransport').set('dynamicViscositySel', 'UserDefined');
model.physics('chem1').prop('calcTransport').set('eta', 'muH2O');
model.physics('chem1').prop('ChemistryModelInputParameter').set('massbalance', {'tds'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('hasEquilMassBalance', '1');
model.physics('chem1').create('rch1', 'ReactionChem');
model.physics('chem1').feature('rch1').set('rSequenceNo', '1');
model.physics('chem1').feature('rch1').set('formula', 'S(ads) + A = S + A(ads)');
model.physics('chem1').feature('rch1').set('updatechem', '0');
model.physics('chem1').feature('rch1').set('EquilibriumConstantSettings', 'UserDefined');
model.physics('chem1').feature('rch1').set('Keq0', 'Keq01');
model.physics('chem1').feature('rch1').label('1: Surface: S(ads) + A = S + A(ads)');
model.physics('chem1').feature('rch1').set('rClass', 'surface');
model.physics('chem1').create('rch2', 'ReactionChem');
model.physics('chem1').feature('rch2').set('rSequenceNo', '2');
model.physics('chem1').feature('rch2').set('formula', 'S(ads) + B = S + B(ads)');
model.physics('chem1').feature('rch2').set('updatechem', '0');
model.physics('chem1').feature('rch2').set('EquilibriumConstantSettings', 'UserDefined');
model.physics('chem1').feature('rch2').set('Keq0', 'Keq02');
model.physics('chem1').feature('rch2').label('2: Surface: S(ads) + B = S + B(ads)');
model.physics('chem1').feature('rch2').set('rClass', 'surface');
model.physics('chem1').feature('S_surf').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('S_surf').set('sisDef', '1');
model.physics('chem1').feature('S_surf').set('specLabel', 'S(ads)');
model.physics('chem1').feature('S_surf').set('speciesNameInput', 'S(ads)');
model.physics('chem1').feature('S_surf').set('specName', 'S(ads)');
model.physics('chem1').feature('S_surf').set('enableChemicalFormulaCheckbox', '0');
model.physics('chem1').feature('S_surf').set('chemicalFormula', 'S(ads)');
model.physics('chem1').feature('S_surf').set('sType', 'surface');
model.physics('chem1').feature('S_surf').set('M', 'MS');
model.physics('chem1').feature('S_surf').set('z', '0');
model.physics('chem1').feature('S_surf').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('S_surf').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('S_surf').set('mu', '0[C*m]');
model.physics('chem1').feature('S_surf').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('S_surf').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('S_surf').set('ActivityCoefficient', '1');
model.physics('chem1').feature('S_surf').set('cLock', '0');
model.physics('chem1').feature('S_surf').set('Dependent', '0');
model.physics('chem1').feature('S_surf').set('dependent', '2');
model.physics('chem1').feature('S_surf').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('S_surf').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('S_surf').set('Tlo', '300[K]');
model.physics('chem1').feature('S_surf').set('Tmid', '1000[K]');
model.physics('chem1').feature('S_surf').set('Thi', '5000[K]');
model.physics('chem1').feature('S_surf').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('S_surf').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('S_surf').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('S_surf').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('S_surf').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('S_surf').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('S_surf').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('S_surf').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('S_surf').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('S_surf').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('S_surf').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('S_surf').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('S_surf').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('S_surf').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').feature('A').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('A').set('sisDef', '1');
model.physics('chem1').feature('A').set('specLabel', 'A');
model.physics('chem1').feature('A').set('speciesNameInput', 'A');
model.physics('chem1').feature('A').set('specName', 'A');
model.physics('chem1').feature('A').set('enableChemicalFormulaCheckbox', '0');
model.physics('chem1').feature('A').set('chemicalFormula', '');
model.physics('chem1').feature('A').set('sType', 'volumetric');
model.physics('chem1').feature('A').set('M', 'MA');
model.physics('chem1').feature('A').set('z', '0');
model.physics('chem1').feature('A').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('A').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('A').set('mu', '0[C*m]');
model.physics('chem1').feature('A').set('rho', 'rho_p');
model.physics('chem1').feature('A').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('A').set('ActivityCoefficient', '1');
model.physics('chem1').feature('A').set('cLock', '0');
model.physics('chem1').feature('A').set('Dependent', '0');
model.physics('chem1').feature('A').set('dependent', '0');
model.physics('chem1').feature('A').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('A').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('A').set('Tlo', '300[K]');
model.physics('chem1').feature('A').set('Tmid', '1000[K]');
model.physics('chem1').feature('A').set('Thi', '5000[K]');
model.physics('chem1').feature('A').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('A').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('A').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('A').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('A').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('A').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('A').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('A').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('A').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('A').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('A').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('A').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('A').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('A').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').feature('S').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('S').set('sisDef', '1');
model.physics('chem1').feature('S').set('specLabel', 'S');
model.physics('chem1').feature('S').set('speciesNameInput', 'S');
model.physics('chem1').feature('S').set('specName', 'S');
model.physics('chem1').feature('S').set('enableChemicalFormulaCheckbox', '0');
model.physics('chem1').feature('S').set('chemicalFormula', 'S');
model.physics('chem1').feature('S').set('sType', 'volumetric');
model.physics('chem1').feature('S').set('M', 'MS');
model.physics('chem1').feature('S').set('z', '0');
model.physics('chem1').feature('S').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('S').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('S').set('mu', '0[C*m]');
model.physics('chem1').feature('S').set('rho', 'rho_S');
model.physics('chem1').feature('S').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('S').set('ActivityCoefficient', '1');
model.physics('chem1').feature('S').set('cLock', '0');
model.physics('chem1').feature('S').set('Dependent', '0');
model.physics('chem1').feature('S').set('dependent', '0');
model.physics('chem1').feature('S').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('S').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('S').set('Tlo', '300[K]');
model.physics('chem1').feature('S').set('Tmid', '1000[K]');
model.physics('chem1').feature('S').set('Thi', '5000[K]');
model.physics('chem1').feature('S').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('S').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('S').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('S').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('S').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('S').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('S').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('S').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('S').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('S').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('S').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('S').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('S').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('S').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').feature('A_surf').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('A_surf').set('sisDef', '1');
model.physics('chem1').feature('A_surf').set('specLabel', 'A(ads)');
model.physics('chem1').feature('A_surf').set('speciesNameInput', 'A(ads)');
model.physics('chem1').feature('A_surf').set('specName', 'A(ads)');
model.physics('chem1').feature('A_surf').set('enableChemicalFormulaCheckbox', '0');
model.physics('chem1').feature('A_surf').set('chemicalFormula', '');
model.physics('chem1').feature('A_surf').set('sType', 'surface');
model.physics('chem1').feature('A_surf').set('M', 'MA');
model.physics('chem1').feature('A_surf').set('z', '0');
model.physics('chem1').feature('A_surf').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('A_surf').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('A_surf').set('mu', '0[C*m]');
model.physics('chem1').feature('A_surf').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('A_surf').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('A_surf').set('ActivityCoefficient', '1');
model.physics('chem1').feature('A_surf').set('cLock', '0');
model.physics('chem1').feature('A_surf').set('Dependent', '1');
model.physics('chem1').feature('A_surf').set('dependent', '3');
model.physics('chem1').feature('A_surf').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('A_surf').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('A_surf').set('Tlo', '300[K]');
model.physics('chem1').feature('A_surf').set('Tmid', '1000[K]');
model.physics('chem1').feature('A_surf').set('Thi', '5000[K]');
model.physics('chem1').feature('A_surf').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('A_surf').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('A_surf').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('A_surf').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('A_surf').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('A_surf').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('A_surf').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('A_surf').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('A_surf').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('A_surf').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('A_surf').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('A_surf').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('A_surf').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('A_surf').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').feature('B').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('B').set('sisDef', '1');
model.physics('chem1').feature('B').set('specLabel', 'B');
model.physics('chem1').feature('B').set('speciesNameInput', 'B');
model.physics('chem1').feature('B').set('specName', 'B');
model.physics('chem1').feature('B').set('enableChemicalFormulaCheckbox', '0');
model.physics('chem1').feature('B').set('chemicalFormula', 'B');
model.physics('chem1').feature('B').set('sType', 'volumetric');
model.physics('chem1').feature('B').set('M', 'MB');
model.physics('chem1').feature('B').set('z', '0');
model.physics('chem1').feature('B').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('B').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('B').set('mu', '0[C*m]');
model.physics('chem1').feature('B').set('rho', 'rho_p');
model.physics('chem1').feature('B').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('B').set('ActivityCoefficient', '1');
model.physics('chem1').feature('B').set('cLock', '0');
model.physics('chem1').feature('B').set('Dependent', '0');
model.physics('chem1').feature('B').set('dependent', '0');
model.physics('chem1').feature('B').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('B').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('B').set('Tlo', '300[K]');
model.physics('chem1').feature('B').set('Tmid', '1000[K]');
model.physics('chem1').feature('B').set('Thi', '5000[K]');
model.physics('chem1').feature('B').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('B').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('B').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('B').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('B').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('B').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('B').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('B').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('B').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('B').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('B').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('B').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('B').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('B').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').feature('B_surf').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('B_surf').set('sisDef', '1');
model.physics('chem1').feature('B_surf').set('specLabel', 'B(ads)');
model.physics('chem1').feature('B_surf').set('speciesNameInput', 'B(ads)');
model.physics('chem1').feature('B_surf').set('specName', 'B(ads)');
model.physics('chem1').feature('B_surf').set('enableChemicalFormulaCheckbox', '0');
model.physics('chem1').feature('B_surf').set('chemicalFormula', 'B(ads)');
model.physics('chem1').feature('B_surf').set('sType', 'surface');
model.physics('chem1').feature('B_surf').set('M', 'MB');
model.physics('chem1').feature('B_surf').set('z', '0');
model.physics('chem1').feature('B_surf').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('B_surf').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('B_surf').set('mu', '0[C*m]');
model.physics('chem1').feature('B_surf').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('B_surf').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('B_surf').set('ActivityCoefficient', '1');
model.physics('chem1').feature('B_surf').set('cLock', '0');
model.physics('chem1').feature('B_surf').set('Dependent', '1');
model.physics('chem1').feature('B_surf').set('dependent', '3');
model.physics('chem1').feature('B_surf').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('B_surf').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('B_surf').set('Tlo', '300[K]');
model.physics('chem1').feature('B_surf').set('Tmid', '1000[K]');
model.physics('chem1').feature('B_surf').set('Thi', '5000[K]');
model.physics('chem1').feature('B_surf').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('B_surf').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('B_surf').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('B_surf').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('B_surf').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('B_surf').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('B_surf').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('B_surf').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('B_surf').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('B_surf').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('B_surf').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('B_surf').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('B_surf').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('B_surf').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').create('H2O', 'SpeciesChem');
model.physics('chem1').feature('H2O').set('SpeciesSource', 'FreeSpecies');
model.physics('chem1').feature('H2O').set('sisDef', '1');
model.physics('chem1').feature('H2O').set('specLabel', 'H2O');
model.physics('chem1').feature('H2O').set('speciesNameInput', 'H2O');
model.physics('chem1').feature('H2O').set('specName', 'H2O');
model.physics('chem1').feature('H2O').set('enableChemicalFormulaCheckbox', '1');
model.physics('chem1').feature('H2O').set('chemicalFormula', 'H2O');
model.physics('chem1').feature('H2O').label('Species: H2O');
model.physics('chem1').feature('H2O').active(true);
model.physics('chem1').feature('H2O').set('sType', 'solvent');
model.physics('chem1').feature('H2O').set('M', 'MH2O');
model.physics('chem1').feature('H2O').set('z', '0');
model.physics('chem1').feature('H2O').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('H2O').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('H2O').set('mu', '0[C*m]');
model.physics('chem1').feature('H2O').set('rho', 'rho_H2O');
model.physics('chem1').feature('H2O').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('H2O').set('ActivityCoefficient', '1');
model.physics('chem1').feature('H2O').set('cLock', '1');
model.physics('chem1').feature('H2O').set('Dependent', '0');
model.physics('chem1').feature('H2O').set('dependent', '0');
model.physics('chem1').feature('H2O').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('H2O').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('H2O').set('Tlo', '300[K]');
model.physics('chem1').feature('H2O').set('Tmid', '1000[K]');
model.physics('chem1').feature('H2O').set('Thi', '5000[K]');
model.physics('chem1').feature('H2O').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('H2O').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('H2O').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('H2O').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('H2O').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('H2O').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('H2O').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('H2O').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('H2O').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('H2O').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('H2O').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('H2O').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('H2O').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('H2O').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').prop('simpropChem').set('rSequenceNo', '2');
model.physics('chem1').prop('simpropChem').set('sSequenceNo', '7');
model.physics('chem1').prop('mixture').set('hasPropertyPackage', '0');
model.physics('chem1').prop('mixture').set('PropertyPackage', '');
model.physics('chem1').prop('mixture').set('Thermodynamics', '0');
model.physics('tds').field('concentration').component({'cA' 'cB' 'cS'});
model.physics('tds').feature('init1').set('initc', {'0' '0' '0'});
model.physics('tds').feature.create('reac1', 'Reactions');
model.physics('tds').feature('reac1').selection.all;
model.physics('tds').feature('reac1').set('ReactingVolumeType', 'TotalVolume');
model.physics('tds').feature.create('in1', 'Inflow');
model.physics('tds').feature('in1').setIndex('c0', 'CAmax_inlet*pulse11', 0);
model.physics('tds').feature('in1').setIndex('c0', 'CBmax_inlet*pulse11', 1);
model.physics('tds').feature('in1').setIndex('c0', '0', 2);
model.physics('tds').feature.create('out1', 'Outflow');
model.physics('tds').feature.create('seqreac1', 'SurfaceEquilibriumReaction');
model.physics('tds').feature('seqreac1').set('EquilibriumCondition', 'UserDefined');
model.physics('tds').feature('seqreac1').set('Eqexpr0', 'chem.equ_expr_1');
model.physics('tds').feature('seqreac1').selection.all;
model.physics('tds').feature('seqreac1').set('nu', {'-1' '0' '1'});
model.physics('tds').feature.create('seqreac2', 'SurfaceEquilibriumReaction');
model.physics('tds').feature('seqreac2').set('EquilibriumCondition', 'UserDefined');
model.physics('tds').feature('seqreac2').set('Eqexpr0', 'chem.equ_expr_2');
model.physics('tds').feature('seqreac2').selection.all;
model.physics('tds').feature('seqreac2').set('nu', {'0' '-1' '1'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('reactionRate', {'tds.Rseq_seqreac1' 'tds.Rseq_seqreac2'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('MassTransfer', 'tds');
model.physics('chem1').prop('ChemistryModelInputParameter').set('ConcentrationInput', {'cA' 'cB' 'UserDefined' 'cS'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('ConcentrationValue', {'Solved for' 'Solved for' 'CH2O' 'Solved for'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('uselog', {'cA' 'cB' 'CH2O' 'cS'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('SolidConcentration', {});
model.physics('chem1').prop('ChemistryModelInputParameter').set('csurf', {'cA_surf' 'cB_surf' 'cS_surf'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('AqueousSpeciesConcentration', {});
model.physics('tds').feature('sp1').set('z', {'0' '0' '0'});
model.physics('tds').feature('cdm1').set('DiffusionCoefficientSource', 'chem');
model.physics('tds').feature('cdm1').set('Dchem_cA_src', 'root.comp2.chem.DXX_A');
model.physics('tds').feature('cdm1').set('Dchem_cB_src', 'root.comp2.chem.DXX_B');
model.physics('tds').feature('cdm1').set('Dchem_cS_src', 'root.comp2.chem.DXX_S');
model.physics('tds').feature('reac1').setIndex('R_cA_src', 'root.comp2.chem.R_A', 0);
model.physics('tds').feature('reac1').setIndex('R_cB_src', 'root.comp2.chem.R_B', 0);
model.physics('tds').feature('reac1').setIndex('R_cS_src', 'root.comp2.chem.R_S', 0);
model.physics.create('sr1', 'SurfaceReactions', 'geom1');
model.physics('sr1').model('comp2');
model.physics('sr1').field('surfaceconcentration').component({'cs_A' 'cs_B' 'cs_S'});
model.physics('sr1').feature('sp1').set('Gamma', 'G0');
model.physics('sr1').feature('sp1').set('Sigma', {'1' '1' '1'});
model.physics('sr1').feature('init1').set('initcs', {'0' '0' 'CS0surf'});
model.physics('sr1').create('reac1', 'Reactions');
model.physics('sr1').feature('reac1').setIndex('Rs_cs_A_src', 'root.comp2.chem.R_A_surf', 0);
model.physics('sr1').feature('reac1').setIndex('Rs_cs_B_src', 'root.comp2.chem.R_B_surf', 0);
model.physics('sr1').feature('reac1').setIndex('Rs_cs_S_src', 'root.comp2.chem.R_S_surf', 0);
model.physics('chem1').prop('ChemistryModelInputParameter').set('ConcentrationInput', {'cA' 'cB' 'UserDefined' 'cS'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('ConcentrationValue', {'Solved for' 'Solved for' 'CH2O' 'Solved for'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('uselog', {'cA' 'cB' 'CH2O' 'cS'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('SolidConcentration', {});
model.physics('chem1').prop('ChemistryModelInputParameter').set('csurf', {'cs_A' 'cs_B' 'cs_S'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('AqueousSpeciesConcentration', {});
model.physics.create('spf1', 'LaminarFlow', 'geom1');
model.physics('spf1').model('comp2');
model.physics('spf1').prop('PhysicalModelProperty').set('Compressibility', 'Incompressible');
model.physics('spf1').feature.create('inl1', 'InletBoundary');
model.physics('spf1').feature('inl1').set('BoundaryCondition', 'Velocity');
model.physics('spf1').feature('inl1').set('ComponentWise', 'NormalInflowVelocity');
model.physics('spf1').feature.create('out1', 'OutletBoundary');
model.physics('re').feature('sync1').set('geomToUse', 'geom1');
model.physics('re').feature('sync1').set('massbalance', 'tds');
model.physics('tds').feature('cdm1').set('u_src', 'root.comp2.u');
model.physics('tds').feature('cdm1').set('minput_pressure_src', 'root.comp2.spf.pA');
model.physics('re').feature('sync1').set('momentumbalance', 'spf1');
model.physics('spf1').feature('fp1').set('mu_mat', 'root.comp2.chem.eta');
model.physics('chem1').prop('TPFeatureInput').set('p_src', 'root.comp2.spf.pA');
model.physics('spf1').feature('fp1').set('rho_mat', 'root.comp2.chem.rho');
model.physics('re').feature('sync1').set('genom', {'geom1'});
model.physics('re').feature('sync1').set('studyname', {'std2'});
model.physics('chem1').prop('StudyStep').set('StudyStep', 'std2/time');
model.physics('chem1').feature('dcont1').set('StudyStep', 'std2/time');
model.physics('chem1').feature('rch1').set('StudyStep', 'std2/time');
model.physics('chem1').feature('S_surf').set('StudyStep', 'std2/time');
model.physics('chem1').feature('A').set('StudyStep', 'std2/time');
model.physics('chem1').feature('S').set('StudyStep', 'std2/time');
model.physics('chem1').feature('A_surf').set('StudyStep', 'std2/time');
model.physics('chem1').feature('rch2').set('StudyStep', 'std2/time');
model.physics('chem1').feature('B').set('StudyStep', 'std2/time');
model.physics('chem1').feature('B_surf').set('StudyStep', 'std2/time');
model.physics('chem1').feature('H2O').set('StudyStep', 'std2/time');
model.physics('tds').prop('StudyStep').set('StudyStep', 'std2/time');
model.physics('tds').feature('sp1').set('StudyStep', 'std2/time');
model.physics('tds').feature('cdm1').set('StudyStep', 'std2/time');
model.physics('tds').feature('nflx1').set('StudyStep', 'std2/time');
model.physics('tds').feature('init1').set('StudyStep', 'std2/time');
model.physics('tds').feature('dcont1').set('StudyStep', 'std2/time');
model.physics('tds').feature('reac1').set('StudyStep', 'std2/time');
model.physics('tds').feature('in1').set('StudyStep', 'std2/time');
model.physics('tds').feature('out1').set('StudyStep', 'std2/time');
model.physics('tds').feature('seqreac1').set('StudyStep', 'std2/time');
model.physics('tds').feature('seqreac2').set('StudyStep', 'std2/time');
model.physics('spf1').prop('StudyStep').set('StudyStep', 'std2/time');
model.physics('spf1').feature('fp1').set('StudyStep', 'std2/time');
model.physics('spf1').feature('init1').set('StudyStep', 'std2/time');
model.physics('spf1').feature('wallbc1').set('StudyStep', 'std2/time');
model.physics('spf1').feature('grav1').set('StudyStep', 'std2/time');
model.physics('spf1').feature('dcont1').set('StudyStep', 'std2/time');
model.physics('spf1').feature('inl1').set('StudyStep', 'std2/time');
model.physics('spf1').feature('out1').set('StudyStep', 'std2/time');

model.study('std1').feature('time').setSolveFor('/physics/chem1', false);
model.study('std1').feature('time').setSolveFor('/physics/tds', false);
model.study('std1').feature('time').setSolveFor('/physics/sr1', false);
model.study('std1').feature('time').setSolveFor('/physics/spf1', false);
model.study('std2').feature('time').setSolveFor('/physics/re', false);

model.geom('geom1').insertFile('protein_adsorption_geom_sequence.mph', 'geom1');
model.geom('geom1').run('sel4');

model.physics('tds').feature('init1').setIndex('initc', 'CAmax_inlet*0.01', 0);
model.physics('tds').feature('init1').setIndex('initc', 'CBmax_inlet*0.01', 1);
model.physics('tds').feature('init1').setIndex('initc', '1e-7', 2);
model.physics('tds').feature('in1').selection.named('geom1_sel2');
model.physics('tds').feature('in1').setIndex('c0', 'CAmax_inlet', 0);
model.physics('tds').feature('in1').setIndex('c0', 'CBmax_inlet', 1);
model.physics('tds').feature('in1').set('BoundaryConditionType', 'FluxDanckwerts');
model.physics('tds').feature('out1').selection.named('geom1_sel3');
model.physics('tds').feature('seqreac1').selection.named('geom1_arr1_bnd');
model.physics('tds').feature('seqreac2').selection.named('geom1_arr1_bnd');
model.physics('sr1').selection.named('geom1_arr1_bnd');
model.physics('sr1').feature('reac1').selection.named('geom1_arr1_bnd');
model.physics('sr1').feature('init1').setIndex('initcs', 'CS0surf*0.01', 0);
model.physics('sr1').feature('init1').setIndex('initcs', 'CS0surf*0.01', 1);
model.physics('spf1').feature('inl1').selection.named('geom1_sel2');
model.physics('spf1').feature('inl1').set('BoundaryCondition', 'Pressure');
model.physics('spf1').feature('out1').selection.named('geom1_sel3');
model.physics('spf1').feature('out1').set('BoundaryCondition', 'Velocity');
model.physics('spf1').feature('out1').set('U0out', 'U_column');
model.physics('spf1').create('sym1', 'Symmetry', 2);
model.physics('spf1').feature('sym1').selection.named('geom1_sel4');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp2');
model.selection('sel1').geom(2);
model.selection('sel1').label('Walls');
model.selection('sel1').set([5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213]);

model.multiphysics.create('rfd1', 'ReactingFlowDS', 'geom1', 3);

model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.named('geom1_arr1_bnd');
model.mesh('mesh1').feature('ftri1').create('size1', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('ftri1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('ftri1').feature('size1').set('hmax', '9E-2');
model.mesh('mesh1').create('ftet1', 'FreeTet');
model.mesh('mesh1').feature('ftet1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('ftet1').selection.all;
model.mesh('mesh1').feature('ftet1').create('size1', 'Size');
model.mesh('mesh1').feature('ftet1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('ftet1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('ftet1').feature('size1').set('hmax', '5E-1');

model.study('std2').label('Study 2 - Space Dependent');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').label('Stationary - Laminar Flow');
model.study('std2').feature('stat').setEntry('activate', 'chem1', false);
model.study('std2').feature('stat').setEntry('activate', 'tds', false);
model.study('std2').feature('stat').setEntry('activate', 'sr1', false);
model.study('std2').feature('time').label('Time Dependent - the Rest of the Interfaces');
model.study('std2').feature('time').set('tlist', 'range(0,1,30)');
model.study('std2').feature('time').set('usertol', true);
model.study('std2').feature('time').set('rtol', '2e-4');
model.study('std2').feature('time').setEntry('activate', 'spf1', false);
model.study('std2').feature.move('stat', 0);

model.sol.create('sol2');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol2').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol2').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol2').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol2').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol2').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol2').feature('s1').feature('i1').label('AMG, fluid flow variables (spf1)');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s1').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s1').feature('d1').label('Direct, fluid flow variables (spf1)');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol2').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol2').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol2').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').create('su1', 'StoreSolution');
model.sol('sol2').create('st2', 'StudyStep');
model.sol('sol2').feature('st2').set('study', 'std2');
model.sol('sol2').feature('st2').set('studystep', 'time');
model.sol('sol2').create('v2', 'Variables');
model.sol('sol2').feature('v2').feature('comp2_tds_seqreac1_Rseq').set('scalemethod', 'manual');
model.sol('sol2').feature('v2').feature('comp2_tds_seqreac2_Rseq').set('scalemethod', 'manual');
model.sol('sol2').feature('v2').feature('comp2_tds_seqreac1_Rseq').set('scaleval', '1');
model.sol('sol2').feature('v2').feature('comp2_tds_seqreac2_Rseq').set('scaleval', '1');
model.sol('sol2').feature('v2').set('initmethod', 'sol');
model.sol('sol2').feature('v2').set('initsol', 'sol2');
model.sol('sol2').feature('v2').set('initsoluse', 'sol3');
model.sol('sol2').feature('v2').set('notsolmethod', 'sol');
model.sol('sol2').feature('v2').set('notsol', 'sol2');
model.sol('sol2').feature('v2').set('notsoluse', 'sol3');
model.sol('sol2').feature('v2').set('control', 'time');
model.sol('sol2').create('t1', 'Time');
model.sol('sol2').feature('t1').set('tlist', 'range(0,1,30)');
model.sol('sol2').feature('t1').set('plot', 'off');
model.sol('sol2').feature('t1').set('plotgroup', 'pg1');
model.sol('sol2').feature('t1').set('plotfreq', 'tout');
model.sol('sol2').feature('t1').set('probesel', 'all');
model.sol('sol2').feature('t1').set('probes', {});
model.sol('sol2').feature('t1').set('probefreq', 'tsteps');
model.sol('sol2').feature('t1').set('rtol', 0.005);
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol2').feature('t1').set('reacf', true);
model.sol('sol2').feature('t1').set('storeudot', true);
model.sol('sol2').feature('t1').set('endtimeinterpolation', true);
model.sol('sol2').feature('t1').set('maxorder', 2);
model.sol('sol2').feature('t1').set('stabcntrl', true);
model.sol('sol2').feature('t1').set('control', 'time');
model.sol('sol2').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('t1').create('se1', 'Segregated');
model.sol('sol2').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol2').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol2').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp2_cs_A' 'comp2_cs_B' 'comp2_cs_S'});
model.sol('sol2').feature('t1').feature('se1').feature('ss1').set('subdamp', 0.8);
model.sol('sol2').feature('t1').feature('se1').feature('ss1').set('subjtech', 'once');
model.sol('sol2').feature('t1').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol2').feature('t1').feature('se1').feature('ss1').label('Surface Concentrations');
model.sol('sol2').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp2_cA' 'comp2_cB' 'comp2_cS' 'comp2_tds_seqreac1_Rseq' 'comp2_tds_seqreac2_Rseq'});
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('subdamp', 0.8);
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('subjtech', 'once');
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('subtermconst', 'iter');
model.sol('sol2').feature('t1').create('d2', 'Direct');
model.sol('sol2').feature('t1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t1').feature('d2').label('Direct, concentrations (tds)');
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol2').feature('t1').feature('se1').feature('ss2').label('Concentrations');
model.sol('sol2').feature('t1').feature('se1').set('maxsegiter', 10);
model.sol('sol2').feature('t1').feature('se1').set('segstabacc', 'segaacc');
model.sol('sol2').feature('t1').feature('se1').set('segaaccdim', 5);
model.sol('sol2').feature('t1').feature('se1').set('segaaccdelay', 0);
model.sol('sol2').feature('t1').feature('se1').set('segaaccmix', 0.9);
model.sol('sol2').feature('t1').create('i1', 'Iterative');
model.sol('sol2').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol2').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol2').feature('t1').feature('i1').set('maxlinit', 50);
model.sol('sol2').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol2').feature('t1').feature('i1').label('AMG, concentrations (tds)');
model.sol('sol2').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', false);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').create('va1', 'Vanka');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('va1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('va1').set('iter', 1);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('va1').set('vankavars', {'comp2_tds_seqreac1_Rseq' 'comp2_tds_seqreac2_Rseq'});
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('va1').set('vankasolv', 'stored');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('va1').set('approxvanka', true);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('va1').set('vankadirectmaxsize', 1000);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('va1').set('seconditer', 1);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('va1').set('relax', 0.5);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').create('va1', 'Vanka');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('va1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('va1').set('iter', 1);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('va1').set('vankavars', {'comp2_tds_seqreac1_Rseq' 'comp2_tds_seqreac2_Rseq'});
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('va1').set('vankasolv', 'stored');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('va1').set('approxvanka', true);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('va1').set('vankadirectmaxsize', 1000);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('va1').set('seconditer', 2);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('va1').set('relax', 0.5);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'manual');
model.sol('sol2').feature('t1').set('atolglobal', '1e-4');
model.sol('sol2').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('t1').feature('fc1').set('linsolver', 'dDef');

model.study('std2').setGenPlots(false);

model.sol('sol2').runAll;

model.result.dataset.create('sec1', 'Sector3D');
model.result.dataset('sec1').set('sectors', 4);
model.result.dataset.duplicate('sec2', 'sec1');
model.result.dataset('sec2').set('include', 'manual');
model.result.dataset('sec2').set('sectorsinclude', 3);
model.result.dataset('sec2').set('startsector', 3);
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').run;
model.result('pg2').label('Bulk concentration B, 5 s');
model.result('pg2').setIndex('looplevel', 6, 0);
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('data', 'sec1');
model.result('pg2').feature('surf1').setIndex('looplevel', 6, 0);
model.result('pg2').feature('surf1').set('expr', 'cB');
model.result('pg2').feature('surf1').set('descr', 'Concentration');

model.view('view1').set('showgrid', false);

model.result('pg2').run;
model.result('pg2').run;
model.result.duplicate('pg3', 'pg2');
model.result('pg3').run;
model.result('pg3').label('Bulk concentration B, 30 s');
model.result('pg3').setIndex('looplevel', 31, 0);
model.result('pg3').run;
model.result('pg3').feature('surf1').set('data', 'sec2');
model.result('pg3').feature('surf1').setIndex('looplevel', 31, 0);
model.result('pg3').run;
model.result('pg3').run;
model.result.duplicate('pg4', 'pg3');
model.result('pg4').run;
model.result('pg4').label('Surface concentration B, 5 s');
model.result('pg4').setIndex('looplevel', 6, 0);
model.result('pg4').run;
model.result('pg4').feature('surf1').set('data', 'sec1');
model.result('pg4').feature('surf1').setIndex('looplevel', 6, 0);
model.result('pg4').feature('surf1').set('expr', 'cs_B');
model.result('pg4').feature('surf1').set('descr', 'Surface concentration');

model.view('view1').set('transparency', true);

model.result('pg4').run;
model.result('pg4').run;
model.result.duplicate('pg5', 'pg4');
model.result('pg5').run;
model.result('pg5').label('Surface concentration B, 30 s');
model.result('pg5').setIndex('looplevel', 31, 0);
model.result('pg5').run;
model.result('pg5').feature('surf1').set('data', 'sec2');
model.result('pg5').feature('surf1').setIndex('looplevel', 31, 0);

model.view('view1').set('transparency', false);

model.result('pg5').run;
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').run;
model.result('pg6').label('Velocity field');
model.result('pg6').set('titletype', 'custom');
model.result('pg6').set('typeintitle', false);
model.result('pg6').set('descriptionintitle', false);
model.result('pg6').set('unitintitle', false);
model.result('pg6').set('edges', false);
model.result('pg6').set('showlegendsunit', true);
model.result('pg6').create('str1', 'Streamline');
model.result('pg6').feature('str1').set('expr', {'u' 'v' 'w'});
model.result('pg6').feature('str1').set('descr', 'Velocity field');
model.result('pg6').feature('str1').set('posmethod', 'magnitude');
model.result('pg6').feature('str1').set('mdist', [0.03 0.05]);
model.result('pg6').feature('str1').set('pointtype', 'arrow');
model.result('pg6').feature('str1').set('linetype', 'tube');
model.result('pg6').feature('str1').create('col1', 'Color');
model.result('pg6').run;
model.result('pg6').feature('str1').feature('col1').set('expr', 'spf.U');
model.result('pg6').feature('str1').feature('col1').set('descr', 'Velocity magnitude');
model.result('pg6').run;
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('coloring', 'gradient');
model.result('pg6').feature('surf1').set('topcolor', 'custom');
model.result('pg6').feature('surf1').set('customtopcolor', [0.6509804129600525 0.8392156958580017 0.8156862854957581]);
model.result('pg6').feature('surf1').set('bottomcolor', 'custom');
model.result('pg6').feature('surf1').set('custombottomcolor', [1 0.6274510025978088 0.47843137383461]);
model.result('pg6').feature('surf1').create('sel1', 'Selection');
model.result('pg6').feature('surf1').feature('sel1').selection.named('sel1');
model.result('pg6').run;

model.title('Protein Adsorption');

model.description('This example studies adsorption of two proteins in an ion-exchange column. The adsorption is described by equilibrium reactions. First, the kinetics are studied in a 0D model with the Reaction Engineering interface. Second, a 3D model is used to examine the adsorption within the porous structure of the ion-exchange mass.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;

model.label('protein_adsorption.mph');

model.modelNode.label('Components');

out = model;
