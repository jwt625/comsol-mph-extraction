function out = model
%
% journal_bearing_dynamic_coefficients.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Rotordynamics_Module/Verification_Examples');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('hdb', 'HydrodynamicBearing', 'geom1');
model.physics('hdb').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/hdb', true);

model.param.set('Rj', '0.1[m]');
model.param.descr('Rj', 'Journal radius');
model.param.set('H', '0.04[m]');
model.param.descr('H', 'Journal width');
model.param.set('C', '1e-4[m]');
model.param.descr('C', 'Clearance');
model.param.set('Omega', '1000[rad/s]');
model.param.descr('Omega', 'Angular velocity');
model.param.set('mu0', '0.02[Pa*s]');
model.param.descr('mu0', 'Lubricant viscosity');
model.param.set('rho0', '866[kg/m^3]');
model.param.descr('rho0', 'Lubricant density');
model.param.set('W', '500[N]');
model.param.descr('W', 'Static load on bearing');

model.geom('geom1').create('cyl1', 'Cylinder');
model.geom('geom1').feature('cyl1').set('type', 'surface');
model.geom('geom1').feature('cyl1').set('r', 'Rj');
model.geom('geom1').feature('cyl1').set('h', 'H');
model.geom('geom1').feature('cyl1').set('axistype', 'x');
model.geom('geom1').runPre('fin');

model.variable.create('var1');
model.variable('var1').model('comp1');

model.geom('geom1').run;

model.variable('var1').set('k0', 'W/C');
model.variable('var1').descr('k0', 'Stiffness scaling');
model.variable('var1').set('c0', 'W/(C*Omega)');
model.variable('var1').descr('c0', 'Damping scaling');
model.variable('var1').set('e', 'hdb.hjb1.ec_rel');
model.variable('var1').descr('e', 'Eccentricity');
model.variable('var1').set('phi0', 'atan2(pi*sqrt(1-e^2),4*e)');
model.variable('var1').descr('phi0', 'Attitude angle');
model.variable('var1').set('Q', '(pi^2+(16-pi^2)*e^2)^1.5');
model.variable('var1').descr('Q', 'Auxiliary variable');
model.variable('var1').set('k22', '4*(16*e^2+pi^2*(2-e^2))/Q');
model.variable('var1').descr('k22', 'Dimensionless stiffness, 22 component');
model.variable('var1').set('k23', 'pi*(pi^2*(1-e^2)-16*e^4)/(e*sqrt(1-e^2)*Q)');
model.variable('var1').descr('k23', 'Dimensionless stiffness, 23 component');
model.variable('var1').set('k32', '-pi*(pi^2*(1+2*e^2)*(1-e^2)+32*e^2*(1+e^2))/(e*sqrt(1-e^2)*Q)');
model.variable('var1').descr('k32', 'Dimensionless stiffness, 32 component');
model.variable('var1').set('k33', '4*(pi^2*(1+2*e^2)*(1-e^2)+32*e^2*(1+e^2))/((1-e^2)*Q)');
model.variable('var1').descr('k33', 'Dimensionless stiffness, 33 component');
model.variable('var1').set('c22', '2*pi*sqrt(1-e^2)*(pi^2*(1+2*e^2)-16*e^2)/(e*Q)');
model.variable('var1').descr('c22', 'Dimensionless damping, 22 component');
model.variable('var1').set('c23', '8*(16*e^2-pi^2*(1+2*e^2))/Q');
model.variable('var1').descr('c23', 'Dimensionless damping, 23 component');
model.variable('var1').set('c32', 'c23');
model.variable('var1').descr('c32', 'Dimensionless damping, 32 component');
model.variable('var1').set('c33', '2*pi*(48*e^2+pi^2*(1-e^2)^2)/(e*sqrt(1-e^2)*Q)');
model.variable('var1').descr('c33', 'Dimensionless damping, 33 component');

model.physics('hdb').prop('DynamicCoefficients').set('calculateDynamicCoefficients', true);
model.physics('hdb').feature('hjb1').set('C_plain', 'C');
model.physics('hdb').feature('hjb1').set('BearingCenterType', 'fromGeom');
model.physics('hdb').feature('hjb1').set('Specify', 'Load');
model.physics('hdb').feature('hjb1').set('W', {'0' '0' '-W'});
model.physics('hdb').feature('hjb1').set('uJInit', [0 0 0]);
model.physics('hdb').feature('hjb1').set('Ow', 'Omega');
model.physics('hdb').feature('hjb1').set('mure_mat', 'userdef');
model.physics('hdb').feature('hjb1').set('mure', 'mu0');
model.physics('hdb').feature('hjb1').set('rho_mat', 'userdef');
model.physics('hdb').feature('hjb1').set('rho', 'rho0');

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.all;
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([1 2 4 6]);
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 15);
model.mesh('mesh1').feature('map1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis2').selection.set([7]);
model.mesh('mesh1').feature('map1').feature('dis2').set('numelem', 4);
model.mesh('mesh1').run;

model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 'Rj', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'm', 0);
model.study('std1').feature('stat').setIndex('pname', 'Rj', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'm', 0);
model.study('std1').feature('stat').setIndex('pname', 'W', 0);
model.study('std1').feature('stat').setIndex('plistarr', 'range(500,500,50000)', 0);
model.study('std1').feature('stat').setIndex('punit', 'N', 0);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_pfilm').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_pfilm').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_pfilm').set('scaleval', '1000000');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s1').set('control', 'stat');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').label('Fluid Pressure (hdb)');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 100, 0);
model.result('pg1').set('defaultPlotID', 'fluidPressure');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('colortable', 'RainbowLight');
model.result('pg1').feature('surf1').set('smooth', 'internal');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result('pg1').feature.create('con1', 'Contour');
model.result('pg1').feature('con1').set('levelrounding', false);
model.result('pg1').feature('con1').set('colorlegend', false);
model.result('pg1').feature('con1').set('smooth', 'internal');
model.result('pg1').feature('con1').set('inherittubescale', false);
model.result('pg1').feature('con1').set('data', 'parent');
model.result('pg1').feature('con1').set('inheritplot', 'surf1');
model.result('pg1').run;
model.result('pg1').run;
model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').run;
model.result('pg2').label('Eccentricity');
model.result('pg2').create('glob1', 'Global');
model.result('pg2').feature('glob1').set('markerpos', 'datapoints');
model.result('pg2').feature('glob1').set('linewidth', 'preference');
model.result('pg2').feature('glob1').set('expr', {'hdb.hjb1.ec_rel'});
model.result('pg2').feature('glob1').set('descr', {'Relative eccentricity'});
model.result('pg2').feature('glob1').set('unit', {'1'});
model.result('pg2').feature('glob1').set('linewidth', 2);
model.result('pg2').run;
model.result('pg2').set('showlegends', false);
model.result('pg2').run;
model.result('pg2').set('titletype', 'none');
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('Attitude Angle');
model.result('pg3').create('glob1', 'Global');
model.result('pg3').feature('glob1').set('markerpos', 'datapoints');
model.result('pg3').feature('glob1').set('linewidth', 'preference');
model.result('pg3').feature('glob1').set('expr', {'hdb.hjb1.phia'});
model.result('pg3').feature('glob1').set('descr', {'Attitude angle'});
model.result('pg3').feature('glob1').set('unit', {'rad'});
model.result('pg3').feature('glob1').setIndex('unit', 'deg', 0);
model.result('pg3').feature('glob1').setIndex('descr', 'Attitude angle, COMSOL', 0);
model.result('pg3').feature('glob1').set('linewidth', 3);
model.result('pg3').run;
model.result('pg3').create('glob2', 'Global');
model.result('pg3').feature('glob2').set('markerpos', 'datapoints');
model.result('pg3').feature('glob2').set('linewidth', 'preference');
model.result('pg3').feature('glob2').setIndex('expr', 'phi0', 0);
model.result('pg3').feature('glob2').setIndex('unit', 'deg', 0);
model.result('pg3').feature('glob2').setIndex('descr', 'Attitude angle, Analytical', 0);
model.result('pg3').feature('glob2').set('linestyle', 'none');
model.result('pg3').feature('glob2').set('linemarker', 'cycle');
model.result('pg3').feature('glob2').set('markerpos', 'interp');
model.result('pg3').feature('glob2').set('markers', 50);
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').set('ylabelactive', true);
model.result('pg3').set('ylabel', 'Attitude Angle (deg)');
model.result('pg3').set('titletype', 'none');
model.result('pg2').run;
model.result.duplicate('pg4', 'pg2');
model.result('pg4').run;
model.result('pg4').label('Pressure and Film Thickness');
model.result('pg4').run;
model.result('pg4').feature('glob1').set('expr', {'hdb.hjb1.p_max'});
model.result('pg4').feature('glob1').set('descr', {'Maximum bearing pressure'});
model.result('pg4').feature('glob1').set('unit', {'Pa'});
model.result('pg4').feature.duplicate('glob2', 'glob1');
model.result('pg4').run;
model.result('pg4').feature('glob2').set('expr', {'hdb.hjb1.h_min'});
model.result('pg4').feature('glob2').set('descr', {'Minimum film thickness'});
model.result('pg4').feature('glob2').set('unit', {'m'});
model.result('pg4').run;
model.result('pg4').set('twoyaxes', true);
model.result('pg4').setIndex('plotonsecyaxis', true, 1, 1);
model.result('pg4').set('showlegends', true);
model.result('pg4').set('legendpos', 'uppermiddle');
model.result('pg4').run;
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').label('Bearing Stiffness');
model.result('pg5').create('glob1', 'Global');
model.result('pg5').feature('glob1').set('markerpos', 'datapoints');
model.result('pg5').feature('glob1').set('linewidth', 'preference');
model.result('pg5').feature('glob1').set('expr', {'hdb.hjb1.k22'});
model.result('pg5').feature('glob1').set('descr', {'Bearing stiffness, local yy-component'});
model.result('pg5').feature('glob1').set('unit', {'N/m'});
model.result('pg5').feature('glob1').set('expr', {'hdb.hjb1.k22' 'hdb.hjb1.k23'});
model.result('pg5').feature('glob1').set('descr', {'Bearing stiffness, local yy-component' 'Bearing stiffness, local yz-component'});
model.result('pg5').feature('glob1').set('expr', {'hdb.hjb1.k22' 'hdb.hjb1.k23' 'hdb.hjb1.k32'});
model.result('pg5').feature('glob1').set('descr', {'Bearing stiffness, local yy-component' 'Bearing stiffness, local yz-component' 'Bearing stiffness, local zy-component'});
model.result('pg5').feature('glob1').set('expr', {'hdb.hjb1.k22' 'hdb.hjb1.k23' 'hdb.hjb1.k32' 'hdb.hjb1.k33'});
model.result('pg5').feature('glob1').set('descr', {'Bearing stiffness, local yy-component' 'Bearing stiffness, local yz-component' 'Bearing stiffness, local zy-component' 'Bearing stiffness, local zz-component'});
model.result('pg5').feature('glob1').setIndex('expr', 'hdb.hjb1.k22/k0', 0);
model.result('pg5').feature('glob1').setIndex('unit', 1, 0);
model.result('pg5').feature('glob1').setIndex('descr', 'k<sub>22</sub>, COMSOL', 0);
model.result('pg5').feature('glob1').setIndex('expr', 'hdb.hjb1.k23/k0', 1);
model.result('pg5').feature('glob1').setIndex('unit', 1, 1);
model.result('pg5').feature('glob1').setIndex('descr', 'k<sub>23</sub>, COMSOL', 1);
model.result('pg5').feature('glob1').setIndex('expr', 'hdb.hjb1.k32/k0', 2);
model.result('pg5').feature('glob1').setIndex('unit', 1, 2);
model.result('pg5').feature('glob1').setIndex('descr', 'k<sub>32</sub>, COMSOL', 2);
model.result('pg5').feature('glob1').setIndex('expr', 'hdb.hjb1.k33/k0', 3);
model.result('pg5').feature('glob1').setIndex('unit', 1, 3);
model.result('pg5').feature('glob1').setIndex('descr', 'k<sub>33</sub>, COMSOL', 3);
model.result('pg5').feature('glob1').set('linewidth', 3);
model.result('pg5').run;
model.result('pg5').create('glob2', 'Global');
model.result('pg5').feature('glob2').set('markerpos', 'datapoints');
model.result('pg5').feature('glob2').set('linewidth', 'preference');
model.result('pg5').feature('glob2').setIndex('expr', 'k22', 0);
model.result('pg5').feature('glob2').setIndex('unit', 1, 0);
model.result('pg5').feature('glob2').setIndex('descr', 'k<sub>22</sub>, Analytical', 0);
model.result('pg5').feature('glob2').setIndex('expr', 'k23', 1);
model.result('pg5').feature('glob2').setIndex('unit', 1, 1);
model.result('pg5').feature('glob2').setIndex('descr', 'k<sub>23</sub>, Analytical', 1);
model.result('pg5').feature('glob2').setIndex('expr', 'k32', 2);
model.result('pg5').feature('glob2').setIndex('unit', 1, 2);
model.result('pg5').feature('glob2').setIndex('descr', 'k<sub>32</sub>, Analytical', 2);
model.result('pg5').feature('glob2').setIndex('expr', 'k33', 3);
model.result('pg5').feature('glob2').setIndex('unit', 1, 3);
model.result('pg5').feature('glob2').setIndex('descr', 'k<sub>33</sub>, Analytical', 3);
model.result('pg5').feature('glob2').set('linestyle', 'none');
model.result('pg5').feature('glob2').set('linemarker', 'cycle');
model.result('pg5').feature('glob2').set('markerpos', 'interp');
model.result('pg5').feature('glob2').set('markers', 50);
model.result('pg5').run;
model.result('pg5').set('ylabelactive', true);
model.result('pg5').set('ylabel', 'Dimensionless Stiffness');
model.result('pg5').set('titletype', 'none');
model.result('pg5').set('legendpos', 'lowerright');
model.result('pg5').set('legendcolumncount', 2);
model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').run;
model.result('pg6').label('Bearing Damping Coefficient');
model.result('pg6').create('glob1', 'Global');
model.result('pg6').feature('glob1').set('markerpos', 'datapoints');
model.result('pg6').feature('glob1').set('linewidth', 'preference');
model.result('pg6').feature('glob1').set('expr', {'hdb.hjb1.c22'});
model.result('pg6').feature('glob1').set('descr', {'Bearing damping coefficient, local yy-component'});
model.result('pg6').feature('glob1').set('unit', {'N*s/m'});
model.result('pg6').feature('glob1').setIndex('expr', 'hdb.hjb1.c22/c0', 0);
model.result('pg6').feature('glob1').setIndex('unit', 1, 0);
model.result('pg6').feature('glob1').setIndex('descr', 'c<sub>22</sub>, COMSOL', 0);
model.result('pg6').feature('glob1').setIndex('expr', 'hdb.hjb1.c23/c0', 1);
model.result('pg6').feature('glob1').setIndex('unit', 1, 1);
model.result('pg6').feature('glob1').setIndex('descr', 'c<sub>23</sub>, COMSOL', 1);
model.result('pg6').feature('glob1').setIndex('expr', 'hdb.hjb1.c32/c0', 2);
model.result('pg6').feature('glob1').setIndex('unit', 1, 2);
model.result('pg6').feature('glob1').setIndex('descr', 'c<sub>32</sub>, COMSOL', 2);
model.result('pg6').feature('glob1').setIndex('expr', 'hdb.hjb1.c33/c0', 3);
model.result('pg6').feature('glob1').setIndex('unit', 1, 3);
model.result('pg6').feature('glob1').setIndex('descr', 'c<sub>33</sub>, COMSOL', 3);
model.result('pg6').feature('glob1').set('linewidth', 3);
model.result('pg6').run;
model.result('pg6').create('glob2', 'Global');
model.result('pg6').feature('glob2').set('markerpos', 'datapoints');
model.result('pg6').feature('glob2').set('linewidth', 'preference');
model.result('pg6').feature('glob2').setIndex('expr', 'c22', 0);
model.result('pg6').feature('glob2').setIndex('unit', 1, 0);
model.result('pg6').feature('glob2').setIndex('descr', 'c<sub>22</sub>, Analytical', 0);
model.result('pg6').feature('glob2').setIndex('expr', 'c23', 1);
model.result('pg6').feature('glob2').setIndex('unit', 1, 1);
model.result('pg6').feature('glob2').setIndex('descr', 'c<sub>23</sub>, Analytical', 1);
model.result('pg6').feature('glob2').setIndex('expr', 'c32', 2);
model.result('pg6').feature('glob2').setIndex('unit', 1, 2);
model.result('pg6').feature('glob2').setIndex('descr', 'c<sub>32</sub>, Analytical', 2);
model.result('pg6').feature('glob2').setIndex('expr', 'c33', 3);
model.result('pg6').feature('glob2').setIndex('unit', 1, 3);
model.result('pg6').feature('glob2').setIndex('descr', 'c<sub>33</sub>, Analytical', 3);
model.result('pg6').feature('glob2').set('linestyle', 'none');
model.result('pg6').feature('glob2').set('linemarker', 'cycle');
model.result('pg6').feature('glob2').set('markerpos', 'interp');
model.result('pg6').feature('glob2').set('markers', 50);
model.result('pg6').run;
model.result('pg6').run;
model.result('pg6').set('titletype', 'none');
model.result('pg6').set('ylabelactive', true);
model.result('pg6').set('ylabel', 'Dimensionless Damping');
model.result('pg5').run;

model.title('Evaluation of Dynamic Coefficients of a Plain Journal Bearing');

model.description('When analyzing rotors, it is common that bearings are modeled through their effective dynamic coefficients about a static equilibrium position. This model illustrates how to compute such coefficients for a plain journal bearing. The bearing length is kept much smaller than its diameter in order to verify that the calculated coefficients match corresponding analytical values for a short bearing approximation.');

model.label('journal_bearing_dynamic_coefficients.mph');

model.modelNode.label('Components');

out = model;
