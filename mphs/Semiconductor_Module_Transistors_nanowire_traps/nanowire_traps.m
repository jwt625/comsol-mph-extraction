function out = model
%
% nanowire_traps.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Semiconductor_Module/Transistors');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('semi', 'Semiconductor', 'geom1');
model.physics('semi').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/semi', true);

model.geom('geom1').lengthUnit('nm');

model.param.set('Rw', '10[nm]');
model.param.descr('Rw', 'Nanowire radius');
model.param.set('L', '100[nm]');
model.param.descr('L', 'Gate length');
model.param.set('t_ox', '2[nm]');
model.param.descr('t_ox', 'Oxide thickness');
model.param.set('t_np', 'Rw');
model.param.descr('t_np', 'Additional length');
model.param.set('Na_0', '1e17[1/cm^3]');
model.param.descr('Na_0', 'Background acceptor concentration');
model.param.set('Nd_0', '1e20[1/cm^3]');
model.param.descr('Nd_0', 'Maximum donor concentration');
model.param.set('Nt_0', '1e10[1/cm^2]');
model.param.descr('Nt_0', 'Trap density');
model.param.set('Vd', '500[mV]');
model.param.descr('Vd', 'Drain voltage');
model.param.set('Vg', '-500[mV]');
model.param.descr('Vg', 'Gate voltage');
model.param.set('ramp', '1');
model.param.descr('ramp', 'Ramp parameter');

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', {'Rw' 'L+2*t_np'});
model.geom('geom1').run('r1');
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').set('size', {'Rw' 'L/2+t_np'});
model.geom('geom1').runPre('fin');
model.geom('geom1').create('r3', 'Rectangle');
model.geom('geom1').feature('r3').set('size', {'Rw' 'L'});
model.geom('geom1').feature('r3').set('pos', {'0' 't_np'});
model.geom('geom1').run('r3');
model.geom('geom1').run;

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('AroraMobilityModel', 'Arora mobility model');
model.material('mat1').propertyGroup.create('PowerLawMobilityModel', 'Power law mobility model');
model.material('mat1').propertyGroup.create('Auger', 'Auger recombination');
model.material('mat1').propertyGroup.create('Direct', 'Direct recombination');
model.material('mat1').propertyGroup.create('SRH', ['Shockley' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Read' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Hall recombination']);
model.material('mat1').propertyGroup.create('FletcherMobilityModel', 'Fletcher mobility model');
model.material('mat1').propertyGroup.create('CaugheyThomasMobilityModel', ['Caughey' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Thomas mobility model']);
model.material('mat1').propertyGroup.create('SemicondMaterial', 'Semiconductor material');
model.material('mat1').propertyGroup.create('LombardiSurfaceMobilityModel', 'Lombardi surface mobility model');
model.material('mat1').propertyGroup.create('ImpactIonization', 'Impact ionization');
model.material('mat1').propertyGroup.create('SlotboomModel', 'Slotboom model');
model.material('mat1').propertyGroup.create('JainRoulstonModel', ['Jain' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Roulston model']);
model.material('mat1').propertyGroup.create('KlaassenUnifiedMobilityModel', 'Klaassen unified mobility model');
model.material('mat1').label('Si - Silicon');
model.material('mat1').propertyGroup('def').set('relpermittivity', {'11.7' '0' '0' '0' '11.7' '0' '0' '0' '11.7'});
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'131[W/(m*K)]' '0' '0' '0' '131[W/(m*K)]' '0' '0' '0' '131[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('density', '2329[kg/m^3]');
model.material('mat1').propertyGroup('def').set('heatcapacity', '700[J/(kg*K)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mun0_ref_arora', '1252[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mup0_ref_arora', '407[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mun_min_ref_arora', '88[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mup_min_ref_arora', '54.3[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('Nn0_ref_arora', '1.26e17[1/cm^3]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('Np0_ref_arora', '2.35e17[1/cm^3]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('alpha0_arora', '0.88');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta1_arora', '-0.57');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta2_arora', '-2.33');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta3_arora', '-2.33');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta4_arora', '-0.146');
model.material('mat1').propertyGroup('AroraMobilityModel').set('Tref_arora', '300[K]');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('mun0_pl', '1448[cm^2/(V*s)]');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('mup0_pl', '473[cm^2/(V*s)]');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('alphan_pl', '2.33');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('alphap_pl', '2.23');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('Tref_pl', '300[K]');
model.material('mat1').propertyGroup('Auger').set('Cn', '2.8e-31[cm^6/s]');
model.material('mat1').propertyGroup('Auger').set('Cp', '9.9e-32[cm^6/s]');
model.material('mat1').propertyGroup('Direct').set('C', '0[cm^3/s]');
model.material('mat1').propertyGroup('SRH').set('taun', '10[us]');
model.material('mat1').propertyGroup('SRH').set('taup', '10[us]');
model.material('mat1').propertyGroup('FletcherMobilityModel').set('F1_fl', '1.04e21[1/(cm^1*V*s)]');
model.material('mat1').propertyGroup('FletcherMobilityModel').set('F2_fl', '7.45e13[1/cm^2]');
model.material('mat1').propertyGroup('FletcherMobilityModel').set('Tref_fl', '300[K]');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').label(['Caughey' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Thomas mobility model']);
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('alphan0_ct', '1.11');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('alphap0_ct', '1.21');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('vn0_ct', '1e7[cm/s]');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('vp0_ct', '8.37e6[cm/s]');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betan1_ct', '0.66');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betap1_ct', '0.17');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betan2_ct', '-0.87');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betap2_ct', '-0.52');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('Tref_ct', '300[K]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Eg0', '1.12[V]');
model.material('mat1').propertyGroup('SemicondMaterial').set('chi0', '4.05[V]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Nv', '(T/300[K])^(3/2)*1.04e19[1/cm^3]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Nc', '(T/300[K])^(3/2)*2.8e19[1/cm^3]');
model.material('mat1').propertyGroup('SemicondMaterial').set('mun', '1450[cm^2/(V*s)]');
model.material('mat1').propertyGroup('SemicondMaterial').set('mup', '500[cm^2/(V*s)]');
model.material('mat1').propertyGroup('SemicondMaterial').addInput('temperature');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('deltan_ls', '5.82e14[V/s]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('deltap_ls', '2.05e14[V/s]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mun1_ls', '4.75e7[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mup1_ls', '9.93e7[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mun2_ls', '1.74e5[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mup2_ls', '8.84e5[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('alphan_ls', '0.125');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('alphap_ls', '0.0317');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('Tref_ls', '1[K]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('Eref_ls', '1[V/cm]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('Nref_ls', '1[1/cm^3]');
model.material('mat1').propertyGroup('ImpactIonization').set('an', '0.426');
model.material('mat1').propertyGroup('ImpactIonization').set('ap', '0.243');
model.material('mat1').propertyGroup('ImpactIonization').set('bn', '4.81E5[V/cm]');
model.material('mat1').propertyGroup('ImpactIonization').set('bp', '6.53E5[V/cm]');
model.material('mat1').propertyGroup('ImpactIonization').set('cnii', '3.05E-4');
model.material('mat1').propertyGroup('ImpactIonization').set('cpii', '5.35E-4');
model.material('mat1').propertyGroup('ImpactIonization').set('dn', '6.86E-4');
model.material('mat1').propertyGroup('ImpactIonization').set('dp', '5.67E-4');
model.material('mat1').propertyGroup('SlotboomModel').set('Eref_sb', '0.00692[V]');
model.material('mat1').propertyGroup('SlotboomModel').set('Nref_sb', '1.3e17[1/cm^3]');
model.material('mat1').propertyGroup('SlotboomModel').set('alpha_sb', '0.5');
model.material('mat1').propertyGroup('JainRoulstonModel').set('An_jr', '3.5e-8[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Bn_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Cn_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Ap_jr', '3.5e-8[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Bp_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Cp_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Nref_jr', '1[1/cm^3]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('alpha_jr', '0.5');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('T_ref_kl', '300[K]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_e_max_kl', '1414.0[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_h_max_kl', '470.5[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_e_min_kl', '68.5[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_h_min_kl', '44.9[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('theta_e_kl', '2.285');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('theta_h_kl', '2.247');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('alpha_e_1_kl', '0.711');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('alpha_h_1_kl', '0.719');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_e_1_kl', '9.20e16[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_h_1_kl', '2.23e17[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('c_D_kl', '0.21');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('c_A_kl', '0.50');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_D_kl', '4.0e20[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_A_kl', '7.2e20[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('f_BH_kl', '3.828');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('f_CW_kl', '2.459');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_BH_kl', '1.36e20[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('P_CW_kl', '3.97e13');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_1_kl', '0.89233');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_2_kl', '0.41372');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_3_kl', '0.19778');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_4_kl', '0.28227');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_5_kl', '0.005978');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_6_kl', '1.80618');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_7_kl', '0.72169');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_1_kl', '0.7643');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_2_kl', '2.2999');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_3_kl', '6.5502');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_4_kl', '2.3670');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_5_kl', '-0.01552');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_6_kl', '0.6478');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('m_e_kl', 'me_const');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('m_h_kl', '1.258*me_const');
model.material('mat1').propertyGroup('SemicondMaterial').set('mun', {'500[cm^2/(V*s)]'});

model.physics('semi').prop('ModelProperties').set('CarrierStatistics', 'FermiDirac');
model.physics('semi').prop('Continuation').set('DopingTrapDensityContinuation', 'UserDefined');
model.physics('semi').prop('Continuation').set('cp_dtd_input', 'ramp');
model.physics('semi').create('adm1', 'AnalyticDopingModel', 2);
model.physics('semi').feature('adm1').selection.all;
model.physics('semi').feature('adm1').set('NAc', 'Na_0');
model.physics('semi').create('adm2', 'AnalyticDopingModel', 2);
model.physics('semi').feature('adm2').selection.all;
model.physics('semi').feature('adm2').set('impurityDistribution', 'box');
model.physics('semi').feature('adm2').set('impurityType', 'donor');
model.physics('semi').feature('adm2').set('NDc', 'Nd_0');
model.physics('semi').feature('adm2').set('jwidth', 'Rw');
model.physics('semi').feature('adm2').set('jheight', 't_np');
model.physics('semi').feature('adm2').set('jds', 't_np');
model.physics('semi').feature('adm2').set('Nb_src', 'root.comp1.semi.adm1.NAc');
model.physics('semi').create('adm3', 'AnalyticDopingModel', 2);
model.physics('semi').feature('adm3').selection.all;
model.physics('semi').feature('adm3').set('impurityDistribution', 'box');
model.physics('semi').feature('adm3').set('impurityType', 'donor');
model.physics('semi').feature('adm3').set('NDc', 'Nd_0');
model.physics('semi').feature('adm3').set('rb', {'0[um]' '0' 'L+t_np'});
model.physics('semi').feature('adm3').set('jwidth', 'Rw');
model.physics('semi').feature('adm3').set('jheight', 't_np');
model.physics('semi').feature('adm3').set('jds', 't_np');
model.physics('semi').feature('adm3').set('Nb_src', 'root.comp1.semi.adm1.NAc');
model.physics('semi').create('tar1', 'TrapAssistedRecombination', 2);
model.physics('semi').feature('tar1').selection.all;
model.physics('semi').create('mc1', 'MetalContact', 1);
model.physics('semi').feature('mc1').selection.set([2]);
model.physics('semi').create('mc2', 'MetalContact', 1);
model.physics('semi').feature('mc2').selection.set([9]);
model.physics('semi').feature('mc2').set('V0', 'Vd');
model.physics('semi').create('gc1', 'GateContact', 1);
model.physics('semi').feature('gc1').selection.set([11 12]);
model.physics('semi').feature('gc1').set('V0', 'Vg');
model.physics('semi').feature('gc1').set('epsilon_ins', 3.9);
model.physics('semi').feature('gc1').set('d_ins', 't_ox');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');
model.selection('sel1').geom(1);
model.selection('sel1').label('Gate');
model.selection('sel1').set([11 12]);

model.physics('semi').feature('gc1').selection.named('sel1');
model.physics('semi').create('tasr1', 'TrapAssistedSurfaceRecombination', 1);
model.physics('semi').feature('tasr1').selection.named('sel1');
model.physics('semi').feature('tasr1').set('IncludeTraps', 'ExplicitTraps');
model.physics('semi').feature('tasr1').create('dtb1', 'DiscreteEnergyLevelBoundary', 1);
model.physics('semi').feature('tasr1').feature('dtb1').set('Nt_b', 'Nt_0');
model.physics('semi').feature('init1').set('SpecifyInitialValues', 'IntrinsicConcentrationsSetVoltage');

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([2 4 6 8 9]);
model.mesh('mesh1').feature('map1').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis1').set('elemcount', 50);
model.mesh('mesh1').feature('map1').feature('dis1').set('elemratio', 40);
model.mesh('mesh1').feature('map1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis2').selection.set([3 11]);
model.mesh('mesh1').feature('map1').feature('dis2').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis2').set('elemcount', 50);
model.mesh('mesh1').feature('map1').feature('dis2').set('elemratio', 5);
model.mesh('mesh1').feature('map1').create('dis3', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis3').selection.set([5 12]);
model.mesh('mesh1').feature('map1').feature('dis3').set('numelem', 50);
model.mesh('mesh1').feature('map1').feature('dis3').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis3').set('elemcount', 50);
model.mesh('mesh1').feature('map1').feature('dis3').set('elemratio', 5);
model.mesh('mesh1').feature('map1').feature('dis3').set('reverse', true);
model.mesh('mesh1').feature('map1').create('dis4', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis4').selection.set([1 10]);
model.mesh('mesh1').feature('map1').feature('dis4').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis4').set('elemcount', 10);
model.mesh('mesh1').feature('map1').feature('dis4').set('elemratio', 5);
model.mesh('mesh1').feature('map1').feature('dis4').set('reverse', true);
model.mesh('mesh1').feature('map1').create('dis5', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis5').selection.set([7 13]);
model.mesh('mesh1').feature('map1').feature('dis5').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis5').set('elemcount', 10);
model.mesh('mesh1').feature('map1').feature('dis5').set('elemratio', 5);
model.mesh('mesh1').run;

model.study('std1').create('stat2', 'Stationary');
model.study('std1').feature('stat').set('useadvanceddisable', true);
model.study('std1').feature('stat').set('disabledphysics', {'semi/tasr1'});
model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 'Rw', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'm', 0);
model.study('std1').feature('stat').setIndex('pname', 'Rw', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'm', 0);
model.study('std1').feature('stat').setIndex('pname', 'Nt_0', 0);
model.study('std1').feature('stat').setIndex('plistarr', 0, 0);
model.study('std1').feature('stat').setIndex('pname', 'Rw', 1);
model.study('std1').feature('stat').setIndex('plistarr', '', 1);
model.study('std1').feature('stat').setIndex('punit', 'm', 1);
model.study('std1').feature('stat').setIndex('pname', 'Rw', 1);
model.study('std1').feature('stat').setIndex('plistarr', '', 1);
model.study('std1').feature('stat').setIndex('punit', 'm', 1);
model.study('std1').feature('stat').setIndex('pname', 'ramp', 1);
model.study('std1').feature('stat').setIndex('plistarr', '1e-6 1e-4 1e-3 1e-2 1', 1);
model.study('std1').feature('stat').set('sweeptype', 'filled');
model.study('std1').feature('stat2').set('useparam', true);
model.study('std1').feature('stat2').set('sweeptype', 'filled');
model.study('std1').feature('stat2').setIndex('pname', 'Rw', 0);
model.study('std1').feature('stat2').setIndex('plistarr', '', 0);
model.study('std1').feature('stat2').setIndex('punit', 'm', 0);
model.study('std1').feature('stat2').setIndex('pname', 'Rw', 0);
model.study('std1').feature('stat2').setIndex('plistarr', '', 0);
model.study('std1').feature('stat2').setIndex('punit', 'm', 0);
model.study('std1').feature('stat2').setIndex('pname', 'Vg', 0);
model.study('std1').feature('stat2').setIndex('plistarr', -0.49, 0);
model.study('std1').feature('stat2').setIndex('pname', 'Rw', 1);
model.study('std1').feature('stat2').setIndex('plistarr', '', 1);
model.study('std1').feature('stat2').setIndex('punit', 'm', 1);
model.study('std1').feature('stat2').setIndex('pname', 'Rw', 1);
model.study('std1').feature('stat2').setIndex('plistarr', '', 1);
model.study('std1').feature('stat2').setIndex('punit', 'm', 1);
model.study('std1').feature('stat2').setIndex('pname', 'Nt_0', 1);
model.study('std1').feature('stat2').setIndex('plistarr', '0 100e14 500e14', 1);
model.study('std1').setGenPlots(false);
model.study('std1').label('Study 1: Ramp doping and traps');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 1.0E-6);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol1').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s1').set('control', 'stat');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', false);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').feature('aDef').set('assemtol', 0);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol1').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol1').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol1').feature('s1').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol1').feature('s1').feature('d1').set('ooc', 'off');
model.sol('sol1').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol1').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol1').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'stat2');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('initsoluse', 'sol2');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'stat2');
model.sol('sol1').create('s2', 'Stationary');
model.sol('sol1').feature('s2').set('stol', 1.0E-6);
model.sol('sol1').feature('s2').create('p1', 'Parametric');
model.sol('sol1').feature('s2').feature.remove('pDef');
model.sol('sol1').feature('s2').feature('p1').set('porder', 'constant');
model.sol('sol1').feature('s2').feature('p1').set('control', 'stat2');
model.sol('sol1').feature('s2').set('control', 'stat2');
model.sol('sol1').feature('s2').feature('aDef').set('complexfun', false);
model.sol('sol1').feature('s2').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s2').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s2').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s2').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s2').feature('aDef').set('assemtol', 0);
model.sol('sol1').feature('s2').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s2').feature('fc1').set('rstep', 10);
model.sol('sol1').feature('s2').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s2').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s2').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('s2').feature('fc1').set('initstep', 0.1);
model.sol('sol1').feature('s2').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol1').feature('s2').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('d1').set('linsolver', 'mumps');
model.sol('sol1').feature('s2').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol1').feature('s2').feature('d1').set('ooc', 'off');
model.sol('sol1').feature('s2').feature('d1').set('errorchk', 'off');
model.sol('sol1').feature('s2').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s2').feature('fc1').set('rstep', 10);
model.sol('sol1').feature('s2').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s2').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s2').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('s2').feature('fc1').set('initstep', 0.1);
model.sol('sol1').feature('s2').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol1').feature('s2').feature.remove('fcDef');
model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').run;
model.result('pg1').setIndex('looplevel', 1, 0);
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', 'semi.Ndoping');
model.result('pg1').feature('surf1').set('descr', 'Signed ionized dopant concentration');
model.result('pg1').feature('surf1').set('unit', '1/cm^3');
model.result('pg1').feature('surf1').set('resolution', 'norefine');
model.result('pg1').feature('surf1').set('smooth', 'everywhere');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').label('Doping');

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/semi', true);
model.study.create('std3');
model.study('std3').create('stat', 'Stationary');
model.study('std3').feature('stat').setSolveFor('/physics/semi', true);
model.study.create('std4');
model.study('std4').create('stat', 'Stationary');
model.study('std4').feature('stat').setSolveFor('/physics/semi', true);
model.study('std2').feature('stat').set('useinitsol', true);
model.study('std2').feature('stat').set('initmethod', 'sol');
model.study('std2').feature('stat').set('initstudy', 'std1');
model.study('std2').feature('stat').set('solnum', 1);
model.study('std2').feature('stat').set('useparam', true);
model.study('std2').feature('stat').set('sweeptype', 'filled');
model.study('std2').feature('stat').setIndex('pname', 'Rw', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 'm', 0);
model.study('std2').feature('stat').setIndex('pname', 'Rw', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 'm', 0);
model.study('std2').feature('stat').setIndex('pname', 'Nt_0', 0);
model.study('std2').feature('stat').setIndex('plistarr', 0, 0);
model.study('std2').feature('stat').setIndex('pname', 'Rw', 1);
model.study('std2').feature('stat').setIndex('plistarr', '', 1);
model.study('std2').feature('stat').setIndex('punit', 'm', 1);
model.study('std2').feature('stat').setIndex('pname', 'Rw', 1);
model.study('std2').feature('stat').setIndex('plistarr', '', 1);
model.study('std2').feature('stat').setIndex('punit', 'm', 1);
model.study('std2').feature('stat').setIndex('pname', 'Vg', 1);
model.study('std2').feature('stat').setIndex('plistarr', 'range(-0.5,0.1,1.5)', 1);
model.study('std2').setGenPlots(false);
model.study('std2').label('Study 2: Vg sweep no traps');
model.study('std3').feature('stat').set('useinitsol', true);
model.study('std3').feature('stat').set('initmethod', 'sol');
model.study('std3').feature('stat').set('initstudy', 'std1');
model.study('std3').feature('stat').set('solnum', 2);
model.study('std3').feature('stat').set('useparam', true);
model.study('std3').feature('stat').set('sweeptype', 'filled');
model.study('std3').feature('stat').setIndex('pname', 'Rw', 0);
model.study('std3').feature('stat').setIndex('plistarr', '', 0);
model.study('std3').feature('stat').setIndex('punit', 'm', 0);
model.study('std3').feature('stat').setIndex('pname', 'Rw', 0);
model.study('std3').feature('stat').setIndex('plistarr', '', 0);
model.study('std3').feature('stat').setIndex('punit', 'm', 0);
model.study('std3').feature('stat').setIndex('pname', 'Nt_0', 0);
model.study('std3').feature('stat').setIndex('plistarr', '1e16', 0);
model.study('std3').feature('stat').setIndex('pname', 'Rw', 1);
model.study('std3').feature('stat').setIndex('plistarr', '', 1);
model.study('std3').feature('stat').setIndex('punit', 'm', 1);
model.study('std3').feature('stat').setIndex('pname', 'Rw', 1);
model.study('std3').feature('stat').setIndex('plistarr', '', 1);
model.study('std3').feature('stat').setIndex('punit', 'm', 1);
model.study('std3').feature('stat').setIndex('pname', 'Vg', 1);
model.study('std3').feature('stat').setIndex('plistarr', 'range(-0.5,0.1,1.5)', 1);
model.study('std3').setGenPlots(false);
model.study('std3').label('Study 3: Vg sweep Nt=1e12[1/cm^2]');
model.study('std4').feature('stat').set('useinitsol', true);
model.study('std4').feature('stat').set('initmethod', 'sol');
model.study('std4').feature('stat').set('initstudy', 'std1');
model.study('std4').feature('stat').set('solnum', 3);
model.study('std4').feature('stat').set('useparam', true);
model.study('std4').feature('stat').set('sweeptype', 'filled');
model.study('std4').feature('stat').setIndex('pname', 'Rw', 0);
model.study('std4').feature('stat').setIndex('plistarr', '', 0);
model.study('std4').feature('stat').setIndex('punit', 'm', 0);
model.study('std4').feature('stat').setIndex('pname', 'Rw', 0);
model.study('std4').feature('stat').setIndex('plistarr', '', 0);
model.study('std4').feature('stat').setIndex('punit', 'm', 0);
model.study('std4').feature('stat').setIndex('pname', 'Nt_0', 0);
model.study('std4').feature('stat').setIndex('plistarr', '5e16', 0);
model.study('std4').feature('stat').setIndex('pname', 'Rw', 1);
model.study('std4').feature('stat').setIndex('plistarr', '', 1);
model.study('std4').feature('stat').setIndex('punit', 'm', 1);
model.study('std4').feature('stat').setIndex('pname', 'Rw', 1);
model.study('std4').feature('stat').setIndex('plistarr', '', 1);
model.study('std4').feature('stat').setIndex('punit', 'm', 1);
model.study('std4').feature('stat').setIndex('pname', 'Vg', 1);
model.study('std4').feature('stat').setIndex('plistarr', 'range(-0.5,0.1,1.5)', 1);
model.study('std4').setGenPlots(false);
model.study('std4').label('Study 4: Vg sweep Nt=5e12[1/cm^3]');

model.sol.create('sol3');
model.sol('sol3').study('std2');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std2');
model.sol('sol3').feature('st1').set('studystep', 'stat');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').set('control', 'stat');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').set('stol', 1.0E-6);
model.sol('sol3').feature('s1').create('p1', 'Parametric');
model.sol('sol3').feature('s1').feature.remove('pDef');
model.sol('sol3').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol3').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol3').feature('s1').set('control', 'stat');
model.sol('sol3').feature('s1').feature('aDef').set('complexfun', false);
model.sol('sol3').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol3').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol3').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol3').feature('s1').feature('aDef').set('assemtol', 0);
model.sol('sol3').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol3').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol3').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol3').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol3').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol3').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol3').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol3').feature('s1').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol3').feature('s1').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol3').feature('s1').feature('d1').set('ooc', 'off');
model.sol('sol3').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol3').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol3').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol3').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol3').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol3').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol3').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol3').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol3').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol('sol3').attach('std2');
model.sol('sol3').runAll;
model.sol.create('sol4');
model.sol('sol4').study('std3');
model.sol('sol4').create('st1', 'StudyStep');
model.sol('sol4').feature('st1').set('study', 'std3');
model.sol('sol4').feature('st1').set('studystep', 'stat');
model.sol('sol4').create('v1', 'Variables');
model.sol('sol4').feature('v1').set('control', 'stat');
model.sol('sol4').create('s1', 'Stationary');
model.sol('sol4').feature('s1').set('stol', 1.0E-6);
model.sol('sol4').feature('s1').create('p1', 'Parametric');
model.sol('sol4').feature('s1').feature.remove('pDef');
model.sol('sol4').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol4').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol4').feature('s1').set('control', 'stat');
model.sol('sol4').feature('s1').feature('aDef').set('complexfun', false);
model.sol('sol4').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol4').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol4').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol4').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol4').feature('s1').feature('aDef').set('assemtol', 0);
model.sol('sol4').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol4').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol4').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol4').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol4').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol4').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol4').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol4').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol4').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol4').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol4').feature('s1').create('d1', 'Direct');
model.sol('sol4').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol4').feature('s1').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol4').feature('s1').feature('d1').set('ooc', 'off');
model.sol('sol4').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol4').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol4').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol4').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol4').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol4').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol4').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol4').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol4').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol4').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol4').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol4').feature('s1').feature.remove('fcDef');
model.sol('sol4').attach('std3');
model.sol('sol4').runAll;
model.sol.create('sol5');
model.sol('sol5').study('std4');
model.sol('sol5').create('st1', 'StudyStep');
model.sol('sol5').feature('st1').set('study', 'std4');
model.sol('sol5').feature('st1').set('studystep', 'stat');
model.sol('sol5').create('v1', 'Variables');
model.sol('sol5').feature('v1').set('control', 'stat');
model.sol('sol5').create('s1', 'Stationary');
model.sol('sol5').feature('s1').set('stol', 1.0E-6);
model.sol('sol5').feature('s1').create('p1', 'Parametric');
model.sol('sol5').feature('s1').feature.remove('pDef');
model.sol('sol5').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol5').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol5').feature('s1').set('control', 'stat');
model.sol('sol5').feature('s1').feature('aDef').set('complexfun', false);
model.sol('sol5').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol5').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol5').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol5').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol5').feature('s1').feature('aDef').set('assemtol', 0);
model.sol('sol5').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol5').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol5').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol5').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol5').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol5').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol5').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol5').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol5').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol5').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol5').feature('s1').create('d1', 'Direct');
model.sol('sol5').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol5').feature('s1').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol5').feature('s1').feature('d1').set('ooc', 'off');
model.sol('sol5').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol5').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol5').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol5').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol5').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol5').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol5').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol5').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol5').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol5').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol5').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol5').feature('s1').feature.remove('fcDef');
model.sol('sol5').attach('std4');
model.sol('sol5').runAll;

model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').run;
model.result('pg2').set('titletype', 'none');
model.result('pg2').set('xlabelactive', true);
model.result('pg2').set('xlabel', 'Gate voltage, Vg (V)');
model.result('pg2').set('ylabelactive', true);
model.result('pg2').set('ylabel', 'Current (A)');
model.result('pg2').set('ylog', true);
model.result('pg2').set('legendpos', 'lowerright');
model.result('pg2').create('glob1', 'Global');
model.result('pg2').feature('glob1').set('markerpos', 'datapoints');
model.result('pg2').feature('glob1').set('linewidth', 'preference');
model.result('pg2').feature('glob1').set('data', 'dset3');
model.result('pg2').feature('glob1').setIndex('expr', 'abs(semi.I0_1)', 0);
model.result('pg2').feature('glob1').setIndex('unit', 'A', 0);
model.result('pg2').feature('glob1').setIndex('descr', 'Nt_0 = 0 1/cm^2', 0);
model.result('pg2').feature('glob1').set('autodescr', false);
model.result('pg2').run;
model.result('pg2').feature.duplicate('glob2', 'glob1');
model.result('pg2').run;
model.result('pg2').feature('glob2').set('data', 'dset4');
model.result('pg2').feature('glob2').setIndex('descr', 'Nt_0 = 1e-12 1/cm^2', 0);
model.result('pg2').run;
model.result('pg2').feature.duplicate('glob3', 'glob2');
model.result('pg2').run;
model.result('pg2').feature('glob3').set('data', 'dset5');
model.result('pg2').feature('glob3').setIndex('descr', 'Nt_0 = 5e-12 1/cm^2', 0);
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').label('Current vs. gate voltage');
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').run;
model.result('pg3').set('data', 'dset5');
model.result('pg3').setIndex('looplevel', 21, 0);
model.result('pg3').set('edges', false);
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', 'V');
model.result('pg3').feature('surf1').set('descr', 'Electric potential');
model.result('pg3').feature('surf1').set('resolution', 'norefine');
model.result('pg3').feature('surf1').set('smooth', 'everywhere');
model.result('pg3').feature.duplicate('surf2', 'surf1');
model.result('pg3').run;
model.result('pg3').feature('surf2').set('colortable', 'Wave');
model.result('pg3').feature('surf2').set('expr', 'semi.log10N');
model.result('pg3').feature('surf2').set('descr', 'Log of electron concentration');
model.result('pg3').feature('surf2').create('def1', 'Deform');
model.result('pg3').run;
model.result('pg3').feature('surf2').feature('def1').set('expr', {'-20' ''});
model.result('pg3').feature('surf2').feature('def1').set('scaleactive', true);
model.result('pg3').feature('surf2').feature('def1').set('scale', 1);
model.result('pg3').run;
model.result('pg3').feature.duplicate('surf3', 'surf2');
model.result('pg3').run;
model.result('pg3').feature('surf3').set('expr', 'semi.log10P');
model.result('pg3').feature('surf3').set('descr', 'Log of hole concentration');
model.result('pg3').run;
model.result('pg3').feature('surf3').feature('def1').set('expr', {'-40' ''});
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').feature.duplicate('surf4', 'surf3');
model.result('pg3').run;
model.result('pg3').feature('surf4').set('expr', 'semi.log10normJ');
model.result('pg3').feature('surf4').set('descr', 'Log of current density norm');
model.result('pg3').feature('surf4').set('colortable', 'ThermalDark');
model.result('pg3').run;
model.result('pg3').feature('surf4').feature('def1').set('expr', {'-60' ''});
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').label('J, P, N, V');
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').set('data', 'dset4');
model.result('pg4').create('lngr1', 'LineGraph');
model.result('pg4').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg4').feature('lngr1').set('linewidth', 'preference');
model.result('pg4').feature('lngr1').selection.set([6]);
model.result('pg4').feature('lngr1').set('expr', 'semi.normJ');
model.result('pg4').feature('lngr1').set('descr', 'Total current density norm, nodal value');
model.result('pg4').feature('lngr1').set('resolution', 'norefine');
model.result('pg4').feature('lngr1').set('smooth', 'everywhere');
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').label('Current along mid line');
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').set('data', 'dset3');
model.result('pg5').setIndex('looplevelinput', 'last', 0);
model.result('pg5').set('legendpos', 'upperleft');
model.result('pg5').create('lngr1', 'LineGraph');
model.result('pg5').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg5').feature('lngr1').set('linewidth', 'preference');
model.result('pg5').feature('lngr1').selection.set([6]);
model.result('pg5').feature('lngr1').set('expr', 'V');
model.result('pg5').feature('lngr1').set('legend', true);
model.result('pg5').feature('lngr1').set('legendmethod', 'manual');
model.result('pg5').feature('lngr1').setIndex('legends', 'Nt_0 = 0.0 1/cm^2', 0);
model.result('pg5').feature('lngr1').set('resolution', 'norefine');
model.result('pg5').feature('lngr1').set('smooth', 'everywhere');
model.result('pg5').run;
model.result('pg5').feature.duplicate('lngr2', 'lngr1');
model.result('pg5').run;
model.result('pg5').feature('lngr2').set('data', 'dset4');
model.result('pg5').feature('lngr2').setIndex('looplevelinput', 'last', 0);
model.result('pg5').feature('lngr2').setIndex('legends', 'Nt_0 = 1.0E12 1/cm^2', 0);
model.result('pg5').feature.duplicate('lngr3', 'lngr2');
model.result('pg5').run;
model.result('pg5').feature('lngr3').set('data', 'dset5');
model.result('pg5').feature('lngr3').setIndex('legends', 'Nt_0 = 5.0E12 1/cm^2', 0);
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').set('titletype', 'none');
model.result('pg5').run;
model.result('pg5').label('Voltage along mid line');
model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').run;
model.result('pg6').set('data', 'dset5');
model.result('pg6').setIndex('looplevelinput', 'last', 0);
model.result('pg6').create('lngr1', 'LineGraph');
model.result('pg6').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg6').feature('lngr1').set('linewidth', 'preference');
model.result('pg6').feature('lngr1').set('expr', 'semi.Ec_e');
model.result('pg6').feature('lngr1').set('descr', 'Conduction band energy level');
model.result('pg6').feature('lngr1').set('unit', 'eV');
model.result('pg6').feature('lngr1').set('xdata', 'expr');
model.result('pg6').feature('lngr1').set('xdataexpr', 'r');
model.result('pg6').feature('lngr1').set('legend', true);
model.result('pg6').feature('lngr1').set('legendmethod', 'manual');
model.result('pg6').feature('lngr1').setIndex('legends', 'Conduction band', 0);
model.result('pg6').feature('lngr1').set('resolution', 'norefine');
model.result('pg6').feature('lngr1').set('smooth', 'everywhere');
model.result('pg6').feature('lngr1').selection.set([6]);
model.result('pg6').feature.duplicate('lngr2', 'lngr1');
model.result('pg6').run;
model.result('pg6').feature('lngr2').set('expr', 'semi.Ev_e');
model.result('pg6').feature('lngr2').set('descr', 'Valence band energy level');
model.result('pg6').feature('lngr2').setIndex('legends', 'Valence band', 0);
model.result('pg6').run;
model.result('pg6').feature.duplicate('lngr3', 'lngr2');
model.result('pg6').run;
model.result('pg6').feature('lngr3').set('expr', 'semi.Efn_e');
model.result('pg6').feature('lngr3').set('descr', 'Electron quasi-Fermi energy level');
model.result('pg6').feature('lngr3').set('linestyle', 'dashed');
model.result('pg6').feature('lngr3').setIndex('legends', 'Electron quasi-Fermi level', 0);
model.result('pg6').feature.duplicate('lngr4', 'lngr3');
model.result('pg6').run;
model.result('pg6').feature('lngr4').set('expr', 'semi.Efp_e');
model.result('pg6').feature('lngr4').set('descr', 'Hole quasi-Fermi energy level');
model.result('pg6').feature('lngr4').set('linestyle', 'dotted');
model.result('pg6').feature('lngr4').setIndex('legends', 'Hole quasi-Fermi level', 0);
model.result('pg6').run;
model.result('pg6').set('titletype', 'manual');
model.result('pg6').set('title', 'Energy level diagram');
model.result('pg6').set('xlabelactive', true);
model.result('pg6').set('xlabel', 'r (nm)');
model.result('pg6').set('ylabelactive', true);
model.result('pg6').set('ylabel', 'Energy');
model.result('pg6').set('legendpos', 'middleleft');
model.result('pg6').run;
model.result('pg6').label('Band diagram along mid line');
model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').run;
model.result('pg7').set('data', 'dset5');
model.result('pg7').setIndex('looplevelinput', 'manual', 0);
model.result('pg7').setIndex('looplevel', [1 6 16], 0);
model.result('pg7').set('legendpos', 'middleleft');
model.result('pg7').create('lngr1', 'LineGraph');
model.result('pg7').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg7').feature('lngr1').set('linewidth', 'preference');
model.result('pg7').feature('lngr1').selection.named('sel1');
model.result('pg7').feature('lngr1').set('expr', 'semi.tasr1.dtb1.ft');
model.result('pg7').feature('lngr1').set('descr', 'Trap occupancy');
model.result('pg7').feature('lngr1').set('xdata', 'expr');
model.result('pg7').feature('lngr1').set('xdataexpr', 'z');
model.result('pg7').feature('lngr1').set('resolution', 'norefine');
model.result('pg7').feature('lngr1').set('smooth', 'everywhere');
model.result('pg7').feature('lngr1').set('legend', true);
model.result('pg7').run;
model.result('pg7').run;
model.result('pg7').label('Trap occupancy');

model.title('Surface Trapping in a Silicon Nanowire Gate-All-Around Device');

model.description('This example analyzes a silicon nanowire gate-all-around device, with different trap densities at the gate. The effect of the traps is to increase the threshold voltage of the device.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;

model.label('nanowire_traps.mph');

model.modelNode.label('Components');

out = model;
