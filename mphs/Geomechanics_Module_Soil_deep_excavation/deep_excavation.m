function out = model
%
% deep_excavation.m
%
% Model exported on May 26 2025, 21:28 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Geomechanics_Module/Soil');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/solid', true);

model.param.set('X_stress', '-24[kPa]');
model.param.descr('X_stress', 'In situ stress, xx-component');
model.param.set('Y_stress', '-35[kPa]');
model.param.descr('Y_stress', 'In situ stress, yy-component');
model.param.set('Z_stress', '-24[kPa]');
model.param.descr('Z_stress', 'In situ stress, zz-component');
model.param.set('n_struts', '40');
model.param.descr('n_struts', 'Number of struts');
model.param.set('E_struts', '2e5[MPa]');
model.param.descr('E_struts', 'Young''s modulus of the struts');
model.param.set('A_struts', '15[cm^2]');
model.param.descr('A_struts', 'Cross section area of the struts');
model.param.set('l_struts', '30[m]');
model.param.descr('l_struts', 'Length of struts');
model.param.set('S_struts', 'n_struts*(E_struts*A_struts/l_struts)');
model.param.descr('S_struts', 'Stiffness of the struts');
model.param.set('U_max', '25[mm]');
model.param.descr('U_max', 'Allowed wall deflection');
model.param.set('Stage_1', '-4.8[m]');
model.param.descr('Stage_1', 'First excavation step, first strut');
model.param.set('Stage_2', '-9.3[m]');
model.param.descr('Stage_2', 'Second excavation step, second strut');
model.param.set('Stage_3', '-14.35[m]');
model.param.descr('Stage_3', 'Third excavation step, third strut');
model.param.set('Depth', '0[m]');
model.param.descr('Depth', 'Excavation depth (parameter)');

model.func.create('rm1', 'Ramp');
model.func('rm1').label('Ramp: Strut Force');
model.func('rm1').set('funcname', 'strut_force');
model.func('rm1').set('location', 'U_max');
model.func('rm1').set('slope', 'S_struts');
model.func('rm1').set('baseline', '0[N]');
model.func('rm1').set('smoothzonelocactive', true);
model.func('rm1').set('smoothzoneloc', '0.1[mm]');

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', [90 60]);
model.geom('geom1').feature('r1').set('pos', [0 -60]);
model.geom('geom1').run('r1');
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').set('size', [90 20]);
model.geom('geom1').feature('r2').set('pos', [0 -20]);
model.geom('geom1').run('r2');
model.geom('geom1').create('uni1', 'Union');
model.geom('geom1').feature('uni1').selection('input').set({'r1' 'r2'});
model.geom('geom1').run('uni1');
model.geom('geom1').create('r3', 'Rectangle');
model.geom('geom1').feature('r3').set('size', [30 30]);
model.geom('geom1').feature('r3').set('pos', [0 -30]);
model.geom('geom1').run('r3');
model.geom('geom1').create('r4', 'Rectangle');
model.geom('geom1').feature('r4').set('size', [0.8 30]);
model.geom('geom1').feature('r4').set('pos', [30 -30]);
model.geom('geom1').run('r4');
model.geom('geom1').create('dif1', 'Difference');
model.geom('geom1').feature('dif1').selection('input').set({'uni1'});
model.geom('geom1').feature('dif1').selection('input2').set({'r3' 'r4'});
model.geom('geom1').feature('dif1').set('keepsubtract', true);
model.geom('geom1').run('dif1');
model.geom('geom1').create('del1', 'Delete');
model.geom('geom1').feature('del1').selection('input').init;
model.geom('geom1').feature('del1').selection('input').set({'r3'});
model.geom('geom1').run('del1');
model.geom('geom1').create('ls1', 'LineSegment');
model.geom('geom1').feature('ls1').set('specify1', 'coord');
model.geom('geom1').feature('ls1').set('specify2', 'coord');
model.geom('geom1').feature('ls1').set('coord1', [30 0]);
model.geom('geom1').feature('ls1').set('coord2', [30 0]);
model.geom('geom1').feature('ls1').set('coord1', {'30' 'Stage_1+1'});
model.geom('geom1').feature('ls1').set('coord2', {'30' 'Stage_1'});
model.geom('geom1').run('ls1');
model.geom('geom1').create('ls2', 'LineSegment');
model.geom('geom1').feature('ls2').set('specify1', 'coord');
model.geom('geom1').feature('ls2').set('specify2', 'coord');
model.geom('geom1').feature('ls2').set('coord1', [30 0]);
model.geom('geom1').feature('ls2').set('coord2', [30 0]);
model.geom('geom1').feature('ls2').set('coord1', {'30' 'Stage_2+1'});
model.geom('geom1').feature('ls2').set('coord2', {'30' 'Stage_2'});
model.geom('geom1').run('ls2');
model.geom('geom1').create('ls3', 'LineSegment');
model.geom('geom1').feature('ls3').set('specify1', 'coord');
model.geom('geom1').feature('ls3').set('specify2', 'coord');
model.geom('geom1').feature('ls3').set('coord1', [30 0]);
model.geom('geom1').feature('ls3').set('coord2', [30 0]);
model.geom('geom1').feature('ls3').set('coord1', {'30' 'Stage_3+1'});
model.geom('geom1').feature('ls3').set('coord2', {'30' 'Stage_3'});
model.geom('geom1').run('ls3');
model.geom('geom1').create('uni2', 'Union');
model.geom('geom1').feature('uni2').selection('input').set({'ls1' 'ls2' 'ls3' 'r4'});
model.geom('geom1').run('uni2');
model.geom('geom1').feature('fin').set('action', 'assembly');
model.geom('geom1').feature('fin').set('createpairs', false);
model.geom('geom1').run('fin');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');
model.selection('sel1').label('Wall Diaphragm');
model.selection('sel1').geom(1);
model.selection('sel1').set([20]);
model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').label('Wall Soil');
model.selection('sel2').geom(1);
model.selection('sel2').set([5 6]);

model.cpl.create('genext1', 'GeneralExtrusion', 'geom1');
model.cpl('genext1').selection.geom('geom1', 1);
model.cpl('genext1').selection.set([12]);
model.cpl('genext1').set('srcframe', 'material');
model.cpl('genext1').set('dstmap', {'X' 'Y'});
model.cpl.create('genext2', 'GeneralExtrusion', 'geom1');
model.cpl('genext2').selection.geom('geom1', 1);
model.cpl('genext2').selection.named('sel1');
model.cpl('genext2').set('srcframe', 'material');
model.cpl('genext2').set('dstmap', {'X' 'Y'});

model.physics('solid').feature('lemm1').create('soil1', 'SoilModel', 2);
model.physics('solid').feature('lemm1').feature('soil1').set('MatchtoMC', true);
model.physics('solid').feature('lemm1').feature('soil1').selection.set([1 2]);
model.physics('solid').feature('lemm1').create('exs1', 'ExternalStress', 2);
model.physics('solid').feature('lemm1').feature('exs1').selection.set([1 2]);
model.physics('solid').feature('lemm1').feature('exs1').set('StressInputType', 'InSituStress');
model.physics('solid').feature('lemm1').feature('exs1').set('sins', {'X_stress' '0' '0' '0' 'Y_stress' '0' '0' '0' 'Z_stress'});
model.physics('solid').create('sym1', 'SymmetrySolid', 1);
model.physics('solid').feature('sym1').selection.set([1]);
model.physics('solid').create('fix1', 'Fixed', 1);
model.physics('solid').feature('fix1').selection.set([2]);
model.physics('solid').create('roll1', 'Roller', 1);
model.physics('solid').feature('roll1').selection.set([9 10]);
model.physics('solid').create('disp1', 'Displacement1', 1);
model.physics('solid').feature('disp1').selection.set([4]);
model.physics('solid').feature('disp1').setIndex('Direction', 'prescribed', 1);
model.physics('solid').feature('disp1').setIndex('U0', 'genext1(v)', 1);
model.physics('solid').create('disp2', 'Displacement1', 1);
model.physics('solid').feature('disp2').selection.named('sel2');
model.physics('solid').feature('disp2').setIndex('Direction', 'prescribed', 0);
model.physics('solid').feature('disp2').setIndex('U0', 'genext2(u)', 0);
model.physics('solid').create('bndl1', 'BoundaryLoad', 1);
model.physics('solid').feature('bndl1').selection.set([20]);
model.physics('solid').feature('bndl1').set('FperArea', {'X_stress*(y>Depth)' '0' '0'});
model.physics('solid').create('bndl2', 'BoundaryLoad', 1);
model.physics('solid').feature('bndl2').label('Boundary Load: Strut 1');
model.physics('solid').feature('bndl2').selection.set([17]);
model.physics('solid').feature('bndl2').set('LoadType', 'TotalForce');
model.physics('solid').feature('bndl2').set('Ftot', {'strut_force(abs(u))*(Depth<Stage_1)' '0' '0'});
model.physics('solid').create('bndl3', 'BoundaryLoad', 1);
model.physics('solid').feature('bndl3').label('Boundary Load: Strut 2');
model.physics('solid').feature('bndl3').selection.set([15]);
model.physics('solid').feature('bndl3').set('LoadType', 'TotalForce');
model.physics('solid').feature('bndl3').set('Ftot', {'strut_force(abs(u))*(Depth<Stage_2)' '0' '0'});
model.physics('solid').create('bndl4', 'BoundaryLoad', 1);
model.physics('solid').feature('bndl4').label('Boundary Load: Strut 3');
model.physics('solid').feature('bndl4').selection.set([13]);
model.physics('solid').feature('bndl4').set('LoadType', 'TotalForce');
model.physics('solid').feature('bndl4').set('Ftot', {'strut_force(abs(u))*(Depth<Stage_3)' '0' '0'});

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').label('Soil, Upper Layer');
model.material('mat1').selection.set([2]);
model.material('mat1').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat1').propertyGroup('Enu').set('E', {'20[MPa]'});
model.material('mat1').propertyGroup('Enu').set('nu', {'0.3'});
model.material('mat1').propertyGroup('def').set('density', {'1900'});
model.material('mat1').propertyGroup.create('MohrCoulomb', 'Mohr_Coulomb_criterion');
model.material('mat1').propertyGroup('MohrCoulomb').set('cohesion', {'0'});
model.material('mat1').propertyGroup('MohrCoulomb').set('internalphi', {'35[deg]'});
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').label('Soil, Lower Layer');
model.material('mat2').selection.set([1]);
model.material('mat2').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat2').propertyGroup('Enu').set('E', {'60[MPa]'});
model.material('mat2').propertyGroup('Enu').set('nu', {'0.3'});
model.material('mat2').propertyGroup('def').set('density', {'1900'});
model.material('mat2').propertyGroup.create('MohrCoulomb', 'Mohr_Coulomb_criterion');
model.material('mat2').propertyGroup('MohrCoulomb').set('cohesion', {'0'});
model.material('mat2').propertyGroup('MohrCoulomb').set('internalphi', {'35[deg]'});
model.material.create('mat3', 'Common', 'comp1');
model.material('mat3').label('Retaining Wall');
model.material('mat3').selection.set([3]);
model.material('mat3').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat3').propertyGroup('Enu').set('E', {'30[GPa]'});
model.material('mat3').propertyGroup('Enu').set('nu', {'0.15'});
model.material('mat3').propertyGroup('def').set('density', {'2400'});

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('map1').selection.set([3]);
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.named('sel1');
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 60);
model.mesh('mesh1').feature('map1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis2').selection.set([12]);
model.mesh('mesh1').feature('map1').feature('dis2').set('numelem', 2);
model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').create('size1', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size1').set('hauto', 3);
model.mesh('mesh1').feature('ftri1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('ftri1').feature('dis1').selection.set([6]);
model.mesh('mesh1').feature('ftri1').feature('dis1').set('numelem', 40);
model.mesh('mesh1').feature('ftri1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('ftri1').feature('dis2').selection.set([5]);
model.mesh('mesh1').feature('ftri1').feature('dis2').set('numelem', 20);
model.mesh('mesh1').feature('ftri1').create('dis3', 'Distribution');
model.mesh('mesh1').feature('ftri1').feature('dis3').selection.set([4]);
model.mesh('mesh1').feature('ftri1').feature('dis3').set('numelem', 3);
model.mesh('mesh1').run;

model.view('view1').axis.set('xmin', 10);
model.view('view1').axis.set('xmax', 50);
model.view('view1').axis.set('ymin', -32);
model.view('view1').axis.set('ymax', 2);

model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 'X_stress', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'Pa', 0);
model.study('std1').feature('stat').setIndex('pname', 'X_stress', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'Pa', 0);
model.study('std1').feature('stat').setIndex('pname', 'Depth', 0);
model.study('std1').feature('stat').setIndex('plistarr', 'range(0,-2,-26)', 0);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*108.16653826391968');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s1').set('control', 'stat');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol1').feature('s1').feature('p1').set('paramtuning', true);
model.sol('sol1').feature('s1').feature('p1').set('pinitstep', 0.5);
model.sol('sol1').feature('s1').feature('p1').set('pmaxstep', 0.5);
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 14, 0);
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('surf1').set('threshold', 'manual');
model.result('pg1').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg1').feature('surf1').set('colortable', 'Rainbow');
model.result('pg1').feature('surf1').set('colortabletrans', 'none');
model.result('pg1').feature('surf1').set('colorscalemode', 'linear');
model.result('pg1').feature('surf1').set('resolution', 'normal');
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg1').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg1').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg1').run;
model.result('pg1').label('Displacement');
model.result('pg1').run;
model.result('pg1').feature('surf1').set('expr', 'solid.disp');
model.result('pg1').feature('surf1').set('descr', 'Displacement magnitude');
model.result('pg1').feature('surf1').set('unit', 'mm');
model.result('pg1').feature('surf1').set('colortable', 'SpectrumLight');
model.result('pg1').run;
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 14, 0);
model.result('pg2').label('Equivalent Plastic Strain (solid)');
model.result('pg2').set('defaultPlotID', 'equivalentPlasticStrain');
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'solid.epeGp'});
model.result('pg2').feature('surf1').set('inheritplot', 'none');
model.result('pg2').feature('surf1').set('resolution', 'normal');
model.result('pg2').feature('surf1').set('colortabletype', 'discrete');
model.result('pg2').feature('surf1').set('bandcount', 11);
model.result('pg2').feature('surf1').set('colortable', 'AuroraAustralisDark');
model.result('pg2').feature('surf1').set('descractive', true);
model.result('pg2').feature('surf1').set('descr', 'Equivalent plastic strain');
model.result('pg2').label('Equivalent Plastic Strain (solid)');
model.result('pg2').run;
model.result('pg2').label('Plastic Region');
model.result('pg2').run;
model.result('pg2').feature('surf1').set('expr', 'solid.epeGp>0');
model.result('pg2').feature('surf1').set('bandcount', 2);
model.result('pg2').feature('surf1').set('resolution', 'custom');
model.result('pg2').feature('surf1').set('refine', 2);
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('Wall Deflection');
model.result('pg3').set('titletype', 'manual');
model.result('pg3').set('title', 'Wall deflection (mm)');
model.result('pg3').set('xlabelactive', true);
model.result('pg3').set('xlabel', 'Horizontal displacement (mm)');
model.result('pg3').set('ylabelactive', true);
model.result('pg3').set('ylabel', 'Depth(m)');
model.result('pg3').set('legendpos', 'lowerleft');
model.result('pg3').create('lngr1', 'LineGraph');
model.result('pg3').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg3').feature('lngr1').set('linewidth', 'preference');
model.result('pg3').feature('lngr1').selection.named('sel1');
model.result('pg3').feature('lngr1').set('expr', 'y');
model.result('pg3').feature('lngr1').set('xdata', 'expr');
model.result('pg3').feature('lngr1').set('xdataexpr', 'u');
model.result('pg3').feature('lngr1').set('xdataunit', 'mm');
model.result('pg3').feature('lngr1').set('legend', true);
model.result('pg3').feature('lngr1').set('legendprefix', 'Depth=');
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Surface Settlement');
model.result('pg4').set('titletype', 'manual');
model.result('pg4').set('title', 'Surface settlement');
model.result('pg4').set('xlabelactive', true);
model.result('pg4').set('xlabel', 'Distance from the diaphragm (m)');
model.result('pg4').set('ylabelactive', true);
model.result('pg4').set('ylabel', 'Vertical displacement (mm)');
model.result('pg4').set('legendpos', 'lowerright');
model.result('pg4').create('lngr1', 'LineGraph');
model.result('pg4').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg4').feature('lngr1').set('linewidth', 'preference');
model.result('pg4').feature('lngr1').selection.set([8]);
model.result('pg4').feature('lngr1').set('expr', 'v');
model.result('pg4').feature('lngr1').set('unit', 'mm');
model.result('pg4').feature('lngr1').set('legend', true);
model.result('pg4').feature('lngr1').set('legendprefix', 'Depth=');
model.result('pg4').run;
model.result.dataset.create('extr1', 'Extrude2D');
model.result.dataset('extr1').set('zmax', '80');
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').run;
model.result('pg5').label('Displacement 3D');
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('unit', 'mm');
model.result('pg5').feature('surf1').set('colortable', 'SpectrumLight');
model.result('pg5').feature('surf1').create('def1', 'Deform');
model.result('pg5').run;
model.result('pg5').run;

model.title('Deep Excavation');

model.description(['This example shows how to model a deep excavation. The main application area of that kind of models is civil engineering. In this case, the in situ lateral pressure acting on the retaining wall during the excavation of the soil is modeled with boundary loads. The soil assumes Drucker' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Prager plasticity.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;

model.label('deep_excavation.mph');

model.modelNode.label('Components');

out = model;
