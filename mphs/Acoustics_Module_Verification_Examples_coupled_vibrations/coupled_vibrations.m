function out = model
%
% coupled_vibrations.m
%
% Model exported on May 26 2025, 21:25 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Acoustics_Module/Verification_Examples');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('acpr', 'PressureAcoustics', 'geom1');
model.physics('acpr').model('comp1');
model.physics.create('shell', 'Shell', 'geom1');
model.physics('shell').model('comp1');

model.multiphysics.create('asb1', 'AcousticStructureBoundary', 'geom1', 2);
model.multiphysics('asb1').set('Acoustics_physics', 'acpr');
model.multiphysics('asb1').set('Structure_physics', 'shell');
model.multiphysics('asb1').selection.all;

model.study.create('std1');
model.study('std1').create('eig', 'Eigenfrequency');
model.study('std1').feature('eig').set('chkeigregion', true);
model.study('std1').feature('eig').set('conrad', '1');
model.study('std1').feature('eig').set('conradynhm', '1');
model.study('std1').feature('eig').set('storefact', false);
model.study('std1').feature('eig').set('solnum', 'auto');
model.study('std1').feature('eig').set('notsolnum', 'auto');
model.study('std1').feature('eig').set('outputmap', {});
model.study('std1').feature('eig').set('ngenAUX', '1');
model.study('std1').feature('eig').set('goalngenAUX', '1');
model.study('std1').feature('eig').set('ngenAUX', '1');
model.study('std1').feature('eig').set('goalngenAUX', '1');
model.study('std1').feature('eig').setSolveFor('/physics/acpr', true);
model.study('std1').feature('eig').setSolveFor('/physics/shell', true);
model.study('std1').feature('eig').setSolveFor('/multiphysics/asb1', true);

model.geom('geom1').lengthUnit('mm');
model.geom('geom1').create('cyl1', 'Cylinder');
model.geom('geom1').feature('cyl1').set('r', 38);
model.geom('geom1').feature('cyl1').set('h', 255);
model.geom('geom1').run('cyl1');
model.geom('geom1').run;

model.physics('shell').selection.set([3]);
model.physics('shell').feature('to1').set('d', '0.38[mm]');
model.physics('shell').create('fix1', 'Fixed', 1);
model.physics('shell').feature('fix1').selection.set([2 3 7 10]);

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').label('Acoustic Material');
model.material('mat1').propertyGroup('def').set('density', {'1.2'});
model.material('mat1').propertyGroup('def').set('soundspeed', {'343'});
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').label('Structural Material');
model.material('mat2').selection.geom('geom1', 2);
model.material('mat2').selection.set([3]);
model.material('mat2').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat2').propertyGroup('Enu').set('E', {'210[GPa]'});
model.material('mat2').propertyGroup('Enu').set('nu', {'0.3'});
model.material('mat2').propertyGroup('def').set('density', {'7800'});

model.mesh('mesh1').create('fq1', 'FreeQuad');
model.mesh('mesh1').feature('fq1').selection.set([3]);
model.mesh('mesh1').feature('size').set('custom', true);
model.mesh('mesh1').feature('size').set('hmax', 10);
model.mesh('mesh1').run('size');
model.mesh('mesh1').run('fq1');
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').run('swe1');

model.study('std1').label('Structural Analysis');
model.study('std1').feature('eig').set('neigsactive', true);
model.study('std1').feature('eig').set('neigs', 20);
model.study('std1').feature('eig').set('shift', '500');
model.study('std1').feature('eig').setEntry('activate', 'acpr', false);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'eig');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_ar').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_ar').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_ar').set('scaleval', '0.01');
model.sol('sol1').feature('v1').set('control', 'eig');
model.sol('sol1').create('e1', 'Eigenvalue');
model.sol('sol1').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol1').feature('e1').set('eigvfunscaleparam', '2.77E-7');
model.sol('sol1').feature('e1').set('control', 'eig');
model.sol('sol1').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('e1').create('d1', 'Direct');
model.sol('sol1').feature('e1').feature('d1').set('linsolver', 'mumps');
model.sol('sol1').feature('e1').feature('d1').label('Suggested Direct Solver (asb1)');
model.sol('sol1').feature('e1').create('i1', 'Iterative');
model.sol('sol1').feature('e1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('e1').feature('i1').label('Suggested Iterative Solver (GMRES with GMG and Direct Precon.) (asb1)');
model.sol('sol1').feature('e1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('e1').feature('i1').feature('mg1').set('hybridization', 'multi');
model.sol('sol1').feature('e1').feature('i1').feature('mg1').set('hybridvar', {});
model.sol('sol1').feature('e1').feature('i1').create('dp1', 'DirectPreconditioner');
model.sol('sol1').feature('e1').feature('i1').feature('dp1').set('hybridization', 'multi');
model.sol('sol1').feature('e1').feature('i1').feature('dp1').set('hybridvar', {'comp1_u' 'comp1_ar'});
model.sol('sol1').feature('e1').feature('d1').active(true);
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.dataset.create('dset1shellshl', 'Shell');
model.result.dataset('dset1shellshl').set('data', 'dset1');
model.result.dataset('dset1shellshl').setIndex('topconst', '1', 3, 1);
model.result.dataset('dset1shellshl').setIndex('bottomconst', '-1', 3, 1);
model.result.dataset('dset1shellshl').setIndex('orientationexpr', 'shell.nlX', 0);
model.result.dataset('dset1shellshl').setIndex('displacementexpr', 'arx', 0);
model.result.dataset('dset1shellshl').setIndex('orientationexpr', 'shell.nlY', 1);
model.result.dataset('dset1shellshl').setIndex('displacementexpr', 'ary', 1);
model.result.dataset('dset1shellshl').setIndex('orientationexpr', 'shell.nlZ', 2);
model.result.dataset('dset1shellshl').setIndex('displacementexpr', 'arz', 2);
model.result.dataset('dset1shellshl').set('distanceexpr', 'shell.z_pos');
model.result.dataset('dset1shellshl').set('seplevels', false);
model.result.dataset('dset1shellshl').set('resolution', 2);
model.result.dataset('dset1shellshl').set('areascalefactor', 'shell.ASF');
model.result.dataset('dset1shellshl').set('linescalefactor', 'shell.LSF');
model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'dset1shellshl');
model.result('pg1').setIndex('looplevel', 1, 0);
model.result('pg1').set('defaultPlotID', 'modeShape');
model.result('pg1').label('Mode Shape (shell)');
model.result('pg1').set('showlegends', false);
model.result('pg1').set('data', 'dset1shellshl');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'shell.disp'});
model.result('pg1').feature('surf1').set('threshold', 'manual');
model.result('pg1').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg1').feature('surf1').set('colortable', 'Rainbow');
model.result('pg1').feature('surf1').set('colortabletrans', 'none');
model.result('pg1').feature('surf1').set('colorscalemode', 'linear');
model.result('pg1').feature('surf1').set('colortable', 'AuroraBorealis');
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg1').feature('surf1').feature('def').set('expr', {'shell.u' 'shell.v' 'shell.w'});
model.result.evaluationGroup.create('std1EvgFrq', 'EvaluationGroup');
model.result.evaluationGroup('std1EvgFrq').set('defaultPlotID', 'eigenfrequenciesTable_shell');
model.result.evaluationGroup('std1EvgFrq').set('data', 'dset1');
model.result.evaluationGroup('std1EvgFrq').label('Eigenfrequencies (Structural Analysis)');
model.result.evaluationGroup('std1EvgFrq').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('expr', '2*pi*freq', 0);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('unit', 'rad/s', 0);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('descr', 'Angular frequency', 0);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('expr', 'imag(freq)/abs(freq)', 1);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('unit', '1', 1);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('descr', 'Damping ratio', 1);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('expr', 'abs(freq)/imag(freq)/2', 2);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('unit', '1', 2);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('descr', 'Quality factor', 2);
model.result.evaluationGroup('std1EvgFrq').run;
model.result('pg1').run;
model.result('pg1').label('Mode Shape, Structural Analysis');
model.result('pg1').run;

model.view('view1').set('scenelight', false);

model.result('pg1').run;
model.result('pg1').set('looplevel', [2]);
model.result('pg1').run;

model.study.create('std2');
model.study('std2').create('eig', 'Eigenfrequency');
model.study('std2').feature('eig').set('plotgroup', 'Default');
model.study('std2').feature('eig').set('chkeigregion', true);
model.study('std2').feature('eig').set('conrad', '1');
model.study('std2').feature('eig').set('conradynhm', '1');
model.study('std2').feature('eig').set('storefact', false);
model.study('std2').feature('eig').set('solnum', 'auto');
model.study('std2').feature('eig').set('notsolnum', 'auto');
model.study('std2').feature('eig').set('outputmap', {});
model.study('std2').feature('eig').set('ngenAUX', '1');
model.study('std2').feature('eig').set('goalngenAUX', '1');
model.study('std2').feature('eig').set('ngenAUX', '1');
model.study('std2').feature('eig').set('goalngenAUX', '1');
model.study('std2').feature('eig').setSolveFor('/physics/acpr', true);
model.study('std2').feature('eig').setSolveFor('/physics/shell', true);
model.study('std2').feature('eig').setSolveFor('/multiphysics/asb1', true);
model.study('std2').label('Acoustics Analysis');
model.study('std2').feature('eig').set('neigsactive', true);
model.study('std2').feature('eig').set('neigs', 20);
model.study('std2').feature('eig').set('shift', '500');
model.study('std2').feature('eig').set('eigwhich', 'lr');
model.study('std2').feature('eig').setEntry('activate', 'shell', false);

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'eig');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'eig');
model.sol('sol2').create('e1', 'Eigenvalue');
model.sol('sol2').feature('e1').set('neigs', 6);
model.sol('sol2').feature('e1').set('shift', '0');
model.sol('sol2').feature('e1').set('rtol', 1.0E-6);
model.sol('sol2').feature('e1').set('transform', 'none');
model.sol('sol2').feature('e1').set('eigref', '100');
model.sol('sol2').feature('e1').set('eigvfunscale', 'average');
model.sol('sol2').feature('e1').set('control', 'eig');
model.sol('sol2').feature('e1').feature('aDef').set('complexfun', true);
model.sol('sol2').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('e1').feature('aDef').set('matherr', true);
model.sol('sol2').feature('e1').feature('aDef').set('blocksizeactive', false);
model.sol('sol2').feature('e1').create('d1', 'Direct');
model.sol('sol2').feature('e1').feature('d1').set('linsolver', 'mumps');
model.sol('sol2').feature('e1').feature('d1').label('Suggested Direct Solver (asb1)');
model.sol('sol2').feature('e1').create('i1', 'Iterative');
model.sol('sol2').feature('e1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('e1').feature('i1').label('Suggested Iterative Solver (GMRES with GMG) (asb1)');
model.sol('sol2').feature('e1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('e1').feature('i1').feature('mg1').set('hybridization', 'multi');
model.sol('sol2').feature('e1').feature('i1').feature('mg1').set('hybridvar', {'comp1_p'});
model.sol('sol2').feature('e1').feature('i1').create('mg2', 'Multigrid');
model.sol('sol2').feature('e1').feature('i1').feature('mg2').set('hybridization', 'multi');
model.sol('sol2').feature('e1').feature('i1').feature('mg2').set('hybridvar', {});
model.sol('sol2').feature('e1').create('i2', 'Iterative');
model.sol('sol2').feature('e1').feature('i2').set('linsolver', 'gmres');
model.sol('sol2').feature('e1').feature('i2').label('Suggested Iterative Solver (GMRES with GMG and Direct Precond.) (asb1)');
model.sol('sol2').feature('e1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol2').feature('e1').feature('i2').feature('mg1').set('hybridization', 'multi');
model.sol('sol2').feature('e1').feature('i2').feature('mg1').set('hybridvar', {'comp1_p'});
model.sol('sol2').feature('e1').feature('i2').create('dp1', 'DirectPreconditioner');
model.sol('sol2').feature('e1').feature('i2').feature('dp1').set('hybridization', 'multi');
model.sol('sol2').feature('e1').feature('i2').feature('dp1').set('hybridvar', {});
model.sol('sol2').feature('e1').feature('i2').feature('dp1').set('pivotperturb', '1.0E-9');
model.sol('sol2').feature('e1').feature('i2').feature('dp1').set('mumpsblr', true);
model.sol('sol2').feature('e1').feature('d1').active(true);
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'dset2');
model.result('pg2').setIndex('looplevel', 1, 0);
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'acpr.p_t'});
model.result('pg2').feature('surf1').set('colortable', 'Wave');
model.result('pg2').feature('surf1').set('colorscalemode', 'linearsymmetric');
model.result('pg2').set('showlegendsunit', true);
model.result('pg2').label('Acoustic Pressure (acpr)');
model.result('pg2').feature('surf1').set('colortable', 'WaveLight');
model.result('pg2').create('con1', 'Contour');
model.result('pg2').feature('con1').set('expr', {'acpr.p_t'});
model.result('pg2').feature('con1').set('colortable', 'Wave');
model.result('pg2').feature('con1').set('colorscalemode', 'linearsymmetric');
model.result('pg2').feature('con1').set('colorlegend', false);
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').set('data', 'dset2');
model.result('pg3').setIndex('looplevel', 1, 0);
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', {'acpr.Lp_t'});
model.result('pg3').feature('surf1').set('colortable', 'Rainbow');
model.result('pg3').feature('surf1').set('colorscalemode', 'linear');
model.result('pg3').set('showlegendsunit', true);
model.result('pg3').label('Sound Pressure Level (acpr)');
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').set('data', 'dset2');
model.result('pg4').setIndex('looplevel', 1, 0);
model.result('pg4').create('iso1', 'Isosurface');
model.result('pg4').feature('iso1').set('expr', {'acpr.p_t'});
model.result('pg4').feature('iso1').set('number', '10');
model.result('pg4').feature('iso1').set('colortable', 'Wave');
model.result('pg4').feature('iso1').set('colorscalemode', 'linearsymmetric');
model.result('pg4').set('showlegendsunit', true);
model.result('pg4').label('Acoustic Pressure, Isosurfaces (acpr)');
model.result.evaluationGroup.create('std2EvgFrq', 'EvaluationGroup');
model.result.evaluationGroup('std2EvgFrq').set('defaultPlotID', 'eigenfrequenciesTable_acpr');
model.result.evaluationGroup('std2EvgFrq').set('data', 'dset2');
model.result.evaluationGroup('std2EvgFrq').label('Eigenfrequencies (Acoustics Analysis)');
model.result.evaluationGroup('std2EvgFrq').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('std2EvgFrq').feature('gev1').setIndex('expr', '2*pi*freq', 0);
model.result.evaluationGroup('std2EvgFrq').feature('gev1').setIndex('unit', 'rad/s', 0);
model.result.evaluationGroup('std2EvgFrq').feature('gev1').setIndex('descr', 'Angular frequency', 0);
model.result.evaluationGroup('std2EvgFrq').feature('gev1').setIndex('expr', 'imag(freq)/abs(freq)', 1);
model.result.evaluationGroup('std2EvgFrq').feature('gev1').setIndex('unit', '1', 1);
model.result.evaluationGroup('std2EvgFrq').feature('gev1').setIndex('descr', 'Damping ratio', 1);
model.result.evaluationGroup('std2EvgFrq').feature('gev1').setIndex('expr', 'abs(freq)/imag(freq)/2', 2);
model.result.evaluationGroup('std2EvgFrq').feature('gev1').setIndex('unit', '1', 2);
model.result.evaluationGroup('std2EvgFrq').feature('gev1').setIndex('descr', 'Quality factor', 2);
model.result.evaluationGroup('std2EvgFrq').run;
model.result('pg2').run;
model.result('pg4').run;
model.result('pg4').label('Acoustic Pressure, Acoustics Analysis, Isosurfaces');
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').set('looplevel', [2]);
model.result('pg4').run;

model.study.create('std3');
model.study('std3').create('eig', 'Eigenfrequency');
model.study('std3').feature('eig').set('plotgroup', 'Default');
model.study('std3').feature('eig').set('chkeigregion', true);
model.study('std3').feature('eig').set('conrad', '1');
model.study('std3').feature('eig').set('conradynhm', '1');
model.study('std3').feature('eig').set('storefact', false);
model.study('std3').feature('eig').set('solnum', 'auto');
model.study('std3').feature('eig').set('notsolnum', 'auto');
model.study('std3').feature('eig').set('outputmap', {});
model.study('std3').feature('eig').set('ngenAUX', '1');
model.study('std3').feature('eig').set('goalngenAUX', '1');
model.study('std3').feature('eig').set('ngenAUX', '1');
model.study('std3').feature('eig').set('goalngenAUX', '1');
model.study('std3').feature('eig').setSolveFor('/physics/acpr', true);
model.study('std3').feature('eig').setSolveFor('/physics/shell', true);
model.study('std3').feature('eig').setSolveFor('/multiphysics/asb1', true);
model.study('std3').label('Coupled Analysis');
model.study('std3').feature('eig').set('neigsactive', true);
model.study('std3').feature('eig').set('neigs', 20);
model.study('std3').feature('eig').set('shift', '500');
model.study('std3').feature('eig').set('eigwhich', 'lr');

model.sol.create('sol3');
model.sol('sol3').study('std3');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std3');
model.sol('sol3').feature('st1').set('studystep', 'eig');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').feature('comp1_ar').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_ar').set('resscalemethod', 'parent');
model.sol('sol3').feature('v1').feature('comp1_ar').set('scaleval', '0.01');
model.sol('sol3').feature('v1').set('control', 'eig');
model.sol('sol3').create('e1', 'Eigenvalue');
model.sol('sol3').feature('e1').set('neigs', 20);
model.sol('sol3').feature('e1').set('shift', '0');
model.sol('sol3').feature('e1').set('rtol', 1.0E-6);
model.sol('sol3').feature('e1').set('transform', 'none');
model.sol('sol3').feature('e1').set('eigref', '100');
model.sol('sol3').feature('e1').set('eigvfunscaleparam', '2.77E-7');
model.sol('sol3').feature('e1').set('control', 'eig');
model.sol('sol3').feature('e1').feature('aDef').set('complexfun', true);
model.sol('sol3').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('e1').feature('aDef').set('matherr', true);
model.sol('sol3').feature('e1').feature('aDef').set('blocksizeactive', false);
model.sol('sol3').feature('e1').create('d1', 'Direct');
model.sol('sol3').feature('e1').feature('d1').set('linsolver', 'mumps');
model.sol('sol3').feature('e1').feature('d1').label('Suggested Direct Solver (asb1) (Merged)');
model.sol('sol3').feature('e1').create('i1', 'Iterative');
model.sol('sol3').feature('e1').feature('i1').set('linsolver', 'gmres');
model.sol('sol3').feature('e1').feature('i1').label('Suggested Iterative Solver (GMRES with GMG and Direct Precon.) (asb1)');
model.sol('sol3').feature('e1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol3').feature('e1').feature('i1').feature('mg1').set('hybridization', 'multi');
model.sol('sol3').feature('e1').feature('i1').feature('mg1').set('hybridvar', {'comp1_p'});
model.sol('sol3').feature('e1').feature('i1').create('dp1', 'DirectPreconditioner');
model.sol('sol3').feature('e1').feature('i1').feature('dp1').set('hybridization', 'multi');
model.sol('sol3').feature('e1').feature('i1').feature('dp1').set('hybridvar', {'comp1_u' 'comp1_ar'});
model.sol('sol3').feature('e1').feature('d1').active(true);
model.sol('sol3').attach('std3');
model.sol('sol3').runAll;

model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').set('data', 'dset3');
model.result('pg5').setIndex('looplevel', 1, 0);
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', {'acpr.p_t'});
model.result('pg5').feature('surf1').set('colortable', 'Wave');
model.result('pg5').feature('surf1').set('colorscalemode', 'linearsymmetric');
model.result('pg5').set('showlegendsunit', true);
model.result('pg5').label('Acoustic Pressure (acpr) 1');
model.result('pg5').feature('surf1').set('colortable', 'WaveLight');
model.result('pg5').create('con1', 'Contour');
model.result('pg5').feature('con1').set('expr', {'acpr.p_t'});
model.result('pg5').feature('con1').set('colortable', 'Wave');
model.result('pg5').feature('con1').set('colorscalemode', 'linearsymmetric');
model.result('pg5').feature('con1').set('colorlegend', false);
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').set('data', 'dset3');
model.result('pg6').setIndex('looplevel', 1, 0);
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', {'acpr.Lp_t'});
model.result('pg6').feature('surf1').set('colortable', 'Rainbow');
model.result('pg6').feature('surf1').set('colorscalemode', 'linear');
model.result('pg6').set('showlegendsunit', true);
model.result('pg6').label('Sound Pressure Level (acpr) 1');
model.result.create('pg7', 'PlotGroup3D');
model.result('pg7').set('data', 'dset3');
model.result('pg7').setIndex('looplevel', 1, 0);
model.result('pg7').create('iso1', 'Isosurface');
model.result('pg7').feature('iso1').set('expr', {'acpr.p_t'});
model.result('pg7').feature('iso1').set('number', '10');
model.result('pg7').feature('iso1').set('colortable', 'Wave');
model.result('pg7').feature('iso1').set('colorscalemode', 'linearsymmetric');
model.result('pg7').set('showlegendsunit', true);
model.result('pg7').label('Acoustic Pressure, Isosurfaces (acpr)');
model.result.evaluationGroup.create('std3EvgFrq', 'EvaluationGroup');
model.result.evaluationGroup('std3EvgFrq').set('defaultPlotID', 'eigenfrequenciesTable_acpr');
model.result.evaluationGroup('std3EvgFrq').set('data', 'dset3');
model.result.evaluationGroup('std3EvgFrq').label('Eigenfrequencies (Coupled Analysis)');
model.result.evaluationGroup('std3EvgFrq').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('std3EvgFrq').feature('gev1').setIndex('expr', '2*pi*freq', 0);
model.result.evaluationGroup('std3EvgFrq').feature('gev1').setIndex('unit', 'rad/s', 0);
model.result.evaluationGroup('std3EvgFrq').feature('gev1').setIndex('descr', 'Angular frequency', 0);
model.result.evaluationGroup('std3EvgFrq').feature('gev1').setIndex('expr', 'imag(freq)/abs(freq)', 1);
model.result.evaluationGroup('std3EvgFrq').feature('gev1').setIndex('unit', '1', 1);
model.result.evaluationGroup('std3EvgFrq').feature('gev1').setIndex('descr', 'Damping ratio', 1);
model.result.evaluationGroup('std3EvgFrq').feature('gev1').setIndex('expr', 'abs(freq)/imag(freq)/2', 2);
model.result.evaluationGroup('std3EvgFrq').feature('gev1').setIndex('unit', '1', 2);
model.result.evaluationGroup('std3EvgFrq').feature('gev1').setIndex('descr', 'Quality factor', 2);
model.result.evaluationGroup('std3EvgFrq').run;
model.result.dataset.create('dset3shellshl', 'Shell');
model.result.dataset('dset3shellshl').set('data', 'dset3');
model.result.dataset('dset3shellshl').setIndex('topconst', '1', 3, 1);
model.result.dataset('dset3shellshl').setIndex('bottomconst', '-1', 3, 1);
model.result.dataset('dset3shellshl').setIndex('orientationexpr', 'shell.nlX', 0);
model.result.dataset('dset3shellshl').setIndex('displacementexpr', 'arx', 0);
model.result.dataset('dset3shellshl').setIndex('orientationexpr', 'shell.nlY', 1);
model.result.dataset('dset3shellshl').setIndex('displacementexpr', 'ary', 1);
model.result.dataset('dset3shellshl').setIndex('orientationexpr', 'shell.nlZ', 2);
model.result.dataset('dset3shellshl').setIndex('displacementexpr', 'arz', 2);
model.result.dataset('dset3shellshl').set('distanceexpr', 'shell.z_pos');
model.result.dataset('dset3shellshl').set('seplevels', false);
model.result.dataset('dset3shellshl').set('resolution', 2);
model.result.dataset('dset3shellshl').set('areascalefactor', 'shell.ASF');
model.result.dataset('dset3shellshl').set('linescalefactor', 'shell.LSF');
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').set('data', 'dset3shellshl');
model.result('pg8').setIndex('looplevel', 1, 0);
model.result('pg8').set('defaultPlotID', 'modeShape');
model.result('pg8').label('Mode Shape (shell)');
model.result('pg8').set('showlegends', false);
model.result('pg8').set('data', 'dset3shellshl');
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').feature('surf1').set('expr', {'shell.disp'});
model.result('pg8').feature('surf1').set('threshold', 'manual');
model.result('pg8').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg8').feature('surf1').set('colortable', 'Rainbow');
model.result('pg8').feature('surf1').set('colortabletrans', 'none');
model.result('pg8').feature('surf1').set('colorscalemode', 'linear');
model.result('pg8').feature('surf1').set('colortable', 'AuroraBorealis');
model.result('pg8').feature('surf1').create('def', 'Deform');
model.result('pg8').feature('surf1').feature('def').set('expr', {'shell.u' 'shell.v' 'shell.w'});
model.result('pg5').run;
model.result('pg8').run;
model.result('pg8').label('Mode Shape, Coupled Analysis');
model.result('pg8').run;
model.result('pg8').create('slc1', 'Slice');
model.result('pg8').feature('slc1').set('data', 'dset3');
model.result('pg8').feature('slc1').set('solutionparams', 'parent');
model.result('pg8').feature('slc1').set('quickxnumber', 1);
model.result('pg8').run;
model.result('pg8').run;
model.result('pg8').run;
model.result.duplicate('pg9', 'pg8');
model.result('pg9').run;
model.result('pg9').label('Coupling Effect');
model.result('pg9').run;
model.result('pg9').feature('slc1').set('expr', 'pz');
model.result('pg9').feature('slc1').set('unit', 'Pa/m');
model.result('pg9').feature('slc1').set('colorscalemode', 'linear');
model.result('pg9').feature('slc1').set('colortable', 'Cividis');
model.result('pg9').run;
model.result.evaluationGroup('std3EvgFrq').run;
model.result('pg2').run;
model.result('pg2').label('Acoustic Pressure, Acoustics Analysis');
model.result('pg3').run;
model.result('pg3').label('Sound Pressure Level, Acoustics Analysis');
model.result('pg5').run;
model.result('pg5').label('Acoustic Pressure, Coupled Analysis');
model.result('pg6').run;
model.result('pg6').label('Sound Pressure Level, Coupled Analysis');
model.result('pg7').run;
model.result('pg7').label('Acoustic Pressure, Coupled Analysis, Isosurfaces');
model.result('pg8').run;

model.title('Vibrations of a Disk Backed by an Air-Filled Cylinder');

model.description(['An eigenfrequency analysis of the vibration modes of a circular disk backed by a cylindrical cavity shows that you cannot neglect the coupling between the bending modes of the disk and the acoustic modes in the cylinder. The results correlate well with semi-analytical and experimental data.' newline  newline 'Requires the Acoustics Module and the Structural Mechanics Module.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;

model.label('coupled_vibrations.mph');

model.modelNode.label('Components');

out = model;
