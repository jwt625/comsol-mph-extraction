function out = model
%
% chimney.m
%
% Model exported on May 26 2025, 21:26 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/CFD_Module/Single-Phase_Flow');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('spf', 'TurbulentFlowSST', 'geom1');
model.physics('spf').model('comp1');

model.study.create('std1');
model.study('std1').create('wdi', 'WallDistanceInitialization');
model.study('std1').feature('wdi').set('solnum', 'auto');
model.study('std1').feature('wdi').set('notsolnum', 'auto');
model.study('std1').feature('wdi').set('outputmap', {});
model.study('std1').feature('wdi').set('ngenAUX', '1');
model.study('std1').feature('wdi').set('goalngenAUX', '1');
model.study('std1').feature('wdi').set('ngenAUX', '1');
model.study('std1').feature('wdi').set('goalngenAUX', '1');
model.study('std1').feature('wdi').setSolveFor('/physics/spf', true);
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').set('solnum', 'auto');
model.study('std1').feature('stat').set('notsolnum', 'auto');
model.study('std1').feature('stat').set('outputmap', {});
model.study('std1').feature('stat').set('ngenAUX', '1');
model.study('std1').feature('stat').set('goalngenAUX', '1');
model.study('std1').feature('stat').set('ngenAUX', '1');
model.study('std1').feature('stat').set('goalngenAUX', '1');
model.study('std1').feature('stat').setSolveFor('/physics/spf', true);

model.param.set('fw', '10[m]');
model.param.descr('fw', 'Factory module width');
model.param.set('fh', '8[m]');
model.param.descr('fh', 'Factory module height');
model.param.set('fwh', '3[m]');
model.param.descr('fwh', 'Factory window height');
model.param.set('fn', '5');
model.param.descr('fn', 'Number of modules');
model.param.set('fd', '30[m]');
model.param.descr('fd', 'Factory depth');
model.param.set('c_d', '3[m]');
model.param.descr('c_d', 'Chimney diameter');
model.param.set('c_h', '25[m]');
model.param.descr('c_h', 'Chimney height');
model.param.set('swf', '0.2');
model.param.descr('swf', 'Strake width factor');
model.param.set('sp', '5*c_d');
model.param.descr('sp', 'Strake ptich');
model.param.set('sn', '3');
model.param.descr('sn', 'Number of strakes');
model.param.set('d_w', 'fw*fn+fw*4');
model.param.descr('d_w', 'Domain width');
model.param.set('d_l', '100[m]');
model.param.descr('d_l', 'Domain length');
model.param.set('d_b', '20[m]');
model.param.descr('d_b', 'Space in front of building');

model.func.create('an1', 'Analytic');
model.func('an1').set('funcname', 'U_in');
model.func('an1').set('expr', '20*(x/15)^0.27');
model.func('an1').set('fununit', 'm/s');
model.func('an1').setIndex('argunit', 'm', 0);
model.func('an1').setIndex('plotargs', 50, 0, 1);

model.geom('geom1').create('wp1', 'WorkPlane');
model.geom('geom1').feature('wp1').set('unite', true);
model.geom('geom1').feature('wp1').set('quickplane', 'xz');
model.geom('geom1').feature('wp1').geom.create('pol1', 'Polygon');
model.geom('geom1').feature('wp1').geom.feature('pol1').set('source', 'table');
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', 0, 0, 0);
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', 0, 0, 1);
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', 0, 1, 0);
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', 'fh', 1, 1);
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', 'fw', 2, 0);
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', 'fh-fwh', 2, 1);
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', 'fw', 3, 0);
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', 0, 3, 1);
model.geom('geom1').feature('wp1').geom.run('pol1');
model.geom('geom1').feature('wp1').geom.create('arr1', 'Array');
model.geom('geom1').feature('wp1').geom.feature('arr1').selection('input').set({'pol1'});
model.geom('geom1').feature('wp1').geom.feature('arr1').set('fullsize', [5 1]);
model.geom('geom1').feature('wp1').geom.feature('arr1').set('displ', {'fw' '0'});
model.geom('geom1').feature('wp1').geom.run('arr1');
model.geom('geom1').run('wp1');
model.geom('geom1').feature.create('ext1', 'Extrude');
model.geom('geom1').feature('ext1').set('workplane', 'wp1');
model.geom('geom1').feature('ext1').selection('input').set({'wp1'});
model.geom('geom1').feature('ext1').setIndex('distance', 'fd', 0);
model.geom('geom1').feature('ext1').set('reverse', true);
model.geom('geom1').selection.create('csel1', 'CumulativeSelection');
model.geom('geom1').selection('csel1').label('Factory building');
model.geom('geom1').feature('ext1').set('contributeto', 'csel1');
model.geom('geom1').runPre('fin');
model.geom('geom1').create('wp2', 'WorkPlane');
model.geom('geom1').feature('wp2').set('unite', true);
model.geom('geom1').feature('wp2').set('quickz', 'fh-fwh');
model.geom('geom1').feature('wp2').geom.create('c1', 'Circle');
model.geom('geom1').feature('wp2').geom.feature('c1').set('r', 'c_d/2');
model.geom('geom1').feature('wp2').geom.feature('c1').set('pos', {'fw*fn/2' 'fd/2'});
model.geom('geom1').feature('wp2').geom.run('c1');
model.geom('geom1').feature('wp2').geom.run('c1');
model.geom('geom1').run('wp2');
model.geom('geom1').feature.create('ext2', 'Extrude');
model.geom('geom1').feature('ext2').set('workplane', 'wp2');
model.geom('geom1').feature('ext2').selection('input').set({'wp2'});
model.geom('geom1').feature('ext2').setIndex('distance', 'c_h', 0);
model.geom('geom1').run('ext2');
model.geom('geom1').create('if1', 'If');
model.geom('geom1').feature.createAfter('endif1', 'EndIf', 'if1');
model.geom('geom1').feature('if1').set('condition', 'sn>0');
model.geom('geom1').create('wp3', 'WorkPlane');
model.geom('geom1').feature('wp3').set('unite', true);
model.geom('geom1').feature('wp3').set('planetype', 'faceparallel');
model.geom('geom1').feature('wp3').selection('face').set('ext2', 4);
model.geom('geom1').feature('wp3').geom.create('pol1', 'Polygon');
model.geom('geom1').feature('wp3').geom.feature('pol1').set('source', 'table');
model.geom('geom1').feature('wp3').geom.feature('pol1').setIndex('table', 'c_d/2', 0, 0);
model.geom('geom1').feature('wp3').geom.feature('pol1').setIndex('table', 0, 0, 1);
model.geom('geom1').feature('wp3').geom.feature('pol1').setIndex('table', 'c_d/2*(1+swf)', 1, 0);
model.geom('geom1').feature('wp3').geom.feature('pol1').setIndex('table', 0, 1, 1);
model.geom('geom1').feature('wp3').geom.run('pol1');
model.geom('geom1').feature('wp3').geom.create('rot1', 'Rotate');
model.geom('geom1').feature('wp3').geom.feature('rot1').selection('input').set({'pol1'});
model.geom('geom1').feature('wp3').geom.feature('rot1').set('rot', 'range(0,360/sn,359)');
model.geom('geom1').feature('wp3').geom.run('rot1');
model.geom('geom1').run('wp3');
model.geom('geom1').feature.create('ext3', 'Extrude');
model.geom('geom1').feature('ext3').set('workplane', 'wp3');
model.geom('geom1').feature('ext3').selection('input').set({'wp3'});
model.geom('geom1').feature('ext3').setIndex('distance', 'sp/8/sn', 0);
model.geom('geom1').feature('ext3').setIndex('distance', 'sp/8/sn*2', 1);
model.geom('geom1').feature('ext3').set('displ', {'0' '0'; '0' '0'});
model.geom('geom1').feature('ext3').set('scale', {'1' '1'; '1' '1'});
model.geom('geom1').feature('ext3').set('twist', {'0' '0'});
model.geom('geom1').feature('ext3').setIndex('distance', 'sp/8/sn*3', 2);
model.geom('geom1').feature('ext3').set('displ', {'0' '0'; '0' '0'; '0' '0'});
model.geom('geom1').feature('ext3').set('scale', {'1' '1'; '1' '1'; '1' '1'});
model.geom('geom1').feature('ext3').set('twist', {'0' '0' '0'});
model.geom('geom1').feature('ext3').setIndex('distance', 'sp/8/sn*4', 3);
model.geom('geom1').feature('ext3').set('displ', {'0' '0'; '0' '0'; '0' '0'; '0' '0'});
model.geom('geom1').feature('ext3').set('scale', {'1' '1'; '1' '1'; '1' '1'; '1' '1'});
model.geom('geom1').feature('ext3').set('twist', {'0' '0' '0' '0'});
model.geom('geom1').feature('ext3').setIndex('distance', 'sp/8/sn*5', 4);
model.geom('geom1').feature('ext3').set('displ', {'0' '0'; '0' '0'; '0' '0'; '0' '0'; '0' '0'});
model.geom('geom1').feature('ext3').set('scale', {'1' '1'; '1' '1'; '1' '1'; '1' '1'; '1' '1'});
model.geom('geom1').feature('ext3').set('twist', {'0' '0' '0' '0' '0'});
model.geom('geom1').feature('ext3').setIndex('distance', 'sp/8/sn*6', 5);
model.geom('geom1').feature('ext3').set('displ', {'0' '0';  ...
'0' '0';  ...
'0' '0';  ...
'0' '0';  ...
'0' '0';  ...
'0' '0'});
model.geom('geom1').feature('ext3').set('scale', {'1' '1';  ...
'1' '1';  ...
'1' '1';  ...
'1' '1';  ...
'1' '1';  ...
'1' '1'});
model.geom('geom1').feature('ext3').set('twist', {'0' '0' '0' '0' '0' '0'});
model.geom('geom1').feature('ext3').setIndex('distance', 'sp/8/sn*7', 6);
model.geom('geom1').feature('ext3').set('displ', {'0' '0';  ...
'0' '0';  ...
'0' '0';  ...
'0' '0';  ...
'0' '0';  ...
'0' '0';  ...
'0' '0'});
model.geom('geom1').feature('ext3').set('scale', {'1' '1';  ...
'1' '1';  ...
'1' '1';  ...
'1' '1';  ...
'1' '1';  ...
'1' '1';  ...
'1' '1'});
model.geom('geom1').feature('ext3').set('twist', {'0' '0' '0' '0' '0' '0' '0'});
model.geom('geom1').feature('ext3').setIndex('distance', 'sp/8/sn*8', 7);
model.geom('geom1').feature('ext3').set('displ', {'0' '0';  ...
'0' '0';  ...
'0' '0';  ...
'0' '0';  ...
'0' '0';  ...
'0' '0';  ...
'0' '0';  ...
'0' '0'});
model.geom('geom1').feature('ext3').set('scale', {'1' '1';  ...
'1' '1';  ...
'1' '1';  ...
'1' '1';  ...
'1' '1';  ...
'1' '1';  ...
'1' '1';  ...
'1' '1'});
model.geom('geom1').feature('ext3').set('twist', {'0' '0' '0' '0' '0' '0' '0' '0'});
model.geom('geom1').feature('ext3').set('reverse', true);
model.geom('geom1').feature('ext3').setIndex('twist', '360/sn/8', 0);
model.geom('geom1').feature('ext3').setIndex('twist', '360/sn/8*2', 1);
model.geom('geom1').feature('ext3').setIndex('twist', '360/sn/8*3', 2);
model.geom('geom1').feature('ext3').setIndex('twist', '360/sn/8*4', 3);
model.geom('geom1').feature('ext3').setIndex('twist', '360/sn/8*5', 4);
model.geom('geom1').feature('ext3').setIndex('twist', '360/sn/8*6', 5);
model.geom('geom1').feature('ext3').setIndex('twist', '360/sn/8*7', 6);
model.geom('geom1').feature('ext3').setIndex('twist', '360/sn/8*8', 7);
model.geom('geom1').run('ext3');
model.geom('geom1').create('arr1', 'Array');
model.geom('geom1').feature('arr1').selection('input').set({'ext3'});
model.geom('geom1').feature('arr1').set('fullsize', {'1' '1' 'ceil(c_h/sp*sn)'});
model.geom('geom1').feature('arr1').set('displ', {'0' '0' '-sp/sn'});
model.geom('geom1').run('arr1');
model.geom('geom1').run('endif1');
model.geom('geom1').create('blk1', 'Block');
model.geom('geom1').feature('blk1').set('size', {'d_w' 'd_l' 'd_h'});

model.param.set('d_h', 'c_h*1.5', '');

model.geom('geom1').feature('blk1').set('pos', {'-(d_w-fw*fn)/2' '0' '0'});
model.geom('geom1').feature('blk1').setIndex('pos', '-d_b', 1);
model.geom('geom1').run('blk1');
model.geom('geom1').create('wp4', 'WorkPlane');
model.geom('geom1').feature('wp4').set('unite', true);
model.geom('geom1').feature('wp4').set('planetype', 'faceparallel');
model.geom('geom1').feature('wp4').selection('face').set('ext2', 4);
model.geom('geom1').feature('wp4').geom.create('c1', 'Circle');
model.geom('geom1').feature('wp4').geom.feature('c1').set('r', 'c_d/2+1');
model.geom('geom1').feature('wp4').geom.run('c1');
model.geom('geom1').feature('wp4').geom.create('pol1', 'Polygon');
model.geom('geom1').feature('wp4').geom.feature('pol1').set('source', 'table');
model.geom('geom1').feature('wp4').geom.feature('pol1').setIndex('table', '-c_d/2-1', 0, 0);
model.geom('geom1').feature('wp4').geom.feature('pol1').setIndex('table', 0, 0, 1);
model.geom('geom1').feature('wp4').geom.feature('pol1').setIndex('table', '-c_d*2', 1, 0);
model.geom('geom1').feature('wp4').geom.feature('pol1').setIndex('table', 'd_l-d_b-fd/2', 1, 1);
model.geom('geom1').feature('wp4').geom.feature('pol1').setIndex('table', 'c_d*2', 2, 0);
model.geom('geom1').feature('wp4').geom.feature('pol1').setIndex('table', 'd_l-d_b-fd/2', 2, 1);
model.geom('geom1').feature('wp4').geom.feature('pol1').setIndex('table', 'c_d/2+1', 3, 0);
model.geom('geom1').feature('wp4').geom.feature('pol1').setIndex('table', 0, 3, 1);
model.geom('geom1').feature('wp4').geom.run('pol1');
model.geom('geom1').feature('wp4').geom.create('uni1', 'Union');
model.geom('geom1').feature('wp4').geom.feature('uni1').selection('input').set({'c1' 'pol1'});
model.geom('geom1').feature('wp4').geom.feature('uni1').set('intbnd', false);
model.geom('geom1').feature('wp4').geom.run('uni1');
model.geom('geom1').feature('wp4').geom.create('c2', 'Circle');
model.geom('geom1').feature('wp4').geom.feature('c2').set('r', 'c_d/2*(1+swf+0.1)');
model.geom('geom1').feature('wp4').geom.run('c2');
model.geom('geom1').feature('wp4').geom.create('dif1', 'Difference');
model.geom('geom1').feature('wp4').geom.feature('dif1').selection('input').set({'uni1'});
model.geom('geom1').feature('wp4').geom.feature('dif1').selection('input2').set({'c2'});
model.geom('geom1').feature('wp4').geom.run('dif1');
model.geom('geom1').run('wp4');
model.geom('geom1').feature.create('ext4', 'Extrude');
model.geom('geom1').feature('ext4').set('workplane', 'wp4');
model.geom('geom1').feature('ext4').selection('input').set({'wp4'});
model.geom('geom1').feature('ext4').set('reverse', true);
model.geom('geom1').feature('ext4').setIndex('distance', 'c_h*1.1', 0);
model.geom('geom1').run('ext4');

model.view('view1').set('renderwireframe', true);

model.geom('geom1').create('wp5', 'WorkPlane');
model.geom('geom1').feature('wp5').set('unite', true);
model.geom('geom1').feature('wp5').set('quickplane', 'xz');
model.geom('geom1').feature('wp5').set('quicky', 'd_l/2');
model.geom('geom1').run('wp5');
model.geom('geom1').create('par1', 'Partition');
model.geom('geom1').feature('par1').selection('input').set({'ext4'});
model.geom('geom1').feature('par1').set('partitionwith', 'workplane');
model.geom('geom1').run('par1');
model.geom('geom1').create('dif1', 'Difference');
model.geom('geom1').feature('dif1').selection('input').set({'blk1' 'par1'});
model.geom('geom1').feature('dif1').selection('input2').set({'arr1' 'ext1' 'ext2'});
model.geom('geom1').run('dif1');
model.geom('geom1').run('fin');
model.geom('geom1').create('mcd1', 'MeshControlDomains');
model.geom('geom1').feature('mcd1').selection('input').set('fin', [2 3]);
model.geom('geom1').selection.create('csel2', 'CumulativeSelection');
model.geom('geom1').selection('csel2').label('Chimney');
model.geom('geom1').feature('ext2').set('contributeto', 'csel2');
model.geom('geom1').selection.create('csel3', 'CumulativeSelection');
model.geom('geom1').selection('csel3').label('Strakes');
model.geom('geom1').feature('ext3').set('contributeto', 'csel3');
model.geom('geom1').run('mcd1');
model.geom('geom1').create('unisel1', 'UnionSelection');
model.geom('geom1').feature('unisel1').label('Chimney and Strakes');
model.geom('geom1').feature('unisel1').set('entitydim', 2);
model.geom('geom1').feature('unisel1').set('input', {'csel2' 'csel3'});
model.geom('geom1').run('unisel1');
model.geom('geom1').create('sel1', 'ExplicitSelection');
model.geom('geom1').feature('sel1').selection('selection').init(2);
model.geom('geom1').feature('sel1').selection('selection').set('mcd1', 3);
model.geom('geom1').run('sel1');
model.geom('geom1').create('unisel2', 'UnionSelection');
model.geom('geom1').feature('unisel2').set('entitydim', 2);
model.geom('geom1').feature('unisel2').set('input', {'csel1' 'sel1'});
model.geom('geom1').feature('unisel2').label('Factory and ground');
model.geom('geom1').run('unisel2');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('rho', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('cs', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an1', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an2', 'Analytic');
model.material('mat1').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat1').propertyGroup.create('NonlinearModel', 'Nonlinear model');
model.material('mat1').propertyGroup.create('idealGas', 'Ideal gas');
model.material('mat1').propertyGroup('idealGas').func.create('Cp', 'Piecewise');
model.material('mat1').label('Air');
model.material('mat1').set('family', 'air');
model.material('mat1').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('eta').set('pieces', {'200.0' '1600.0' '-8.38278E-7+8.35717342E-8*T^1-7.69429583E-11*T^2+4.6437266E-14*T^3-1.06585607E-17*T^4'});
model.material('mat1').propertyGroup('def').func('eta').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat1').propertyGroup('def').func('Cp').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('def').func('rho').set('expr', 'pA*0.02897/R_const[K*mol/J]/T');
model.material('mat1').propertyGroup('def').func('rho').set('args', {'pA' 'T'});
model.material('mat1').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.material('mat1').propertyGroup('def').func('rho').set('argunit', {'Pa' 'K'});
model.material('mat1').propertyGroup('def').func('rho').set('plotaxis', {'off' 'on'});
model.material('mat1').propertyGroup('def').func('rho').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat1').propertyGroup('def').func('rho').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '293.15'});
model.material('mat1').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('k').set('pieces', {'200.0' '1600.0' '-0.00227583562+1.15480022E-4*T^1-7.90252856E-8*T^2+4.11702505E-11*T^3-7.43864331E-15*T^4'});
model.material('mat1').propertyGroup('def').func('k').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.material('mat1').propertyGroup('def').func('cs').set('expr', 'sqrt(1.4*R_const[K*mol/J]/0.02897*T)');
model.material('mat1').propertyGroup('def').func('cs').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('cs').set('fununit', 'm/s');
model.material('mat1').propertyGroup('def').func('cs').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('cs').set('plotfixedvalue', {'273.15'});
model.material('mat1').propertyGroup('def').func('cs').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.material('mat1').propertyGroup('def').func('an1').set('expr', '-1/rho(pA,T)*d(rho(pA,T),T)');
model.material('mat1').propertyGroup('def').func('an1').set('args', {'pA' 'T'});
model.material('mat1').propertyGroup('def').func('an1').set('fununit', '1/K');
model.material('mat1').propertyGroup('def').func('an1').set('argunit', {'Pa' 'K'});
model.material('mat1').propertyGroup('def').func('an1').set('plotaxis', {'off' 'on'});
model.material('mat1').propertyGroup('def').func('an1').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat1').propertyGroup('def').func('an1').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an2').set('funcname', 'muB');
model.material('mat1').propertyGroup('def').func('an2').set('expr', '0.6*eta(T)');
model.material('mat1').propertyGroup('def').func('an2').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('an2').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('an2').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an2').set('plotfixedvalue', {'200'});
model.material('mat1').propertyGroup('def').func('an2').set('plotargs', {'T' '200' '1600'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.material('mat1').propertyGroup('def').set('molarmass', '');
model.material('mat1').propertyGroup('def').set('bulkviscosity', '');
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)'});
model.material('mat1').propertyGroup('def').set('molarmass', '0.02897[kg/mol]');
model.material('mat1').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.material('mat1').propertyGroup('def').set('ratioofspecificheat', '1.4');
model.material('mat1').propertyGroup('def').set('electricconductivity', {'0[S/m]' '0' '0' '0' '0[S/m]' '0' '0' '0' '0[S/m]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.material('mat1').propertyGroup('def').set('density', 'rho(pA,T)');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.material('mat1').propertyGroup('def').set('soundspeed', 'cs(T)');
model.material('mat1').propertyGroup('def').addInput('temperature');
model.material('mat1').propertyGroup('def').addInput('pressure');
model.material('mat1').propertyGroup('RefractiveIndex').set('n', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('NonlinearModel').set('BA', 'def.gamma-1');
model.material('mat1').propertyGroup('idealGas').func('Cp').label('Piecewise 2');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat1').propertyGroup('idealGas').func('Cp').set('argunit', 'K');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('idealGas').set('Rs', 'R_const/Mn');
model.material('mat1').propertyGroup('idealGas').set('heatcapacity', 'Cp(T)');
model.material('mat1').propertyGroup('idealGas').set('ratioofspecificheat', '1.4');
model.material('mat1').propertyGroup('idealGas').set('molarmass', '0.02897');
model.material('mat1').propertyGroup('idealGas').addInput('temperature');
model.material('mat1').propertyGroup('idealGas').addInput('pressure');
model.material('mat1').materialType('nonSolid');

model.physics('spf').create('inl1', 'InletBoundary', 2);
model.physics('spf').feature('inl1').selection.set([2]);
model.physics('spf').feature('inl1').set('U0in', 'U_in(z)');
model.physics('spf').create('open1', 'OpenBoundary', 2);
model.physics('spf').feature('open1').selection.set([1 4 5 167]);
model.physics('spf').feature('open1').set('Uref', '20[m/s]');
model.physics('spf').create('iwbc1', 'InteriorWallBC', 2);
model.physics('spf').feature('iwbc1').selection.named('geom1_csel2_bnd');

model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl('intop1').set('axisym', true);
model.cpl('intop1').selection.geom('geom1', 2);
model.cpl('intop1').selection.named('geom1_csel2_bnd');
model.cpl.create('intop2', 'Integration', 'geom1');
model.cpl('intop2').set('axisym', true);
model.cpl('intop2').selection.geom('geom1', 2);
model.cpl('intop2').selection.named('geom1_csel1_bnd');

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').set('Fstr_y', 'intop1(spf.T_stress_uy)+intop1(spf.T_stress_dy)');
model.variable('var1').set('Fstr_x', 'intop1(spf.T_stress_dx)+intop1(spf.T_stress_ux)');
model.variable('var1').set('Fch_y', 'intop2(spf.T_stressy)');
model.variable('var1').set('Fch_x', 'intop2(spf.T_stressx)');
model.variable('var1').set('F_y', 'Fstr_y+Fch_y');
model.variable('var1').set('F_x', 'Fstr_x+Fch_x');

model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'fw', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);
model.study('std1').feature('param').setIndex('pname', 'fw', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);
model.study('std1').feature('param').setIndex('pname', 'sn', 0);
model.study('std1').feature('param').setIndex('plistarr', '0 3', 0);

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'wdi');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'wdi');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 1.0E-6);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, wall distance (spf)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, wall distance (spf)');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'stat');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'stat');
model.sol('sol1').create('s2', 'Stationary');
model.sol('sol1').feature('s2').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s2').create('se1', 'Segregated');
model.sol('sol1').feature('s2').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s2').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('segvar', {'comp1_p' 'comp1_u'});
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('subdamp', 0.5);
model.sol('sol1').feature('s2').create('i1', 'Iterative');
model.sol('sol1').feature('s2').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s2').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s2').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s2').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s2').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s2').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s2').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol1').feature('s2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('s2').feature('se1').feature('ss1').label('Velocity u, Pressure p');
model.sol('sol1').feature('s2').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('segvar', {'comp1_k' 'comp1_om'});
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('subdamp', 0.45);
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('subiter', 3);
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('subtermconst', 'itertol');
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('subntolfact', 1);
model.sol('sol1').feature('s2').create('i2', 'Iterative');
model.sol('sol1').feature('s2').feature('i2').set('linsolver', 'gmres');
model.sol('sol1').feature('s2').feature('i2').set('prefuntype', 'left');
model.sol('sol1').feature('s2').feature('i2').set('itrestart', 50);
model.sol('sol1').feature('s2').feature('i2').set('rhob', 20);
model.sol('sol1').feature('s2').feature('i2').set('maxlinit', 1000);
model.sol('sol1').feature('s2').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('s2').feature('i2').label('AMG, turbulence variables (spf)');
model.sol('sol1').feature('s2').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('iter', 0);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('linsolver', 'i2');
model.sol('sol1').feature('s2').feature('se1').feature('ss2').label('Turbulence Variables');
model.sol('sol1').feature('s2').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol1').feature('s2').feature('se1').set('subinitcfl', 2);
model.sol('sol1').feature('s2').feature('se1').set('submincfl', 10000);
model.sol('sol1').feature('s2').feature('se1').set('subkppid', 0.65);
model.sol('sol1').feature('s2').feature('se1').set('subkdpid', 0.05);
model.sol('sol1').feature('s2').feature('se1').set('subkipid', 0.05);
model.sol('sol1').feature('s2').feature('se1').set('subcfltol', 0.1);
model.sol('sol1').feature('s2').feature('se1').set('segcflaa', true);
model.sol('sol1').feature('s2').feature('se1').set('segcflaacfl', 9000);
model.sol('sol1').feature('s2').feature('se1').set('segcflaafact', 1);
model.sol('sol1').feature('s2').feature('se1').set('maxsegiter', 400);
model.sol('sol1').feature('s2').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol1').feature('s2').feature('se1').feature('ll1').set('lowerlimit', 'comp1.k 0 comp1.om 0 ');
model.sol('sol1').feature('s2').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol1').feature('s2').feature.remove('fcDef');
model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol1').feature('v2').set('solnum', 'auto');
model.sol('sol1').feature('v2').set('solvertype', 'solnum');
model.sol('sol1').attach('std1');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'sn'});
model.batch('p1').set('plistarr', {'0 3'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol.create('sol3');
model.sol('sol3').study('std1');
model.sol('sol3').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol3');
model.batch('p1').run('compute');

model.result.dataset('dset3').set('geom', 'geom1');
model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').label('Velocity (spf)');
model.result('pg1').set('data', 'dset3');
model.result('pg1').setIndex('looplevel', 2, 0);
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').set('data', 'dset3');
model.result('pg1').setIndex('looplevel', 2, 0);
model.result('pg1').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pg1');
model.result('pg1').feature.create('slc1', 'Slice');
model.result('pg1').feature('slc1').label('Slice');
model.result('pg1').feature('slc1').set('showsolutionparams', 'on');
model.result('pg1').feature('slc1').set('smooth', 'internal');
model.result('pg1').feature('slc1').set('showsolutionparams', 'on');
model.result('pg1').feature('slc1').set('data', 'parent');
model.result.dataset.create('surf1', 'Surface');
model.result.dataset('surf1').label('Exterior Walls');
model.result.dataset('surf1').set('data', 'none');
model.result.dataset.create('surf2', 'Surface');
model.result.dataset('surf2').label('Interior Walls');
model.result.dataset('surf2').set('data', 'none');
model.result.dataset('surf1').set('data', 'dset3');
model.result.dataset('surf1').selection.geom('geom1', 2);
model.result.dataset('surf1').selection.set([3 6 7 8 9 10 11 12 13 14 15 16 17 46 47 48 49 50 51 52 53 54 55 56 57 58 77 91 92 93 94 95 96 97 99 101 103 105 108 158 159 160 161 162 163 164 165 166]);
model.result.dataset('surf2').set('data', 'dset3');
model.result.dataset('surf2').selection.geom('geom1', 2);
model.result.dataset('surf2').selection.set([]);
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Pressure (spf)');
model.result('pg2').set('data', 'dset3');
model.result('pg2').setIndex('looplevel', 2, 0);
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('data', 'dset3');
model.result('pg2').setIndex('looplevel', 2, 0);
model.result('pg2').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pcond1/pcond2/pg4');
model.result('pg2').feature.create('surf1', 'Surface');
model.result('pg2').feature('surf1').label('Surface');
model.result('pg2').feature('surf1').set('data', 'surf1');
model.result('pg2').feature('surf1').setIndex('looplevel', 2, 0);
model.result('pg2').feature('surf1').set('expr', 'p');
model.result('pg2').feature('surf1').set('colortable', 'Dipole');
model.result('pg2').feature('surf1').set('smooth', 'internal');
model.result('pg2').feature('surf1').set('data', 'surf1');
model.result('pg2').feature('surf1').feature.create('tran1', 'Transparency');
model.result('pg2').feature.create('slit1', 'SurfaceSlit');
model.result('pg2').feature('slit1').set('data', 'surf2');
model.result('pg2').feature('slit1').setIndex('looplevel', 2, 0);
model.result('pg2').feature('slit1').set('upexpr', 'up(p)');
model.result('pg2').feature('slit1').set('downexpr', 'down(p)');
model.result('pg2').feature('slit1').set('titletype', 'none');
model.result('pg2').feature('slit1').set('smooth', 'internal');
model.result('pg2').feature('slit1').set('data', 'surf2');
model.result('pg2').feature('slit1').set('inheritplot', 'surf1');
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').label('Wall Resolution (spf)');
model.result('pg3').set('data', 'dset3');
model.result('pg3').setIndex('looplevel', 2, 0);
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').set('data', 'dset3');
model.result('pg3').setIndex('looplevel', 2, 0);
model.result('pg3').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pcond1/pcond2/pg3');
model.result('pg3').feature.create('surf1', 'Surface');
model.result('pg3').feature('surf1').label('Wall Resolution');
model.result('pg3').feature('surf1').set('data', 'surf1');
model.result('pg3').feature('surf1').setIndex('looplevel', 2, 0);
model.result('pg3').feature('surf1').set('expr', 'spf.Delta_wPlus');
model.result('pg3').feature('surf1').set('smooth', 'internal');
model.result('pg3').feature('surf1').set('data', 'surf1');
model.result('pg3').feature.create('slit1', 'SurfaceSlit');
model.result('pg3').feature('slit1').label('Wall Resolution, Interior Walls');
model.result('pg3').feature('slit1').set('data', 'surf2');
model.result('pg3').feature('slit1').setIndex('looplevel', 2, 0);
model.result('pg3').feature('slit1').set('upexpr', 'spf.Delta_wPlus_u');
model.result('pg3').feature('slit1').set('downexpr', 'spf.Delta_wPlus_d');
model.result('pg3').feature('slit1').set('smooth', 'internal');
model.result('pg3').feature('slit1').set('data', 'surf2');
model.result('pg3').feature('slit1').set('inheritplot', 'surf1');
model.result('pg1').run;
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').run;
model.result('pg4').label('Vertical velocity slice');
model.result('pg4').set('data', 'dset3');
model.result('pg4').create('slc1', 'Slice');
model.result('pg4').feature('slc1').set('quickxnumber', 1);
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('inheritplot', 'slc1');
model.result('pg4').feature('surf1').create('sel1', 'Selection');
model.result('pg4').feature('surf1').feature('sel1').selection.named('geom1_unisel1');
model.result('pg4').run;
model.result('pg4').feature('surf1').feature('sel1').selection.named('geom1_csel2_bnd');
model.result('pg4').run;
model.result('pg4').create('slit1', 'SurfaceSlit');
model.result('pg4').feature('slit1').set('upexpr', 'up(spf.U)');
model.result('pg4').feature('slit1').set('downexpr', 'down(spf.U)');
model.result('pg4').feature('slit1').set('inheritplot', 'slc1');
model.result('pg4').feature('slit1').create('sel1', 'Selection');
model.result('pg4').feature('slit1').feature('sel1').selection.named('geom1_csel3_bnd');
model.result('pg4').run;
model.result('pg4').create('surf2', 'Surface');
model.result('pg4').feature('surf2').set('titletype', 'none');
model.result('pg4').feature('surf2').create('sel1', 'Selection');
model.result('pg4').feature('surf2').feature('sel1').selection.named('geom1_csel1_bnd');
model.result('pg4').run;
model.result('pg4').feature('surf2').create('mtrl1', 'MaterialAppearance');
model.result('pg4').run;
model.result('pg4').feature('surf2').feature('mtrl1').set('appearance', 'custom');
model.result('pg4').feature('surf2').feature('mtrl1').set('family', 'steel');
model.result('pg4').run;
model.result('pg4').feature.duplicate('surf3', 'surf2');
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').feature('surf3').feature('sel1').selection.set([3]);
model.result('pg4').run;
model.result('pg4').feature('surf3').feature('mtrl1').set('family', 'rock');
model.result('pg4').run;
model.result('pg4').feature('surf1').create('mtrl1', 'MaterialAppearance');
model.result('pg4').run;
model.result('pg4').feature('surf1').feature('mtrl1').set('appearance', 'custom');
model.result('pg4').feature('surf1').feature('mtrl1').set('family', 'steel');
model.result('pg4').feature('surf1').feature('mtrl1').set('useplotcolors', true);
model.result('pg4').run;
model.result('pg4').set('edges', false);
model.result('pg4').run;
model.result.duplicate('pg5', 'pg4');
model.result('pg5').run;
model.result('pg5').label('Horizontal velocity slice');
model.result('pg5').run;
model.result('pg5').feature('slc1').set('quickplane', 'xy');
model.result('pg5').feature('slc1').set('quickznumber', 1);
model.result('pg5').run;
model.result('pg4').run;
model.result.duplicate('pg6', 'pg4');
model.result('pg6').run;
model.result('pg6').label('Pressure slice');
model.result('pg6').run;
model.result('pg6').feature('slc1').set('expr', 'p');
model.result('pg6').run;
model.result('pg6').feature('surf1').set('expr', 'p');
model.result('pg6').run;
model.result('pg6').feature('slit1').set('upexpr', 'up(p)');
model.result('pg6').feature('slit1').set('downexpr', 'down(p)');
model.result('pg6').run;
model.result('pg6').feature('surf2').set('expr', '1');
model.result('pg6').run;
model.result('pg6').feature('surf3').set('expr', '1');
model.result('pg6').run;
model.result('pg6').run;
model.result('pg4').run;
model.result('pg4').setIndex('looplevel', 1, 0);
model.result('pg4').run;
model.result('pg4').setIndex('looplevel', 2, 0);
model.result('pg4').run;
model.result('pg5').run;
model.result('pg5').setIndex('looplevel', 1, 0);
model.result('pg5').run;
model.result('pg5').setIndex('looplevel', 2, 0);
model.result('pg5').run;
model.result('pg6').run;
model.result('pg6').setIndex('looplevel', 1, 0);
model.result('pg6').run;
model.result('pg6').setIndex('looplevel', 2, 0);
model.result('pg6').run;
model.result('pg4').run;
model.result('pg4').run;

model.title('Turbulent Flow Around a Factory Chimney');

model.description('This example simulates turbulent flow around a factory chimney. It studies the influence on the flow pattern from helical strakes used to reduce massive shedding of vortices during high winds.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;

model.label('chimney.mph');

model.modelNode.label('Components');

out = model;
