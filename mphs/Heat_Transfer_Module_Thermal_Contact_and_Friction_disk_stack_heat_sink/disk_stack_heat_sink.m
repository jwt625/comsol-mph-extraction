function out = model
%
% disk_stack_heat_sink.m
%
% Model exported on May 26 2025, 21:29 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Heat_Transfer_Module/Thermal_Contact_and_Friction');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('ht', 'HeatTransfer', 'geom1');
model.physics('ht').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/ht', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('CB_w', '150[mm]', 'Circuit board width');
model.param.set('CB_l', '150[mm]', 'Circuit board length');
model.param.set('CB_t', '3[mm]', 'Circuit board thickness');
model.param.set('IC1_w', '50[mm]', 'IC 1 width');
model.param.set('IC1_l', '50[mm]', 'IC 1 length');
model.param.set('IC1_t', '3[mm]', 'IC 1 thickness');
model.param.set('IC2_w', '15[mm]', 'ICs 2 width');
model.param.set('IC2_l', '20[mm]', 'ICs 2 length');
model.param.set('IC2_t', '3[mm]', 'ICs 2 thickness');
model.param.set('IC3_w', '15[mm]', 'ICs 3 width');
model.param.set('IC3_l', '40[mm]', 'ICs 3 length');
model.param.set('IC3_t', '3[mm]', 'IC2 3 thickness');
model.param.set('P1', '20[W]', 'Power dissipated by IC 1');
model.param.set('P2', '1[W]', 'Power dissipated by ICs 2');
model.param.set('P3', '2[W]', 'Power dissipated by ICs 3');
model.param.set('htc', '20[W/(m^2*K)]', 'Heat transfer coefficient');
model.param.set('T0', '273.15[K]', 'Air flow temperature');
model.param.set('e_fins', '0.3[mm]', 'Fins thickness');
model.param.set('i_radius', '5[mm]', 'Inner radius');
model.param.set('o_radius', '25[mm]', 'Outer radius');
model.param.set('air_sp', '3[mm]', 'Air spacing between sink fins');
model.param.set('n_fins', '10', 'Number of fins');
model.param.set('t_h', 'air_sp*n_fins', ' Heat sink tube height');

model.geom('geom1').lengthUnit('mm');
model.geom('geom1').create('blk1', 'Block');
model.geom('geom1').feature('blk1').set('size', {'CB_w' 'CB_l' 'CB_t'});
model.geom('geom1').feature('blk1').set('pos', {'-CB_w/2' '-CB_l/2' '0'});
model.geom('geom1').feature('blk1').setIndex('pos', '-CB_t', 2);
model.geom('geom1').run('blk1');
model.geom('geom1').create('blk2', 'Block');
model.geom('geom1').feature('blk2').set('size', {'IC1_w' 'IC1_l' 'IC1_t'});
model.geom('geom1').feature('blk2').set('pos', {'-CB_w/2+IC1_w' '0' '0'});
model.geom('geom1').feature('blk2').setIndex('pos', '-CB_l/2+IC1_l', 1);
model.geom('geom1').run('blk2');
model.geom('geom1').create('blk3', 'Block');
model.geom('geom1').feature('blk3').set('size', {'IC2_l' 'IC2_w' 'IC2_t'});
model.geom('geom1').feature('blk3').set('pos', [-60 -60 0]);
model.geom('geom1').run('blk3');
model.geom('geom1').create('copy1', 'Copy');
model.geom('geom1').feature('copy1').selection('input').set({'blk3'});
model.geom('geom1').feature('copy1').set('displx', '0 0 0 0 range(30,30,60) 30');
model.geom('geom1').feature('copy1').set('disply', 'range(25, 25, 100) 0 0 100');
model.geom('geom1').run('copy1');
model.geom('geom1').create('blk4', 'Block');
model.geom('geom1').feature('blk4').set('size', {'IC3_w' 'IC3_l' 'IC3_t'});
model.geom('geom1').feature('blk4').set('pos', [40 -50 0]);
model.geom('geom1').run('blk4');
model.geom('geom1').create('copy2', 'Copy');
model.geom('geom1').feature('copy2').selection('input').set({'blk4'});
model.geom('geom1').feature('copy2').set('disply', 50);
model.geom('geom1').run('fin');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');
model.selection('sel1').label('ICs, Type 1');
model.selection('sel1').set([9]);
model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').label('ICs, Type 2');
model.selection('sel2').set([2 3 4 5 6 7 8 10]);
model.selection.create('sel3', 'Explicit');
model.selection('sel3').model('comp1');
model.selection('sel3').label('ICs, Type 3');
model.selection('sel3').set([11 12]);
model.selection.create('uni1', 'Union');
model.selection('uni1').model('comp1');
model.selection('uni1').label('ICs');
model.selection('uni1').set('input', {'sel1' 'sel2' 'sel3'});

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat1').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat1').label('Silica glass');
model.material('mat1').set('family', 'custom');
model.material('mat1').set('customambient', [1 1 1]);
model.material('mat1').set('noise', true);
model.material('mat1').set('fresnel', 0.99);
model.material('mat1').set('roughness', 0.02);
model.material('mat1').set('metallic', 0);
model.material('mat1').set('pearl', 0);
model.material('mat1').set('diffusewrap', 0);
model.material('mat1').set('clearcoat', 0);
model.material('mat1').set('reflectance', 0);
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'1e-14[S/m]' '0' '0' '0' '1e-14[S/m]' '0' '0' '0' '1e-14[S/m]'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'0.55e-6[1/K]' '0' '0' '0' '0.55e-6[1/K]' '0' '0' '0' '0.55e-6[1/K]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', '703[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('relpermittivity', {'3.75' '0' '0' '0' '3.75' '0' '0' '0' '3.75'});
model.material('mat1').propertyGroup('def').set('density', '2203[kg/m^3]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'1.38[W/(m*K)]' '0' '0' '0' '1.38[W/(m*K)]' '0' '0' '0' '1.38[W/(m*K)]'});
model.material('mat1').propertyGroup('Enu').set('E', '73.1[GPa]');
model.material('mat1').propertyGroup('Enu').set('nu', '0.17');
model.material('mat1').propertyGroup('RefractiveIndex').set('n', {'1.45' '0' '0' '0' '1.45' '0' '0' '0' '1.45'});
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat2').label('FR4 (Circuit Board)');
model.material('mat2').set('family', 'pcbgreen');
model.material('mat2').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('electricconductivity', {'0.004[S/m]' '0' '0' '0' '0.004[S/m]' '0' '0' '0' '0.004[S/m]'});
model.material('mat2').propertyGroup('def').set('relpermittivity', {'4.5' '0' '0' '0' '4.5' '0' '0' '0' '4.5'});
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'18e-6[1/K]' '0' '0' '0' '18e-6[1/K]' '0' '0' '0' '18e-6[1/K]'});
model.material('mat2').propertyGroup('def').set('heatcapacity', '1369[J/(kg*K)]');
model.material('mat2').propertyGroup('def').set('density', '1900[kg/m^3]');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'0.3[W/(m*K)]' '0' '0' '0' '0.3[W/(m*K)]' '0' '0' '0' '0.3[W/(m*K)]'});
model.material('mat2').propertyGroup('Enu').set('E', '22[GPa]');
model.material('mat2').propertyGroup('Enu').set('nu', '0.15');
model.material('mat1').selection.named('uni1');
model.material('mat2').selection.set([1]);
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'80' '80' '0.3'});

model.physics('ht').feature('init1').set('Tinit', 'T0');
model.physics('ht').create('hs1', 'HeatSource', 3);
model.physics('ht').feature('hs1').selection.named('sel1');
model.physics('ht').feature('hs1').set('heatSourceType', 'HeatRate');
model.physics('ht').feature('hs1').set('P0', 'P1');
model.physics('ht').create('hs2', 'HeatSource', 3);
model.physics('ht').feature('hs2').selection.named('sel2');
model.physics('ht').feature('hs2').set('heatSourceType', 'HeatRate');
model.physics('ht').feature('hs2').set('P0', 'P2*8');
model.physics('ht').create('hs3', 'HeatSource', 3);
model.physics('ht').feature('hs3').selection.named('sel3');
model.physics('ht').feature('hs3').set('heatSourceType', 'HeatRate');
model.physics('ht').feature('hs3').set('P0', 'P3*2');
model.physics('ht').create('hf1', 'HeatFluxBoundary', 2);
model.physics('ht').feature('hf1').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht').feature('hf1').set('h', 'htc');
model.physics('ht').feature('hf1').set('Text', 'T0');
model.physics('ht').feature('hf1').selection.set([1 2 3 4 5 6 7 9 10 11 12 14 15 16 17 19 20 21 22 24 25 26 27 29 30 31 32 33 34 35 36 37 39 40 41 42 44 45 46 47 49 50 51 52 53 54 56 57 58 59 60 61 63 64 65 66 68 69 70 71 72]);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, heat transfer variables (ht)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 10000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, heat transfer variables (ht)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').label('Temperature (ht)');
model.result('pg1').set('data', 'dset1');
model.result('pg1').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond3/pcond3/pg1');
model.result('pg1').feature.create('vol1', 'Volume');
model.result('pg1').feature('vol1').set('showsolutionparams', 'on');
model.result('pg1').feature('vol1').set('solutionparams', 'parent');
model.result('pg1').feature('vol1').set('colortable', 'HeatCameraLight');
model.result('pg1').feature('vol1').set('smooth', 'internal');
model.result('pg1').feature('vol1').set('showsolutionparams', 'on');
model.result('pg1').feature('vol1').set('data', 'parent');
model.result('pg1').run;
model.result('pg1').label('Temperature Without Heat Sink');

model.geom('geom1').run('copy2');
model.geom('geom1').create('blk5', 'Block');
model.geom('geom1').feature('blk5').set('size', {'IC1_w' 'IC1_l' 'IC1_t'});
model.geom('geom1').feature('blk5').set('pos', {'-CB_w/2+IC1_w' '0' '0'});
model.geom('geom1').feature('blk5').setIndex('pos', '-CB_l/2+IC1_l', 1);
model.geom('geom1').feature('blk5').setIndex('pos', 'IC1_t', 2);
model.geom('geom1').run('blk5');
model.geom('geom1').create('cyl1', 'Cylinder');
model.geom('geom1').feature('cyl1').set('type', 'surface');
model.geom('geom1').feature('cyl1').set('r', 'i_radius');
model.geom('geom1').feature('cyl1').set('h', 't_h');
model.geom('geom1').feature('cyl1').set('pos', {'0' '0' 'IC1_t*2'});
model.geom('geom1').selection.create('csel1', 'CumulativeSelection');
model.geom('geom1').selection('csel1').label('Fins');
model.geom('geom1').feature('cyl1').set('contributeto', 'csel1');
model.geom('geom1').run('cyl1');
model.geom('geom1').create('wp1', 'WorkPlane');
model.geom('geom1').feature('wp1').set('unite', true);
model.geom('geom1').feature('wp1').set('planetype', 'faceparallel');
model.geom('geom1').feature('wp1').selection('face').set('blk5', 4);
model.geom('geom1').feature('wp1').set('offset', 'air_sp');
model.geom('geom1').feature('wp1').geom.create('c1', 'Circle');
model.geom('geom1').feature('wp1').geom.feature('c1').set('r', 'i_radius');
model.geom('geom1').feature('wp1').geom.run('c1');
model.geom('geom1').feature('wp1').geom.create('c2', 'Circle');
model.geom('geom1').feature('wp1').geom.feature('c2').set('r', 'o_radius');
model.geom('geom1').feature('wp1').geom.run('c2');
model.geom('geom1').feature('wp1').geom.create('dif1', 'Difference');
model.geom('geom1').feature('wp1').geom.feature('dif1').selection('input').set({'c2'});
model.geom('geom1').feature('wp1').geom.feature('dif1').selection('input2').set({'c1'});
model.geom('geom1').feature('wp1').geom.run('dif1');
model.geom('geom1').feature('wp1').set('contributeto', 'csel1');
model.geom('geom1').run('wp1');
model.geom('geom1').create('arr1', 'Array');
model.geom('geom1').feature('arr1').selection('input').set({'wp1'});
model.geom('geom1').feature('arr1').set('type', 'linear');
model.geom('geom1').feature('arr1').set('linearsize', 'n_fins');
model.geom('geom1').feature('arr1').set('displ', {'0' '0' 'air_sp'});
model.geom('geom1').feature('arr1').set('contributeto', 'csel1');
model.geom('geom1').run('fin');

model.material.create('mat3', 'Common', 'comp1');
model.material('mat3').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat3').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat3').label('Aluminum');
model.material('mat3').set('family', 'aluminum');
model.material('mat3').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('def').set('heatcapacity', '900[J/(kg*K)]');
model.material('mat3').propertyGroup('def').set('thermalconductivity', {'238[W/(m*K)]' '0' '0' '0' '238[W/(m*K)]' '0' '0' '0' '238[W/(m*K)]'});
model.material('mat3').propertyGroup('def').set('electricconductivity', {'3.774e7[S/m]' '0' '0' '0' '3.774e7[S/m]' '0' '0' '0' '3.774e7[S/m]'});
model.material('mat3').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('def').set('thermalexpansioncoefficient', {'23e-6[1/K]' '0' '0' '0' '23e-6[1/K]' '0' '0' '0' '23e-6[1/K]'});
model.material('mat3').propertyGroup('def').set('density', '2700[kg/m^3]');
model.material('mat3').propertyGroup('Enu').set('E', '70[GPa]');
model.material('mat3').propertyGroup('Enu').set('nu', '0.33');
model.material('mat3').propertyGroup('Murnaghan').set('l', '-250[GPa]');
model.material('mat3').propertyGroup('Murnaghan').set('m', '-330[GPa]');
model.material('mat3').propertyGroup('Murnaghan').set('n', '-350[GPa]');
model.material.create('mat4', 'Common', 'comp1');
model.material('mat4').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat4').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat4').label('Aluminum 1');
model.material('mat4').set('family', 'aluminum');
model.material('mat4').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat4').propertyGroup('def').set('heatcapacity', '900[J/(kg*K)]');
model.material('mat4').propertyGroup('def').set('thermalconductivity', {'238[W/(m*K)]' '0' '0' '0' '238[W/(m*K)]' '0' '0' '0' '238[W/(m*K)]'});
model.material('mat4').propertyGroup('def').set('electricconductivity', {'3.774e7[S/m]' '0' '0' '0' '3.774e7[S/m]' '0' '0' '0' '3.774e7[S/m]'});
model.material('mat4').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat4').propertyGroup('def').set('thermalexpansioncoefficient', {'23e-6[1/K]' '0' '0' '0' '23e-6[1/K]' '0' '0' '0' '23e-6[1/K]'});
model.material('mat4').propertyGroup('def').set('density', '2700[kg/m^3]');
model.material('mat4').propertyGroup('Enu').set('E', '70[GPa]');
model.material('mat4').propertyGroup('Enu').set('nu', '0.33');
model.material('mat4').propertyGroup('Murnaghan').set('l', '-250[GPa]');
model.material('mat4').propertyGroup('Murnaghan').set('m', '-330[GPa]');
model.material('mat4').propertyGroup('Murnaghan').set('n', '-350[GPa]');
model.material('mat3').selection.set([10]);
model.material('mat4').label('Aluminum Fins');
model.material('mat4').selection.geom('geom1', 2);
model.material('mat4').selection.named('geom1_csel1_bnd');

model.physics('ht').feature('hf1').selection.set([1 2 3 4 5 6 7 9 10 11 12 14 15 16 17 19 20 21 22 24 25 26 27 29 30 31 32 33 34 35 36 37 39 40 41 42 44 45 46 47 49 50 51 52 63 64 65 66 88 89 91 92 113 114 115 116 117 119 120 121 122 124 125 126 127 128]);
model.physics('ht').create('tc1', 'ThermalContact', 2);
model.physics('ht').feature('tc1').selection.set([51]);
model.physics('ht').feature('tc1').set('hgType', 'PPG');
model.physics('ht').feature('tc1').set('Tn', '20[kPa]');
model.physics('ht').feature('tc1').set('Hmic', '165[MPa]');
model.physics('ht').feature('tc1').set('kgap_mat', 'userdef');
model.physics.create('htlsh', 'HeatTransferInShellsLM', 'geom1');
model.physics('htlsh').model('comp1');

model.study('std1').feature('stat').setSolveFor('/physics/htlsh', true);

model.physics('htlsh').selection.named('geom1_csel1_bnd');
model.physics('htlsh').create('hfi1', 'HeatFluxInterface', 2);
model.physics('htlsh').feature('hfi1').selection.named('geom1_csel1_bnd');
model.physics('htlsh').feature('hfi1').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('htlsh').feature('hfi1').set('h', 'htc');
model.physics('htlsh').feature('hfi1').set('Text', 'T0');

model.material('mat4').propertyGroup.create('shell', 'Shell');
model.material('mat4').propertyGroup('shell').set('lth', {'e_fins'});

model.multiphysics.create('tcls1', 'ThermalConnectionLayeredShellEdges', 'geom1', 1);
model.multiphysics('tcls1').set('bndType', 'allShell');

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/ht', true);
model.study('std2').feature('stat').setSolveFor('/physics/htlsh', true);
model.study('std2').feature('stat').setSolveFor('/multiphysics/tcls1', true);

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('seDef', 'Segregated');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol2').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol2').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol2').feature('s1').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s1').feature('d1').label('Direct, heat transfer variables (tcls1) (Merged)');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol2').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol2').feature('s1').feature('i1').set('maxlinit', 10000);
model.sol('sol2').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol2').feature('s1').feature('i1').label('AMG, heat transfer variables (tcls1)');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol2').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol2').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').feature('s1').feature.remove('seDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Temperature (ht)');
model.result('pg2').set('data', 'dset2');
model.result('pg2').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond3/pcond3/pg1');
model.result('pg2').feature.create('vol1', 'Volume');
model.result('pg2').feature('vol1').set('showsolutionparams', 'on');
model.result('pg2').feature('vol1').set('solutionparams', 'parent');
model.result('pg2').feature('vol1').set('colortable', 'HeatCameraLight');
model.result('pg2').feature('vol1').set('smooth', 'internal');
model.result('pg2').feature('vol1').set('showsolutionparams', 'on');
model.result('pg2').feature('vol1').set('data', 'parent');
model.result.dataset.create('lshl1', 'LayeredMaterial');
model.result.dataset('lshl1').set('data', 'dset2');
model.result.dataset('lshl1').selection.geom('geom1', 2);
model.result.dataset('lshl1').selection.set([53 54 55 56 57 58 59 60 61 62 67 68 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112]);
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').label('Temperature, Shell (htlsh)');
model.result('pg3').set('data', 'dset2');
model.result('pg3').set('defaultPlotID', 'htlsh/HTLSH_PhysicsInterfaces/icom36/pdef1/pcond4/pcond1/pg1');
model.result('pg3').feature.create('vol1', 'Volume');
model.result('pg3').feature('vol1').set('data', 'lshl1');
model.result('pg3').feature('vol1').set('showsolutionparams', 'on');
model.result('pg3').feature('vol1').set('solutionparams', 'parent');
model.result('pg3').feature('vol1').set('expr', 'T2');
model.result('pg3').feature('vol1').set('colortable', 'HeatCameraLight');
model.result('pg3').feature('vol1').set('smooth', 'internal');
model.result('pg3').feature('vol1').set('showsolutionparams', 'on');
model.result('pg3').feature('vol1').set('data', 'lshl1');
model.result('pg2').run;
model.result.remove('pg2');
model.result.remove('pg3');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Temperature (tcls1)');
model.result('pg2').set('data', 'dset2');
model.result('pg2').set('defaultPlotID', 'MultiphysicsShellThermalConnection/cfcom1/pdef1/pcond4/pcond4/pcond3/pcond4/pg1');
model.result('pg2').feature.create('vol1', 'Volume');
model.result('pg2').feature('vol1').set('solutionparams', 'parent');
model.result('pg2').feature('vol1').set('colortable', 'HeatCameraLight');
model.result('pg2').feature('vol1').set('smooth', 'internal');
model.result('pg2').feature('vol1').set('showsolutionparams', 'on');
model.result('pg2').feature('vol1').set('data', 'parent');
model.result('pg2').feature.create('vol2', 'Volume');
model.result('pg2').feature('vol2').set('solutionparams', 'parent');
model.result('pg2').feature('vol2').set('expr', 'T2');
model.result('pg2').feature('vol2').set('titletype', 'none');
model.result('pg2').feature('vol2').set('smooth', 'internal');
model.result('pg2').feature('vol2').set('showsolutionparams', 'on');
model.result('pg2').feature('vol2').set('data', 'lshl1');
model.result('pg2').feature('vol2').set('inheritplot', 'vol1');
model.result('pg2').feature.create('line1', 'Line');
model.result('pg2').feature('line1').set('solutionparams', 'parent');
model.result('pg2').feature('line1').set('expr', '1');
model.result('pg2').feature('line1').set('titletype', 'none');
model.result('pg2').feature('line1').set('coloring', 'uniform');
model.result('pg2').feature('line1').set('color', 'fromtheme');
model.result('pg2').feature('line1').set('smooth', 'internal');
model.result('pg2').feature('line1').set('showsolutionparams', 'on');
model.result('pg2').feature('line1').set('data', 'lshl1');
model.result('pg2').label('Temperature (tcls1)');
model.result('pg2').run;
model.result('pg2').label('Temperature With Heat Sink');
model.result('pg2').run;

model.material.create('mat5', 'Common', 'comp1');
model.material('mat5').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat5').propertyGroup.create('linzRes', 'Linearized resistivity');
model.material('mat5').label('Copper');
model.material('mat5').set('family', 'copper');
model.material('mat5').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat5').propertyGroup('def').set('electricconductivity', {'5.998e7[S/m]' '0' '0' '0' '5.998e7[S/m]' '0' '0' '0' '5.998e7[S/m]'});
model.material('mat5').propertyGroup('def').set('thermalexpansioncoefficient', {'17e-6[1/K]' '0' '0' '0' '17e-6[1/K]' '0' '0' '0' '17e-6[1/K]'});
model.material('mat5').propertyGroup('def').set('heatcapacity', '385[J/(kg*K)]');
model.material('mat5').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat5').propertyGroup('def').set('density', '8960[kg/m^3]');
model.material('mat5').propertyGroup('def').set('thermalconductivity', {'400[W/(m*K)]' '0' '0' '0' '400[W/(m*K)]' '0' '0' '0' '400[W/(m*K)]'});
model.material('mat5').propertyGroup('Enu').set('E', '110[GPa]');
model.material('mat5').propertyGroup('Enu').set('nu', '0.35');
model.material('mat5').propertyGroup('linzRes').set('rho0', '1.72e-8[ohm*m]');
model.material('mat5').propertyGroup('linzRes').set('alpha', '0.0039[1/K]');
model.material('mat5').propertyGroup('linzRes').set('Tref', '298[K]');
model.material('mat5').propertyGroup('linzRes').addInput('temperature');

model.physics('ht').create('sls1', 'SolidLayeredShell', 2);
model.physics('ht').feature('sls1').set('LayerType', 'Conductive');
model.physics('ht').feature('sls1').selection.set([3]);

model.material('mat5').selection.geom('geom1', 2);
model.material('mat5').selection.set([3]);
model.material('mat5').propertyGroup.create('shell', 'Shell');
model.material('mat5').propertyGroup('shell').set('lth', {'e_fins'});

model.sol('sol2').study('std2');
model.sol('sol2').feature.remove('s1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('st1');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('seDef', 'Segregated');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol2').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol2').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol2').feature('s1').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s1').feature('d1').label('Direct, heat transfer variables (tcls1) (Merged)');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol2').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol2').feature('s1').feature('i1').set('maxlinit', 10000);
model.sol('sol2').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol2').feature('s1').feature('i1').label('AMG, heat transfer variables (tcls1)');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol2').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol2').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').feature('s1').feature.remove('seDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result('pg2').run;
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').label('Contact Temperature (ht)');
model.result('pg3').set('data', 'dset2');
model.result('pg3').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond3/pcond4/pg1');
model.result('pg3').feature.create('slit1', 'SurfaceSlit');
model.result('pg3').feature('slit1').set('solutionparams', 'parent');
model.result('pg3').feature('slit1').set('updescractive', true);
model.result('pg3').feature('slit1').set('upexpr', 'ht.Tu');
model.result('pg3').feature('slit1').set('updescr', 'Upside temperature');
model.result('pg3').feature('slit1').set('downdescractive', true);
model.result('pg3').feature('slit1').set('downexpr', 'ht.Td');
model.result('pg3').feature('slit1').set('downdescr', 'Downside temperature');
model.result('pg3').feature('slit1').set('colortable', 'HeatCameraLight');
model.result('pg3').feature('slit1').set('smooth', 'internal');
model.result('pg3').feature('slit1').set('showsolutionparams', 'on');
model.result('pg3').feature('slit1').set('data', 'parent');
model.result('pg3').feature('slit1').feature.create('sel1', 'Selection');
model.result('pg3').feature('slit1').feature('sel1').selection.geom('geom1', 2);
model.result('pg3').feature('slit1').feature('sel1').selection.set([51]);
model.result('pg3').label('Contact Temperature (ht)');
model.result('pg3').run;
model.result('pg3').label('Contact Temperature With Heat Sink');
model.result.numerical.create('max1', 'MaxVolume');
model.result.numerical('max1').label('Maximum Temperature');
model.result.numerical('max1').set('data', 'dset2');
model.result.numerical('max1').selection.all;
model.result.numerical('max1').setIndex('descr', 'Maximum temperature', 0);
model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').comments('Maximum Temperature');
model.result.numerical('max1').set('table', 'tbl1');
model.result.numerical('max1').setResult;
model.result('pg3').run;

model.title('Disk-Stack Heat Sink');

model.description('This example studies the cooling effects of a disk-stack heat sink on an electronic component. The heat sink consists of several thin aluminum disks piled up around a central hollow column. Such a configuration allows cooling of large surfaces of aluminum fins by air at ambient temperature.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('disk_stack_heat_sink.mph');

model.modelNode.label('Components');

out = model;
