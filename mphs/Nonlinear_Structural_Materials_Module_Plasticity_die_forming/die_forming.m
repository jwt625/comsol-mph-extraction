function out = model
%
% die_forming.m
%
% Model exported on May 26 2025, 21:31 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Nonlinear_Structural_Materials_Module/Plasticity');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/solid', true);

model.param.set('sigma_y0', '124[MPa]');
model.param.descr('sigma_y0', 'Initial yield stress');
model.param.set('U_p', '40[mm]');
model.param.descr('U_p', 'Punch displacement');
model.param.set('R0', '0.69');
model.param.descr('R0', 'Lankford''s coefficient r0');
model.param.set('R45', '0.69');
model.param.descr('R45', 'Lankford''s coefficient r45');
model.param.set('R90', '0.69');
model.param.descr('R90', 'Lankford''s coefficient 90');
model.param.set('F', 'R0/(R90*(R0+1))/sigma_y0^2');
model.param.descr('F', 'Hill''s coefficient');
model.param.set('G', '1/(R0+1)/sigma_y0^2');
model.param.descr('G', 'Hill''s coefficient');
model.param.set('H', 'R0/(R0+1)/sigma_y0^2');
model.param.descr('H', 'Hill''s coefficient');
model.param.set('L', '0');
model.param.descr('L', 'Hill''s coefficient');
model.param.set('M', '0');
model.param.descr('M', 'Hill''s coefficient');
model.param.set('N', '0');
model.param.descr('N', 'Hill''s coefficient');
model.param.set('p', '0');
model.param.descr('p', 'Loading parameter');

model.geom('geom1').lengthUnit('mm');
model.geom('geom1').create('pol1', 'Polygon');
model.geom('geom1').feature('pol1').set('source', 'table');
model.geom('geom1').feature('pol1').set('type', 'open');
model.geom('geom1').feature('pol1').setIndex('table', 0, 0, 0);
model.geom('geom1').feature('pol1').setIndex('table', 42, 0, 1);
model.geom('geom1').feature('pol1').setIndex('table', 88.5, 1, 0);
model.geom('geom1').feature('pol1').setIndex('table', 42, 1, 1);
model.geom('geom1').feature('pol1').setIndex('table', 88.5, 2, 0);
model.geom('geom1').feature('pol1').setIndex('table', 2, 2, 1);
model.geom('geom1').feature('pol1').setIndex('table', 257.5, 3, 0);
model.geom('geom1').feature('pol1').setIndex('table', 2, 3, 1);
model.geom('geom1').feature('pol1').setIndex('table', 257.5, 4, 0);
model.geom('geom1').feature('pol1').setIndex('table', 40, 4, 1);
model.geom('geom1').run('pol1');
model.geom('geom1').create('fil1', 'Fillet');
model.geom('geom1').feature('fil1').selection('pointinsketch').set('pol1', 2);
model.geom('geom1').feature('fil1').set('radius', 16);
model.geom('geom1').run('fil1');
model.geom('geom1').create('fil2', 'Fillet');
model.geom('geom1').feature('fil2').selection('pointinsketch').set('fil1', [3 5]);
model.geom('geom1').feature('fil2').set('radius', 18);
model.geom('geom1').run('fil2');
model.geom('geom1').create('thi1', 'Thicken2D');
model.geom('geom1').feature('thi1').selection('input').set({'fil2'});
model.geom('geom1').feature('thi1').set('offset', 'asymmetric');
model.geom('geom1').feature('thi1').set('upthick', 4);
model.geom('geom1').nodeGroup.create('grp1');
model.geom('geom1').nodeGroup('grp1').placeAfter([]);
model.geom('geom1').nodeGroup('grp1').add('pol1');
model.geom('geom1').nodeGroup('grp1').add('fil1');
model.geom('geom1').nodeGroup('grp1').add('fil2');
model.geom('geom1').nodeGroup('grp1').add('thi1');
model.geom('geom1').nodeGroup('grp1').label('Punch');
model.geom('geom1').run('thi1');
model.geom('geom1').create('pol2', 'Polygon');
model.geom('geom1').feature('pol2').set('source', 'table');
model.geom('geom1').nodeGroup('grp1').remove('pol2', false);
model.geom('geom1').feature('pol2').set('type', 'open');
model.geom('geom1').feature('pol2').setIndex('table', 0, 0, 0);
model.geom('geom1').feature('pol2').setIndex('table', 0, 0, 1);
model.geom('geom1').feature('pol2').setIndex('table', 86, 1, 0);
model.geom('geom1').feature('pol2').setIndex('table', 0, 1, 1);
model.geom('geom1').feature('pol2').setIndex('table', 86, 2, 0);
model.geom('geom1').feature('pol2').setIndex('table', -40, 2, 1);
model.geom('geom1').feature('pol2').setIndex('table', 260, 3, 0);
model.geom('geom1').feature('pol2').setIndex('table', -40, 3, 1);
model.geom('geom1').feature('pol2').setIndex('table', 260, 4, 0);
model.geom('geom1').feature('pol2').setIndex('table', 0, 4, 1);
model.geom('geom1').feature('pol2').setIndex('table', 386, 5, 0);
model.geom('geom1').feature('pol2').setIndex('table', 0, 5, 1);
model.geom('geom1').run('pol2');
model.geom('geom1').create('fil3', 'Fillet');
model.geom('geom1').feature('fil3').selection('point').set('pol2', [3 5]);
model.geom('geom1').feature('fil3').set('radius', 16);
model.geom('geom1').run('fil3');
model.geom('geom1').create('fil4', 'Fillet');
model.geom('geom1').feature('fil4').selection('point').set('fil3', [3 5]);
model.geom('geom1').feature('fil4').set('radius', 16);
model.geom('geom1').run('fil4');
model.geom('geom1').create('thi2', 'Thicken2D');
model.geom('geom1').feature('thi2').selection('input').set({'fil4'});
model.geom('geom1').feature('thi2').set('offset', 'asymmetric');
model.geom('geom1').feature('thi2').set('downthick', 4);
model.geom('geom1').nodeGroup.create('grp2');
model.geom('geom1').nodeGroup('grp2').placeAfter([]);
model.geom('geom1').nodeGroup('grp2').add('pol2');
model.geom('geom1').nodeGroup('grp2').add('fil3');
model.geom('geom1').nodeGroup('grp2').add('fil4');
model.geom('geom1').nodeGroup('grp2').add('thi2');
model.geom('geom1').nodeGroup('grp2').label('Die');
model.geom('geom1').run('thi2');
model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').nodeGroup('grp2').remove('r1', false);
model.geom('geom1').feature('r1').set('size', [80 20]);
model.geom('geom1').feature('r1').set('pos', [300 2]);
model.geom('geom1').run('r1');
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').set('size', [380 2]);
model.geom('geom1').runPre('fin');
model.geom('geom1').run('r2');
model.geom('geom1').nodeGroup.create('grp3');
model.geom('geom1').nodeGroup('grp3').placeAfter([]);
model.geom('geom1').nodeGroup('grp3').add('r1');
model.geom('geom1').nodeGroup('grp3').label('Holder');
model.geom('geom1').nodeGroup.create('grp4');
model.geom('geom1').nodeGroup('grp4').placeAfter([]);
model.geom('geom1').nodeGroup('grp4').add('r2');
model.geom('geom1').nodeGroup('grp4').label('Blank');
model.geom('geom1').feature('fin').set('action', 'assembly');
model.geom('geom1').feature('fin').set('pairtype', 'contact');
model.geom('geom1').run('fin');

model.func.create('int1', 'Interpolation');
model.func('int1').label('Prescribed Punch Displacement');
model.func('int1').set('funcname', 'U_punch');
model.func('int1').setIndex('table', 0, 0, 0);
model.func('int1').setIndex('table', 0, 0, 1);
model.func('int1').setIndex('table', 1, 1, 0);
model.func('int1').setIndex('table', '-U_p', 1, 1);
model.func('int1').setIndex('table', 2, 2, 0);
model.func('int1').setIndex('table', 0, 2, 1);
model.func('int1').setIndex('argunit', 1, 0);
model.func('int1').setIndex('fununit', 'm', 0);
model.func.create('int2', 'Interpolation');
model.func('int2').label('Hardening Function');
model.func('int2').set('funcname', 'sigma_h');
model.func('int2').setIndex('table', 0, 0, 0);
model.func('int2').setIndex('table', 0, 0, 1);
model.func('int2').setIndex('table', 0.02, 1, 0);
model.func('int2').setIndex('table', 43, 1, 1);
model.func('int2').setIndex('table', 0.05, 2, 0);
model.func('int2').setIndex('table', 76, 2, 1);
model.func('int2').setIndex('table', 0.1, 3, 0);
model.func('int2').setIndex('table', 103, 3, 1);
model.func('int2').setIndex('table', 0.15, 4, 0);
model.func('int2').setIndex('table', 115, 4, 1);
model.func('int2').setIndex('table', 0.2, 5, 0);
model.func('int2').setIndex('table', 127, 5, 1);
model.func('int2').setIndex('table', 0.3, 6, 0);
model.func('int2').setIndex('table', 129, 6, 1);
model.func('int2').setIndex('table', 0.4, 7, 0);
model.func('int2').setIndex('table', 129.3, 7, 1);
model.func('int2').setIndex('table', 0.5, 8, 0);
model.func('int2').setIndex('table', 129.4, 8, 1);
model.func('int2').setIndex('argunit', 1, 0);
model.func('int2').setIndex('fununit', 'MPa', 0);

model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl('intop1').set('axisym', true);
model.cpl('intop1').selection.set([3]);
model.cpl('intop1').set('method', 'summation');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');
model.selection('sel1').geom(1);
model.selection('sel1').set([26 28 30 34 35 37 39]);
model.selection('sel1').label('Punch, Contact');
model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').label('Die, Contact');
model.selection('sel2').geom(1);
model.selection('sel2').set([3 5 7 8 11 14 16 18 19]);
model.selection.create('sel3', 'Explicit');
model.selection('sel3').model('comp1');
model.selection('sel3').label('Holder, Contact');
model.selection('sel3').geom(1);
model.selection('sel3').set([42]);
model.selection.create('sel4', 'Explicit');
model.selection('sel4').model('comp1');
model.selection('sel4').label('Blank, Contact Up');
model.selection('sel4').geom(1);
model.selection('sel4').set([23]);
model.selection.create('sel5', 'Explicit');
model.selection('sel5').model('comp1');
model.selection('sel5').label('Blank, Contact Down');
model.selection('sel5').geom(1);
model.selection('sel5').set([22]);
model.selection.create('sel6', 'Explicit');
model.selection('sel6').model('comp1');
model.selection('sel6').set([1]);
model.selection('sel6').label('Die');
model.selection.create('sel7', 'Explicit');
model.selection('sel7').model('comp1');
model.selection('sel7').set([3]);
model.selection('sel7').label('Punch');
model.selection.create('sel8', 'Explicit');
model.selection('sel8').model('comp1');
model.selection('sel8').label('Holder');
model.selection('sel8').set([4]);
model.selection.create('sel9', 'Explicit');
model.selection('sel9').model('comp1');
model.selection('sel9').set([2]);
model.selection('sel9').label('Blank');

model.cpl.create('genproj1', 'GeneralProjection', 'geom1');
model.cpl('genproj1').selection.set([2]);
model.cpl('genproj1').set('srcmap', {'R' 'Z'});
model.cpl('genproj1').set('dstmap', {'R'});

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').set('th', 'genproj1(1)');
model.variable('var1').descr('th', 'Thickness');
model.variable('var1').selection.geom('geom1', 2);
model.variable('var1').selection.set([2]);

model.selection.create('uni1', 'Union');
model.selection('uni1').model('comp1');
model.selection('uni1').label('Die and Holder');
model.selection('uni1').set('input', {'sel6' 'sel8'});

model.pair('ap1').manualSelection(true);
model.pair('ap1').source.named('sel2');
model.pair('ap1').destination.named('sel5');
model.pair('ap1').label('Die to Blank');
model.pair('ap2').manualSelection(true);
model.pair('ap2').source.named('sel1');
model.pair('ap2').destination.named('sel4');
model.pair('ap2').label('Punch to Blank');
model.pair('ap3').manualSelection(true);
model.pair('ap3').source.named('sel3');
model.pair('ap3').destination.named('sel4');
model.pair('ap3').label('Holder to Blank');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat1').propertyGroup('Enu').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup('Enu').func.create('int2', 'Interpolation');
model.material('mat1').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat1').propertyGroup.create('ElastoplasticModel', 'Elastoplastic material model');
model.material('mat1').propertyGroup('ElastoplasticModel').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('Ludwik', 'Ludwik');
model.material('mat1').propertyGroup('Ludwik').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('JohnsonCook', 'Johnson-Cook');
model.material('mat1').propertyGroup.create('Swift', 'Swift');
model.material('mat1').propertyGroup.create('Voce', 'Voce');
model.material('mat1').propertyGroup('Voce').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('HockettSherby', 'Hockett-Sherby');
model.material('mat1').propertyGroup('HockettSherby').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('ArmstrongFrederick', 'Armstrong-Frederick');
model.material('mat1').propertyGroup('ArmstrongFrederick').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('Norton', 'Norton');
model.material('mat1').propertyGroup.create('Garofalo', 'Garofalo (hyperbolic sine)');
model.material('mat1').propertyGroup.create('ChabocheViscoplasticity', 'Chaboche viscoplasticity');
model.material('mat1').label('Structural steel');
model.material('mat1').set('family', 'custom');
model.material('mat1').set('customspecular', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat1').set('customdiffuse', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat1').set('customambient', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat1').set('noise', true);
model.material('mat1').set('fresnel', 0.9);
model.material('mat1').set('roughness', 0.3);
model.material('mat1').set('metallic', 0);
model.material('mat1').set('pearl', 0);
model.material('mat1').set('diffusewrap', 0);
model.material('mat1').set('clearcoat', 0);
model.material('mat1').set('reflectance', 0);
model.material('mat1').propertyGroup('def').set('lossfactor', '0.02');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('heatcapacity', '475[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]'});
model.material('mat1').propertyGroup('def').set('density', '7850[kg/m^3]');
model.material('mat1').propertyGroup('Enu').func('int1').set('funcname', 'E');
model.material('mat1').propertyGroup('Enu').func('int1').set('table', {'293.15' '200e9'; '793.15' '166.6e9'});
model.material('mat1').propertyGroup('Enu').func('int1').set('extrap', 'linear');
model.material('mat1').propertyGroup('Enu').func('int1').set('fununit', {'Pa'});
model.material('mat1').propertyGroup('Enu').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Enu').func('int2').set('funcname', 'nu');
model.material('mat1').propertyGroup('Enu').func('int2').set('table', {'293.15' '0.30'; '793.15' '0.315'});
model.material('mat1').propertyGroup('Enu').func('int2').set('extrap', 'linear');
model.material('mat1').propertyGroup('Enu').func('int2').set('fununit', {'1'});
model.material('mat1').propertyGroup('Enu').func('int2').set('argunit', {'K'});
model.material('mat1').propertyGroup('Enu').set('E', 'E(T)');
model.material('mat1').propertyGroup('Enu').set('nu', 'nu(T)');
model.material('mat1').propertyGroup('Enu').addInput('temperature');
model.material('mat1').propertyGroup('Murnaghan').set('l', '-3.0e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('m', '-6.2e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('n', '-7.2e11[Pa]');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmags', '350[MPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('Et', '1.045[GPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('Ek', '1.045[GPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmagh', '1.050[GPa]*epe*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').addInput('temperature');
model.material('mat1').propertyGroup('ElastoplasticModel').addInput('effectiveplasticstrain');
model.material('mat1').propertyGroup('Ludwik').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('Ludwik').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('Ludwik').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('Ludwik').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Ludwik').set('k_lud', '560[MPa]*a(T)');
model.material('mat1').propertyGroup('Ludwik').set('n_lud', '0.61');
model.material('mat1').propertyGroup('Ludwik').addInput('temperature');
model.material('mat1').propertyGroup('JohnsonCook').set('k_jcook', '560[MPa]');
model.material('mat1').propertyGroup('JohnsonCook').set('n_jcook', '0.61');
model.material('mat1').propertyGroup('JohnsonCook').set('C_jcook', '0.12');
model.material('mat1').propertyGroup('JohnsonCook').set('epet0_jcook', '1[1/s]');
model.material('mat1').propertyGroup('JohnsonCook').set('m_jcook', '0.6');
model.material('mat1').propertyGroup('Swift').set('e0_swi', '0.021');
model.material('mat1').propertyGroup('Swift').set('n_swi', '0.2');
model.material('mat1').propertyGroup('Voce').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('Voce').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('Voce').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('Voce').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Voce').set('sigma_voc', '249[MPa]*a(T)');
model.material('mat1').propertyGroup('Voce').set('beta_voc', '9.3');
model.material('mat1').propertyGroup('Voce').addInput('temperature');
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('HockettSherby').set('sigma_hoc', '684[MPa]*a(T)');
model.material('mat1').propertyGroup('HockettSherby').set('m_hoc', '3.9');
model.material('mat1').propertyGroup('HockettSherby').set('n_hoc', '0.85');
model.material('mat1').propertyGroup('HockettSherby').addInput('temperature');
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('ArmstrongFrederick').set('Ck', '2.070[GPa]*a(T)');
model.material('mat1').propertyGroup('ArmstrongFrederick').set('gammak', '8.0');
model.material('mat1').propertyGroup('ArmstrongFrederick').addInput('temperature');
model.material('mat1').propertyGroup('Norton').set('A_nor', '1.2e-15[1/s]');
model.material('mat1').propertyGroup('Norton').set('sigRef_nor', '1[MPa]');
model.material('mat1').propertyGroup('Norton').set('n_nor', '4.5');
model.material('mat1').propertyGroup('Garofalo').set('A_gar', '1e-6[1/s]');
model.material('mat1').propertyGroup('Garofalo').set('sigRef_gar', '100[MPa]');
model.material('mat1').propertyGroup('Garofalo').set('n_gar', '4.6');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('A_cha', '1');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('sigRef_cha', '490[MPa]');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('n_cha', '9');
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat2').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat2').label('Aluminum');
model.material('mat2').set('family', 'aluminum');
model.material('mat2').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('heatcapacity', '900[J/(kg*K)]');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'238[W/(m*K)]' '0' '0' '0' '238[W/(m*K)]' '0' '0' '0' '238[W/(m*K)]'});
model.material('mat2').propertyGroup('def').set('electricconductivity', {'3.774e7[S/m]' '0' '0' '0' '3.774e7[S/m]' '0' '0' '0' '3.774e7[S/m]'});
model.material('mat2').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'23e-6[1/K]' '0' '0' '0' '23e-6[1/K]' '0' '0' '0' '23e-6[1/K]'});
model.material('mat2').propertyGroup('def').set('density', '2700[kg/m^3]');
model.material('mat2').propertyGroup('Enu').set('E', '70[GPa]');
model.material('mat2').propertyGroup('Enu').set('nu', '0.33');
model.material('mat2').propertyGroup('Murnaghan').set('l', '-250[GPa]');
model.material('mat2').propertyGroup('Murnaghan').set('m', '-330[GPa]');
model.material('mat2').propertyGroup('Murnaghan').set('n', '-350[GPa]');
model.material('mat2').selection.named('sel9');

model.physics('solid').feature('lemm1').create('plsty1', 'Plasticity', 2);
model.physics('solid').feature('lemm1').feature('plsty1').selection.named('sel9');
model.physics('solid').feature('lemm1').feature('plsty1').set('YieldFunction', 'hill');
model.physics('solid').feature('lemm1').feature('plsty1').set('HillPlasticityOptions', 'Hillcoefficients');
model.physics('solid').feature('lemm1').feature('plsty1').set('IsotropicHardeningModel', 'HardeningFunction');
model.physics('solid').feature('dcnt1').set('ContactMethodCtrl', 'AugmentedLagrange');
model.physics('solid').feature('dcnt1').set('SolutionMethod', 'coupled');
model.physics('solid').feature('dcnt1').set('penaltyCtrlAuglag', 'ManualTuning');
model.physics('solid').feature('dcnt1').set('pfm', '5e-4');
model.physics('solid').feature('dcnt1').set('automaticQuadrature', false);
model.physics('solid').feature('dcnt1').set('integrationOrder', 6);
model.physics('solid').create('fix1', 'Fixed', 2);
model.physics('solid').feature('fix1').selection.named('uni1');
model.physics('solid').create('disp1', 'Displacement2', 2);
model.physics('solid').feature('disp1').selection.named('sel7');
model.physics('solid').feature('disp1').setIndex('Direction', 'prescribed', 0);
model.physics('solid').feature('disp1').setIndex('Direction', 'prescribed', 2);
model.physics('solid').feature('disp1').setIndex('U0', 'U_punch(p)', 2);

model.material('mat2').propertyGroup.create('ElastoplasticModel', 'Elastoplastic_material_model');
model.material('mat2').propertyGroup('ElastoplasticModel').set('Hillcoefficients', {'F' 'G' 'H' 'L' 'M' 'N'});
model.material('mat2').propertyGroup('ElastoplasticModel').set('sigmagh', {'sigma_h(solid.epe)'});
model.material('mat2').propertyGroup('def').set('density', {'2700[kg/m^3]'});
model.material('mat2').propertyGroup('Enu').set('E', {'70[GPa]'});
model.material('mat2').propertyGroup('Enu').set('nu', {'0.33'});
model.material('mat2').propertyGroup('def').set('relpermeability', {'1'});
model.material('mat2').propertyGroup('def').set('heatcapacity', {'900[J/(kg*K)]'});
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'238[W/(m*K)]'});
model.material('mat2').propertyGroup('def').set('electricconductivity', {'3.774e7[S/m]'});
model.material('mat2').propertyGroup('def').set('relpermittivity', {'1'});
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'23e-6[1/K]'});
model.material('mat2').propertyGroup('Murnaghan').set('l', {'-250[GPa]'});
model.material('mat2').propertyGroup('Murnaghan').set('m', {'-330[GPa]'});
model.material('mat2').propertyGroup('Murnaghan').set('n', {'-350[GPa]'});

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('map1').selection.named('sel9');
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([21]);
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 3);
model.mesh('mesh1').feature('map1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis2').selection.set([23]);
model.mesh('mesh1').feature('map1').feature('dis2').set('numelem', 400);
model.mesh('mesh1').create('edg1', 'Edge');
model.mesh('mesh1').feature('edg1').selection.set([14 16 18 19 35 37 39]);
model.mesh('mesh1').feature('edg1').create('size1', 'Size');
model.mesh('mesh1').feature('edg1').feature('size1').set('hauto', 1);
model.mesh('mesh1').feature('edg1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('edg1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('edg1').feature('size1').set('hmax', 1);
model.mesh('mesh1').feature('edg1').feature('size1').set('hminactive', true);
model.mesh('mesh1').feature('edg1').feature('size1').set('hmin', 0.001);
model.mesh('mesh1').create('map2', 'Map');
model.mesh('mesh1').feature('map2').selection.geom('geom1', 2);
model.mesh('mesh1').feature('map2').selection.set([4]);
model.mesh('mesh1').feature('map2').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map2').feature('dis1').selection.set([41 43]);
model.mesh('mesh1').feature('map2').feature('dis1').set('numelem', 1);
model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').create('size1', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size1').set('hauto', 6);
model.mesh('mesh1').run;

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_solid_Tn_ap1').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_Tn_ap2').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_Tn_ap3').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_Tn_ap1').set('scaleval', '100000000');
model.sol('sol1').feature('v1').feature('comp1_solid_Tn_ap2').set('scaleval', '100000000');
model.sol('sol1').feature('v1').feature('comp1_solid_Tn_ap3').set('scaleval', '100000000');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.3963533776820882');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'ddog');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'ddog');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');

model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 'sigma_y0', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'Pa', 0);
model.study('std1').feature('stat').setIndex('pname', 'sigma_y0', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'Pa', 0);
model.study('std1').feature('stat').setIndex('pname', 'p', 0);
model.study('std1').feature('stat').setIndex('plistarr', 'range(0,0.01,2)', 0);

model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'const');
model.sol('sol1').feature('s1').feature('pDef').set('paramtuning', true);
model.sol('sol1').feature('s1').feature('pDef').set('pinitstep', '1e-5');
model.sol('sol1').feature('s1').feature('pDef').set('pminstep', '1e-5');
model.sol('sol1').feature('s1').feature('pDef').set('pmaxstep', 0.01);
model.sol('sol1').feature('s1').feature('pDef').set('porder', 'linear');
model.sol('sol1').feature('s1').feature('pDef').create('st1', 'StopCondition');
model.sol('sol1').feature('s1').feature('pDef').feature('st1').setIndex('stopcondarr', '', 0);
model.sol('sol1').feature('s1').feature('pDef').feature('st1').setIndex('stopcondterminateon', 'true', 0);
model.sol('sol1').feature('s1').feature('pDef').feature('st1').setIndex('stopcondActive', true, 0);
model.sol('sol1').feature('s1').feature('pDef').feature('st1').setIndex('stopconddesc', 'Stop expression 1', 0);
model.sol('sol1').feature('s1').feature('pDef').feature('st1').setIndex('stopcondarr', '', 0);
model.sol('sol1').feature('s1').feature('pDef').feature('st1').setIndex('stopcondterminateon', 'true', 0);
model.sol('sol1').feature('s1').feature('pDef').feature('st1').setIndex('stopcondActive', true, 0);
model.sol('sol1').feature('s1').feature('pDef').feature('st1').setIndex('stopconddesc', 'Stop expression 1', 0);
model.sol('sol1').feature('s1').feature('pDef').feature('st1').setIndex('stopcondarr', 'comp1.solid.gapmin_ap2>1e-4', 0);
model.sol('sol1').feature('s1').feature('pDef').feature('st1').set('storestopcondsol', 'stepafter');
model.sol('sol1').runFromTo('st1', 'v1');

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 1, 0);
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('surf1').set('threshold', 'manual');
model.result('pg1').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg1').feature('surf1').set('colortable', 'Rainbow');
model.result('pg1').feature('surf1').set('colortabletrans', 'none');
model.result('pg1').feature('surf1').set('colorscalemode', 'linear');
model.result('pg1').feature('surf1').set('resolution', 'normal');
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg1').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg1').feature('surf1').feature('def').set('scale', '1');
model.result('pg1').feature('surf1').feature('def').set('expr', {'u' 'w'});
model.result('pg1').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result.dataset.create('dset1solidrev', 'Revolve2D');
model.result.dataset('dset1solidrev').set('data', 'dset1');
model.result.dataset('dset1solidrev').set('revangle', 225);
model.result.dataset('dset1solidrev').set('startangle', -90);
model.result.dataset('dset1solidrev').set('hasspacevars', true);
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'dset1solidrev');
model.result('pg2').setIndex('looplevel', 1, 0);
model.result('pg2').set('defaultPlotID', 'stress3D');
model.result('pg2').label('Stress, 3D (solid)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg2').feature('surf1').set('threshold', 'manual');
model.result('pg2').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg2').feature('surf1').set('colortable', 'Rainbow');
model.result('pg2').feature('surf1').set('colortabletrans', 'none');
model.result('pg2').feature('surf1').set('colorscalemode', 'linear');
model.result('pg2').feature('surf1').set('colortable', 'Prism');
model.result('pg2').feature('surf1').create('def', 'Deform');
model.result.dataset('dset1solidrev').set('hasspacevars', true);
model.result('pg2').feature('surf1').feature('def').set('revcoordsys', 'cylindrical');
model.result('pg2').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg2').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg2').feature('surf1').feature('def').set('descractive', true);
model.result('pg2').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg2').feature('surf1').feature('def').set('scale', '1');
model.result('pg1').run;

model.study('std1').feature('stat').set('plot', true);
model.study('std1').feature('stat').set('probefreq', 'psteps');

model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg1').label('Residual Stress');
model.result('pg1').run;
model.result.dataset.duplicate('dset2', 'dset1');
model.result.dataset('dset2').label('Study 1/Solution 1, Blank');
model.result.dataset('dset2').selection.geom('geom1', 2);
model.result.dataset('dset2').selection.geom('geom1', 2);
model.result.dataset('dset2').selection.set([2]);
model.result.dataset('dset1solidrev').set('data', 'dset2');
model.result.dataset('dset1solidrev').set('startangle', 0);
model.result.dataset('dset1solidrev').set('revangle', 360);
model.result('pg2').run;
model.result('pg2').label('Deformed Shape, 3D');
model.result('pg2').set('titletype', 'label');
model.result('pg2').set('edges', false);
model.result('pg2').run;
model.result('pg2').feature('surf1').set('descractive', true);
model.result('pg2').feature('surf1').set('descr', 'Deformed shape, 3D');
model.result('pg2').feature('surf1').create('mtrl1', 'MaterialAppearance');
model.result('pg2').run;
model.result('pg2').feature('surf1').feature('mtrl1').set('material', 'mat2');
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').set('data', 'dset1');
model.result('pg3').setIndex('looplevel', 109, 0);
model.result('pg3').label('Equivalent Plastic Strain (solid)');
model.result('pg3').set('defaultPlotID', 'equivalentPlasticStrain');
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', {'solid.epeGp'});
model.result('pg3').feature('surf1').set('inheritplot', 'none');
model.result('pg3').feature('surf1').set('resolution', 'normal');
model.result('pg3').feature('surf1').set('colortabletype', 'discrete');
model.result('pg3').feature('surf1').set('bandcount', 11);
model.result('pg3').feature('surf1').set('colortable', 'AuroraAustralisDark');
model.result('pg3').feature('surf1').set('descractive', true);
model.result('pg3').feature('surf1').set('descr', 'Equivalent plastic strain');
model.result('pg3').label('Equivalent Plastic Strain (solid)');
model.result('pg3').run;
model.result('pg3').set('edges', false);
model.result('pg3').run;
model.result('pg3').feature('surf1').create('def1', 'Deform');
model.result('pg3').run;
model.result('pg3').feature('surf1').feature('def1').set('scaleactive', true);
model.result('pg3').feature('surf1').feature('def1').set('scale', 1);
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').run;
model.result('pg4').label('Blank Thickness');
model.result('pg4').set('frametype', 'spatial');
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', 'th');
model.result('pg4').feature('surf1').create('def1', 'Deform');
model.result('pg4').run;
model.result('pg4').feature('surf1').feature('def1').set('scaleactive', true);
model.result('pg4').feature('surf1').feature('def1').set('scale', 1);
model.result('pg4').run;
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').label('Punch Force');
model.result('pg5').create('glob1', 'Global');
model.result('pg5').feature('glob1').set('markerpos', 'datapoints');
model.result('pg5').feature('glob1').set('linewidth', 'preference');
model.result('pg5').feature('glob1').setIndex('expr', '-intop1(solid.RFz)', 0);
model.result('pg5').feature('glob1').setIndex('unit', 'kN', 0);
model.result('pg5').feature('glob1').setIndex('descr', 'Punch force', 0);
model.result('pg5').feature('glob1').set('xdata', 'expr');
model.result('pg5').feature('glob1').set('xdataexpr', '-U_punch(p)');
model.result('pg5').feature('glob1').set('xdatadescractive', true);
model.result('pg5').feature('glob1').set('xdatadescr', 'Vertical displacement');
model.result('pg5').feature('glob1').set('legend', false);
model.result('pg5').run;
model.result('pg5').run;

model.title('Die Forming');

model.description('This example investigates the forming of a plastic metal sheet using a cylindrical rigid punch and the springback phenomenon occurring in the process.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;

model.label('die_forming.mph');

model.modelNode.label('Components');

out = model;
