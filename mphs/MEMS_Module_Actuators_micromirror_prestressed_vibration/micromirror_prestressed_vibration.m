function out = model
%
% micromirror_prestressed_vibration.m
%
% Model exported on May 26 2025, 21:30 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/MEMS_Module/Actuators');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');
model.physics('solid').prop('StructuralTransientBehavior').set('StructuralTransientBehavior', 'IncludeInertia');
model.physics.create('ht', 'HeatTransfer', 'geom1');
model.physics('ht').model('comp1');
model.physics.create('ta', 'ThermoacousticsSinglePhysics', 'geom1');
model.physics('ta').model('comp1');
model.physics.create('acpr', 'PressureAcoustics', 'geom1');
model.physics('acpr').model('comp1');

model.multiphysics.create('te1', 'ThermalExpansion', 'geom1', 3);
model.multiphysics('te1').set('Heat_physics', 'ht');
model.multiphysics('te1').set('Solid_physics', 'solid');
model.multiphysics('te1').selection.all;

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').set('outputmap', {});
model.study('std1').feature('stat').set('ngenAUX', '1');
model.study('std1').feature('stat').set('goalngenAUX', '1');
model.study('std1').feature('stat').set('ngenAUX', '1');
model.study('std1').feature('stat').set('goalngenAUX', '1');
model.study('std1').feature('stat').setSolveFor('/physics/solid', true);
model.study('std1').feature('stat').setSolveFor('/physics/ht', true);
model.study('std1').feature('stat').setSolveFor('/physics/ta', true);
model.study('std1').feature('stat').setSolveFor('/physics/acpr', true);
model.study('std1').feature('stat').setSolveFor('/multiphysics/te1', true);
model.study('std1').create('eig', 'Eigenfrequency');
model.study('std1').feature('eig').set('shift', '1[Hz]');
model.study('std1').feature('eig').set('chkeigregion', true);
model.study('std1').feature('eig').set('conrad', '1');
model.study('std1').feature('eig').set('conradynhm', '1');
model.study('std1').feature('eig').set('storefact', false);
model.study('std1').feature('eig').set('geometricNonlinearity', true);
model.study('std1').feature('eig').set('outputmap', {});
model.study('std1').feature('eig').set('ngenAUX', '1');
model.study('std1').feature('eig').set('goalngenAUX', '1');
model.study('std1').feature('eig').set('ngenAUX', '1');
model.study('std1').feature('eig').set('goalngenAUX', '1');
model.study('std1').feature('eig').setSolveFor('/physics/solid', true);
model.study('std1').feature('eig').setSolveFor('/physics/ht', true);
model.study('std1').feature('eig').setSolveFor('/physics/ta', true);
model.study('std1').feature('eig').setSolveFor('/physics/acpr', true);
model.study('std1').feature('eig').setSolveFor('/multiphysics/te1', true);

model.geom('geom1').run;

model.multiphysics.create('atb1', 'AcousticThermoacousticBoundary', 'geom1', 2);
model.multiphysics.create('tatb1', 'ThermoviscousAcousticThermoelasticityBoundary', 'geom1', 2);

model.param.set('sigma_pre', '3[GPa]');
model.param.descr('sigma_pre', 'Initial normal stress');
model.param.set('fc', '13400[Hz]');
model.param.descr('fc', 'Typical frequency');
model.param.set('dvisc', '0.22[mm]*sqrt(100[Hz]/fc)');
model.param.descr('dvisc', 'Viscous boundary layer thickness at fc');

model.geom('geom1').lengthUnit('mm');
model.geom('geom1').create('wp1', 'WorkPlane');
model.geom('geom1').feature('wp1').set('unite', true);
model.geom('geom1').feature('wp1').geom.create('sq1', 'Square');
model.geom('geom1').feature('wp1').geom.run('sq1');
model.geom('geom1').feature('wp1').geom.create('sq2', 'Square');
model.geom('geom1').feature('wp1').geom.feature('sq2').set('size', 0.2);
model.geom('geom1').feature('wp1').geom.feature('sq2').set('pos', [0 1]);
model.geom('geom1').feature('wp1').geom.run('sq2');
model.geom('geom1').feature('wp1').geom.create('cha1', 'Chamfer');
model.geom('geom1').feature('wp1').geom.feature('cha1').selection('pointinsketch').set('sq2', 4);
model.geom('geom1').feature('wp1').geom.feature('cha1').set('dist', 0.1);
model.geom('geom1').feature('wp1').geom.run('cha1');
model.geom('geom1').feature('wp1').geom.create('r1', 'Rectangle');
model.geom('geom1').feature('wp1').geom.feature('r1').set('size', [0.9 0.1]);
model.geom('geom1').feature('wp1').geom.feature('r1').set('pos', [0.2 1.1]);
model.geom('geom1').feature('wp1').geom.run('r1');
model.geom('geom1').feature('wp1').geom.create('sq3', 'Square');
model.geom('geom1').feature('wp1').geom.feature('sq3').set('size', 0.1);
model.geom('geom1').feature('wp1').geom.feature('sq3').set('pos', [1 1.1]);
model.geom('geom1').feature('wp1').geom.run('sq3');
model.geom('geom1').feature('wp1').geom.create('rot1', 'Rotate');
model.geom('geom1').feature('wp1').geom.feature('rot1').selection('input').set({'cha1' 'r1' 'sq3'});
model.geom('geom1').feature('wp1').geom.feature('rot1').set('rot', 'range(90,90,360)');
model.geom('geom1').feature('wp1').geom.feature('rot1').set('pos', [0.5 0.5]);
model.geom('geom1').run('wp1');
model.geom('geom1').feature.create('ext1', 'Extrude');
model.geom('geom1').feature('ext1').setIndex('distance', 0.02, 0);
model.geom('geom1').feature('ext1').setIndex('distance', 0.04, 1);
model.geom('geom1').feature('ext1').set('displ', {'0' '0'; '0' '0'});
model.geom('geom1').feature('ext1').set('scale', {'1' '1'; '1' '1'});
model.geom('geom1').feature('ext1').set('twist', {'0' '0'});
model.geom('geom1').run('ext1');
model.geom('geom1').feature.create('ext2', 'Extrude');
model.geom('geom1').feature('ext2').set('extrudefrom', 'faces');
model.geom('geom1').feature('ext2').selection('inputface').set('ext1', [120 17 26 111]);
model.geom('geom1').feature('ext2').setIndex('distance', 0.02, 0);
model.geom('geom1').run('ext2');
model.geom('geom1').create('blk1', 'Block');
model.geom('geom1').feature('blk1').set('size', [1.45 1.45 0.06]);
model.geom('geom1').feature('blk1').set('pos', [-0.225 -0.225 0]);
model.geom('geom1').feature('blk1').setIndex('pos', -0.02, 2);
model.geom('geom1').run('blk1');
model.geom('geom1').create('cyl1', 'Cylinder');
model.geom('geom1').feature('cyl1').set('r', 2);
model.geom('geom1').feature('cyl1').set('h', 0.5);
model.geom('geom1').feature('cyl1').set('pos', [0.5 0.5 -0.52]);
model.geom('geom1').run('cyl1');
model.geom('geom1').create('cyl2', 'Cylinder');
model.geom('geom1').feature('cyl2').set('r', 2);
model.geom('geom1').feature('cyl2').set('h', 0.06);
model.geom('geom1').feature('cyl2').set('pos', [0.5 0.5 -0.02]);
model.geom('geom1').run('cyl2');
model.geom('geom1').create('dif1', 'Difference');
model.geom('geom1').feature('dif1').selection('input').set({'cyl2'});
model.geom('geom1').feature('dif1').selection('input2').set({'blk1'});
model.geom('geom1').run('dif1');
model.geom('geom1').create('blk2', 'Block');
model.geom('geom1').feature('blk2').set('size', {'1.65' '1.65' '.5'});
model.geom('geom1').feature('blk2').set('pos', [-0.325 -0.325 0]);
model.geom('geom1').feature('blk2').setIndex('pos', -0.02, 2);
model.geom('geom1').run('blk2');
model.geom('geom1').create('sph1', 'Sphere');
model.geom('geom1').feature('sph1').set('r', 2);
model.geom('geom1').feature('sph1').set('pos', [0.5 0.5 0.04]);
model.geom('geom1').run('sph1');
model.geom('geom1').create('wp2', 'WorkPlane');
model.geom('geom1').feature('wp2').set('unite', true);
model.geom('geom1').feature('wp2').set('quickz', 0.04);
model.geom('geom1').run('wp2');
model.geom('geom1').create('par1', 'Partition');
model.geom('geom1').feature('par1').selection('input').set({'sph1'});
model.geom('geom1').feature('par1').set('partitionwith', 'workplane');
model.geom('geom1').run('par1');
model.geom('geom1').create('del1', 'Delete');
model.geom('geom1').feature('del1').selection('input').init(3);
model.geom('geom1').feature('del1').selection('input').set('par1', 1);

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');

model.geom('geom1').run;

model.selection('sel1').label('Air TA');
model.selection('sel1').set([5 6]);
model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').label('Air ACPR');
model.selection('sel2').set([3]);
model.selection.create('sel3', 'Explicit');
model.selection('sel3').model('comp1');
model.selection('sel3').label('Substrate');
model.selection('sel3').set([1 2 4]);
model.selection.create('sel4', 'Explicit');
model.selection('sel4').model('comp1');
model.selection('sel4').label('Solid');
model.selection('sel4').set([7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36]);
model.selection.create('sel5', 'Explicit');
model.selection('sel5').model('comp1');
model.selection('sel5').label('Solid Aluminum');
model.selection('sel5').set([9 10 11 12 13 14 15 16 17 18 23 24 29 30 31 32 33 34 35 36]);
model.selection.create('sel6', 'Explicit');
model.selection('sel6').model('comp1');
model.selection('sel6').label('Solid Steel');
model.selection('sel6').set([7 8 19 20 21 22 25 26 27 28]);
model.selection.create('sel7', 'Explicit');
model.selection('sel7').model('comp1');
model.selection('sel7').label('Solid-TA');
model.selection('sel7').geom(2);
model.selection('sel7').set([24 25 26 27 28 30 31 33 34 37 38 39 41 44 47 48 49 50 51 52 54 55 57 58 60 61 62 63 64 65 66 67 68 69 70 71 72 73 75 76 78 80 81 82 84 85 87 89 90 91 92 94 95 98 99 100 101 102 103 104 105 106 108 109 111 113 114 115 123 124 126 128 129 130 133 134 135 136 137 138 140 141 143 145 146 147 148 149 152 155 157 158 159 160 161 162 164 165 167 168 170 171 172 174 175 178 181 182 183 184 185 186 187 188 189 190 191 192]);
model.selection.create('uni1', 'Union');
model.selection('uni1').model('comp1');
model.selection('uni1').label('Air');
model.selection('uni1').set('input', {'sel1' 'sel2'});

model.common.create('mpf1', 'ParticipationFactors', 'comp1');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat1').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat1').label('Aluminum');
model.material('mat1').set('family', 'aluminum');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('heatcapacity', '900[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'238[W/(m*K)]' '0' '0' '0' '238[W/(m*K)]' '0' '0' '0' '238[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'3.774e7[S/m]' '0' '0' '0' '3.774e7[S/m]' '0' '0' '0' '3.774e7[S/m]'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'23e-6[1/K]' '0' '0' '0' '23e-6[1/K]' '0' '0' '0' '23e-6[1/K]'});
model.material('mat1').propertyGroup('def').set('density', '2700[kg/m^3]');
model.material('mat1').propertyGroup('Enu').set('E', '70[GPa]');
model.material('mat1').propertyGroup('Enu').set('nu', '0.33');
model.material('mat1').propertyGroup('Murnaghan').set('l', '-250[GPa]');
model.material('mat1').propertyGroup('Murnaghan').set('m', '-330[GPa]');
model.material('mat1').propertyGroup('Murnaghan').set('n', '-350[GPa]');
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat2').propertyGroup('Enu').func.create('int1', 'Interpolation');
model.material('mat2').propertyGroup('Enu').func.create('int2', 'Interpolation');
model.material('mat2').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat2').propertyGroup.create('ElastoplasticModel', 'Elastoplastic material model');
model.material('mat2').propertyGroup('ElastoplasticModel').func.create('int1', 'Interpolation');
model.material('mat2').propertyGroup.create('Ludwik', 'Ludwik');
model.material('mat2').propertyGroup('Ludwik').func.create('int1', 'Interpolation');
model.material('mat2').propertyGroup.create('JohnsonCook', 'Johnson-Cook');
model.material('mat2').propertyGroup.create('Swift', 'Swift');
model.material('mat2').propertyGroup.create('Voce', 'Voce');
model.material('mat2').propertyGroup('Voce').func.create('int1', 'Interpolation');
model.material('mat2').propertyGroup.create('HockettSherby', 'Hockett-Sherby');
model.material('mat2').propertyGroup('HockettSherby').func.create('int1', 'Interpolation');
model.material('mat2').propertyGroup.create('ArmstrongFrederick', 'Armstrong-Frederick');
model.material('mat2').propertyGroup('ArmstrongFrederick').func.create('int1', 'Interpolation');
model.material('mat2').propertyGroup.create('Norton', 'Norton');
model.material('mat2').propertyGroup.create('Garofalo', 'Garofalo (hyperbolic sine)');
model.material('mat2').propertyGroup.create('ChabocheViscoplasticity', 'Chaboche viscoplasticity');
model.material('mat2').label('Structural steel');
model.material('mat2').set('family', 'custom');
model.material('mat2').set('customspecular', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat2').set('customdiffuse', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat2').set('customambient', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat2').set('noise', true);
model.material('mat2').set('fresnel', 0.9);
model.material('mat2').set('roughness', 0.3);
model.material('mat2').set('metallic', 0);
model.material('mat2').set('pearl', 0);
model.material('mat2').set('diffusewrap', 0);
model.material('mat2').set('clearcoat', 0);
model.material('mat2').set('reflectance', 0);
model.material('mat2').propertyGroup('def').set('lossfactor', '0.02');
model.material('mat2').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('heatcapacity', '475[J/(kg*K)]');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]'});
model.material('mat2').propertyGroup('def').set('electricconductivity', {'4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]'});
model.material('mat2').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]'});
model.material('mat2').propertyGroup('def').set('density', '7850[kg/m^3]');
model.material('mat2').propertyGroup('Enu').func('int1').set('funcname', 'E');
model.material('mat2').propertyGroup('Enu').func('int1').set('table', {'293.15' '200e9'; '793.15' '166.6e9'});
model.material('mat2').propertyGroup('Enu').func('int1').set('extrap', 'linear');
model.material('mat2').propertyGroup('Enu').func('int1').set('fununit', {'Pa'});
model.material('mat2').propertyGroup('Enu').func('int1').set('argunit', {'K'});
model.material('mat2').propertyGroup('Enu').func('int2').set('funcname', 'nu');
model.material('mat2').propertyGroup('Enu').func('int2').set('table', {'293.15' '0.30'; '793.15' '0.315'});
model.material('mat2').propertyGroup('Enu').func('int2').set('extrap', 'linear');
model.material('mat2').propertyGroup('Enu').func('int2').set('fununit', {'1'});
model.material('mat2').propertyGroup('Enu').func('int2').set('argunit', {'K'});
model.material('mat2').propertyGroup('Enu').set('E', 'E(T)');
model.material('mat2').propertyGroup('Enu').set('nu', 'nu(T)');
model.material('mat2').propertyGroup('Enu').addInput('temperature');
model.material('mat2').propertyGroup('Murnaghan').set('l', '-3.0e11[Pa]');
model.material('mat2').propertyGroup('Murnaghan').set('m', '-6.2e11[Pa]');
model.material('mat2').propertyGroup('Murnaghan').set('n', '-7.2e11[Pa]');
model.material('mat2').propertyGroup('ElastoplasticModel').func('int1').set('funcname', 'a');
model.material('mat2').propertyGroup('ElastoplasticModel').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat2').propertyGroup('ElastoplasticModel').func('int1').set('fununit', {'1'});
model.material('mat2').propertyGroup('ElastoplasticModel').func('int1').set('argunit', {'K'});
model.material('mat2').propertyGroup('ElastoplasticModel').set('sigmags', '350[MPa]*a(T)');
model.material('mat2').propertyGroup('ElastoplasticModel').set('Et', '1.045[GPa]*a(T)');
model.material('mat2').propertyGroup('ElastoplasticModel').set('Ek', '1.045[GPa]*a(T)');
model.material('mat2').propertyGroup('ElastoplasticModel').set('sigmagh', '1.050[GPa]*epe*a(T)');
model.material('mat2').propertyGroup('ElastoplasticModel').addInput('temperature');
model.material('mat2').propertyGroup('ElastoplasticModel').addInput('effectiveplasticstrain');
model.material('mat2').propertyGroup('Ludwik').func('int1').set('funcname', 'a');
model.material('mat2').propertyGroup('Ludwik').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat2').propertyGroup('Ludwik').func('int1').set('fununit', {'1'});
model.material('mat2').propertyGroup('Ludwik').func('int1').set('argunit', {'K'});
model.material('mat2').propertyGroup('Ludwik').set('k_lud', '560[MPa]*a(T)');
model.material('mat2').propertyGroup('Ludwik').set('n_lud', '0.61');
model.material('mat2').propertyGroup('Ludwik').addInput('temperature');
model.material('mat2').propertyGroup('JohnsonCook').set('k_jcook', '560[MPa]');
model.material('mat2').propertyGroup('JohnsonCook').set('n_jcook', '0.61');
model.material('mat2').propertyGroup('JohnsonCook').set('C_jcook', '0.12');
model.material('mat2').propertyGroup('JohnsonCook').set('epet0_jcook', '1[1/s]');
model.material('mat2').propertyGroup('JohnsonCook').set('m_jcook', '0.6');
model.material('mat2').propertyGroup('Swift').set('e0_swi', '0.021');
model.material('mat2').propertyGroup('Swift').set('n_swi', '0.2');
model.material('mat2').propertyGroup('Voce').func('int1').set('funcname', 'a');
model.material('mat2').propertyGroup('Voce').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat2').propertyGroup('Voce').func('int1').set('fununit', {'1'});
model.material('mat2').propertyGroup('Voce').func('int1').set('argunit', {'K'});
model.material('mat2').propertyGroup('Voce').set('sigma_voc', '249[MPa]*a(T)');
model.material('mat2').propertyGroup('Voce').set('beta_voc', '9.3');
model.material('mat2').propertyGroup('Voce').addInput('temperature');
model.material('mat2').propertyGroup('HockettSherby').func('int1').set('funcname', 'a');
model.material('mat2').propertyGroup('HockettSherby').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat2').propertyGroup('HockettSherby').func('int1').set('fununit', {'1'});
model.material('mat2').propertyGroup('HockettSherby').func('int1').set('argunit', {'K'});
model.material('mat2').propertyGroup('HockettSherby').set('sigma_hoc', '684[MPa]*a(T)');
model.material('mat2').propertyGroup('HockettSherby').set('m_hoc', '3.9');
model.material('mat2').propertyGroup('HockettSherby').set('n_hoc', '0.85');
model.material('mat2').propertyGroup('HockettSherby').addInput('temperature');
model.material('mat2').propertyGroup('ArmstrongFrederick').func('int1').set('funcname', 'a');
model.material('mat2').propertyGroup('ArmstrongFrederick').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat2').propertyGroup('ArmstrongFrederick').func('int1').set('fununit', {'1'});
model.material('mat2').propertyGroup('ArmstrongFrederick').func('int1').set('argunit', {'K'});
model.material('mat2').propertyGroup('ArmstrongFrederick').set('Ck', '2.070[GPa]*a(T)');
model.material('mat2').propertyGroup('ArmstrongFrederick').set('gammak', '8.0');
model.material('mat2').propertyGroup('ArmstrongFrederick').addInput('temperature');
model.material('mat2').propertyGroup('Norton').set('A_nor', '1.2e-15[1/s]');
model.material('mat2').propertyGroup('Norton').set('sigRef_nor', '1[MPa]');
model.material('mat2').propertyGroup('Norton').set('n_nor', '4.5');
model.material('mat2').propertyGroup('Garofalo').set('A_gar', '1e-6[1/s]');
model.material('mat2').propertyGroup('Garofalo').set('sigRef_gar', '100[MPa]');
model.material('mat2').propertyGroup('Garofalo').set('n_gar', '4.6');
model.material('mat2').propertyGroup('ChabocheViscoplasticity').set('A_cha', '1');
model.material('mat2').propertyGroup('ChabocheViscoplasticity').set('sigRef_cha', '490[MPa]');
model.material('mat2').propertyGroup('ChabocheViscoplasticity').set('n_cha', '9');
model.material.create('mat3', 'Common', 'comp1');
model.material('mat3').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat3').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat3').propertyGroup('def').func.create('rho', 'Analytic');
model.material('mat3').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat3').propertyGroup('def').func.create('cs', 'Analytic');
model.material('mat3').propertyGroup('def').func.create('an1', 'Analytic');
model.material('mat3').propertyGroup('def').func.create('an2', 'Analytic');
model.material('mat3').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat3').propertyGroup.create('NonlinearModel', 'Nonlinear model');
model.material('mat3').propertyGroup.create('idealGas', 'Ideal gas');
model.material('mat3').propertyGroup('idealGas').func.create('Cp', 'Piecewise');
model.material('mat3').label('Air');
model.material('mat3').set('family', 'air');
model.material('mat3').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat3').propertyGroup('def').func('eta').set('pieces', {'200.0' '1600.0' '-8.38278E-7+8.35717342E-8*T^1-7.69429583E-11*T^2+4.6437266E-14*T^3-1.06585607E-17*T^4'});
model.material('mat3').propertyGroup('def').func('eta').set('argunit', 'K');
model.material('mat3').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.material('mat3').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat3').propertyGroup('def').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat3').propertyGroup('def').func('Cp').set('argunit', 'K');
model.material('mat3').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat3').propertyGroup('def').func('rho').set('expr', 'pA*0.02897/R_const[K*mol/J]/T');
model.material('mat3').propertyGroup('def').func('rho').set('args', {'pA' 'T'});
model.material('mat3').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.material('mat3').propertyGroup('def').func('rho').set('argunit', {'Pa' 'K'});
model.material('mat3').propertyGroup('def').func('rho').set('plotaxis', {'off' 'on'});
model.material('mat3').propertyGroup('def').func('rho').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat3').propertyGroup('def').func('rho').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '293.15'});
model.material('mat3').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat3').propertyGroup('def').func('k').set('pieces', {'200.0' '1600.0' '-0.00227583562+1.15480022E-4*T^1-7.90252856E-8*T^2+4.11702505E-11*T^3-7.43864331E-15*T^4'});
model.material('mat3').propertyGroup('def').func('k').set('argunit', 'K');
model.material('mat3').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.material('mat3').propertyGroup('def').func('cs').set('expr', 'sqrt(1.4*R_const[K*mol/J]/0.02897*T)');
model.material('mat3').propertyGroup('def').func('cs').set('args', {'T'});
model.material('mat3').propertyGroup('def').func('cs').set('fununit', 'm/s');
model.material('mat3').propertyGroup('def').func('cs').set('argunit', {'K'});
model.material('mat3').propertyGroup('def').func('cs').set('plotfixedvalue', {'273.15'});
model.material('mat3').propertyGroup('def').func('cs').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat3').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.material('mat3').propertyGroup('def').func('an1').set('expr', '-1/rho(pA,T)*d(rho(pA,T),T)');
model.material('mat3').propertyGroup('def').func('an1').set('args', {'pA' 'T'});
model.material('mat3').propertyGroup('def').func('an1').set('fununit', '1/K');
model.material('mat3').propertyGroup('def').func('an1').set('argunit', {'Pa' 'K'});
model.material('mat3').propertyGroup('def').func('an1').set('plotaxis', {'off' 'on'});
model.material('mat3').propertyGroup('def').func('an1').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat3').propertyGroup('def').func('an1').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '373.15'});
model.material('mat3').propertyGroup('def').func('an2').set('funcname', 'muB');
model.material('mat3').propertyGroup('def').func('an2').set('expr', '0.6*eta(T)');
model.material('mat3').propertyGroup('def').func('an2').set('args', {'T'});
model.material('mat3').propertyGroup('def').func('an2').set('fununit', 'Pa*s');
model.material('mat3').propertyGroup('def').func('an2').set('argunit', {'K'});
model.material('mat3').propertyGroup('def').func('an2').set('plotfixedvalue', {'200'});
model.material('mat3').propertyGroup('def').func('an2').set('plotargs', {'T' '200' '1600'});
model.material('mat3').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.material('mat3').propertyGroup('def').set('molarmass', '');
model.material('mat3').propertyGroup('def').set('bulkviscosity', '');
model.material('mat3').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)'});
model.material('mat3').propertyGroup('def').set('molarmass', '0.02897[kg/mol]');
model.material('mat3').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.material('mat3').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.material('mat3').propertyGroup('def').set('ratioofspecificheat', '1.4');
model.material('mat3').propertyGroup('def').set('electricconductivity', {'0[S/m]' '0' '0' '0' '0[S/m]' '0' '0' '0' '0[S/m]'});
model.material('mat3').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.material('mat3').propertyGroup('def').set('density', 'rho(pA,T)');
model.material('mat3').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.material('mat3').propertyGroup('def').set('soundspeed', 'cs(T)');
model.material('mat3').propertyGroup('def').addInput('temperature');
model.material('mat3').propertyGroup('def').addInput('pressure');
model.material('mat3').propertyGroup('RefractiveIndex').set('n', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('NonlinearModel').set('BA', 'def.gamma-1');
model.material('mat3').propertyGroup('idealGas').func('Cp').label('Piecewise 2');
model.material('mat3').propertyGroup('idealGas').func('Cp').set('arg', 'T');
model.material('mat3').propertyGroup('idealGas').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat3').propertyGroup('idealGas').func('Cp').set('argunit', 'K');
model.material('mat3').propertyGroup('idealGas').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat3').propertyGroup('idealGas').set('Rs', 'R_const/Mn');
model.material('mat3').propertyGroup('idealGas').set('heatcapacity', 'Cp(T)');
model.material('mat3').propertyGroup('idealGas').set('ratioofspecificheat', '1.4');
model.material('mat3').propertyGroup('idealGas').set('molarmass', '0.02897');
model.material('mat3').propertyGroup('idealGas').addInput('temperature');
model.material('mat3').propertyGroup('idealGas').addInput('pressure');
model.material('mat3').materialType('nonSolid');
model.material('mat1').selection.named('sel5');
model.material('mat2').selection.named('sel6');
model.material('mat3').selection.named('uni1');

model.modelNode.create('xdim1', 'ExtraDim');

model.geom.create('geom2', 1);
model.geom('geom2').model('comp1');
model.geom('geom2').model('xdim1');

model.mesh.create('mesh2', 'geom2');

model.extraDim.create('pa1', 'PointsToAttach');
model.extraDim('pa1').model('xdim1');

model.geom('geom2').label('Geometry (Extra Dimension from Perfectly Matched Boundary 1)');
model.geom('geom2').create('i1', 'Interval');
model.geom('geom2').run;

model.mesh('mesh2').label('Mesh (Extra Dimension from Perfectly Matched Boundary 1)');
model.mesh('mesh2').create('dis1', 'Distribution');
model.mesh('mesh2').feature('dis1').selection.set([1]);
model.mesh('mesh2').feature('dis1').set('numelem', 8);
model.mesh('mesh2').create('edg1', 'Edge');

model.extraDim('pa1').selection('point').set([1]);

model.modelNode('xdim1').label('Extra Dimension from Perfectly Matched Boundary 1');
model.modelNode('xdim1').tag('acpr_pmb1_xdim');
model.modelNode('acpr_pmb1_xdim').materialCoord({'X_acpr_pmb1_xdim' 'Y1' 'Z1'});
model.modelNode('acpr_pmb1_xdim').materialCoord({'X_acpr_pmb1_xdim' 'Y_acpr_pmb1_xdim' 'Z1'});
model.modelNode('acpr_pmb1_xdim').materialCoord({'X_acpr_pmb1_xdim' 'Y_acpr_pmb1_xdim' 'Z_acpr_pmb1_xdim'});
model.modelNode('acpr_pmb1_xdim').geometryCoord({'Xg_acpr_pmb1_xdim' 'Yg1' 'Zg1'});
model.modelNode('acpr_pmb1_xdim').geometryCoord({'Xg_acpr_pmb1_xdim' 'Yg_acpr_pmb1_xdim' 'Zg1'});
model.modelNode('acpr_pmb1_xdim').geometryCoord({'Xg_acpr_pmb1_xdim' 'Yg_acpr_pmb1_xdim' 'Zg_acpr_pmb1_xdim'});
model.modelNode('acpr_pmb1_xdim').meshCoord({'Xm_acpr_pmb1_xdim' 'Ym1' 'Zm1'});
model.modelNode('acpr_pmb1_xdim').meshCoord({'Xm_acpr_pmb1_xdim' 'Ym_acpr_pmb1_xdim' 'Zm1'});
model.modelNode('acpr_pmb1_xdim').meshCoord({'Xm_acpr_pmb1_xdim' 'Ym_acpr_pmb1_xdim' 'Zm_acpr_pmb1_xdim'});

model.common.create('free1', 'DeformingDomain', 'comp1');
model.common('free1').selection.all;
model.common('free1').selection.set([5 6]);
model.common('free1').set('smoothingType', 'hyperelastic');

model.physics('solid').feature('lemm1').create('iss1', 'InitialStressandStrain', 3);
model.physics('solid').feature('lemm1').feature('iss1').selection.set([10 18 24 36]);
model.physics('solid').feature('lemm1').feature('iss1').set('Sil', {'sigma_pre' '0' '0' '0' 'sigma_pre' '0' '0' '0' '0'});
model.physics('solid').feature('lemm1').create('iss2', 'InitialStressandStrain', 3);
model.physics('solid').feature('lemm1').feature('iss2').selection.set([9 17 23 35]);
model.physics('solid').feature('lemm1').feature('iss2').set('Sil', {'-sigma_pre' '0' '0' '0' '-sigma_pre' '0' '0' '0' '0'});
model.physics('solid').create('fix1', 'Fixed', 2);
model.physics('solid').feature('fix1').selection.set([40 53 150 163]);
model.physics('solid').create('bndl1', 'BoundaryLoad', 2);
model.physics('solid').feature('bndl1').selection.set([85]);
model.physics('solid').feature('bndl1').set('FperArea', {'0' '0' 'linper(1)'});
model.physics('solid').selection.named('sel4');
model.physics('ht').selection.named('sel4');
model.physics('ht').create('temp1', 'TemperatureBoundary', 2);
model.physics('ht').feature('temp1').selection.set([40 53 150 163]);
model.physics('ta').selection.set([5 6]);
model.physics('ta').create('wall2', 'Wall', 2);
model.physics('ta').feature('wall2').selection.set([15]);
model.physics('ta').feature('wall2').set('MechanicalCondition', 'Slip');
model.physics('ta').feature('wall2').set('ThermalCondition', 'Adiabatic');
model.physics('acpr').selection.named('sel2');
model.physics('acpr').create('pmb1', 'PerfectlyMatchedBoundary', 2);
model.physics('acpr').feature('pmb1').selection.set([7 9 118 119]);
model.physics('acpr').feature('pmb1').set('directionType', 'normal');

model.multiphysics('te1').set('IncludeMechanicalLosses', true);

model.view('view1').set('transparency', true);

model.multiphysics('atb1').selection.all;
model.multiphysics('tatb1').selection.named('sel7');

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.set([30 37 47 60 80 89 98 113 128 145 157 170 178]);
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([45 115 129 134 160 173 219 304]);
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 12);
model.mesh('mesh1').feature('map1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis2').selection.set([56 64 74 75 95 159 199 227 243 261 288 298]);
model.mesh('mesh1').feature('map1').feature('dis2').set('numelem', 3);
model.mesh('mesh1').feature('map1').create('dis3', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis3').selection.set([37 152 194 309]);
model.mesh('mesh1').feature('map1').feature('dis3').set('numelem', 6);
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe1').selection.named('sel4');
model.mesh('mesh1').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis1').selection.set([]);
model.mesh('mesh1').feature('swe1').feature('dis1').set('numelem', 2);
model.mesh('mesh1').create('ftet1', 'FreeTet');
model.mesh('mesh1').feature('ftet1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('ftet1').selection.set([6]);
model.mesh('mesh1').feature('ftet1').create('size1', 'Size');
model.mesh('mesh1').feature('ftet1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('ftet1').feature('size1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('ftet1').feature('size1').selection.set([19 20 23 193]);
model.mesh('mesh1').feature('ftet1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('ftet1').feature('size1').set('hmax', 0.04);
model.mesh('mesh1').create('ftet2', 'FreeTet');
model.mesh('mesh1').feature('ftet2').create('size1', 'Size');
model.mesh('mesh1').feature('ftet2').feature('size1').set('custom', true);
model.mesh('mesh1').feature('ftet2').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('ftet2').feature('size1').set('hmax', 0.8);
model.mesh('mesh1').create('bl1', 'BndLayer');
model.mesh('mesh1').feature('bl1').create('blp', 'BndLayerProp');
model.mesh('mesh1').feature('bl1').selection.geom(3);
model.mesh('mesh1').feature('bl1').selection.set([]);
model.mesh('mesh1').feature('bl1').selection.allGeom;
model.mesh('mesh1').feature('bl1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('bl1').selection.set([5 6]);
model.mesh('mesh1').feature('bl1').set('sharpcorners', 'none');
model.mesh('mesh1').feature('bl1').feature('blp').selection.named('sel7');
model.mesh('mesh1').feature('bl1').feature('blp').set('blnlayers', 3);
model.mesh('mesh1').feature('bl1').feature('blp').set('inittype', 'blhtot');
model.mesh('mesh1').feature('bl1').feature('blp').set('blhtot', 'dvisc');
model.mesh('mesh1').feature('size').set('custom', true);
model.mesh('mesh1').feature('size').set('hmax', 1);
model.mesh('mesh1').feature('size').set('hmin', 0.01);
model.mesh('mesh1').run;

model.study('std1').label('Study 1 - Structural Modes (lossless)');
model.study('std1').setGenPlots(false);
model.study('std1').feature('stat').setEntry('activate', 'ht', false);
model.study('std1').feature('stat').setEntry('activate', 'frame:spatial1', false);
model.study('std1').feature('stat').setEntry('activateCoupling', 'te1', false);

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([5 6]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([5 6]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_spatial_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_spatial_disp').set('scaleval', '9.636301307712549E-6');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('s1').feature('d1').set('nliniterrefine', true);
model.sol('sol1').feature('s1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'right');
model.sol('sol1').feature('s1').feature('i1').set('rhob', 40);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol1').feature('s1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('mglevels', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('maxcoarsedof', 10000);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'eig');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').feature('comp1_spatial_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_spatial_disp').set('scaleval', '9.636301307712549E-6');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('initsoluse', 'sol2');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'eig');
model.sol('sol1').create('e1', 'Eigenvalue');
model.sol('sol1').feature('e1').set('neigs', 6);
model.sol('sol1').feature('e1').set('shift', '0');
model.sol('sol1').feature('e1').set('rtol', 1.0E-6);
model.sol('sol1').feature('e1').set('transform', 'none');
model.sol('sol1').feature('e1').set('eigref', '100');
model.sol('sol1').feature('e1').set('eigvfunscaleparam', '6.21E-9');
model.sol('sol1').feature('e1').set('storelinpoint', true);
model.sol('sol1').feature('e1').set('control', 'eig');
model.sol('sol1').feature('e1').set('linpmethod', 'sol');
model.sol('sol1').feature('e1').set('linpsol', 'sol1');
model.sol('sol1').feature('e1').set('linpsoluse', 'sol2');
model.sol('sol1').feature('e1').set('control', 'eig');
model.sol('sol1').feature('e1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('e1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('e1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('e1').create('d1', 'Direct');
model.sol('sol1').feature('e1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('e1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('e1').feature('d1').label('Suggested Direct Solver (tatb1_atb1) (Merged)');
model.sol('sol1').feature('e1').create('i1', 'Iterative');
model.sol('sol1').feature('e1').feature('i1').set('rhob', 10);
model.sol('sol1').feature('e1').feature('i1').label('Suggested Iterative Solver (GMRES with Direct Precon.) (tatb1_atb1)');
model.sol('sol1').feature('e1').feature('i1').create('dp1', 'DirectPreconditioner');
model.sol('sol1').feature('e1').feature('i1').feature('dp1').set('hybridization', 'multi');
model.sol('sol1').feature('e1').feature('i1').feature('dp1').set('hybridvar', {'comp1_p2' 'comp1_u2' 'comp1_p' 'comp1_tatb1_lm_up' 'comp1_tatb1_lm_down' 'comp1_tatb1_lm'});
model.sol('sol1').feature('e1').feature('i1').feature('dp1').set('linsolver', 'pardiso');
model.sol('sol1').feature('e1').feature('i1').feature('dp1').set('pivotperturb', '1.0E-13');
model.sol('sol1').feature('e1').feature('i1').create('dp2', 'DirectPreconditioner');
model.sol('sol1').feature('e1').feature('i1').feature('dp2').set('hybridization', 'multi');
model.sol('sol1').feature('e1').feature('i1').feature('dp2').set('hybridvar', {'comp1_T2' 'comp1_T'});
model.sol('sol1').feature('e1').feature('i1').feature('dp2').set('linsolver', 'pardiso');
model.sol('sol1').feature('e1').feature('i1').feature('dp2').set('pivotperturb', '1.0E-13');
model.sol('sol1').feature('e1').feature('i1').create('dp3', 'DirectPreconditioner');
model.sol('sol1').feature('e1').feature('i1').feature('dp3').set('hybridization', 'multi');
model.sol('sol1').feature('e1').feature('i1').feature('dp3').set('hybridvar', {'comp1_u'});
model.sol('sol1').feature('e1').feature('i1').feature('dp3').set('linsolver', 'pardiso');
model.sol('sol1').feature('e1').feature('i1').feature('dp3').set('pivotperturb', '1.0E-9');
model.sol('sol1').feature('e1').create('i2', 'Iterative');
model.sol('sol1').feature('e1').feature('i2').set('rhob', 10);
model.sol('sol1').feature('e1').feature('i2').label('Suggested Iterative Solver (GMRES with DD) (tatb1_atb1)');
model.sol('sol1').feature('e1').feature('i2').create('dd1', 'DomainDecomposition');
model.sol('sol1').feature('e1').feature('i2').feature('dd1').set('hybridization', 'multi');
model.sol('sol1').feature('e1').feature('i2').feature('dd1').set('hybridvar', {'comp1_u2' 'comp1_p' 'comp1_tatb1_lm_up' 'comp1_tatb1_lm_down' 'comp1_tatb1_lm' 'comp1_T2' 'comp1_T'});
model.sol('sol1').feature('e1').feature('i2').feature('dd1').set('prefun', 'ddhyb');
model.sol('sol1').feature('e1').feature('i2').feature('dd1').set('domdofmax', 200000);
model.sol('sol1').feature('e1').feature('i2').feature('dd1').set('ddolhandling', 'ddrestricted');
model.sol('sol1').feature('e1').feature('i2').feature('dd1').set('userac', false);
model.sol('sol1').feature('e1').feature('i2').feature('dd1').set('usecoarse', 'aggregation');
model.sol('sol1').feature('e1').feature('i2').feature('dd1').feature('ds').create('dp1', 'DirectPreconditioner');
model.sol('sol1').feature('e1').feature('i2').feature('dd1').feature('ds').feature('dp1').set('hybridization', 'multi');
model.sol('sol1').feature('e1').feature('i2').feature('dd1').feature('ds').feature('dp1').set('hybridvar', {'comp1_u2' 'comp1_p' 'comp1_tatb1_lm_up' 'comp1_tatb1_lm_down' 'comp1_tatb1_lm'});
model.sol('sol1').feature('e1').feature('i2').feature('dd1').feature('ds').feature('dp1').set('linsolver', 'pardiso');
model.sol('sol1').feature('e1').feature('i2').feature('dd1').feature('ds').feature('dp1').set('pivotperturb', '1.0E-13');
model.sol('sol1').feature('e1').feature('i2').feature('dd1').feature('ds').create('dp2', 'DirectPreconditioner');
model.sol('sol1').feature('e1').feature('i2').feature('dd1').feature('ds').feature('dp2').set('hybridization', 'multi');
model.sol('sol1').feature('e1').feature('i2').feature('dd1').feature('ds').feature('dp2').set('hybridvar', {'comp1_T2' 'comp1_T'});
model.sol('sol1').feature('e1').feature('i2').feature('dd1').feature('ds').feature('dp2').set('linsolver', 'pardiso');
model.sol('sol1').feature('e1').feature('i2').feature('dd1').feature('ds').feature('dp2').set('pivotperturb', '1.0E-13');
model.sol('sol1').feature('e1').feature('i2').feature('dd1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('e1').feature('i2').feature('dd1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('e1').feature('i2').feature('dd1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('e1').feature('i2').create('dp1', 'DirectPreconditioner');
model.sol('sol1').feature('e1').feature('i2').feature('dp1').set('hybridization', 'multi');
model.sol('sol1').feature('e1').feature('i2').feature('dp1').set('hybridvar', {'comp1_p2' 'comp1_u'});
model.sol('sol1').feature('e1').feature('i2').feature('dp1').set('linsolver', 'pardiso');
model.sol('sol1').feature('e1').feature('i2').feature('dp1').set('pivotperturb', '1.0E-9');
model.sol('sol1').feature('e1').feature('d1').active(true);
model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol1').attach('std1');
model.sol('sol1').runFromTo('st1', 'su1');

model.study('std1').feature('eig').set('neigsactive', true);
model.study('std1').feature('eig').set('neigs', 4);
model.study('std1').feature('eig').set('shift', '8000[Hz]');
model.study('std1').feature('eig').set('eigwhich', 'lr');
model.study('std1').feature('eig').setEntry('activate', 'ht', false);
model.study('std1').feature('eig').setEntry('activate', 'ta', false);
model.study('std1').feature('eig').setEntry('activate', 'acpr', false);
model.study('std1').feature('eig').setEntry('activate', 'frame:spatial1', false);
model.study('std1').feature('eig').setEntry('activateCoupling', 'te1', false);
model.study('std1').feature('eig').setEntry('activateCoupling', 'atb1', false);
model.study('std1').feature('eig').setEntry('activateCoupling', 'tatb1', false);

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([5 6]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([5 6]);

model.sol('sol1').study('std1');

model.study('std1').feature('eig').set('notsolnum', 'auto');
model.study('std1').feature('eig').set('notsolvertype', 'solnum');
model.study('std1').feature('eig').set('notsolnumhide', 'off');
model.study('std1').feature('eig').set('notstudyhide', 'off');
model.study('std1').feature('eig').set('notsolhide', 'off');

model.sol('sol2').copySolution('sol3');

model.study('std1').feature('eig').set('notlistsolnum', 1);
model.study('std1').feature('eig').set('notsolnum', 'auto');
model.study('std1').feature('eig').set('listsolnum', 1);
model.study('std1').feature('eig').set('solnum', 'auto');
model.study('std1').feature('eig').set('linplistsolnum', {'1'});
model.study('std1').feature('eig').set('linpsolnum', 'auto');
model.study('std1').feature('eig').set('notlistsolnum', 1);
model.study('std1').feature('eig').set('notsolnum', 'auto');
model.study('std1').feature('eig').set('listsolnum', 1);
model.study('std1').feature('eig').set('solnum', 'auto');
model.study('std1').feature('eig').set('linplistsolnum', {'1'});
model.study('std1').feature('eig').set('linpsolnum', 'auto');

model.result.dataset('dset2').set('solution', 'none');

model.sol('sol1').feature.remove('e1');
model.sol('sol1').feature.remove('v2');
model.sol('sol1').feature.remove('st2');
model.sol('sol1').feature.remove('su1');
model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol3').copySolution('sol2');
model.sol.remove('sol3');
model.sol('sol2').label('Solution Store 1');

model.result.dataset.remove('dset4');

model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_spatial_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_spatial_disp').set('scaleval', '9.636301307712549E-6');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('s1').feature('d1').set('nliniterrefine', true);
model.sol('sol1').feature('s1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'right');
model.sol('sol1').feature('s1').feature('i1').set('rhob', 40);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol1').feature('s1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('mglevels', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('maxcoarsedof', 10000);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').feature('su1').set('sol', 'sol2');
model.sol('sol1').feature('su1').label('Solution Store 1');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'eig');

model.study('std1').feature('eig').set('initsoluse', 'sol2');
model.study('std1').feature('eig').set('linpsoluse', 'sol2');

model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').feature('comp1_spatial_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_spatial_disp').set('scaleval', '9.636301307712549E-6');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('initsoluse', 'sol2');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'eig');
model.sol('sol1').create('e1', 'Eigenvalue');
model.sol('sol1').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol1').feature('e1').set('eigvfunscaleparam', '6.21E-9');
model.sol('sol1').feature('e1').set('storelinpoint', true);
model.sol('sol1').feature('e1').set('control', 'eig');
model.sol('sol1').feature('e1').set('linpmethod', 'sol');
model.sol('sol1').feature('e1').set('linpsol', 'sol1');
model.sol('sol1').feature('e1').set('linpsoluse', 'sol2');
model.sol('sol1').feature('e1').set('control', 'eig');
model.sol('sol1').feature('e1').feature('aDef').set('cachepattern', true);

model.result.dataset('dset2').set('solution', 'sol2');

model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');

model.study('std1').feature('eig').set('notsolnum', 'auto');
model.study('std1').feature('eig').set('notsolvertype', 'solnum');
model.study('std1').feature('eig').set('notsolnumhide', 'off');
model.study('std1').feature('eig').set('notstudyhide', 'off');
model.study('std1').feature('eig').set('notsolhide', 'off');

model.sol('sol1').attach('std1');
model.sol('sol1').runFromTo('st2', 'e1');

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').set('outputmap', {});
model.study('std2').feature('stat').set('ngenAUX', '1');
model.study('std2').feature('stat').set('goalngenAUX', '1');
model.study('std2').feature('stat').set('ngenAUX', '1');
model.study('std2').feature('stat').set('goalngenAUX', '1');
model.study('std2').feature('stat').setSolveFor('/physics/solid', true);
model.study('std2').feature('stat').setSolveFor('/physics/ht', true);
model.study('std2').feature('stat').setSolveFor('/physics/ta', true);
model.study('std2').feature('stat').setSolveFor('/physics/acpr', true);
model.study('std2').feature('stat').setSolveFor('/multiphysics/te1', true);
model.study('std2').feature('stat').setSolveFor('/multiphysics/atb1', true);
model.study('std2').feature('stat').setSolveFor('/multiphysics/tatb1', true);
model.study('std2').create('frlin', 'Frequencylinearized');
model.study('std2').feature('frlin').set('outputmap', {});
model.study('std2').feature('frlin').set('ngenAUX', '1');
model.study('std2').feature('frlin').set('goalngenAUX', '1');
model.study('std2').feature('frlin').set('ngenAUX', '1');
model.study('std2').feature('frlin').set('goalngenAUX', '1');
model.study('std2').feature('frlin').setSolveFor('/physics/solid', true);
model.study('std2').feature('frlin').setSolveFor('/physics/ht', true);
model.study('std2').feature('frlin').setSolveFor('/physics/ta', true);
model.study('std2').feature('frlin').setSolveFor('/physics/acpr', true);
model.study('std2').feature('frlin').setSolveFor('/multiphysics/te1', true);
model.study('std2').feature('frlin').setSolveFor('/multiphysics/atb1', true);
model.study('std2').feature('frlin').setSolveFor('/multiphysics/tatb1', true);
model.study('std2').label('Study 2 - Frequency Response: Full Model (ta-ht-solid)');
model.study('std2').setGenPlots(false);
model.study('std2').feature('stat').set('useparam', true);
model.study('std2').feature('stat').setIndex('pname', 'sigma_pre', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 'Pa', 0);
model.study('std2').feature('stat').setIndex('pname', 'sigma_pre', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 'Pa', 0);
model.study('std2').feature('stat').setIndex('plistarr', 'range(1,1,3)', 0);
model.study('std2').feature('stat').setIndex('punit', 'GPa', 0);

model.sol.create('sol3');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([5 6]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([5 6]);

model.sol('sol3').study('std2');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std2');
model.sol('sol3').feature('st1').set('studystep', 'stat');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').feature('comp1_spatial_disp').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_spatial_disp').set('scaleval', '9.636301307712549E-6');
model.sol('sol3').feature('v1').set('control', 'stat');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').create('p1', 'Parametric');
model.sol('sol3').feature('s1').feature.remove('pDef');
model.sol('sol3').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol3').feature('s1').set('control', 'stat');
model.sol('sol3').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('s1').create('se1', 'Segregated');
model.sol('sol3').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol3').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_T'});
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('subdamp', 0.7);
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('subjtech', 'onevery');
model.sol('sol3').feature('s1').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s1').feature('d1').label('Direct, heat transfer variables ht (te1)');
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol3').feature('s1').feature('se1').feature('ss1').label('Temperature');
model.sol('sol3').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol3').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_u'});
model.sol('sol3').feature('s1').create('d2', 'Direct');
model.sol('sol3').feature('s1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('d2').set('pivotperturb', 1.0E-9);
model.sol('sol3').feature('s1').feature('d2').set('nliniterrefine', true);
model.sol('sol3').feature('s1').feature('d2').label('Suggested Direct Solver solid (te1)');
model.sol('sol3').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol3').feature('s1').feature('se1').feature('ss2').label('Solid Mechanics');
model.sol('sol3').feature('s1').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol3').feature('s1').feature('se1').feature('ss3').set('segvar', {'comp1_spatial_disp'});
model.sol('sol3').feature('s1').feature('se1').feature('ss3').set('linsolver', 'dDef');
model.sol('sol3').feature('s1').feature('se1').feature('ss3').label('Spatial Frame Variables');
model.sol('sol3').feature('s1').feature('se1').set('segtermonres', 'off');
model.sol('sol3').feature('s1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol3').feature('s1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.T 0 ');
model.sol('sol3').feature('s1').create('i1', 'Iterative');
model.sol('sol3').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol3').feature('s1').feature('i1').set('prefuntype', 'right');
model.sol('sol3').feature('s1').feature('i1').set('rhob', 40);
model.sol('sol3').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol3').feature('s1').feature('i1').label('Suggested Iterative Solver solid (te1)');
model.sol('sol3').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 1);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 1);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').create('mg1', 'Multigrid');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('prefun', 'saamg');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('usesmooth', false);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('iter', 2);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('mglevels', 2);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('maxcoarsedof', 10000);
model.sol('sol3').feature('s1').create('i2', 'Iterative');
model.sol('sol3').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol3').feature('s1').feature('i2').set('prefuntype', 'left');
model.sol('sol3').feature('s1').feature('i2').set('itrestart', 50);
model.sol('sol3').feature('s1').feature('i2').set('rhob', 20);
model.sol('sol3').feature('s1').feature('i2').set('maxlinit', 10000);
model.sol('sol3').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol3').feature('s1').feature('i2').label('AMG, heat transfer variables ht (te1)');
model.sol('sol3').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol('sol3').create('su1', 'StoreSolution');
model.sol('sol3').create('st2', 'StudyStep');
model.sol('sol3').feature('st2').set('study', 'std2');
model.sol('sol3').feature('st2').set('studystep', 'frlin');
model.sol('sol3').create('v2', 'Variables');
model.sol('sol3').feature('v2').feature('comp1_spatial_disp').set('scalemethod', 'manual');
model.sol('sol3').feature('v2').feature('comp1_spatial_disp').set('scaleval', '9.636301307712549E-6');
model.sol('sol3').feature('v2').set('initmethod', 'sol');
model.sol('sol3').feature('v2').set('initsol', 'sol3');
model.sol('sol3').feature('v2').set('initsoluse', 'sol4');
model.sol('sol3').feature('v2').set('notsolmethod', 'sol');
model.sol('sol3').feature('v2').set('notsol', 'sol3');
model.sol('sol3').feature('v2').set('control', 'frlin');
model.sol('sol3').create('s2', 'Stationary');
model.sol('sol3').feature('s2').set('stol', 1.0E-6);
model.sol('sol3').feature('s2').create('p1', 'Parametric');
model.sol('sol3').feature('s2').feature.remove('pDef');
model.sol('sol3').feature('s2').feature('p1').set('pname', {'freq'});
model.sol('sol3').feature('s2').feature('p1').set('plistarr', {''});
model.sol('sol3').feature('s2').feature('p1').set('punit', {'Hz'});
model.sol('sol3').feature('s2').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol3').feature('s2').feature('p1').set('preusesol', 'no');
model.sol('sol3').feature('s2').feature('p1').set('pdistrib', 'off');
model.sol('sol3').feature('s2').feature('p1').set('plot', 'off');
model.sol('sol3').feature('s2').feature('p1').set('plotgroup', 'Default');
model.sol('sol3').feature('s2').feature('p1').set('probesel', 'all');
model.sol('sol3').feature('s2').feature('p1').set('probes', {});
model.sol('sol3').feature('s2').feature('p1').set('control', 'frlin');
model.sol('sol3').feature('s2').set('nonlin', 'linper');
model.sol('sol3').feature('s2').set('storelinpoint', true);
model.sol('sol3').feature('s2').set('linpsolnum', 'all');
model.sol('sol3').feature('s2').set('control', 'frlin');
model.sol('sol3').feature('s2').set('linpmethod', 'sol');
model.sol('sol3').feature('s2').set('linpsol', 'sol3');
model.sol('sol3').feature('s2').set('linpsoluse', 'sol4');
model.sol('sol3').feature('s2').set('control', 'frlin');
model.sol('sol3').feature('s2').feature('aDef').set('complexfun', true);
model.sol('sol3').feature('s2').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('s2').feature('aDef').set('matherr', true);
model.sol('sol3').feature('s2').feature('aDef').set('blocksizeactive', false);
model.sol('sol3').feature('s2').create('seDef', 'Segregated');
model.sol('sol3').feature('s2').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol3').feature('s2').feature('fc1').set('maxiter', 50);
model.sol('sol3').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol3').feature('s2').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol3').feature('s2').create('d1', 'Direct');
model.sol('sol3').feature('s2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s2').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s2').feature('d1').label('Suggested Direct Solver (tatb1_atb1) (Merged)');
model.sol('sol3').feature('s2').create('i1', 'Iterative');
model.sol('sol3').feature('s2').feature('i1').label('Suggested Iterative Solver (GMRES with Direct Precon.) (tatb1_atb1)');
model.sol('sol3').feature('s2').feature('i1').create('dp1', 'DirectPreconditioner');
model.sol('sol3').feature('s2').feature('i1').feature('dp1').set('hybridization', 'multi');
model.sol('sol3').feature('s2').feature('i1').feature('dp1').set('hybridvar', {'comp1_p2' 'comp1_u2' 'comp1_p'});
model.sol('sol3').feature('s2').feature('i1').feature('dp1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s2').feature('i1').feature('dp1').set('pivotperturb', '1.0E-13');
model.sol('sol3').feature('s2').feature('i1').create('dp2', 'DirectPreconditioner');
model.sol('sol3').feature('s2').feature('i1').feature('dp2').set('hybridization', 'multi');
model.sol('sol3').feature('s2').feature('i1').feature('dp2').set('hybridvar', {'comp1_T2' 'comp1_T'});
model.sol('sol3').feature('s2').feature('i1').feature('dp2').set('linsolver', 'pardiso');
model.sol('sol3').feature('s2').feature('i1').feature('dp2').set('pivotperturb', '1.0E-13');
model.sol('sol3').feature('s2').feature('i1').create('dp3', 'DirectPreconditioner');
model.sol('sol3').feature('s2').feature('i1').feature('dp3').set('hybridization', 'multi');
model.sol('sol3').feature('s2').feature('i1').feature('dp3').set('hybridvar', {'comp1_u'});
model.sol('sol3').feature('s2').feature('i1').feature('dp3').set('linsolver', 'pardiso');
model.sol('sol3').feature('s2').feature('i1').feature('dp3').set('pivotperturb', '1.0E-9');
model.sol('sol3').feature('s2').create('i2', 'Iterative');
model.sol('sol3').feature('s2').feature('i2').label('Suggested Iterative Solver (GMRES with DD) (tatb1_atb1)');
model.sol('sol3').feature('s2').feature('i2').create('dd1', 'DomainDecomposition');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').set('hybridization', 'multi');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').set('hybridvar', {'comp1_u2' 'comp1_p' 'comp1_T2' 'comp1_T'});
model.sol('sol3').feature('s2').feature('i2').feature('dd1').set('prefun', 'ddhyb');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').set('domdofmax', 200000);
model.sol('sol3').feature('s2').feature('i2').feature('dd1').set('ddolhandling', 'ddrestricted');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').set('userac', false);
model.sol('sol3').feature('s2').feature('i2').feature('dd1').set('usecoarse', 'aggregation');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').feature('ds').create('dp1', 'DirectPreconditioner');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').feature('ds').feature('dp1').set('hybridization', 'multi');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').feature('ds').feature('dp1').set('hybridvar', {'comp1_u2' 'comp1_p'});
model.sol('sol3').feature('s2').feature('i2').feature('dd1').feature('ds').feature('dp1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').feature('ds').feature('dp1').set('pivotperturb', '1.0E-13');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').feature('ds').create('dp2', 'DirectPreconditioner');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').feature('ds').feature('dp2').set('hybridization', 'multi');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').feature('ds').feature('dp2').set('hybridvar', {'comp1_T2' 'comp1_T'});
model.sol('sol3').feature('s2').feature('i2').feature('dd1').feature('ds').feature('dp2').set('linsolver', 'pardiso');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').feature('ds').feature('dp2').set('pivotperturb', '1.0E-13');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').feature('cs').create('d1', 'Direct');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s2').feature('i2').create('dp1', 'DirectPreconditioner');
model.sol('sol3').feature('s2').feature('i2').feature('dp1').set('hybridization', 'multi');
model.sol('sol3').feature('s2').feature('i2').feature('dp1').set('hybridvar', {'comp1_p2' 'comp1_u'});
model.sol('sol3').feature('s2').feature('i2').feature('dp1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s2').feature('i2').feature('dp1').set('pivotperturb', '1.0E-9');
model.sol('sol3').feature('s2').feature('fc1').set('linsolver', 'd1');
model.sol('sol3').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol3').feature('s2').feature('fc1').set('maxiter', 50);
model.sol('sol3').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol3').feature('s2').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol3').feature('s2').feature.remove('fcDef');
model.sol('sol3').feature('s2').feature.remove('seDef');
model.sol('sol3').feature('v2').set('notsolnum', 'auto');
model.sol('sol3').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol3').attach('std2');
model.sol('sol3').runFromTo('st1', 'su1');

model.study('std2').feature('frlin').set('plist', 'range(50,50,600) range(13150,25,13500)');
model.study('std2').feature('frlin').set('uselinpsol', true);
model.study('std2').feature('frlin').set('linpsolnum', 3);
model.study('std2').feature('frlin').setEntry('activate', 'frame:spatial1', false);
model.study('std2').feature('frlin').set('usesol', true);
model.study('std2').feature('frlin').set('notsoluse', 'sol4');
model.study('std2').feature('frlin').set('notsolnum', 3);

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([5 6]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([5 6]);

model.sol('sol3').study('std2');
model.sol('sol4').copySolution('sol5');

model.study('std2').feature('frlin').set('notlistsolnum', 1);
model.study('std2').feature('frlin').set('notsolnum', '3');
model.study('std2').feature('frlin').set('listsolnum', 1);
model.study('std2').feature('frlin').set('solnum', 'auto');
model.study('std2').feature('frlin').set('linplistsolnum', {'1'});
model.study('std2').feature('frlin').set('linpsolnum', '3');
model.study('std2').feature('frlin').set('notlistsolnum', 1);
model.study('std2').feature('frlin').set('notsolnum', '3');
model.study('std2').feature('frlin').set('listsolnum', 1);
model.study('std2').feature('frlin').set('solnum', 'auto');
model.study('std2').feature('frlin').set('linplistsolnum', {'1'});
model.study('std2').feature('frlin').set('linpsolnum', '3');
model.study('std2').feature('frlin').set('notlistsolnum', 1);
model.study('std2').feature('frlin').set('notsolnum', '3');
model.study('std2').feature('frlin').set('listsolnum', 1);
model.study('std2').feature('frlin').set('solnum', 'auto');
model.study('std2').feature('frlin').set('linplistsolnum', {'1'});
model.study('std2').feature('frlin').set('linpsolnum', '3');

model.result.dataset('dset4').set('solution', 'none');

model.sol('sol3').feature.remove('s2');
model.sol('sol3').feature.remove('v2');
model.sol('sol3').feature.remove('st2');
model.sol('sol3').feature.remove('su1');
model.sol('sol3').feature.remove('s1');
model.sol('sol3').feature.remove('v1');
model.sol('sol3').feature.remove('st1');
model.sol('sol5').copySolution('sol4');
model.sol.remove('sol5');
model.sol('sol4').label('Solution Store 2');

model.result.dataset.remove('dset6');

model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std2');
model.sol('sol3').feature('st1').set('studystep', 'stat');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').feature('comp1_spatial_disp').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_spatial_disp').set('scaleval', '9.636301307712549E-6');
model.sol('sol3').feature('v1').set('control', 'stat');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').create('p1', 'Parametric');
model.sol('sol3').feature('s1').feature.remove('pDef');
model.sol('sol3').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol3').feature('s1').set('control', 'stat');
model.sol('sol3').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('s1').create('se1', 'Segregated');
model.sol('sol3').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol3').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_T'});
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('subdamp', 0.7);
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('subjtech', 'onevery');
model.sol('sol3').feature('s1').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s1').feature('d1').label('Direct, heat transfer variables ht (te1)');
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol3').feature('s1').feature('se1').feature('ss1').label('Temperature');
model.sol('sol3').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol3').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_u'});
model.sol('sol3').feature('s1').create('d2', 'Direct');
model.sol('sol3').feature('s1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('d2').set('pivotperturb', 1.0E-9);
model.sol('sol3').feature('s1').feature('d2').set('nliniterrefine', true);
model.sol('sol3').feature('s1').feature('d2').label('Suggested Direct Solver solid (te1)');
model.sol('sol3').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol3').feature('s1').feature('se1').feature('ss2').label('Solid Mechanics');
model.sol('sol3').feature('s1').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol3').feature('s1').feature('se1').feature('ss3').set('segvar', {'comp1_spatial_disp'});
model.sol('sol3').feature('s1').feature('se1').feature('ss3').set('linsolver', 'dDef');
model.sol('sol3').feature('s1').feature('se1').feature('ss3').label('Spatial Frame Variables');
model.sol('sol3').feature('s1').feature('se1').set('segtermonres', 'off');
model.sol('sol3').feature('s1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol3').feature('s1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.T 0 ');
model.sol('sol3').feature('s1').create('i1', 'Iterative');
model.sol('sol3').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol3').feature('s1').feature('i1').set('prefuntype', 'right');
model.sol('sol3').feature('s1').feature('i1').set('rhob', 40);
model.sol('sol3').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol3').feature('s1').feature('i1').label('Suggested Iterative Solver solid (te1)');
model.sol('sol3').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 1);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 1);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').create('mg1', 'Multigrid');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('prefun', 'saamg');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('usesmooth', false);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('iter', 2);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('mglevels', 2);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('maxcoarsedof', 10000);
model.sol('sol3').feature('s1').create('i2', 'Iterative');
model.sol('sol3').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol3').feature('s1').feature('i2').set('prefuntype', 'left');
model.sol('sol3').feature('s1').feature('i2').set('itrestart', 50);
model.sol('sol3').feature('s1').feature('i2').set('rhob', 20);
model.sol('sol3').feature('s1').feature('i2').set('maxlinit', 10000);
model.sol('sol3').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol3').feature('s1').feature('i2').label('AMG, heat transfer variables ht (te1)');
model.sol('sol3').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol('sol3').create('su1', 'StoreSolution');
model.sol('sol3').feature('su1').set('sol', 'sol4');
model.sol('sol3').feature('su1').label('Solution Store 2');
model.sol('sol3').create('st2', 'StudyStep');
model.sol('sol3').feature('st2').set('study', 'std2');
model.sol('sol3').feature('st2').set('studystep', 'frlin');

model.study('std2').feature('frlin').set('notsoluse', 'sol4');
model.study('std2').feature('frlin').set('initsoluse', 'sol4');
model.study('std2').feature('frlin').set('linpsoluse', 'sol4');
model.study('std2').feature('frlin').set('notsolnum', '3');
model.study('std2').feature('frlin').set('linpsolnum', '3');

model.sol('sol3').create('v2', 'Variables');
model.sol('sol3').feature('v2').feature('comp1_spatial_disp').set('scalemethod', 'manual');
model.sol('sol3').feature('v2').feature('comp1_spatial_disp').set('scaleval', '9.636301307712549E-6');
model.sol('sol3').feature('v2').set('initmethod', 'sol');
model.sol('sol3').feature('v2').set('initsol', 'sol3');
model.sol('sol3').feature('v2').set('initsoluse', 'sol4');
model.sol('sol3').feature('v2').set('notsolmethod', 'sol');
model.sol('sol3').feature('v2').set('notsol', 'sol3');
model.sol('sol3').feature('v2').set('control', 'frlin');
model.sol('sol3').create('s2', 'Stationary');
model.sol('sol3').feature('s2').set('stol', 0.001);
model.sol('sol3').feature('s2').create('p1', 'Parametric');
model.sol('sol3').feature('s2').feature.remove('pDef');
model.sol('sol3').feature('s2').feature('p1').set('pname', {'freq'});
model.sol('sol3').feature('s2').feature('p1').set('plistarr', {'range(50,50,600) range(13150,25,13500)'});
model.sol('sol3').feature('s2').feature('p1').set('punit', {'Hz'});
model.sol('sol3').feature('s2').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol3').feature('s2').feature('p1').set('preusesol', 'no');
model.sol('sol3').feature('s2').feature('p1').set('pdistrib', 'off');
model.sol('sol3').feature('s2').feature('p1').set('plot', 'off');
model.sol('sol3').feature('s2').feature('p1').set('plotgroup', 'Default');
model.sol('sol3').feature('s2').feature('p1').set('probesel', 'all');
model.sol('sol3').feature('s2').feature('p1').set('probes', {});
model.sol('sol3').feature('s2').feature('p1').set('control', 'frlin');
model.sol('sol3').feature('s2').set('nonlin', 'linper');
model.sol('sol3').feature('s2').set('storelinpoint', true);
model.sol('sol3').feature('s2').set('linpsolnum', 'all');
model.sol('sol3').feature('s2').set('control', 'frlin');
model.sol('sol3').feature('s2').set('linpmethod', 'sol');
model.sol('sol3').feature('s2').set('linpsol', 'sol3');
model.sol('sol3').feature('s2').set('linpsoluse', 'sol4');
model.sol('sol3').feature('s2').set('control', 'frlin');
model.sol('sol3').feature('s2').feature('aDef').set('complexfun', true);
model.sol('sol3').feature('s2').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('s2').feature('aDef').set('matherr', true);
model.sol('sol3').feature('s2').feature('aDef').set('blocksizeactive', false);
model.sol('sol3').feature('s2').create('seDef', 'Segregated');
model.sol('sol3').feature('s2').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol3').feature('s2').feature('fc1').set('maxiter', 50);
model.sol('sol3').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol3').feature('s2').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol3').feature('s2').create('d1', 'Direct');
model.sol('sol3').feature('s2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s2').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s2').feature('d1').label('Suggested Direct Solver (tatb1_atb1) (Merged)');
model.sol('sol3').feature('s2').create('i1', 'Iterative');
model.sol('sol3').feature('s2').feature('i1').label('Suggested Iterative Solver (GMRES with Direct Precon.) (tatb1_atb1)');
model.sol('sol3').feature('s2').feature('i1').create('dp1', 'DirectPreconditioner');
model.sol('sol3').feature('s2').feature('i1').feature('dp1').set('hybridization', 'multi');
model.sol('sol3').feature('s2').feature('i1').feature('dp1').set('hybridvar', {'comp1_p2' 'comp1_u2' 'comp1_p'});
model.sol('sol3').feature('s2').feature('i1').feature('dp1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s2').feature('i1').feature('dp1').set('pivotperturb', '1.0E-13');
model.sol('sol3').feature('s2').feature('i1').create('dp2', 'DirectPreconditioner');
model.sol('sol3').feature('s2').feature('i1').feature('dp2').set('hybridization', 'multi');
model.sol('sol3').feature('s2').feature('i1').feature('dp2').set('hybridvar', {'comp1_T2' 'comp1_T'});
model.sol('sol3').feature('s2').feature('i1').feature('dp2').set('linsolver', 'pardiso');
model.sol('sol3').feature('s2').feature('i1').feature('dp2').set('pivotperturb', '1.0E-13');
model.sol('sol3').feature('s2').feature('i1').create('dp3', 'DirectPreconditioner');
model.sol('sol3').feature('s2').feature('i1').feature('dp3').set('hybridization', 'multi');
model.sol('sol3').feature('s2').feature('i1').feature('dp3').set('hybridvar', {'comp1_u'});
model.sol('sol3').feature('s2').feature('i1').feature('dp3').set('linsolver', 'pardiso');
model.sol('sol3').feature('s2').feature('i1').feature('dp3').set('pivotperturb', '1.0E-9');
model.sol('sol3').feature('s2').create('i2', 'Iterative');
model.sol('sol3').feature('s2').feature('i2').label('Suggested Iterative Solver (GMRES with DD) (tatb1_atb1)');
model.sol('sol3').feature('s2').feature('i2').create('dd1', 'DomainDecomposition');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').set('hybridization', 'multi');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').set('hybridvar', {'comp1_u2' 'comp1_p' 'comp1_T2' 'comp1_T'});
model.sol('sol3').feature('s2').feature('i2').feature('dd1').set('prefun', 'ddhyb');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').set('domdofmax', 200000);
model.sol('sol3').feature('s2').feature('i2').feature('dd1').set('ddolhandling', 'ddrestricted');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').set('userac', false);
model.sol('sol3').feature('s2').feature('i2').feature('dd1').set('usecoarse', 'aggregation');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').feature('ds').create('dp1', 'DirectPreconditioner');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').feature('ds').feature('dp1').set('hybridization', 'multi');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').feature('ds').feature('dp1').set('hybridvar', {'comp1_u2' 'comp1_p'});
model.sol('sol3').feature('s2').feature('i2').feature('dd1').feature('ds').feature('dp1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').feature('ds').feature('dp1').set('pivotperturb', '1.0E-13');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').feature('ds').create('dp2', 'DirectPreconditioner');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').feature('ds').feature('dp2').set('hybridization', 'multi');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').feature('ds').feature('dp2').set('hybridvar', {'comp1_T2' 'comp1_T'});
model.sol('sol3').feature('s2').feature('i2').feature('dd1').feature('ds').feature('dp2').set('linsolver', 'pardiso');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').feature('ds').feature('dp2').set('pivotperturb', '1.0E-13');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').feature('cs').create('d1', 'Direct');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s2').feature('i2').feature('dd1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s2').feature('i2').create('dp1', 'DirectPreconditioner');
model.sol('sol3').feature('s2').feature('i2').feature('dp1').set('hybridization', 'multi');
model.sol('sol3').feature('s2').feature('i2').feature('dp1').set('hybridvar', {'comp1_p2' 'comp1_u'});
model.sol('sol3').feature('s2').feature('i2').feature('dp1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s2').feature('i2').feature('dp1').set('pivotperturb', '1.0E-9');
model.sol('sol3').feature('s2').feature('fc1').set('linsolver', 'd1');
model.sol('sol3').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol3').feature('s2').feature('fc1').set('maxiter', 50);
model.sol('sol3').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol3').feature('s2').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol3').feature('s2').feature.remove('fcDef');
model.sol('sol3').feature('s2').feature.remove('seDef');

model.result.dataset('dset4').set('solution', 'sol4');

model.sol('sol3').attach('std2');
model.sol('sol3').runFromTo('st2', 's2');

model.study.create('std3');
model.study('std3').create('stat', 'Stationary');
model.study('std3').feature('stat').set('outputmap', {});
model.study('std3').feature('stat').set('ngenAUX', '1');
model.study('std3').feature('stat').set('goalngenAUX', '1');
model.study('std3').feature('stat').set('ngenAUX', '1');
model.study('std3').feature('stat').set('goalngenAUX', '1');
model.study('std3').feature('stat').setSolveFor('/physics/solid', true);
model.study('std3').feature('stat').setSolveFor('/physics/ht', true);
model.study('std3').feature('stat').setSolveFor('/physics/ta', true);
model.study('std3').feature('stat').setSolveFor('/physics/acpr', true);
model.study('std3').feature('stat').setSolveFor('/multiphysics/te1', true);
model.study('std3').feature('stat').setSolveFor('/multiphysics/atb1', true);
model.study('std3').feature('stat').setSolveFor('/multiphysics/tatb1', true);
model.study('std3').create('frlin', 'Frequencylinearized');
model.study('std3').feature('frlin').set('outputmap', {});
model.study('std3').feature('frlin').set('ngenAUX', '1');
model.study('std3').feature('frlin').set('goalngenAUX', '1');
model.study('std3').feature('frlin').set('ngenAUX', '1');
model.study('std3').feature('frlin').set('goalngenAUX', '1');
model.study('std3').feature('frlin').setSolveFor('/physics/solid', true);
model.study('std3').feature('frlin').setSolveFor('/physics/ht', true);
model.study('std3').feature('frlin').setSolveFor('/physics/ta', true);
model.study('std3').feature('frlin').setSolveFor('/physics/acpr', true);
model.study('std3').feature('frlin').setSolveFor('/multiphysics/te1', true);
model.study('std3').feature('frlin').setSolveFor('/multiphysics/atb1', true);
model.study('std3').feature('frlin').setSolveFor('/multiphysics/tatb1', true);
model.study('std3').label('Study 3 - Frequency Response Solid Losses (ht-solid)');
model.study('std3').setGenPlots(false);
model.study('std3').feature('stat').setEntry('activate', 'frame:spatial1', false);
model.study('std3').feature('stat').set('useparam', true);
model.study('std3').feature('stat').setIndex('pname', 'sigma_pre', 0);
model.study('std3').feature('stat').setIndex('plistarr', '', 0);
model.study('std3').feature('stat').setIndex('punit', 'Pa', 0);
model.study('std3').feature('stat').setIndex('pname', 'sigma_pre', 0);
model.study('std3').feature('stat').setIndex('plistarr', '', 0);
model.study('std3').feature('stat').setIndex('punit', 'Pa', 0);
model.study('std3').feature('stat').setIndex('plistarr', 'range(1,1,3)', 0);
model.study('std3').feature('stat').setIndex('punit', 'GPa', 0);

model.sol.create('sol5');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([5 6]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([5 6]);

model.sol('sol5').study('std3');
model.sol('sol5').create('st1', 'StudyStep');
model.sol('sol5').feature('st1').set('study', 'std3');
model.sol('sol5').feature('st1').set('studystep', 'stat');
model.sol('sol5').create('v1', 'Variables');
model.sol('sol5').feature('v1').feature('comp1_spatial_disp').set('scalemethod', 'manual');
model.sol('sol5').feature('v1').feature('comp1_spatial_disp').set('scaleval', '9.636301307712549E-6');
model.sol('sol5').feature('v1').set('control', 'stat');
model.sol('sol5').create('s1', 'Stationary');
model.sol('sol5').feature('s1').create('p1', 'Parametric');
model.sol('sol5').feature('s1').feature.remove('pDef');
model.sol('sol5').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol5').feature('s1').set('control', 'stat');
model.sol('sol5').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol5').feature('s1').create('se1', 'Segregated');
model.sol('sol5').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol5').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol5').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_T'});
model.sol('sol5').feature('s1').feature('se1').feature('ss1').set('subdamp', 0.7);
model.sol('sol5').feature('s1').feature('se1').feature('ss1').set('subjtech', 'onevery');
model.sol('sol5').feature('s1').create('d1', 'Direct');
model.sol('sol5').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s1').feature('d1').label('Direct, heat transfer variables ht (te1)');
model.sol('sol5').feature('s1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol5').feature('s1').feature('se1').feature('ss1').label('Temperature');
model.sol('sol5').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol5').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_u'});
model.sol('sol5').feature('s1').create('d2', 'Direct');
model.sol('sol5').feature('s1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol5').feature('s1').feature('d2').set('pivotperturb', 1.0E-9);
model.sol('sol5').feature('s1').feature('d2').set('nliniterrefine', true);
model.sol('sol5').feature('s1').feature('d2').label('Suggested Direct Solver solid (te1)');
model.sol('sol5').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol5').feature('s1').feature('se1').feature('ss2').label('Solid Mechanics');
model.sol('sol5').feature('s1').feature('se1').set('segtermonres', 'off');
model.sol('sol5').feature('s1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol5').feature('s1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.T 0 ');
model.sol('sol5').feature('s1').create('i1', 'Iterative');
model.sol('sol5').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol5').feature('s1').feature('i1').set('prefuntype', 'right');
model.sol('sol5').feature('s1').feature('i1').set('rhob', 40);
model.sol('sol5').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol5').feature('s1').feature('i1').label('Suggested Iterative Solver solid (te1)');
model.sol('sol5').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 1);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 1);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('cs').create('mg1', 'Multigrid');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('prefun', 'saamg');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('usesmooth', false);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('iter', 2);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('mglevels', 2);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('maxcoarsedof', 10000);
model.sol('sol5').feature('s1').create('i2', 'Iterative');
model.sol('sol5').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol5').feature('s1').feature('i2').set('prefuntype', 'left');
model.sol('sol5').feature('s1').feature('i2').set('itrestart', 50);
model.sol('sol5').feature('s1').feature('i2').set('rhob', 20);
model.sol('sol5').feature('s1').feature('i2').set('maxlinit', 10000);
model.sol('sol5').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol5').feature('s1').feature('i2').label('AMG, heat transfer variables ht (te1)');
model.sol('sol5').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol5').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol5').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol5').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s1').feature.remove('fcDef');
model.sol('sol5').create('su1', 'StoreSolution');
model.sol('sol5').create('st2', 'StudyStep');
model.sol('sol5').feature('st2').set('study', 'std3');
model.sol('sol5').feature('st2').set('studystep', 'frlin');
model.sol('sol5').create('v2', 'Variables');
model.sol('sol5').feature('v2').feature('comp1_spatial_disp').set('scalemethod', 'manual');
model.sol('sol5').feature('v2').feature('comp1_spatial_disp').set('scaleval', '9.636301307712549E-6');
model.sol('sol5').feature('v2').set('initmethod', 'sol');
model.sol('sol5').feature('v2').set('initsol', 'sol5');
model.sol('sol5').feature('v2').set('initsoluse', 'sol6');
model.sol('sol5').feature('v2').set('notsolmethod', 'sol');
model.sol('sol5').feature('v2').set('notsol', 'sol5');
model.sol('sol5').feature('v2').set('control', 'frlin');
model.sol('sol5').create('s2', 'Stationary');
model.sol('sol5').feature('s2').set('stol', 1.0E-6);
model.sol('sol5').feature('s2').create('p1', 'Parametric');
model.sol('sol5').feature('s2').feature.remove('pDef');
model.sol('sol5').feature('s2').feature('p1').set('pname', {'freq'});
model.sol('sol5').feature('s2').feature('p1').set('plistarr', {''});
model.sol('sol5').feature('s2').feature('p1').set('punit', {'Hz'});
model.sol('sol5').feature('s2').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol5').feature('s2').feature('p1').set('preusesol', 'no');
model.sol('sol5').feature('s2').feature('p1').set('pdistrib', 'off');
model.sol('sol5').feature('s2').feature('p1').set('plot', 'off');
model.sol('sol5').feature('s2').feature('p1').set('plotgroup', 'Default');
model.sol('sol5').feature('s2').feature('p1').set('probesel', 'all');
model.sol('sol5').feature('s2').feature('p1').set('probes', {});
model.sol('sol5').feature('s2').feature('p1').set('control', 'frlin');
model.sol('sol5').feature('s2').set('nonlin', 'linper');
model.sol('sol5').feature('s2').set('storelinpoint', true);
model.sol('sol5').feature('s2').set('linpsolnum', 'all');
model.sol('sol5').feature('s2').set('control', 'frlin');
model.sol('sol5').feature('s2').set('linpmethod', 'sol');
model.sol('sol5').feature('s2').set('linpsol', 'sol5');
model.sol('sol5').feature('s2').set('linpsoluse', 'sol6');
model.sol('sol5').feature('s2').set('control', 'frlin');
model.sol('sol5').feature('s2').feature('aDef').set('complexfun', true);
model.sol('sol5').feature('s2').feature('aDef').set('cachepattern', true);
model.sol('sol5').feature('s2').feature('aDef').set('matherr', true);
model.sol('sol5').feature('s2').feature('aDef').set('blocksizeactive', false);
model.sol('sol5').feature('s2').create('seDef', 'Segregated');
model.sol('sol5').feature('s2').create('fc1', 'FullyCoupled');
model.sol('sol5').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol5').feature('s2').feature('fc1').set('maxiter', 50);
model.sol('sol5').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol5').feature('s2').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol5').feature('s2').create('d1', 'Direct');
model.sol('sol5').feature('s2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s2').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s2').feature('d1').label('Suggested Direct Solver (tatb1_atb1) (Merged)');
model.sol('sol5').feature('s2').create('i1', 'Iterative');
model.sol('sol5').feature('s2').feature('i1').label('Suggested Iterative Solver (GMRES with Direct Precon.) (tatb1_atb1)');
model.sol('sol5').feature('s2').feature('i1').create('dp1', 'DirectPreconditioner');
model.sol('sol5').feature('s2').feature('i1').feature('dp1').set('hybridization', 'multi');
model.sol('sol5').feature('s2').feature('i1').feature('dp1').set('hybridvar', {'comp1_p2' 'comp1_u2' 'comp1_p'});
model.sol('sol5').feature('s2').feature('i1').feature('dp1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s2').feature('i1').feature('dp1').set('pivotperturb', '1.0E-13');
model.sol('sol5').feature('s2').feature('i1').create('dp2', 'DirectPreconditioner');
model.sol('sol5').feature('s2').feature('i1').feature('dp2').set('hybridization', 'multi');
model.sol('sol5').feature('s2').feature('i1').feature('dp2').set('hybridvar', {'comp1_T2' 'comp1_T'});
model.sol('sol5').feature('s2').feature('i1').feature('dp2').set('linsolver', 'pardiso');
model.sol('sol5').feature('s2').feature('i1').feature('dp2').set('pivotperturb', '1.0E-13');
model.sol('sol5').feature('s2').feature('i1').create('dp3', 'DirectPreconditioner');
model.sol('sol5').feature('s2').feature('i1').feature('dp3').set('hybridization', 'multi');
model.sol('sol5').feature('s2').feature('i1').feature('dp3').set('hybridvar', {'comp1_u'});
model.sol('sol5').feature('s2').feature('i1').feature('dp3').set('linsolver', 'pardiso');
model.sol('sol5').feature('s2').feature('i1').feature('dp3').set('pivotperturb', '1.0E-9');
model.sol('sol5').feature('s2').create('i2', 'Iterative');
model.sol('sol5').feature('s2').feature('i2').label('Suggested Iterative Solver (GMRES with DD) (tatb1_atb1)');
model.sol('sol5').feature('s2').feature('i2').create('dd1', 'DomainDecomposition');
model.sol('sol5').feature('s2').feature('i2').feature('dd1').set('hybridization', 'multi');
model.sol('sol5').feature('s2').feature('i2').feature('dd1').set('hybridvar', {'comp1_u2' 'comp1_p' 'comp1_T2' 'comp1_T'});
model.sol('sol5').feature('s2').feature('i2').feature('dd1').set('prefun', 'ddhyb');
model.sol('sol5').feature('s2').feature('i2').feature('dd1').set('domdofmax', 200000);
model.sol('sol5').feature('s2').feature('i2').feature('dd1').set('ddolhandling', 'ddrestricted');
model.sol('sol5').feature('s2').feature('i2').feature('dd1').set('userac', false);
model.sol('sol5').feature('s2').feature('i2').feature('dd1').set('usecoarse', 'aggregation');
model.sol('sol5').feature('s2').feature('i2').feature('dd1').feature('ds').create('dp1', 'DirectPreconditioner');
model.sol('sol5').feature('s2').feature('i2').feature('dd1').feature('ds').feature('dp1').set('hybridization', 'multi');
model.sol('sol5').feature('s2').feature('i2').feature('dd1').feature('ds').feature('dp1').set('hybridvar', {'comp1_u2' 'comp1_p'});
model.sol('sol5').feature('s2').feature('i2').feature('dd1').feature('ds').feature('dp1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s2').feature('i2').feature('dd1').feature('ds').feature('dp1').set('pivotperturb', '1.0E-13');
model.sol('sol5').feature('s2').feature('i2').feature('dd1').feature('ds').create('dp2', 'DirectPreconditioner');
model.sol('sol5').feature('s2').feature('i2').feature('dd1').feature('ds').feature('dp2').set('hybridization', 'multi');
model.sol('sol5').feature('s2').feature('i2').feature('dd1').feature('ds').feature('dp2').set('hybridvar', {'comp1_T2' 'comp1_T'});
model.sol('sol5').feature('s2').feature('i2').feature('dd1').feature('ds').feature('dp2').set('linsolver', 'pardiso');
model.sol('sol5').feature('s2').feature('i2').feature('dd1').feature('ds').feature('dp2').set('pivotperturb', '1.0E-13');
model.sol('sol5').feature('s2').feature('i2').feature('dd1').feature('cs').create('d1', 'Direct');
model.sol('sol5').feature('s2').feature('i2').feature('dd1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s2').feature('i2').feature('dd1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s2').feature('i2').create('dp1', 'DirectPreconditioner');
model.sol('sol5').feature('s2').feature('i2').feature('dp1').set('hybridization', 'multi');
model.sol('sol5').feature('s2').feature('i2').feature('dp1').set('hybridvar', {'comp1_p2' 'comp1_u'});
model.sol('sol5').feature('s2').feature('i2').feature('dp1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s2').feature('i2').feature('dp1').set('pivotperturb', '1.0E-9');
model.sol('sol5').feature('s2').feature('fc1').set('linsolver', 'd1');
model.sol('sol5').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol5').feature('s2').feature('fc1').set('maxiter', 50);
model.sol('sol5').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol5').feature('s2').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol5').feature('s2').feature.remove('fcDef');
model.sol('sol5').feature('s2').feature.remove('seDef');
model.sol('sol5').feature('v2').set('notsolnum', 'auto');
model.sol('sol5').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol5').attach('std3');
model.sol('sol5').runFromTo('st1', 'su1');

model.study('std3').feature('frlin').set('plist', 'range(50,50,600) range(13150,25,13500)');
model.study('std3').feature('frlin').set('uselinpsol', true);
model.study('std3').feature('frlin').set('linpsolnum', 3);
model.study('std3').feature('frlin').setEntry('activate', 'ta', false);
model.study('std3').feature('frlin').setEntry('activate', 'acpr', false);
model.study('std3').feature('frlin').setEntry('activate', 'frame:spatial1', false);
model.study('std3').feature('frlin').setEntry('activateCoupling', 'atb1', false);
model.study('std3').feature('frlin').setEntry('activateCoupling', 'tatb1', false);

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([5 6]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([5 6]);

model.sol('sol5').study('std3');

model.study('std3').feature('frlin').set('notsolnum', 'auto');
model.study('std3').feature('frlin').set('notsolvertype', 'solnum');
model.study('std3').feature('frlin').set('notsolnumhide', 'off');
model.study('std3').feature('frlin').set('notstudyhide', 'off');
model.study('std3').feature('frlin').set('notsolhide', 'off');

model.sol('sol6').copySolution('sol7');

model.study('std3').feature('frlin').set('notlistsolnum', 1);
model.study('std3').feature('frlin').set('notsolnum', 'auto');
model.study('std3').feature('frlin').set('listsolnum', 1);
model.study('std3').feature('frlin').set('solnum', 'auto');
model.study('std3').feature('frlin').set('linplistsolnum', {'1'});
model.study('std3').feature('frlin').set('linpsolnum', '3');
model.study('std3').feature('frlin').set('notlistsolnum', 1);
model.study('std3').feature('frlin').set('notsolnum', 'auto');
model.study('std3').feature('frlin').set('listsolnum', 1);
model.study('std3').feature('frlin').set('solnum', 'auto');
model.study('std3').feature('frlin').set('linplistsolnum', {'1'});
model.study('std3').feature('frlin').set('linpsolnum', '3');

model.result.dataset('dset6').set('solution', 'none');

model.sol('sol5').feature.remove('s2');
model.sol('sol5').feature.remove('v2');
model.sol('sol5').feature.remove('st2');
model.sol('sol5').feature.remove('su1');
model.sol('sol5').feature.remove('s1');
model.sol('sol5').feature.remove('v1');
model.sol('sol5').feature.remove('st1');
model.sol('sol7').copySolution('sol6');
model.sol.remove('sol7');
model.sol('sol6').label('Solution Store 3');

model.result.dataset.remove('dset8');

model.sol('sol5').create('st1', 'StudyStep');
model.sol('sol5').feature('st1').set('study', 'std3');
model.sol('sol5').feature('st1').set('studystep', 'stat');
model.sol('sol5').create('v1', 'Variables');
model.sol('sol5').feature('v1').feature('comp1_spatial_disp').set('scalemethod', 'manual');
model.sol('sol5').feature('v1').feature('comp1_spatial_disp').set('scaleval', '9.636301307712549E-6');
model.sol('sol5').feature('v1').set('control', 'stat');
model.sol('sol5').create('s1', 'Stationary');
model.sol('sol5').feature('s1').create('p1', 'Parametric');
model.sol('sol5').feature('s1').feature.remove('pDef');
model.sol('sol5').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol5').feature('s1').set('control', 'stat');
model.sol('sol5').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol5').feature('s1').create('se1', 'Segregated');
model.sol('sol5').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol5').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol5').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_T'});
model.sol('sol5').feature('s1').feature('se1').feature('ss1').set('subdamp', 0.7);
model.sol('sol5').feature('s1').feature('se1').feature('ss1').set('subjtech', 'onevery');
model.sol('sol5').feature('s1').create('d1', 'Direct');
model.sol('sol5').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s1').feature('d1').label('Direct, heat transfer variables ht (te1)');
model.sol('sol5').feature('s1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol5').feature('s1').feature('se1').feature('ss1').label('Temperature');
model.sol('sol5').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol5').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_u'});
model.sol('sol5').feature('s1').create('d2', 'Direct');
model.sol('sol5').feature('s1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol5').feature('s1').feature('d2').set('pivotperturb', 1.0E-9);
model.sol('sol5').feature('s1').feature('d2').set('nliniterrefine', true);
model.sol('sol5').feature('s1').feature('d2').label('Suggested Direct Solver solid (te1)');
model.sol('sol5').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol5').feature('s1').feature('se1').feature('ss2').label('Solid Mechanics');
model.sol('sol5').feature('s1').feature('se1').set('segtermonres', 'off');
model.sol('sol5').feature('s1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol5').feature('s1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.T 0 ');
model.sol('sol5').feature('s1').create('i1', 'Iterative');
model.sol('sol5').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol5').feature('s1').feature('i1').set('prefuntype', 'right');
model.sol('sol5').feature('s1').feature('i1').set('rhob', 40);
model.sol('sol5').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol5').feature('s1').feature('i1').label('Suggested Iterative Solver solid (te1)');
model.sol('sol5').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 1);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 1);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('cs').create('mg1', 'Multigrid');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('prefun', 'saamg');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('usesmooth', false);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('iter', 2);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('mglevels', 2);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('maxcoarsedof', 10000);
model.sol('sol5').feature('s1').create('i2', 'Iterative');
model.sol('sol5').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol5').feature('s1').feature('i2').set('prefuntype', 'left');
model.sol('sol5').feature('s1').feature('i2').set('itrestart', 50);
model.sol('sol5').feature('s1').feature('i2').set('rhob', 20);
model.sol('sol5').feature('s1').feature('i2').set('maxlinit', 10000);
model.sol('sol5').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol5').feature('s1').feature('i2').label('AMG, heat transfer variables ht (te1)');
model.sol('sol5').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol5').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol5').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol5').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s1').feature.remove('fcDef');
model.sol('sol5').create('su1', 'StoreSolution');
model.sol('sol5').feature('su1').set('sol', 'sol6');
model.sol('sol5').feature('su1').label('Solution Store 3');
model.sol('sol5').create('st2', 'StudyStep');
model.sol('sol5').feature('st2').set('study', 'std3');
model.sol('sol5').feature('st2').set('studystep', 'frlin');

model.study('std3').feature('frlin').set('initsoluse', 'sol6');
model.study('std3').feature('frlin').set('linpsoluse', 'sol6');
model.study('std3').feature('frlin').set('linpsolnum', '3');

model.sol('sol5').create('v2', 'Variables');
model.sol('sol5').feature('v2').feature('comp1_spatial_disp').set('scalemethod', 'manual');
model.sol('sol5').feature('v2').feature('comp1_spatial_disp').set('scaleval', '9.636301307712549E-6');
model.sol('sol5').feature('v2').set('initmethod', 'sol');
model.sol('sol5').feature('v2').set('initsol', 'sol5');
model.sol('sol5').feature('v2').set('initsoluse', 'sol6');
model.sol('sol5').feature('v2').set('notsolmethod', 'sol');
model.sol('sol5').feature('v2').set('notsol', 'sol5');
model.sol('sol5').feature('v2').set('control', 'frlin');
model.sol('sol5').create('s2', 'Stationary');
model.sol('sol5').feature('s2').create('p1', 'Parametric');
model.sol('sol5').feature('s2').feature.remove('pDef');
model.sol('sol5').feature('s2').feature('p1').set('pname', {'freq'});
model.sol('sol5').feature('s2').feature('p1').set('plistarr', {'range(50,50,600) range(13150,25,13500)'});
model.sol('sol5').feature('s2').feature('p1').set('punit', {'Hz'});
model.sol('sol5').feature('s2').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol5').feature('s2').feature('p1').set('preusesol', 'no');
model.sol('sol5').feature('s2').feature('p1').set('pdistrib', 'off');
model.sol('sol5').feature('s2').feature('p1').set('plot', 'off');
model.sol('sol5').feature('s2').feature('p1').set('plotgroup', 'Default');
model.sol('sol5').feature('s2').feature('p1').set('probesel', 'all');
model.sol('sol5').feature('s2').feature('p1').set('probes', {});
model.sol('sol5').feature('s2').feature('p1').set('control', 'frlin');
model.sol('sol5').feature('s2').set('nonlin', 'linper');
model.sol('sol5').feature('s2').set('storelinpoint', true);
model.sol('sol5').feature('s2').set('linpsolnum', 'all');
model.sol('sol5').feature('s2').set('control', 'frlin');
model.sol('sol5').feature('s2').set('linpmethod', 'sol');
model.sol('sol5').feature('s2').set('linpsol', 'sol5');
model.sol('sol5').feature('s2').set('linpsoluse', 'sol6');
model.sol('sol5').feature('s2').set('control', 'frlin');
model.sol('sol5').feature('s2').feature('aDef').set('cachepattern', true);
model.sol('sol5').feature('s2').create('seDef', 'Segregated');
model.sol('sol5').feature('s2').create('fc1', 'FullyCoupled');
model.sol('sol5').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol5').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol5').feature('s2').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol5').feature('s2').feature('fc1').set('maxiter', 50);
model.sol('sol5').feature('s2').feature('fc1').set('termonres', 'off');
model.sol('sol5').feature('s2').create('d1', 'Direct');
model.sol('sol5').feature('s2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s2').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s2').feature('d1').label('Direct, heat transfer variables ht (te1) (Merged)');
model.sol('sol5').feature('s2').create('d2', 'Direct');
model.sol('sol5').feature('s2').feature('d2').set('linsolver', 'pardiso');
model.sol('sol5').feature('s2').feature('d2').set('pivotperturb', 1.0E-9);
model.sol('sol5').feature('s2').feature('d2').label('Suggested Direct Solver solid (te1)');
model.sol('sol5').feature('s2').create('i1', 'Iterative');
model.sol('sol5').feature('s2').feature('i1').set('linsolver', 'gmres');
model.sol('sol5').feature('s2').feature('i1').set('rhob', 400);
model.sol('sol5').feature('s2').feature('i1').set('nlinnormuse', true);
model.sol('sol5').feature('s2').feature('i1').label('Suggested Iterative Solver solid (te1)');
model.sol('sol5').feature('s2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol5').feature('s2').create('i2', 'Iterative');
model.sol('sol5').feature('s2').feature('i2').set('linsolver', 'gmres');
model.sol('sol5').feature('s2').feature('i2').set('prefuntype', 'left');
model.sol('sol5').feature('s2').feature('i2').set('itrestart', 50);
model.sol('sol5').feature('s2').feature('i2').set('rhob', 20);
model.sol('sol5').feature('s2').feature('i2').set('maxlinit', 10000);
model.sol('sol5').feature('s2').feature('i2').set('nlinnormuse', 'on');
model.sol('sol5').feature('s2').feature('i2').label('AMG, heat transfer variables ht (te1)');
model.sol('sol5').feature('s2').feature('i2').create('mg1', 'Multigrid');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s2').feature('fc1').set('linsolver', 'd1');
model.sol('sol5').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol5').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol5').feature('s2').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol5').feature('s2').feature('fc1').set('maxiter', 50);
model.sol('sol5').feature('s2').feature('fc1').set('termonres', 'off');
model.sol('sol5').feature('s2').feature.remove('fcDef');
model.sol('sol5').feature('s2').feature.remove('seDef');

model.result.dataset('dset6').set('solution', 'sol6');

model.sol('sol5').feature('v2').set('notsolnum', 'auto');
model.sol('sol5').feature('v2').set('notsolvertype', 'solnum');

model.study('std3').feature('frlin').set('notsolnum', 'auto');
model.study('std3').feature('frlin').set('notsolvertype', 'solnum');
model.study('std3').feature('frlin').set('notsolnumhide', 'off');
model.study('std3').feature('frlin').set('notstudyhide', 'off');
model.study('std3').feature('frlin').set('notsolhide', 'off');

model.sol('sol5').attach('std3');
model.sol('sol5').runFromTo('st2', 's2');

model.result.dataset.create('mesh1', 'Mesh');
model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').run;
model.result('pg1').label('Mesh Plot');
model.result('pg1').set('data', 'mesh1');
model.result('pg1').set('inherithide', true);
model.result('pg1').set('showlegendsmaxmin', true);
model.result('pg1').create('mesh1', 'Mesh');
model.result('pg1').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg1').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg1').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg1').feature('mesh1').set('meshdomain', 'volume');
model.result('pg1').feature('mesh1').set('filteractive', true);
model.result('pg1').feature('mesh1').set('logfilterexpr', 'x<0.5[mm]');
model.result('pg1').run;
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').run;
model.result('pg2').label('Mode Shape (solid)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('showlegends', false);
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').create('def1', 'Deform');
model.result('pg2').run;
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').run;
model.result('pg3').label('Stress (stationary)');
model.result('pg3').set('data', 'dset4');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').setIndex('looplevel', 3, 0);
model.result('pg3').create('vol1', 'Volume');
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').run;
model.result('pg4').label('Displacement (stationary)');
model.result('pg4').set('data', 'dset4');
model.result('pg4').setIndex('looplevel', 3, 0);
model.result('pg4').set('frametype', 'spatial');
model.result('pg4').set('showlegendsmaxmin', true);
model.result('pg4').set('showlegendsunit', true);
model.result('pg4').run;
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').run;
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').run;
model.result('pg5').label('Temperature (stationary)');
model.result('pg5').set('data', 'dset4');
model.result('pg5').setIndex('looplevel', 3, 0);
model.result('pg5').set('frametype', 'spatial');
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', 'T');
model.result('pg5').run;
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').run;
model.result('pg6').label('Displacement (perturbation)');
model.result('pg6').set('data', 'dset3');
model.result('pg6').set('titletype', 'label');
model.result('pg6').set('frametype', 'spatial');
model.result('pg6').set('showlegendsunit', true);
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').create('def1', 'Deform');
model.result('pg6').run;
model.result('pg6').run;
model.result.create('pg7', 'PlotGroup3D');
model.result('pg7').run;
model.result('pg7').label('Temperature (perturbation)');
model.result('pg7').set('data', 'dset3');
model.result('pg7').set('titletype', 'label');
model.result('pg7').set('edges', false);
model.result('pg7').set('showlegendsunit', true);
model.result('pg7').create('surf1', 'Surface');
model.result('pg7').feature('surf1').set('expr', 'T');
model.result('pg7').feature('surf1').set('unit', 'mK');
model.result('pg7').feature('surf1').set('colortable', 'ThermalWave');
model.result('pg7').run;
model.result('pg7').feature('surf1').create('def1', 'Deform');
model.result('pg7').run;
model.result('pg7').feature('surf1').feature('def1').set('scaleactive', true);
model.result('pg7').feature('surf1').feature('def1').set('scale', 1);
model.result('pg7').run;
model.result('pg7').feature('surf1').create('filt1', 'Filter');
model.result('pg7').run;
model.result('pg7').feature('surf1').feature('filt1').set('expr', 'x<0.5[mm]');
model.result('pg7').run;
model.result('pg7').feature('surf1').create('sel1', 'Selection');
model.result('pg7').feature('surf1').feature('sel1').selection.named('sel7');
model.result('pg7').run;
model.result('pg7').create('slc1', 'Slice');
model.result('pg7').feature('slc1').set('expr', 'ta.T_t');
model.result('pg7').feature('slc1').set('unit', 'mK');
model.result('pg7').feature('slc1').set('quickxnumber', 1);
model.result('pg7').feature('slc1').set('colorlegend', false);
model.result('pg7').feature('slc1').set('inheritplot', 'surf1');
model.result('pg7').run;
model.result('pg7').feature('slc1').create('tran1', 'Transparency');
model.result('pg7').run;
model.result('pg7').feature('slc1').feature('tran1').set('transparency', 0.05);
model.result('pg7').feature('slc1').feature('tran1').set('uniformblending', 0.1);
model.result('pg7').run;
model.result('pg7').run;
model.result('pg7').create('slc2', 'Slice');
model.result('pg7').feature('slc2').set('expr', 'T');
model.result('pg7').feature('slc2').set('unit', 'mK');
model.result('pg7').feature('slc2').set('colorlegend', false);
model.result('pg7').feature('slc2').set('inheritplot', 'surf1');
model.result('pg7').run;
model.result('pg7').run;
model.result('pg7').create('vol1', 'Volume');
model.result('pg7').feature('vol1').set('expr', '1');
model.result('pg7').feature('vol1').set('coloring', 'uniform');
model.result('pg7').feature('vol1').set('color', 'custom');
model.result('pg7').feature('vol1').set('customcolor', [0.8784313797950745 1 1]);
model.result('pg7').feature('vol1').create('sel1', 'Selection');
model.result('pg7').feature('vol1').feature('sel1').selection.set([1 2 4]);
model.result('pg7').run;
model.result('pg7').feature('vol1').create('mtrl1', 'MaterialAppearance');
model.result('pg7').run;
model.result('pg7').feature('vol1').feature('mtrl1').set('appearance', 'custom');
model.result('pg7').feature('vol1').feature('mtrl1').set('family', 'aluminumanodized');
model.result('pg7').feature('vol1').feature('mtrl1').set('useplotcolors', true);
model.result('pg7').run;
model.result('pg7').run;
model.result('pg7').create('line1', 'Line');
model.result('pg7').feature('line1').set('coloring', 'uniform');
model.result('pg7').feature('line1').set('color', 'black');
model.result('pg7').run;
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').run;
model.result('pg8').label('Acoustic Velocity (perturbation)');
model.result('pg8').set('data', 'dset3');
model.result('pg8').set('frametype', 'spatial');
model.result('pg8').set('showlegendsunit', true);
model.result('pg8').create('slc1', 'Slice');
model.result('pg8').feature('slc1').set('expr', 'ta.v_inst');
model.result('pg8').feature('slc1').set('unit', 'mm/s');
model.result('pg8').feature('slc1').set('quickxnumber', 1);
model.result('pg8').run;
model.result.create('pg9', 'PlotGroup3D');
model.result('pg9').run;
model.result('pg9').label('Acoustic Pressure (perturbation)');
model.result('pg9').set('data', 'dset3');
model.result('pg9').set('frametype', 'spatial');
model.result('pg9').set('showlegendsunit', true);
model.result('pg9').create('slc1', 'Slice');
model.result('pg9').feature('slc1').set('expr', 'ta.p_t');
model.result('pg9').feature('slc1').set('quickxnumber', 1);
model.result('pg9').feature('slc1').set('colortable', 'Wave');
model.result('pg9').feature('slc1').set('colorscalemode', 'linearsymmetric');
model.result('pg9').run;
model.result('pg9').run;
model.result('pg9').create('slc2', 'Slice');
model.result('pg9').feature('slc2').set('expr', 'acpr.p_t');
model.result('pg9').feature('slc2').set('quickxnumber', 1);
model.result('pg9').feature('slc2').set('inheritplot', 'slc1');
model.result('pg9').run;
model.result.create('pg10', 'PlotGroup1D');
model.result('pg10').run;
model.result('pg10').label('Response Comparison (at resonance)');
model.result('pg10').set('data', 'dset3');
model.result('pg10').setIndex('looplevelinput', 'manualindices', 0);
model.result('pg10').setIndex('looplevelindices', 'range(13,1,27)', 0);
model.result('pg10').create('ptgr1', 'PointGraph');
model.result('pg10').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg10').feature('ptgr1').set('linewidth', 'preference');
model.result('pg10').feature('ptgr1').selection.set([97]);
model.result('pg10').feature('ptgr1').set('expr', 'abs(w)');
model.result('pg10').feature('ptgr1').set('linewidth', 1);
model.result('pg10').feature('ptgr1').set('legend', true);
model.result('pg10').feature('ptgr1').set('legendmethod', 'manual');
model.result('pg10').feature('ptgr1').setIndex('legends', 'Full Model (ta-ht-solid)', 0);
model.result('pg10').run;
model.result('pg10').feature.duplicate('ptgr2', 'ptgr1');
model.result('pg10').run;
model.result('pg10').feature('ptgr2').set('data', 'dset5');
model.result('pg10').feature('ptgr2').setIndex('looplevelinput', 'manualindices', 0);
model.result('pg10').feature('ptgr2').setIndex('looplevelindices', 'range(13,1,27)', 0);
model.result('pg10').feature('ptgr2').setIndex('legends', 'Solid Losses (ht-solid)', 0);
model.result('pg10').run;
model.result.create('pg11', 'PlotGroup1D');
model.result('pg11').run;
model.result('pg11').label('Response Comparison (typical operation)');
model.result('pg11').set('data', 'dset3');
model.result('pg11').setIndex('looplevelinput', 'manualindices', 0);
model.result('pg11').setIndex('looplevelindices', 'range(1,1,12)', 0);
model.result('pg11').create('ptgr1', 'PointGraph');
model.result('pg11').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg11').feature('ptgr1').set('linewidth', 'preference');
model.result('pg11').feature('ptgr1').selection.set([97]);
model.result('pg11').feature('ptgr1').set('expr', 'abs(w)');
model.result('pg11').feature('ptgr1').set('linewidth', 1);
model.result('pg11').feature('ptgr1').set('legend', true);
model.result('pg11').feature('ptgr1').set('legendmethod', 'manual');
model.result('pg11').feature('ptgr1').setIndex('legends', 'Full Model (ta-ht-solid)', 0);
model.result('pg11').run;
model.result('pg11').feature.duplicate('ptgr2', 'ptgr1');
model.result('pg11').run;
model.result('pg11').feature('ptgr2').set('data', 'dset5');
model.result('pg11').feature('ptgr2').setIndex('looplevelinput', 'manualindices', 0);
model.result('pg11').feature('ptgr2').setIndex('looplevelindices', 'range(1,1,12)', 0);
model.result('pg11').feature('ptgr2').setIndex('legends', 'Solid Losses (ht-solid)', 0);
model.result('pg11').run;

model.title(['Prestressed Micromirror Vibrations: Thermoviscous' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Thermoelasticity Coupling']);

model.description('This model analyzes the operation of a micromirror in air and the effects of thermoviscous damping. The model includes thermal expansion and thermoviscous acoustic phenomena.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;

model.label('micromirror_prestressed_vibration.mph');

model.modelNode.label('Components');

out = model;
