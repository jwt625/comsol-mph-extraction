function out = model
%
% submarine_cable_01_introduction.m
%
% Model exported on May 26 2025, 21:25 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/ACDC_Module/Tutorials,_Cables');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.geom('geom1').insertFile('submarine_cable_e_geom_sequence.mph', 'geom1');
model.geom('geom1').run('fin');

model.param.label('Geometric Parameters 1');
model.param.create('par2');
model.param('par2').label('Geometric Parameters 2');

% To import content from file, use:
% model.param('par2').loadFile('FILENAME');
model.param('par2').set('Acon', '500[mm^2]', 'Cross sectional area of main conductors (per phase)');
model.param('par2').set('Ncon', 'Acon/(pi*(Dcon/2)^2)', 'Conductor packing density (phase)');
model.param('par2').set('Apbs', 'pi*(Dins+Tpbs)*Tpbs', 'Cross sectional area of lead sheath (per phase)');
model.param('par2').set('Lsec1', '1/3', 'Relative length cross bonding section 1');
model.param('par2').set('Lsec2', '1-Lsec1-Lsec3', 'Relative length cross bonding section 2');
model.param('par2').set('Lsec3', '1/3', 'Relative length cross bonding section 3');
model.param('par2').set('Lcab', '10[km]', 'Total length of submarine cable');
model.param('par2').set('Scab', '1e5', 'Geometric scale factor (2Daxi model)');

model.selection.create('uni1', 'Union');
model.selection('uni1').model('comp1');
model.selection('uni1').label('Phases');
model.selection('uni1').set('input', {'geom1_c1_dom' 'geom1_c2_dom' 'geom1_c3_dom'});
model.selection.create('uni2', 'Union');
model.selection('uni2').model('comp1');
model.selection('uni2').label('Metals');
model.selection('uni2').set('input', {'uni1' 'geom1_uni3_dom' 'geom1_c17_dom' 'geom1_c19_dom'});
model.selection.create('dif1', 'Difference');
model.selection('dif1').model('comp1');
model.selection('dif1').label('Insulators (External to Phase)');
model.selection('dif1').set('add', {'geom1_c21_dom'});
model.selection('dif1').set('subtract', {'uni2' 'geom1_uni1_dom' 'geom1_uni2_dom'});
model.selection.create('dif2', 'Difference');
model.selection('dif2').model('comp1');
model.selection('dif2').label('Air Pockets');
model.selection('dif2').set('add', {'dif1'});
model.selection('dif2').set('subtract', {'geom1_dif1_dom' 'geom1_dif2_dom' 'geom1_c18_dom' 'geom1_dif3_dom'});
model.selection.create('dif3', 'Difference');
model.selection('dif3').model('comp1');
model.selection('dif3').label('Solid Domains');
model.selection('dif3').set('add', {'geom1_c22_dom'});
model.selection('dif3').set('subtract', {'dif2'});
model.selection.create('adj1', 'Adjacent');
model.selection('adj1').model('comp1');
model.selection('adj1').label('Thermal Contact');
model.selection('adj1').set('input', {'dif1'});
model.selection('adj1').set('interior', true);

model.view('view1').set('showmaterial', true);

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('rho', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('cs', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an1', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an2', 'Analytic');
model.material('mat1').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat1').propertyGroup.create('NonlinearModel', 'Nonlinear model');
model.material('mat1').propertyGroup.create('idealGas', 'Ideal gas');
model.material('mat1').propertyGroup('idealGas').func.create('Cp', 'Piecewise');
model.material('mat1').label('Air');
model.material('mat1').set('family', 'air');
model.material('mat1').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('eta').set('pieces', {'200.0' '1600.0' '-8.38278E-7+8.35717342E-8*T^1-7.69429583E-11*T^2+4.6437266E-14*T^3-1.06585607E-17*T^4'});
model.material('mat1').propertyGroup('def').func('eta').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat1').propertyGroup('def').func('Cp').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('def').func('rho').set('expr', 'pA*0.02897/R_const[K*mol/J]/T');
model.material('mat1').propertyGroup('def').func('rho').set('args', {'pA' 'T'});
model.material('mat1').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.material('mat1').propertyGroup('def').func('rho').set('argunit', {'Pa' 'K'});
model.material('mat1').propertyGroup('def').func('rho').set('plotaxis', {'off' 'on'});
model.material('mat1').propertyGroup('def').func('rho').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat1').propertyGroup('def').func('rho').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '293.15'});
model.material('mat1').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('k').set('pieces', {'200.0' '1600.0' '-0.00227583562+1.15480022E-4*T^1-7.90252856E-8*T^2+4.11702505E-11*T^3-7.43864331E-15*T^4'});
model.material('mat1').propertyGroup('def').func('k').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.material('mat1').propertyGroup('def').func('cs').set('expr', 'sqrt(1.4*R_const[K*mol/J]/0.02897*T)');
model.material('mat1').propertyGroup('def').func('cs').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('cs').set('fununit', 'm/s');
model.material('mat1').propertyGroup('def').func('cs').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('cs').set('plotfixedvalue', {'273.15'});
model.material('mat1').propertyGroup('def').func('cs').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.material('mat1').propertyGroup('def').func('an1').set('expr', '-1/rho(pA,T)*d(rho(pA,T),T)');
model.material('mat1').propertyGroup('def').func('an1').set('args', {'pA' 'T'});
model.material('mat1').propertyGroup('def').func('an1').set('fununit', '1/K');
model.material('mat1').propertyGroup('def').func('an1').set('argunit', {'Pa' 'K'});
model.material('mat1').propertyGroup('def').func('an1').set('plotaxis', {'off' 'on'});
model.material('mat1').propertyGroup('def').func('an1').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat1').propertyGroup('def').func('an1').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an2').set('funcname', 'muB');
model.material('mat1').propertyGroup('def').func('an2').set('expr', '0.6*eta(T)');
model.material('mat1').propertyGroup('def').func('an2').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('an2').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('an2').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an2').set('plotfixedvalue', {'200'});
model.material('mat1').propertyGroup('def').func('an2').set('plotargs', {'T' '200' '1600'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.material('mat1').propertyGroup('def').set('molarmass', '');
model.material('mat1').propertyGroup('def').set('bulkviscosity', '');
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)'});
model.material('mat1').propertyGroup('def').set('molarmass', '0.02897[kg/mol]');
model.material('mat1').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.material('mat1').propertyGroup('def').set('ratioofspecificheat', '1.4');
model.material('mat1').propertyGroup('def').set('electricconductivity', {'0[S/m]' '0' '0' '0' '0[S/m]' '0' '0' '0' '0[S/m]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.material('mat1').propertyGroup('def').set('density', 'rho(pA,T)');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.material('mat1').propertyGroup('def').set('soundspeed', 'cs(T)');
model.material('mat1').propertyGroup('def').addInput('temperature');
model.material('mat1').propertyGroup('def').addInput('pressure');
model.material('mat1').propertyGroup('RefractiveIndex').set('n', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('NonlinearModel').set('BA', 'def.gamma-1');
model.material('mat1').propertyGroup('idealGas').func('Cp').label('Piecewise 2');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat1').propertyGroup('idealGas').func('Cp').set('argunit', 'K');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('idealGas').set('Rs', 'R_const/Mn');
model.material('mat1').propertyGroup('idealGas').set('heatcapacity', 'Cp(T)');
model.material('mat1').propertyGroup('idealGas').set('ratioofspecificheat', '1.4');
model.material('mat1').propertyGroup('idealGas').set('molarmass', '0.02897');
model.material('mat1').propertyGroup('idealGas').addInput('temperature');
model.material('mat1').propertyGroup('idealGas').addInput('pressure');
model.material('mat1').materialType('nonSolid');
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat2').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat2').propertyGroup('def').func.create('rho', 'Piecewise');
model.material('mat2').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat2').propertyGroup('def').func.create('cs', 'Interpolation');
model.material('mat2').propertyGroup('def').func.create('an1', 'Analytic');
model.material('mat2').propertyGroup('def').func.create('an2', 'Analytic');
model.material('mat2').propertyGroup('def').func.create('an3', 'Analytic');
model.material('mat2').label('Water, liquid');
model.material('mat2').set('family', 'water');
model.material('mat2').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat2').propertyGroup('def').func('eta').set('pieces', {'273.15' '413.15' '1.3799566804-0.021224019151*T^1+1.3604562827E-4*T^2-4.6454090319E-7*T^3+8.9042735735E-10*T^4-9.0790692686E-13*T^5+3.8457331488E-16*T^6'; '413.15' '553.75' '0.00401235783-2.10746715E-5*T^1+3.85772275E-8*T^2-2.39730284E-11*T^3'});
model.material('mat2').propertyGroup('def').func('eta').set('argunit', 'K');
model.material('mat2').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.material('mat2').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat2').propertyGroup('def').func('Cp').set('pieces', {'273.15' '553.75' '12010.1471-80.4072879*T^1+0.309866854*T^2-5.38186884E-4*T^3+3.62536437E-7*T^4'});
model.material('mat2').propertyGroup('def').func('Cp').set('argunit', 'K');
model.material('mat2').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat2').propertyGroup('def').func('rho').set('arg', 'T');
model.material('mat2').propertyGroup('def').func('rho').set('smooth', 'contd1');
model.material('mat2').propertyGroup('def').func('rho').set('pieces', {'273.15' '293.15' '0.000063092789034*T^3-0.060367639882855*T^2+18.9229382407066*T-950.704055329848'; '293.15' '373.15' '0.000010335053319*T^3-0.013395065634452*T^2+4.969288832655160*T+432.257114008512'});
model.material('mat2').propertyGroup('def').func('rho').set('argunit', 'K');
model.material('mat2').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.material('mat2').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat2').propertyGroup('def').func('k').set('pieces', {'273.15' '553.75' '-0.869083936+0.00894880345*T^1-1.58366345E-5*T^2+7.97543259E-9*T^3'});
model.material('mat2').propertyGroup('def').func('k').set('argunit', 'K');
model.material('mat2').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.material('mat2').propertyGroup('def').func('cs').set('table', {'273' '1403';  ...
'278' '1427';  ...
'283' '1447';  ...
'293' '1481';  ...
'303' '1507';  ...
'313' '1526';  ...
'323' '1541';  ...
'333' '1552';  ...
'343' '1555';  ...
'353' '1555';  ...
'363' '1550';  ...
'373' '1543'});
model.material('mat2').propertyGroup('def').func('cs').set('interp', 'piecewisecubic');
model.material('mat2').propertyGroup('def').func('cs').set('fununit', {'m/s'});
model.material('mat2').propertyGroup('def').func('cs').set('argunit', {'K'});
model.material('mat2').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.material('mat2').propertyGroup('def').func('an1').set('expr', '-1/rho(T)*d(rho(T),T)');
model.material('mat2').propertyGroup('def').func('an1').set('args', {'T'});
model.material('mat2').propertyGroup('def').func('an1').set('fununit', '1/K');
model.material('mat2').propertyGroup('def').func('an1').set('argunit', {'K'});
model.material('mat2').propertyGroup('def').func('an1').set('plotfixedvalue', {'273.15'});
model.material('mat2').propertyGroup('def').func('an1').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat2').propertyGroup('def').func('an2').set('funcname', 'gamma_w');
model.material('mat2').propertyGroup('def').func('an2').set('expr', '1+(T/Cp(T))*(alpha_p(T)*cs(T))^2');
model.material('mat2').propertyGroup('def').func('an2').set('args', {'T'});
model.material('mat2').propertyGroup('def').func('an2').set('fununit', '1');
model.material('mat2').propertyGroup('def').func('an2').set('argunit', {'K'});
model.material('mat2').propertyGroup('def').func('an2').set('plotfixedvalue', {'273.15'});
model.material('mat2').propertyGroup('def').func('an2').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat2').propertyGroup('def').func('an3').set('funcname', 'muB');
model.material('mat2').propertyGroup('def').func('an3').set('expr', '2.79*eta(T)');
model.material('mat2').propertyGroup('def').func('an3').set('args', {'T'});
model.material('mat2').propertyGroup('def').func('an3').set('fununit', 'Pa*s');
model.material('mat2').propertyGroup('def').func('an3').set('argunit', {'K'});
model.material('mat2').propertyGroup('def').func('an3').set('plotfixedvalue', {'273.15'});
model.material('mat2').propertyGroup('def').func('an3').set('plotargs', {'T' '273.15' '553.75'});
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.material('mat2').propertyGroup('def').set('bulkviscosity', '');
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(T)' '0' '0' '0' 'alpha_p(T)' '0' '0' '0' 'alpha_p(T)'});
model.material('mat2').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.material('mat2').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.material('mat2').propertyGroup('def').set('ratioofspecificheat', 'gamma_w(T)');
model.material('mat2').propertyGroup('def').set('electricconductivity', {'5.5e-6[S/m]' '0' '0' '0' '5.5e-6[S/m]' '0' '0' '0' '5.5e-6[S/m]'});
model.material('mat2').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.material('mat2').propertyGroup('def').set('density', 'rho(T)');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.material('mat2').propertyGroup('def').set('soundspeed', 'cs(T)');
model.material('mat2').propertyGroup('def').addInput('temperature');
model.material('mat2').selection.set([2]);
model.material.create('mat3', 'Common', 'comp1');
model.material('mat3').label('Gravel, saturated');
model.material('mat3').selection.set([1 7]);
model.material('mat3').propertyGroup('def').set('relpermeability', '');
model.material('mat3').propertyGroup('def').set('electricconductivity', '');
model.material('mat3').propertyGroup('def').set('relpermittivity', '');
model.material('mat3').propertyGroup('def').set('thermalconductivity', '');
model.material('mat3').propertyGroup('def').set('density', '');
model.material('mat3').propertyGroup('def').set('heatcapacity', '');
model.material('mat3').set('family', 'rock');
model.material.duplicate('mat4', 'mat3');
model.material('mat4').label('Polyethylene');
model.material('mat4').selection.named('geom1_dif1_dom');
model.material('mat4').set('family', 'oil');
model.material.duplicate('mat5', 'mat4');
model.material('mat5').label('Polypropylene');
model.material('mat5').selection.named('geom1_dif2_dom');
model.material('mat5').set('family', 'plastic');
model.material('mat5').set('color', 'gray');
model.material.duplicate('mat6', 'mat5');
model.material('mat6').label('Cross-linked polyethylene (XLPE)');
model.material('mat6').selection.named('geom1_uni2_dom');
model.material('mat6').set('color', 'white');
model.material.duplicate('mat7', 'mat6');
model.material('mat7').label('Semiconductive compound');
model.material('mat7').selection.named('geom1_uni1_dom');
model.material('mat7').set('color', 'black');
model.material.duplicate('mat8', 'mat7');
model.material('mat8').label('Bitumen compound');
model.material('mat8').selection.named('geom1_dif3_dom');
model.material.create('mat9', 'Common', 'comp1');
model.material('mat9').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat9').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat9').label('Silica glass');
model.material('mat9').set('family', 'custom');
model.material('mat9').set('customambient', [1 1 1]);
model.material('mat9').set('noise', true);
model.material('mat9').set('fresnel', 0.99);
model.material('mat9').set('roughness', 0.02);
model.material('mat9').set('metallic', 0);
model.material('mat9').set('pearl', 0);
model.material('mat9').set('diffusewrap', 0);
model.material('mat9').set('clearcoat', 0);
model.material('mat9').set('reflectance', 0);
model.material('mat9').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat9').propertyGroup('def').set('electricconductivity', {'1e-14[S/m]' '0' '0' '0' '1e-14[S/m]' '0' '0' '0' '1e-14[S/m]'});
model.material('mat9').propertyGroup('def').set('thermalexpansioncoefficient', {'0.55e-6[1/K]' '0' '0' '0' '0.55e-6[1/K]' '0' '0' '0' '0.55e-6[1/K]'});
model.material('mat9').propertyGroup('def').set('heatcapacity', '703[J/(kg*K)]');
model.material('mat9').propertyGroup('def').set('relpermittivity', {'3.75' '0' '0' '0' '3.75' '0' '0' '0' '3.75'});
model.material('mat9').propertyGroup('def').set('density', '2203[kg/m^3]');
model.material('mat9').propertyGroup('def').set('thermalconductivity', {'1.38[W/(m*K)]' '0' '0' '0' '1.38[W/(m*K)]' '0' '0' '0' '1.38[W/(m*K)]'});
model.material('mat9').propertyGroup('Enu').set('E', '73.1[GPa]');
model.material('mat9').propertyGroup('Enu').set('nu', '0.17');
model.material('mat9').propertyGroup('RefractiveIndex').set('n', {'1.45' '0' '0' '0' '1.45' '0' '0' '0' '1.45'});
model.material('mat9').selection.named('geom1_c18_dom');
model.material.duplicate('mat10', 'mat8');
model.material('mat10').label('Stainless steel');
model.material('mat10').selection.named('geom1_c17_dom');
model.material('mat10').set('family', 'steel');
model.material.duplicate('mat11', 'mat10');
model.material('mat11').label('Copper');
model.material('mat11').selection.named('uni1');
model.material('mat11').propertyGroup.create('linzRes', 'Linearized_resistivity');
model.material('mat11').set('family', 'copper');
model.material.duplicate('mat12', 'mat11');
model.material('mat12').label('Lead');
model.material('mat12').selection.named('geom1_uni3_dom');
model.material('mat12').set('family', 'lead');
model.material.duplicate('mat13', 'mat12');
model.material('mat13').label('Galvanized steel');
model.material('mat13').selection.named('geom1_c19_dom');
model.material('mat13').set('family', 'steel');
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'x'});
model.material('mat1').propertyGroup('def').set('molarmass', {'x'});
model.material('mat1').propertyGroup('def').set('bulkviscosity', {'x'});
model.material('mat1').propertyGroup('def').set('relpermeability', {'x'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'x'});
model.material('mat1').propertyGroup('def').set('dynamicviscosity', {'x'});
model.material('mat1').propertyGroup('def').set('ratioofspecificheat', {'x'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'x'});
model.material('mat1').propertyGroup('def').set('heatcapacity', {'x'});
model.material('mat1').propertyGroup('def').set('density', {'x'});
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'x'});
model.material('mat1').propertyGroup('def').set('soundspeed', {'x'});
model.material('mat1').propertyGroup('RefractiveIndex').set('n', {'x'});
model.material('mat1').propertyGroup('RefractiveIndex').set('ki', {'x'});
model.material('mat1').propertyGroup('NonlinearModel').set('BA', {'x'});
model.material('mat1').propertyGroup('idealGas').set('Rs', {'x'});
model.material('mat1').propertyGroup('idealGas').set('heatcapacity', {'x'});
model.material('mat1').propertyGroup('idealGas').set('ratioofspecificheat', {'x'});
model.material('mat1').propertyGroup('idealGas').set('molarmass', {'x'});
model.material.label('Materials.');
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(pA,T)'});
model.material('mat1').propertyGroup('def').set('molarmass', {'0.02897[kg/mol]'});
model.material('mat1').propertyGroup('def').set('bulkviscosity', {'muB(T)'});
model.material('mat1').propertyGroup('def').set('relpermeability', {'1'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1'});
model.material('mat1').propertyGroup('def').set('dynamicviscosity', {'eta(T)'});
model.material('mat1').propertyGroup('def').set('ratioofspecificheat', {'1.4'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'1e-14[S/m]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', {'Cp(T)'});
model.material('mat1').propertyGroup('def').set('density', {'rho(pA,T)'});
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'k(T)'});
model.material('mat1').propertyGroup('def').set('soundspeed', {'cs(T)'});
model.material('mat1').propertyGroup('RefractiveIndex').set('n', {'1'});
model.material('mat1').propertyGroup('RefractiveIndex').set('ki', {'0'});
model.material('mat1').propertyGroup('NonlinearModel').set('BA', {'(def.gamma+1)/2'});
model.material('mat1').propertyGroup('idealGas').set('Rs', {'R_const/Mn'});
model.material('mat1').propertyGroup('idealGas').set('heatcapacity', {'Cp(T)'});
model.material('mat1').propertyGroup('idealGas').set('ratioofspecificheat', {'1.4'});
model.material('mat1').propertyGroup('idealGas').set('molarmass', {'0.02897'});
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'x'});
model.material('mat2').propertyGroup('def').set('bulkviscosity', {'x'});
model.material('mat2').propertyGroup('def').set('dynamicviscosity', {'x'});
model.material('mat2').propertyGroup('def').set('ratioofspecificheat', {'x'});
model.material('mat2').propertyGroup('def').set('electricconductivity', {'x'});
model.material('mat2').propertyGroup('def').set('heatcapacity', {'x'});
model.material('mat2').propertyGroup('def').set('density', {'x'});
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'x'});
model.material('mat2').propertyGroup('def').set('soundspeed', {'x'});
model.material.label('Materials..');
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(T)'});
model.material('mat2').propertyGroup('def').set('bulkviscosity', {'muB(T)'});
model.material('mat2').propertyGroup('def').set('dynamicviscosity', {'eta(T)'});
model.material('mat2').propertyGroup('def').set('ratioofspecificheat', {'gamma_w(T)'});
model.material('mat2').propertyGroup('def').set('electricconductivity', {'5.5e-6[S/m]'});
model.material('mat2').propertyGroup('def').set('heatcapacity', {'Cp(T)'});
model.material('mat2').propertyGroup('def').set('density', {'rho(T)'});
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'k(T)'});
model.material('mat2').propertyGroup('def').set('soundspeed', {'cs(T)'});
model.material('mat3').propertyGroup('def').set('relpermeability', {'1'});
model.material('mat3').propertyGroup('def').set('electricconductivity', {'1[S/m]'});
model.material('mat3').propertyGroup('def').set('relpermittivity', {'28'});
model.material('mat3').propertyGroup('def').set('thermalconductivity', {'1[W/(m*K)]'});
model.material('mat3').propertyGroup('def').set('density', {'2020[kg/m^3]'});
model.material('mat3').propertyGroup('def').set('heatcapacity', {'2512[J/(kg*K)]'});
model.material('mat4').propertyGroup('def').set('relpermeability', {'1'});
model.material('mat4').propertyGroup('def').set('electricconductivity', {'1e-18[S/m]'});
model.material('mat4').propertyGroup('def').set('relpermittivity', {'2.25'});
model.material('mat4').propertyGroup('def').set('thermalconductivity', {'0.46[W/(m*K)]'});
model.material('mat4').propertyGroup('def').set('density', {'935[kg/m^3]'});
model.material('mat4').propertyGroup('def').set('heatcapacity', {'2302[J/(kg*K)]'});
model.material('mat5').propertyGroup('def').set('relpermeability', {'1'});
model.material('mat5').propertyGroup('def').set('electricconductivity', {'1e-18[S/m]'});
model.material('mat5').propertyGroup('def').set('relpermittivity', {'2.36'});
model.material('mat5').propertyGroup('def').set('thermalconductivity', {'0.25[W/(m*K)]'});
model.material('mat5').propertyGroup('def').set('density', {'946[kg/m^3]'});
model.material('mat5').propertyGroup('def').set('heatcapacity', {'1920[J/(kg*K)]'});
model.material('mat6').propertyGroup('def').set('relpermeability', {'1'});
model.material('mat6').propertyGroup('def').set('electricconductivity', {'1e-18[S/m]'});
model.material('mat6').propertyGroup('def').set('thermalconductivity', {'0.46[W/(m*K)]'});
model.material('mat6').propertyGroup('def').set('density', {'930[kg/m^3]'});
model.material('mat6').propertyGroup('def').set('heatcapacity', {'2302[J/(kg*K)]'});
model.material('mat7').propertyGroup('def').set('relpermeability', {'1'});
model.material('mat7').propertyGroup('def').set('electricconductivity', {'2[S/m]'});
model.material('mat7').propertyGroup('def').set('relpermittivity', {'2.25'});
model.material('mat7').propertyGroup('def').set('thermalconductivity', {'10[W/(m*K)]'});
model.material('mat7').propertyGroup('def').set('density', {'1055[kg/m^3]'});
model.material('mat7').propertyGroup('def').set('heatcapacity', {'2405[J/(kg*K)]'});
model.material('mat8').propertyGroup('def').set('relpermeability', {'1'});
model.material('mat8').propertyGroup('def').set('electricconductivity', {'3.2e-9[S/m]'});
model.material('mat8').propertyGroup('def').set('relpermittivity', {'3.16'});
model.material('mat8').propertyGroup('def').set('thermalconductivity', {'0.17[W/(m*K)]'});
model.material('mat8').propertyGroup('def').set('density', {'1062[kg/m^3]'});
model.material('mat8').propertyGroup('def').set('heatcapacity', {'1885[J/(kg*K)]'});
model.material('mat9').propertyGroup('def').set('relpermeability', {'x'});
model.material('mat9').propertyGroup('def').set('electricconductivity', {'x'});
model.material('mat9').propertyGroup('def').set('thermalexpansioncoefficient', {'x'});
model.material('mat9').propertyGroup('def').set('heatcapacity', {'x'});
model.material('mat9').propertyGroup('def').set('relpermittivity', {'x'});
model.material('mat9').propertyGroup('def').set('density', {'x'});
model.material('mat9').propertyGroup('def').set('thermalconductivity', {'x'});
model.material('mat9').propertyGroup('Enu').set('E', {'x'});
model.material('mat9').propertyGroup('Enu').set('nu', {'x'});
model.material('mat9').propertyGroup('RefractiveIndex').set('n', {'x'});
model.material('mat9').propertyGroup('RefractiveIndex').set('ki', {'x'});
model.material.label('Materials.');
model.material('mat9').propertyGroup('def').set('relpermeability', {'1'});
model.material('mat9').propertyGroup('def').set('electricconductivity', {'1e-14[S/m]'});
model.material('mat9').propertyGroup('def').set('thermalexpansioncoefficient', {'0.55e-6[1/K]'});
model.material('mat9').propertyGroup('def').set('heatcapacity', {'703[J/(kg*K)]'});
model.material('mat9').propertyGroup('def').set('relpermittivity', {'3.75'});
model.material('mat9').propertyGroup('def').set('density', {'2203[kg/m^3]'});
model.material('mat9').propertyGroup('def').set('thermalconductivity', {'1.38[W/(m*K)]'});
model.material('mat9').propertyGroup('Enu').set('E', {'73.1e9[Pa]'});
model.material('mat9').propertyGroup('Enu').set('nu', {'0.17'});
model.material('mat9').propertyGroup('RefractiveIndex').set('n', {'1.45'});
model.material('mat9').propertyGroup('RefractiveIndex').set('ki', {'0'});
model.material('mat10').propertyGroup('def').set('relpermeability', {'1'});
model.material('mat10').propertyGroup('def').set('electricconductivity', {'1.46e6[S/m]'});
model.material('mat10').propertyGroup('def').set('relpermittivity', {'1'});
model.material('mat10').propertyGroup('def').set('thermalconductivity', {'17.5[W/(m*K)]'});
model.material('mat10').propertyGroup('def').set('density', {'7920[kg/m^3]'});
model.material('mat10').propertyGroup('def').set('heatcapacity', {'475[J/(kg*K)]'});
model.material('mat11').propertyGroup('def').set('relpermittivity', {'1'});
model.material('mat11').propertyGroup('def').set('density', {'8940[kg/m^3]'});
model.material('mat11').propertyGroup('def').set('heatcapacity', {'385[J/(kg*K)]'});
model.material('mat12').propertyGroup('def').set('relpermittivity', {'1'});
model.material('mat12').propertyGroup('def').set('thermalconductivity', {'35.3[W/(m*K)]'});
model.material('mat12').propertyGroup('def').set('density', {'11340[kg/m^3]'});
model.material('mat12').propertyGroup('def').set('heatcapacity', {'127[J/(kg*K)]'});
model.material('mat13').propertyGroup('def').set('relpermittivity', {'1'});
model.material('mat13').propertyGroup('def').set('thermalconductivity', {'58[W/(m*K)]'});
model.material('mat13').propertyGroup('def').set('density', {'7850[kg/m^3]'});
model.material('mat13').propertyGroup('def').set('heatcapacity', {'475[J/(kg*K)]'});
model.material.label('Materials');

model.mesh('mesh1').run;

model.title(['Submarine Cable 1 ' native2unicode(hex2dec({'20' '14'}), 'unicode') ' Introduction']);

model.description(['The model that results from this tutorial serves as a template for subsequent tutorials in this series (the Capacitive, Inductive, and Thermal Effects tutorials). It contains a detailed 2D geometry of a standard three-core lead sheathed XLPE HVAC submarine cable, along with a mesh. Some parameters, selections, and materials are prepared as well.' newline  newline 'Experienced COMSOL users with little or no interest in these topics ' native2unicode(hex2dec({'20' '14'}), 'unicode') ' geometry, mesh, selections, and such ' native2unicode(hex2dec({'20' '14'}), 'unicode') ' may choose to skip this part of the series and continue with one of the following tutorials. When you are new to COMSOL Multiphysics, however, it is worthwhile to take some time for this, as it will help you to familiarize yourself with the basics.']);

model.label('submarine_cable_01_introduction.mph');

model.modelNode.label('Components');

out = model;
