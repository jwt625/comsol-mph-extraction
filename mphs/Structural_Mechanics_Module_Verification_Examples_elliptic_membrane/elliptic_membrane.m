function out = model
%
% elliptic_membrane.m
%
% Model exported on May 26 2025, 21:34 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Structural_Mechanics_Module/Verification_Examples');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/solid', true);

model.param.set('div', '1');
model.param.descr('div', 'Mesh refinement factor');
model.param.set('sy_ref', '92.65817[MPa]');
model.param.descr('sy_ref', 'Target stress');

model.geom('geom1').create('e1', 'Ellipse');
model.geom('geom1').feature('e1').set('angle', 90);
model.geom('geom1').feature('e1').set('semiaxes', [3.25 2.75]);
model.geom('geom1').run('e1');
model.geom('geom1').create('e2', 'Ellipse');
model.geom('geom1').feature('e2').set('semiaxes', [2.417 1.583]);
model.geom('geom1').feature('e2').set('angle', 90);
model.geom('geom1').run('e2');
model.geom('geom1').create('e3', 'Ellipse');
model.geom('geom1').feature('e3').set('semiaxes', [2 1]);
model.geom('geom1').run('e3');
model.geom('geom1').create('dif1', 'Difference');
model.geom('geom1').feature('dif1').selection('input').set({'e1' 'e2'});
model.geom('geom1').feature('dif1').selection('input2').set({'e3'});
model.geom('geom1').runPre('fin');
model.geom('geom1').create('ls1', 'LineSegment');
model.geom('geom1').feature('ls1').set('specify1', 'coord');
model.geom('geom1').feature('ls1').set('specify2', 'coord');
model.geom('geom1').feature('ls1').set('coord1', [1.783 2.3]);
model.geom('geom1').feature('ls1').set('coord2', [1.165 0.812]);
model.geom('geom1').run('ls1');
model.geom('geom1').create('ls2', 'LineSegment');
model.geom('geom1').feature('ls2').set('specify1', 'coord');
model.geom('geom1').feature('ls2').set('specify2', 'coord');
model.geom('geom1').feature('ls2').set('coord1', [2.833 1.348]);
model.geom('geom1').feature('ls2').set('coord2', [1.783 0.453]);
model.geom('geom1').run;

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat1').propertyGroup('Enu').set('E', {'210E3[MPa]'});
model.material('mat1').propertyGroup('Enu').set('nu', {'0.3'});
model.material('mat1').propertyGroup('def').set('density', {'0'});

model.physics('solid').prop('Type2D').set('Type2D', 'PlaneStress');
model.physics('solid').prop('d').set('d', 0.1);
model.physics('solid').feature.duplicate('lemm2', 'lemm1');
model.physics('solid').feature('lemm1').set('reducedIntegration', true);
model.physics('solid').feature('lemm1').label('Linear Elastic Material 1, Reduced Integration');
model.physics('solid').create('sym1', 'SymmetrySolid', 1);
model.physics('solid').feature('sym1').selection.set([1 2 9 11]);
model.physics('solid').create('bndl1', 'BoundaryLoad', 1);
model.physics('solid').feature('bndl1').selection.set([15 18 21]);
model.physics('solid').feature('bndl1').set('LoadType', 'FollowerPressure');
model.physics('solid').feature('bndl1').set('FollowerPressure', '-10[MPa]');

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 'div');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([1 2 13 16 19]);
model.mesh('mesh1').run;

model.physics('solid').prop('ShapeProperty').set('order_displacement', 2);
model.physics('solid').create('disc1', 'Discretization', -1);
model.physics('solid').feature('disc1').set('order_displacement', 1);
model.physics('solid').feature('disc1').label('Discretization Linear');
model.physics('solid').feature.duplicate('disc2', 'disc1');
model.physics('solid').feature('disc2').set('order_displacement', 3);
model.physics('solid').feature('disc2').label('Discretization Cubic');

model.study('std1').label('Study Quad Linear');
model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'div', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', '', 0);
model.study('std1').feature('param').setIndex('pname', 'div', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', '', 0);
model.study('std1').feature('param').setIndex('plistarr', '1 2 3 4 8 12 16 24 32 48 64', 0);
model.study('std1').feature('param').setIndex('punit', '', 0);
model.study('std1').feature('stat').set('useadvanceddisable', true);
model.study('std1').feature('stat').setEntry('discretization', 'solid', 'disc1');
model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/solid', true);
model.study('std2').label('Study Quad Quadratic');
model.study('std2').feature.copy('param1', 'std1/param');
model.study.create('std3');
model.study('std3').create('stat', 'Stationary');
model.study('std3').feature('stat').setSolveFor('/physics/solid', true);
model.study('std3').label('Study Quad Cubic');
model.study('std3').feature.copy('param1', 'std1/param');
model.study('std3').feature('stat').set('useadvanceddisable', true);
model.study('std3').feature('stat').setEntry('discretization', 'solid', 'disc2');

model.mesh.duplicate('mesh2', 'mesh1');
model.mesh('mesh2').label('Mesh Tria');
model.mesh('mesh2').create('conv1', 'Convert');

model.study.create('std4');
model.study('std4').create('stat', 'Stationary');
model.study('std4').feature('stat').setSolveFor('/physics/solid', true);
model.study('std4').label('Study Tria Linear');
model.study('std4').feature.copy('param1', 'std1/param');
model.study('std4').feature('stat').set('useadvanceddisable', true);
model.study('std4').feature('stat').setEntry('discretization', 'solid', 'disc1');
model.study('std4').feature('stat').set('useadvanceddisable', false);
model.study.create('std5');
model.study('std5').create('stat', 'Stationary');
model.study('std5').feature('stat').setSolveFor('/physics/solid', true);
model.study('std5').label('Study Tria Quadratic');
model.study('std5').feature.copy('param1', 'std1/param');
model.study.create('std6');
model.study('std6').create('stat', 'Stationary');
model.study('std6').feature('stat').setSolveFor('/physics/solid', true);
model.study('std6').label('Study Tria Cubic');
model.study('std6').feature.copy('param1', 'std1/param');
model.study('std6').feature('stat').set('useadvanceddisable', true);
model.study('std6').feature('stat').setEntry('discretization', 'solid', 'disc2');
model.study.create('std7');
model.study('std7').create('stat', 'Stationary');
model.study('std7').feature('stat').setSolveFor('/physics/solid', true);
model.study('std7').label('Study Quad Linear Reduced');
model.study('std7').feature.copy('param1', 'std1/param');
model.study('std7').feature('stat').set('useadvanceddisable', true);
model.study('std7').feature('stat').set('disabledphysics', {'solid/lemm2'});
model.study('std7').feature('stat').setEntry('discretization', 'solid', 'disc1');
model.study('std7').feature('stat').setEntry('mesh', 'geom1', 'mesh1');
model.study.create('std8');
model.study('std8').create('stat', 'Stationary');
model.study('std8').feature('stat').setSolveFor('/physics/solid', true);
model.study('std8').label('Study Quad Quadratic Reduced');
model.study('std8').feature.copy('param1', 'std1/param');
model.study('std8').feature('stat').set('useadvanceddisable', true);
model.study('std8').feature('stat').set('disabledphysics', {'solid/lemm2'});
model.study('std8').feature('stat').setEntry('mesh', 'geom1', 'mesh1');
model.study.create('std9');
model.study('std9').create('stat', 'Stationary');
model.study('std9').feature('stat').setSolveFor('/physics/solid', true);
model.study('std9').label('Study Quad Cubic Reduced');
model.study('std9').feature.copy('param1', 'std1/param');
model.study('std9').feature('stat').set('useadvanceddisable', true);
model.study('std9').feature('stat').set('disabledphysics', {'solid/lemm2'});
model.study('std9').feature('stat').setEntry('discretization', 'solid', 'disc2');
model.study('std9').feature('stat').setEntry('mesh', 'geom1', 'mesh1');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'div'});
model.batch('p1').set('plistarr', {'1 2 3 4 8 12 16 24 32 48 64'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol.create('sol2');
model.sol('sol2').study('std1');
model.sol('sol2').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').run('compute');

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset2');
model.result('pg1').setIndex('looplevel', 11, 0);
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('surf1').set('threshold', 'manual');
model.result('pg1').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg1').feature('surf1').set('colortable', 'Rainbow');
model.result('pg1').feature('surf1').set('colortabletrans', 'none');
model.result('pg1').feature('surf1').set('colorscalemode', 'linear');
model.result('pg1').feature('surf1').set('resolution', 'normal');
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg1').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg1').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg1').run;

model.study('std2').setGenPlots(false);

model.sol.create('sol14');
model.sol('sol14').study('std2');
model.sol('sol14').create('st1', 'StudyStep');
model.sol('sol14').feature('st1').set('study', 'std2');
model.sol('sol14').feature('st1').set('studystep', 'stat');
model.sol('sol14').create('v1', 'Variables');
model.sol('sol14').feature('v1').set('control', 'stat');
model.sol('sol14').create('s1', 'Stationary');
model.sol('sol14').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol14').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol14').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol14').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol14').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol14').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol14').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol14').feature('s1').feature.remove('fcDef');
model.sol('sol14').attach('std2');

model.batch.create('p2', 'Parametric');
model.batch('p2').study('std2');
model.batch('p2').create('so1', 'Solutionseq');
model.batch('p2').feature('so1').set('seq', 'sol14');
model.batch('p2').feature('so1').set('store', 'on');
model.batch('p2').feature('so1').set('clear', 'on');
model.batch('p2').feature('so1').set('psol', 'none');
model.batch('p2').set('pname', {'div'});
model.batch('p2').set('plistarr', {'1 2 3 4 8 12 16 24 32 48 64'});
model.batch('p2').set('sweeptype', 'sparse');
model.batch('p2').set('probesel', 'all');
model.batch('p2').set('probes', {});
model.batch('p2').set('plot', 'off');
model.batch('p2').set('err', 'on');
model.batch('p2').attach('std2');
model.batch('p2').set('control', 'param1');

model.sol.create('sol15');
model.sol('sol15').study('std2');
model.sol('sol15').label('Parametric Solutions 2');

model.batch('p2').feature('so1').set('psol', 'sol15');
model.batch('p2').run('compute');

model.study('std3').setGenPlots(false);

model.sol.create('sol27');
model.sol('sol27').study('std3');
model.sol('sol27').create('st1', 'StudyStep');
model.sol('sol27').feature('st1').set('study', 'std3');
model.sol('sol27').feature('st1').set('studystep', 'stat');
model.sol('sol27').create('v1', 'Variables');
model.sol('sol27').feature('v1').set('control', 'stat');
model.sol('sol27').create('s1', 'Stationary');
model.sol('sol27').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol27').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol27').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol27').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol27').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol27').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol27').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol27').feature('s1').feature.remove('fcDef');
model.sol('sol27').attach('std3');

model.batch.create('p3', 'Parametric');
model.batch('p3').study('std3');
model.batch('p3').create('so1', 'Solutionseq');
model.batch('p3').feature('so1').set('seq', 'sol27');
model.batch('p3').feature('so1').set('store', 'on');
model.batch('p3').feature('so1').set('clear', 'on');
model.batch('p3').feature('so1').set('psol', 'none');
model.batch('p3').set('pname', {'div'});
model.batch('p3').set('plistarr', {'1 2 3 4 8 12 16 24 32 48 64'});
model.batch('p3').set('sweeptype', 'sparse');
model.batch('p3').set('probesel', 'all');
model.batch('p3').set('probes', {});
model.batch('p3').set('plot', 'off');
model.batch('p3').set('err', 'on');
model.batch('p3').attach('std3');
model.batch('p3').set('control', 'param1');

model.sol.create('sol28');
model.sol('sol28').study('std3');
model.sol('sol28').label('Parametric Solutions 3');

model.batch('p3').feature('so1').set('psol', 'sol28');
model.batch('p3').run('compute');

model.study('std4').setGenPlots(false);

model.sol.create('sol40');
model.sol('sol40').study('std4');
model.sol('sol40').create('st1', 'StudyStep');
model.sol('sol40').feature('st1').set('study', 'std4');
model.sol('sol40').feature('st1').set('studystep', 'stat');
model.sol('sol40').create('v1', 'Variables');
model.sol('sol40').feature('v1').set('control', 'stat');
model.sol('sol40').create('s1', 'Stationary');
model.sol('sol40').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol40').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol40').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol40').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol40').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol40').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol40').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol40').feature('s1').feature.remove('fcDef');
model.sol('sol40').attach('std4');

model.batch.create('p4', 'Parametric');
model.batch('p4').study('std4');
model.batch('p4').create('so1', 'Solutionseq');
model.batch('p4').feature('so1').set('seq', 'sol40');
model.batch('p4').feature('so1').set('store', 'on');
model.batch('p4').feature('so1').set('clear', 'on');
model.batch('p4').feature('so1').set('psol', 'none');
model.batch('p4').set('pname', {'div'});
model.batch('p4').set('plistarr', {'1 2 3 4 8 12 16 24 32 48 64'});
model.batch('p4').set('sweeptype', 'sparse');
model.batch('p4').set('probesel', 'all');
model.batch('p4').set('probes', {});
model.batch('p4').set('plot', 'off');
model.batch('p4').set('err', 'on');
model.batch('p4').attach('std4');
model.batch('p4').set('control', 'param1');

model.sol.create('sol41');
model.sol('sol41').study('std4');
model.sol('sol41').label('Parametric Solutions 4');

model.batch('p4').feature('so1').set('psol', 'sol41');
model.batch('p4').run('compute');

model.study('std5').setGenPlots(false);

model.sol.create('sol53');
model.sol('sol53').study('std5');
model.sol('sol53').create('st1', 'StudyStep');
model.sol('sol53').feature('st1').set('study', 'std5');
model.sol('sol53').feature('st1').set('studystep', 'stat');
model.sol('sol53').create('v1', 'Variables');
model.sol('sol53').feature('v1').set('control', 'stat');
model.sol('sol53').create('s1', 'Stationary');
model.sol('sol53').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol53').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol53').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol53').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol53').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol53').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol53').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol53').feature('s1').feature.remove('fcDef');
model.sol('sol53').attach('std5');

model.batch.create('p5', 'Parametric');
model.batch('p5').study('std5');
model.batch('p5').create('so1', 'Solutionseq');
model.batch('p5').feature('so1').set('seq', 'sol53');
model.batch('p5').feature('so1').set('store', 'on');
model.batch('p5').feature('so1').set('clear', 'on');
model.batch('p5').feature('so1').set('psol', 'none');
model.batch('p5').set('pname', {'div'});
model.batch('p5').set('plistarr', {'1 2 3 4 8 12 16 24 32 48 64'});
model.batch('p5').set('sweeptype', 'sparse');
model.batch('p5').set('probesel', 'all');
model.batch('p5').set('probes', {});
model.batch('p5').set('plot', 'off');
model.batch('p5').set('err', 'on');
model.batch('p5').attach('std5');
model.batch('p5').set('control', 'param1');

model.sol.create('sol54');
model.sol('sol54').study('std5');
model.sol('sol54').label('Parametric Solutions 5');

model.batch('p5').feature('so1').set('psol', 'sol54');
model.batch('p5').run('compute');

model.study('std6').setGenPlots(false);

model.sol.create('sol66');
model.sol('sol66').study('std6');
model.sol('sol66').create('st1', 'StudyStep');
model.sol('sol66').feature('st1').set('study', 'std6');
model.sol('sol66').feature('st1').set('studystep', 'stat');
model.sol('sol66').create('v1', 'Variables');
model.sol('sol66').feature('v1').set('control', 'stat');
model.sol('sol66').create('s1', 'Stationary');
model.sol('sol66').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol66').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol66').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol66').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol66').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol66').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol66').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol66').feature('s1').feature.remove('fcDef');
model.sol('sol66').attach('std6');

model.batch.create('p6', 'Parametric');
model.batch('p6').study('std6');
model.batch('p6').create('so1', 'Solutionseq');
model.batch('p6').feature('so1').set('seq', 'sol66');
model.batch('p6').feature('so1').set('store', 'on');
model.batch('p6').feature('so1').set('clear', 'on');
model.batch('p6').feature('so1').set('psol', 'none');
model.batch('p6').set('pname', {'div'});
model.batch('p6').set('plistarr', {'1 2 3 4 8 12 16 24 32 48 64'});
model.batch('p6').set('sweeptype', 'sparse');
model.batch('p6').set('probesel', 'all');
model.batch('p6').set('probes', {});
model.batch('p6').set('plot', 'off');
model.batch('p6').set('err', 'on');
model.batch('p6').attach('std6');
model.batch('p6').set('control', 'param1');

model.sol.create('sol67');
model.sol('sol67').study('std6');
model.sol('sol67').label('Parametric Solutions 6');

model.batch('p6').feature('so1').set('psol', 'sol67');
model.batch('p6').run('compute');

model.study('std7').setGenPlots(false);

model.sol.create('sol79');
model.sol('sol79').study('std7');
model.sol('sol79').create('st1', 'StudyStep');
model.sol('sol79').feature('st1').set('study', 'std7');
model.sol('sol79').feature('st1').set('studystep', 'stat');
model.sol('sol79').create('v1', 'Variables');
model.sol('sol79').feature('v1').set('control', 'stat');
model.sol('sol79').create('s1', 'Stationary');
model.sol('sol79').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol79').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol79').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol79').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol79').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol79').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol79').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol79').feature('s1').feature.remove('fcDef');
model.sol('sol79').attach('std7');

model.batch.create('p7', 'Parametric');
model.batch('p7').study('std7');
model.batch('p7').create('so1', 'Solutionseq');
model.batch('p7').feature('so1').set('seq', 'sol79');
model.batch('p7').feature('so1').set('store', 'on');
model.batch('p7').feature('so1').set('clear', 'on');
model.batch('p7').feature('so1').set('psol', 'none');
model.batch('p7').set('pname', {'div'});
model.batch('p7').set('plistarr', {'1 2 3 4 8 12 16 24 32 48 64'});
model.batch('p7').set('sweeptype', 'sparse');
model.batch('p7').set('probesel', 'all');
model.batch('p7').set('probes', {});
model.batch('p7').set('plot', 'off');
model.batch('p7').set('err', 'on');
model.batch('p7').attach('std7');
model.batch('p7').set('control', 'param1');

model.sol.create('sol80');
model.sol('sol80').study('std7');
model.sol('sol80').label('Parametric Solutions 7');

model.batch('p7').feature('so1').set('psol', 'sol80');
model.batch('p7').run('compute');

model.study('std8').setGenPlots(false);

model.sol.create('sol92');
model.sol('sol92').study('std8');
model.sol('sol92').create('st1', 'StudyStep');
model.sol('sol92').feature('st1').set('study', 'std8');
model.sol('sol92').feature('st1').set('studystep', 'stat');
model.sol('sol92').create('v1', 'Variables');
model.sol('sol92').feature('v1').set('control', 'stat');
model.sol('sol92').create('s1', 'Stationary');
model.sol('sol92').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol92').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol92').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol92').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol92').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol92').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol92').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol92').feature('s1').feature.remove('fcDef');
model.sol('sol92').attach('std8');

model.batch.create('p8', 'Parametric');
model.batch('p8').study('std8');
model.batch('p8').create('so1', 'Solutionseq');
model.batch('p8').feature('so1').set('seq', 'sol92');
model.batch('p8').feature('so1').set('store', 'on');
model.batch('p8').feature('so1').set('clear', 'on');
model.batch('p8').feature('so1').set('psol', 'none');
model.batch('p8').set('pname', {'div'});
model.batch('p8').set('plistarr', {'1 2 3 4 8 12 16 24 32 48 64'});
model.batch('p8').set('sweeptype', 'sparse');
model.batch('p8').set('probesel', 'all');
model.batch('p8').set('probes', {});
model.batch('p8').set('plot', 'off');
model.batch('p8').set('err', 'on');
model.batch('p8').attach('std8');
model.batch('p8').set('control', 'param1');

model.sol.create('sol93');
model.sol('sol93').study('std8');
model.sol('sol93').label('Parametric Solutions 8');

model.batch('p8').feature('so1').set('psol', 'sol93');
model.batch('p8').run('compute');

model.study('std9').setGenPlots(false);

model.sol.create('sol105');
model.sol('sol105').study('std9');
model.sol('sol105').create('st1', 'StudyStep');
model.sol('sol105').feature('st1').set('study', 'std9');
model.sol('sol105').feature('st1').set('studystep', 'stat');
model.sol('sol105').create('v1', 'Variables');
model.sol('sol105').feature('v1').set('control', 'stat');
model.sol('sol105').create('s1', 'Stationary');
model.sol('sol105').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol105').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol105').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol105').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol105').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol105').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol105').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol105').feature('s1').feature.remove('fcDef');
model.sol('sol105').attach('std9');

model.batch.create('p9', 'Parametric');
model.batch('p9').study('std9');
model.batch('p9').create('so1', 'Solutionseq');
model.batch('p9').feature('so1').set('seq', 'sol105');
model.batch('p9').feature('so1').set('store', 'on');
model.batch('p9').feature('so1').set('clear', 'on');
model.batch('p9').feature('so1').set('psol', 'none');
model.batch('p9').set('pname', {'div'});
model.batch('p9').set('plistarr', {'1 2 3 4 8 12 16 24 32 48 64'});
model.batch('p9').set('sweeptype', 'sparse');
model.batch('p9').set('probesel', 'all');
model.batch('p9').set('probes', {});
model.batch('p9').set('plot', 'off');
model.batch('p9').set('err', 'on');
model.batch('p9').attach('std9');
model.batch('p9').set('control', 'param1');

model.sol.create('sol106');
model.sol('sol106').study('std9');
model.sol('sol106').label('Parametric Solutions 9');

model.batch('p9').feature('so1').set('psol', 'sol106');
model.batch('p9').run('compute');

model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').run;
model.result('pg2').label('Mesh Convergence sy at D');
model.result('pg2').create('ptgr1', 'PointGraph');
model.result('pg2').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg2').feature('ptgr1').set('linewidth', 'preference');
model.result('pg2').feature('ptgr1').selection.set([11]);
model.result('pg2').feature('ptgr1').set('data', 'dset2');
model.result('pg2').feature('ptgr1').set('expr', 'abs(solid.sGpy/sy_ref-1)');
model.result('pg2').feature('ptgr1').set('xdata', 'expr');
model.result('pg2').feature('ptgr1').set('xdataexpr', 'div/0.417');
model.result('pg2').feature('ptgr1').set('linemarker', 'asterisk');
model.result('pg2').feature('ptgr1').set('legend', true);
model.result('pg2').feature('ptgr1').set('legendmethod', 'manual');
model.result('pg2').feature('ptgr1').setIndex('legends', '1st order quad', 0);
model.result('pg2').feature.duplicate('ptgr2', 'ptgr1');
model.result('pg2').run;
model.result('pg2').feature('ptgr2').set('data', 'dset4');
model.result('pg2').feature('ptgr2').setIndex('legends', '2nd order quad', 0);
model.result('pg2').feature.duplicate('ptgr3', 'ptgr2');
model.result('pg2').run;
model.result('pg2').feature('ptgr3').set('data', 'dset6');
model.result('pg2').feature('ptgr3').setIndex('legends', '3rd order quad', 0);
model.result('pg2').feature.duplicate('ptgr4', 'ptgr3');
model.result('pg2').run;
model.result('pg2').feature('ptgr4').set('data', 'dset8');
model.result('pg2').feature('ptgr4').set('linestyle', 'dashdot');
model.result('pg2').feature('ptgr4').set('linecolor', 'cyclereset');
model.result('pg2').feature('ptgr4').set('linemarker', 'circle');
model.result('pg2').feature('ptgr4').setIndex('legends', '1st order tria', 0);
model.result('pg2').feature.duplicate('ptgr5', 'ptgr4');
model.result('pg2').run;
model.result('pg2').feature('ptgr5').set('data', 'dset10');
model.result('pg2').feature('ptgr5').set('linecolor', 'cycle');
model.result('pg2').feature('ptgr5').setIndex('legends', '2nd order tria', 0);
model.result('pg2').feature.duplicate('ptgr6', 'ptgr5');
model.result('pg2').run;
model.result('pg2').feature('ptgr6').set('data', 'dset12');
model.result('pg2').feature('ptgr6').setIndex('legends', '3rd order tria', 0);
model.result('pg2').feature.duplicate('ptgr7', 'ptgr6');
model.result('pg2').run;
model.result('pg2').feature('ptgr7').set('data', 'dset14');
model.result('pg2').feature('ptgr7').set('linestyle', 'dotted');
model.result('pg2').feature('ptgr7').set('linecolor', 'cyclereset');
model.result('pg2').feature('ptgr7').set('linemarker', 'plus');
model.result('pg2').feature('ptgr7').setIndex('legends', '1st order quad, red', 0);
model.result('pg2').feature.duplicate('ptgr8', 'ptgr7');
model.result('pg2').run;
model.result('pg2').feature('ptgr8').set('data', 'dset16');
model.result('pg2').feature('ptgr8').set('linecolor', 'cycle');
model.result('pg2').feature('ptgr8').setIndex('legends', '2nd order quad, red', 0);
model.result('pg2').feature.duplicate('ptgr9', 'ptgr8');
model.result('pg2').run;
model.result('pg2').feature('ptgr9').set('data', 'dset18');
model.result('pg2').feature('ptgr9').setIndex('legends', '3rd order quad, red', 0);
model.result('pg2').run;
model.result('pg2').set('xlabelactive', true);
model.result('pg2').set('xlabel', '1/h (1/m)');
model.result('pg2').set('ylabelactive', true);
model.result('pg2').set('ylabel', 'Relative error (1)');
model.result('pg2').set('titletype', 'none');
model.result('pg2').set('xlog', true);
model.result('pg2').set('ylog', true);
model.result('pg2').set('legendpos', 'lowerleft');
model.result('pg2').run;
model.result.duplicate('pg3', 'pg2');
model.result('pg3').run;
model.result('pg3').label('Mesh Convergence sx at D');
model.result('pg3').feature('ptgr1').set('expr', 'abs(solid.sGpx/sy_ref)');
model.result('pg3').feature('ptgr1').set('descr', 'abs(solid.sGpx/sy_ref)');
model.result('pg3').feature('ptgr2').set('expr', 'abs(solid.sGpx/sy_ref)');
model.result('pg3').feature('ptgr2').set('descr', 'abs(solid.sGpx/sy_ref)');
model.result('pg3').feature('ptgr3').set('expr', 'abs(solid.sGpx/sy_ref)');
model.result('pg3').feature('ptgr3').set('descr', 'abs(solid.sGpx/sy_ref)');
model.result('pg3').feature('ptgr4').set('expr', 'abs(solid.sGpx/sy_ref)');
model.result('pg3').feature('ptgr4').set('descr', 'abs(solid.sGpx/sy_ref)');
model.result('pg3').feature('ptgr5').set('expr', 'abs(solid.sGpx/sy_ref)');
model.result('pg3').feature('ptgr5').set('descr', 'abs(solid.sGpx/sy_ref)');
model.result('pg3').feature('ptgr6').set('expr', 'abs(solid.sGpx/sy_ref)');
model.result('pg3').feature('ptgr6').set('descr', 'abs(solid.sGpx/sy_ref)');
model.result('pg3').feature('ptgr7').set('expr', 'abs(solid.sGpx/sy_ref)');
model.result('pg3').feature('ptgr7').set('descr', 'abs(solid.sGpx/sy_ref)');
model.result('pg3').feature('ptgr8').set('expr', 'abs(solid.sGpx/sy_ref)');
model.result('pg3').feature('ptgr8').set('descr', 'abs(solid.sGpx/sy_ref)');
model.result('pg3').feature('ptgr9').set('expr', 'abs(solid.sGpx/sy_ref)');
model.result('pg3').feature('ptgr9').set('descr', 'abs(solid.sGpx/sy_ref)');
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').run;
model.result.duplicate('pg4', 'pg3');
model.result('pg4').run;
model.result('pg4').label('Mesh Convergence sxy at D');
model.result('pg4').feature('ptgr1').set('expr', 'abs(solid.sGpxy/sy_ref)');
model.result('pg4').feature('ptgr1').set('descr', 'abs(solid.sGpxy/sy_ref)');
model.result('pg4').feature('ptgr2').set('expr', 'abs(solid.sGpxy/sy_ref)');
model.result('pg4').feature('ptgr2').set('descr', 'abs(solid.sGpxy/sy_ref)');
model.result('pg4').feature('ptgr3').set('expr', 'abs(solid.sGpxy/sy_ref)');
model.result('pg4').feature('ptgr3').set('descr', 'abs(solid.sGpxy/sy_ref)');
model.result('pg4').feature('ptgr4').set('expr', 'abs(solid.sGpxy/sy_ref)');
model.result('pg4').feature('ptgr4').set('descr', 'abs(solid.sGpxy/sy_ref)');
model.result('pg4').feature('ptgr5').set('expr', 'abs(solid.sGpxy/sy_ref)');
model.result('pg4').feature('ptgr5').set('descr', 'abs(solid.sGpxy/sy_ref)');
model.result('pg4').feature('ptgr6').set('expr', 'abs(solid.sGpxy/sy_ref)');
model.result('pg4').feature('ptgr6').set('descr', 'abs(solid.sGpxy/sy_ref)');
model.result('pg4').feature('ptgr7').set('expr', 'abs(solid.sGpxy/sy_ref)');
model.result('pg4').feature('ptgr7').set('descr', 'abs(solid.sGpxy/sy_ref)');
model.result('pg4').feature('ptgr8').set('expr', 'abs(solid.sGpxy/sy_ref)');
model.result('pg4').feature('ptgr8').set('descr', 'abs(solid.sGpxy/sy_ref)');
model.result('pg4').feature('ptgr9').set('expr', 'abs(solid.sGpxy/sy_ref)');
model.result('pg4').feature('ptgr9').set('descr', 'abs(solid.sGpxy/sy_ref)');
model.result('pg4').run;
model.result('pg4').run;
model.result('pg2').run;
model.result.duplicate('pg5', 'pg2');
model.result('pg5').run;
model.result('pg5').label('Mesh Convergence sy at D (by DOFs)');
model.result('pg5').run;
model.result('pg5').feature('ptgr1').set('xdataexpr', 'numberofdofs');
model.result('pg5').feature('ptgr1').set('xdatadescr', 'numberofdofs');
model.result('pg5').feature('ptgr2').set('xdataexpr', 'numberofdofs');
model.result('pg5').feature('ptgr2').set('xdatadescr', 'numberofdofs');
model.result('pg5').feature('ptgr3').set('xdataexpr', 'numberofdofs');
model.result('pg5').feature('ptgr3').set('xdatadescr', 'numberofdofs');
model.result('pg5').feature('ptgr4').set('xdataexpr', 'numberofdofs');
model.result('pg5').feature('ptgr4').set('xdatadescr', 'numberofdofs');
model.result('pg5').feature('ptgr5').set('xdataexpr', 'numberofdofs');
model.result('pg5').feature('ptgr5').set('xdatadescr', 'numberofdofs');
model.result('pg5').feature('ptgr6').set('xdataexpr', 'numberofdofs');
model.result('pg5').feature('ptgr6').set('xdatadescr', 'numberofdofs');
model.result('pg5').feature('ptgr7').set('xdataexpr', 'numberofdofs');
model.result('pg5').feature('ptgr7').set('xdatadescr', 'numberofdofs');
model.result('pg5').feature('ptgr8').set('xdataexpr', 'numberofdofs');
model.result('pg5').feature('ptgr8').set('xdatadescr', 'numberofdofs');
model.result('pg5').feature('ptgr9').set('xdataexpr', 'numberofdofs');
model.result('pg5').feature('ptgr9').set('xdatadescr', 'numberofdofs');
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').set('xlabel', 'Number of degrees of freedom');
model.result('pg5').run;
model.result.evaluationGroup.create('eg1', 'EvaluationGroup');
model.result.evaluationGroup('eg1').set('transpose', true);
model.result.evaluationGroup('eg1').create('pev1', 'EvalPoint');
model.result.evaluationGroup('eg1').feature('pev1').selection.set([11]);
model.result.evaluationGroup('eg1').feature('pev1').set('data', 'dset2');
model.result.evaluationGroup('eg1').feature('pev1').setIndex('looplevelinput', 'manual', 0);
model.result.evaluationGroup('eg1').feature('pev1').setIndex('looplevel', [1 2], 0);
model.result.evaluationGroup('eg1').feature('pev1').set('expr', {'solid.sGpyy'});
model.result.evaluationGroup('eg1').feature('pev1').set('descr', {'Stress tensor, yy-component'});
model.result.evaluationGroup('eg1').feature('pev1').set('unit', {'N/m^2'});
model.result.evaluationGroup('eg1').feature('pev1').setIndex('unit', 'MPa', 0);
model.result.evaluationGroup('eg1').feature('pev1').setIndex('descr', 'Stress, quad linear', 0);
model.result.evaluationGroup('eg1').feature('pev1').setIndex('expr', '(solid.sGpyy-sy_ref)/sy_ref', 1);
model.result.evaluationGroup('eg1').feature('pev1').setIndex('unit', '%', 1);
model.result.evaluationGroup('eg1').feature('pev1').setIndex('descr', 'Relative error', 1);
model.result.evaluationGroup('eg1').feature.duplicate('pev2', 'pev1');
model.result.evaluationGroup('eg1').feature('pev2').set('data', 'dset4');
model.result.evaluationGroup('eg1').feature('pev2').setIndex('unit', 'MPa', 0);
model.result.evaluationGroup('eg1').feature('pev2').setIndex('descr', 'Stress, quad quadratic', 0);
model.result.evaluationGroup('eg1').feature.duplicate('pev3', 'pev2');
model.result.evaluationGroup('eg1').feature('pev3').set('data', 'dset6');
model.result.evaluationGroup('eg1').feature('pev3').setIndex('unit', 'MPa', 0);
model.result.evaluationGroup('eg1').feature('pev3').setIndex('descr', 'Stress, quad cubic', 0);
model.result.evaluationGroup('eg1').feature.duplicate('pev4', 'pev3');
model.result.evaluationGroup('eg1').feature('pev4').set('data', 'dset8');
model.result.evaluationGroup('eg1').feature('pev4').setIndex('unit', 'MPa', 0);
model.result.evaluationGroup('eg1').feature('pev4').setIndex('descr', 'Stress, tria linear', 0);
model.result.evaluationGroup('eg1').feature.duplicate('pev5', 'pev4');
model.result.evaluationGroup('eg1').feature('pev5').set('data', 'dset10');
model.result.evaluationGroup('eg1').feature('pev5').setIndex('unit', 'MPa', 0);
model.result.evaluationGroup('eg1').feature('pev5').setIndex('descr', 'Stress, tria quadratic', 0);
model.result.evaluationGroup('eg1').feature.duplicate('pev6', 'pev5');
model.result.evaluationGroup('eg1').feature('pev6').set('data', 'dset12');
model.result.evaluationGroup('eg1').feature('pev6').setIndex('unit', 'MPa', 0);
model.result.evaluationGroup('eg1').feature('pev6').setIndex('descr', 'Stress, tria cubic', 0);
model.result.evaluationGroup('eg1').feature.duplicate('pev7', 'pev6');
model.result.evaluationGroup('eg1').feature('pev7').set('data', 'dset14');
model.result.evaluationGroup('eg1').feature('pev7').setIndex('unit', 'MPa', 0);
model.result.evaluationGroup('eg1').feature('pev7').setIndex('descr', 'Stress, quad linear, red', 0);
model.result.evaluationGroup('eg1').feature.duplicate('pev8', 'pev7');
model.result.evaluationGroup('eg1').feature('pev8').set('data', 'dset16');
model.result.evaluationGroup('eg1').feature('pev8').setIndex('unit', 'MPa', 0);
model.result.evaluationGroup('eg1').feature('pev8').setIndex('descr', 'Stress, quad quadratic, red', 0);
model.result.evaluationGroup('eg1').feature.duplicate('pev9', 'pev8');
model.result.evaluationGroup('eg1').feature('pev9').set('data', 'dset18');
model.result.evaluationGroup('eg1').feature('pev9').setIndex('unit', 'MPa', 0);
model.result.evaluationGroup('eg1').feature('pev9').setIndex('descr', 'Stress, quad cubic, red', 0);
model.result.evaluationGroup('eg1').run;
model.result('pg1').run;
model.result('pg1').set('data', 'dset4');
model.result('pg1').setIndex('looplevel', 4, 0);
model.result('pg1').run;
model.result('pg1').feature('surf1').set('expr', 'solid.sGpyy');
model.result('pg1').feature('surf1').set('descr', 'Stress tensor, yy-component');
model.result('pg1').feature('surf1').set('unit', 'MPa');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').set('showlegendsmaxmin', true);

model.title('Stress Analysis of an Elliptic Membrane');

model.description('This is a benchmark problem for a plane stress problem. The accuracy of the computed stress concentration is evaluated, and a mesh convergence study is performed for different element types.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;
model.sol('sol8').clearSolutionData;
model.sol('sol9').clearSolutionData;
model.sol('sol10').clearSolutionData;
model.sol('sol11').clearSolutionData;
model.sol('sol12').clearSolutionData;
model.sol('sol13').clearSolutionData;
model.sol('sol14').clearSolutionData;
model.sol('sol15').clearSolutionData;
model.sol('sol16').clearSolutionData;
model.sol('sol17').clearSolutionData;
model.sol('sol18').clearSolutionData;
model.sol('sol19').clearSolutionData;
model.sol('sol20').clearSolutionData;
model.sol('sol21').clearSolutionData;
model.sol('sol22').clearSolutionData;
model.sol('sol23').clearSolutionData;
model.sol('sol24').clearSolutionData;
model.sol('sol25').clearSolutionData;
model.sol('sol26').clearSolutionData;
model.sol('sol27').clearSolutionData;
model.sol('sol28').clearSolutionData;
model.sol('sol29').clearSolutionData;
model.sol('sol30').clearSolutionData;
model.sol('sol31').clearSolutionData;
model.sol('sol32').clearSolutionData;
model.sol('sol33').clearSolutionData;
model.sol('sol34').clearSolutionData;
model.sol('sol35').clearSolutionData;
model.sol('sol36').clearSolutionData;
model.sol('sol37').clearSolutionData;
model.sol('sol38').clearSolutionData;
model.sol('sol39').clearSolutionData;
model.sol('sol40').clearSolutionData;
model.sol('sol41').clearSolutionData;
model.sol('sol42').clearSolutionData;
model.sol('sol43').clearSolutionData;
model.sol('sol44').clearSolutionData;
model.sol('sol45').clearSolutionData;
model.sol('sol46').clearSolutionData;
model.sol('sol47').clearSolutionData;
model.sol('sol48').clearSolutionData;
model.sol('sol49').clearSolutionData;
model.sol('sol50').clearSolutionData;
model.sol('sol51').clearSolutionData;
model.sol('sol52').clearSolutionData;
model.sol('sol53').clearSolutionData;
model.sol('sol54').clearSolutionData;
model.sol('sol55').clearSolutionData;
model.sol('sol56').clearSolutionData;
model.sol('sol57').clearSolutionData;
model.sol('sol58').clearSolutionData;
model.sol('sol59').clearSolutionData;
model.sol('sol60').clearSolutionData;
model.sol('sol61').clearSolutionData;
model.sol('sol62').clearSolutionData;
model.sol('sol63').clearSolutionData;
model.sol('sol64').clearSolutionData;
model.sol('sol65').clearSolutionData;
model.sol('sol66').clearSolutionData;
model.sol('sol67').clearSolutionData;
model.sol('sol68').clearSolutionData;
model.sol('sol69').clearSolutionData;
model.sol('sol70').clearSolutionData;
model.sol('sol71').clearSolutionData;
model.sol('sol72').clearSolutionData;
model.sol('sol73').clearSolutionData;
model.sol('sol74').clearSolutionData;
model.sol('sol75').clearSolutionData;
model.sol('sol76').clearSolutionData;
model.sol('sol77').clearSolutionData;
model.sol('sol78').clearSolutionData;
model.sol('sol79').clearSolutionData;
model.sol('sol80').clearSolutionData;
model.sol('sol81').clearSolutionData;
model.sol('sol82').clearSolutionData;
model.sol('sol83').clearSolutionData;
model.sol('sol84').clearSolutionData;
model.sol('sol85').clearSolutionData;
model.sol('sol86').clearSolutionData;
model.sol('sol87').clearSolutionData;
model.sol('sol88').clearSolutionData;
model.sol('sol89').clearSolutionData;
model.sol('sol90').clearSolutionData;
model.sol('sol91').clearSolutionData;
model.sol('sol92').clearSolutionData;
model.sol('sol93').clearSolutionData;
model.sol('sol94').clearSolutionData;
model.sol('sol95').clearSolutionData;
model.sol('sol96').clearSolutionData;
model.sol('sol97').clearSolutionData;
model.sol('sol98').clearSolutionData;
model.sol('sol99').clearSolutionData;
model.sol('sol100').clearSolutionData;
model.sol('sol101').clearSolutionData;
model.sol('sol102').clearSolutionData;
model.sol('sol103').clearSolutionData;
model.sol('sol104').clearSolutionData;
model.sol('sol105').clearSolutionData;
model.sol('sol106').clearSolutionData;
model.sol('sol107').clearSolutionData;
model.sol('sol108').clearSolutionData;
model.sol('sol109').clearSolutionData;
model.sol('sol110').clearSolutionData;
model.sol('sol111').clearSolutionData;
model.sol('sol112').clearSolutionData;
model.sol('sol113').clearSolutionData;
model.sol('sol114').clearSolutionData;
model.sol('sol115').clearSolutionData;
model.sol('sol116').clearSolutionData;
model.sol('sol117').clearSolutionData;

model.label('elliptic_membrane.mph');

model.modelNode.label('Components');

out = model;
