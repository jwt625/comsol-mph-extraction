function out = model
%
% transient_negative_mobility.m
%
% Model exported on May 26 2025, 21:32 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Plasma_Module/Two-Term_Boltzmann_Equation');

model.modelNode.create('comp1', true);

model.physics.create('be', 'BoltzmannEquation');
model.physics('be').model('comp1');

model.study.create('std1');
model.study('std1').create('ref', 'ReducedElectricFields');
model.study('std1').feature('ref').set('solnum', 'auto');
model.study('std1').feature('ref').set('notsolnum', 'auto');
model.study('std1').feature('ref').set('outputmap', {});
model.study('std1').feature('ref').setSolveFor('/physics/be', true);

model.physics('be').prop('EEDFSettings').set('eedf', 'BoltzmannTwoTerm');
model.physics('be').prop('EEDFSettings').set('eecolls', true);
model.physics('be').prop('EEDFSettings').set('NelemEEDF', 300);
model.physics('be').prop('EEDFSettings').set('RelemEEDF', 30);
model.physics('be').prop('EEDFSettings').set('emax', 30);
model.physics('be').create('xsec1', 'CrossSectionImport', -1);
model.physics('be').feature('xsec1').set('Filepath', 'Xe_xsecs.txt');
model.physics('be').feature('xsec1').runCommand('importData');

model.param.set('Tgas', '300[K]');
model.param.descr('Tgas', 'Gas temperature');
model.param.set('P0', '1[atm]');
model.param.descr('P0', 'Gas pressure');
model.param.set('Ngas', 'P0/(k_B_const*Tgas)');
model.param.descr('Ngas', 'Gas density');
model.param.set('Beta', '1e-7');
model.param.descr('Beta', 'Ionization degree');
model.param.set('ne', 'Beta*Ngas+eps');
model.param.descr('ne', 'Electron density');

model.func.create('rect1', 'Rectangle');
model.func('rect1').model('comp1');
model.func('rect1').set('lower', -5);
model.func('rect1').set('upper', 5);
model.func('rect1').set('smooth', 3);

model.physics('be').feature('bmdl1').set('Tg', 'Tgas');
model.physics('be').feature('bmdl1').set('ne', 'ne');
model.physics('be').feature('bmdl1').set('beta', 'Beta');
model.physics('be').feature('bmdl1').set('ebar', false);
model.physics('be').feature('bmdl1').set('TransportPropPG', false);
model.physics('be').feature('bmdl1').set('RateCoefPG', false);
model.physics('be').feature('bmdl1').set('ebar', true);
model.physics('be').feature('bmdl1').set('PlotAsAFunctionOf', 'EN');

model.study('std1').label('Stationary');
model.study('std1').feature('ref').set('plist', '10^{range(log10(0.1),1/7,log10(10))}[Td]');
model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'Tgas', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'K', 0);
model.study('std1').feature('param').setIndex('pname', 'Tgas', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'K', 0);
model.study('std1').feature('param').setIndex('pname', 'Beta', 0);
model.study('std1').feature('param').setIndex('plistarr', '0 1e-7 1e-6 1e-5', 0);
model.study('std1').feature('param').setIndex('punit', '', 0);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'ref');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'ref');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'10^{range(log10(0.1),1/7,log10(10))}[Td]'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'V*m^2'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'Default');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'ref');
model.sol('sol1').feature('s1').set('control', 'ref');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol1').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 1);
model.sol('sol1').feature('s1').feature('fc1').set('minsteprecovery', 0.75);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('ooc', 'auto');
model.sol('sol1').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol1').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 1);
model.sol('sol1').feature('s1').feature('fc1').set('minsteprecovery', 0.75);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'Beta'});
model.batch('p1').set('plistarr', {'0 1e-7 1e-6 1e-5'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol.create('sol2');
model.sol('sol2').study('std1');
model.sol('sol2').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').run('compute');

model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').set('data', 'dset2');
model.result('pg1').create('lngr1', 'LineGraph');
model.result('pg1').feature('lngr1').set('xdata', 'expr');
model.result('pg1').feature('lngr1').set('xdataexpr', 'xe_be*root.comp1.be.emax');
model.result('pg1').feature('lngr1').selection.all;
model.result('pg1').feature('lngr1').set('legend', true);
model.result('pg1').feature('lngr1').set('expr', {'be.f'});
model.result('pg1').set('titletype', 'none');
model.result('pg1').set('ylog', true);
model.result('pg1').set('xlabelactive', true);
model.result('pg1').set('xlabel', 'Energy (eV)');
model.result('pg1').set('ylabelactive', true);
model.result('pg1').set('ylabel', 'EEDF (eV<sup>-3/2</sup>)');
model.result('pg1').label('EEDF (be)');
model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').set('data', 'dset2');
model.result('pg2').create('glob1', 'Global');
model.result('pg2').feature('glob1').set('unit', {''});
model.result('pg2').feature('glob1').set('expr', {'be.ebar'});
model.result('pg2').feature('glob1').set('descr', {'Mean electron energy'});
model.result('pg2').feature('glob1').set('xdata', 'expr');
model.result('pg2').feature('glob1').set('xdataexpr', 'be.EN');
model.result('pg2').feature('glob1').set('xdataunit', 'Td');
model.result('pg2').set('titletype', 'none');
model.result('pg2').set('xlabelactive', 'on');
model.result('pg2').set('xlabel', 'Reduced electric field (Td)');
model.result('pg2').set('ylabelactive', 'on');
model.result('pg2').set('ylabel', 'Mean electron energy (eV)');
model.result('pg2').set('showlegends', false);
model.result('pg2').label('Mean Electron Energy (be)');
model.result('pg1').run;
model.result('pg1').setIndex('looplevelinput', 'manual', 1);
model.result('pg1').setIndex('looplevel', [1], 1);
model.result('pg1').set('axislimits', true);
model.result('pg1').set('xmin', 0);
model.result('pg1').set('xmax', 10);
model.result('pg1').set('ymin', '1e-4');
model.result('pg1').set('ymax', 20);
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('lngr1').set('legendmethod', 'evaluated');
model.result('pg1').feature('lngr1').set('legendpattern', 'eval(be.EN, Td, 2) Td');
model.result('pg1').run;
model.result('pg1').label('EEDF, Beta=0');
model.result.duplicate('pg3', 'pg1');
model.result('pg3').run;
model.result('pg3').label('EEDF, Beta=1e-6');
model.result('pg3').setIndex('looplevel', [3], 1);
model.result('pg3').run;
model.result('pg2').run;
model.result('pg2').set('axislimits', true);
model.result('pg2').set('ymin', 0.5);
model.result('pg2').set('ymax', 4);
model.result('pg2').set('showlegends', true);
model.result('pg2').run;
model.result('pg2').feature('glob1').set('autodescr', false);
model.result('pg2').run;
model.result('pg2').set('legendpos', 'upperleft');
model.result('pg2').set('xlog', true);
model.result('pg1').run;

model.nodeGroup.create('grp1', 'Results');
model.nodeGroup('grp1').set('type', 'plotgroup');
model.nodeGroup('grp1').add('plotgroup', 'pg1');
model.nodeGroup('grp1').add('plotgroup', 'pg2');
model.nodeGroup('grp1').add('plotgroup', 'pg3');
model.nodeGroup('grp1').label('Stationary');

model.result.create('pg4', 'PlotGroup1D');

model.nodeGroup('grp1').add('plotgroup', 'pg4');

model.result('pg4').run;
model.result('pg4').label('Drift Velocity');
model.result('pg4').set('data', 'dset2');
model.result('pg4').create('glob1', 'Global');
model.result('pg4').feature('glob1').set('markerpos', 'datapoints');
model.result('pg4').feature('glob1').set('linewidth', 'preference');
model.result('pg4').feature('glob1').setIndex('expr', 'be.w', 0);
model.result('pg4').feature('glob1').setIndex('unit', 'm/s', 0);
model.result('pg4').feature('glob1').setIndex('descr', 'Drift velocity', 0);
model.result('pg4').run;
model.result('pg4').feature('glob1').set('xdata', 'expr');
model.result('pg4').feature('glob1').set('xdataexpr', 'be.EN');
model.result('pg4').feature('glob1').set('xdataunit', 'Td');
model.result('pg4').feature('glob1').set('autodescr', false);
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').set('titletype', 'none');
model.result('pg4').set('ylog', true);
model.result('pg4').set('xlog', true);
model.result('pg4').set('axislimits', true);
model.result('pg4').set('ymin', 800);
model.result('pg4').set('ymax', 10000);
model.result('pg4').set('legendpos', 'upperleft');

model.study.create('std2');
model.study('std2').create('ref', 'ReducedElectricFields');
model.study('std2').feature('ref').set('plotgroup', 'Default');
model.study('std2').feature('ref').set('solnum', 'auto');
model.study('std2').feature('ref').set('notsolnum', 'auto');
model.study('std2').feature('ref').set('outputmap', {});
model.study('std2').feature('ref').setSolveFor('/physics/be', true);
model.study.create('std3');
model.study('std3').create('ref', 'ReducedElectricFields');
model.study('std3').feature('ref').set('plotgroup', 'Default');
model.study('std3').feature('ref').set('solnum', 'auto');
model.study('std3').feature('ref').set('notsolnum', 'auto');
model.study('std3').feature('ref').set('outputmap', {});
model.study('std3').feature('ref').setSolveFor('/physics/be', true);
model.study.create('std4');
model.study('std4').create('time', 'Transient');
model.study('std4').feature('time').setSolveFor('/physics/be', true);
model.study.create('std5');
model.study('std5').create('time', 'Transient');
model.study('std5').feature('time').setSolveFor('/physics/be', true);
model.study('std2').label('Initial conditions for time dependent, 2.2[Td], Beta=0');
model.study('std2').feature('ref').set('plist', '2.2[Td]');

model.param.set('P0', '10[atm]');
model.param.descr('P0', 'Gas pressure');
model.param.set('Beta', '0');
model.param.descr('Beta', 'Ionization degree');

model.physics('be').feature('bmdl1').set('ebar', false);

model.sol.create('sol7');
model.sol('sol7').study('std2');
model.sol('sol7').create('st1', 'StudyStep');
model.sol('sol7').feature('st1').set('study', 'std2');
model.sol('sol7').feature('st1').set('studystep', 'ref');
model.sol('sol7').create('v1', 'Variables');
model.sol('sol7').feature('v1').set('control', 'ref');
model.sol('sol7').create('s1', 'Stationary');
model.sol('sol7').feature('s1').set('stol', 0.001);
model.sol('sol7').feature('s1').create('p1', 'Parametric');
model.sol('sol7').feature('s1').feature.remove('pDef');
model.sol('sol7').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol7').feature('s1').feature('p1').set('plistarr', {'2.2[Td]'});
model.sol('sol7').feature('s1').feature('p1').set('punit', {'V*m^2'});
model.sol('sol7').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol7').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol7').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol7').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol7').feature('s1').feature('p1').set('plotgroup', 'Default');
model.sol('sol7').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol7').feature('s1').feature('p1').set('probes', {});
model.sol('sol7').feature('s1').feature('p1').set('control', 'ref');
model.sol('sol7').feature('s1').set('control', 'ref');
model.sol('sol7').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol7').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol7').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol7').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol7').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol7').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol7').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol7').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol7').feature('s1').feature('fc1').set('initstep', 1);
model.sol('sol7').feature('s1').feature('fc1').set('minsteprecovery', 0.75);
model.sol('sol7').feature('s1').create('d1', 'Direct');
model.sol('sol7').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol7').feature('s1').feature('d1').set('ooc', 'auto');
model.sol('sol7').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol7').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol7').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol7').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol7').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol7').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol7').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol7').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol7').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol7').feature('s1').feature('fc1').set('initstep', 1);
model.sol('sol7').feature('s1').feature('fc1').set('minsteprecovery', 0.75);
model.sol('sol7').feature('s1').feature.remove('fcDef');
model.sol('sol7').attach('std2');
model.sol('sol7').runAll;

model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').set('data', 'dset3');
model.result('pg5').create('lngr1', 'LineGraph');
model.result('pg5').feature('lngr1').set('xdata', 'expr');
model.result('pg5').feature('lngr1').set('xdataexpr', 'xe_be*root.comp1.be.emax');
model.result('pg5').feature('lngr1').selection.all;
model.result('pg5').feature('lngr1').set('legend', true);
model.result('pg5').feature('lngr1').set('expr', {'be.f'});
model.result('pg5').set('titletype', 'none');
model.result('pg5').set('ylog', true);
model.result('pg5').set('xlabelactive', true);
model.result('pg5').set('xlabel', 'Energy (eV)');
model.result('pg5').set('ylabelactive', true);
model.result('pg5').set('ylabel', 'EEDF (eV<sup>-3/2</sup>)');
model.result('pg5').label('EEDF (be)');
model.result('pg5').run;
model.result('pg5').label('EEDF, Beta=0, 2.2 Td');
model.result('pg5').run;

model.study('std3').label('Initial conditions for time dependent, 2.2[Td], Beta=1e-7');
model.study('std3').feature('ref').set('plist', '2.2[Td]');

model.param.set('Beta', '1e-7');
model.param.descr('Beta', 'Ionization degree');

model.sol.create('sol8');
model.sol('sol8').study('std3');
model.sol('sol8').create('st1', 'StudyStep');
model.sol('sol8').feature('st1').set('study', 'std3');
model.sol('sol8').feature('st1').set('studystep', 'ref');
model.sol('sol8').create('v1', 'Variables');
model.sol('sol8').feature('v1').set('control', 'ref');
model.sol('sol8').create('s1', 'Stationary');
model.sol('sol8').feature('s1').set('stol', 0.001);
model.sol('sol8').feature('s1').create('p1', 'Parametric');
model.sol('sol8').feature('s1').feature.remove('pDef');
model.sol('sol8').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol8').feature('s1').feature('p1').set('plistarr', {'2.2[Td]'});
model.sol('sol8').feature('s1').feature('p1').set('punit', {'V*m^2'});
model.sol('sol8').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol8').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol8').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol8').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol8').feature('s1').feature('p1').set('plotgroup', 'pg5');
model.sol('sol8').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol8').feature('s1').feature('p1').set('probes', {});
model.sol('sol8').feature('s1').feature('p1').set('control', 'ref');
model.sol('sol8').feature('s1').set('control', 'ref');
model.sol('sol8').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol8').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol8').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol8').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol8').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol8').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol8').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol8').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol8').feature('s1').feature('fc1').set('initstep', 1);
model.sol('sol8').feature('s1').feature('fc1').set('minsteprecovery', 0.75);
model.sol('sol8').feature('s1').create('d1', 'Direct');
model.sol('sol8').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol8').feature('s1').feature('d1').set('ooc', 'auto');
model.sol('sol8').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol8').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol8').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol8').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol8').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol8').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol8').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol8').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol8').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol8').feature('s1').feature('fc1').set('initstep', 1);
model.sol('sol8').feature('s1').feature('fc1').set('minsteprecovery', 0.75);
model.sol('sol8').feature('s1').feature.remove('fcDef');
model.sol('sol8').attach('std3');
model.sol('sol8').runAll;

model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').set('data', 'dset4');
model.result('pg6').create('lngr1', 'LineGraph');
model.result('pg6').feature('lngr1').set('xdata', 'expr');
model.result('pg6').feature('lngr1').set('xdataexpr', 'xe_be*root.comp1.be.emax');
model.result('pg6').feature('lngr1').selection.all;
model.result('pg6').feature('lngr1').set('legend', true);
model.result('pg6').feature('lngr1').set('expr', {'be.f'});
model.result('pg6').set('titletype', 'none');
model.result('pg6').set('ylog', true);
model.result('pg6').set('xlabelactive', true);
model.result('pg6').set('xlabel', 'Energy (eV)');
model.result('pg6').set('ylabelactive', true);
model.result('pg6').set('ylabel', 'EEDF (eV<sup>-3/2</sup>)');
model.result('pg6').label('EEDF (be)');
model.result('pg6').run;
model.result('pg5').run;
model.result('pg5').label('EEDF, Beta=1e-7, 2.2[Td]');
model.result('pg5').run;

model.nodeGroup.create('grp2', 'Results');
model.nodeGroup('grp2').set('type', 'plotgroup');
model.nodeGroup.move('grp2', 1);
model.nodeGroup('grp2').add('plotgroup', 'pg5');
model.nodeGroup('grp2').add('plotgroup', 'pg6');
model.nodeGroup('grp2').label('Initial conditions');

model.physics('be').prop('EEDFSettings').set('eedfTemporalBehavior', 'TimeDependentEEDF');
model.physics('be').feature('bmdl1').set('pA', 'P0');
model.physics('be').feature('bmdl1').set('Erd', 'rect1(t/1[ns])*(2.2-0.01)[Td]+0.01[Td]');

model.study('std4').label('Time dependent, Beta=0');
model.study('std4').feature('time').set('tunit', 'ns');
model.study('std4').feature('time').set('tlist', '0  range(1,1,40) range(45,5,200)');
model.study('std4').feature('time').set('useinitsol', true);
model.study('std4').feature('time').set('initmethod', 'sol');
model.study('std4').feature('time').set('initstudy', 'std2');

model.param.set('Beta', '0');
model.param.descr('Beta', 'Ionization degree');

model.sol.create('sol9');
model.sol('sol9').study('std4');
model.sol('sol9').create('st1', 'StudyStep');
model.sol('sol9').feature('st1').set('study', 'std4');
model.sol('sol9').feature('st1').set('studystep', 'time');
model.sol('sol9').create('v1', 'Variables');
model.sol('sol9').feature('v1').feature('comp1_be_lam').set('scalemethod', 'manual');
model.sol('sol9').feature('v1').feature('comp1_be_F0').set('scalemethod', 'manual');
model.sol('sol9').feature('v1').feature('comp1_be_lam').set('resscalemethod', 'parent');
model.sol('sol9').feature('v1').feature('comp1_be_F0').set('resscalemethod', 'parent');
model.sol('sol9').feature('v1').feature('comp1_be_lam').set('scaleval', '1.0E-21');
model.sol('sol9').feature('v1').feature('comp1_be_F0').set('scaleval', '10');
model.sol('sol9').feature('v1').set('control', 'time');
model.sol('sol9').create('t1', 'Time');
model.sol('sol9').feature('t1').set('tlist', '0  range(1,1,40) range(45,5,200)');
model.sol('sol9').feature('t1').set('plot', 'off');
model.sol('sol9').feature('t1').set('plotgroup', 'pg1');
model.sol('sol9').feature('t1').set('plotfreq', 'tout');
model.sol('sol9').feature('t1').set('probesel', 'all');
model.sol('sol9').feature('t1').set('probes', {});
model.sol('sol9').feature('t1').set('probefreq', 'tsteps');
model.sol('sol9').feature('t1').set('rtol', 1.0E-4);
model.sol('sol9').feature('t1').set('atolglobalvaluemethod', 'manual');
model.sol('sol9').feature('t1').set('atolglobalmethod', 'unscaled');
model.sol('sol9').feature('t1').set('atolglobal', 0.001);
model.sol('sol9').feature('t1').set('atolglobalvaluemethod', 'manual');
model.sol('sol9').feature('t1').set('eventtol', 0.01);
model.sol('sol9').feature('t1').set('reacf', true);
model.sol('sol9').feature('t1').set('storeudot', true);
model.sol('sol9').feature('t1').set('endtimeinterpolation', true);
model.sol('sol9').feature('t1').set('maxorder', 5);
model.sol('sol9').feature('t1').set('minorder', 1);
model.sol('sol9').feature('t1').set('initialstepbdfactive', true);
model.sol('sol9').feature('t1').set('initialstepbdf', '(1.0E-15)[s]');
model.sol('sol9').feature('t1').set('rescaleafterinitbw', false);
model.sol('sol9').feature('t1').set('bwinitstepfrac', '0.001');
model.sol('sol9').feature('t1').set('control', 'time');
model.sol('sol9').feature('t1').feature('aDef').set('complexfun', false);
model.sol('sol9').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol9').feature('t1').feature('aDef').set('matherr', true);
model.sol('sol9').feature('t1').feature('aDef').set('blocksizeactive', false);
model.sol('sol9').feature('t1').feature('aDef').set('nullfun', 'auto');
model.sol('sol9').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol9').feature('t1').feature('fc1').set('rstep', 10);
model.sol('sol9').feature('t1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol9').feature('t1').feature('fc1').set('maxiter', 4);
model.sol('sol9').feature('t1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol9').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol9').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol9').feature('t1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol9').feature('t1').feature('fc1').set('initstep', 1);
model.sol('sol9').feature('t1').feature('fc1').set('minsteprecovery', 0.75);
model.sol('sol9').feature('t1').create('d1', 'Direct');
model.sol('sol9').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol9').feature('t1').feature('d1').set('ooc', 'auto');
model.sol('sol9').feature('t1').feature('d1').set('errorchk', 'auto');
model.sol('sol9').feature('t1').feature('d1').set('rhob', 1);
model.sol('sol9').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol9').feature('t1').feature('fc1').set('rstep', 10);
model.sol('sol9').feature('t1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol9').feature('t1').feature('fc1').set('maxiter', 4);
model.sol('sol9').feature('t1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol9').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol9').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol9').feature('t1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol9').feature('t1').feature('fc1').set('initstep', 1);
model.sol('sol9').feature('t1').feature('fc1').set('minsteprecovery', 0.75);
model.sol('sol9').feature('t1').feature.remove('fcDef');
model.sol('sol9').attach('std4');
model.sol('sol9').runAll;

model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').set('data', 'dset5');
model.result('pg7').create('lngr1', 'LineGraph');
model.result('pg7').feature('lngr1').set('xdata', 'expr');
model.result('pg7').feature('lngr1').set('xdataexpr', 'xe_be*root.comp1.be.emax');
model.result('pg7').feature('lngr1').selection.all;
model.result('pg7').feature('lngr1').set('legend', true);
model.result('pg7').feature('lngr1').set('expr', {'be.f'});
model.result('pg7').set('titletype', 'none');
model.result('pg7').set('ylog', true);
model.result('pg7').set('xlabelactive', true);
model.result('pg7').set('xlabel', 'Energy (eV)');
model.result('pg7').set('ylabelactive', true);
model.result('pg7').set('ylabel', 'EEDF (eV<sup>-3/2</sup>)');
model.result('pg7').label('EEDF (be) 1');
model.result('pg7').run;
model.result('pg7').label('EEDF Time Dependent, Beta=0');
model.result('pg7').setIndex('looplevelinput', 'manual', 0);
model.result('pg7').setIndex('looplevel', [6 7 9 21 44], 0);
model.result('pg7').run;
model.result('pg7').set('axislimits', true);
model.result('pg7').set('xmin', 0);
model.result('pg7').set('xmax', 7);
model.result('pg7').set('ymin', '3e-4');
model.result('pg7').set('ymax', 10);
model.result('pg7').run;

model.param.set('Beta', '1e-7');
model.param.descr('Beta', 'Ionization degree');

model.study('std5').feature('time').set('tunit', 'ns');
model.study('std5').feature('time').set('tlist', '0  range(1,1,40) range(45,5,200)');
model.study('std5').feature('time').set('useinitsol', true);
model.study('std5').feature('time').set('initstudy', 'std3');
model.study('std5').feature('time').set('initmethod', 'sol');
model.study('std5').label('Time dependent, Beta=1e-7');

model.sol.create('sol10');
model.sol('sol10').study('std5');
model.sol('sol10').create('st1', 'StudyStep');
model.sol('sol10').feature('st1').set('study', 'std5');
model.sol('sol10').feature('st1').set('studystep', 'time');
model.sol('sol10').create('v1', 'Variables');
model.sol('sol10').feature('v1').feature('comp1_be_lam').set('scalemethod', 'manual');
model.sol('sol10').feature('v1').feature('comp1_be_F0').set('scalemethod', 'manual');
model.sol('sol10').feature('v1').feature('comp1_be_lam').set('resscalemethod', 'parent');
model.sol('sol10').feature('v1').feature('comp1_be_F0').set('resscalemethod', 'parent');
model.sol('sol10').feature('v1').feature('comp1_be_lam').set('scaleval', '1.0E-21');
model.sol('sol10').feature('v1').feature('comp1_be_F0').set('scaleval', '10');
model.sol('sol10').feature('v1').set('control', 'time');
model.sol('sol10').create('t1', 'Time');
model.sol('sol10').feature('t1').set('tlist', '0  range(1,1,40) range(45,5,200)');
model.sol('sol10').feature('t1').set('plot', 'off');
model.sol('sol10').feature('t1').set('plotgroup', 'pg1');
model.sol('sol10').feature('t1').set('plotfreq', 'tout');
model.sol('sol10').feature('t1').set('probesel', 'all');
model.sol('sol10').feature('t1').set('probes', {});
model.sol('sol10').feature('t1').set('probefreq', 'tsteps');
model.sol('sol10').feature('t1').set('rtol', 1.0E-4);
model.sol('sol10').feature('t1').set('atolglobalvaluemethod', 'manual');
model.sol('sol10').feature('t1').set('atolglobalmethod', 'unscaled');
model.sol('sol10').feature('t1').set('atolglobal', 0.001);
model.sol('sol10').feature('t1').set('atolglobalvaluemethod', 'manual');
model.sol('sol10').feature('t1').set('eventtol', 0.01);
model.sol('sol10').feature('t1').set('reacf', true);
model.sol('sol10').feature('t1').set('storeudot', true);
model.sol('sol10').feature('t1').set('endtimeinterpolation', true);
model.sol('sol10').feature('t1').set('maxorder', 5);
model.sol('sol10').feature('t1').set('minorder', 1);
model.sol('sol10').feature('t1').set('initialstepbdfactive', true);
model.sol('sol10').feature('t1').set('initialstepbdf', '(1.0E-15)[s]');
model.sol('sol10').feature('t1').set('rescaleafterinitbw', false);
model.sol('sol10').feature('t1').set('bwinitstepfrac', '0.001');
model.sol('sol10').feature('t1').set('control', 'time');
model.sol('sol10').feature('t1').feature('aDef').set('complexfun', false);
model.sol('sol10').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol10').feature('t1').feature('aDef').set('matherr', true);
model.sol('sol10').feature('t1').feature('aDef').set('blocksizeactive', false);
model.sol('sol10').feature('t1').feature('aDef').set('nullfun', 'auto');
model.sol('sol10').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol10').feature('t1').feature('fc1').set('rstep', 10);
model.sol('sol10').feature('t1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol10').feature('t1').feature('fc1').set('maxiter', 4);
model.sol('sol10').feature('t1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol10').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol10').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol10').feature('t1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol10').feature('t1').feature('fc1').set('initstep', 1);
model.sol('sol10').feature('t1').feature('fc1').set('minsteprecovery', 0.75);
model.sol('sol10').feature('t1').create('d1', 'Direct');
model.sol('sol10').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol10').feature('t1').feature('d1').set('ooc', 'auto');
model.sol('sol10').feature('t1').feature('d1').set('errorchk', 'auto');
model.sol('sol10').feature('t1').feature('d1').set('rhob', 1);
model.sol('sol10').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol10').feature('t1').feature('fc1').set('rstep', 10);
model.sol('sol10').feature('t1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol10').feature('t1').feature('fc1').set('maxiter', 4);
model.sol('sol10').feature('t1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol10').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol10').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol10').feature('t1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol10').feature('t1').feature('fc1').set('initstep', 1);
model.sol('sol10').feature('t1').feature('fc1').set('minsteprecovery', 0.75);
model.sol('sol10').feature('t1').feature.remove('fcDef');
model.sol('sol10').attach('std5');
model.sol('sol10').runAll;

model.result.create('pg8', 'PlotGroup1D');
model.result('pg8').set('data', 'dset6');
model.result('pg8').create('lngr1', 'LineGraph');
model.result('pg8').feature('lngr1').set('xdata', 'expr');
model.result('pg8').feature('lngr1').set('xdataexpr', 'xe_be*root.comp1.be.emax');
model.result('pg8').feature('lngr1').selection.all;
model.result('pg8').feature('lngr1').set('legend', true);
model.result('pg8').feature('lngr1').set('expr', {'be.f'});
model.result('pg8').set('titletype', 'none');
model.result('pg8').set('ylog', true);
model.result('pg8').set('xlabelactive', true);
model.result('pg8').set('xlabel', 'Energy (eV)');
model.result('pg8').set('ylabelactive', true);
model.result('pg8').set('ylabel', 'EEDF (eV<sup>-3/2</sup>)');
model.result('pg8').label('EEDF (be) 1');
model.result('pg8').run;
model.result('pg8').label('EEDF Time Dependent, Beta=1e-7');
model.result('pg8').setIndex('looplevelinput', 'manual', 0);
model.result('pg8').setIndex('looplevel', [6 7 9 21 36], 0);
model.result('pg8').set('axislimits', true);
model.result('pg8').set('xmin', 0);
model.result('pg8').set('xmax', 7);
model.result('pg8').set('ymin', '3e-4');
model.result('pg8').set('ymax', 10);
model.result('pg8').run;
model.result('pg7').run;

model.nodeGroup.create('grp3', 'Results');
model.nodeGroup('grp3').set('type', 'plotgroup');
model.nodeGroup.move('grp3', 2);
model.nodeGroup('grp3').add('plotgroup', 'pg7');
model.nodeGroup('grp3').add('plotgroup', 'pg8');
model.nodeGroup('grp3').label('Time Dependent');

model.result.create('pg9', 'PlotGroup1D');

model.nodeGroup('grp3').add('plotgroup', 'pg9');

model.result('pg9').run;
model.result('pg9').label('Time Dependent Drift velocity');
model.result('pg9').create('glob1', 'Global');
model.result('pg9').feature('glob1').set('markerpos', 'datapoints');
model.result('pg9').feature('glob1').set('linewidth', 'preference');
model.result('pg9').feature('glob1').set('data', 'dset5');
model.result('pg9').feature('glob1').setIndex('expr', 'be.w', 0);
model.result('pg9').feature('glob1').setIndex('unit', 'm/s', 0);
model.result('pg9').feature('glob1').setIndex('descr', 'Drift velocity', 0);
model.result('pg9').feature('glob1').set('legendmethod', 'evaluated');
model.result('pg9').feature('glob1').set('legendpattern', 'Beta=eval(Beta)');
model.result('pg9').run;
model.result('pg9').feature.duplicate('glob2', 'glob1');
model.result('pg9').run;
model.result('pg9').feature('glob2').set('data', 'dset6');
model.result('pg9').run;
model.result('pg9').run;
model.result('pg9').set('titletype', 'none');
model.result('pg9').set('axislimits', true);
model.result('pg9').set('ymin', -500);
model.result('pg9').set('ymax', 2000);
model.result('pg9').run;
model.result('pg1').run;
model.result('pg3').run;
model.result('pg2').run;
model.result('pg4').run;
model.result('pg7').run;
model.result('pg8').run;
model.result('pg9').run;

model.title('Transient Negative Mobility and Negative Differential Conductivity Effects in Xenon');

model.description('This tutorial model presents a study showing the transient negative mobility and the negative differential conductivity effects in xenon. The stationary and time dependent Boltzmann equation in the two-term approximation is used to compute the electron energy distribution function. Electron energy distribution functions, electron mean energy, and drift velocity agrees well with simulation results published by Z. Donko and N. Dyatko.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;
model.sol('sol8').clearSolutionData;
model.sol('sol9').clearSolutionData;
model.sol('sol10').clearSolutionData;

model.label('transient_negative_mobility.mph');

model.modelNode.label('Components');

out = model;
