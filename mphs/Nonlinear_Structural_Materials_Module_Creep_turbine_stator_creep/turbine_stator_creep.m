function out = model
%
% turbine_stator_creep.m
%
% Model exported on May 26 2025, 21:31 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Nonlinear_Structural_Materials_Module/Creep');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');
model.physics('solid').prop('StructuralTransientBehavior').set('StructuralTransientBehavior', 'Quasistatic');
model.physics.create('ht', 'HeatTransfer', 'geom1');
model.physics('ht').model('comp1');

model.multiphysics.create('te1', 'ThermalExpansion', 'geom1', 3);
model.multiphysics('te1').set('Heat_physics', 'ht');
model.multiphysics('te1').set('Solid_physics', 'solid');
model.multiphysics('te1').selection.all;

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/solid', true);
model.study('std1').feature('stat').setSolveFor('/physics/ht', true);
model.study('std1').feature('stat').setSolveFor('/multiphysics/te1', true);

model.view('view1').set('showgrid', false);

model.param.set('Pr_cool', '0.72');
model.param.descr('Pr_cool', 'Cooling Prandtl number');
model.param.set('U_suction_side', '450[m/s]');
model.param.descr('U_suction_side', 'Gas velocity on stator suction side');
model.param.set('U_pressure_side', '300[m/s]');
model.param.descr('U_pressure_side', 'Gas velocity on stator pressure side');
model.param.set('U_platform', '350[m/s]');
model.param.descr('U_platform', 'Gas velocity along platform walls');
model.param.set('T_gas', '1150[K]');
model.param.descr('T_gas', 'Gas temperature');
model.param.set('p_high', '30[bar]');
model.param.descr('p_high', 'High pressure level');
model.param.set('mu_cool', '3.1e-5[Pa*s]');
model.param.descr('mu_cool', 'Viscosity of the cooling air');
model.param.set('Cp_cool', '770[J/kg/K]');
model.param.descr('Cp_cool', 'Heat capacity of the cooling air');
model.param.set('T_cool', '650[K]');
model.param.descr('T_cool', 'Cooling air temperature');
model.param.set('H_cool', '0.01[m]');
model.param.descr('H_cool', 'Characteristic length scale of cooling channels');
model.param.set('T_work', '900[K]');
model.param.descr('T_work', 'Working temperature');
model.param.set('Nu_cool', '400');
model.param.descr('Nu_cool', 'Average Nusselt number in cooling channel');

model.geom('geom1').create('imp1', 'Import');
model.geom('geom1').feature('imp1').set('filename', 'turbine_stator.mphbin');
model.geom('geom1').feature('imp1').importData;

model.view('view1').set('transparency', true);

model.geom('geom1').run('fin');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');
model.selection('sel1').label('Cooling Duct');
model.selection('sel1').geom(2);
model.selection('sel1').set([59 60 61 62 63 64 66 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114]);

model.view('view1').set('transparency', false);
model.view('view1').set('renderwireframe', true);

model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').label('Exchange Boundaries');
model.selection('sel2').geom(2);
model.selection('sel2').set([1 2 3 4 9 11 14 16 17 21 22 23 24 25 26 27 28 29 30 31 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 65 67 68 69 70 71 72 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136]);

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').label('GTD111 DS [solid,longitudinal]');
model.material('mat1').info.create('Composition');
model.material('mat1').info('Composition').body('bal. Ni, (13.7-14.3) Cr, (9-10) Co, (2.8-3.2) Al, (4.7-5.1) Ti, (3.5-4.1) W, (2.5-3.1) Ta, (0.08-0.12) C, (0.005-0.04) Zr, (0.005-0.02) B, 0.35 Fe max, 0.30 Si max, 0.10 Mn max, 0.10 Cu max, 0.015 P max, 0.005 S max (wt%)');
model.material('mat1').propertyGroup('def').set('thermalconductivity', 'k(T)');
model.material('mat1').propertyGroup('def').set('INFO_PREFIX:thermalconductivity', ['Reference: Chromalloy Gas Turbine LLC. at http://www.chromalloy.com/' newline 'Note: calculated from the specific heat, thermal diffusivity and density, corrected for thermal expansion, solution heat-treated at 1121C (1394K) for 2 h, aged at 843C (1116K) for 24 h']);
model.material('mat1').propertyGroup('def').set('Syt', 'Syt(T)');
model.material('mat1').propertyGroup('def').set('INFO_PREFIX:Syt', ['Reference: Chromalloy Gas Turbine LLC. at http://www.chromalloy.com/' newline 'Note: tested at an unknown strain rate in tension, longitudinal direction, average of 2 samples, 0.05 in^2 (0.32 cm^2) cross-sectional area, spread in the measurements was approximately 10 MPa (1.45 ksi) at 427C (700K) and 120 MPa (17.4 ksi) at 982C (1255K), solution heat-treated at 1121C (1394K) for 2 h, aged at 843C (1116K) for 24 h']);
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', '(alpha(T)+(Tempref-293[K])*if(abs(T-Tempref)>1e-3,(alpha(T)-alpha(Tempref))/(T-Tempref),d(alpha(T),T)))/(1+alpha(Tempref)*(Tempref-293[K]))');
model.material('mat1').propertyGroup('def').set('INFO_PREFIX:thermalexpansioncoefficient', ['Reference: Chromalloy Gas Turbine LLC. at http://www.chromalloy.com/' newline 'Note: the reference temperature is 20C (293K), solution heat-treated at 1121C (1394K) for 2 h, aged at 843C (1116K) for 24 h, calculated from the linear expansion' newline 'Reference temperature: 293.00[K]']);
model.material('mat1').propertyGroup('def').set('heatcapacity', 'C(T)');
model.material('mat1').propertyGroup('def').set('INFO_PREFIX:heatcapacity', ['Reference: Chromalloy Gas Turbine LLC. at http://www.chromalloy.com/' newline 'Note: average of 3 samples with a differential scanning calorimeter in argon ASTM E1269, heating rate was 20 C/min, scatter in data was 3% at the highest temperatures, solution heat-treated at 1121C (1394K) for 2 h, aged at 843C (1116K) for 24 h']);
model.material('mat1').propertyGroup('def').set('density', 'rho(T)');
model.material('mat1').propertyGroup('def').set('INFO_PREFIX:density', ['Reference: Chromalloy Gas Turbine LLC. at http://www.chromalloy.com/' newline 'Note: solution heat-treated at 1121C (1394K) for 2 h, aged at 843C (1116K) for 24 h, calculated from the linear expansion and the room temperature density']);
model.material('mat1').propertyGroup('def').set('TD', 'TD(T)');
model.material('mat1').propertyGroup('def').set('INFO_PREFIX:TD', ['Reference: Chromalloy Gas Turbine LLC. at http://www.chromalloy.com/' newline 'Note: average of 3 samples with a differential scanning calorimeter in argon ASTM, scatter in data was 6%, solution heat-treated at 1121C (1394K) for 2 h, aged at 843C (1116K) for 24 h']);
model.material('mat1').propertyGroup('def').set('elong', 'elong(T)');
model.material('mat1').propertyGroup('def').set('INFO_PREFIX:elong', ['Reference: Chromalloy Gas Turbine LLC. at http://www.chromalloy.com/' newline 'Note: tested at an unknown strain rate in tension, longitudinal direction, average of 2 samples, 0.05 in^2 (0.32 cm^2) cross-sectional area, spread in the measurements was approximately 9% at 982C (1255K), solution heat-treated at 1121C (1394K) for 2 h, aged at 843C (1116K) for 24 h']);
model.material('mat1').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat1').propertyGroup('def').func('k').set('funcname', 'k');
model.material('mat1').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('k').set('extrap', 'constant');
model.material('mat1').propertyGroup('def').func('k').set('pieces', {'293.0' '1255.41' '1.672554+0.03576171*T^1-5.557891E-5*T^2+5.531542E-8*T^3-2.026391E-11*T^4'});
model.material('mat1').propertyGroup('def').func('k').label('Piecewise');
model.material('mat1').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.material('mat1').propertyGroup('def').func('k').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func.create('Syt', 'Piecewise');
model.material('mat1').propertyGroup('def').func('Syt').set('funcname', 'Syt');
model.material('mat1').propertyGroup('def').func('Syt').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('Syt').set('extrap', 'constant');
model.material('mat1').propertyGroup('def').func('Syt').set('pieces', {'700.0' '1255.41' '6.949496E8+343399.5*T^1+1301.727*T^2-1.403259*T^3'});
model.material('mat1').propertyGroup('def').func('Syt').label('Piecewise 1');
model.material('mat1').propertyGroup('def').func('Syt').set('fununit', 'Pa');
model.material('mat1').propertyGroup('def').func('Syt').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func.create('alpha', 'Piecewise');
model.material('mat1').propertyGroup('def').func('alpha').set('funcname', 'alpha');
model.material('mat1').propertyGroup('def').func('alpha').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('alpha').set('extrap', 'constant');
model.material('mat1').propertyGroup('def').func('alpha').set('pieces', {'293.0' '1255.41' '1.132769E-5-6.760265E-10*T^1+1.107791E-11*T^2-1.36022E-14*T^3+5.799942E-18*T^4-4.733165E-30*T^5'});
model.material('mat1').propertyGroup('def').func('alpha').label('Piecewise 2');
model.material('mat1').propertyGroup('def').func('alpha').set('fununit', '1/K');
model.material('mat1').propertyGroup('def').func('alpha').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func.create('C', 'Piecewise');
model.material('mat1').propertyGroup('def').func('C').set('funcname', 'C');
model.material('mat1').propertyGroup('def').func('C').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('C').set('extrap', 'constant');
model.material('mat1').propertyGroup('def').func('C').set('pieces', {'293.0' '1255.41' '323.718046+0.457890266*T^1-4.3938276E-4*T^2+2.20846959E-7*T^3-4.4591231E-11*T^4'});
model.material('mat1').propertyGroup('def').func('C').label('Piecewise 3');
model.material('mat1').propertyGroup('def').func('C').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('def').func('C').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func.create('rho', 'Piecewise');
model.material('mat1').propertyGroup('def').func('rho').set('funcname', 'rho');
model.material('mat1').propertyGroup('def').func('rho').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('rho').set('extrap', 'constant');
model.material('mat1').propertyGroup('def').func('rho').set('pieces', {'293.0' '1255.41' '8375.668-0.2799683*T^1+6.630845E-5*T^2-3.116057E-7*T^3+3.316263E-10*T^4-1.286122E-13*T^5'});
model.material('mat1').propertyGroup('def').func('rho').label('Piecewise 4');
model.material('mat1').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.material('mat1').propertyGroup('def').func('rho').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func.create('TD', 'Piecewise');
model.material('mat1').propertyGroup('def').func('TD').set('funcname', 'TD');
model.material('mat1').propertyGroup('def').func('TD').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('TD').set('extrap', 'constant');
model.material('mat1').propertyGroup('def').func('TD').set('pieces', {'293.0' '1255.41' '1.079217E-6+7.346752E-9*T^1-1.251635E-11*T^2+1.288298E-14*T^3-4.743877E-18*T^4'});
model.material('mat1').propertyGroup('def').func('TD').label('Piecewise 5');
model.material('mat1').propertyGroup('def').func('TD').set('fununit', 'm^2/s');
model.material('mat1').propertyGroup('def').func('TD').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func.create('elong', 'Piecewise');
model.material('mat1').propertyGroup('def').func('elong').set('funcname', 'elong');
model.material('mat1').propertyGroup('def').func('elong').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('elong').set('extrap', 'constant');
model.material('mat1').propertyGroup('def').func('elong').set('pieces', {'700.0' '1255.41' '54.23787-0.1190233*T^1+7.722161E-5*T^2'});
model.material('mat1').propertyGroup('def').func('elong').label('Piecewise 6');
model.material('mat1').propertyGroup('def').func('elong').set('fununit', '');
model.material('mat1').propertyGroup('def').func('elong').set('argunit', 'K');
model.material('mat1').propertyGroup('def').addInput('temperature');
model.material('mat1').propertyGroup('def').addInput('strainreferencetemperature');
model.material('mat1').propertyGroup.create('ThermalExpansion', 'Thermal_expansion');
model.material('mat1').propertyGroup('ThermalExpansion').set('dL', '(dL(T)-dL(Tempref))/(1+dL(Tempref))');
model.material('mat1').propertyGroup('ThermalExpansion').set('INFO_PREFIX:dL', ['Reference: Chromalloy Gas Turbine LLC. at http://www.chromalloy.com/' newline 'Note: the reference temperature is 20C (293K), average of 3 samples measured on heating, values on cooling were slightly different, push-rod dilatometer ASTM E228, measured in helium at a 2 C/min heating rate, solution heat-treated at 1121C (1394K) for 2 h, aged at 843C (1116K) for 24 h' newline 'Reference temperature: 293.00[K]']);
model.material('mat1').propertyGroup('ThermalExpansion').func.create('dL', 'Piecewise');
model.material('mat1').propertyGroup('ThermalExpansion').func('dL').set('funcname', 'dL');
model.material('mat1').propertyGroup('ThermalExpansion').func('dL').set('arg', 'T');
model.material('mat1').propertyGroup('ThermalExpansion').func('dL').set('extrap', 'constant');
model.material('mat1').propertyGroup('ThermalExpansion').func('dL').set('pieces', {'293.0' '1255.41' '-0.00331901441+1.152577E-5*T^1-3.921853E-9*T^2+1.506335E-11*T^3-1.530158E-14*T^4+5.799942E-18*T^5'});
model.material('mat1').propertyGroup('ThermalExpansion').func('dL').label('Piecewise');
model.material('mat1').propertyGroup('ThermalExpansion').func('dL').set('fununit', '');
model.material('mat1').propertyGroup('ThermalExpansion').func('dL').set('argunit', 'K');
model.material('mat1').propertyGroup('ThermalExpansion').addInput('temperature');
model.material('mat1').propertyGroup('ThermalExpansion').addInput('strainreferencetemperature');
model.material('mat1').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat1').propertyGroup('Enu').set('E', 'E_solid_longitudinal_1(T)');
model.material('mat1').propertyGroup('Enu').set('INFO_PREFIX:E', ['Reference: Chromalloy Gas Turbine LLC. at http://www.chromalloy.com/' newline 'Note: dynamic modulus in longitudinal direction, solution heat-treated at 1121C (1394K) for 2 h, aged at 843C (1116K) for 24 h']);
model.material('mat1').propertyGroup('Enu').func.create('E_solid_longitudinal_1', 'Piecewise');
model.material('mat1').propertyGroup('Enu').func('E_solid_longitudinal_1').set('funcname', 'E_solid_longitudinal_1');
model.material('mat1').propertyGroup('Enu').func('E_solid_longitudinal_1').set('arg', 'T');
model.material('mat1').propertyGroup('Enu').func('E_solid_longitudinal_1').set('extrap', 'constant');
model.material('mat1').propertyGroup('Enu').func('E_solid_longitudinal_1').set('pieces', {'293.0' '871.0' '1.273228E11-2.03861E7*T^1+15877.53*T^2-21.02714*T^3'});
model.material('mat1').propertyGroup('Enu').func('E_solid_longitudinal_1').label('Piecewise');
model.material('mat1').propertyGroup('Enu').func('E_solid_longitudinal_1').set('fununit', 'Pa');
model.material('mat1').propertyGroup('Enu').func('E_solid_longitudinal_1').set('argunit', 'K');
model.material('mat1').propertyGroup('Enu').addInput('temperature');
model.material('mat1').set('family', 'custom');
model.material('mat1').set('lighting', 'cooktorrance');
model.material('mat1').set('specular', 'custom');
model.material('mat1').set('customspecular', [0.7843137254901961 1 1]);
model.material('mat1').set('fresnel', 0.9);
model.material('mat1').set('roughness', 0.1);
model.material('mat1').set('metallic', 0);
model.material('mat1').set('pearl', 0);
model.material('mat1').set('diffusewrap', 0);
model.material('mat1').set('clearcoat', 0);
model.material('mat1').set('reflectance', 0);
model.material('mat1').set('shininess', 130);
model.material('mat1').propertyGroup('Enu').set('nu', {'0.33'});
model.material('mat1').propertyGroup('Enu').func('E_solid_longitudinal_1').set('extrap', 'interior');

model.common('cminpt').set('modified', {'strainreferencetemperature' '310[K]'});

model.physics('ht').feature('init1').set('Tinit', 'T_gas');
model.physics('ht').create('hf1', 'HeatFluxBoundary', 2);
model.physics('ht').feature('hf1').selection.named('sel2');
model.physics('ht').feature('hf1').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht').feature('hf1').set('h', 25);
model.physics('ht').feature('hf1').set('Text', 'T_work');
model.physics('ht').create('hf2', 'HeatFluxBoundary', 2);
model.physics('ht').feature('hf2').selection.named('sel1');
model.physics('ht').feature('hf2').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht').feature('hf2').set('h', 'Nu_cool*mu_cool*Cp_cool/2/Pr_cool/H_cool');
model.physics('ht').feature('hf2').set('Text', 'T_cool');
model.physics('ht').create('hf3', 'HeatFluxBoundary', 2);
model.physics('ht').feature('hf3').selection.set([41]);
model.physics('ht').feature('hf3').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht').feature('hf3').set('HeatTransferCoefficientType', 'ExtForcedConvection');
model.physics('ht').feature('hf3').set('ExtForcedConvectionType', 'PlateLocalTransferCoefficient');
model.physics('ht').feature('hf3').set('x_pl', '0.1675-x');
model.physics('ht').feature('hf3').set('U', 'U_suction_side');
model.physics('ht').feature('hf3').set('pA', 'p_high');
model.physics('ht').feature('hf3').set('Text', 'T_gas');
model.physics('ht').create('hf4', 'HeatFluxBoundary', 2);
model.physics('ht').feature('hf4').selection.set([40]);
model.physics('ht').feature('hf4').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht').feature('hf4').set('HeatTransferCoefficientType', 'ExtForcedConvection');
model.physics('ht').feature('hf4').set('ExtForcedConvectionType', 'PlateLocalTransferCoefficient');
model.physics('ht').feature('hf4').set('x_pl', '0.1675-x');
model.physics('ht').feature('hf4').set('U', 'U_pressure_side');
model.physics('ht').feature('hf4').set('pA', 'p_high');
model.physics('ht').feature('hf4').set('Text', 'T_gas');
model.physics('ht').create('hf5', 'HeatFluxBoundary', 2);
model.physics('ht').feature('hf5').selection.set([10 15 32 33 34 35]);
model.physics('ht').feature('hf5').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht').feature('hf5').set('HeatTransferCoefficientType', 'ExtForcedConvection');
model.physics('ht').feature('hf5').set('ExtForcedConvectionType', 'PlateLocalTransferCoefficient');
model.physics('ht').feature('hf5').set('x_pl', '0.19-x');
model.physics('ht').feature('hf5').set('U', 'U_platform');
model.physics('ht').feature('hf5').set('pA', 'p_high');
model.physics('ht').feature('hf5').set('Text', 'T_gas');
model.physics('solid').create('spf1', 'SpringFoundation2', 2);
model.physics('solid').feature('spf1').selection.set([42 43 56 129 131]);
model.physics('solid').feature('spf1').set('kPerArea', {'1e9' '0' '0' '0' '0' '0' '0' '0' '0'});
model.physics('solid').create('spf2', 'SpringFoundation2', 2);
model.physics('solid').feature('spf2').selection.set([27 29 53 70]);
model.physics('solid').feature('spf2').set('kPerArea', {'0' '0' '0' '0' '0' '0' '0' '0' '1e9'});
model.physics('solid').create('spf3', 'SpringFoundation2', 2);
model.physics('solid').feature('spf3').selection.set([6 12]);
model.physics('solid').feature('spf3').set('kPerArea', {'0' '0' '0' '0' '1e9' '0' '0' '0' '0'});

model.mesh('mesh1').create('size1', 'Size');
model.mesh('mesh1').feature('size').set('custom', true);
model.mesh('mesh1').feature('size').set('hmax', 0.025);
model.mesh('mesh1').feature('size').set('hmin', 0.0025);
model.mesh('mesh1').feature('size').set('hgrad', 2);
model.mesh('mesh1').feature('size').set('hcurve', 0.75);
model.mesh('mesh1').feature('size1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('size1').selection.named('sel1');
model.mesh('mesh1').feature('size1').selection.set([40 41 59 60 61 62 63 64 66 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114]);

model.view('view1').set('renderwireframe', false);

model.mesh('mesh1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('size1').set('hmax', 0.0035);
model.mesh('mesh1').feature('size1').set('hgradactive', true);
model.mesh('mesh1').feature('size1').set('hgrad', 1.1);
model.mesh('mesh1').create('ftet1', 'FreeTet');
model.mesh('mesh1').run;

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('se1', 'Segregated');
model.sol('sol1').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_T'});
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subdamp', 1);
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 10000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, heat transfer variables ht (te1)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').label('Temperature');
model.sol('sol1').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_u'});
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('s1').feature('d1').label('Suggested Direct Solver solid (te1)');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').label('Solid Mechanics');
model.sol('sol1').feature('s1').feature('se1').set('segtermonres', 'off');
model.sol('sol1').feature('s1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol1').feature('s1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.T 0 ');
model.sol('sol1').feature('s1').create('i2', 'Iterative');
model.sol('sol1').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i2').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i2').set('nlinnormuse', true);
model.sol('sol1').feature('s1').feature('i2').label('Suggested Iterative Solver solid (te1)');
model.sol('sol1').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('prefun', 'gmg');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('s1').create('d2', 'Direct');
model.sol('sol1').feature('s1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d2').label('Direct, heat transfer variables ht (te1)');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('s1').feature('se1').set('segterm', 'iter');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subtermconst', 'tol');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subntolfact', 1);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subtermconst', 'tol');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subntolfact', 1);
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('vol1', 'Volume');
model.result('pg1').feature('vol1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('vol1').set('threshold', 'manual');
model.result('pg1').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg1').feature('vol1').set('resolution', 'custom');
model.result('pg1').feature('vol1').set('refine', 2);
model.result('pg1').feature('vol1').set('colortable', 'Prism');
model.result('pg1').feature('vol1').create('def', 'Deform');
model.result('pg1').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg1').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Temperature (ht)');
model.result('pg2').set('data', 'dset1');
model.result('pg2').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond3/pcond3/pg1');
model.result('pg2').feature.create('vol1', 'Volume');
model.result('pg2').feature('vol1').label('Volume');
model.result('pg2').feature('vol1').set('showsolutionparams', 'on');
model.result('pg2').feature('vol1').set('expr', 'T');
model.result('pg2').feature('vol1').set('colortable', 'HeatCameraLight');
model.result('pg2').feature('vol1').set('smooth', 'internal');
model.result('pg2').feature('vol1').set('showsolutionparams', 'on');
model.result('pg2').feature('vol1').set('data', 'parent');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('vol1').set('unit', 'MPa');
model.result('pg1').run;
model.result('pg1').feature('vol1').feature('def').active(false);
model.result('pg1').run;
model.result('pg1').feature('vol1').create('mrkr1', 'Marker');
model.result('pg1').run;
model.result('pg1').feature('vol1').feature('mrkr1').set('display', 'max');
model.result('pg1').feature('vol1').feature('mrkr1').set('precision', 3);
model.result('pg1').feature('vol1').feature('mrkr1').set('backgroundcolor', 'fromtheme');
model.result('pg1').feature('vol1').feature('mrkr1').set('showframe', true);
model.result('pg1').run;
model.result('pg1').feature('vol1').create('tran1', 'Transparency');
model.result('pg1').run;
model.result('pg1').feature('vol1').feature('tran1').set('transparency', 0.2);
model.result('pg1').feature('vol1').feature('tran1').set('uniformblending', 0.5);
model.result('pg1').run;
model.result('pg2').run;
model.result('pg2').set('edges', false);
model.result('pg2').run;
model.result('pg2').feature('vol1').create('tran1', 'Transparency');
model.result('pg2').run;
model.result('pg2').feature('vol1').feature('tran1').set('transparency', 0.2);
model.result('pg2').feature('vol1').feature('tran1').set('uniformblending', 0.5);
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').run;
model.result('pg3').label('Displacement');
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', 'solid.disp');
model.result('pg3').feature('surf1').set('descr', 'Displacement magnitude');
model.result('pg3').feature('surf1').set('unit', 'mm');
model.result('pg3').feature('surf1').set('colortable', 'SpectrumLight');
model.result('pg3').run;
model.result('pg3').run;

model.title('Thermal-Stress Analysis of a Turbine Stator Blade');

model.description('This example shows how to compute thermally induced stresses in a turbine stator blade using the Thermal Stress, Solid interface.');

model.label('turbine_stator.mph');

model.result('pg3').run;

model.physics('solid').feature('lemm1').set('reducedIntegration', true);
model.physics('solid').feature('lemm1').create('cmm1', 'Creep2', 3);
model.physics('solid').feature('lemm1').feature('cmm1').set('thermalEffects', 'Arrhenius');
model.physics('solid').feature('lemm1').feature('cmm1').set('T0', 'T_work');
model.physics('solid').feature('lemm1').feature('cmm1').set('Q', '350[kJ/mol]');

model.material('mat1').propertyGroup.create('Norton', 'Norton');
model.material('mat1').propertyGroup('Norton').set('A_nor', {'2.5e-23[1/h]'});
model.material('mat1').propertyGroup('Norton').set('sigRef_nor', {'1[MPa]'});
model.material('mat1').propertyGroup('Norton').set('n_nor', {'6.75'});

model.probe.create('dom1', 'Domain');
model.probe('dom1').model('comp1');
model.probe('dom1').set('intsurface', true);
model.probe('dom1').set('intvolume', true);
model.probe('dom1').set('type', 'maximum');
model.probe('dom1').set('expr', 'solid.eceGp');
model.probe('dom1').set('descractive', true);

model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').set('tunit', 'h');
model.study('std1').feature('time').set('tlist', '0 10 100 400');
model.study('std1').feature('time').setEntry('activate', 'ht', false);

model.sol('sol1').study('std1');

model.study('std1').feature('time').set('notsolnum', 'auto');
model.study('std1').feature('time').set('notsolvertype', 'solnum');
model.study('std1').feature('time').set('notsolnumhide', 'off');
model.study('std1').feature('time').set('notstudyhide', 'off');
model.study('std1').feature('time').set('notsolhide', 'on');
model.study('std1').feature('time').set('solnum', 'auto');
model.study('std1').feature('time').set('solvertype', 'solnum');
model.study('std1').feature('time').set('solnumhide', 'off');
model.study('std1').feature('time').set('initstudyhide', 'off');
model.study('std1').feature('time').set('initsolhide', 'on');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('se1', 'Segregated');
model.sol('sol1').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_T'});
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subdamp', 1);
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 10000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, heat transfer variables ht (te1)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').label('Temperature');
model.sol('sol1').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_u'});
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('s1').feature('d1').label('Suggested Direct Solver solid (te1)');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').label('Solid Mechanics');
model.sol('sol1').feature('s1').feature('se1').set('segtermonres', 'off');
model.sol('sol1').feature('s1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol1').feature('s1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.T 0 ');
model.sol('sol1').feature('s1').create('i2', 'Iterative');
model.sol('sol1').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i2').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i2').set('nlinnormuse', true);
model.sol('sol1').feature('s1').feature('i2').label('Suggested Iterative Solver solid (te1)');
model.sol('sol1').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('prefun', 'gmg');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('s1').create('d2', 'Direct');
model.sol('sol1').feature('s1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d2').label('Direct, heat transfer variables ht (te1)');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'time');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_u').set('scaleval', '1e-2*0.3401982168493274');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('initsoluse', 'sol2');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', '0 10 100 400');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'pg1');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {'dom1'});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature('fc1').set('minstep', 0.5);
model.sol('sol1').feature('t1').feature('fc1').set('useminsteprecovery', 'on');
model.sol('sol1').feature('t1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 4);
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('t1').feature('d1').label('Suggested Direct Solver solid (te1)');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', true);
model.sol('sol1').feature('t1').feature('i1').label('Suggested Iterative Solver solid (te1)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('t1').create('d2', 'Direct');
model.sol('sol1').feature('t1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d2').label('Direct, heat transfer variables ht (te1)');
model.sol('sol1').feature('t1').create('i2', 'Iterative');
model.sol('sol1').feature('t1').feature('i2').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i2').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i2').set('itrestart', 50);
model.sol('sol1').feature('t1').feature('i2').set('rhob', 20);
model.sol('sol1').feature('t1').feature('i2').set('maxlinit', 10000);
model.sol('sol1').feature('t1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i2').label('AMG, heat transfer variables ht (te1)');
model.sol('sol1').feature('t1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature('fc1').set('minstep', 0.5);
model.sol('sol1').feature('t1').feature('fc1').set('useminsteprecovery', 'on');
model.sol('sol1').feature('t1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 4);
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature('se1').set('segterm', 'iter');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subtermconst', 'tol');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subntolfact', 1);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subtermconst', 'tol');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subntolfact', 1);
model.sol('sol1').feature('t1').set('tstepsbdf', 'strict');
model.sol('sol1').feature('t1').set('initialstepbdfactive', true);
model.sol('sol1').feature('t1').set('initialstepbdf', 0.1);
model.sol('sol1').copySolution('sol2');

model.probe('dom1').genResult('none');

model.sol('sol1').runFromTo('st2', 'v2');

model.result('pg1').run;
model.result('pg4').set('window', 'window1');
model.result('pg4').run;
model.result('pg4').label('Equivalent Creep Strain vs Time');
model.result('pg4').set('ylabelactive', true);
model.result('pg4').set('ylabel', 'Equivalent creep strain (1)');
model.result('pg4').set('showlegends', false);
model.result('pg4').set('window', 'window1');
model.result('pg4').run;
model.result('pg4').feature('tblp1').set('linemarker', 'circle');

model.probe('dom1').genResult('none');

model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').setIndex('looplevel', 1, 0);
model.result('pg1').setIndex('looplevel', 4, 0);
model.result.duplicate('pg5', 'pg1');
model.result('pg5').run;
model.result('pg5').label('Equivalent Creep Strain');
model.result('pg5').run;
model.result('pg5').feature('vol1').set('expr', 'solid.eceGp');
model.result('pg5').run;
model.result('pg5').feature('vol1').set('rangecoloractive', true);
model.result('pg5').feature('vol1').set('rangecolormax', 0.005);
model.result('pg5').feature('vol1').set('colortabletrans', 'nonlinear');
model.result('pg5').feature('vol1').set('colorcalibration', '-.7');
model.result('pg5').run;
model.result('pg5').feature('vol1').feature('mrkr1').set('precision', 2);
model.result('pg5').run;
model.result('pg4').set('window', 'window1');
model.result('pg4').run;
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').feature('vol1').feature('mrkr1').active(false);
model.result('pg5').run;
model.result('pg5').feature('vol1').feature('tran1').active(false);
model.result('pg5').feature('vol1').feature('tran1').active(true);
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').feature('vol1').feature('mrkr1').active(true);
model.result('pg5').run;
model.result('pg5').run;

model.title('Creep Analysis of a Turbine Stator Blade');

model.description('This example shows how to compute deformations caused by secondary creep in a turbine stator blade. The creep rate is highly influenced by temperature, and the deformation and stress relaxation is thus controlled by the computed temperature field.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('turbine_stator_creep.mph');

model.modelNode.label('Components');

out = model;
