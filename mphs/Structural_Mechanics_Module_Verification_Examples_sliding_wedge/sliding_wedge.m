function out = model
%
% sliding_wedge.m
%
% Model exported on May 26 2025, 21:34 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Structural_Mechanics_Module/Verification_Examples');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/solid', true);

model.param.set('G', '3058[N]');
model.param.descr('G', 'Gravity load');
model.param.set('F', '1500[N]');
model.param.descr('F', 'Applied force');
model.param.set('K', '0[N/m]');
model.param.descr('K', 'Spring stiffness');
model.param.set('mu', '0');
model.param.descr('mu', 'Friction coefficient');
model.param.set('para', '0');
model.param.descr('para', 'Computation parameter');

model.geom('geom1').create('pol1', 'Polygon');
model.geom('geom1').feature('pol1').set('source', 'table');
model.geom('geom1').feature('pol1').setIndex('table', 0, 0, 0);
model.geom('geom1').feature('pol1').setIndex('table', 0, 0, 1);
model.geom('geom1').feature('pol1').setIndex('table', 6, 1, 0);
model.geom('geom1').feature('pol1').setIndex('table', 0, 1, 1);
model.geom('geom1').feature('pol1').setIndex('table', 6, 2, 0);
model.geom('geom1').feature('pol1').setIndex('table', 1.3, 2, 1);
model.geom('geom1').feature('pol1').setIndex('table', 0, 3, 0);
model.geom('geom1').feature('pol1').setIndex('table', 0.7, 3, 1);
model.geom('geom1').runPre('fin');
model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', [4 1.2]);
model.geom('geom1').feature('r1').set('pos', [1 0.8]);
model.geom('geom1').run('r1');
model.geom('geom1').create('copy1', 'Copy');
model.geom('geom1').feature('copy1').selection('input').set({'pol1'});
model.geom('geom1').run('copy1');
model.geom('geom1').create('dif1', 'Difference');
model.geom('geom1').feature('dif1').selection('input').set({'r1'});
model.geom('geom1').feature('dif1').selection('input2').set({'copy1'});
model.geom('geom1').run('dif1');
model.geom('geom1').feature('fin').set('action', 'assembly');
model.geom('geom1').feature('fin').set('pairtype', 'contact');
model.geom('geom1').run('fin');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat1').propertyGroup('Enu').set('E', {'206[GPa]'});
model.material('mat1').propertyGroup('Enu').set('nu', {'0.3'});
model.material('mat1').propertyGroup('def').set('density', {'6000[kg/m^3]'});

model.physics('solid').feature('dcnt1').create('fric1', 'Friction', 1);
model.physics('solid').feature('dcnt1').feature('fric1').set('mu_fric', 'mu');
model.physics('solid').create('bl1', 'BodyLoad', 2);
model.physics('solid').feature('bl1').selection.set([2]);
model.physics('solid').feature('bl1').set('LoadType', 'TotalForce');
model.physics('solid').feature('bl1').set('Ftot', {'0' '-G*para' '0'});
model.physics('solid').create('spf1', 'SpringFoundation1', 1);
model.physics('solid').feature('spf1').selection.set([5]);
model.physics('solid').feature('spf1').set('SpringType', 'kTot');
model.physics('solid').feature('spf1').set('kTot', {'K' '0' '0' '0' '0' '0' '0' '0' '0'});
model.physics('solid').create('bndl1', 'BoundaryLoad', 1);
model.physics('solid').feature('bndl1').selection.set([5]);
model.physics('solid').feature('bndl1').set('LoadType', 'TotalForce');
model.physics('solid').feature('bndl1').set('Ftot', {'F*para' '0' '0'});
model.physics('solid').create('fix1', 'Fixed', 1);
model.physics('solid').feature('fix1').selection.set([2]);

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([1 5]);
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 10);
model.mesh('mesh1').feature('map1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis2').selection.set([2]);
model.mesh('mesh1').feature('map1').feature('dis2').set('numelem', 60);
model.mesh('mesh1').feature('map1').create('dis3', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis3').selection.set([7]);
model.mesh('mesh1').feature('map1').feature('dis3').set('numelem', 40);
model.mesh('mesh1').run;

model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'G', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'N', 0);
model.study('std1').feature('param').setIndex('pname', 'G', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'N', 0);
model.study('std1').feature('param').setIndex('pname', 'mu', 0);
model.study('std1').feature('param').setIndex('plistarr', '0 0.1 0.2', 0);
model.study('std1').feature('param').setIndex('pname', 'G', 1);
model.study('std1').feature('param').setIndex('plistarr', '', 1);
model.study('std1').feature('param').setIndex('punit', 'N', 1);
model.study('std1').feature('param').setIndex('pname', 'G', 1);
model.study('std1').feature('param').setIndex('plistarr', '', 1);
model.study('std1').feature('param').setIndex('punit', 'N', 1);
model.study('std1').feature('param').setIndex('pname', 'K', 1);
model.study('std1').feature('param').setIndex('plistarr', '1194 882 563.9', 1);
model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 'G', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'N', 0);
model.study('std1').feature('stat').setIndex('pname', 'G', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'N', 0);
model.study('std1').feature('stat').setIndex('pname', 'para', 0);
model.study('std1').feature('stat').setIndex('plistarr', '1e-3 1', 0);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*6.32455532033676');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol1').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s1').set('control', 'stat');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'ddog');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'ddog');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'mu' 'K'});
model.batch('p1').set('plistarr', {'0 0.1 0.2' '1194 882 563.9'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol('sol1').feature('s1').set('stol', '1e-6');
model.sol('sol1').feature('s1').feature('p1').set('paramtuning', true);
model.sol('sol1').feature('s1').feature('p1').set('pinitstep', '1e-2');
model.sol('sol1').feature('s1').feature('p1').set('pminstep', '1e-6');
model.sol('sol1').feature('s1').feature('p1').set('porder', 'linear');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'const');

model.study('std1').label('Study 1: Penalty');

model.sol.create('sol2');
model.sol('sol2').study('std1');
model.sol('sol2').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').run('compute');

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset2');
model.result('pg1').setIndex('looplevel', 2, 0);
model.result('pg1').setIndex('looplevel', 3, 1);
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('surf1').set('threshold', 'manual');
model.result('pg1').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg1').feature('surf1').set('colortable', 'Rainbow');
model.result('pg1').feature('surf1').set('colortabletrans', 'none');
model.result('pg1').feature('surf1').set('colorscalemode', 'linear');
model.result('pg1').feature('surf1').set('resolution', 'normal');
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg1').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg1').feature('surf1').feature('def').set('scale', '1');
model.result('pg1').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg1').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg1').run;
model.result('pg1').label('Displacement: Penalty');
model.result('pg1').run;
model.result('pg1').feature('surf1').set('expr', 'u');
model.result('pg1').feature('surf1').set('descr', 'Displacement field, X-component');
model.result('pg1').feature('surf1').set('colortable', 'RainbowLight');
model.result('pg1').run;
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').set('data', 'dset2');
model.result('pg2').setIndex('looplevel', 2, 0);
model.result('pg2').setIndex('looplevel', 3, 1);
model.result('pg2').set('defaultPlotID', 'contactForces');
model.result('pg2').label('Contact Forces (solid)');
model.result('pg2').set('showlegends', true);
model.result('pg2').set('titletype', 'label');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('showlegendsunit', true);
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'1'});
model.result('pg2').feature('surf1').label('Gray Surfaces');
model.result('pg2').feature('surf1').set('coloring', 'uniform');
model.result('pg2').feature('surf1').set('color', 'gray');
model.result('pg2').feature('surf1').create('def', 'Deform');
model.result('pg2').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg2').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg2').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg2').feature('surf1').feature('def').set('scale', 1);
model.result('pg2').feature('surf1').create('sel1', 'Selection');
model.result('pg2').feature('surf1').feature('sel1').selection.geom('geom1', 2);
model.result('pg2').feature('surf1').feature('sel1').selection.set([1 2]);
model.result('pg2').create('arwl1', 'ArrowLine');
model.result('pg2').feature('arwl1').set('arrowbase', 'head');
model.result('pg2').feature('arwl1').set('expr', {'solid.dcnt1.Tnx' 'solid.dcnt1.Tny'});
model.result('pg2').feature('arwl1').set('placement', 'gausspoints');
model.result('pg2').feature('arwl1').set('gporder', 4);
model.result('pg2').feature('arwl1').label('Contact 1, Pressure');
model.result('pg2').feature('arwl1').set('inheritplot', 'none');
model.result('pg2').feature('arwl1').set('color', 'green');
model.result('pg2').feature('arwl1').create('col', 'Color');
model.result('pg2').feature('arwl1').feature('col').set('colortable', 'Rainbow');
model.result('pg2').feature('arwl1').feature('col').set('colortabletrans', 'none');
model.result('pg2').feature('arwl1').feature('col').set('colorscalemode', 'linear');
model.result('pg2').feature('arwl1').feature('col').set('colordata', 'arrowlength');
model.result('pg2').feature('arwl1').feature('col').set('coloring', 'gradient');
model.result('pg2').feature('arwl1').feature('col').set('topcolor', 'green');
model.result('pg2').feature('arwl1').feature('col').set('bottomcolor', 'custom');
model.result('pg2').feature('arwl1').feature('col').set('custombottomcolor', [0.509804 0.54902 0.509804]);
model.result('pg2').feature('arwl1').create('def', 'Deform');
model.result('pg2').feature('arwl1').feature('def').set('expr', {'u' 'v'});
model.result('pg2').feature('arwl1').feature('def').set('descr', 'Displacement field');
model.result('pg2').feature('arwl1').feature('def').set('scaleactive', true);
model.result('pg2').feature('arwl1').feature('def').set('scale', 1);
model.result('pg2').feature.move('surf1', 1);
model.result('pg2').set('legendpos', 'rightdouble');
model.result('pg2').create('arwl2', 'ArrowLine');
model.result('pg2').feature('arwl2').set('arrowbase', 'tail');
model.result('pg2').feature('arwl2').set('expr', {'solid.dcnt1.Ttx' 'solid.dcnt1.Tty'});
model.result('pg2').feature('arwl2').set('placement', 'gausspoints');
model.result('pg2').feature('arwl2').set('gporder', 4);
model.result('pg2').feature('arwl2').label('Contact 1, Friction Force');
model.result('pg2').feature('arwl2').set('inheritplot', 'none');
model.result('pg2').feature('arwl2').set('color', 'magenta');
model.result('pg2').feature('arwl2').create('col', 'Color');
model.result('pg2').feature('arwl2').feature('col').set('colortable', 'Rainbow');
model.result('pg2').feature('arwl2').feature('col').set('colortabletrans', 'none');
model.result('pg2').feature('arwl2').feature('col').set('colorscalemode', 'linear');
model.result('pg2').feature('arwl2').feature('col').set('colordata', 'arrowlength');
model.result('pg2').feature('arwl2').feature('col').set('coloring', 'gradient');
model.result('pg2').feature('arwl2').feature('col').set('topcolor', 'magenta');
model.result('pg2').feature('arwl2').feature('col').set('bottomcolor', 'custom');
model.result('pg2').feature('arwl2').feature('col').set('custombottomcolor', [0.54902 0.509804 0.54902]);
model.result('pg2').feature('arwl2').create('def', 'Deform');
model.result('pg2').feature('arwl2').feature('def').set('expr', {'u' 'v'});
model.result('pg2').feature('arwl2').feature('def').set('descr', 'Displacement field');
model.result('pg2').feature('arwl2').feature('def').set('scaleactive', true);
model.result('pg2').feature('arwl2').feature('def').set('scale', 1);
model.result('pg2').feature.move('surf1', 2);
model.result('pg2').label('Contact Forces (solid)');
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').set('data', 'dset2');
model.result('pg3').setIndex('looplevel', 2, 0);
model.result('pg3').setIndex('looplevel', 3, 1);
model.result('pg3').set('defaultPlotID', 'volumeLoads');
model.result('pg3').label('Volume Loads (solid)');
model.result('pg3').set('showlegends', true);
model.result('pg3').set('titletype', 'label');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').set('showlegendsunit', true);
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', {'1'});
model.result('pg3').feature('surf1').label('Gray Surfaces');
model.result('pg3').feature('surf1').set('coloring', 'uniform');
model.result('pg3').feature('surf1').set('color', 'gray');
model.result('pg3').feature('surf1').set('inheritcolor', false);
model.result('pg3').feature('surf1').set('inheritrange', false);
model.result('pg3').feature('surf1').set('inheritheightscale', false);
model.result('pg3').feature('surf1').create('def', 'Deform');
model.result('pg3').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg3').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg3').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg3').feature('surf1').feature('def').set('scale', 1);
model.result('pg3').feature('surf1').create('sel1', 'Selection');
model.result('pg3').feature('surf1').feature('sel1').selection.geom('geom1', 2);
model.result('pg3').feature('surf1').feature('sel1').selection.set([1 2]);
model.result('pg3').create('arws1', 'ArrowSurface');
model.result('pg3').feature('arws1').set('expr', {'solid.bl1.F_Vx' 'solid.bl1.F_Vy'});
model.result('pg3').feature('arws1').set('placement', 'gausspoints');
model.result('pg3').feature('arws1').set('arrowbase', 'tail');
model.result('pg3').feature('arws1').label('Body Load 1');
model.result('pg3').feature('arws1').set('inheritplot', 'none');
model.result('pg3').feature('arws1').create('col', 'Color');
model.result('pg3').feature('arws1').feature('col').set('colortable', 'Rainbow');
model.result('pg3').feature('arws1').feature('col').set('colortabletrans', 'none');
model.result('pg3').feature('arws1').feature('col').set('colorscalemode', 'linear');
model.result('pg3').feature('arws1').feature('col').set('colordata', 'arrowlength');
model.result('pg3').feature('arws1').feature('col').set('coloring', 'gradient');
model.result('pg3').feature('arws1').feature('col').set('topcolor', 'red');
model.result('pg3').feature('arws1').feature('col').set('bottomcolor', 'custom');
model.result('pg3').feature('arws1').feature('col').set('custombottomcolor', [0.5882353186607361 0.5137255191802979 0.5176470875740051]);
model.result('pg3').feature('arws1').set('color', 'magenta');
model.result('pg3').feature('arws1').create('def', 'Deform');
model.result('pg3').feature('arws1').feature('def').set('expr', {'u' 'v'});
model.result('pg3').feature('arws1').feature('def').set('descr', 'Displacement field');
model.result('pg3').feature('arws1').feature('def').set('scaleactive', true);
model.result('pg3').feature('arws1').feature('def').set('scale', 1);
model.result('pg3').feature.move('surf1', 1);
model.result('pg3').label('Volume Loads (solid)');

model.nodeGroup.create('dset2solidlgrp', 'Results');
model.nodeGroup('dset2solidlgrp').label('Applied Loads (solid)');
model.nodeGroup('dset2solidlgrp').set('type', 'plotgroup');
model.nodeGroup('dset2solidlgrp').placeAfter('plotgroup', 'pg3');
model.nodeGroup('dset2solidlgrp').label('Applied Loads (solid)');
model.nodeGroup('dset2solidlgrp').placeAfter('plotgroup', 'pg3');

model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').set('data', 'dset2');
model.result('pg4').setIndex('looplevel', 2, 0);
model.result('pg4').setIndex('looplevel', 3, 1);
model.result('pg4').set('defaultPlotID', 'boundaryLoads');
model.result('pg4').label('Boundary Loads (solid)');
model.result('pg4').set('showlegends', true);
model.result('pg4').set('titletype', 'label');
model.result('pg4').set('frametype', 'spatial');
model.result('pg4').set('showlegendsunit', true);
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', {'1'});
model.result('pg4').feature('surf1').label('Gray Surfaces');
model.result('pg4').feature('surf1').set('coloring', 'uniform');
model.result('pg4').feature('surf1').set('color', 'gray');
model.result('pg4').feature('surf1').set('inheritcolor', false);
model.result('pg4').feature('surf1').set('inheritrange', false);
model.result('pg4').feature('surf1').set('inheritheightscale', false);
model.result('pg4').feature('surf1').create('def', 'Deform');
model.result('pg4').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg4').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg4').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg4').feature('surf1').feature('def').set('scale', 1);
model.result('pg4').feature('surf1').create('sel1', 'Selection');
model.result('pg4').feature('surf1').feature('sel1').selection.geom('geom1', 2);
model.result('pg4').feature('surf1').feature('sel1').selection.set([1 2]);
model.result('pg4').create('arwl1', 'ArrowLine');
model.result('pg4').feature('arwl1').set('expr', {'solid.bndl1.F_Ax' 'solid.bndl1.F_Ay'});
model.result('pg4').feature('arwl1').set('placement', 'gausspoints');
model.result('pg4').feature('arwl1').set('arrowbase', 'tail');
model.result('pg4').feature('arwl1').label('Boundary Load 1');
model.result('pg4').feature('arwl1').set('inheritplot', 'none');
model.result('pg4').feature('arwl1').create('col', 'Color');
model.result('pg4').feature('arwl1').feature('col').set('colortable', 'Rainbow');
model.result('pg4').feature('arwl1').feature('col').set('colortabletrans', 'none');
model.result('pg4').feature('arwl1').feature('col').set('colorscalemode', 'linear');
model.result('pg4').feature('arwl1').feature('col').set('colordata', 'arrowlength');
model.result('pg4').feature('arwl1').feature('col').set('coloring', 'gradient');
model.result('pg4').feature('arwl1').feature('col').set('topcolor', 'red');
model.result('pg4').feature('arwl1').feature('col').set('bottomcolor', 'custom');
model.result('pg4').feature('arwl1').feature('col').set('custombottomcolor', [0.5882353186607361 0.5137255191802979 0.5176470875740051]);
model.result('pg4').feature('arwl1').set('color', 'red');
model.result('pg4').feature('arwl1').create('def', 'Deform');
model.result('pg4').feature('arwl1').feature('def').set('expr', {'u' 'v'});
model.result('pg4').feature('arwl1').feature('def').set('descr', 'Displacement field');
model.result('pg4').feature('arwl1').feature('def').set('scaleactive', true);
model.result('pg4').feature('arwl1').feature('def').set('scale', 1);
model.result('pg4').feature.move('surf1', 1);
model.result('pg4').label('Boundary Loads (solid)');

model.nodeGroup('dset2solidlgrp').add('plotgroup', 'pg3');
model.nodeGroup('dset2solidlgrp').add('plotgroup', 'pg4');

model.result('pg2').run;
model.result('pg2').label('Contact: Penalty');
model.result('pg2').run;
model.result('pg2').run;
model.result.numerical.create('pev1', 'EvalPoint');
model.result.numerical('pev1').label('Point Evaluation: Penalty');
model.result.numerical('pev1').set('data', 'dset2');
model.result.numerical('pev1').setIndex('looplevelinput', 'last', 0);
model.result.numerical('pev1').set('tablecols', 'level2');
model.result.numerical('pev1').selection.set([8]);
model.result.numerical('pev1').set('expr', {'u'});
model.result.numerical('pev1').set('descr', {'Displacement field, X-component'});
model.result.numerical('pev1').set('unit', {'m'});
model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').comments('Point Evaluation: Penalty');
model.result.numerical('pev1').set('table', 'tbl1');
model.result.numerical('pev1').setResult;

model.physics('solid').feature.duplicate('dcnt2', 'dcnt1');
model.physics('solid').feature('dcnt2').set('pairs', {'ap1'});
model.physics('solid').feature('dcnt2').set('ContactMethodCtrl', 'AugmentedLagrange');
model.physics('solid').feature.duplicate('dcnt3', 'dcnt2');
model.physics('solid').feature('dcnt3').set('SolutionMethod', 'coupled');

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/solid', true);
model.study('std2').create('param', 'Parametric');
model.study('std2').feature('param').setIndex('pname', 'G', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', 'N', 0);
model.study('std2').feature('param').setIndex('pname', 'G', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', 'N', 0);
model.study('std2').feature('param').setIndex('pname', 'mu', 0);
model.study('std2').feature('param').setIndex('plistarr', '0 0.1 0.2', 0);
model.study('std2').feature('param').setIndex('pname', 'G', 1);
model.study('std2').feature('param').setIndex('plistarr', '', 1);
model.study('std2').feature('param').setIndex('punit', 'N', 1);
model.study('std2').feature('param').setIndex('pname', 'G', 1);
model.study('std2').feature('param').setIndex('plistarr', '', 1);
model.study('std2').feature('param').setIndex('punit', 'N', 1);
model.study('std2').feature('param').setIndex('pname', 'K', 1);
model.study('std2').feature('param').setIndex('plistarr', '1194 882 563.9', 1);
model.study('std2').feature('stat').set('useadvanceddisable', true);
model.study('std2').feature('stat').set('disabledphysics', {'solid/dcnt3'});
model.study('std2').feature('stat').set('useparam', true);
model.study('std2').feature('stat').setIndex('pname', 'G', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 'N', 0);
model.study('std2').feature('stat').setIndex('pname', 'G', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 'N', 0);
model.study('std2').feature('stat').setIndex('pname', 'para', 0);
model.study('std2').feature('stat').setIndex('plistarr', '1e-3 1', 0);
model.study('std2').label('Study 2: Augmented Lagrangian, Segregated');

model.sol.create('sol6');
model.sol('sol6').study('std2');
model.sol('sol6').create('st1', 'StudyStep');
model.sol('sol6').feature('st1').set('study', 'std2');
model.sol('sol6').feature('st1').set('studystep', 'stat');
model.sol('sol6').create('v1', 'Variables');
model.sol('sol6').feature('v1').feature('comp1_solid_Tn_ap1').set('scalemethod', 'manual');
model.sol('sol6').feature('v1').feature('comp1_solid_Tt_ap1').set('scalemethod', 'manual');
model.sol('sol6').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol6').feature('v1').feature('comp1_solid_Tn_ap1').set('scaleval', '100000000');
model.sol('sol6').feature('v1').feature('comp1_solid_Tt_ap1').set('scaleval', '10000000');
model.sol('sol6').feature('v1').feature('comp1_u').set('scaleval', '1e-2*6.32455532033676');
model.sol('sol6').feature('v1').set('control', 'stat');
model.sol('sol6').create('s1', 'Stationary');
model.sol('sol6').feature('s1').create('p1', 'Parametric');
model.sol('sol6').feature('s1').feature.remove('pDef');
model.sol('sol6').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol6').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol6').feature('s1').set('control', 'stat');
model.sol('sol6').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol6').feature('s1').create('se1', 'Segregated');
model.sol('sol6').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol6').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol6').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_u'});
model.sol('sol6').feature('s1').feature('se1').feature('ss1').set('subdtech', 'ddog');
model.sol('sol6').feature('s1').feature('se1').feature('ss1').set('subtermauto', 'itertol');
model.sol('sol6').feature('s1').feature('se1').feature('ss1').set('subiter', 7);
model.sol('sol6').feature('s1').feature('se1').feature('ss1').set('subntolfact', 1);
model.sol('sol6').feature('s1').feature('se1').feature('ss1').set('linsolver', 'dDef');
model.sol('sol6').feature('s1').feature('se1').feature('ss1').label('Solid Mechanics');
model.sol('sol6').feature('s1').feature('se1').create('ls1', 'LumpedStep');
model.sol('sol6').feature('s1').feature('se1').feature('ls1').set('segvar', {'comp1_solid_Tn_ap1' 'comp1_solid_Tt_ap1'});
model.sol('sol6').feature('s1').feature('se1').set('maxsegiter', 15);
model.sol('sol6').feature('s1').feature.remove('fcDef');
model.sol('sol6').attach('std2');

model.batch.create('p2', 'Parametric');
model.batch('p2').study('std2');
model.batch('p2').create('so1', 'Solutionseq');
model.batch('p2').feature('so1').set('seq', 'sol6');
model.batch('p2').feature('so1').set('store', 'on');
model.batch('p2').feature('so1').set('clear', 'on');
model.batch('p2').feature('so1').set('psol', 'none');
model.batch('p2').set('pname', {'mu' 'K'});
model.batch('p2').set('plistarr', {'0 0.1 0.2' '1194 882 563.9'});
model.batch('p2').set('sweeptype', 'sparse');
model.batch('p2').set('probesel', 'all');
model.batch('p2').set('probes', {});
model.batch('p2').set('plot', 'off');
model.batch('p2').set('err', 'on');
model.batch('p2').attach('std2');
model.batch('p2').set('control', 'param');

model.sol('sol6').feature('v1').feature('comp1_solid_Tt_ap1').set('scaleval', 100);
model.sol('sol6').feature('v1').feature('comp1_solid_Tn_ap1').set('scaleval', 1000);
model.sol('sol6').feature('s1').feature('p1').set('paramtuning', true);
model.sol('sol6').feature('s1').feature('p1').set('pinitstep', 0.1);
model.sol('sol6').feature('s1').feature('p1').set('pmaxstep', 1);
model.sol.create('sol7');
model.sol('sol7').study('std2');
model.sol('sol7').label('Parametric Solutions 2');

model.batch('p2').feature('so1').set('psol', 'sol7');
model.batch('p2').run('compute');

model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').set('data', 'dset4');
model.result('pg5').setIndex('looplevel', 2, 0);
model.result('pg5').setIndex('looplevel', 3, 1);
model.result('pg5').set('defaultPlotID', 'stress');
model.result('pg5').label('Stress (solid)');
model.result('pg5').set('frametype', 'spatial');
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg5').feature('surf1').set('threshold', 'manual');
model.result('pg5').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg5').feature('surf1').set('colortable', 'Rainbow');
model.result('pg5').feature('surf1').set('colortabletrans', 'none');
model.result('pg5').feature('surf1').set('colorscalemode', 'linear');
model.result('pg5').feature('surf1').set('resolution', 'normal');
model.result('pg5').feature('surf1').set('colortable', 'Prism');
model.result('pg5').feature('surf1').create('def', 'Deform');
model.result('pg5').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg5').feature('surf1').feature('def').set('scale', '1');
model.result('pg5').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg5').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg5').run;

model.study.create('std3');
model.study('std3').create('stat', 'Stationary');
model.study('std3').feature('stat').setSolveFor('/physics/solid', true);
model.study('std3').create('param', 'Parametric');
model.study('std3').feature('param').setIndex('pname', 'G', 0);
model.study('std3').feature('param').setIndex('plistarr', '', 0);
model.study('std3').feature('param').setIndex('punit', 'N', 0);
model.study('std3').feature('param').setIndex('pname', 'G', 0);
model.study('std3').feature('param').setIndex('plistarr', '', 0);
model.study('std3').feature('param').setIndex('punit', 'N', 0);
model.study('std3').feature('param').setIndex('pname', 'mu', 0);
model.study('std3').feature('param').setIndex('plistarr', '0 0.1 0.2', 0);
model.study('std3').feature('param').setIndex('pname', 'G', 1);
model.study('std3').feature('param').setIndex('plistarr', '', 1);
model.study('std3').feature('param').setIndex('punit', 'N', 1);
model.study('std3').feature('param').setIndex('pname', 'G', 1);
model.study('std3').feature('param').setIndex('plistarr', '', 1);
model.study('std3').feature('param').setIndex('punit', 'N', 1);
model.study('std3').feature('param').setIndex('pname', 'K', 1);
model.study('std3').feature('param').setIndex('plistarr', '1194 882 563.9', 1);
model.study('std3').feature('stat').set('useparam', true);
model.study('std3').feature('stat').setIndex('pname', 'G', 0);
model.study('std3').feature('stat').setIndex('plistarr', '', 0);
model.study('std3').feature('stat').setIndex('punit', 'N', 0);
model.study('std3').feature('stat').setIndex('pname', 'G', 0);
model.study('std3').feature('stat').setIndex('plistarr', '', 0);
model.study('std3').feature('stat').setIndex('punit', 'N', 0);
model.study('std3').feature('stat').setIndex('pname', 'para', 0);
model.study('std3').feature('stat').setIndex('plistarr', '1e-3 1', 0);
model.study('std3').label('Study 3: Augmented Lagrangian, Coupled');

model.sol.create('sol11');
model.sol('sol11').study('std3');
model.sol('sol11').create('st1', 'StudyStep');
model.sol('sol11').feature('st1').set('study', 'std3');
model.sol('sol11').feature('st1').set('studystep', 'stat');
model.sol('sol11').create('v1', 'Variables');
model.sol('sol11').feature('v1').feature('comp1_solid_Tn_ap1').set('scalemethod', 'manual');
model.sol('sol11').feature('v1').feature('comp1_solid_Tt_ap1').set('scalemethod', 'manual');
model.sol('sol11').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol11').feature('v1').feature('comp1_solid_Tn_ap1').set('scaleval', '100000000');
model.sol('sol11').feature('v1').feature('comp1_solid_Tt_ap1').set('scaleval', '10000000');
model.sol('sol11').feature('v1').feature('comp1_u').set('scaleval', '1e-2*6.32455532033676');
model.sol('sol11').feature('v1').set('control', 'stat');
model.sol('sol11').create('s1', 'Stationary');
model.sol('sol11').feature('s1').create('p1', 'Parametric');
model.sol('sol11').feature('s1').feature.remove('pDef');
model.sol('sol11').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol11').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol11').feature('s1').set('control', 'stat');
model.sol('sol11').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol11').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol11').feature('s1').feature('fc1').set('dtech', 'ddog');
model.sol('sol11').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol11').feature('s1').feature('fc1').set('dtech', 'ddog');
model.sol('sol11').feature('s1').feature.remove('fcDef');
model.sol('sol11').attach('std3');

model.batch.create('p3', 'Parametric');
model.batch('p3').study('std3');
model.batch('p3').create('so1', 'Solutionseq');
model.batch('p3').feature('so1').set('seq', 'sol11');
model.batch('p3').feature('so1').set('store', 'on');
model.batch('p3').feature('so1').set('clear', 'on');
model.batch('p3').feature('so1').set('psol', 'none');
model.batch('p3').set('pname', {'mu' 'K'});
model.batch('p3').set('plistarr', {'0 0.1 0.2' '1194 882 563.9'});
model.batch('p3').set('sweeptype', 'sparse');
model.batch('p3').set('probesel', 'all');
model.batch('p3').set('probes', {});
model.batch('p3').set('plot', 'off');
model.batch('p3').set('err', 'on');
model.batch('p3').attach('std3');
model.batch('p3').set('control', 'param');

model.sol('sol11').feature('v1').feature('comp1_solid_Tt_ap1').set('scaleval', 100);
model.sol('sol11').feature('v1').feature('comp1_solid_Tn_ap1').set('scaleval', 1000);
model.sol('sol11').feature('s1').feature('p1').set('paramtuning', true);
model.sol('sol11').feature('s1').feature('p1').set('pinitstep', 0.1);
model.sol('sol11').feature('s1').feature('p1').set('pmaxstep', 1);
model.sol('sol11').feature('s1').feature('fc1').set('dtech', 'const');
model.sol.create('sol12');
model.sol('sol12').study('std3');
model.sol('sol12').label('Parametric Solutions 3');

model.batch('p3').feature('so1').set('psol', 'sol12');
model.batch('p3').run('compute');

model.result.create('pg6', 'PlotGroup2D');
model.result('pg6').set('data', 'dset6');
model.result('pg6').setIndex('looplevel', 2, 0);
model.result('pg6').setIndex('looplevel', 3, 1);
model.result('pg6').set('defaultPlotID', 'stress');
model.result('pg6').label('Stress (solid) 1');
model.result('pg6').set('frametype', 'spatial');
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg6').feature('surf1').set('threshold', 'manual');
model.result('pg6').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg6').feature('surf1').set('colortable', 'Rainbow');
model.result('pg6').feature('surf1').set('colortabletrans', 'none');
model.result('pg6').feature('surf1').set('colorscalemode', 'linear');
model.result('pg6').feature('surf1').set('resolution', 'normal');
model.result('pg6').feature('surf1').set('colortable', 'Prism');
model.result('pg6').feature('surf1').create('def', 'Deform');
model.result('pg6').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg6').feature('surf1').feature('def').set('scale', '1');
model.result('pg6').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg6').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg6').run;
model.result('pg5').run;
model.result('pg5').label('Displacement: Augmented Lagrangian, Segregated');
model.result('pg5').run;
model.result('pg5').feature('surf1').set('expr', 'u');
model.result('pg5').feature('surf1').set('descr', 'Displacement field, X-component');
model.result('pg5').feature('surf1').set('colortable', 'RainbowLight');
model.result('pg5').run;
model.result.create('pg7', 'PlotGroup2D');
model.result('pg7').set('data', 'dset4');
model.result('pg7').setIndex('looplevel', 2, 0);
model.result('pg7').setIndex('looplevel', 3, 1);
model.result('pg7').set('defaultPlotID', 'contactForces');
model.result('pg7').label('Contact Forces (solid)');
model.result('pg7').set('showlegends', true);
model.result('pg7').set('titletype', 'label');
model.result('pg7').set('frametype', 'spatial');
model.result('pg7').set('showlegendsunit', true);
model.result('pg7').create('surf1', 'Surface');
model.result('pg7').feature('surf1').set('expr', {'1'});
model.result('pg7').feature('surf1').label('Gray Surfaces');
model.result('pg7').feature('surf1').set('coloring', 'uniform');
model.result('pg7').feature('surf1').set('color', 'gray');
model.result('pg7').feature('surf1').create('def', 'Deform');
model.result('pg7').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg7').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg7').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg7').feature('surf1').feature('def').set('scale', 1);
model.result('pg7').feature('surf1').create('sel1', 'Selection');
model.result('pg7').feature('surf1').feature('sel1').selection.geom('geom1', 2);
model.result('pg7').feature('surf1').feature('sel1').selection.set([1 2]);
model.result('pg7').create('arwl1', 'ArrowLine');
model.result('pg7').feature('arwl1').set('arrowbase', 'head');
model.result('pg7').feature('arwl1').set('expr', {'solid.dcnt2.Tnx' 'solid.dcnt2.Tny'});
model.result('pg7').feature('arwl1').set('placement', 'gausspoints');
model.result('pg7').feature('arwl1').set('gporder', 4);
model.result('pg7').feature('arwl1').label('Contact 2, Pressure');
model.result('pg7').feature('arwl1').set('inheritplot', 'none');
model.result('pg7').feature('arwl1').set('color', 'green');
model.result('pg7').feature('arwl1').create('col', 'Color');
model.result('pg7').feature('arwl1').feature('col').set('colortable', 'Rainbow');
model.result('pg7').feature('arwl1').feature('col').set('colortabletrans', 'none');
model.result('pg7').feature('arwl1').feature('col').set('colorscalemode', 'linear');
model.result('pg7').feature('arwl1').feature('col').set('colordata', 'arrowlength');
model.result('pg7').feature('arwl1').feature('col').set('coloring', 'gradient');
model.result('pg7').feature('arwl1').feature('col').set('topcolor', 'green');
model.result('pg7').feature('arwl1').feature('col').set('bottomcolor', 'custom');
model.result('pg7').feature('arwl1').feature('col').set('custombottomcolor', [0.509804 0.54902 0.509804]);
model.result('pg7').feature('arwl1').create('def', 'Deform');
model.result('pg7').feature('arwl1').feature('def').set('expr', {'u' 'v'});
model.result('pg7').feature('arwl1').feature('def').set('descr', 'Displacement field');
model.result('pg7').feature('arwl1').feature('def').set('scaleactive', true);
model.result('pg7').feature('arwl1').feature('def').set('scale', 1);
model.result('pg7').feature.move('surf1', 1);
model.result('pg7').set('legendpos', 'rightdouble');
model.result('pg7').create('arwl2', 'ArrowLine');
model.result('pg7').feature('arwl2').set('arrowbase', 'tail');
model.result('pg7').feature('arwl2').set('expr', {'solid.dcnt2.Ttx' 'solid.dcnt2.Tty'});
model.result('pg7').feature('arwl2').set('placement', 'gausspoints');
model.result('pg7').feature('arwl2').set('gporder', 4);
model.result('pg7').feature('arwl2').label('Contact 2, Friction Force');
model.result('pg7').feature('arwl2').set('inheritplot', 'none');
model.result('pg7').feature('arwl2').set('color', 'magenta');
model.result('pg7').feature('arwl2').create('col', 'Color');
model.result('pg7').feature('arwl2').feature('col').set('colortable', 'Rainbow');
model.result('pg7').feature('arwl2').feature('col').set('colortabletrans', 'none');
model.result('pg7').feature('arwl2').feature('col').set('colorscalemode', 'linear');
model.result('pg7').feature('arwl2').feature('col').set('colordata', 'arrowlength');
model.result('pg7').feature('arwl2').feature('col').set('coloring', 'gradient');
model.result('pg7').feature('arwl2').feature('col').set('topcolor', 'magenta');
model.result('pg7').feature('arwl2').feature('col').set('bottomcolor', 'custom');
model.result('pg7').feature('arwl2').feature('col').set('custombottomcolor', [0.54902 0.509804 0.54902]);
model.result('pg7').feature('arwl2').create('def', 'Deform');
model.result('pg7').feature('arwl2').feature('def').set('expr', {'u' 'v'});
model.result('pg7').feature('arwl2').feature('def').set('descr', 'Displacement field');
model.result('pg7').feature('arwl2').feature('def').set('scaleactive', true);
model.result('pg7').feature('arwl2').feature('def').set('scale', 1);
model.result('pg7').feature.move('surf1', 2);
model.result('pg7').label('Contact Forces (solid)');
model.result('pg7').run;
model.result('pg7').label('Contact: Augmented Lagrangian, Segregated');
model.result('pg7').run;
model.result('pg7').run;
model.result.numerical.duplicate('pev2', 'pev1');
model.result.numerical('pev2').label('Point Evaluation: Augmented Lagrangian, Segregated');
model.result.numerical('pev2').set('data', 'dset4');
model.result.table.create('tbl2', 'Table');
model.result.table('tbl2').comments('Point Evaluation: Augmented Lagrangian, Segregated');
model.result.numerical('pev2').set('table', 'tbl2');
model.result.numerical('pev2').setResult;
model.result('pg6').run;
model.result('pg6').label('Displacement: Augmented Lagrangian, Coupled');
model.result('pg6').run;
model.result('pg6').feature('surf1').set('expr', 'u');
model.result('pg6').feature('surf1').set('descr', 'Displacement field, X-component');
model.result('pg6').feature('surf1').set('colortable', 'RainbowLight');
model.result('pg6').run;
model.result.create('pg8', 'PlotGroup2D');
model.result('pg8').set('data', 'dset6');
model.result('pg8').setIndex('looplevel', 2, 0);
model.result('pg8').setIndex('looplevel', 3, 1);
model.result('pg8').set('defaultPlotID', 'contactForces');
model.result('pg8').label('Contact Forces (solid)');
model.result('pg8').set('showlegends', true);
model.result('pg8').set('titletype', 'label');
model.result('pg8').set('frametype', 'spatial');
model.result('pg8').set('showlegendsunit', true);
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').feature('surf1').set('expr', {'1'});
model.result('pg8').feature('surf1').label('Gray Surfaces');
model.result('pg8').feature('surf1').set('coloring', 'uniform');
model.result('pg8').feature('surf1').set('color', 'gray');
model.result('pg8').feature('surf1').create('def', 'Deform');
model.result('pg8').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg8').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg8').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg8').feature('surf1').feature('def').set('scale', 1);
model.result('pg8').feature('surf1').create('sel1', 'Selection');
model.result('pg8').feature('surf1').feature('sel1').selection.geom('geom1', 2);
model.result('pg8').feature('surf1').feature('sel1').selection.set([1 2]);
model.result('pg8').create('arwl1', 'ArrowLine');
model.result('pg8').feature('arwl1').set('arrowbase', 'head');
model.result('pg8').feature('arwl1').set('expr', {'solid.dcnt3.Tnx' 'solid.dcnt3.Tny'});
model.result('pg8').feature('arwl1').set('placement', 'gausspoints');
model.result('pg8').feature('arwl1').set('gporder', 4);
model.result('pg8').feature('arwl1').label('Contact 3, Pressure');
model.result('pg8').feature('arwl1').set('inheritplot', 'none');
model.result('pg8').feature('arwl1').set('color', 'green');
model.result('pg8').feature('arwl1').create('col', 'Color');
model.result('pg8').feature('arwl1').feature('col').set('colortable', 'Rainbow');
model.result('pg8').feature('arwl1').feature('col').set('colortabletrans', 'none');
model.result('pg8').feature('arwl1').feature('col').set('colorscalemode', 'linear');
model.result('pg8').feature('arwl1').feature('col').set('colordata', 'arrowlength');
model.result('pg8').feature('arwl1').feature('col').set('coloring', 'gradient');
model.result('pg8').feature('arwl1').feature('col').set('topcolor', 'green');
model.result('pg8').feature('arwl1').feature('col').set('bottomcolor', 'custom');
model.result('pg8').feature('arwl1').feature('col').set('custombottomcolor', [0.509804 0.54902 0.509804]);
model.result('pg8').feature('arwl1').create('def', 'Deform');
model.result('pg8').feature('arwl1').feature('def').set('expr', {'u' 'v'});
model.result('pg8').feature('arwl1').feature('def').set('descr', 'Displacement field');
model.result('pg8').feature('arwl1').feature('def').set('scaleactive', true);
model.result('pg8').feature('arwl1').feature('def').set('scale', 1);
model.result('pg8').feature.move('surf1', 1);
model.result('pg8').set('legendpos', 'rightdouble');
model.result('pg8').create('arwl2', 'ArrowLine');
model.result('pg8').feature('arwl2').set('arrowbase', 'tail');
model.result('pg8').feature('arwl2').set('expr', {'solid.dcnt3.Ttx' 'solid.dcnt3.Tty'});
model.result('pg8').feature('arwl2').set('placement', 'gausspoints');
model.result('pg8').feature('arwl2').set('gporder', 4);
model.result('pg8').feature('arwl2').label('Contact 3, Friction Force');
model.result('pg8').feature('arwl2').set('inheritplot', 'none');
model.result('pg8').feature('arwl2').set('color', 'magenta');
model.result('pg8').feature('arwl2').create('col', 'Color');
model.result('pg8').feature('arwl2').feature('col').set('colortable', 'Rainbow');
model.result('pg8').feature('arwl2').feature('col').set('colortabletrans', 'none');
model.result('pg8').feature('arwl2').feature('col').set('colorscalemode', 'linear');
model.result('pg8').feature('arwl2').feature('col').set('colordata', 'arrowlength');
model.result('pg8').feature('arwl2').feature('col').set('coloring', 'gradient');
model.result('pg8').feature('arwl2').feature('col').set('topcolor', 'magenta');
model.result('pg8').feature('arwl2').feature('col').set('bottomcolor', 'custom');
model.result('pg8').feature('arwl2').feature('col').set('custombottomcolor', [0.54902 0.509804 0.54902]);
model.result('pg8').feature('arwl2').create('def', 'Deform');
model.result('pg8').feature('arwl2').feature('def').set('expr', {'u' 'v'});
model.result('pg8').feature('arwl2').feature('def').set('descr', 'Displacement field');
model.result('pg8').feature('arwl2').feature('def').set('scaleactive', true);
model.result('pg8').feature('arwl2').feature('def').set('scale', 1);
model.result('pg8').feature.move('surf1', 2);
model.result('pg8').label('Contact Forces (solid)');
model.result('pg8').run;
model.result('pg8').label('Contact: Augmented Lagrangian, Coupled');
model.result('pg8').run;
model.result('pg8').run;
model.result.numerical.duplicate('pev3', 'pev1');
model.result.numerical('pev3').label('Point Evaluation: Augmented Lagrangian, Coupled');
model.result.numerical('pev3').set('data', 'dset6');
model.result.table.create('tbl3', 'Table');
model.result.table('tbl3').comments('Point Evaluation: Augmented Lagrangian, Coupled');
model.result.numerical('pev3').set('table', 'tbl3');
model.result.numerical('pev3').setResult;

model.physics('solid').feature.duplicate('dcnt4', 'dcnt3');
model.physics('solid').feature('dcnt4').set('ContactMethodCtrl', 'Nitsche');

model.study.create('std4');
model.study('std4').create('stat', 'Stationary');
model.study('std4').feature('stat').setSolveFor('/physics/solid', true);
model.study('std4').create('param', 'Parametric');
model.study('std4').feature('param').setIndex('pname', 'G', 0);
model.study('std4').feature('param').setIndex('plistarr', '', 0);
model.study('std4').feature('param').setIndex('punit', 'N', 0);
model.study('std4').feature('param').setIndex('pname', 'G', 0);
model.study('std4').feature('param').setIndex('plistarr', '', 0);
model.study('std4').feature('param').setIndex('punit', 'N', 0);
model.study('std4').feature('param').setIndex('pname', 'mu', 0);
model.study('std4').feature('param').setIndex('plistarr', '0 0.1 0.2', 0);
model.study('std4').feature('param').setIndex('pname', 'G', 1);
model.study('std4').feature('param').setIndex('plistarr', '', 1);
model.study('std4').feature('param').setIndex('punit', 'N', 1);
model.study('std4').feature('param').setIndex('pname', 'G', 1);
model.study('std4').feature('param').setIndex('plistarr', '', 1);
model.study('std4').feature('param').setIndex('punit', 'N', 1);
model.study('std4').feature('param').setIndex('pname', 'K', 1);
model.study('std4').feature('param').setIndex('plistarr', '1194 882 563.9', 1);
model.study('std4').feature('stat').set('useparam', true);
model.study('std4').feature('stat').setIndex('pname', 'G', 0);
model.study('std4').feature('stat').setIndex('plistarr', '', 0);
model.study('std4').feature('stat').setIndex('punit', 'N', 0);
model.study('std4').feature('stat').setIndex('pname', 'G', 0);
model.study('std4').feature('stat').setIndex('plistarr', '', 0);
model.study('std4').feature('stat').setIndex('punit', 'N', 0);
model.study('std4').feature('stat').setIndex('pname', 'para', 0);
model.study('std4').feature('stat').setIndex('plistarr', '1e-3 1', 0);

model.sol.create('sol16');
model.sol('sol16').study('std4');
model.sol('sol16').create('st1', 'StudyStep');
model.sol('sol16').feature('st1').set('study', 'std4');
model.sol('sol16').feature('st1').set('studystep', 'stat');
model.sol('sol16').create('v1', 'Variables');
model.sol('sol16').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol16').feature('v1').feature('comp1_u').set('scaleval', '1e-2*6.32455532033676');
model.sol('sol16').feature('v1').set('control', 'stat');
model.sol('sol16').create('s1', 'Stationary');
model.sol('sol16').feature('s1').create('p1', 'Parametric');
model.sol('sol16').feature('s1').feature.remove('pDef');
model.sol('sol16').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol16').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol16').feature('s1').set('control', 'stat');
model.sol('sol16').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol16').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol16').feature('s1').feature('fc1').set('dtech', 'ddog');
model.sol('sol16').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol16').feature('s1').feature('fc1').set('dtech', 'ddog');
model.sol('sol16').feature('s1').feature.remove('fcDef');
model.sol('sol16').attach('std4');

model.batch.create('p4', 'Parametric');
model.batch('p4').study('std4');
model.batch('p4').create('so1', 'Solutionseq');
model.batch('p4').feature('so1').set('seq', 'sol16');
model.batch('p4').feature('so1').set('store', 'on');
model.batch('p4').feature('so1').set('clear', 'on');
model.batch('p4').feature('so1').set('psol', 'none');
model.batch('p4').set('pname', {'mu' 'K'});
model.batch('p4').set('plistarr', {'0 0.1 0.2' '1194 882 563.9'});
model.batch('p4').set('sweeptype', 'sparse');
model.batch('p4').set('probesel', 'all');
model.batch('p4').set('probes', {});
model.batch('p4').set('plot', 'off');
model.batch('p4').set('err', 'on');
model.batch('p4').attach('std4');
model.batch('p4').set('control', 'param');

model.sol('sol16').feature('s1').set('stol', '1e-6');
model.sol('sol16').feature('s1').feature('p1').set('paramtuning', true);
model.sol('sol16').feature('s1').feature('p1').set('pinitstep', '1e-2');
model.sol('sol16').feature('s1').feature('p1').set('pminstep', '1e-6');
model.sol('sol16').feature('s1').feature('p1').set('porder', 'linear');
model.sol('sol16').feature('s1').feature('fc1').set('dtech', 'const');

model.study('std4').label('Study 4: Nitsche');

model.sol.create('sol17');
model.sol('sol17').study('std4');
model.sol('sol17').label('Parametric Solutions 4');

model.batch('p4').feature('so1').set('psol', 'sol17');
model.batch('p4').run('compute');

model.result.create('pg9', 'PlotGroup2D');
model.result('pg9').set('data', 'dset8');
model.result('pg9').setIndex('looplevel', 2, 0);
model.result('pg9').setIndex('looplevel', 3, 1);
model.result('pg9').set('defaultPlotID', 'stress');
model.result('pg9').label('Stress (solid)');
model.result('pg9').set('frametype', 'spatial');
model.result('pg9').create('surf1', 'Surface');
model.result('pg9').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg9').feature('surf1').set('threshold', 'manual');
model.result('pg9').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg9').feature('surf1').set('colortable', 'Rainbow');
model.result('pg9').feature('surf1').set('colortabletrans', 'none');
model.result('pg9').feature('surf1').set('colorscalemode', 'linear');
model.result('pg9').feature('surf1').set('resolution', 'normal');
model.result('pg9').feature('surf1').set('colortable', 'Prism');
model.result('pg9').feature('surf1').create('def', 'Deform');
model.result('pg9').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg9').feature('surf1').feature('def').set('scale', '1');
model.result('pg9').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg9').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg9').run;
model.result('pg9').label('Displacement: Nitsche');
model.result('pg9').run;
model.result('pg9').feature('surf1').set('expr', 'u');
model.result('pg9').feature('surf1').set('descr', 'Displacement field, X-component');
model.result('pg9').feature('surf1').set('colortable', 'RainbowLight');
model.result('pg9').run;
model.result.create('pg10', 'PlotGroup2D');
model.result('pg10').set('data', 'dset8');
model.result('pg10').setIndex('looplevel', 2, 0);
model.result('pg10').setIndex('looplevel', 3, 1);
model.result('pg10').set('defaultPlotID', 'contactForces');
model.result('pg10').label('Contact Forces (solid)');
model.result('pg10').set('showlegends', true);
model.result('pg10').set('titletype', 'label');
model.result('pg10').set('frametype', 'spatial');
model.result('pg10').set('showlegendsunit', true);
model.result('pg10').create('surf1', 'Surface');
model.result('pg10').feature('surf1').set('expr', {'1'});
model.result('pg10').feature('surf1').label('Gray Surfaces');
model.result('pg10').feature('surf1').set('coloring', 'uniform');
model.result('pg10').feature('surf1').set('color', 'gray');
model.result('pg10').feature('surf1').create('def', 'Deform');
model.result('pg10').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg10').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg10').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg10').feature('surf1').feature('def').set('scale', 1);
model.result('pg10').feature('surf1').create('sel1', 'Selection');
model.result('pg10').feature('surf1').feature('sel1').selection.geom('geom1', 2);
model.result('pg10').feature('surf1').feature('sel1').selection.set([1 2]);
model.result('pg10').create('arwl1', 'ArrowLine');
model.result('pg10').feature('arwl1').set('arrowbase', 'head');
model.result('pg10').feature('arwl1').set('expr', {'solid.dcnt4.Tnx' 'solid.dcnt4.Tny'});
model.result('pg10').feature('arwl1').set('placement', 'gausspoints');
model.result('pg10').feature('arwl1').set('gporder', 8);
model.result('pg10').feature('arwl1').label('Contact 4, Pressure');
model.result('pg10').feature('arwl1').set('inheritplot', 'none');
model.result('pg10').feature('arwl1').set('color', 'green');
model.result('pg10').feature('arwl1').create('col', 'Color');
model.result('pg10').feature('arwl1').feature('col').set('colortable', 'Rainbow');
model.result('pg10').feature('arwl1').feature('col').set('colortabletrans', 'none');
model.result('pg10').feature('arwl1').feature('col').set('colorscalemode', 'linear');
model.result('pg10').feature('arwl1').feature('col').set('colordata', 'arrowlength');
model.result('pg10').feature('arwl1').feature('col').set('coloring', 'gradient');
model.result('pg10').feature('arwl1').feature('col').set('topcolor', 'green');
model.result('pg10').feature('arwl1').feature('col').set('bottomcolor', 'custom');
model.result('pg10').feature('arwl1').feature('col').set('custombottomcolor', [0.509804 0.54902 0.509804]);
model.result('pg10').feature('arwl1').create('def', 'Deform');
model.result('pg10').feature('arwl1').feature('def').set('expr', {'u' 'v'});
model.result('pg10').feature('arwl1').feature('def').set('descr', 'Displacement field');
model.result('pg10').feature('arwl1').feature('def').set('scaleactive', true);
model.result('pg10').feature('arwl1').feature('def').set('scale', 1);
model.result('pg10').feature.move('surf1', 1);
model.result('pg10').set('legendpos', 'rightdouble');
model.result('pg10').create('arwl2', 'ArrowLine');
model.result('pg10').feature('arwl2').set('arrowbase', 'tail');
model.result('pg10').feature('arwl2').set('expr', {'solid.dcnt4.Ttx' 'solid.dcnt4.Tty'});
model.result('pg10').feature('arwl2').set('placement', 'gausspoints');
model.result('pg10').feature('arwl2').set('gporder', 8);
model.result('pg10').feature('arwl2').label('Contact 4, Friction Force');
model.result('pg10').feature('arwl2').set('inheritplot', 'none');
model.result('pg10').feature('arwl2').set('color', 'magenta');
model.result('pg10').feature('arwl2').create('col', 'Color');
model.result('pg10').feature('arwl2').feature('col').set('colortable', 'Rainbow');
model.result('pg10').feature('arwl2').feature('col').set('colortabletrans', 'none');
model.result('pg10').feature('arwl2').feature('col').set('colorscalemode', 'linear');
model.result('pg10').feature('arwl2').feature('col').set('colordata', 'arrowlength');
model.result('pg10').feature('arwl2').feature('col').set('coloring', 'gradient');
model.result('pg10').feature('arwl2').feature('col').set('topcolor', 'magenta');
model.result('pg10').feature('arwl2').feature('col').set('bottomcolor', 'custom');
model.result('pg10').feature('arwl2').feature('col').set('custombottomcolor', [0.54902 0.509804 0.54902]);
model.result('pg10').feature('arwl2').create('def', 'Deform');
model.result('pg10').feature('arwl2').feature('def').set('expr', {'u' 'v'});
model.result('pg10').feature('arwl2').feature('def').set('descr', 'Displacement field');
model.result('pg10').feature('arwl2').feature('def').set('scaleactive', true);
model.result('pg10').feature('arwl2').feature('def').set('scale', 1);
model.result('pg10').feature.move('surf1', 2);
model.result('pg10').label('Contact Forces (solid)');
model.result('pg10').run;
model.result('pg10').label('Contact: Nitsche');
model.result('pg10').run;
model.result('pg10').run;
model.result.numerical.duplicate('pev4', 'pev1');
model.result.numerical('pev4').label('Point Evaluation: Nitsche');
model.result.numerical('pev4').set('data', 'dset8');
model.result.table.create('tbl4', 'Table');
model.result.table('tbl4').comments('Point Evaluation: Nitsche');
model.result.numerical('pev4').set('table', 'tbl4');
model.result.numerical('pev4').setResult;

model.study('std1').feature('stat').set('useadvanceddisable', true);
model.study('std1').feature('stat').set('disabledphysics', {'solid/dcnt2' 'solid/dcnt3' 'solid/dcnt4'});
model.study('std2').feature('stat').set('disabledphysics', {'solid/dcnt3' 'solid/dcnt4'});
model.study('std3').feature('stat').set('useadvanceddisable', true);
model.study('std3').feature('stat').set('disabledphysics', {'solid/dcnt4'});

model.result('pg1').run;

model.title('Sliding Wedge');

model.description('A contactor wedge under gravity load is forced to slide due to a boundary load over a target wedge surface. Horizontal linear springs are connected between the left vertical boundary and the ground. This is a so-called large sliding problem including contact pressure for a constant contact area and friction force calculations. The penalty method, the augmented Lagrangian method, and the Nitsche method are used to solve this benchmark problem.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;
model.sol('sol8').clearSolutionData;
model.sol('sol9').clearSolutionData;
model.sol('sol10').clearSolutionData;
model.sol('sol11').clearSolutionData;
model.sol('sol12').clearSolutionData;
model.sol('sol13').clearSolutionData;
model.sol('sol14').clearSolutionData;
model.sol('sol15').clearSolutionData;
model.sol('sol16').clearSolutionData;
model.sol('sol17').clearSolutionData;
model.sol('sol18').clearSolutionData;
model.sol('sol19').clearSolutionData;
model.sol('sol20').clearSolutionData;

model.label('sliding_wedge.mph');

model.modelNode.label('Components');

out = model;
