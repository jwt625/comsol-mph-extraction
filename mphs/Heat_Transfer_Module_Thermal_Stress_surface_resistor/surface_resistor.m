function out = model
%
% surface_resistor.m
%
% Model exported on May 26 2025, 21:29 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Heat_Transfer_Module/Thermal_Stress');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');
model.physics('solid').prop('StructuralTransientBehavior').set('StructuralTransientBehavior', 'Quasistatic');
model.physics.create('ht', 'HeatTransfer', 'geom1');
model.physics('ht').model('comp1');

model.multiphysics.create('te1', 'ThermalExpansion', 'geom1', 3);
model.multiphysics('te1').set('Heat_physics', 'ht');
model.multiphysics('te1').set('Solid_physics', 'solid');
model.multiphysics('te1').selection.all;

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/solid', true);
model.study('std1').feature('stat').setSolveFor('/physics/ht', true);
model.study('std1').feature('stat').setSolveFor('/multiphysics/te1', true);

model.param.set('T_air', '300[K]');
model.param.descr('T_air', 'Air temperature');
model.param.set('h_air', '10[W/(m^2*K)]');
model.param.descr('h_air', 'Heat transfer coefficient');
model.param.set('Psource', '0.2[W]/2');
model.param.descr('Psource', 'Heat dissipated by the resistor on the half geometry');
model.param.set('p0', '1[atm]');
model.param.descr('p0', 'Air pressure');
model.param.set('T0', '80[degC]');
model.param.descr('T0', 'Initial temperature guess');

model.geom('geom1').lengthUnit('mm');
model.geom('geom1').create('wp1', 'WorkPlane');
model.geom('geom1').feature('wp1').set('unite', true);
model.geom('geom1').feature('wp1').set('quickplane', 'yz');
model.geom('geom1').feature('wp1').set('unite', false);
model.geom('geom1').feature('wp1').geom.create('r1', 'Rectangle');
model.geom('geom1').feature('wp1').geom.feature('r1').set('size', [2 0.035]);
model.geom('geom1').feature('wp1').geom.run('r1');
model.geom('geom1').feature('wp1').geom.create('qb1', 'QuadraticBezier');
model.geom('geom1').feature('wp1').geom.feature('qb1').setIndex('p', 0.975, 0, 0);
model.geom('geom1').feature('wp1').geom.feature('qb1').setIndex('p', 0.63, 1, 0);
model.geom('geom1').feature('wp1').geom.feature('qb1').setIndex('p', 0.8, 0, 1);
model.geom('geom1').feature('wp1').geom.feature('qb1').setIndex('p', 0.2, 1, 1);
model.geom('geom1').feature('wp1').geom.feature('qb1').setIndex('p', 0.035, 1, 2);
model.geom('geom1').feature('wp1').geom.run('qb1');
model.geom('geom1').feature('wp1').geom.create('pol1', 'Polygon');
model.geom('geom1').feature('wp1').geom.feature('pol1').set('source', 'table');
model.geom('geom1').feature('wp1').geom.feature('pol1').set('type', 'open');
model.geom('geom1').feature('wp1').geom.feature('pol1').set('source', 'vectors');
model.geom('geom1').feature('wp1').geom.feature('pol1').set('x', '0 1.5 1.5 1.5 1.5 0.975 0.975 0.975');
model.geom('geom1').feature('wp1').geom.feature('pol1').set('y', '0.035 0.035 0.035 0.08 0.08 0.08 0.08 0.63');
model.geom('geom1').feature('wp1').geom.run('pol1');
model.geom('geom1').feature('wp1').geom.create('csol1', 'ConvertToSolid');
model.geom('geom1').feature('wp1').geom.feature('csol1').selection('input').set({'pol1' 'qb1'});
model.geom('geom1').feature('wp1').geom.run('csol1');
model.geom('geom1').feature('wp1').geom.create('r2', 'Rectangle');
model.geom('geom1').feature('wp1').geom.feature('r2').set('size', [0.525 0.55]);
model.geom('geom1').feature('wp1').geom.feature('r2').set('pos', [0.975 0.08]);
model.geom('geom1').feature('wp1').geom.run('r2');
model.geom('geom1').feature('wp1').geom.create('r3', 'Rectangle');
model.geom('geom1').feature('wp1').geom.feature('r3').set('size', [0.52 0.5]);
model.geom('geom1').feature('wp1').geom.feature('r3').set('pos', [1 0.105]);
model.geom('geom1').feature('wp1').geom.run('r3');
model.geom('geom1').feature('wp1').geom.create('dif1', 'Difference');
model.geom('geom1').feature('wp1').geom.feature('dif1').selection('input').set({'csol1' 'r1' 'r2'});
model.geom('geom1').feature('wp1').geom.feature('dif1').selection('input2').set({'r3'});
model.geom('geom1').feature('wp1').geom.run('dif1');
model.geom('geom1').feature('wp1').geom.create('mir1', 'Mirror');
model.geom('geom1').feature('wp1').geom.feature('mir1').selection('input').set({'dif1'});
model.geom('geom1').feature('wp1').geom.feature('mir1').set('keep', true);
model.geom('geom1').feature('wp1').geom.feature('mir1').set('pos', [4 0]);
model.geom('geom1').feature('wp1').geom.run('mir1');
model.geom('geom1').feature('wp1').geom.create('r4', 'Rectangle');
model.geom('geom1').feature('wp1').geom.feature('r4').set('size', [6 0.5]);
model.geom('geom1').feature('wp1').geom.feature('r4').set('pos', [1 0.105]);
model.geom('geom1').feature('wp1').geom.run('r4');
model.geom('geom1').feature('wp1').geom.create('ls1', 'LineSegment');
model.geom('geom1').feature('wp1').geom.feature('ls1').selection('vertex1').set('dif1', 12);
model.geom('geom1').feature('wp1').geom.feature('ls1').selection('vertex2').set('mir1', 12);
model.geom('geom1').feature('wp1').geom.run('ls1');
model.geom('geom1').feature('wp1').geom.create('csol2', 'ConvertToSolid');
model.geom('geom1').feature('wp1').geom.feature('csol2').selection('input').set({'dif1' 'ls1' 'mir1' 'r4'});
model.geom('geom1').feature('wp1').geom.run('csol2');
model.geom('geom1').feature('wp1').geom.create('uni1', 'Union');
model.geom('geom1').feature('wp1').geom.feature('uni1').selection('input').set({'csol2'});
model.geom('geom1').feature('wp1').geom.run('uni1');
model.geom('geom1').feature('wp1').geom.create('pard1', 'PartitionDomains');
model.geom('geom1').feature('wp1').geom.feature('pard1').selection('domain').set('uni1', [2 5 7]);
model.geom('geom1').feature('wp1').geom.feature('pard1').set('partitionwith', 'extendededges');
model.geom('geom1').feature('wp1').geom.feature('pard1').selection('extendededge').set('uni1', [4 30 11]);
model.geom('geom1').feature('wp1').geom.run('pard1');
model.geom('geom1').feature('wp1').geom.create('pard2', 'PartitionDomains');
model.geom('geom1').feature('wp1').geom.feature('pard2').selection('domain').set('pard1', [4 10]);
model.geom('geom1').feature('wp1').geom.feature('pard2').set('partitionwith', 'lines');
model.geom('geom1').feature('wp1').geom.feature('pard2').selection('vertexline').set('pard1', [4 5 6 7 22 23 25 26]);
model.geom('geom1').feature('wp1').geom.run('pard2');
model.geom('geom1').run('wp1');
model.geom('geom1').feature.create('ext1', 'Extrude');
model.geom('geom1').feature('ext1').set('workplane', 'wp1');
model.geom('geom1').feature('ext1').selection('input').set({'wp1'});
model.geom('geom1').feature('ext1').setIndex('distance', 1.5, 0);
model.geom('geom1').runPre('fin');
model.geom('geom1').create('blk1', 'Block');
model.geom('geom1').feature('blk1').set('size', [4 16 1.6]);
model.geom('geom1').feature('blk1').set('pos', [0 -4 -1.6]);
model.geom('geom1').runPre('fin');
model.geom('geom1').feature('fin').set('action', 'assembly');
model.geom('geom1').feature('fin').set('imprint', true);
model.geom('geom1').run('fin');
model.geom('geom1').create('mcf1', 'MeshControlFaces');
model.geom('geom1').feature('mcf1').selection('input').set('fin', [17 22 25 41 59 60 62]);
model.geom('geom1').run('mcf1');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat1').label('FR4 (Circuit Board)');
model.material('mat1').set('family', 'pcbgreen');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'0.004[S/m]' '0' '0' '0' '0.004[S/m]' '0' '0' '0' '0.004[S/m]'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'4.5' '0' '0' '0' '4.5' '0' '0' '0' '4.5'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'18e-6[1/K]' '0' '0' '0' '18e-6[1/K]' '0' '0' '0' '18e-6[1/K]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', '1369[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('density', '1900[kg/m^3]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'0.3[W/(m*K)]' '0' '0' '0' '0.3[W/(m*K)]' '0' '0' '0' '0.3[W/(m*K)]'});
model.material('mat1').propertyGroup('Enu').set('E', '22[GPa]');
model.material('mat1').propertyGroup('Enu').set('nu', '0.15');
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat2').label('Alumina');
model.material('mat2').set('family', 'aluminum');
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'8e-6[1/K]' '0' '0' '0' '8e-6[1/K]' '0' '0' '0' '8e-6[1/K]'});
model.material('mat2').propertyGroup('def').set('heatcapacity', '900[J/(kg*K)]');
model.material('mat2').propertyGroup('def').set('density', '3900[kg/m^3]');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'27[W/(m*K)]' '0' '0' '0' '27[W/(m*K)]' '0' '0' '0' '27[W/(m*K)]'});
model.material('mat2').propertyGroup('Enu').set('E', '300[GPa]');
model.material('mat2').propertyGroup('Enu').set('nu', '0.222');
model.material.create('mat3', 'Common', 'comp1');
model.material('mat3').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat3').propertyGroup.create('linzRes', 'Linearized resistivity');
model.material('mat3').label('Copper');
model.material('mat3').set('family', 'copper');
model.material('mat3').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('def').set('electricconductivity', {'5.998e7[S/m]' '0' '0' '0' '5.998e7[S/m]' '0' '0' '0' '5.998e7[S/m]'});
model.material('mat3').propertyGroup('def').set('thermalexpansioncoefficient', {'17e-6[1/K]' '0' '0' '0' '17e-6[1/K]' '0' '0' '0' '17e-6[1/K]'});
model.material('mat3').propertyGroup('def').set('heatcapacity', '385[J/(kg*K)]');
model.material('mat3').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('def').set('density', '8960[kg/m^3]');
model.material('mat3').propertyGroup('def').set('thermalconductivity', {'400[W/(m*K)]' '0' '0' '0' '400[W/(m*K)]' '0' '0' '0' '400[W/(m*K)]'});
model.material('mat3').propertyGroup('Enu').set('E', '110[GPa]');
model.material('mat3').propertyGroup('Enu').set('nu', '0.35');
model.material('mat3').propertyGroup('linzRes').set('rho0', '1.72e-8[ohm*m]');
model.material('mat3').propertyGroup('linzRes').set('alpha', '0.0039[1/K]');
model.material('mat3').propertyGroup('linzRes').set('Tref', '298[K]');
model.material('mat3').propertyGroup('linzRes').addInput('temperature');
model.material.create('mat4', 'Common', 'comp1');
model.material('mat4').label('Silver [solid,annealed]');
model.material('mat4').propertyGroup('def').set('thermalconductivity', 'k_solid_annealed_1(T)');
model.material('mat4').propertyGroup('def').set('INFO_PREFIX:thermalconductivity', ['Reference: C.Y. Ho, R.W. Powell, and P.E. Liley, Journal of Physical and Chemical Reference Data, v1, No. 2, p279 (1972) available online at https://srd.nist.gov/JPCRD/jpcrd7.pdf' newline 'Note: Tmp near 962 ' native2unicode(hex2dec({'00' 'b0'}), 'unicode') 'C (1235 K), well-annealed with residual resistivity of 6.21 x 10{' native2unicode(hex2dec({'00' 'b9'}), 'unicode') 'p ohm-cm, error is 2% near RT, 5% at others']);
model.material('mat4').propertyGroup('def').set('thermalexpansioncoefficient', '(alpha_solid_1(T)+(Tempref-293[K])*if(abs(T-Tempref)>1e-3,(alpha_solid_1(T)-alpha_solid_1(Tempref))/(T-Tempref),d(alpha_solid_1(T),T)))/(1+alpha_solid_1(Tempref)*(Tempref-293[K]))');
model.material('mat4').propertyGroup('def').set('INFO_PREFIX:thermalexpansioncoefficient', ['Reference: F.C. Nix and D. MacNair, Physical Review, v61, p74 (1942) and E.A. Owen and E.L. Yates, Philosophical Magazine S7, v17, p113 (1934) and N. Waterhouse and B. Yates, Cryogenics, p267, v8 (1968) and R.J. Corruccini and J.J. Gniewek, Thermal Expansion of Technical Solids at Low Temperatures: A Compilation From the Literature, NBS Monograph 29 (1961) available online at https://digital.library.unt.edu/ark:/67531/metadc70437/' newline 'Note: the reference temperature is 20 ' native2unicode(hex2dec({'00' 'b0'}), 'unicode') 'C (293 K), Tmp near 962 ' native2unicode(hex2dec({'00' 'b0'}), 'unicode') 'C (1235 K), values below -203.1 ' native2unicode(hex2dec({'00' 'b0'}), 'unicode') 'C (70 K) were calculated from the Gruneisen correlation' newline 'Reference temperature: 293.00[K]']);
model.material('mat4').propertyGroup('def').set('heatcapacity', 'C_solid_1(T)');
model.material('mat4').propertyGroup('def').set('INFO_PREFIX:heatcapacity', ['Reference: B.J. McBride, S. Gordon, and M.A. Reno, Thermodynamic Data for Fifty Reference Elements, NASA Technical Paper 3287 (1993) available online at https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20010021116.pdf and D.R. Smith, F.R. Fickett, Journal of Research National Institute Standards Technology, v100, p119 (1995)' newline 'Note: Tmp near 962 ' native2unicode(hex2dec({'00' 'b0'}), 'unicode') 'C (1235 K)']);
model.material('mat4').propertyGroup('def').set('HC', 'HC_solid_1(T)');
model.material('mat4').propertyGroup('def').set('INFO_PREFIX:HC', ['Reference: B.J. McBride, S. Gordon, and M.A. Reno, Thermodynamic Data for Fifty Reference Elements, NASA Technical Paper 3287 (1993) available online at https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20010021116.pdf and D.R. Smith, F.R. Fickett, Journal of Research National Institute Standards Technology, v100, p119 (1995)' newline 'Note: Tmp near 962 ' native2unicode(hex2dec({'00' 'b0'}), 'unicode') 'C (1235 K)']);
model.material('mat4').propertyGroup('def').set('VP', 'VP_solid_1(T)');
model.material('mat4').propertyGroup('def').set('INFO_PREFIX:VP', ['Reference: C.B. Alcock, V.P. Itkin, and M.K. Horrigan, Canadian Metallurgical Quarterly, v23, p309 (1984)' newline 'Note: Tmp near 962 ' native2unicode(hex2dec({'00' 'b0'}), 'unicode') 'C (1235 K), 5% error or less']);
model.material('mat4').propertyGroup('def').set('density', 'rho_solid_1(T)');
model.material('mat4').propertyGroup('def').set('INFO_PREFIX:density', ['Reference: F.C. Nix and D. MacNair, Physical Review, v61, p74 (1942) and E.A. Owen and E.L. Yates, Philosophical Magazine S7, v17, p113 (1934) and N. Waterhouse and B. Yates, Cryogenics, p267, v8 (1968) and R.J. Corruccini and J.J. Gniewek, Thermal Expansion of Technical Solids at Low Temperatures: A Compilation From the Literature, NBS Monograph 29 (1961) available online at https://digital.library.unt.edu/ark:/67531/metadc70437/' newline 'Note: Tmp near 962 ' native2unicode(hex2dec({'00' 'b0'}), 'unicode') 'C (1235 K), calculated from the linear expansion and the room temperature density']);
model.material('mat4').propertyGroup('def').func.create('k_solid_annealed_1', 'Piecewise');
model.material('mat4').propertyGroup('def').func('k_solid_annealed_1').set('funcname', 'k_solid_annealed_1');
model.material('mat4').propertyGroup('def').func('k_solid_annealed_1').set('arg', 'T');
model.material('mat4').propertyGroup('def').func('k_solid_annealed_1').set('extrap', 'constant');
model.material('mat4').propertyGroup('def').func('k_solid_annealed_1').set('pieces', {'0.0' '12.0' '3984.15514*T^1-79.6943362*T^2+55.1775003*T^3-20.1076316*T^4+1.83852143*T^5-0.0530182898*T^6';  ...
'12.0' '35.0' '11685.1851+5789.52713*T^1-976.813559*T^2+61.6763958*T^3-1.94183418*T^4+0.0306222302*T^5-1.93171328E-4*T^6';  ...
'35.0' '100.0' '11741.2623-687.054377*T^1+17.8523078*T^2-0.252172418*T^3+0.00203489646*T^4-8.86687517E-6*T^5+1.62424109E-8*T^6';  ...
'100.0' '173.0' '647.744954-3.6342373*T^1+0.0203715*T^2-3.82464365E-5*T^3';  ...
'173.0' '300.0' '370.275575+1.14373432*T^1-0.00774648962*T^2+2.22554027E-5*T^3-2.32630945E-8*T^4';  ...
'300.0' '1235.0' '403.534347+0.236992453*T^1-7.07574291E-4*T^2+7.57664035E-7*T^3-3.37202514E-10*T^4-1.06327174E-14*T^5+3.63030887E-17*T^6'});
model.material('mat4').propertyGroup('def').func('k_solid_annealed_1').label('Piecewise');
model.material('mat4').propertyGroup('def').func('k_solid_annealed_1').set('fununit', 'W/(m*K)');
model.material('mat4').propertyGroup('def').func('k_solid_annealed_1').set('argunit', 'K');
model.material('mat4').propertyGroup('def').func.create('alpha_solid_1', 'Piecewise');
model.material('mat4').propertyGroup('def').func('alpha_solid_1').set('funcname', 'alpha_solid_1');
model.material('mat4').propertyGroup('def').func('alpha_solid_1').set('arg', 'T');
model.material('mat4').propertyGroup('def').func('alpha_solid_1').set('extrap', 'constant');
model.material('mat4').propertyGroup('def').func('alpha_solid_1').set('pieces', {'0.0' '92.0' '1.397008E-5+6.293815E-8*T^1-3.772802E-10*T^2+1.128415E-12*T^3-1.223488E-15*T^4'; '92.0' '873.16' '1.604749E-5+1.576798E-8*T^1-1.719191E-11*T^2+6.931419E-15*T^3'});
model.material('mat4').propertyGroup('def').func('alpha_solid_1').label('Piecewise 1');
model.material('mat4').propertyGroup('def').func('alpha_solid_1').set('fununit', '1/K');
model.material('mat4').propertyGroup('def').func('alpha_solid_1').set('argunit', 'K');
model.material('mat4').propertyGroup('def').func.create('C_solid_1', 'Piecewise');
model.material('mat4').propertyGroup('def').func('C_solid_1').set('funcname', 'C_solid_1');
model.material('mat4').propertyGroup('def').func('C_solid_1').set('arg', 'T');
model.material('mat4').propertyGroup('def').func('C_solid_1').set('extrap', 'constant');
model.material('mat4').propertyGroup('def').func('C_solid_1').set('pieces', {'1.0' '12.3' '0.012242271-0.0139436904*T^1+0.0100959334*T^2-4.95765926E-4*T^3+1.6616802E-4*T^4-3.51234917E-6*T^5';  ...
'12.3' '75.0' '24.2484682-4.66981261*T^1+0.295644369*T^2-0.0048535446*T^3+3.38022515E-5*T^4-8.43901503E-8*T^5';  ...
'75.0' '300.0' '-63.8588439+5.17726486*T^1-0.0396147773*T^2+1.57045352E-4*T^3-3.10537526E-7*T^4+2.41143501E-10*T^5';  ...
'300.0' '1235.0' '225.706549+0.0170570216*T^1+5.00714342E-5*T^2-1.76849772E-8*T^3'});
model.material('mat4').propertyGroup('def').func('C_solid_1').label('Piecewise 2');
model.material('mat4').propertyGroup('def').func('C_solid_1').set('fununit', 'J/(kg*K)');
model.material('mat4').propertyGroup('def').func('C_solid_1').set('argunit', 'K');
model.material('mat4').propertyGroup('def').func.create('HC_solid_1', 'Piecewise');
model.material('mat4').propertyGroup('def').func('HC_solid_1').set('funcname', 'HC_solid_1');
model.material('mat4').propertyGroup('def').func('HC_solid_1').set('arg', 'T');
model.material('mat4').propertyGroup('def').func('HC_solid_1').set('extrap', 'constant');
model.material('mat4').propertyGroup('def').func('HC_solid_1').set('pieces', {'1.0' '12.3' '0.00132054948-0.00150407813*T^1+0.00108902784*T^2-5.34772521E-5*T^3+1.79242142E-5*T^4-3.7887007E-7*T^5';  ...
'12.3' '75.0' '2.61563388-0.503723475*T^1+0.0318905693*T^2-5.23542246E-4*T^3+3.64618153E-6*T^4-9.1029991E-9*T^5';  ...
'75.0' '300.0' '-6.88832422+0.558461492*T^1-0.00427316522*T^2+1.69401666E-5*T^3-3.34970622E-8*T^4+2.60116686E-11*T^5';  ...
'300.0' '1235.0' '24.3465161+0.00183990689*T^1+5.40110468E-6*T^2-1.90764334E-9*T^3'});
model.material('mat4').propertyGroup('def').func('HC_solid_1').label('Piecewise 3');
model.material('mat4').propertyGroup('def').func('HC_solid_1').set('fununit', 'J/(mol*K)');
model.material('mat4').propertyGroup('def').func('HC_solid_1').set('argunit', 'K');
model.material('mat4').propertyGroup('def').func.create('VP_solid_1', 'Piecewise');
model.material('mat4').propertyGroup('def').func('VP_solid_1').set('funcname', 'VP_solid_1');
model.material('mat4').propertyGroup('def').func('VP_solid_1').set('arg', 'T');
model.material('mat4').propertyGroup('def').func('VP_solid_1').set('extrap', 'constant');
model.material('mat4').propertyGroup('def').func('VP_solid_1').set('pieces', {'293.0' '1235.0' '(exp((-1.49990000e+04/T-7.84500000e-01*log10(T)+1.20078100e+01)*log(10.0)))*1.33320000e+02'});
model.material('mat4').propertyGroup('def').func('VP_solid_1').label('Piecewise 4');
model.material('mat4').propertyGroup('def').func('VP_solid_1').set('fununit', 'Pa');
model.material('mat4').propertyGroup('def').func('VP_solid_1').set('argunit', 'K');
model.material('mat4').propertyGroup('def').func.create('rho_solid_1', 'Piecewise');
model.material('mat4').propertyGroup('def').func('rho_solid_1').set('funcname', 'rho_solid_1');
model.material('mat4').propertyGroup('def').func('rho_solid_1').set('arg', 'T');
model.material('mat4').propertyGroup('def').func('rho_solid_1').set('extrap', 'constant');
model.material('mat4').propertyGroup('def').func('rho_solid_1').set('pieces', {'0.0' '30.0' '10630.38'; '30.0' '140.0' '10630.25+0.1394367*T^1-0.0048655*T^2+1.188653E-5*T^3'; '140.0' '873.16' '10658.96-0.4692536*T^1-2.976784E-4*T^2+1.470941E-7*T^3'});
model.material('mat4').propertyGroup('def').func('rho_solid_1').label('Piecewise 5');
model.material('mat4').propertyGroup('def').func('rho_solid_1').set('fununit', 'kg/m^3');
model.material('mat4').propertyGroup('def').func('rho_solid_1').set('argunit', 'K');
model.material('mat4').propertyGroup('def').addInput('temperature');
model.material('mat4').propertyGroup('def').addInput('strainreferencetemperature');
model.material('mat4').propertyGroup.create('ThermalExpansion', 'Thermal_expansion');
model.material('mat4').propertyGroup('ThermalExpansion').set('dL', '(dL_solid_1(T)-dL_solid_1(Tempref))/(1+dL_solid_1(Tempref))');
model.material('mat4').propertyGroup('ThermalExpansion').set('INFO_PREFIX:dL', ['Reference: F.C. Nix and D. MacNair, Physical Review, v61, p74 (1942) and E.A. Owen and E.L. Yates, Philosophical Magazine S7, v17, p113 (1934) and N. Waterhouse and B. Yates, Cryogenics, p267, v8 (1968) and R.J. Corruccini and J.J. Gniewek, Thermal Expansion of Technical Solids at Low Temperatures: A Compilation From the Literature, NBS Monograph 29 (1961) available online at https://digital.library.unt.edu/ark:/67531/metadc70437/' newline 'Note: the reference temperature is 20 ' native2unicode(hex2dec({'00' 'b0'}), 'unicode') 'C (293 K), Tmp near 962 ' native2unicode(hex2dec({'00' 'b0'}), 'unicode') 'C (1235 K), values below -203.1 ' native2unicode(hex2dec({'00' 'b0'}), 'unicode') 'C (70 K) were calculated from the Gruneisen correlation' newline 'Reference temperature: 293.00[K]']);
model.material('mat4').propertyGroup('ThermalExpansion').set('alphatan', 'CTE_solid_1(T)');
model.material('mat4').propertyGroup('ThermalExpansion').set('INFO_PREFIX:alphatan', ['Reference: N. Waterhouse and B. Yates, Cryogenics, p267, v8 (1968)' newline 'Note: Tmp near 962 ' native2unicode(hex2dec({'00' 'b0'}), 'unicode') 'C (1235 K)']);
model.material('mat4').propertyGroup('ThermalExpansion').func.create('dL_solid_1', 'Piecewise');
model.material('mat4').propertyGroup('ThermalExpansion').func('dL_solid_1').set('funcname', 'dL_solid_1');
model.material('mat4').propertyGroup('ThermalExpansion').func('dL_solid_1').set('arg', 'T');
model.material('mat4').propertyGroup('ThermalExpansion').func('dL_solid_1').set('extrap', 'constant');
model.material('mat4').propertyGroup('ThermalExpansion').func('dL_solid_1').set('pieces', {'0.0' '10.0' '-0.004134001';  ...
'10.0' '30.0' '-0.00415083+2.566303E-6*T^1-1.154799E-7*T^2+2.71357E-9*T^3';  ...
'30.0' '87.0' '-0.004065065-6.856586E-6*T^1+2.120401E-7*T^2-9.814541E-10*T^3+2.367498E-12*T^4-2.275841E-15*T^5';  ...
'87.0' '873.16' '-0.00474521276+1.182195E-5*T^1+1.97186E-8*T^2-1.837579E-11*T^3+6.889976E-15*T^4'});
model.material('mat4').propertyGroup('ThermalExpansion').func('dL_solid_1').label('Piecewise');
model.material('mat4').propertyGroup('ThermalExpansion').func('dL_solid_1').set('fununit', '');
model.material('mat4').propertyGroup('ThermalExpansion').func('dL_solid_1').set('argunit', 'K');
model.material('mat4').propertyGroup('ThermalExpansion').func.create('CTE_solid_1', 'Piecewise');
model.material('mat4').propertyGroup('ThermalExpansion').func('CTE_solid_1').set('funcname', 'CTE_solid_1');
model.material('mat4').propertyGroup('ThermalExpansion').func('CTE_solid_1').set('arg', 'T');
model.material('mat4').propertyGroup('ThermalExpansion').func('CTE_solid_1').set('extrap', 'constant');
model.material('mat4').propertyGroup('ThermalExpansion').func('CTE_solid_1').set('pieces', {'30.0' '300.0' '-8.786433E-6+5.111237E-7*T^1-4.275991E-9*T^2+1.8602E-11*T^3-4.019836E-14*T^4+3.403595E-17*T^5'});
model.material('mat4').propertyGroup('ThermalExpansion').func('CTE_solid_1').label('Piecewise 1');
model.material('mat4').propertyGroup('ThermalExpansion').func('CTE_solid_1').set('fununit', '1/K');
model.material('mat4').propertyGroup('ThermalExpansion').func('CTE_solid_1').set('argunit', 'K');
model.material('mat4').propertyGroup('ThermalExpansion').addInput('temperature');
model.material('mat4').propertyGroup('ThermalExpansion').addInput('strainreferencetemperature');
model.material('mat4').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat4').propertyGroup('Enu').set('E', 'E(T)');
model.material('mat4').propertyGroup('Enu').set('INFO_PREFIX:E', ['Reference: W. Koester, Zeitschrift fuer Metallkunde, v39, No. 1, p1 (1948) and A. Wolfenden and M.R. Harmouche, Journal of Materials Science, v28, No. 4, p1015 (1993) and D.R. Smith, F.R. Fickett, Journal of Research National Institute Standards Technology, v100, p119 (1995)' newline 'Note: Tmp near 962 ' native2unicode(hex2dec({'00' 'b0'}), 'unicode') 'C (1235 K), 2% error, data above 27 ' native2unicode(hex2dec({'00' 'b0'}), 'unicode') 'C (300 K) calculated with C11, C12 and C44 from the average of Voigt and Reuss values']);
model.material('mat4').propertyGroup('Enu').set('nu', 'nu(T)');
model.material('mat4').propertyGroup('Enu').set('INFO_PREFIX:nu', ['Reference: A. Wolfenden and M.R. Harmouche, Journal of Materials Science, v28, No. 4, p1015 (1993) and D.R. Smith, F.R. Fickett, Journal of Research National Institute Standards Technology, v100, p119 (1995)' newline 'Note: Tmp near 962 ' native2unicode(hex2dec({'00' 'b0'}), 'unicode') 'C (1235 K), calculated with C11, C12 and C44 from the average of Voigt and Reuss values']);
model.material('mat4').propertyGroup('Enu').func.create('E', 'Piecewise');
model.material('mat4').propertyGroup('Enu').func('E').set('funcname', 'E');
model.material('mat4').propertyGroup('Enu').func('E').set('arg', 'T');
model.material('mat4').propertyGroup('Enu').func('E').set('extrap', 'constant');
model.material('mat4').propertyGroup('Enu').func('E').set('pieces', {'0.0' '1173.16' '9.143965E10-2.775728E7*T^1-38123.31*T^2+49.99535*T^3-0.02009828*T^4'});
model.material('mat4').propertyGroup('Enu').func('E').label('Piecewise');
model.material('mat4').propertyGroup('Enu').func('E').set('fununit', 'Pa');
model.material('mat4').propertyGroup('Enu').func('E').set('argunit', 'K');
model.material('mat4').propertyGroup('Enu').func.create('nu', 'Piecewise');
model.material('mat4').propertyGroup('Enu').func('nu').set('funcname', 'nu');
model.material('mat4').propertyGroup('Enu').func('nu').set('arg', 'T');
model.material('mat4').propertyGroup('Enu').func('nu').set('extrap', 'constant');
model.material('mat4').propertyGroup('Enu').func('nu').set('pieces', {'0.0' '1173.16' '0.360203+1.499369E-5*T^1+4.008534E-8*T^2-1.475466E-11*T^3-1.181682E-15*T^4'});
model.material('mat4').propertyGroup('Enu').func('nu').label('Piecewise 1');
model.material('mat4').propertyGroup('Enu').func('nu').set('fununit', '');
model.material('mat4').propertyGroup('Enu').func('nu').set('argunit', 'K');
model.material('mat4').propertyGroup('Enu').addInput('temperature');
model.material('mat4').propertyGroup.create('KG', 'Bulk_modulus_and_shear_modulus');
model.material('mat4').propertyGroup('KG').set('G', 'mu(T)');
model.material('mat4').propertyGroup('KG').set('INFO_PREFIX:G', ['Reference: A. Wolfenden and M.R. Harmouche, Journal of Materials Science, v28, No. 4, p1015 (1993) and D.R. Smith, F.R. Fickett, Journal of Research National Institute Standards Technology, v100, p119 (1995)' newline 'Note: Tmp near 962 ' native2unicode(hex2dec({'00' 'b0'}), 'unicode') 'C (1235 K), 2% error, calculated with C11, C12 and C44 from the average of Voigt and Reuss values']);
model.material('mat4').propertyGroup('KG').set('K', 'kappa(T)');
model.material('mat4').propertyGroup('KG').set('INFO_PREFIX:K', ['Reference: A. Wolfenden and M.R. Harmouche, Journal of Materials Science, v28, No. 4, p1015 (1993) and D.R. Smith, F.R. Fickett, Journal of Research National Institute Standards Technology, v100, p119 (1995)' newline 'Note: Tmp near 962 ' native2unicode(hex2dec({'00' 'b0'}), 'unicode') 'C (1235 K), calculated with C11, C12 and C44 from the average of Voigt and Reuss values']);
model.material('mat4').propertyGroup('KG').func.create('mu', 'Piecewise');
model.material('mat4').propertyGroup('KG').func('mu').set('funcname', 'mu');
model.material('mat4').propertyGroup('KG').func('mu').set('arg', 'T');
model.material('mat4').propertyGroup('KG').func('mu').set('extrap', 'constant');
model.material('mat4').propertyGroup('KG').func('mu').set('pieces', {'0.0' '1173.16' '3.362582E10-6732560.0*T^1-31364.68*T^2+40.77008*T^3-0.01638472*T^4'});
model.material('mat4').propertyGroup('KG').func('mu').label('Piecewise');
model.material('mat4').propertyGroup('KG').func('mu').set('fununit', 'Pa');
model.material('mat4').propertyGroup('KG').func('mu').set('argunit', 'K');
model.material('mat4').propertyGroup('KG').func.create('kappa', 'Piecewise');
model.material('mat4').propertyGroup('KG').func('kappa').set('funcname', 'kappa');
model.material('mat4').propertyGroup('KG').func('kappa').set('arg', 'T');
model.material('mat4').propertyGroup('KG').func('kappa').set('extrap', 'constant');
model.material('mat4').propertyGroup('KG').func('kappa').set('pieces', {'0.0' '1173.16' '1.088261E11-3077357.0*T^1-87636.32*T^2+131.2545*T^3-0.05742809*T^4'});
model.material('mat4').propertyGroup('KG').func('kappa').label('Piecewise 1');
model.material('mat4').propertyGroup('KG').func('kappa').set('fununit', 'Pa');
model.material('mat4').propertyGroup('KG').func('kappa').set('argunit', 'K');
model.material('mat4').propertyGroup('KG').addInput('temperature');
model.material('mat4').set('family', 'custom');
model.material('mat4').set('lighting', 'cooktorrance');
model.material('mat4').set('specular', 'custom');
model.material('mat4').set('customspecular', [0.7843137254901961 1 1]);
model.material('mat4').set('fresnel', 0.9);
model.material('mat4').set('roughness', 0.1);
model.material('mat4').set('metallic', 0);
model.material('mat4').set('pearl', 0);
model.material('mat4').set('diffusewrap', 0);
model.material('mat4').set('clearcoat', 0);
model.material('mat4').set('reflectance', 0);
model.material('mat4').set('shininess', 130);
model.material.create('mat5', 'Common', 'comp1');
model.material('mat5').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat5').propertyGroup.create('linzRes', 'Linearized resistivity');
model.material('mat5').propertyGroup.create('Anand', 'Anand viscoplasticity');
model.material('mat5').label('Solder, 60Sn-40Pb');
model.material('mat5').set('family', 'custom');
model.material('mat5').set('customspecular', [0.7843137254901961 1 1]);
model.material('mat5').set('customdiffuse', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat5').set('noise', true);
model.material('mat5').set('fresnel', 0.9);
model.material('mat5').set('roughness', 0.1);
model.material('mat5').set('metallic', 0);
model.material('mat5').set('pearl', 0);
model.material('mat5').set('diffusewrap', 0);
model.material('mat5').set('clearcoat', 0);
model.material('mat5').set('reflectance', 0);
model.material('mat5').propertyGroup('def').set('electricconductivity', {'6.67e6[S/m]' '0' '0' '0' '6.67e6[S/m]' '0' '0' '0' '6.67e6[S/m]'});
model.material('mat5').propertyGroup('def').set('thermalexpansioncoefficient', {'21e-6[1/K]' '0' '0' '0' '21e-6[1/K]' '0' '0' '0' '21e-6[1/K]'});
model.material('mat5').propertyGroup('def').set('heatcapacity', '150[J/(kg*K)]');
model.material('mat5').propertyGroup('def').set('density', '9000[kg/m^3]');
model.material('mat5').propertyGroup('def').set('thermalconductivity', {'50[W/(m*K)]' '0' '0' '0' '50[W/(m*K)]' '0' '0' '0' '50[W/(m*K)]'});
model.material('mat5').propertyGroup('Enu').set('E', '10[GPa]');
model.material('mat5').propertyGroup('Enu').set('nu', '0.4');
model.material('mat5').propertyGroup('linzRes').set('rho0', '4.99e-7[ohm*m]');
model.material('mat5').propertyGroup('linzRes').addInput('temperature');
model.material('mat5').propertyGroup('Anand').set('A_ana', '1.49e7');
model.material('mat5').propertyGroup('Anand').set('Q_ana', '90046');
model.material('mat5').propertyGroup('Anand').set('xi_ana', '11');
model.material('mat5').propertyGroup('Anand').set('m_ana', '0.303');
model.material('mat5').propertyGroup('Anand').set('ssat_ana', '80.42[MPa]');
model.material('mat5').propertyGroup('Anand').set('sa_init', '56.33[MPa]');
model.material('mat5').propertyGroup('Anand').set('h0_ana', '2640.75[MPa]');
model.material('mat5').propertyGroup('Anand').set('a_ana', '1.34');
model.material('mat5').propertyGroup('Anand').set('n_ana', '0.0231');
model.material.create('mat6', 'Common', 'comp1');
model.material('mat6').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat6').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat6').propertyGroup('def').func.create('rho', 'Analytic');
model.material('mat6').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat6').propertyGroup('def').func.create('cs', 'Analytic');
model.material('mat6').propertyGroup('def').func.create('an1', 'Analytic');
model.material('mat6').propertyGroup('def').func.create('an2', 'Analytic');
model.material('mat6').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat6').propertyGroup.create('NonlinearModel', 'Nonlinear model');
model.material('mat6').propertyGroup.create('idealGas', 'Ideal gas');
model.material('mat6').propertyGroup('idealGas').func.create('Cp', 'Piecewise');
model.material('mat6').label('Air');
model.material('mat6').set('family', 'air');
model.material('mat6').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat6').propertyGroup('def').func('eta').set('pieces', {'200.0' '1600.0' '-8.38278E-7+8.35717342E-8*T^1-7.69429583E-11*T^2+4.6437266E-14*T^3-1.06585607E-17*T^4'});
model.material('mat6').propertyGroup('def').func('eta').set('argunit', 'K');
model.material('mat6').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.material('mat6').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat6').propertyGroup('def').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat6').propertyGroup('def').func('Cp').set('argunit', 'K');
model.material('mat6').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat6').propertyGroup('def').func('rho').set('expr', 'pA*0.02897/R_const[K*mol/J]/T');
model.material('mat6').propertyGroup('def').func('rho').set('args', {'pA' 'T'});
model.material('mat6').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.material('mat6').propertyGroup('def').func('rho').set('argunit', {'Pa' 'K'});
model.material('mat6').propertyGroup('def').func('rho').set('plotaxis', {'off' 'on'});
model.material('mat6').propertyGroup('def').func('rho').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat6').propertyGroup('def').func('rho').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '293.15'});
model.material('mat6').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat6').propertyGroup('def').func('k').set('pieces', {'200.0' '1600.0' '-0.00227583562+1.15480022E-4*T^1-7.90252856E-8*T^2+4.11702505E-11*T^3-7.43864331E-15*T^4'});
model.material('mat6').propertyGroup('def').func('k').set('argunit', 'K');
model.material('mat6').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.material('mat6').propertyGroup('def').func('cs').set('expr', 'sqrt(1.4*R_const[K*mol/J]/0.02897*T)');
model.material('mat6').propertyGroup('def').func('cs').set('args', {'T'});
model.material('mat6').propertyGroup('def').func('cs').set('fununit', 'm/s');
model.material('mat6').propertyGroup('def').func('cs').set('argunit', {'K'});
model.material('mat6').propertyGroup('def').func('cs').set('plotfixedvalue', {'273.15'});
model.material('mat6').propertyGroup('def').func('cs').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat6').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.material('mat6').propertyGroup('def').func('an1').set('expr', '-1/rho(pA,T)*d(rho(pA,T),T)');
model.material('mat6').propertyGroup('def').func('an1').set('args', {'pA' 'T'});
model.material('mat6').propertyGroup('def').func('an1').set('fununit', '1/K');
model.material('mat6').propertyGroup('def').func('an1').set('argunit', {'Pa' 'K'});
model.material('mat6').propertyGroup('def').func('an1').set('plotaxis', {'off' 'on'});
model.material('mat6').propertyGroup('def').func('an1').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat6').propertyGroup('def').func('an1').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '373.15'});
model.material('mat6').propertyGroup('def').func('an2').set('funcname', 'muB');
model.material('mat6').propertyGroup('def').func('an2').set('expr', '0.6*eta(T)');
model.material('mat6').propertyGroup('def').func('an2').set('args', {'T'});
model.material('mat6').propertyGroup('def').func('an2').set('fununit', 'Pa*s');
model.material('mat6').propertyGroup('def').func('an2').set('argunit', {'K'});
model.material('mat6').propertyGroup('def').func('an2').set('plotfixedvalue', {'200'});
model.material('mat6').propertyGroup('def').func('an2').set('plotargs', {'T' '200' '1600'});
model.material('mat6').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.material('mat6').propertyGroup('def').set('molarmass', '');
model.material('mat6').propertyGroup('def').set('bulkviscosity', '');
model.material('mat6').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)'});
model.material('mat6').propertyGroup('def').set('molarmass', '0.02897[kg/mol]');
model.material('mat6').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.material('mat6').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat6').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat6').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.material('mat6').propertyGroup('def').set('ratioofspecificheat', '1.4');
model.material('mat6').propertyGroup('def').set('electricconductivity', {'0[S/m]' '0' '0' '0' '0[S/m]' '0' '0' '0' '0[S/m]'});
model.material('mat6').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.material('mat6').propertyGroup('def').set('density', 'rho(pA,T)');
model.material('mat6').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.material('mat6').propertyGroup('def').set('soundspeed', 'cs(T)');
model.material('mat6').propertyGroup('def').addInput('temperature');
model.material('mat6').propertyGroup('def').addInput('pressure');
model.material('mat6').propertyGroup('RefractiveIndex').set('n', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat6').propertyGroup('NonlinearModel').set('BA', 'def.gamma-1');
model.material('mat6').propertyGroup('idealGas').func('Cp').label('Piecewise 2');
model.material('mat6').propertyGroup('idealGas').func('Cp').set('arg', 'T');
model.material('mat6').propertyGroup('idealGas').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat6').propertyGroup('idealGas').func('Cp').set('argunit', 'K');
model.material('mat6').propertyGroup('idealGas').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat6').propertyGroup('idealGas').set('Rs', 'R_const/Mn');
model.material('mat6').propertyGroup('idealGas').set('heatcapacity', 'Cp(T)');
model.material('mat6').propertyGroup('idealGas').set('ratioofspecificheat', '1.4');
model.material('mat6').propertyGroup('idealGas').set('molarmass', '0.02897');
model.material('mat6').propertyGroup('idealGas').addInput('temperature');
model.material('mat6').propertyGroup('idealGas').addInput('pressure');
model.material('mat6').materialType('nonSolid');
model.material('mat1').selection.set([1]);
model.material('mat2').selection.set([5]);
model.material('mat3').selection.set([2 7]);
model.material('mat4').selection.set([4 9]);
model.material('mat5').selection.set([3 8]);
model.material('mat6').selection.set([6]);

model.selection.create('box1', 'Box');
model.selection('box1').model('comp1');
model.selection('box1').label('Symmetry Plane');
model.selection('box1').set('entitydim', 2);
model.selection('box1').set('xmax', 0.1);
model.selection('box1').set('condition', 'inside');

model.physics('solid').selection.set([1 2 3 4 5 7 8 9]);
model.physics('solid').create('sym1', 'SymmetrySolid', 2);
model.physics('solid').feature('sym1').selection.named('box1');
model.physics('solid').create('roll1', 'Roller', 2);
model.physics('solid').feature('roll1').selection.set([8]);
model.physics('solid').create('sym2', 'SymmetrySolid', 2);
model.physics('solid').feature('sym2').selection.set([2]);
model.physics('solid').feature('sym2').set('NormalDirectionTranslation', 'FreeDisplacement');
model.physics('solid').create('sym3', 'SymmetrySolid', 2);
model.physics('solid').feature('sym3').selection.set([9]);
model.physics('solid').feature('sym3').set('NormalDirectionTranslation', 'FreeDisplacement');
model.physics('solid').create('disp1', 'Displacement0', 0);
model.physics('solid').feature('disp1').selection.set([1]);
model.physics('solid').feature('disp1').setIndex('Direction', 'prescribed', 2);
model.physics('ht').create('fluid1', 'FluidHeatTransferModel', 3);
model.physics('ht').feature('fluid1').selection.set([6]);
model.physics('ht').create('hs1', 'HeatSource', 3);
model.physics('ht').feature('hs1').selection.set([5]);
model.physics('ht').feature('hs1').set('heatSourceType', 'HeatRate');
model.physics('ht').feature('hs1').set('P0', 'Psource');
model.physics('ht').create('hf1', 'HeatFluxBoundary', 2);
model.physics('ht').feature('hf1').selection.set([3 4 11 19 29 30 44 46 49 50 51 52 53 54 55 56 57 58]);
model.physics('ht').feature('hf1').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht').feature('hf1').set('h', 'h_air');
model.physics('ht').feature('hf1').set('Text', 'T_air');
model.physics('ht').feature('init1').set('Tinit', 'T0');

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.set([1 10 16 20 24 33 37 40 59 61 62 63 66 67]);
model.mesh('mesh1').feature('map1').create('size1', 'Size');
model.mesh('mesh1').feature('map1').feature('size1').selection.set([10 16 20 24 33 37 40 59 61 62 63 66 67]);
model.mesh('mesh1').feature('map1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('map1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('map1').feature('size1').set('hmax', 0.1);
model.mesh('mesh1').create('fq1', 'FreeQuad');
model.mesh('mesh1').feature('fq1').selection.set([13 64]);
model.mesh('mesh1').feature('fq1').create('size1', 'Size');
model.mesh('mesh1').feature('fq1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('fq1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('fq1').feature('size1').set('hmax', 0.1);
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').create('size1', 'Size');
model.mesh('mesh1').feature('swe1').feature('size1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe1').feature('size1').selection.set([2 3 4 5 6 7 8 9 10 11 12 13 14 15 16]);
model.mesh('mesh1').feature('swe1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('swe1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('swe1').feature('size1').set('hmax', 0.2);
model.mesh('mesh1').feature('size').set('hauto', 2);
model.mesh('mesh1').run;

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('se1', 'Segregated');
model.sol('sol1').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_T'});
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subdamp', 1);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, heat transfer variables ht (te1)');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').label('Temperature');
model.sol('sol1').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_u' 'comp1_solid_sym2_un' 'comp1_solid_sym3_un'});
model.sol('sol1').feature('s1').create('d2', 'Direct');
model.sol('sol1').feature('s1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d2').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('s1').feature('d2').label('Suggested Direct Solver solid (te1)');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').label('Solid Mechanics');
model.sol('sol1').feature('s1').feature('se1').set('segtermonres', 'off');
model.sol('sol1').feature('s1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol1').feature('s1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.T 0 ');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol1').feature('s1').feature('i1').label('Suggested Iterative Solver solid (te1)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('s1').create('i2', 'Iterative');
model.sol('sol1').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i2').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i2').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i2').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i2').set('maxlinit', 10000);
model.sol('sol1').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i2').label('AMG, heat transfer variables ht (te1)');
model.sol('sol1').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('s1').feature('se1').set('segterm', 'iter');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subtermconst', 'tol');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subntolfact', 1);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subtermconst', 'tol');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subntolfact', 1);
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('vol1', 'Volume');
model.result('pg1').feature('vol1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('vol1').set('threshold', 'manual');
model.result('pg1').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg1').feature('vol1').set('colortable', 'Rainbow');
model.result('pg1').feature('vol1').set('colortabletrans', 'none');
model.result('pg1').feature('vol1').set('colorscalemode', 'linear');
model.result('pg1').feature('vol1').set('resolution', 'custom');
model.result('pg1').feature('vol1').set('refine', 2);
model.result('pg1').feature('vol1').set('colortable', 'Prism');
model.result('pg1').feature('vol1').create('def', 'Deform');
model.result('pg1').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg1').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Temperature (ht)');
model.result('pg2').set('data', 'dset1');
model.result('pg2').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond3/pcond3/pg1');
model.result('pg2').feature.create('vol1', 'Volume');
model.result('pg2').feature('vol1').set('showsolutionparams', 'on');
model.result('pg2').feature('vol1').set('solutionparams', 'parent');
model.result('pg2').feature('vol1').set('expr', 'T');
model.result('pg2').feature('vol1').set('colortable', 'HeatCameraLight');
model.result('pg2').feature('vol1').set('smooth', 'internal');
model.result('pg2').feature('vol1').set('showsolutionparams', 'on');
model.result('pg2').feature('vol1').set('data', 'parent');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('vol1').set('unit', 'MPa');
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').label('Isothermal Contours (ht)');
model.result('pg3').set('data', 'dset1');
model.result('pg3').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond3/pcond3/pg3');
model.result('pg3').feature.create('iso1', 'Isosurface');
model.result('pg3').feature('iso1').set('solutionparams', 'parent');
model.result('pg3').feature('iso1').set('expr', 'T');
model.result('pg3').feature('iso1').set('number', 10);
model.result('pg3').feature('iso1').set('colortable', 'HeatCameraLight');
model.result('pg3').feature('iso1').set('smooth', 'internal');
model.result('pg3').feature('iso1').set('showsolutionparams', 'on');
model.result('pg3').feature('iso1').set('data', 'parent');
model.result('pg3').label('Isothermal Contours (ht)');
model.result('pg3').run;
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').run;
model.result('pg4').label('Stress in Solder Joint');
model.result('pg4').set('edges', false);
model.result('pg4').create('vol1', 'Volume');
model.result('pg4').feature('vol1').set('expr', 'solid.misesGp');
model.result('pg4').feature('vol1').set('descr', 'von Mises stress');
model.result('pg4').feature('vol1').set('unit', 'MPa');
model.result('pg4').feature('vol1').set('colortable', 'Prism');
model.result('pg4').feature('vol1').create('sel1', 'Selection');
model.result('pg4').feature('vol1').feature('sel1').selection.set([8]);
model.result('pg4').run;
model.result('pg2').run;
model.result('pg3').run;
model.result('pg2').run;

model.title('Thermo-Mechanical Analysis of a Surface-Mounted Resistor');

model.description(['The thermally induced stresses are analyzed at steady state using the Heat Transfer and Solid Mechanics interfaces.' newline  newline 'Requires the Heat Transfer Module and the Structural Mechanics Module or the MEMS Module.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;

model.label('surface_resistor.mph');

model.modelNode.label('Components');

out = model;
