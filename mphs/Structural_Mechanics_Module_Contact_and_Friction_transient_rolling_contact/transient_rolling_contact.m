function out = model
%
% transient_rolling_contact.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Structural_Mechanics_Module/Contact_and_Friction');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/solid', true);

model.geom('geom1').create('ca1', 'CircularArc');
model.geom('geom1').feature('ca1').set('specify', 'endsangle1');
model.geom('geom1').feature('ca1').set('point1', [-1 0]);
model.geom('geom1').feature('ca1').set('point2', [0 -1]);
model.geom('geom1').feature('ca1').set('angle1', 180);
model.geom('geom1').run('ca1');
model.geom('geom1').create('ca2', 'CircularArc');
model.geom('geom1').feature('ca2').set('specify', 'endsangle1');
model.geom('geom1').feature('ca2').set('point1', [0.5 -1]);
model.geom('geom1').feature('ca2').set('point2', [1.5 0]);
model.geom('geom1').feature('ca2').set('angle1', 270);
model.geom('geom1').runPre('fin');
model.geom('geom1').create('ls1', 'LineSegment');
model.geom('geom1').feature('ls1').selection('vertex1').set('ca1', 2);
model.geom('geom1').feature('ls1').selection('vertex2').set('ca2', 1);
model.geom('geom1').run('ls1');
model.geom('geom1').create('ccur1', 'ConvertToCurve');
model.geom('geom1').feature('ccur1').selection('input').set({'ca1' 'ca2' 'ls1'});
model.geom('geom1').selection.create('csel1', 'CumulativeSelection');
model.geom('geom1').selection('csel1').label('contact_src');
model.geom('geom1').feature('ccur1').set('contributeto', 'csel1');
model.geom('geom1').run('ccur1');
model.geom('geom1').create('c1', 'Circle');
model.geom('geom1').feature('c1').set('r', 0.15);
model.geom('geom1').feature('c1').set('pos', [-0.85 0]);
model.geom('geom1').feature('c1').setIndex('layername', 'Layer 1', 0);
model.geom('geom1').feature('c1').setIndex('layer', 0.02, 0);
model.geom('geom1').run('c1');
model.geom('geom1').create('del1', 'Delete');
model.geom('geom1').feature('del1').selection('input').init(2);
model.geom('geom1').feature('del1').selection('input').set('c1', 5);

model.param.set('theta', '10[deg]');
model.param.descr('theta', 'Auxiliary geometric parameter');

model.geom('geom1').run('del1');
model.geom('geom1').create('rot1', 'Rotate');
model.geom('geom1').feature('rot1').selection('input').set({'del1'});
model.geom('geom1').feature('rot1').set('rot', 'theta');
model.geom('geom1').feature('fin').set('action', 'assembly');
model.geom('geom1').run('fin');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat1').propertyGroup('Enu').set('E', {'5e6'});
model.material('mat1').propertyGroup('Enu').set('nu', {'0.3'});
model.material('mat1').propertyGroup('def').set('density', {'1e3'});

model.physics('solid').create('gacc1', 'GravityAcceleration', -1);

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');
model.selection('sel1').label('contact_dst');
model.selection('sel1').geom(1);
model.selection('sel1').set('groupcontang', true);
model.selection('sel1').add([8 9 12 15]);

model.pair.create('p1', 'Contact', 'geom1');
model.pair('p1').source.named('geom1_csel1_bnd');
model.pair('p1').destination.named('sel1');

model.physics('solid').feature('dcnt1').set('ContactMethodCtrl', 'AugmentedLagrange');
model.physics('solid').feature('dcnt1').set('penaltyCtrlAuglag', 'ManualTuning');
model.physics('solid').feature('dcnt1').set('useRelaxation', 'Never');
model.physics('solid').feature('dcnt1').create('fric1', 'Friction', 1);
model.physics('solid').feature('dcnt1').feature('fric1').set('FrictionModel', 'DynamicCoulomb');
model.physics('solid').feature('dcnt1').feature('fric1').set('mustat', 0.5);
model.physics('solid').feature('dcnt1').feature('fric1').set('mudyn', 0.3);
model.physics('solid').feature('dcnt1').feature('fric1').set('dcfric', 1);
model.physics('solid').feature('dcnt1').feature('fric1').set('storeFricEnergy', true);

model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl('intop1').set('axisym', true);
model.cpl('intop1').selection.all;

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').set('V', 'intop1(g_const*solid.rho*(y+0.85))*1[m]');
model.variable('var1').descr('V', 'Potential energy');

model.cpl.create('maxop1', 'Maximum', 'geom1');
model.cpl('maxop1').selection.geom('geom1', 1);
model.cpl('maxop1').selection.named('sel1');
model.cpl('maxop1').set('points', 'integration');

model.variable('var1').set('mu_max', 'maxop1(if(solid.dcnt1.isContact_p1,solid.dcnt1.mu_fric,0))');
model.variable('var1').descr('mu_max', 'Maximum value of friction coefficient');

model.mesh('mesh1').create('edg1', 'Edge');
model.mesh('mesh1').feature('edg1').selection.named('geom1_csel1_bnd');
model.mesh('mesh1').feature('edg1').create('size1', 'Size');
model.mesh('mesh1').feature('edg1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('edg1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('edg1').feature('size1').set('hmax', 0.005);
model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([4 5 6 7]);
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 3);
model.mesh('mesh1').feature('map1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis2').selection.named('sel1');
model.mesh('mesh1').feature('map1').feature('dis2').set('numelem', 20);

model.study('std1').feature('time').set('tlist', 'range(0,2e-2,4)');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_solid_Tn_p1').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_Tt_p1').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_Wfric_p1').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_Tn_p1').set('scaleval', '100000000');
model.sol('sol1').feature('v1').feature('comp1_solid_Tt_p1').set('scaleval', '10000000');
model.sol('sol1').feature('v1').feature('comp1_solid_Wfric_p1').set('scaleval', '1e-2*2.6934506731352412*10000000');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*2.6934506731352412');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,2e-2,4)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('timemethod', 'genalpha');
model.sol('sol1').feature('t1').set('predictor', 'constant');
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_u'});
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('subdtech', 'auto');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('subminstep', 0.5);
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('usesubminsteprecovery', 'on');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('subtermauto', 'itertol');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('subiter', 7);
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('subntolfact', 1);
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Solid Mechanics');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_solid_Wfric_p1'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').create('ls1', 'LumpedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ls1').set('segvar', {'comp1_solid_Tn_p1' 'comp1_solid_Tt_p1'});
model.sol('sol1').feature('t1').feature('se1').set('maxsegiter', 15);
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('v1').feature('comp1_solid_Tn_p1').set('scaleval', '5e4');
model.sol('sol1').feature('v1').feature('comp1_solid_Tt_p1').set('scaleval', '5e4');
model.sol('sol1').feature('v1').feature('comp1_solid_Wfric_p1').set('scaleval', '5e-3*5e4');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '5e-3');
model.sol('sol1').feature('t1').set('tstepsgenalpha', 'manual');
model.sol('sol1').feature('t1').set('timestepgenalpha', '5e-3');
model.sol('sol1').feature('t1').feature('se1').set('ntolfact', 0.1);
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('subdtech', 'const');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('subjtech', 'onevery');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('subtermconst', 'itertol');

model.variable('var1').set('W_tot', 'solid.Wk_tot+solid.Ws_tot+V+solid.Wfric_tot', 'Total potential energy');
model.variable('var1').descr('W_tot', 'Total energy');

model.probe.create('var1', 'GlobalVariable');
model.probe('var1').model('comp1');
model.probe('var1').set('expr', 'W_tot');
model.probe('var1').genResult('none');

model.sol('sol1').runAll;

model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 201, 0);
model.result('pg2').set('defaultPlotID', 'stress');
model.result('pg2').label('Stress (solid)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg2').feature('surf1').set('threshold', 'manual');
model.result('pg2').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg2').feature('surf1').set('colortable', 'Rainbow');
model.result('pg2').feature('surf1').set('colortabletrans', 'none');
model.result('pg2').feature('surf1').set('colorscalemode', 'linear');
model.result('pg2').feature('surf1').set('resolution', 'normal');
model.result('pg2').feature('surf1').set('colortable', 'Prism');
model.result('pg2').feature('surf1').create('def', 'Deform');
model.result('pg2').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg2').feature('surf1').feature('def').set('scale', '1');
model.result('pg2').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg2').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg2').run;
model.result('pg2').set('titletype', 'manual');
model.result('pg2').set('title', 'von Mises stress (N/m<sup>2</sup>) and point trajectory');
model.result('pg2').create('pttraj1', 'PointTrajectories');
model.result('pg2').feature('pttraj1').set('plotdata', 'points');
model.result('pg2').feature('pttraj1').set('expr', {'u-cos(theta)' '0'});
model.result('pg2').feature('pttraj1').setIndex('expr', 'v-sin(theta)', 1);
model.result('pg2').feature('pttraj1').selection.set([5]);
model.result('pg2').feature('pttraj1').set('linecolor', 'red');
model.result('pg2').feature('pttraj1').set('pointtype', 'point');
model.result('pg2').feature('pttraj1').set('sphereradiusscaleactive', true);
model.result('pg2').feature('pttraj1').set('sphereradiusscale', 15);
model.result('pg2').run;
model.result.export.create('anim1', 'Animation');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('fontsize', '9');
model.result.export('anim1').set('colortheme', 'globaltheme');
model.result.export('anim1').set('customcolor', [1 1 1]);
model.result.export('anim1').set('background', 'color');
model.result.export('anim1').set('gltfincludelines', 'on');
model.result.export('anim1').set('title1d', 'on');
model.result.export('anim1').set('legend1d', 'on');
model.result.export('anim1').set('logo1d', 'on');
model.result.export('anim1').set('options1d', 'on');
model.result.export('anim1').set('title2d', 'on');
model.result.export('anim1').set('legend2d', 'on');
model.result.export('anim1').set('logo2d', 'on');
model.result.export('anim1').set('options2d', 'off');
model.result.export('anim1').set('title3d', 'on');
model.result.export('anim1').set('legend3d', 'on');
model.result.export('anim1').set('logo3d', 'on');
model.result.export('anim1').set('options3d', 'off');
model.result.export('anim1').set('axisorientation', 'on');
model.result.export('anim1').set('grid', 'on');
model.result.export('anim1').set('axes1d', 'on');
model.result.export('anim1').set('axes2d', 'on');
model.result.export('anim1').set('showgrid', 'on');
model.result.export('anim1').set('plotgroup', 'pg2');
model.result('pg2').run;
model.result('pg2').feature('surf1').set('colortable', 'Rainbow');
model.result.export('anim1').showFrame;
model.result.export('anim1').set('framesel', 'all');
model.result.export('anim1').set('frametime', '1e-1');
model.result.export('anim1').run;
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('Energy');
model.result('pg3').set('titletype', 'none');
model.result('pg3').set('ylabelactive', true);
model.result('pg3').set('ylabel', 'Energy (J)');
model.result('pg3').create('glob1', 'Global');
model.result('pg3').feature('glob1').set('markerpos', 'datapoints');
model.result('pg3').feature('glob1').set('linewidth', 'preference');
model.result('pg3').feature('glob1').setIndex('expr', 'solid.Wk_tot', 0);
model.result('pg3').feature('glob1').setIndex('unit', 'J', 0);
model.result('pg3').feature('glob1').setIndex('descr', 'Total kinetic energy', 0);
model.result('pg3').feature('glob1').setIndex('expr', 'solid.Ws_tot', 1);
model.result('pg3').feature('glob1').setIndex('unit', 'J', 1);
model.result('pg3').feature('glob1').setIndex('descr', 'Total elastic strain energy', 1);
model.result('pg3').feature('glob1').setIndex('expr', 'V', 2);
model.result('pg3').feature('glob1').setIndex('unit', 'N*m', 2);
model.result('pg3').feature('glob1').setIndex('descr', 'Potential energy', 2);
model.result('pg3').feature('glob1').setIndex('expr', 'solid.Wfric_tot', 3);
model.result('pg3').feature('glob1').setIndex('unit', 'J', 3);
model.result('pg3').feature('glob1').setIndex('descr', 'Total frictional dissipation energy', 3);
model.result('pg3').feature('glob1').setIndex('expr', 'W_tot', 4);
model.result('pg3').feature('glob1').setIndex('unit', 'J', 4);
model.result('pg3').feature('glob1').setIndex('descr', 'Total energy', 4);
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Friction Coefficient');
model.result('pg4').set('titletype', 'none');
model.result('pg4').set('showlegends', false);
model.result('pg4').create('glob1', 'Global');
model.result('pg4').feature('glob1').set('markerpos', 'datapoints');
model.result('pg4').feature('glob1').set('linewidth', 'preference');
model.result('pg4').feature('glob1').setIndex('expr', 'mu_max', 0);
model.result('pg4').feature('glob1').setIndex('unit', 1, 0);
model.result('pg4').feature('glob1').setIndex('descr', 'Maximum value of friction coefficient', 0);
model.result('pg4').run;
model.result('pg1').set('window', 'window1');
model.result('pg1').run;
model.result('pg1').label('Total Energy');
model.result('pg2').run;
model.result.duplicate('pg5', 'pg2');
model.result('pg5').run;
model.result('pg5').set('edges', false);
model.result('pg5').set('showlegends', false);
model.result('pg5').run;
model.result('pg5').feature('surf1').set('data', 'dset1');
model.result('pg5').feature('surf1').setIndex('looplevel', 21, 0);
model.result('pg5').run;
model.result('pg5').feature('pttraj1').set('data', 'dset1');
model.result('pg5').feature('pttraj1').setIndex('looplevel', 21, 0);
model.result('pg5').create('line1', 'Line');
model.result('pg5').feature('line1').set('data', 'dset1');
model.result('pg5').feature('line1').setIndex('looplevel', 21, 0);
model.result('pg5').feature('line1').set('expr', '1');
model.result('pg5').feature('line1').set('coloring', 'uniform');
model.result('pg5').feature('line1').set('color', 'black');
model.result('pg5').feature('line1').create('def1', 'Deform');
model.result('pg5').run;
model.result('pg5').feature('line1').feature('def1').set('expr', {'try_catch(u, 0)' 'v'});
model.result('pg5').feature('line1').feature('def1').setIndex('expr', 'try_catch(v, 0)', 1);
model.result('pg5').feature('line1').feature('def1').set('scaleactive', true);
model.result('pg5').feature('line1').feature('def1').set('scale', 1);
model.result('pg5').run;
model.result('pg5').feature('line1').create('sel1', 'Selection');
model.result('pg5').feature('line1').feature('sel1').selection.named('geom1_csel1_bnd');
model.result('pg5').run;
model.result('pg5').feature.duplicate('surf2', 'surf1');
model.result('pg5').feature.duplicate('pttraj2', 'pttraj1');
model.result('pg5').feature.duplicate('line2', 'line1');
model.result('pg5').run;
model.result('pg5').feature('surf2').setIndex('looplevel', 41, 0);
model.result('pg5').run;
model.result('pg5').feature('surf2').feature('def').set('expr', {'u' 'v-1'});
model.result('pg5').run;
model.result('pg5').feature('line2').setIndex('looplevel', 41, 0);
model.result('pg5').run;
model.result('pg5').feature('line2').feature('def1').setIndex('expr', 'try_catch(v, 0)-1', 1);
model.result('pg5').run;
model.result('pg5').feature('pttraj2').setIndex('looplevel', 41, 0);
model.result('pg5').feature('pttraj2').setIndex('expr', 'v-sin(theta)-1', 1);
model.result('pg5').run;
model.result('pg5').feature.duplicate('surf3', 'surf2');
model.result('pg5').feature.duplicate('pttraj3', 'pttraj2');
model.result('pg5').feature.duplicate('line3', 'line2');
model.result('pg5').run;
model.result('pg5').feature('surf3').setIndex('looplevel', 61, 0);
model.result('pg5').run;
model.result('pg5').feature('surf3').feature('def').set('expr', {'u' 'v-2'});
model.result('pg5').run;
model.result('pg5').feature('line3').setIndex('looplevel', 61, 0);
model.result('pg5').run;
model.result('pg5').feature('line3').feature('def1').setIndex('expr', 'try_catch(v, 0)-2', 1);
model.result('pg5').run;
model.result('pg5').feature('pttraj3').setIndex('looplevel', 61, 0);
model.result('pg5').feature('pttraj3').setIndex('expr', 'v-sin(theta)-2', 1);
model.result('pg5').run;
model.result('pg5').feature.duplicate('surf4', 'surf3');
model.result('pg5').feature.duplicate('pttraj4', 'pttraj3');
model.result('pg5').feature.duplicate('line4', 'line3');
model.result('pg5').run;
model.result('pg5').feature('surf4').setIndex('looplevel', 81, 0);
model.result('pg5').run;
model.result('pg5').feature('surf4').feature('def').set('expr', {'u' 'v-3'});
model.result('pg5').run;
model.result('pg5').feature('line4').setIndex('looplevel', 81, 0);
model.result('pg5').run;
model.result('pg5').feature('line4').feature('def1').setIndex('expr', 'try_catch(v, 0)-3', 1);
model.result('pg5').run;
model.result('pg5').feature('pttraj4').setIndex('expr', 'v-sin(theta)-3', 1);
model.result('pg5').feature('pttraj4').setIndex('looplevel', 81, 0);
model.result('pg5').run;
model.result('pg5').feature.duplicate('surf5', 'surf4');
model.result('pg5').feature.duplicate('pttraj5', 'pttraj4');
model.result('pg5').feature.duplicate('line5', 'line4');
model.result('pg5').run;
model.result('pg5').feature('surf5').setIndex('looplevel', 101, 0);
model.result('pg5').run;
model.result('pg5').feature('surf5').feature('def').set('expr', {'u' 'v-4'});
model.result('pg5').run;
model.result('pg5').feature('line5').setIndex('looplevel', 101, 0);
model.result('pg5').run;
model.result('pg5').feature('line5').feature('def1').setIndex('expr', 'try_catch(v, 0)-4', 1);
model.result('pg5').run;
model.result('pg5').feature('pttraj5').setIndex('looplevel', 101, 0);
model.result('pg5').feature('pttraj5').setIndex('expr', 'v-sin(theta)-4', 1);
model.result('pg5').run;
model.result('pg5').feature.duplicate('surf6', 'surf1');
model.result('pg5').feature.duplicate('pttraj6', 'pttraj1');
model.result('pg5').feature.duplicate('line6', 'line1');
model.result('pg5').run;
model.result('pg5').feature('surf6').setIndex('looplevel', 121, 0);
model.result('pg5').run;
model.result('pg5').feature('surf6').feature('def').set('expr', {'u+3' 'v'});
model.result('pg5').run;
model.result('pg5').feature('line6').setIndex('looplevel', 121, 0);
model.result('pg5').run;
model.result('pg5').feature('line6').feature('def1').setIndex('expr', 'try_catch(u, 0)+3', 0);
model.result('pg5').run;
model.result('pg5').feature('pttraj6').setIndex('looplevel', 121, 0);
model.result('pg5').feature('pttraj6').setIndex('expr', 'u-cos(theta)+3', 0);
model.result('pg5').run;
model.result('pg5').feature.duplicate('surf7', 'surf6');
model.result('pg5').feature.duplicate('pttraj7', 'pttraj6');
model.result('pg5').feature.duplicate('line7', 'line6');
model.result('pg5').run;
model.result('pg5').feature('surf7').setIndex('looplevel', 141, 0);
model.result('pg5').run;
model.result('pg5').feature('surf7').feature('def').set('expr', {'u+3' 'v-1'});
model.result('pg5').run;
model.result('pg5').feature('line7').setIndex('looplevel', 141, 0);
model.result('pg5').run;
model.result('pg5').feature('line7').feature('def1').setIndex('expr', 'try_catch(v, 0)-1', 1);
model.result('pg5').run;
model.result('pg5').feature('pttraj7').setIndex('looplevel', 141, 0);
model.result('pg5').feature('pttraj7').setIndex('expr', 'v-sin(theta)-1', 1);
model.result('pg5').run;
model.result('pg5').feature.duplicate('surf8', 'surf7');
model.result('pg5').feature.duplicate('pttraj8', 'pttraj7');
model.result('pg5').feature.duplicate('line8', 'line7');
model.result('pg5').run;
model.result('pg5').feature('surf8').setIndex('looplevel', 161, 0);
model.result('pg5').run;
model.result('pg5').feature('surf8').feature('def').set('expr', {'u+3' 'v-2'});
model.result('pg5').run;
model.result('pg5').feature('line8').setIndex('looplevel', 161, 0);
model.result('pg5').run;
model.result('pg5').feature('line8').feature('def1').setIndex('expr', 'try_catch(v, 0)-2', 1);
model.result('pg5').run;
model.result('pg5').feature('pttraj8').setIndex('looplevel', 161, 0);
model.result('pg5').feature('pttraj8').setIndex('expr', 'v-sin(theta)-2', 1);
model.result('pg5').run;
model.result('pg5').feature.duplicate('surf9', 'surf8');
model.result('pg5').feature.duplicate('pttraj9', 'pttraj8');
model.result('pg5').feature.duplicate('line9', 'line8');
model.result('pg5').run;
model.result('pg5').feature('surf9').setIndex('looplevel', 181, 0);
model.result('pg5').run;
model.result('pg5').feature('surf9').feature('def').set('expr', {'u+3' 'v-3'});
model.result('pg5').run;
model.result('pg5').feature('line9').setIndex('looplevel', 181, 0);
model.result('pg5').run;
model.result('pg5').feature('line9').feature('def1').setIndex('expr', 'try_catch(v, 0)-3', 1);
model.result('pg5').run;
model.result('pg5').feature('pttraj9').setIndex('looplevel', 181, 0);
model.result('pg5').feature('pttraj9').setIndex('expr', 'v-sin(theta)-3', 1);
model.result('pg5').run;
model.result('pg5').feature.duplicate('surf10', 'surf9');
model.result('pg5').feature.duplicate('pttraj10', 'pttraj9');
model.result('pg5').feature.duplicate('line10', 'line9');
model.result('pg5').run;
model.result('pg5').feature('surf10').setIndex('looplevel', 201, 0);
model.result('pg5').run;
model.result('pg5').feature('surf10').feature('def').set('expr', {'u+3' 'v-4'});
model.result('pg5').run;
model.result('pg5').feature('line10').setIndex('looplevel', 201, 0);
model.result('pg5').run;
model.result('pg5').feature('line10').feature('def1').setIndex('expr', 'try_catch(v, 0)-4', 1);
model.result('pg5').run;
model.result('pg5').feature('pttraj10').setIndex('looplevel', 201, 0);
model.result('pg5').feature('pttraj10').setIndex('expr', 'v-sin(theta)-4', 1);
model.result('pg5').run;

model.view('view1').set('showgrid', true);

model.result('pg5').run;
model.result.remove('pg5');
model.result('pg1').set('window', 'window1');
model.result('pg1').run;
model.result('pg2').run;

model.title('Transient Rolling Contact');

model.description('This concept example shows how to handle a transient contact problem with stick-slip friction transition. A soft hollow pipe subjected to gravity load is released at the top of a halfpipe. The pipe motion varies between sliding and rolling, depending on its position in the halfpipe and its velocity. The cross section of the pipe is also ovalized due to the contact and inertial forces. An energy balance validates the accuracy of the solution.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;

model.label('transient_rolling_contact.mph');

model.modelNode.label('Components');

out = model;
