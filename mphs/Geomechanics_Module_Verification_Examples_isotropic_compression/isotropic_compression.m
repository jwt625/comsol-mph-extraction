function out = model
%
% isotropic_compression.m
%
% Model exported on May 26 2025, 21:28 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Geomechanics_Module/Verification_Examples');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.param.set('para', '0');
model.param.descr('para', 'Parameter');
model.param.set('p0', '200[kPa]');
model.param.descr('p0', 'Pressure');

model.func.create('int1', 'Interpolation');
model.func('int1').set('funcname', 'Pressure');
model.func('int1').label('Boundary Load');
model.func('int1').setIndex('table', 0, 0, 0);
model.func('int1').setIndex('table', 0, 0, 1);
model.func('int1').setIndex('table', 0.4, 1, 0);
model.func('int1').setIndex('table', '2*p0', 1, 1);
model.func('int1').setIndex('table', 0.6, 2, 0);
model.func('int1').setIndex('table', '1*p0', 2, 1);
model.func('int1').setIndex('table', 0.8, 3, 0);
model.func('int1').setIndex('table', '2*p0', 3, 1);
model.func('int1').setIndex('table', 1, 4, 0);
model.func('int1').setIndex('table', '4*p0', 4, 1);
model.func('int1').setIndex('argunit', 1, 0);
model.func('int1').setIndex('fununit', 'Pa', 0);

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', {'5[cm]' '10[cm]'});
model.geom('geom1').run('r1');
model.geom('geom1').create('arr1', 'Array');
model.geom('geom1').feature('arr1').selection('input').set({'r1'});
model.geom('geom1').feature('arr1').set('fullsize', [1 3]);
model.geom('geom1').feature('arr1').set('displ', {'0' '15[cm]'});
model.geom('geom1').runPre('fin');
model.geom('geom1').run;

model.physics('solid').create('epsm1', 'ElastoplasticSoilMaterial', 2);
model.physics('solid').feature('epsm1').label('Modified Cam-Clay Model (MCC)');
model.physics('solid').feature('epsm1').selection.set([1]);
model.physics('solid').feature('epsm1').set('CamClayOption', 'G');
model.physics('solid').feature('epsm1').set('M_mat', 'MatchtoMC');
model.physics('solid').feature('epsm1').set('pc0', '300[kPa]');
model.physics('solid').feature.duplicate('epsm2', 'epsm1');
model.physics('solid').feature('epsm2').label('Extended Barcelona Basic Model (BBMx)');
model.physics('solid').feature('epsm2').selection.set([2]);
model.physics('solid').feature('epsm2').set('MaterialModel', 'BarcelonaBasic');
model.physics('solid').feature('epsm2').set('ss', 0);
model.physics('solid').feature.duplicate('epsm3', 'epsm1');
model.physics('solid').feature('epsm3').label('Modified Structured Cam-Clay Model (MSCC)');
model.physics('solid').feature('epsm3').selection.set([3]);
model.physics('solid').feature('epsm3').set('MaterialModel', 'StructuredCamClay');
model.physics('solid').feature('epsm3').set('MS_mat', 'MatchtoMC');
model.physics('solid').feature('epsm3').set('pbi_mat', 'userdef');
model.physics('solid').feature('epsm3').set('zetaS_mat', 'userdef');
model.physics('solid').feature('epsm3').set('zetaS', 2);
model.physics('solid').feature('epsm3').set('Deltaei_mat', 'userdef');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').label('Modified Cam-Clay Material');
model.material('mat1').selection.set([1]);
model.material('mat1').propertyGroup.create('KG', 'Bulk_modulus_and_shear_modulus');
model.material('mat1').propertyGroup('KG').set('G', {'10[MPa]'});
model.material('mat1').propertyGroup.create('CamClayModel', 'Camclay');
model.material('mat1').propertyGroup('CamClayModel').set('kappaSwelling', {'0.013'});
model.material('mat1').propertyGroup('CamClayModel').set('lambdaComp', {'0.032'});
model.material('mat1').propertyGroup('CamClayModel').set('evoidref', {'0.7'});
model.material('mat1').propertyGroup.create('MohrCoulomb', 'Mohr_Coulomb_criterion');
model.material('mat1').propertyGroup('MohrCoulomb').set('internalphi', {'30[deg]'});
model.material('mat1').propertyGroup('def').set('density', {'2400[kg/m^3]'});
model.material.duplicate('mat2', 'mat1');
model.material('mat2').label('Extended Barcelona Basic Material');
model.material('mat2').selection.set([2]);
model.material('mat2').propertyGroup.create('BarcelonaBasicModel', 'Barcelona_Basic');
model.material('mat2').propertyGroup('BarcelonaBasicModel').set('kappaSwelling', {'0.013'});
model.material('mat2').propertyGroup('BarcelonaBasicModel').set('kappaSwellings', {'0.0013'});
model.material('mat2').propertyGroup('BarcelonaBasicModel').set('lambdaComp0', {'0.032'});
model.material('mat2').propertyGroup('BarcelonaBasicModel').set('lambdaCompss', {'0.0032'});
model.material('mat2').propertyGroup('BarcelonaBasicModel').set('wB', {'0.75'});
model.material('mat2').propertyGroup('BarcelonaBasicModel').set('mB', {'1e4'});
model.material('mat2').propertyGroup('BarcelonaBasicModel').set('bB', {'100'});
model.material('mat2').propertyGroup('BarcelonaBasicModel').set('kB', {'0.6'});
model.material('mat2').propertyGroup('BarcelonaBasicModel').set('evoidref0', {'0.7'});
model.material('mat2').propertyGroup('BarcelonaBasicModel').set('sy0', {'0.3[MPa]'});
model.material.duplicate('mat3', 'mat2');
model.material('mat3').label('Modified Structured Cam-Clay Material');
model.material('mat3').selection.set([3]);
model.material('mat3').propertyGroup.create('StructuredCamClayModel', 'Structured_Camclay');
model.material('mat3').propertyGroup('StructuredCamClayModel').set('kappaSwellingS', {'0.013'});
model.material('mat3').propertyGroup('StructuredCamClayModel').set('lambdaCompS', {'0.032'});
model.material('mat3').propertyGroup('StructuredCamClayModel').set('evoidrefS', {'0.7'});
model.material('mat3').propertyGroup('StructuredCamClayModel').set('dvS', {'1'});
model.material('mat3').propertyGroup('StructuredCamClayModel').set('dsS', {'1'});
model.material('mat3').propertyGroup('StructuredCamClayModel').set('epdevc', {'0.02'});

model.physics('solid').create('tm1', 'TestMaterial', -1);
model.physics('solid').feature('tm1').label('Test Material [MCC]');
model.physics('solid').feature('tm1').selection('domainSelection').set([1]);
model.physics('solid').feature('tm1').set('stepN', 100);
model.physics('solid').feature('tm1').set('testSetup', 'userDefined');
model.physics('solid').feature('tm1').set('testControl', 'force');
model.physics('solid').feature('tm1').set('uniaxialTest', false);
model.physics('solid').feature('tm1').set('isotropicTest', true);
model.physics('solid').feature('tm1').set('forceFunction4', 'Pressure(para)');
model.physics('solid').feature('tm1').runCommand('setupTests');
model.physics('solid').feature.duplicate('tm2', 'tm1');
model.physics('solid').feature('tm2').label('Test Material [BBMx]');
model.physics('solid').feature('tm2').selection('domainSelection').set([2]);
model.physics('solid').feature('tm2').runCommand('setupTests');
model.physics('solid').feature.duplicate('tm3', 'tm1');
model.physics('solid').feature('tm3').label('Test Material [MSCC]');
model.physics('solid').feature('tm3').selection('domainSelection').set([3]);
model.physics('solid').feature('tm3').runCommand('setupTests');

model.result.dataset.remove('dset1');
model.result.dataset.remove('dset2');
model.result.dataset.remove('dset3');
model.result.dataset.remove('dset5');
model.result.dataset.remove('dset6');
model.result.dataset.remove('dset7');
model.result.dataset.remove('dset8');
model.result.dataset.remove('dset9');
model.result.dataset.remove('dset11');
model.result.dataset.remove('dset12');
model.result.dataset.remove('dset13');
model.result.dataset.remove('dset14');
model.result.dataset.remove('dset15');
model.result.dataset.remove('dset16');
model.result.dataset.remove('dset17');
model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').run;
model.result('pg1').label('Void Ratio (MCC)');
model.result('pg1').set('titletype', 'none');
model.result('pg1').set('xlabelactive', true);
model.result('pg1').set('xlabel', 'Pressure (kPa)');
model.result('pg1').set('ylabelactive', true);
model.result('pg1').set('ylabel', 'Void ratio (1)');
model.result('pg1').set('axislimits', true);
model.result('pg1').set('xmin', 95);
model.result('pg1').set('xmax', 1300);
model.result('pg1').set('ymin', 0.62);
model.result('pg1').set('ymax', 0.706);
model.result('pg1').set('xlog', true);
model.result('pg1').create('ptgr1', 'PointGraph');
model.result('pg1').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg1').feature('ptgr1').set('linewidth', 'preference');
model.result('pg1').feature('ptgr1').selection.set([1]);
model.result('pg1').feature('ptgr1').set('expr', 'solid1.epsm1.evoid');
model.result('pg1').feature('ptgr1').set('descr', 'Void ratio');
model.result('pg1').feature('ptgr1').set('xdataexpr', 'solid1.pmGp');
model.result('pg1').feature('ptgr1').set('xdatadescr', 'Pressure');
model.result('pg1').feature('ptgr1').set('xdataunit', 'kPa');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').create('ann1', 'Annotation');
model.result('pg1').feature('ann1').set('data', 'dset4');
model.result('pg1').feature('ann1').setIndex('looplevel', 1, 0);
model.result('pg1').feature('ann1').set('text', 'p=eval(at3(0,0,0,solid1.pm), kPa) kPa');
model.result('pg1').feature('ann1').set('level', 'global');
model.result('pg1').feature('ann1').set('posxexpr', 'at3(0,0,0,solid1.pm)/1000');
model.result('pg1').feature('ann1').set('posyexpr', 'at3(0,0,0,solid1.epsm1.evoid)');
model.result('pg1').feature('ann1').set('exprprecision', 3);
model.result('pg1').feature('ann1').set('anchorpoint', 'lowerleft');
model.result('pg1').feature.duplicate('ann2', 'ann1');
model.result('pg1').run;
model.result('pg1').feature('ann2').setIndex('looplevel', 21, 0);
model.result('pg1').feature.duplicate('ann3', 'ann2');
model.result('pg1').run;
model.result('pg1').feature('ann3').setIndex('looplevel', 41, 0);
model.result('pg1').feature.duplicate('ann4', 'ann3');
model.result('pg1').run;
model.result('pg1').feature('ann4').setIndex('looplevel', 61, 0);
model.result('pg1').feature('ann4').set('anchorpoint', 'lowerright');
model.result('pg1').feature.duplicate('ann5', 'ann4');
model.result('pg1').run;
model.result('pg1').feature('ann5').setIndex('looplevel', 101, 0);
model.result('pg1').feature('ann5').set('anchorpoint', 'lowerleft');
model.result('pg1').run;
model.result('pg1').feature.duplicate('ptgr2', 'ptgr1');
model.result('pg1').run;
model.result('pg1').feature('ptgr2').set('expr', 'solid1.epsm1.evoidref-solid1.epsm1.lambdaComp*log(solid1.epsm1.p/solid1.epsm1.pref)');
model.result('pg1').feature('ptgr2').set('linestyle', 'dashed');
model.result('pg1').run;
model.result('pg1').create('tlan1', 'TableAnnotation');
model.result('pg1').feature('tlan1').set('source', 'localtable');
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 160, 0, 0);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 0.689, 0, 1);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 'Normal compression line', 0, 2);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 145, 1, 0);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 0.67, 1, 1);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 'Swelling line', 1, 2);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 255, 2, 0);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 0.653, 2, 1);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 'Swelling line', 2, 2);
model.result('pg1').feature('tlan1').set('showpoint', false);
model.result('pg1').feature('tlan1').set('showframe', true);
model.result('pg1').run;
model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').run;
model.result('pg2').label('Void Ratio (MCC), Numerical Vs. Analytical');
model.result('pg2').set('titletype', 'none');
model.result('pg2').set('xlabelactive', true);
model.result('pg2').set('xlabel', 'Pressure (kPa)');
model.result('pg2').set('ylabelactive', true);
model.result('pg2').set('ylabel', 'Void ratio (1)');
model.result('pg2').set('xlog', true);
model.result('pg2').create('ptgr1', 'PointGraph');
model.result('pg2').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg2').feature('ptgr1').set('linewidth', 'preference');
model.result('pg2').feature('ptgr1').selection.set([1]);
model.result('pg2').feature('ptgr1').set('expr', 'solid1.epsm1.evoid');
model.result('pg2').feature('ptgr1').set('descr', 'Void ratio');
model.result('pg2').feature('ptgr1').set('xdataexpr', 'solid1.pmGp');
model.result('pg2').feature('ptgr1').set('xdatadescr', 'Pressure');
model.result('pg2').feature('ptgr1').set('xdataunit', 'kPa');
model.result('pg2').feature('ptgr1').set('legend', true);
model.result('pg2').feature('ptgr1').set('legendmethod', 'manual');
model.result('pg2').feature('ptgr1').setIndex('legends', 'Numerical', 0);
model.result('pg2').feature.duplicate('ptgr2', 'ptgr1');
model.result('pg2').run;
model.result('pg2').feature('ptgr2').set('expr', 'solid1.epsm1.evoidref-(solid1.epsm1.lambdaComp-solid1.epsm1.kappaSwelling)*log(solid1.epsm1.pc/solid1.epsm1.pref)-solid1.epsm1.kappaSwelling*log(solid1.epsm1.p/solid1.epsm1.pref)');
model.result('pg2').feature('ptgr2').set('linestyle', 'dashed');
model.result('pg2').feature('ptgr2').setIndex('legends', 'Analytical', 0);
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('Void Ratio');
model.result('pg3').set('titletype', 'none');
model.result('pg3').set('xlabelactive', true);
model.result('pg3').set('xlabel', 'Pressure (kPa)');
model.result('pg3').set('ylabelactive', true);
model.result('pg3').set('ylabel', 'Void ratio (1)');
model.result('pg3').set('xlog', true);
model.result('pg3').create('ptgr1', 'PointGraph');
model.result('pg3').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg3').feature('ptgr1').set('linewidth', 'preference');
model.result('pg3').feature('ptgr1').selection.set([1]);
model.result('pg3').feature('ptgr1').set('expr', 'solid1.epsm1.evoid');
model.result('pg3').feature('ptgr1').set('descr', 'Void ratio');
model.result('pg3').feature('ptgr1').set('xdataexpr', 'solid1.pmGp');
model.result('pg3').feature('ptgr1').set('xdatadescr', 'Pressure');
model.result('pg3').feature('ptgr1').set('xdataunit', 'kPa');
model.result('pg3').feature('ptgr1').set('linecolor', 'red');
model.result('pg3').feature('ptgr1').set('linemarker', 'asterisk');
model.result('pg3').feature('ptgr1').set('markerpos', 'interp');
model.result('pg3').feature('ptgr1').set('legend', true);
model.result('pg3').feature('ptgr1').set('legendmethod', 'manual');
model.result('pg3').feature('ptgr1').setIndex('legends', 'MCC', 0);
model.result('pg3').run;
model.result('pg3').create('ptgr2', 'PointGraph');
model.result('pg3').feature('ptgr2').set('markerpos', 'datapoints');
model.result('pg3').feature('ptgr2').set('linewidth', 'preference');
model.result('pg3').feature('ptgr2').set('data', 'dset10');
model.result('pg3').feature('ptgr2').selection.set([1]);
model.result('pg3').feature('ptgr2').set('expr', 'solid2.epsm2.evoid');
model.result('pg3').feature('ptgr2').set('descr', 'Void ratio');
model.result('pg3').feature('ptgr2').set('xdataexpr', 'solid2.pmGp');
model.result('pg3').feature('ptgr2').set('xdatadescr', 'Pressure');
model.result('pg3').feature('ptgr2').set('xdataunit', 'kPa');
model.result('pg3').feature('ptgr2').set('linecolor', 'green');
model.result('pg3').feature('ptgr2').set('linemarker', 'circle');
model.result('pg3').feature('ptgr2').set('markerpos', 'interp');
model.result('pg3').feature('ptgr2').set('markers', 10);
model.result('pg3').feature('ptgr2').set('legend', true);
model.result('pg3').feature('ptgr2').set('legendmethod', 'manual');
model.result('pg3').feature('ptgr2').setIndex('legends', 'BBMx', 0);
model.result('pg3').run;
model.result('pg3').create('ptgr3', 'PointGraph');
model.result('pg3').feature('ptgr3').set('markerpos', 'datapoints');
model.result('pg3').feature('ptgr3').set('linewidth', 'preference');
model.result('pg3').feature('ptgr3').set('data', 'dset18');
model.result('pg3').feature('ptgr3').selection.set([1]);
model.result('pg3').feature('ptgr3').set('expr', 'solid3.epsm3.evoid');
model.result('pg3').feature('ptgr3').set('descr', 'Void ratio');
model.result('pg3').feature('ptgr3').set('xdataexpr', 'solid3.pmGp');
model.result('pg3').feature('ptgr3').set('xdatadescr', 'Pressure');
model.result('pg3').feature('ptgr3').set('xdataunit', 'kPa');
model.result('pg3').feature('ptgr3').set('linecolor', 'blue');
model.result('pg3').feature('ptgr3').set('linemarker', 'diamond');
model.result('pg3').feature('ptgr3').set('markerpos', 'interp');
model.result('pg3').feature('ptgr3').set('markers', 12);
model.result('pg3').feature('ptgr3').set('legend', true);
model.result('pg3').feature('ptgr3').set('legendmethod', 'manual');
model.result('pg3').feature('ptgr3').setIndex('legends', 'MSCC', 0);
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Consolidation Pressure vs. Boundary Load');
model.result('pg4').set('titletype', 'none');
model.result('pg4').set('xlabelactive', true);
model.result('pg4').set('xlabel', 'Boundary load (kPa)');
model.result('pg4').set('ylabelactive', true);
model.result('pg4').set('ylabel', 'Consolidation pressure (kPa)');
model.result('pg4').create('ptgr1', 'PointGraph');
model.result('pg4').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg4').feature('ptgr1').set('linewidth', 'preference');
model.result('pg4').feature('ptgr1').selection.set([1]);
model.result('pg4').feature('ptgr1').set('expr', 'solid1.epsm1.pc');
model.result('pg4').feature('ptgr1').set('descr', 'Consolidation pressure');
model.result('pg4').feature('ptgr1').set('unit', 'kPa');
model.result('pg4').feature('ptgr1').set('xdata', 'expr');
model.result('pg4').feature('ptgr1').set('xdataexpr', 'Pressure(para)');
model.result('pg4').feature('ptgr1').set('xdataunit', 'kPa');
model.result('pg4').feature('ptgr1').set('linecolor', 'red');
model.result('pg4').feature('ptgr1').set('linemarker', 'asterisk');
model.result('pg4').feature('ptgr1').set('markerpos', 'interp');
model.result('pg4').feature('ptgr1').set('legend', true);
model.result('pg4').feature('ptgr1').set('legendmethod', 'manual');
model.result('pg4').feature('ptgr1').setIndex('legends', 'MCC', 0);
model.result('pg4').run;
model.result('pg4').create('ptgr2', 'PointGraph');
model.result('pg4').feature('ptgr2').set('markerpos', 'datapoints');
model.result('pg4').feature('ptgr2').set('linewidth', 'preference');
model.result('pg4').feature('ptgr2').set('data', 'dset10');
model.result('pg4').feature('ptgr2').selection.set([1]);
model.result('pg4').feature('ptgr2').set('expr', 'solid2.epsm2.pc');
model.result('pg4').feature('ptgr2').set('descr', 'Consolidation pressure at saturation');
model.result('pg4').feature('ptgr2').set('unit', 'kPa');
model.result('pg4').feature('ptgr2').set('xdata', 'expr');
model.result('pg4').feature('ptgr2').set('xdataexpr', 'Pressure(para)');
model.result('pg4').feature('ptgr2').set('xdataunit', 'kPa');
model.result('pg4').feature('ptgr2').set('linecolor', 'green');
model.result('pg4').feature('ptgr2').set('linemarker', 'circle');
model.result('pg4').feature('ptgr2').set('markerpos', 'interp');
model.result('pg4').feature('ptgr2').set('markers', 10);
model.result('pg4').feature('ptgr2').set('legend', true);
model.result('pg4').feature('ptgr2').set('legendmethod', 'manual');
model.result('pg4').feature('ptgr2').setIndex('legends', 'BBMx', 0);
model.result('pg4').run;
model.result('pg4').create('ptgr3', 'PointGraph');
model.result('pg4').feature('ptgr3').set('markerpos', 'datapoints');
model.result('pg4').feature('ptgr3').set('linewidth', 'preference');
model.result('pg4').feature('ptgr3').set('data', 'dset18');
model.result('pg4').feature('ptgr3').selection.set([1]);
model.result('pg4').feature('ptgr3').set('expr', 'solid3.epsm3.pc');
model.result('pg4').feature('ptgr3').set('descr', 'Consolidation pressure');
model.result('pg4').feature('ptgr3').set('unit', 'kPa');
model.result('pg4').feature('ptgr3').set('xdata', 'expr');
model.result('pg4').feature('ptgr3').set('xdataexpr', 'Pressure(para)');
model.result('pg4').feature('ptgr3').set('xdataunit', 'kPa');
model.result('pg4').feature('ptgr3').set('linecolor', 'blue');
model.result('pg4').feature('ptgr3').set('linemarker', 'diamond');
model.result('pg4').feature('ptgr3').set('markerpos', 'interp');
model.result('pg4').feature('ptgr3').set('markers', 12);
model.result('pg4').feature('ptgr3').set('legend', true);
model.result('pg4').feature('ptgr3').set('legendmethod', 'manual');
model.result('pg4').feature('ptgr3').setIndex('legends', 'MSCC', 0);
model.result('pg4').run;
model.result('pg4').set('legendpos', 'upperleft');
model.result('pg4').run;
model.result.evaluationGroup.create('eg1', 'EvaluationGroup');
model.result.evaluationGroup('eg1').label('Final Void Ratio');
model.result.evaluationGroup('eg1').setIndex('looplevelinput', 'last', 0);
model.result.evaluationGroup('eg1').create('pev1', 'EvalPoint');
model.result.evaluationGroup('eg1').feature('pev1').selection.set([1]);
model.result.evaluationGroup('eg1').feature('pev1').set('expr', {'solid1.epsm1.evoid'});
model.result.evaluationGroup('eg1').feature('pev1').set('descr', {'Void ratio'});
model.result.evaluationGroup('eg1').feature('pev1').set('unit', {'1'});
model.result.evaluationGroup('eg1').feature('pev1').setIndex('descr', 'Void ratio, MCC', 0);
model.result.evaluationGroup('eg1').feature.duplicate('pev2', 'pev1');
model.result.evaluationGroup('eg1').feature('pev2').set('data', 'dset10');
model.result.evaluationGroup('eg1').feature('pev2').setIndex('looplevelinput', 'last', 0);
model.result.evaluationGroup('eg1').feature('pev2').selection.set([1]);
model.result.evaluationGroup('eg1').feature('pev2').setIndex('expr', 'solid2.epsm2.evoid', 0);
model.result.evaluationGroup('eg1').feature('pev2').setIndex('descr', 'Void ratio, BBMx', 0);
model.result.evaluationGroup('eg1').feature.duplicate('pev3', 'pev2');
model.result.evaluationGroup('eg1').feature('pev3').set('data', 'dset18');
model.result.evaluationGroup('eg1').feature('pev3').selection.set([1]);
model.result.evaluationGroup('eg1').feature('pev3').setIndex('expr', 'solid3.epsm3.evoid', 0);
model.result.evaluationGroup('eg1').feature('pev3').setIndex('descr', 'Void ratio, MSCC', 0);
model.result.evaluationGroup('eg1').set('includeparameters', false);
model.result.evaluationGroup('eg1').run;
model.result('pg4').run;

model.title('Isotropic Compression with Modified Cam-Clay Material Model');

model.description('This model simulates the isotropic compression of a soil sample using the Modified Cam-Clay (MCC), the Extended Barcelona Basic (BBMx) and the Modified Structured Cam-Clay (MSCC) material models. The aim of the example is to reproduce analytical curves showing the Normal Compression Line (NCL) and the Swelling Line (or Unloading/Reloading Line URL).');

model.mesh.clearMeshes;

model.sol('solidtm1sol').clearSolutionData;
model.sol('solidtm1sol1').clearSolutionData;
model.sol('sol1').clearSolutionData;
model.sol('solidtm2sol').clearSolutionData;
model.sol('solidtm2sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('solidtm3sol').clearSolutionData;
model.sol('solidtm3sol1').clearSolutionData;
model.sol('sol3').clearSolutionData;

model.label('isotropic_compression.mph');

model.modelNode.label('Components');

out = model;
