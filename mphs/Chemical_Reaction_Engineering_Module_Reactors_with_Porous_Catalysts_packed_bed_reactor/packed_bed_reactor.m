function out = model
%
% packed_bed_reactor.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Chemical_Reaction_Engineering_Module/Reactors_with_Porous_Catalysts');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 1);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('tds', 'DilutedSpecies', 'geom1', {'C3H6' 'CO' 'CO2' 'H2O' 'O2'});
model.physics.create('c', 'CoefficientFormPDE', 'geom1', {'P'});
model.physics('c').prop('EquationForm').set('form', 'Automatic');
model.physics('c').field('dimensionless').field('P');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/tds', true);
model.study('std1').feature('stat').setSolveFor('/physics/c', true);

model.geom('geom1').create('i1', 'Interval');
model.geom('geom1').feature('i1').setIndex('coord', 0.3, 1);
model.geom('geom1').run('i1');

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('P_feed', '2[atm]', 'Feed pressure');
model.param.set('Tr', '508[K]', 'Reactor temperature');
model.param.set('D_CO', '0.0487[cm^2/s]', 'Diffusion coefficient for CO');
model.param.set('D_O2', '0.0469[cm^2/s]', 'Diffusion coefficient for O2');
model.param.set('D_C3H6', '0.0487[cm^2/s]', 'Diffusion coefficient for C3H6');
model.param.set('D_CO2', '0.0487[cm^2/s]', 'Diffusion coefficient for CO2');
model.param.set('D_H2O', '0.0487[cm^2/s]', 'Diffusion coefficient for H2O');
model.param.set('E1', '1.09e5[J/mol]', 'Activation energy for R1');
model.param.set('E2', '1.26e5[J/mol]', 'Activation energy for R2');
model.param.set('A1', '7.07e13[m^3/mol/s]', 'Preexponential factor for reaction 1');
model.param.set('A2', '1.47e15[m^3/mol/s]', 'Preexponential factor for reaction 2');
model.param.set('Aco', '8.1[m^3/mol]', 'Constant for adsorption term');
model.param.set('Ac3h6', '257.9[m^3/mol]', 'Constant for adsorption term');
model.param.set('Eco', '-3400[J/mol]', 'Activation energy for adsorption term');
model.param.set('Ec3h6', '1588[J/mol]', 'Activation energy for adsorption term');
model.param.set('u_feed', '75[cm/s]', 'Linear inflow velocity');
model.param.set('por_b', '1-rho_b/rho_p', 'Porosity of the bed (void/total)');
model.param.set('por_pel', '0.90', 'Porosity of catalyst pellet');
model.param.set('rho_b', '0.51[g/cm^3]', 'Density of bed');
model.param.set('rho_p', '0.68[g/cm^3]', 'Density of pellet');
model.param.set('Rr', '5[cm]', 'Reactor radius');
model.param.set('Ra', 'pi*Rr^2', 'Reactor area');
model.param.set('mu', '0.028e-2[g/cm/s]', 'Fluid viscosity');
model.param.set('rho_feed', '1.292[kg/m^3]', 'Inlet gas density');
model.param.set('Ctot_feed', 'P_feed/R_const/Tr', 'Total feed concentration');
model.param.set('x_CO_feed', '0.005', 'Molar fraction of CO in feed');
model.param.set('x_O2_feed', '0.0075', 'Molar fraction of O2 in feed');
model.param.set('x_C3H6_feed', '0.000125', 'Molar fraction of C3H6 in feed');
model.param.set('Cinert_feed', '(1-x_CO_feed-x_O2_feed-x_C3H6_feed)*Ctot_feed', 'Concentration of inert (N2) in feed');
model.param.set('Ap', '3/rp', 'Surface area of particles per unit volume');
model.param.set('rp', '0.25[cm]', 'Particle radius');

model.variable.create('var1');

% To import content from file, use:
% model.variable('var1').loadFile('FILENAME');
model.variable('var1').set('Ctot', '(Cinert_feed+comp1.CO+comp1.O2+comp1.CO2+comp1.C3H6+comp1.H2O)', 'Total concentration');
model.variable('var1').set('KCO', 'Aco*exp(-Eco/R_const/Tr)', 'Adsorption constant for CO');
model.variable('var1').set('KC3H6', 'Ac3h6*exp(-Ec3h6/R_const/Tr)', 'Adsorption constant for C3H6');

model.geom('geom1').run;

model.physics('tds').feature('cdm1').set('u', {'u' '0' '0'});
model.physics('tds').feature('cdm1').set('D_C3H6', {'D_C3H6' '0' '0' '0' 'D_C3H6' '0' '0' '0' 'D_C3H6'});
model.physics('tds').feature('cdm1').set('D_CO', {'D_CO' '0' '0' '0' 'D_CO' '0' '0' '0' 'D_CO'});
model.physics('tds').feature('cdm1').set('D_CO2', {'D_CO2' '0' '0' '0' 'D_CO2' '0' '0' '0' 'D_CO2'});
model.physics('tds').feature('cdm1').set('D_H2O', {'D_H2O' '0' '0' '0' 'D_H2O' '0' '0' '0' 'D_H2O'});
model.physics('tds').feature('cdm1').set('D_O2', {'D_O2' '0' '0' '0' 'D_O2' '0' '0' '0' 'D_O2'});
model.physics('tds').feature('init1').setIndex('initc', '1e-6', 0);
model.physics('tds').feature('init1').setIndex('initc', '1e-6', 1);
model.physics('tds').feature('init1').setIndex('initc', '1e-6', 2);
model.physics('tds').feature('init1').setIndex('initc', '1e-6', 3);
model.physics('tds').feature('init1').setIndex('initc', '1e-6', 4);
model.physics('tds').create('reac1', 'Reactions', 1);
model.physics('tds').feature('reac1').selection.set([1]);
model.physics('tds').feature('reac1').setIndex('R_C3H6', '-Ap*C3H6flux*(1-por_b)', 0);
model.physics('tds').feature('reac1').setIndex('R_CO', '-Ap*COflux*(1-por_b)', 0);
model.physics('tds').feature('reac1').setIndex('R_CO2', '-Ap*CO2flux*(1-por_b)', 0);
model.physics('tds').feature('reac1').setIndex('R_H2O', '-Ap*H2Oflux*(1-por_b)', 0);
model.physics('tds').feature('reac1').setIndex('R_O2', '-Ap*O2flux*(1-por_b)', 0);
model.physics('tds').create('in1', 'Inflow', 0);
model.physics('tds').feature('in1').selection.set([1]);
model.physics('tds').feature('in1').setIndex('c0', 'x_C3H6_feed*Ctot_feed', 0);
model.physics('tds').feature('in1').setIndex('c0', 'x_CO_feed*Ctot_feed', 1);
model.physics('tds').feature('in1').setIndex('c0', 'x_O2_feed*Ctot_feed', 4);
model.physics('tds').feature('in1').set('BoundaryConditionType', 'FluxDanckwerts');
model.physics('tds').create('out1', 'Outflow', 0);
model.physics('tds').feature('out1').selection.set([2]);
model.physics('c').label('Coefficient Form PDE: Ergun Equation');
model.physics('c').prop('Units').set('DependentVariableQuantity', 'pressure');
model.physics('c').prop('Units').setIndex('CustomSourceTermUnit', 'N/m^3', 0, 0);
model.physics('c').feature('cfeq1').setIndex('c', 0, 0);
model.physics('c').feature('cfeq1').setIndex('f', 'Px+(150*mu*u/(2*Rr)^2*(1-por_b)^2/por_b^3+1.75*rho_feed*u^2/(2*Rr)*(1-por_b)/por_b^3)', 0);
model.physics('c').feature('cfeq1').setIndex('da', 0, 0);
model.physics('c').feature('init1').set('P', 'P_feed');
model.physics('c').create('dir1', 'DirichletBoundary', 0);
model.physics('c').feature('dir1').selection.set([1]);
model.physics('c').feature('dir1').setIndex('r', 'P_feed', 0);

model.modelNode.create('comp2', true);

model.geom.create('geom2', 2);
model.geom('geom2').model('comp2');

model.mesh.create('mesh2', 'geom2');

model.physics.create('chem', 'Chemistry', 'geom2');
model.physics('chem').model('comp2');

model.study('std1').feature('stat').setSolveFor('/physics/chem', true);

model.geom('geom2').run;

model.physics.create('tds2', 'DilutedSpecies', 'geom2', {'C3H6p' 'COp' 'CO2p' 'H2Op' 'O2p'});

model.study('std1').feature('stat').setSolveFor('/physics/tds2', true);

model.geom('geom2').create('sq1', 'Square');
model.geom('geom2').run('sq1');
model.geom('geom2').run;

model.physics('chem').create('rch1', 'ReactionChem', 2);
model.physics('chem').feature('rch1').set('formula', 'CO+1/2O2=>CO2');
model.physics('chem').feature('rch1').set('r', 'chem.kf_1*chem.c_CO*chem.c_O2/(1+KCO*chem.c_CO+KC3H6*chem.c_C3H6)^2');
model.physics('chem').feature('rch1').set('bulkFwdOrder', 2);
model.physics('chem').feature('rch1').set('useArrhenius', true);
model.physics('chem').feature('rch1').set('Af', 'A1');
model.physics('chem').feature('rch1').set('Ef', 'E1');
model.physics('chem').create('rch2', 'ReactionChem', 2);
model.physics('chem').feature('rch2').set('formula', 'C3H6+9/2O2=>3H2O+3CO2');
model.physics('chem').feature('rch2').set('bulkFwdOrder', 2);
model.physics('chem').feature('rch2').set('r', 'chem.kf_2*chem.c_C3H6*chem.c_O2/(1+KCO*chem.c_CO+KC3H6*chem.c_C3H6)^2');
model.physics('chem').feature('rch2').set('useArrhenius', true);
model.physics('chem').feature('rch2').set('Af', 'A2');
model.physics('chem').feature('rch2').set('Ef', 'E2');
model.physics('chem').create('spec1', 'SpeciesChem', 2);
model.physics('chem').feature('spec1').set('specName', 'N2');
model.physics('chem').feature('N2').set('sType', 'solvent');
model.physics('chem').prop('TPFeatureInput').set('T_src', 'userdef');
model.physics('chem').prop('TPFeatureInput').set('T', 'Tr');
model.physics('chem').prop('TPFeatureInput').set('p_src', 'userdef');
model.physics('chem').prop('TPFeatureInput').set('p', 'P_feed');
model.physics('chem').prop('ChemistryModelInputParameter').set('MassTransfer', 'tds2');
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'C3H6p', 0, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'COp', 1, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'CO2p', 2, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'H2Op', 3, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'UserDefined', 4, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationValue', 'Cinert_feed', 4, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'O2p', 5, 0);
model.physics('tds2').prop('TransportMechanism').set('Convection', false);
model.physics('tds2').feature('cdm1').set('D_C3H6p', {'0' '0' '0' '0' '(D_C3H6/rp^2)*y^2' '0' '0' '0' '0'});
model.physics('tds2').feature('cdm1').set('D_COp', {'0' '0' '0' '0' '(D_CO/rp^2)*y^2' '0' '0' '0' '0'});
model.physics('tds2').feature('cdm1').set('D_CO2p', {'0' '0' '0' '0' '(D_CO2/rp^2)*y^2' '0' '0' '0' '0'});
model.physics('tds2').feature('cdm1').set('D_H2Op', {'0' '0' '0' '0' '(D_H2O/rp^2)*y^2' '0' '0' '0' '0'});
model.physics('tds2').feature('cdm1').set('D_O2p', {'0' '0' '0' '0' '(D_O2/rp^2)*y^2' '0' '0' '0' '0'});
model.physics('tds2').feature('init1').setIndex('initc', '1e-6', 0);
model.physics('tds2').feature('init1').setIndex('initc', '1e-6', 1);
model.physics('tds2').feature('init1').setIndex('initc', '1e-6', 2);
model.physics('tds2').feature('init1').setIndex('initc', '1e-6', 3);
model.physics('tds2').feature('init1').setIndex('initc', '1e-6', 4);
model.physics('tds2').create('reac1', 'Reactions', 2);
model.physics('tds2').feature('reac1').selection.all;
model.physics('tds2').feature('reac1').setIndex('R_C3H6p', 'y^2/1[m^2]*chem.R_C3H6', 0);
model.physics('tds2').feature('reac1').setIndex('R_COp', 'y^2/1[m^2]*chem.R_CO', 0);
model.physics('tds2').feature('reac1').setIndex('R_CO2p', 'y^2/1[m^2]*chem.R_CO2', 0);
model.physics('tds2').feature('reac1').setIndex('R_H2Op', 'y^2/1[m^2]*chem.R_H2O', 0);
model.physics('tds2').feature('reac1').setIndex('R_O2p', 'y^2/1[m^2]*chem.R_O2', 0);
model.physics('tds2').create('conc1', 'Concentration', 1);
model.physics('tds2').feature('conc1').selection.set([3]);
model.physics('tds2').feature('conc1').setIndex('species', true, 0);
model.physics('tds2').feature('conc1').setIndex('c0', 'C3H6bulk', 0);
model.physics('tds2').feature('conc1').setIndex('species', true, 1);
model.physics('tds2').feature('conc1').setIndex('c0', 'CObulk', 1);
model.physics('tds2').feature('conc1').setIndex('species', true, 2);
model.physics('tds2').feature('conc1').setIndex('c0', 'CO2bulk', 2);
model.physics('tds2').feature('conc1').setIndex('species', true, 3);
model.physics('tds2').feature('conc1').setIndex('c0', 'H2Obulk', 3);
model.physics('tds2').feature('conc1').setIndex('species', true, 4);
model.physics('tds2').feature('conc1').setIndex('c0', 'O2bulk', 4);
model.physics('tds2').feature('conc1').set('constraintType', 'unidirectionalConstraint');

model.cpl.create('genext1', 'GeneralExtrusion', 'geom1');
model.cpl('genext1').selection.all;
model.cpl('genext1').set('dstmap', {'x*0.30'});
model.cpl('genext1').set('usesrcmap', true);
model.cpl.create('genext2', 'GeneralExtrusion', 'geom2');
model.cpl('genext2').selection.geom('geom2', 1);
model.cpl('genext2').selection.set([3]);
model.cpl('genext2').set('dstmap', {'x/0.30' ''});
model.cpl('genext2').set('usesrcmap', true);
model.cpl('genext2').set('srcmap', {'x' ''});

model.variable.create('var2');
model.variable('var2').model('comp1');

% To import content from file, use:
% model.variable('var2').loadFile('FILENAME');
model.variable('var2').set('C3H6flux', 'comp2.genext2(D_C3H6*comp2.C3H6py*1[m]/rp)', 'Boundary flux C3H6');
model.variable('var2').set('COflux', 'comp2.genext2(D_CO*comp2.COpy*1[m]/rp)', 'Boundary flux CO');
model.variable('var2').set('CO2flux', 'comp2.genext2(D_CO2*comp2.CO2py*1[m]/rp)', 'Boundary flux CO2');
model.variable('var2').set('H2Oflux', 'comp2.genext2(D_H2O*comp2.H2Opy*1[m]/rp)', 'Boundary flux H2O');
model.variable('var2').set('O2flux', 'comp2.genext2(D_O2*comp2.O2py*1[m]/rp)', 'Boundary flux O2');
model.variable('var2').set('u', 'u_feed*(P_feed/comp1.P)', 'Linear velocity');
model.variable.create('var3');
model.variable('var3').model('comp2');
model.variable('var3').selection.geom('geom2', 1);
model.variable('var3').selection.set([3]);

% To import content from file, use:
% model.variable('var3').loadFile('FILENAME');
model.variable('var3').set('C3H6bulk', 'comp1.genext1(comp1.C3H6)*por_pel', 'Bulk concentration C3H6');
model.variable('var3').set('CObulk', 'comp1.genext1(comp1.CO)*por_pel', 'Bulk concentration CO');
model.variable('var3').set('CO2bulk', 'comp1.genext1(comp1.CO2)*por_pel', 'Bulk concentration CO2');
model.variable('var3').set('H2Obulk', 'comp1.genext1(comp1.H2O)*por_pel', 'Bulk concentration H2O');
model.variable('var3').set('O2bulk', 'comp1.genext1(comp1.O2)*por_pel', 'Bulk concentration O2');

model.mesh('mesh1').create('edg1', 'Edge');
model.mesh('mesh1').feature('size').set('custom', true);
model.mesh('mesh1').feature('size').set('hmax', 0.0025);
model.mesh('mesh1').run;
model.mesh('mesh2').create('map1', 'Map');
model.mesh('mesh2').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh2').feature('map1').feature('dis1').selection.set([1 4]);
model.mesh('mesh2').feature('map1').feature('dis1').set('type', 'predefined');
model.mesh('mesh2').feature('map1').feature('dis1').set('elemcount', 30);
model.mesh('mesh2').feature('map1').feature('dis1').set('elemratio', 0.2);
model.mesh('mesh2').feature('map1').create('dis2', 'Distribution');
model.mesh('mesh2').feature('map1').feature('dis2').selection.set([3]);
model.mesh('mesh2').feature('map1').feature('dis2').set('numelem', 120);
model.mesh('mesh2').run;

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(1);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh2').stat.selection.geom(2);
model.mesh('mesh2').stat.selection.set([1]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct (Merged)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, concentrations (tds2)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').set('titletype', 'manual');
model.result('pg1').set('title', 'Concentrations, All Species');
model.result('pg1').label('Concentrations, All Species (tds)');
model.result('pg1').create('lngr1', 'LineGraph');
model.result('pg1').feature('lngr1').set('xdata', 'expr');
model.result('pg1').feature('lngr1').set('xdataexpr', 'x');
model.result('pg1').feature('lngr1').selection.geom('geom1', 1);
model.result('pg1').feature('lngr1').selection.set([1]);
model.result('pg1').feature('lngr1').set('expr', {'C3H6'});
model.result('pg1').feature('lngr1').label('Species C3H6');
model.result('pg1').feature('lngr1').set('legend', true);
model.result('pg1').feature('lngr1').set('autosolution', false);
model.result('pg1').feature('lngr1').set('autoexpr', false);
model.result('pg1').feature('lngr1').set('autodescr', false);
model.result('pg1').feature('lngr1').set('legendprefix', 'C3H6 ');
model.result('pg1').create('lngr2', 'LineGraph');
model.result('pg1').feature('lngr2').set('xdata', 'expr');
model.result('pg1').feature('lngr2').set('xdataexpr', 'x');
model.result('pg1').feature('lngr2').selection.geom('geom1', 1);
model.result('pg1').feature('lngr2').selection.set([1]);
model.result('pg1').feature('lngr2').set('expr', {'CO'});
model.result('pg1').feature('lngr2').label('Species CO');
model.result('pg1').feature('lngr2').set('legend', true);
model.result('pg1').feature('lngr2').set('autosolution', false);
model.result('pg1').feature('lngr2').set('autoexpr', false);
model.result('pg1').feature('lngr2').set('autodescr', false);
model.result('pg1').feature('lngr2').set('legendprefix', 'CO ');
model.result('pg1').create('lngr3', 'LineGraph');
model.result('pg1').feature('lngr3').set('xdata', 'expr');
model.result('pg1').feature('lngr3').set('xdataexpr', 'x');
model.result('pg1').feature('lngr3').selection.geom('geom1', 1);
model.result('pg1').feature('lngr3').selection.set([1]);
model.result('pg1').feature('lngr3').set('expr', {'CO2'});
model.result('pg1').feature('lngr3').label('Species CO2');
model.result('pg1').feature('lngr3').set('legend', true);
model.result('pg1').feature('lngr3').set('autosolution', false);
model.result('pg1').feature('lngr3').set('autoexpr', false);
model.result('pg1').feature('lngr3').set('autodescr', false);
model.result('pg1').feature('lngr3').set('legendprefix', 'CO2 ');
model.result('pg1').create('lngr4', 'LineGraph');
model.result('pg1').feature('lngr4').set('xdata', 'expr');
model.result('pg1').feature('lngr4').set('xdataexpr', 'x');
model.result('pg1').feature('lngr4').selection.geom('geom1', 1);
model.result('pg1').feature('lngr4').selection.set([1]);
model.result('pg1').feature('lngr4').set('expr', {'H2O'});
model.result('pg1').feature('lngr4').label('Species H2O');
model.result('pg1').feature('lngr4').set('legend', true);
model.result('pg1').feature('lngr4').set('autosolution', false);
model.result('pg1').feature('lngr4').set('autoexpr', false);
model.result('pg1').feature('lngr4').set('autodescr', false);
model.result('pg1').feature('lngr4').set('legendprefix', 'H2O ');
model.result('pg1').create('lngr5', 'LineGraph');
model.result('pg1').feature('lngr5').set('xdata', 'expr');
model.result('pg1').feature('lngr5').set('xdataexpr', 'x');
model.result('pg1').feature('lngr5').selection.geom('geom1', 1);
model.result('pg1').feature('lngr5').selection.set([1]);
model.result('pg1').feature('lngr5').set('expr', {'O2'});
model.result('pg1').feature('lngr5').label('Species O2');
model.result('pg1').feature('lngr5').set('legend', true);
model.result('pg1').feature('lngr5').set('autosolution', false);
model.result('pg1').feature('lngr5').set('autoexpr', false);
model.result('pg1').feature('lngr5').set('autodescr', false);
model.result('pg1').feature('lngr5').set('legendprefix', 'O2 ');
model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').label('Concentration, C3H6 (tds)');
model.result('pg2').set('titletype', 'custom');
model.result('pg2').set('prefixintitle', 'Species C3H6:');
model.result('pg2').set('expressionintitle', false);
model.result('pg2').set('typeintitle', false);
model.result('pg2').create('lngr1', 'LineGraph');
model.result('pg2').feature('lngr1').set('xdata', 'expr');
model.result('pg2').feature('lngr1').set('xdataexpr', 'x');
model.result('pg2').feature('lngr1').selection.geom('geom1', 1);
model.result('pg2').feature('lngr1').selection.set([1]);
model.result('pg2').feature('lngr1').set('expr', {'C3H6'});
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').set('data', 'dset1');
model.result('pg3').label('Concentration, CO (tds)');
model.result('pg3').set('titletype', 'custom');
model.result('pg3').set('prefixintitle', 'Species CO:');
model.result('pg3').set('expressionintitle', false);
model.result('pg3').set('typeintitle', false);
model.result('pg3').create('lngr1', 'LineGraph');
model.result('pg3').feature('lngr1').set('xdata', 'expr');
model.result('pg3').feature('lngr1').set('xdataexpr', 'x');
model.result('pg3').feature('lngr1').selection.geom('geom1', 1);
model.result('pg3').feature('lngr1').selection.set([1]);
model.result('pg3').feature('lngr1').set('expr', {'CO'});
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').set('data', 'dset1');
model.result('pg4').label('Concentration, CO2 (tds)');
model.result('pg4').set('titletype', 'custom');
model.result('pg4').set('prefixintitle', 'Species CO2:');
model.result('pg4').set('expressionintitle', false);
model.result('pg4').set('typeintitle', false);
model.result('pg4').create('lngr1', 'LineGraph');
model.result('pg4').feature('lngr1').set('xdata', 'expr');
model.result('pg4').feature('lngr1').set('xdataexpr', 'x');
model.result('pg4').feature('lngr1').selection.geom('geom1', 1);
model.result('pg4').feature('lngr1').selection.set([1]);
model.result('pg4').feature('lngr1').set('expr', {'CO2'});
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').set('data', 'dset1');
model.result('pg5').label('Concentration, H2O (tds)');
model.result('pg5').set('titletype', 'custom');
model.result('pg5').set('prefixintitle', 'Species H2O:');
model.result('pg5').set('expressionintitle', false);
model.result('pg5').set('typeintitle', false);
model.result('pg5').create('lngr1', 'LineGraph');
model.result('pg5').feature('lngr1').set('xdata', 'expr');
model.result('pg5').feature('lngr1').set('xdataexpr', 'x');
model.result('pg5').feature('lngr1').selection.geom('geom1', 1);
model.result('pg5').feature('lngr1').selection.set([1]);
model.result('pg5').feature('lngr1').set('expr', {'H2O'});
model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').set('data', 'dset1');
model.result('pg6').label('Concentration, O2 (tds)');
model.result('pg6').set('titletype', 'custom');
model.result('pg6').set('prefixintitle', 'Species O2:');
model.result('pg6').set('expressionintitle', false);
model.result('pg6').set('typeintitle', false);
model.result('pg6').create('lngr1', 'LineGraph');
model.result('pg6').feature('lngr1').set('xdata', 'expr');
model.result('pg6').feature('lngr1').set('xdataexpr', 'x');
model.result('pg6').feature('lngr1').selection.geom('geom1', 1);
model.result('pg6').feature('lngr1').selection.set([1]);
model.result('pg6').feature('lngr1').set('expr', {'O2'});
model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').set('data', 'dset1');
model.result('pg7').create('lngr1', 'LineGraph');
model.result('pg7').feature('lngr1').set('xdata', 'expr');
model.result('pg7').feature('lngr1').set('xdataexpr', 'x');
model.result('pg7').feature('lngr1').selection.geom('geom1', 1);
model.result('pg7').feature('lngr1').selection.set([1]);
model.result('pg7').feature('lngr1').set('expr', 'P');
model.result('pg7').label('Coefficient Form PDE: Ergun Equation');
model.result.create('pg8', 'PlotGroup2D');
model.result('pg8').set('data', 'dset2');
model.result('pg8').label('Concentration, C3H6p (tds2)');
model.result('pg8').set('titletype', 'custom');
model.result('pg8').set('prefixintitle', 'Species C3H6p:');
model.result('pg8').set('expressionintitle', false);
model.result('pg8').set('typeintitle', true);
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').feature('surf1').set('expr', {'C3H6p'});
model.result('pg8').create('str1', 'Streamline');
model.result('pg8').feature('str1').set('expr', {'tds2.tflux_C3H6px' 'tds2.tflux_C3H6py'});
model.result('pg8').feature('str1').set('posmethod', 'uniform');
model.result('pg8').feature('str1').set('recover', 'pprint');
model.result('pg8').feature('str1').set('pointtype', 'arrow');
model.result('pg8').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg8').feature('str1').set('color', 'gray');
model.result.create('pg9', 'PlotGroup2D');
model.result('pg9').set('data', 'dset2');
model.result('pg9').label('Concentration, COp (tds2)');
model.result('pg9').set('titletype', 'custom');
model.result('pg9').set('prefixintitle', 'Species COp:');
model.result('pg9').set('expressionintitle', false);
model.result('pg9').set('typeintitle', true);
model.result('pg9').create('surf1', 'Surface');
model.result('pg9').feature('surf1').set('expr', {'COp'});
model.result('pg9').create('str1', 'Streamline');
model.result('pg9').feature('str1').set('expr', {'tds2.tflux_COpx' 'tds2.tflux_COpy'});
model.result('pg9').feature('str1').set('posmethod', 'uniform');
model.result('pg9').feature('str1').set('recover', 'pprint');
model.result('pg9').feature('str1').set('pointtype', 'arrow');
model.result('pg9').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg9').feature('str1').set('color', 'gray');
model.result.create('pg10', 'PlotGroup2D');
model.result('pg10').set('data', 'dset2');
model.result('pg10').label('Concentration, CO2p (tds2)');
model.result('pg10').set('titletype', 'custom');
model.result('pg10').set('prefixintitle', 'Species CO2p:');
model.result('pg10').set('expressionintitle', false);
model.result('pg10').set('typeintitle', true);
model.result('pg10').create('surf1', 'Surface');
model.result('pg10').feature('surf1').set('expr', {'CO2p'});
model.result('pg10').create('str1', 'Streamline');
model.result('pg10').feature('str1').set('expr', {'tds2.tflux_CO2px' 'tds2.tflux_CO2py'});
model.result('pg10').feature('str1').set('posmethod', 'uniform');
model.result('pg10').feature('str1').set('recover', 'pprint');
model.result('pg10').feature('str1').set('pointtype', 'arrow');
model.result('pg10').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg10').feature('str1').set('color', 'gray');
model.result.create('pg11', 'PlotGroup2D');
model.result('pg11').set('data', 'dset2');
model.result('pg11').label('Concentration, H2Op (tds2)');
model.result('pg11').set('titletype', 'custom');
model.result('pg11').set('prefixintitle', 'Species H2Op:');
model.result('pg11').set('expressionintitle', false);
model.result('pg11').set('typeintitle', true);
model.result('pg11').create('surf1', 'Surface');
model.result('pg11').feature('surf1').set('expr', {'H2Op'});
model.result('pg11').create('str1', 'Streamline');
model.result('pg11').feature('str1').set('expr', {'tds2.tflux_H2Opx' 'tds2.tflux_H2Opy'});
model.result('pg11').feature('str1').set('posmethod', 'uniform');
model.result('pg11').feature('str1').set('recover', 'pprint');
model.result('pg11').feature('str1').set('pointtype', 'arrow');
model.result('pg11').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg11').feature('str1').set('color', 'gray');
model.result.create('pg12', 'PlotGroup2D');
model.result('pg12').set('data', 'dset2');
model.result('pg12').label('Concentration, O2p (tds2)');
model.result('pg12').set('titletype', 'custom');
model.result('pg12').set('prefixintitle', 'Species O2p:');
model.result('pg12').set('expressionintitle', false);
model.result('pg12').set('typeintitle', true);
model.result('pg12').create('surf1', 'Surface');
model.result('pg12').feature('surf1').set('expr', {'O2p'});
model.result('pg12').create('str1', 'Streamline');
model.result('pg12').feature('str1').set('expr', {'tds2.tflux_O2px' 'tds2.tflux_O2py'});
model.result('pg12').feature('str1').set('posmethod', 'uniform');
model.result('pg12').feature('str1').set('recover', 'pprint');
model.result('pg12').feature('str1').set('pointtype', 'arrow');
model.result('pg12').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg12').feature('str1').set('color', 'gray');
model.result('pg1').run;
model.result('pg1').set('title', 'Concentration along reactor length');
model.result('pg1').set('xlabelactive', true);
model.result('pg1').set('xlabel', 'Reactor length (m)');
model.result('pg1').run;
model.result('pg9').run;
model.result('pg9').feature('surf1').create('hght1', 'Height');
model.result('pg9').run;

model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 'P_feed', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'Pa', 0);
model.study('std1').feature('stat').setIndex('pname', 'P_feed', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'Pa', 0);
model.study('std1').feature('stat').setIndex('pname', 'rp', 0);
model.study('std1').feature('stat').setIndex('plistarr', '0.0025 0.0018', 0);

model.mesh('mesh1').stat.selection.geom(1);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh2').stat.selection.geom(2);
model.mesh('mesh2').stat.selection.set([1]);

model.sol('sol1').study('std1');
model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s1').set('control', 'stat');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct (Merged)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, concentrations (tds2)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result('pg1').run;
model.result.dataset.create('cln1', 'CutLine2D');
model.result.dataset('cln1').setIndex('genpoints', '5/30', 0, 0);
model.result.dataset('cln1').setIndex('genpoints', '5/30', 1, 0);
model.result.dataset('cln1').setIndex('genpoints', 1, 1, 1);
model.result.dataset('cln1').set('genparaactive', true);
model.result.dataset('cln1').set('genparadist', '-10/30 -20/30');
model.result.create('pg13', 'PlotGroup1D');
model.result('pg13').run;
model.result('pg13').label('Pellet size comparison');
model.result('pg13').create('lngr1', 'LineGraph');
model.result('pg13').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg13').feature('lngr1').set('linewidth', 'preference');
model.result('pg13').feature('lngr1').label('For rp=2.5 mm');
model.result('pg13').feature('lngr1').set('data', 'cln1');
model.result('pg13').feature('lngr1').setIndex('looplevelinput', 'manual', 0);
model.result('pg13').feature('lngr1').setIndex('looplevel', [1], 0);
model.result('pg13').feature('lngr1').set('expr', 'C3H6p');
model.result('pg13').feature('lngr1').set('linewidth', 2);
model.result('pg13').feature('lngr1').set('legend', true);
model.result('pg13').feature('lngr1').set('legendmethod', 'evaluated');
model.result('pg13').feature('lngr1').set('legendpattern', 'eval(x*0.3,cm) cm, rp=eval(rp,mm) mm');
model.result('pg13').feature.duplicate('lngr2', 'lngr1');
model.result('pg13').run;
model.result('pg13').feature('lngr2').label('For rp=1.8 mm');
model.result('pg13').feature('lngr2').setIndex('looplevel', [2], 0);
model.result('pg13').feature('lngr2').set('linemarker', 'triangle');
model.result('pg13').feature('lngr2').set('markerpos', 'interp');
model.result('pg13').run;
model.result('pg13').set('legendpos', 'upperleft');
model.result('pg13').set('titletype', 'manual');
model.result('pg13').set('title', 'Concentration, C3H6p (mol/m<sup>3</sup>)');
model.result('pg13').run;
model.result('pg7').run;
model.result('pg7').label('Pressure drop');
model.result('pg7').set('titletype', 'none');
model.result('pg7').set('ylabelactive', true);
model.result('pg7').set('ylabel', 'Pressure (Pa)');
model.result('pg7').run;
model.result('pg1').run;
model.result('pg1').setIndex('looplevelinput', 'first', 0);
model.result('pg1').run;

model.title('Packed Bed Reactor');

model.description('A way to study coupled macroscale and microscale mass balances in 1D models of reactors packed with catalyst is to use several geometries. The model requires two geometries, one for each system scale, to compute the reacting species concentration profiles along the packed bed reactor as well as within catalyst pellets.');

model.label('packed_bed_reactor.mph');

model.modelNode.label('Components');

out = model;
