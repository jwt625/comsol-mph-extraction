function out = model
%
% stacking_sequence_optimization.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Composite_Materials_Module/Tutorials');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('lshell', 'LayeredShell', 'geom1');
model.physics('lshell').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/lshell', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('a', '0.5[m]', 'Side length');
model.param.set('d_layer', '1[mm]', 'Lamina thickness');
model.param.set('th1', '0', 'Fiber orientation, layer 1');
model.param.set('th2', '0', 'Fiber orientation, layer 2');
model.param.set('th3', '0', 'Fiber orientation, layer 3');
model.param.set('F', '2[kN]', 'Applied load');
model.param.set('E1', '134[GPa]', 'Lamina Young''s modulus, 11 direction');
model.param.set('E2', '9.2[GPa]', 'Lamina Young''s modulus, 22 direction');
model.param.set('G12', '4.8[GPa]', 'Lamina shear modulus, 12 direction');
model.param.set('nu12', '0.28', 'Lamina Poisson''s ratio, 12 direction');
model.param.set('sigmaT1', '2000[MPa]', 'Lamina tensile strength, 11 direction');
model.param.set('sigmaT2', '80[MPa]', 'Lamina tensile strength, 22 direction');
model.param.set('sigmaC1', '1600[MPa]', 'Lamina compressive strength, 11 direction');
model.param.set('sigmaC2', '200[MPa]', 'Lamina compressive strength, 22 direction');
model.param.set('sigmaS', '150[MPa]', 'Lamina shear strength');

model.geom('geom1').run;

model.physics('lshell').feature('lemm1').set('TransverseIsotropic', true);
model.physics('lshell').feature('lemm1').create('sf1', 'Safety', 2);
model.physics('lshell').feature('lemm1').feature('sf1').set('FailureCriterion', 'Hashin Orthotropic');

model.material.create('mat1', 'Common', '');
model.material('mat1').label(['Material: Carbon' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Epoxy']);
model.material.create('lmat1', 'LayeredMaterial', '');
model.material('lmat1').setIndex('link', 'mat1', 0);
model.material('lmat1').setIndex('rotation', 'th1', 0);
model.material('lmat1').setIndex('thickness', 'd_layer', 0);
model.material('lmat1').setIndex('meshPoints', 1, 0);
model.material('lmat1').setIndex('layername', 'Layer 2', 1);
model.material('lmat1').setIndex('link', 'mat1', 1);
model.material('lmat1').setIndex('rotation', 'th1', 1);
model.material('lmat1').setIndex('thickness', 'd_layer', 1);
model.material('lmat1').setIndex('meshPoints', 1, 1);
model.material('lmat1').setIndex('tag', 'lmat1_2', 1);
model.material('lmat1').setIndex('layername', 'Layer 2', 1);
model.material('lmat1').setIndex('link', 'mat1', 1);
model.material('lmat1').setIndex('rotation', 'th1', 1);
model.material('lmat1').setIndex('thickness', 'd_layer', 1);
model.material('lmat1').setIndex('meshPoints', 1, 1);
model.material('lmat1').setIndex('tag', 'lmat1_2', 1);
model.material('lmat1').setIndex('rotation', 'th2', 1);
model.material('lmat1').setIndex('layername', 'Layer 3', 2);
model.material('lmat1').setIndex('link', 'mat1', 2);
model.material('lmat1').setIndex('rotation', 'th2', 2);
model.material('lmat1').setIndex('thickness', 'd_layer', 2);
model.material('lmat1').setIndex('meshPoints', 1, 2);
model.material('lmat1').setIndex('tag', 'lmat1_3', 2);
model.material('lmat1').setIndex('layername', 'Layer 3', 2);
model.material('lmat1').setIndex('link', 'mat1', 2);
model.material('lmat1').setIndex('rotation', 'th2', 2);
model.material('lmat1').setIndex('thickness', 'd_layer', 2);
model.material('lmat1').setIndex('meshPoints', 1, 2);
model.material('lmat1').setIndex('tag', 'lmat1_3', 2);
model.material('lmat1').setIndex('rotation', 'th3', 2);
model.material('lmat1').label('Layered Material: [th1/th2/th3]');

model.geom('geom1').create('wp1', 'WorkPlane');
model.geom('geom1').feature('wp1').set('unite', true);
model.geom('geom1').feature('wp1').geom.create('sq1', 'Square');
model.geom('geom1').feature('wp1').geom.feature('sq1').set('size', 'a');
model.geom('geom1').run('fin');

model.view('view1').set('showgrid', true);

model.material.create('llmat1', 'LayeredMaterialLink', 'comp1');
model.material('llmat1').set('transform', 'symmetry');
model.material('llmat1').set('widthRatio', 0.4);
model.material('mat1').propertyGroup.create('TransverseIsotropic', 'Transversely_isotropic');
model.material('mat1').propertyGroup('TransverseIsotropic').set('Evect', {'E1' 'E2'});
model.material('mat1').propertyGroup('TransverseIsotropic').set('nuvect', {'nu12' 'nu12'});
model.material('mat1').propertyGroup('TransverseIsotropic').set('Gvect1', {'G12'});
model.material('mat1').propertyGroup('def').set('density', {'1'});
model.material('mat1').propertyGroup.create('OrthotropicStrengthParameters', 'Orthotropic_strength_parameters_in_Voigt_notation');
model.material('mat1').propertyGroup('OrthotropicStrengthParameters').set('sigmats', {'sigmaT1' 'sigmaT2' 'sigmaT2'});
model.material('mat1').propertyGroup('OrthotropicStrengthParameters').set('sigmacs', {'sigmaC1' 'sigmaC2' 'sigmaC2'});
model.material('mat1').propertyGroup('OrthotropicStrengthParameters').set('sigmass', {'sigmaS' 'sigmaS' 'sigmaS'});

model.physics('lshell').prop('LayerSelection').set('bndType', 'allShell');
model.physics('lshell').create('fix1', 'Fixed', 1);
model.physics('lshell').feature('fix1').selection.set([1]);
model.physics('lshell').create('ll1', 'LineLoad', 0);
model.physics('lshell').feature('ll1').selection.set([4]);
model.physics('lshell').feature('ll1').set('LoadType', 'TotalForce');
model.physics('lshell').feature('ll1').set('Ftot', {'0' '0' 'F'});

model.cpl.create('maxop1', 'Maximum', 'geom1');
model.cpl('maxop1').selection.geom('geom1', 2);
model.cpl('maxop1').selection.set([1]);

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').set('FI_max_l1', 'maxop1(lshell.atxd1(0,lshell.lemm1.sf1.f_i))');
model.variable('var1').descr('FI_max_l1', 'Maximum failure index, layer 1');
model.variable('var1').set('FI_max_l2', 'maxop1(lshell.atxd1(d_layer,lshell.lemm1.sf1.f_i))');
model.variable('var1').descr('FI_max_l2', 'Maximum failure index, layer 2');
model.variable('var1').set('FI_max_l3', 'maxop1(lshell.atxd1(2*d_layer,lshell.lemm1.sf1.f_i))');
model.variable('var1').descr('FI_max_l3', 'Maximum failure index, layer 3');
model.variable('var1').set('FI_max_l4', 'maxop1(lshell.atxd1(3*d_layer,lshell.lemm1.sf1.f_i))');
model.variable('var1').descr('FI_max_l4', 'Maximum failure index, layer 4');
model.variable('var1').set('FI_max_l5', 'maxop1(lshell.atxd1(4*d_layer,lshell.lemm1.sf1.f_i))');
model.variable('var1').descr('FI_max_l5', 'Maximum failure index, layer 5');
model.variable('var1').set('FI_max_l6', 'maxop1(lshell.atxd1(5*d_layer,lshell.lemm1.sf1.f_i))');
model.variable('var1').descr('FI_max_l6', 'Maximum failure index, layer 6');
model.variable('var1').set('FI_max', 'max(max(max(max(max(FI_max_l1,FI_max_l2),FI_max_l3),FI_max_l4),FI_max_l5),FI_max_l6)');
model.variable('var1').descr('FI_max', 'Maximum failure index');

model.mesh('mesh1').autoMeshSize(2);
model.mesh('mesh1').run;

model.study('std1').label('Study 1: Original Layup');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.dataset.create('dset1lshelllshl', 'LayeredMaterial');
model.result.dataset('dset1lshelllshl').set('data', 'dset1');
model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'dset1lshelllshl');
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (lshell)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').set('showlegends', true);
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'lshell.misesGp'});
model.result('pg1').feature('surf1').set('threshold', 'manual');
model.result('pg1').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg1').feature('surf1').set('colortable', 'Rainbow');
model.result('pg1').feature('surf1').set('colortabletrans', 'none');
model.result('pg1').feature('surf1').set('colorscalemode', 'linear');
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg1').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg1').feature('surf1').feature('def').set('descr', 'Displacement field (material and geometry frames)');
model.result('pg1').run;
model.result.evaluationGroup.create('eg1', 'EvaluationGroup');
model.result.evaluationGroup('eg1').label('Maximum Failure Index (Original)');
model.result.evaluationGroup('eg1').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'FI_max', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 1, 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Maximum failure index', 0);
model.result.evaluationGroup('eg1').run;
model.result.evaluationGroup.create('eg2', 'EvaluationGroup');
model.result.evaluationGroup('eg2').label('Failure Index of Different Failure Modes (Original)');
model.result.evaluationGroup('eg2').set('data', 'dset1lshelllshl');
model.result.evaluationGroup('eg2').set('transpose', true);
model.result.evaluationGroup('eg2').create('max1', 'MaxVolume');
model.result.evaluationGroup('eg2').feature('max1').set('expr', {'lshell.lemm1.sf1.f_ifT'});
model.result.evaluationGroup('eg2').feature('max1').set('descr', {'Hashin fiber tensile failure index'});
model.result.evaluationGroup('eg2').feature('max1').set('expr', {'lshell.lemm1.sf1.f_ifT' 'lshell.lemm1.sf1.f_ifC'});
model.result.evaluationGroup('eg2').feature('max1').set('descr', {'Hashin fiber tensile failure index' 'Hashin fiber compressive failure index'});
model.result.evaluationGroup('eg2').feature('max1').set('expr', {'lshell.lemm1.sf1.f_ifT' 'lshell.lemm1.sf1.f_ifC' 'lshell.lemm1.sf1.f_imT'});
model.result.evaluationGroup('eg2').feature('max1').set('descr', {'Hashin fiber tensile failure index' 'Hashin fiber compressive failure index' 'Hashin matrix tensile failure index'});
model.result.evaluationGroup('eg2').feature('max1').set('expr', {'lshell.lemm1.sf1.f_ifT' 'lshell.lemm1.sf1.f_ifC' 'lshell.lemm1.sf1.f_imT' 'lshell.lemm1.sf1.f_imC'});
model.result.evaluationGroup('eg2').feature('max1').set('descr', {'Hashin fiber tensile failure index' 'Hashin fiber compressive failure index' 'Hashin matrix tensile failure index' 'Hashin matrix compressive failure index'});
model.result.evaluationGroup('eg2').feature('max1').set('expr', {'lshell.lemm1.sf1.f_ifT' 'lshell.lemm1.sf1.f_ifC' 'lshell.lemm1.sf1.f_imT' 'lshell.lemm1.sf1.f_imC' 'lshell.lemm1.sf1.f_iiT'});
model.result.evaluationGroup('eg2').feature('max1').set('descr', {'Hashin fiber tensile failure index' 'Hashin fiber compressive failure index' 'Hashin matrix tensile failure index' 'Hashin matrix compressive failure index' 'Hashin interlaminar tensile failure index'});
model.result.evaluationGroup('eg2').feature('max1').set('expr', {'lshell.lemm1.sf1.f_ifT' 'lshell.lemm1.sf1.f_ifC' 'lshell.lemm1.sf1.f_imT' 'lshell.lemm1.sf1.f_imC' 'lshell.lemm1.sf1.f_iiT' 'lshell.lemm1.sf1.f_iiC'});
model.result.evaluationGroup('eg2').feature('max1').set('descr', {'Hashin fiber tensile failure index' 'Hashin fiber compressive failure index' 'Hashin matrix tensile failure index' 'Hashin matrix compressive failure index' 'Hashin interlaminar tensile failure index' 'Hashin interlaminar compressive failure index'});
model.result.evaluationGroup('eg2').run;
model.result.dataset('dset1lshelllshl').set('scale', 10);
model.result('pg1').run;
model.result('pg1').label('von Mises Stress (Original)');
model.result('pg1').set('showlegendsmaxmin', true);
model.result('pg1').run;
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').set('defaultPlotID', 'stressSlice');
model.result('pg2').label('Stress, Slice (lshell)');
model.result('pg2').set('showlegends', true);
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').create('lss1', 'LayeredMaterialSlice');
model.result('pg2').feature('lss1').set('expr', {'lshell.misesGp'});
model.result('pg2').feature('lss1').set('threshold', 'manual');
model.result('pg2').feature('lss1').set('thresholdvalue', 0.2);
model.result('pg2').feature('lss1').set('colortable', 'Prism');
model.result('pg2').feature('lss1').set('colortabletrans', 'none');
model.result('pg2').feature('lss1').set('colorscalemode', 'linear');
model.result('pg2').feature('lss1').set('locdef', 'relative');
model.result('pg2').feature('lss1').set('localzrel', 'lshell.z');
model.result('pg2').feature('lss1').create('def', 'Deform');
model.result('pg2').feature('lss1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg2').feature('lss1').feature('def').set('descr', 'Displacement field (material and geometry frames)');
model.result('pg2').label('Stress, Slice (lshell)');
model.result('pg2').run;
model.result('pg2').label('Failure Index, Slice (Original)');
model.result('pg2').set('showlegendsmaxmin', true);
model.result('pg2').run;
model.result('pg2').feature('lss1').set('expr', 'lshell.lemm1.sf1.f_i');
model.result('pg2').feature('lss1').set('descr', 'Hashin failure index');
model.result('pg2').feature('lss1').set('locdef', 'interfaces');
model.result('pg2').feature('lss1').set('slicedisplacement', 'rectangular');
model.result('pg2').feature('lss1').set('xseparation', 0.4);
model.result('pg2').feature('lss1').set('yseparation', 0.4);
model.result('pg2').feature('lss1').set('showdescriptions', true);
model.result('pg2').feature('lss1').set('descriptionseparation', 0.5);
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').set('view', 'new');
model.result('pg2').run;

model.view('view4').set('showgrid', false);

model.result.dataset.create('dset1lshelllshlge', 'LayeredMaterial');
model.result.dataset('dset1lshelllshlge').label('Layered Material 2 (Shell Geometry)');
model.result.dataset('dset1lshelllshlge').set('data', 'dset1');
model.result.dataset('dset1lshelllshlge').set('scale', '50*0.07071067811865477');
model.result.dataset('dset1lshelllshlge').set('defaultPlotIDs', {'shellGeometry|lshell' 'plyAngle|lshell'});
model.result.dataset('dset1lshelllshlge').label('Layered Material 2 (Shell Geometry)');
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').set('data', 'dset1lshelllshlge');
model.result('pg3').set('defaultPlotID', 'plyAngle');
model.result('pg3').label('Ply Angle (lshell)');
model.result('pg3').set('titletype', 'label');
model.result('pg3').set('showlegends', true);
model.result('pg3').set('showlegendsunit', true);
model.result('pg3').set('edgecolor', 'white');
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', {'lshell.rot'});
model.result('pg3').feature('surf1').set('threshold', 'manual');
model.result('pg3').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg3').feature('surf1').set('colortabletrans', 'none');
model.result('pg3').feature('surf1').set('colorscalemode', 'linear');
model.result('pg3').feature('surf1').set('unit', 'deg');
model.result('pg3').feature('surf1').set('colortable', 'Rainbow');
model.result('pg3').feature('surf1').set('rangecoloractive', true);
model.result('pg3').feature('surf1').set('rangecolormin', -90);
model.result('pg3').feature('surf1').set('rangecolormax', 90);
model.result('pg3').label('Ply Angle (lshell)');
model.result('pg3').run;
model.result.dataset.create('dset1lshelllshlfi', 'LayeredMaterial');
model.result.dataset('dset1lshelllshlfi').label('Layered Material 2 (Material Direction)');
model.result.dataset('dset1lshelllshlfi').set('data', 'dset1');
model.result.dataset('dset1lshelllshlfi').set('evaluatein', 'layermidplanes');
model.result.dataset('dset1lshelllshlfi').set('scale', '200*0.07071067811865477');
model.result.dataset('dset1lshelllshlfi').set('defaultPlotIDs', {'firstPrincipalMaterialDirection|lshell'});
model.result.dataset('dset1lshelllshlfi').label('Layered Material 2 (Material Direction)');
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').set('data', 'dset1lshelllshlfi');
model.result('pg4').set('defaultPlotID', 'firstPrincipalMaterialDirection');
model.result('pg4').label('First Principal Material Direction (lshell)');
model.result('pg4').set('titletype', 'label');
model.result('pg4').set('edgecolor', 'white');
model.result('pg4').set('showlegends', false);
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', {'lshell.rot'});
model.result('pg4').feature('surf1').set('threshold', 'manual');
model.result('pg4').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg4').feature('surf1').set('colortabletrans', 'none');
model.result('pg4').feature('surf1').set('colorscalemode', 'linear');
model.result('pg4').feature('surf1').set('unit', 'deg');
model.result('pg4').feature('surf1').set('colortable', 'Rainbow');
model.result('pg4').feature('surf1').set('rangecoloractive', true);
model.result('pg4').feature('surf1').set('rangecolormin', -90);
model.result('pg4').feature('surf1').set('rangecolormax', 90);
model.result('pg4').create('arws1', 'ArrowSurface');
model.result('pg4').feature('arws1').set('expr', {'lshell.tm11' 'lshell.tm12' 'lshell.tm13'});
model.result('pg4').feature('arws1').set('placement', 'elements');
model.result('pg4').feature('arws1').set('arrowtype', 'cone');
model.result('pg4').feature('arws1').set('color', 'white');
model.result('pg4').label('First Principal Material Direction (lshell)');
model.result('pg4').run;
model.result('pg3').run;
model.result.dataset('dset1lshelllshlge').set('scale', 40);
model.result('pg3').run;
model.result('pg3').label('Ply Angle (Original)');
model.result('pg3').run;
model.result('pg4').run;
model.result.dataset('dset1lshelllshlfi').set('scale', 40);
model.result('pg4').run;
model.result('pg4').label('First Principal Material Direction (Original)');
model.result('pg4').run;
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').set('data', 'dset1lshelllshl');
model.result('pg5').set('defaultPlotID', 'lineLoads');
model.result('pg5').label('Line Loads (lshell)');
model.result('pg5').set('showlegends', true);
model.result('pg5').set('titletype', 'label');
model.result('pg5').set('frametype', 'spatial');
model.result('pg5').set('showlegendsunit', true);
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', {'1'});
model.result('pg5').feature('surf1').label('Gray Surfaces');
model.result('pg5').feature('surf1').set('coloring', 'uniform');
model.result('pg5').feature('surf1').set('color', 'gray');
model.result('pg5').feature('surf1').create('def', 'Deform');
model.result('pg5').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg5').feature('surf1').feature('def').set('descr', 'Displacement field (material and geometry frames)');
model.result('pg5').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg5').feature('surf1').feature('def').set('scale', 0);
model.result('pg5').feature('surf1').create('sel1', 'Selection');
model.result('pg5').feature('surf1').feature('sel1').selection.geom('geom1', 2);
model.result('pg5').feature('surf1').feature('sel1').selection.set([1]);
model.result('pg5').feature('surf1').create('tran1', 'Transparency');
model.result('pg5').feature('surf1').feature('tran1').set('transparency', 0.8);
model.result('pg5').create('arpt1', 'ArrowPoint');
model.result('pg5').feature('arpt1').set('expr', {'lshell.ll1.F_Lx' 'lshell.ll1.F_Ly' 'lshell.ll1.F_Lz'});
model.result('pg5').feature('arpt1').set('arrowbase', 'tail');
model.result('pg5').feature('arpt1').label('Line Load 1');
model.result('pg5').feature('arpt1').set('inheritplot', 'none');
model.result('pg5').feature('arpt1').create('col', 'Color');
model.result('pg5').feature('arpt1').feature('col').set('colortable', 'Rainbow');
model.result('pg5').feature('arpt1').feature('col').set('colortabletrans', 'none');
model.result('pg5').feature('arpt1').feature('col').set('colorscalemode', 'linear');
model.result('pg5').feature('arpt1').feature('col').set('colordata', 'arrowlength');
model.result('pg5').feature('arpt1').feature('col').set('coloring', 'gradient');
model.result('pg5').feature('arpt1').feature('col').set('topcolor', 'red');
model.result('pg5').feature('arpt1').feature('col').set('bottomcolor', 'custom');
model.result('pg5').feature('arpt1').feature('col').set('custombottomcolor', [0.5882353186607361 0.5137255191802979 0.5176470875740051]);
model.result('pg5').feature('arpt1').set('color', 'green');
model.result('pg5').feature('arpt1').create('def', 'Deform');
model.result('pg5').feature('arpt1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg5').feature('arpt1').feature('def').set('descr', 'Displacement field (material and geometry frames)');
model.result('pg5').feature('arpt1').feature('def').set('scaleactive', true);
model.result('pg5').feature('arpt1').feature('def').set('scale', 0);
model.result('pg5').label('Line Loads (lshell)');
model.result('pg5').run;
model.result('pg5').label('Line Loads (Original)');
model.result('pg5').run;

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/lshell', true);
model.study('std2').label('Study 2: Layup Optimization');
model.study('std2').create('opt', 'Optimization');
model.study('std2').feature('opt').set('optsolver', 'bobyqa');
model.study('std2').feature('opt').setIndex('optobj', 'comp1.FI_max', 0);
model.study('std2').feature('opt').setIndex('descr', 'Maximum failure index', 0);
model.study('std2').feature('opt').setIndex('pname', 'a', 0);
model.study('std2').feature('opt').setIndex('initval', '0.5[m]', 0);
model.study('std2').feature('opt').setIndex('scale', 1, 0);
model.study('std2').feature('opt').setIndex('lbound', '', 0);
model.study('std2').feature('opt').setIndex('ubound', '', 0);
model.study('std2').feature('opt').setIndex('pname', 'a', 0);
model.study('std2').feature('opt').setIndex('initval', '0.5[m]', 0);
model.study('std2').feature('opt').setIndex('scale', 1, 0);
model.study('std2').feature('opt').setIndex('lbound', '', 0);
model.study('std2').feature('opt').setIndex('ubound', '', 0);
model.study('std2').feature('opt').setIndex('pname', 'd_layer', 1);
model.study('std2').feature('opt').setIndex('initval', '1[mm]', 1);
model.study('std2').feature('opt').setIndex('scale', 1, 1);
model.study('std2').feature('opt').setIndex('lbound', '', 1);
model.study('std2').feature('opt').setIndex('ubound', '', 1);
model.study('std2').feature('opt').setIndex('pname', 'd_layer', 1);
model.study('std2').feature('opt').setIndex('initval', '1[mm]', 1);
model.study('std2').feature('opt').setIndex('scale', 1, 1);
model.study('std2').feature('opt').setIndex('lbound', '', 1);
model.study('std2').feature('opt').setIndex('ubound', '', 1);
model.study('std2').feature('opt').setIndex('pname', 'th1', 2);
model.study('std2').feature('opt').setIndex('initval', 0, 2);
model.study('std2').feature('opt').setIndex('scale', 1, 2);
model.study('std2').feature('opt').setIndex('lbound', '', 2);
model.study('std2').feature('opt').setIndex('ubound', '', 2);
model.study('std2').feature('opt').setIndex('pname', 'th1', 2);
model.study('std2').feature('opt').setIndex('initval', 0, 2);
model.study('std2').feature('opt').setIndex('scale', 1, 2);
model.study('std2').feature('opt').setIndex('lbound', '', 2);
model.study('std2').feature('opt').setIndex('ubound', '', 2);
model.study('std2').feature('opt').setIndex('pname', '', 0);
model.study('std2').feature('opt').setIndex('initval', 0, 0);
model.study('std2').feature('opt').setIndex('scale', 45, 0);
model.study('std2').feature('opt').setIndex('lbound', -90, 0);
model.study('std2').feature('opt').setIndex('ubound', 90, 0);
model.study('std2').feature('opt').setIndex('pname', 'th2', 1);
model.study('std2').feature('opt').setIndex('initval', 0, 1);
model.study('std2').feature('opt').setIndex('scale', 45, 1);
model.study('std2').feature('opt').setIndex('lbound', -90, 1);
model.study('std2').feature('opt').setIndex('ubound', 90, 1);
model.study('std2').feature('opt').setIndex('pname', 'th3', 2);
model.study('std2').feature('opt').setIndex('pname', 'th1', 0);
model.study('std2').feature('opt').setIndex('initval', 0, 2);
model.study('std2').feature('opt').setIndex('scale', 45, 2);
model.study('std2').feature('opt').setIndex('lbound', -90, 2);
model.study('std2').feature('opt').setIndex('ubound', 90, 2);

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');

model.batch.create('o1', 'Optimization');
model.batch('o1').study('std2');
model.batch('p1').study('std2');
model.batch('o1').attach('std2');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol2');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').attach('std2');
model.batch('p1').set('optimization', 'o1');
model.batch('p1').set('err', 'on');
model.batch('p1').set('control', 'opt');
model.batch('o1').set('parametricjobs', {'p1'});

model.sol.create('sol3');
model.sol('sol3').study('std2');
model.sol('sol3').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol3');
model.batch('o1').run('compute');

model.result.dataset.create('dset3lshelllshl', 'LayeredMaterial');
model.result.dataset('dset3lshelllshl').set('data', 'dset3');
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').set('data', 'dset3lshelllshl');
model.result('pg6').setIndex('looplevel', 1, 0);
model.result('pg6').set('defaultPlotID', 'stress');
model.result('pg6').label('Stress (lshell)');
model.result('pg6').set('frametype', 'spatial');
model.result('pg6').set('showlegends', true);
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', {'lshell.misesGp'});
model.result('pg6').feature('surf1').set('threshold', 'manual');
model.result('pg6').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg6').feature('surf1').set('colortable', 'Rainbow');
model.result('pg6').feature('surf1').set('colortabletrans', 'none');
model.result('pg6').feature('surf1').set('colorscalemode', 'linear');
model.result('pg6').feature('surf1').set('colortable', 'Prism');
model.result('pg6').feature('surf1').create('def', 'Deform');
model.result('pg6').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg6').feature('surf1').feature('def').set('descr', 'Displacement field (material and geometry frames)');
model.result('pg6').run;

model.study('std2').feature('opt').set('probewindow', '');

model.result.dataset('dset3lshelllshl').set('scale', 10);
model.result('pg6').run;
model.result('pg6').label('von Mises Stress (Optimized)');
model.result('pg6').set('showlegendsmaxmin', true);
model.result('pg6').run;
model.result.create('pg7', 'PlotGroup3D');
model.result('pg7').set('data', 'dset3');
model.result('pg7').setIndex('looplevel', 1, 0);
model.result('pg7').set('defaultPlotID', 'stressSlice');
model.result('pg7').label('Stress, Slice (lshell)');
model.result('pg7').set('showlegends', true);
model.result('pg7').set('frametype', 'spatial');
model.result('pg7').create('lss1', 'LayeredMaterialSlice');
model.result('pg7').feature('lss1').set('expr', {'lshell.misesGp'});
model.result('pg7').feature('lss1').set('threshold', 'manual');
model.result('pg7').feature('lss1').set('thresholdvalue', 0.2);
model.result('pg7').feature('lss1').set('colortable', 'Prism');
model.result('pg7').feature('lss1').set('colortabletrans', 'none');
model.result('pg7').feature('lss1').set('colorscalemode', 'linear');
model.result('pg7').feature('lss1').set('locdef', 'relative');
model.result('pg7').feature('lss1').set('localzrel', 'lshell.z');
model.result('pg7').feature('lss1').create('def', 'Deform');
model.result('pg7').feature('lss1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg7').feature('lss1').feature('def').set('descr', 'Displacement field (material and geometry frames)');
model.result('pg7').label('Stress, Slice (lshell)');
model.result('pg7').run;
model.result('pg7').label('Failure Index, Slice (Optimized)');
model.result('pg7').set('showlegendsmaxmin', true);
model.result('pg7').run;
model.result('pg7').feature('lss1').set('expr', 'lshell.lemm1.sf1.f_i');
model.result('pg7').feature('lss1').set('descr', 'Hashin failure index');
model.result('pg7').feature('lss1').set('locdef', 'interfaces');
model.result('pg7').feature('lss1').set('slicedisplacement', 'rectangular');
model.result('pg7').feature('lss1').set('xseparation', 0.4);
model.result('pg7').feature('lss1').set('yseparation', 0.4);
model.result('pg7').feature('lss1').set('showdescriptions', true);
model.result('pg7').feature('lss1').set('descriptionseparation', 0.5);
model.result('pg7').run;
model.result('pg7').set('view', 'view4');
model.result('pg7').run;
model.result.dataset.create('dset3lshelllshlge', 'LayeredMaterial');
model.result.dataset('dset3lshelllshlge').label('Layered Material 3 (Shell Geometry)');
model.result.dataset('dset3lshelllshlge').set('data', 'dset3');
model.result.dataset('dset3lshelllshlge').set('scale', '50*0.07071067811865477');
model.result.dataset('dset3lshelllshlge').set('defaultPlotIDs', {'shellGeometry|lshell' 'plyAngle|lshell'});
model.result.dataset('dset3lshelllshlge').label('Layered Material 3 (Shell Geometry)');
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').set('data', 'dset3lshelllshlge');
model.result('pg8').setIndex('looplevel', 1, 0);
model.result('pg8').set('defaultPlotID', 'plyAngle');
model.result('pg8').label('Ply Angle (lshell)');
model.result('pg8').set('titletype', 'label');
model.result('pg8').set('showlegends', true);
model.result('pg8').set('showlegendsunit', true);
model.result('pg8').set('edgecolor', 'white');
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').feature('surf1').set('expr', {'lshell.rot'});
model.result('pg8').feature('surf1').set('threshold', 'manual');
model.result('pg8').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg8').feature('surf1').set('colortabletrans', 'none');
model.result('pg8').feature('surf1').set('colorscalemode', 'linear');
model.result('pg8').feature('surf1').set('unit', 'deg');
model.result('pg8').feature('surf1').set('colortable', 'Rainbow');
model.result('pg8').feature('surf1').set('rangecoloractive', true);
model.result('pg8').feature('surf1').set('rangecolormin', -90);
model.result('pg8').feature('surf1').set('rangecolormax', 90);
model.result('pg8').label('Ply Angle (lshell)');
model.result('pg8').run;
model.result.dataset.create('dset3lshelllshlfi', 'LayeredMaterial');
model.result.dataset('dset3lshelllshlfi').label('Layered Material 3 (Material Direction)');
model.result.dataset('dset3lshelllshlfi').set('data', 'dset3');
model.result.dataset('dset3lshelllshlfi').set('evaluatein', 'layermidplanes');
model.result.dataset('dset3lshelllshlfi').set('scale', '200*0.07071067811865477');
model.result.dataset('dset3lshelllshlfi').set('defaultPlotIDs', {'firstPrincipalMaterialDirection|lshell'});
model.result.dataset('dset3lshelllshlfi').label('Layered Material 3 (Material Direction)');
model.result.create('pg9', 'PlotGroup3D');
model.result('pg9').set('data', 'dset3lshelllshlfi');
model.result('pg9').setIndex('looplevel', 1, 0);
model.result('pg9').set('defaultPlotID', 'firstPrincipalMaterialDirection');
model.result('pg9').label('First Principal Material Direction (lshell)');
model.result('pg9').set('titletype', 'label');
model.result('pg9').set('edgecolor', 'white');
model.result('pg9').set('showlegends', false);
model.result('pg9').create('surf1', 'Surface');
model.result('pg9').feature('surf1').set('expr', {'lshell.rot'});
model.result('pg9').feature('surf1').set('threshold', 'manual');
model.result('pg9').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg9').feature('surf1').set('colortabletrans', 'none');
model.result('pg9').feature('surf1').set('colorscalemode', 'linear');
model.result('pg9').feature('surf1').set('unit', 'deg');
model.result('pg9').feature('surf1').set('colortable', 'Rainbow');
model.result('pg9').feature('surf1').set('rangecoloractive', true);
model.result('pg9').feature('surf1').set('rangecolormin', -90);
model.result('pg9').feature('surf1').set('rangecolormax', 90);
model.result('pg9').create('arws1', 'ArrowSurface');
model.result('pg9').feature('arws1').set('expr', {'lshell.tm11' 'lshell.tm12' 'lshell.tm13'});
model.result('pg9').feature('arws1').set('placement', 'elements');
model.result('pg9').feature('arws1').set('arrowtype', 'cone');
model.result('pg9').feature('arws1').set('color', 'white');
model.result('pg9').label('First Principal Material Direction (lshell)');
model.result('pg9').run;
model.result('pg8').run;
model.result.dataset('dset3lshelllshlge').set('scale', 40);
model.result('pg8').run;
model.result('pg8').label('Ply Angle (Optimized)');
model.result('pg8').run;
model.result('pg9').run;
model.result.dataset('dset3lshelllshlfi').set('scale', 40);
model.result('pg9').run;
model.result('pg9').label('First Principal Material Direction (Optimized)');
model.result('pg9').run;
model.result('pg2').run;
model.result.duplicate('pg10', 'pg2');
model.result('pg10').run;
model.result('pg10').run;
model.result('pg10').feature('lss1').set('data', 'dset1');
model.result('pg10').feature('lss1').set('expr', 'lshell.disp');
model.result('pg10').feature('lss1').set('locdef', 'refsurf');
model.result('pg10').feature('lss1').set('slicedisplacement', 'none');
model.result('pg10').feature('lss1').set('showdescriptions', false);
model.result('pg10').feature('lss1').set('colortable', 'Twilight');
model.result('pg10').feature('lss1').set('wireframe', true);
model.result('pg10').feature.duplicate('lss2', 'lss1');
model.result('pg10').run;
model.result('pg10').feature('lss2').set('data', 'dset3');
model.result('pg10').feature('lss2').set('titletype', 'none');
model.result('pg10').feature('lss2').set('wireframe', false);
model.result('pg10').feature('lss2').set('inheritplot', 'lss1');
model.result('pg10').run;
model.result('pg10').feature('lss1').feature('def').set('scaleactive', true);
model.result('pg10').feature('lss1').feature('def').set('scale', 1);
model.result('pg10').run;
model.result('pg10').label('Displacement: Original and Optimized');
model.result('pg10').set('view', 'auto');
model.result('pg10').run;
model.result.evaluationGroup.duplicate('eg3', 'eg1');
model.result.evaluationGroup('eg3').label('Maximum Failure Index (Optimized)');
model.result.evaluationGroup('eg3').set('data', 'dset2');
model.result.evaluationGroup('eg3').run;
model.result.evaluationGroup.duplicate('eg4', 'eg2');
model.result.evaluationGroup('eg4').label('Failure Index of Different Failure Modes (Optimized)');
model.result.evaluationGroup('eg4').set('data', 'dset3lshelllshl');
model.result.evaluationGroup('eg4').setIndex('looplevelinput', 'last', 0);
model.result.evaluationGroup('eg4').run;
model.result('pg1').run;

model.nodeGroup.create('grp1', 'Results');
model.nodeGroup('grp1').add('plotgroup', 'pg1');
model.nodeGroup('grp1').add('plotgroup', 'pg2');
model.nodeGroup('grp1').add('plotgroup', 'pg3');
model.nodeGroup('grp1').add('plotgroup', 'pg4');
model.nodeGroup('grp1').add('plotgroup', 'pg5');
model.nodeGroup('grp1').add('evaluationgroup', 'eg1');
model.nodeGroup('grp1').add('evaluationgroup', 'eg2');
model.nodeGroup('grp1').label('Original Layup');

model.result('pg6').run;

model.nodeGroup.create('grp2', 'Results');
model.nodeGroup('grp2').add('plotgroup', 'pg6');
model.nodeGroup('grp2').add('plotgroup', 'pg7');
model.nodeGroup('grp2').add('plotgroup', 'pg8');
model.nodeGroup('grp2').add('plotgroup', 'pg9');
model.nodeGroup('grp2').add('plotgroup', 'pg10');
model.nodeGroup('grp2').add('evaluationgroup', 'eg3');
model.nodeGroup('grp2').add('evaluationgroup', 'eg4');
model.nodeGroup('grp2').label('Optimized Layup');

model.result('pg10').run;

model.title('Stacking Sequence Optimization');

model.description(['This example illustrates the optimization of stacking sequence in a composite laminate based on the Hashin failure criterion. The composite laminate considered for the analysis has six layers with symmetric angle-ply layup. The carbon' native2unicode(hex2dec({'20' '13'}), 'unicode') 'epoxy material having transversely isotropic material properties is used as a lamina material. The optimization analysis is performed to find the optimum fiber orientation in each layer in order to make laminate safe and suitable under given loading conditions.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;

model.label('stacking_sequence_optimization.mph');

model.modelNode.label('Components');

out = model;
