function out = model
%
% glass_plate.m
%
% Model exported on May 26 2025, 21:29 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Heat_Transfer_Module/Thermal_Radiation');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('ht', 'HeatTransfer', 'geom1');
model.physics('ht').model('comp1');
model.physics.create('rpm', 'ParticipatingMediaRadiation', 'geom1');
model.physics('rpm').model('comp1');

model.multiphysics.create('htrpm1', 'HeatTransferWithRadiationInParticipatingMedia', 'geom1', 3);
model.multiphysics('htrpm1').set('Heat_physics', 'ht');
model.multiphysics('htrpm1').set('RPM_physics', 'rpm');
model.multiphysics('htrpm1').selection.all;

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/ht', true);
model.study('std1').feature('time').setSolveFor('/physics/rpm', true);
model.study('std1').feature('time').setSolveFor('/multiphysics/htrpm1', true);

model.param.set('nr', '1.45');
model.param.descr('nr', 'Refractive index');
model.param.set('T0', '600[degC]');
model.param.descr('T0', 'Initial temperature');
model.param.set('T_amb', '20[degC]');
model.param.descr('T_amb', 'Ambient temperature');
model.param.set('k', '5');
model.param.descr('k', 'Absorption coefficient');

model.geom('geom1').lengthUnit('cm');
model.geom('geom1').create('cyl1', 'Cylinder');
model.geom('geom1').feature('cyl1').set('r', 5);
model.geom('geom1').feature('cyl1').set('h', 1.5);
model.geom('geom1').run('fin');

model.material.create('mat1', 'Common', '');
model.material('mat1').label('Glass');
model.material.create('matlnk1', 'Link', 'comp1');
model.material.create('matlnk2', 'Link', 'comp1');
model.material('matlnk2').selection.geom('geom1', 2);
model.material('matlnk2').selection.all;
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'1.2'});
model.material('mat1').propertyGroup('def').set('density', {'2200'});
model.material('mat1').propertyGroup('def').set('heatcapacity', {'850'});
model.material('mat1').propertyGroup('def').set('absorption', {'k'});
model.material('mat1').propertyGroup('def').set('scattering', {'0'});
model.material('mat1').propertyGroup('def').set('emissivity', {'1'});

model.physics('rpm').prop('ParticipatingMediaSettingsProperty').set('PerfIndex', 0.6);
model.physics('rpm').prop('ParticipatingMediaSettingsProperty').set('nrad', 'nr');
model.physics('ht').feature('init1').set('Tinit', 'T0');
model.physics('ht').create('sar1', 'SurfaceToAmbientRadiation', 2);
model.physics('ht').feature('sar1').selection.all;
model.physics('ht').feature('sar1').set('Tamb', 'T_amb');

model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.set([4]);
model.mesh('mesh1').feature('ftri1').feature.create('size1', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size1').set('hauto', 2);
model.mesh('mesh1').feature('ftri1').feature('size1').selection.geom('geom1', 1);
model.mesh('mesh1').feature('ftri1').feature('size1').selection.set([4 5 8 11]);
model.mesh('mesh1').feature('ftri1').feature.create('size2', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size2').set('hauto', 4);
model.mesh('mesh1').run('ftri1');
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis1').set('numelem', 8);
model.mesh('mesh1').run('swe1');

model.study('std1').label('Study 1: DOM');
model.study('std1').feature('time').set('tlist', 10);
model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'nr', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', '', 0);
model.study('std1').feature('param').setIndex('pname', 'nr', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', '', 0);
model.study('std1').feature('param').setIndex('pname', 'k', 0);
model.study('std1').feature('param').setIndex('plistarr', '5 70 120', 0);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', '10');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('atolmethod', {'comp1_rpm_I' 'global' 'comp1_T' 'global'});
model.sol('sol1').feature('t1').set('atol', {'comp1_rpm_I' '1e-3' 'comp1_T' '1e-3'});
model.sol('sol1').feature('t1').set('atolvaluemethod', {'comp1_rpm_I' 'factor' 'comp1_T' 'factor'});
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('estrat', 'exclude');
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_T'});
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('subdamp', 0.8);
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('subjtech', 'once');
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d1').label('Direct, heat transfer variables (ht)');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Temperature');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_rpm_I'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvarspec', 'manual');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segcomp', {'comp1.rpm.I01' 'comp1.rpm.I02'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('subdamp', 0.3);
model.sol('sol1').feature('t1').create('d2', 'Direct');
model.sol('sol1').feature('t1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d2').label('Direct, radiation variables');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Radiative Intensities 1');
model.sol('sol1').feature('t1').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('segvar', {'comp1_rpm_I'});
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('segvarspec', 'manual');
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('segcomp', {'comp1.rpm.I19' 'comp1.rpm.I20'});
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('subdamp', 0.3);
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('linsolver', 'd2');
model.sol('sol1').feature('t1').feature('se1').feature('ss3').label('Radiative Intensities 10');
model.sol('sol1').feature('t1').feature('se1').create('ss4', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss4').set('segvar', {'comp1_rpm_I'});
model.sol('sol1').feature('t1').feature('se1').feature('ss4').set('segvarspec', 'manual');
model.sol('sol1').feature('t1').feature('se1').feature('ss4').set('segcomp', {'comp1.rpm.I21' 'comp1.rpm.I22'});
model.sol('sol1').feature('t1').feature('se1').feature('ss4').set('subdamp', 0.3);
model.sol('sol1').feature('t1').feature('se1').feature('ss4').set('linsolver', 'd2');
model.sol('sol1').feature('t1').feature('se1').feature('ss4').label('Radiative Intensities 11');
model.sol('sol1').feature('t1').feature('se1').create('ss5', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss5').set('segvar', {'comp1_rpm_I'});
model.sol('sol1').feature('t1').feature('se1').feature('ss5').set('segvarspec', 'manual');
model.sol('sol1').feature('t1').feature('se1').feature('ss5').set('segcomp', {'comp1.rpm.I23' 'comp1.rpm.I24'});
model.sol('sol1').feature('t1').feature('se1').feature('ss5').set('subdamp', 0.3);
model.sol('sol1').feature('t1').feature('se1').feature('ss5').set('linsolver', 'd2');
model.sol('sol1').feature('t1').feature('se1').feature('ss5').label('Radiative Intensities 12');
model.sol('sol1').feature('t1').feature('se1').create('ss6', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss6').set('segvar', {'comp1_rpm_I'});
model.sol('sol1').feature('t1').feature('se1').feature('ss6').set('segvarspec', 'manual');
model.sol('sol1').feature('t1').feature('se1').feature('ss6').set('segcomp', {'comp1.rpm.I03' 'comp1.rpm.I04'});
model.sol('sol1').feature('t1').feature('se1').feature('ss6').set('subdamp', 0.3);
model.sol('sol1').feature('t1').feature('se1').feature('ss6').set('linsolver', 'd2');
model.sol('sol1').feature('t1').feature('se1').feature('ss6').label('Radiative Intensities 2');
model.sol('sol1').feature('t1').feature('se1').create('ss7', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss7').set('segvar', {'comp1_rpm_I'});
model.sol('sol1').feature('t1').feature('se1').feature('ss7').set('segvarspec', 'manual');
model.sol('sol1').feature('t1').feature('se1').feature('ss7').set('segcomp', {'comp1.rpm.I05' 'comp1.rpm.I06'});
model.sol('sol1').feature('t1').feature('se1').feature('ss7').set('subdamp', 0.3);
model.sol('sol1').feature('t1').feature('se1').feature('ss7').set('linsolver', 'd2');
model.sol('sol1').feature('t1').feature('se1').feature('ss7').label('Radiative Intensities 3');
model.sol('sol1').feature('t1').feature('se1').create('ss8', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss8').set('segvar', {'comp1_rpm_I'});
model.sol('sol1').feature('t1').feature('se1').feature('ss8').set('segvarspec', 'manual');
model.sol('sol1').feature('t1').feature('se1').feature('ss8').set('segcomp', {'comp1.rpm.I07' 'comp1.rpm.I08'});
model.sol('sol1').feature('t1').feature('se1').feature('ss8').set('subdamp', 0.3);
model.sol('sol1').feature('t1').feature('se1').feature('ss8').set('linsolver', 'd2');
model.sol('sol1').feature('t1').feature('se1').feature('ss8').label('Radiative Intensities 4');
model.sol('sol1').feature('t1').feature('se1').create('ss9', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss9').set('segvar', {'comp1_rpm_I'});
model.sol('sol1').feature('t1').feature('se1').feature('ss9').set('segvarspec', 'manual');
model.sol('sol1').feature('t1').feature('se1').feature('ss9').set('segcomp', {'comp1.rpm.I09' 'comp1.rpm.I10'});
model.sol('sol1').feature('t1').feature('se1').feature('ss9').set('subdamp', 0.3);
model.sol('sol1').feature('t1').feature('se1').feature('ss9').set('linsolver', 'd2');
model.sol('sol1').feature('t1').feature('se1').feature('ss9').label('Radiative Intensities 5');
model.sol('sol1').feature('t1').feature('se1').create('ss10', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss10').set('segvar', {'comp1_rpm_I'});
model.sol('sol1').feature('t1').feature('se1').feature('ss10').set('segvarspec', 'manual');
model.sol('sol1').feature('t1').feature('se1').feature('ss10').set('segcomp', {'comp1.rpm.I11' 'comp1.rpm.I12'});
model.sol('sol1').feature('t1').feature('se1').feature('ss10').set('subdamp', 0.3);
model.sol('sol1').feature('t1').feature('se1').feature('ss10').set('linsolver', 'd2');
model.sol('sol1').feature('t1').feature('se1').feature('ss10').label('Radiative Intensities 6');
model.sol('sol1').feature('t1').feature('se1').create('ss11', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss11').set('segvar', {'comp1_rpm_I'});
model.sol('sol1').feature('t1').feature('se1').feature('ss11').set('segvarspec', 'manual');
model.sol('sol1').feature('t1').feature('se1').feature('ss11').set('segcomp', {'comp1.rpm.I13' 'comp1.rpm.I14'});
model.sol('sol1').feature('t1').feature('se1').feature('ss11').set('subdamp', 0.3);
model.sol('sol1').feature('t1').feature('se1').feature('ss11').set('linsolver', 'd2');
model.sol('sol1').feature('t1').feature('se1').feature('ss11').label('Radiative Intensities 7');
model.sol('sol1').feature('t1').feature('se1').create('ss12', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss12').set('segvar', {'comp1_rpm_I'});
model.sol('sol1').feature('t1').feature('se1').feature('ss12').set('segvarspec', 'manual');
model.sol('sol1').feature('t1').feature('se1').feature('ss12').set('segcomp', {'comp1.rpm.I15' 'comp1.rpm.I16'});
model.sol('sol1').feature('t1').feature('se1').feature('ss12').set('subdamp', 0.3);
model.sol('sol1').feature('t1').feature('se1').feature('ss12').set('linsolver', 'd2');
model.sol('sol1').feature('t1').feature('se1').feature('ss12').label('Radiative Intensities 8');
model.sol('sol1').feature('t1').feature('se1').create('ss13', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss13').set('segvar', {'comp1_rpm_I'});
model.sol('sol1').feature('t1').feature('se1').feature('ss13').set('segvarspec', 'manual');
model.sol('sol1').feature('t1').feature('se1').feature('ss13').set('segcomp', {'comp1.rpm.I17' 'comp1.rpm.I18'});
model.sol('sol1').feature('t1').feature('se1').feature('ss13').set('subdamp', 0.3);
model.sol('sol1').feature('t1').feature('se1').feature('ss13').set('linsolver', 'd2');
model.sol('sol1').feature('t1').feature('se1').feature('ss13').label('Radiative Intensities 9');
model.sol('sol1').feature('t1').feature('se1').set('segstabacc', 'segaacc');
model.sol('sol1').feature('t1').feature('se1').set('segaaccdim', 5);
model.sol('sol1').feature('t1').feature('se1').set('segaaccmix', 0.9);
model.sol('sol1').feature('t1').feature('se1').set('segaaccdelay', 1);
model.sol('sol1').feature('t1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol1').feature('t1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.T 0 ');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('t1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('t1').feature('i1').set('maxlinit', 10000);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i1').label('AMG, heat transfer variables (ht)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').create('i2', 'Iterative');
model.sol('sol1').feature('t1').feature('i2').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i2').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i2').set('rhob', 400);
model.sol('sol1').feature('t1').feature('i2').label('AMG, radiation variables');
model.sol('sol1').feature('t1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').create('i3', 'Iterative');
model.sol('sol1').feature('t1').feature('i3').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i3').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i3').set('rhob', 20);
model.sol('sol1').feature('t1').feature('i3').label('GMG, radiation variables');
model.sol('sol1').feature('t1').feature('i3').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').set('prefun', 'gmg');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').set('mcasegen', 'any');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'k'});
model.batch('p1').set('plistarr', {'5 70 120'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol.create('sol2');
model.sol('sol2').study('std1');
model.sol('sol2').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').run('compute');

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').label('Temperature (ht)');
model.result('pg1').set('data', 'dset2');
model.result('pg1').setIndex('looplevel', 2, 0);
model.result('pg1').setIndex('looplevel', 3, 1);
model.result('pg1').set('data', 'dset2');
model.result('pg1').setIndex('looplevel', 2, 0);
model.result('pg1').setIndex('looplevel', 3, 1);
model.result('pg1').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond3/pcond3/pg1');
model.result('pg1').feature.create('vol1', 'Volume');
model.result('pg1').feature('vol1').set('showsolutionparams', 'on');
model.result('pg1').feature('vol1').set('solutionparams', 'parent');
model.result('pg1').feature('vol1').set('colortable', 'HeatCameraLight');
model.result('pg1').feature('vol1').set('smooth', 'internal');
model.result('pg1').feature('vol1').set('showsolutionparams', 'on');
model.result('pg1').feature('vol1').set('data', 'parent');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Incident Radiation (rpm)');
model.result('pg2').set('data', 'dset2');
model.result('pg2').setIndex('looplevel', 2, 0);
model.result('pg2').setIndex('looplevel', 3, 1);
model.result('pg2').set('data', 'dset2');
model.result('pg2').setIndex('looplevel', 2, 0);
model.result('pg2').setIndex('looplevel', 3, 1);
model.result('pg2').set('defaultPlotID', 'rpm/RPM_PhysicsInterfaces/icom2/pdef1/pcond3/pg1');
model.result('pg2').feature.create('mslc1', 'Multislice');
model.result('pg2').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg2').feature('mslc1').set('expr', 'rpm.G');
model.result('pg2').feature('mslc1').set('smooth', 'internal');
model.result('pg2').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg2').feature('mslc1').set('data', 'parent');
model.result('pg1').run;

model.modelNode.create('comp2', true);

model.geom.create('geom2', 3);
model.geom('geom2').model('comp2');

model.mesh.create('mesh2', 'geom2');

model.geom('geom2').lengthUnit('cm');
model.geom('geom2').run;

model.mesh('mesh2').create('imp1', 'Import');
model.mesh('mesh2').feature('imp1').set('source', 'sequence');
model.mesh('mesh2').feature('imp1').set('buildsource', true);
model.mesh('mesh2').feature('imp1').importData;
model.mesh('mesh2').run;

model.material.create('matlnk3', 'Link', 'comp2');
model.material.create('matlnk4', 'Link', 'comp2');
model.material('matlnk4').selection.geom('geom2', 2);
model.material('matlnk4').selection.all;

model.physics.copy('ht2', 'ht', 'comp2');
model.physics.copy('rpm2', 'rpm', 'comp2');

model.multiphysics.create('htrpm2', 'HeatTransferWithRadiationInParticipatingMedia', 'geom2', 3);

model.physics('rpm2').prop('ParticipatingMediaSettingsProperty').set('RadiationDiscretizationMethod', 'P1Approximation');

model.study.create('std2');
model.study('std2').label('Study 2: P1');
model.study('std2').feature.copy('param1', 'std1/param');
model.study('std2').feature.copy('time1', 'std1/time');
model.study('std2').feature('time1').setEntry('activate', 'ht', false);
model.study('std2').feature('time1').setEntry('activate', 'rpm', false);
model.study('std2').feature('time1').setEntry('activateCoupling', 'htrpm1', false);
model.study('std1').feature('time').setEntry('activate', 'ht2', false);
model.study('std1').feature('time').setEntry('activate', 'rpm2', false);
model.study('std1').feature('time').setEntry('activateCoupling', 'htrpm2', false);

model.sol.create('sol6');
model.sol('sol6').study('std2');
model.sol('sol6').create('st1', 'StudyStep');
model.sol('sol6').feature('st1').set('study', 'std2');
model.sol('sol6').feature('st1').set('studystep', 'time1');
model.sol('sol6').create('v1', 'Variables');
model.sol('sol6').feature('v1').set('control', 'time1');
model.sol('sol6').create('t1', 'Time');
model.sol('sol6').feature('t1').set('tlist', '10');
model.sol('sol6').feature('t1').set('plot', 'off');
model.sol('sol6').feature('t1').set('plotgroup', 'pg1');
model.sol('sol6').feature('t1').set('plotfreq', 'tout');
model.sol('sol6').feature('t1').set('probesel', 'all');
model.sol('sol6').feature('t1').set('probes', {});
model.sol('sol6').feature('t1').set('probefreq', 'tsteps');
model.sol('sol6').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol6').feature('t1').set('atolmethod', {'comp1_rpm_I' 'global' 'comp1_T' 'global' 'comp2_rpm2_GP1' 'global' 'comp2_T' 'global'});
model.sol('sol6').feature('t1').set('atol', {'comp1_rpm_I' '1e-3' 'comp1_T' '1e-3' 'comp2_rpm2_GP1' '1e-3' 'comp2_T' '1e-3'});
model.sol('sol6').feature('t1').set('atolvaluemethod', {'comp1_rpm_I' 'factor' 'comp1_T' 'factor' 'comp2_rpm2_GP1' 'factor' 'comp2_T' 'factor'});
model.sol('sol6').feature('t1').set('reacf', true);
model.sol('sol6').feature('t1').set('storeudot', true);
model.sol('sol6').feature('t1').set('endtimeinterpolation', true);
model.sol('sol6').feature('t1').set('estrat', 'exclude');
model.sol('sol6').feature('t1').set('maxorder', 2);
model.sol('sol6').feature('t1').set('control', 'time1');
model.sol('sol6').feature('t1').create('se1', 'Segregated');
model.sol('sol6').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol6').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol6').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp2_T'});
model.sol('sol6').feature('t1').feature('se1').feature('ss1').set('subdamp', 0.8);
model.sol('sol6').feature('t1').feature('se1').feature('ss1').set('subjtech', 'once');
model.sol('sol6').feature('t1').create('d1', 'Direct');
model.sol('sol6').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol6').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol6').feature('t1').feature('d1').label('Direct, heat transfer variables (ht2)');
model.sol('sol6').feature('t1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol6').feature('t1').feature('se1').feature('ss1').label('Temperature');
model.sol('sol6').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol6').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp2_rpm2_GP1'});
model.sol('sol6').feature('t1').feature('se1').feature('ss2').set('subdamp', 0.8);
model.sol('sol6').feature('t1').feature('se1').feature('ss2').set('subjtech', 'once');
model.sol('sol6').feature('t1').create('d2', 'Direct');
model.sol('sol6').feature('t1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol6').feature('t1').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol6').feature('t1').feature('d2').label('Direct, radiation variables (rpm2)');
model.sol('sol6').feature('t1').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol6').feature('t1').feature('se1').feature('ss2').label('Heat Transfer');
model.sol('sol6').feature('t1').feature('se1').set('segstabacc', 'segaacc');
model.sol('sol6').feature('t1').feature('se1').set('segaaccdim', 5);
model.sol('sol6').feature('t1').feature('se1').set('segaaccmix', 0.9);
model.sol('sol6').feature('t1').feature('se1').set('segaaccdelay', 1);
model.sol('sol6').feature('t1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol6').feature('t1').feature('se1').feature('ll1').set('lowerlimit', 'comp2.T 0 ');
model.sol('sol6').feature('t1').create('i1', 'Iterative');
model.sol('sol6').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol6').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol6').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol6').feature('t1').feature('i1').set('rhob', 20);
model.sol('sol6').feature('t1').feature('i1').set('maxlinit', 10000);
model.sol('sol6').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol6').feature('t1').feature('i1').label('AMG, heat transfer variables (ht2)');
model.sol('sol6').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol6').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol6').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol6').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol6').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol6').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol6').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol6').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol6').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol6').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol6').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol6').feature('t1').create('i2', 'Iterative');
model.sol('sol6').feature('t1').feature('i2').set('linsolver', 'gmres');
model.sol('sol6').feature('t1').feature('i2').set('prefuntype', 'left');
model.sol('sol6').feature('t1').feature('i2').set('rhob', 400);
model.sol('sol6').feature('t1').feature('i2').label('AMG, radiation variables (rpm2)');
model.sol('sol6').feature('t1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol6').feature('t1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol6').feature('t1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol6').feature('t1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol6').feature('t1').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol6').feature('t1').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol6').feature('t1').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol6').feature('t1').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol6').feature('t1').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol6').feature('t1').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol6').feature('t1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol6').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol6').feature('t1').create('i3', 'Iterative');
model.sol('sol6').feature('t1').feature('i3').set('linsolver', 'gmres');
model.sol('sol6').feature('t1').feature('i3').set('prefuntype', 'left');
model.sol('sol6').feature('t1').feature('i3').set('rhob', 20);
model.sol('sol6').feature('t1').feature('i3').label('GMG, radiation variables (rpm2)');
model.sol('sol6').feature('t1').feature('i3').create('mg1', 'Multigrid');
model.sol('sol6').feature('t1').feature('i3').feature('mg1').set('prefun', 'gmg');
model.sol('sol6').feature('t1').feature('i3').feature('mg1').set('mcasegen', 'any');
model.sol('sol6').feature('t1').feature('i3').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol6').feature('t1').feature('i3').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol6').feature('t1').feature('i3').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol6').feature('t1').feature('i3').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol6').feature('t1').feature('i3').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol6').feature('t1').feature('i3').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol6').feature('t1').feature.remove('fcDef');
model.sol('sol6').attach('std2');

model.batch.create('p2', 'Parametric');
model.batch('p2').study('std2');
model.batch('p2').create('so1', 'Solutionseq');
model.batch('p2').feature('so1').set('seq', 'sol6');
model.batch('p2').feature('so1').set('store', 'on');
model.batch('p2').feature('so1').set('clear', 'on');
model.batch('p2').feature('so1').set('psol', 'none');
model.batch('p2').set('pname', {'k'});
model.batch('p2').set('plistarr', {'5 70 120'});
model.batch('p2').set('sweeptype', 'sparse');
model.batch('p2').set('probesel', 'all');
model.batch('p2').set('probes', {});
model.batch('p2').set('plot', 'off');
model.batch('p2').set('err', 'on');
model.batch('p2').attach('std2');
model.batch('p2').set('control', 'param1');

model.sol.create('sol7');
model.sol('sol7').study('std2');
model.sol('sol7').label('Parametric Solutions 2');

model.batch('p2').feature('so1').set('psol', 'sol7');
model.batch('p2').run('compute');

model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').label('Temperature (ht2)');
model.result('pg3').set('data', 'dset6');
model.result('pg3').setIndex('looplevel', 2, 0);
model.result('pg3').setIndex('looplevel', 3, 1);
model.result('pg3').set('data', 'dset6');
model.result('pg3').setIndex('looplevel', 2, 0);
model.result('pg3').setIndex('looplevel', 3, 1);
model.result('pg3').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond3/pcond3/pg1');
model.result('pg3').feature.create('vol1', 'Volume');
model.result('pg3').feature('vol1').set('showsolutionparams', 'on');
model.result('pg3').feature('vol1').set('solutionparams', 'parent');
model.result('pg3').feature('vol1').set('colortable', 'HeatCameraLight');
model.result('pg3').feature('vol1').set('smooth', 'internal');
model.result('pg3').feature('vol1').set('showsolutionparams', 'on');
model.result('pg3').feature('vol1').set('data', 'parent');
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').label('Incident Radiation (rpm2)');
model.result('pg4').set('data', 'dset6');
model.result('pg4').setIndex('looplevel', 2, 0);
model.result('pg4').setIndex('looplevel', 3, 1);
model.result('pg4').set('data', 'dset6');
model.result('pg4').setIndex('looplevel', 2, 0);
model.result('pg4').setIndex('looplevel', 3, 1);
model.result('pg4').set('defaultPlotID', 'rpm/RPM_PhysicsInterfaces/icom2/pdef1/pcond3/pg1');
model.result('pg4').feature.create('mslc1', 'Multislice');
model.result('pg4').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg4').feature('mslc1').set('expr', 'rpm2.G');
model.result('pg4').feature('mslc1').set('smooth', 'internal');
model.result('pg4').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg4').feature('mslc1').set('data', 'parent');
model.result('pg3').run;

model.modelNode.create('comp3', true);

model.geom.create('geom3', 3);
model.geom('geom3').model('comp3');

model.mesh.create('mesh3', 'geom3');

model.geom('geom3').lengthUnit('cm');
model.geom('geom3').run;

model.mesh('mesh3').create('imp1', 'Import');
model.mesh('mesh3').feature('imp1').set('source', 'sequence');
model.mesh('mesh3').feature('imp1').set('buildsource', true);
model.mesh('mesh3').feature('imp1').importData;
model.mesh('mesh3').run;

model.material.create('matlnk5', 'Link', 'comp3');
model.material.create('matlnk6', 'Link', 'comp3');
model.material('matlnk6').selection.geom('geom3', 2);
model.material('matlnk6').selection.all;

model.physics.copy('ht3', 'ht2', 'comp3');
model.physics('ht3').feature('solid1').create('otpm1', 'OpticallyThickParticipatingMedium', 3);
model.physics('ht3').feature('solid1').feature('otpm1').set('nrad', 'nr');

model.study.create('std3');
model.study('std3').label('Study 3: Rosseland');
model.study('std3').feature.copy('param1', 'std2/param1');
model.study('std3').feature.copy('time1', 'std2/time1');
model.study('std3').feature('time1').setEntry('activate', 'ht', false);
model.study('std3').feature('time1').setEntry('activate', 'rpm', false);
model.study('std3').feature('time1').setEntry('activate', 'ht2', false);
model.study('std3').feature('time1').setEntry('activate', 'rpm2', false);
model.study('std3').feature('time1').setEntry('activateCoupling', 'htrpm1', false);
model.study('std3').feature('time1').setEntry('activateCoupling', 'htrpm2', false);
model.study('std1').feature('time').setEntry('activate', 'ht3', false);
model.study('std2').feature('time1').setEntry('activate', 'ht3', false);

model.sol.create('sol11');
model.sol('sol11').study('std3');
model.sol('sol11').create('st1', 'StudyStep');
model.sol('sol11').feature('st1').set('study', 'std3');
model.sol('sol11').feature('st1').set('studystep', 'time1');
model.sol('sol11').create('v1', 'Variables');
model.sol('sol11').feature('v1').set('control', 'time1');
model.sol('sol11').create('t1', 'Time');
model.sol('sol11').feature('t1').set('tlist', '10');
model.sol('sol11').feature('t1').set('plot', 'off');
model.sol('sol11').feature('t1').set('plotgroup', 'pg1');
model.sol('sol11').feature('t1').set('plotfreq', 'tout');
model.sol('sol11').feature('t1').set('probesel', 'all');
model.sol('sol11').feature('t1').set('probes', {});
model.sol('sol11').feature('t1').set('probefreq', 'tsteps');
model.sol('sol11').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol11').feature('t1').set('atolmethod', {'comp1_rpm_I' 'global' 'comp1_T' 'global' 'comp2_rpm2_GP1' 'global' 'comp2_T' 'global' 'comp3_T' 'global'});
model.sol('sol11').feature('t1').set('atol', {'comp1_rpm_I' '1e-3' 'comp1_T' '1e-3' 'comp2_rpm2_GP1' '1e-3' 'comp2_T' '1e-3' 'comp3_T' '1e-3'});
model.sol('sol11').feature('t1').set('atolvaluemethod', {'comp1_rpm_I' 'factor' 'comp1_T' 'factor' 'comp2_rpm2_GP1' 'factor' 'comp2_T' 'factor' 'comp3_T' 'factor'});
model.sol('sol11').feature('t1').set('reacf', true);
model.sol('sol11').feature('t1').set('storeudot', true);
model.sol('sol11').feature('t1').set('endtimeinterpolation', true);
model.sol('sol11').feature('t1').set('estrat', 'exclude');
model.sol('sol11').feature('t1').set('maxorder', 2);
model.sol('sol11').feature('t1').set('control', 'time1');
model.sol('sol11').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol11').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol11').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol11').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol11').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol11').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol11').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol11').feature('t1').create('d1', 'Direct');
model.sol('sol11').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol11').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol11').feature('t1').feature('d1').label('Direct, heat transfer variables (ht3)');
model.sol('sol11').feature('t1').create('i1', 'Iterative');
model.sol('sol11').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol11').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol11').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol11').feature('t1').feature('i1').set('rhob', 20);
model.sol('sol11').feature('t1').feature('i1').set('maxlinit', 10000);
model.sol('sol11').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol11').feature('t1').feature('i1').label('AMG, heat transfer variables (ht3)');
model.sol('sol11').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol11').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol11').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol11').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol11').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol11').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol11').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol11').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol11').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol11').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol11').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol11').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol11').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol11').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol11').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol11').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol11').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol11').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol11').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol11').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol11').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol11').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol11').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol11').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol11').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol11').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol11').feature('t1').feature.remove('fcDef');
model.sol('sol11').attach('std3');

model.batch.create('p3', 'Parametric');
model.batch('p3').study('std3');
model.batch('p3').create('so1', 'Solutionseq');
model.batch('p3').feature('so1').set('seq', 'sol11');
model.batch('p3').feature('so1').set('store', 'on');
model.batch('p3').feature('so1').set('clear', 'on');
model.batch('p3').feature('so1').set('psol', 'none');
model.batch('p3').set('pname', {'k'});
model.batch('p3').set('plistarr', {'5 70 120'});
model.batch('p3').set('sweeptype', 'sparse');
model.batch('p3').set('probesel', 'all');
model.batch('p3').set('probes', {});
model.batch('p3').set('plot', 'off');
model.batch('p3').set('err', 'on');
model.batch('p3').attach('std3');
model.batch('p3').set('control', 'param1');

model.sol.create('sol12');
model.sol('sol12').study('std3');
model.sol('sol12').label('Parametric Solutions 3');

model.batch('p3').feature('so1').set('psol', 'sol12');
model.batch('p3').run('compute');

model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').label('Temperature (ht3)');
model.result('pg5').set('data', 'dset12');
model.result('pg5').setIndex('looplevel', 2, 0);
model.result('pg5').setIndex('looplevel', 3, 1);
model.result('pg5').set('data', 'dset12');
model.result('pg5').setIndex('looplevel', 2, 0);
model.result('pg5').setIndex('looplevel', 3, 1);
model.result('pg5').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond3/pcond3/pg1');
model.result('pg5').feature.create('vol1', 'Volume');
model.result('pg5').feature('vol1').set('showsolutionparams', 'on');
model.result('pg5').feature('vol1').set('solutionparams', 'parent');
model.result('pg5').feature('vol1').set('colortable', 'HeatCameraLight');
model.result('pg5').feature('vol1').set('smooth', 'internal');
model.result('pg5').feature('vol1').set('showsolutionparams', 'on');
model.result('pg5').feature('vol1').set('data', 'parent');
model.result('pg5').run;
model.result('pg4').run;
model.result.dataset.create('cln1', 'CutLine3D');
model.result.dataset('cln1').set('data', 'dset2');
model.result.dataset('cln1').setIndex('genpoints', 0, 1, 0);
model.result.dataset('cln1').setIndex('genpoints', 1.5, 1, 2);
model.result.dataset.duplicate('cln2', 'cln1');
model.result.dataset('cln2').set('data', 'dset6');
model.result.dataset.duplicate('cln3', 'cln2');
model.result.dataset('cln3').set('data', 'dset12');
model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').run;
model.result('pg6').label('Temperature at Central Line for k = 5');
model.result('pg6').set('titletype', 'manual');
model.result('pg6').set('title', 'Temperature at Central Line');
model.result('pg6').create('lngr1', 'LineGraph');
model.result('pg6').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg6').feature('lngr1').set('linewidth', 'preference');
model.result('pg6').feature('lngr1').set('data', 'cln1');
model.result('pg6').feature('lngr1').setIndex('looplevelinput', 'first', 1);
model.result('pg6').feature('lngr1').setIndex('looplevelinput', 'last', 0);
model.result('pg6').feature('lngr1').set('legendmethod', 'manual');
model.result('pg6').feature('lngr1').set('legend', true);
model.result('pg6').feature('lngr1').setIndex('legends', 'DOM', 0);
model.result('pg6').run;
model.result('pg6').feature.duplicate('lngr2', 'lngr1');
model.result('pg6').run;
model.result('pg6').feature('lngr2').set('data', 'cln2');
model.result('pg6').feature('lngr2').setIndex('legends', 'P1', 0);
model.result('pg6').feature.duplicate('lngr3', 'lngr2');
model.result('pg6').run;
model.result('pg6').feature('lngr3').set('data', 'cln3');
model.result('pg6').feature('lngr3').setIndex('legends', 'Rosseland', 0);
model.result('pg6').run;
model.result('pg6').run;
model.result.duplicate('pg7', 'pg6');
model.result('pg7').run;
model.result('pg7').label('Temperature at Central Line for k = 120');
model.result('pg7').run;
model.result('pg7').feature('lngr1').setIndex('looplevelinput', 'last', 1);
model.result('pg7').run;
model.result('pg7').feature('lngr2').setIndex('looplevelinput', 'last', 1);
model.result('pg7').run;
model.result('pg7').feature('lngr3').setIndex('looplevelinput', 'last', 1);
model.result('pg7').run;

model.title('Radiative Cooling of a Glass Plate');

model.description('A glass melt is cooled down by radiation to form the final shape. The simulation of radiation is performed using the three radiation in participating media models provided in COMSOL Multiphysics to compare the accuracies and computational costs.');

model.mesh('mesh1').clearMesh;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;
model.sol('sol8').clearSolutionData;
model.sol('sol9').clearSolutionData;
model.sol('sol10').clearSolutionData;
model.sol('sol11').clearSolutionData;
model.sol('sol12').clearSolutionData;
model.sol('sol13').clearSolutionData;
model.sol('sol14').clearSolutionData;
model.sol('sol15').clearSolutionData;

model.label('glass_plate.mph');

model.modelNode.label('Components');

out = model;
