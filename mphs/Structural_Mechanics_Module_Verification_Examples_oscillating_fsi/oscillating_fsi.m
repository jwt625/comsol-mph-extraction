function out = model
%
% oscillating_fsi.m
%
% Model exported on May 26 2025, 21:34 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Structural_Mechanics_Module/Verification_Examples');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('spf', 'LaminarFlow', 'geom1');
model.physics('spf').model('comp1');
model.physics('spf').prop('AdvancedSettingProperty').set('UsePseudoTime', '1');
model.physics('spf').prop('PhysicalModelProperty').set('Compressibility', 'Incompressible');
model.physics('spf').field('velocity').field('u_fluid');
model.physics('spf').field('velocity').component({'u_fluid' 'v_fluid' 'w_fluid'});
model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');
model.physics('solid').field('displacement').field('u_solid');
model.physics('solid').field('displacement').component({'u_solid' 'v_solid' 'w_solid'});
model.physics('solid').prop('ShapeProperty').set('order_displacement', '2');

model.multiphysics.create('fsi1', 'FluidStructureInteractionBC', 'geom1', 1);
model.multiphysics('fsi1').set('Fluid_physics', 'spf');
model.multiphysics('fsi1').set('Structure_physics', 'solid');
model.multiphysics('fsi1').selection.all;

model.common.create('free1', 'DeformingDomain', 'comp1');
model.common('free1').set('smoothingType', 'yeoh');
model.common('free1').selection.set([]);

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/spf', true);
model.study('std1').feature('time').setSolveFor('/physics/solid', true);
model.study('std1').feature('time').setSolveFor('/multiphysics/fsi1', true);

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', [2.5 0.41]);
model.geom('geom1').run('r1');
model.geom('geom1').create('c1', 'Circle');
model.geom('geom1').feature('c1').set('r', 0.05);
model.geom('geom1').feature('c1').set('pos', [0.2 0.2]);
model.geom('geom1').run('c1');
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').set('size', {'0.35+0.05' '0.02'});
model.geom('geom1').feature('r2').set('base', 'center');
model.geom('geom1').feature('r2').set('pos', {'0.2+0.4/2' '0.2'});
model.geom('geom1').run('r2');
model.geom('geom1').create('r3', 'Rectangle');
model.geom('geom1').feature('r3').set('size', [0.6 0.41]);
model.geom('geom1').feature('r3').set('pos', [0.2 0]);
model.geom('geom1').run('r3');
model.geom('geom1').create('dif1', 'Difference');
model.geom('geom1').feature('dif1').label('Solid');
model.geom('geom1').feature('dif1').selection('input').set({'r2'});
model.geom('geom1').feature('dif1').selection('input2').set({'c1'});
model.geom('geom1').feature('dif1').set('keepadd', true);
model.geom('geom1').feature('dif1').set('keepsubtract', true);
model.geom('geom1').feature('dif1').set('selresult', true);
model.geom('geom1').run('dif1');
model.geom('geom1').create('dif2', 'Difference');
model.geom('geom1').feature('dif2').label('Fluid');
model.geom('geom1').feature('dif2').selection('input').set({'r1' 'r3'});
model.geom('geom1').feature('dif2').selection('input2').set({'c1' 'r2'});
model.geom('geom1').feature('dif2').set('selresult', true);
model.geom('geom1').run('fin');
model.geom('geom1').run('fin');

model.common('free1').selection.set([2]);

model.func.create('step1', 'Step');
model.func('step1').model('comp1');
model.func('step1').set('location', '0.5[s]');
model.func('step1').set('smooth', 1);
model.func.create('gp1', 'GaussianPulse');
model.func('gp1').model('comp1');
model.func('gp1').set('location', '1.5[s]');
model.func('gp1').set('sigma', '5e-2[s]');
model.func('gp1').set('normalization', 'peak');

model.physics('spf').selection.named('geom1_dif2_dom');
model.physics('spf').prop('ConsistentStabilization').set('CrosswindDiffusion', false);
model.physics('spf').prop('ShapeProperty').set('order_fluid', 4);
model.physics('spf').create('inl1', 'InletBoundary', 1);
model.physics('spf').feature('inl1').selection.set([1]);
model.physics('spf').feature('inl1').set('U0in', '1.5*2[m/s]*Y*(0.41[m]-Y)/(0.41[m]/2)^2*step1(t)');
model.physics('spf').create('out1', 'OutletBoundary', 1);
model.physics('spf').feature('out1').selection.set([14]);
model.physics('solid').selection.named('geom1_dif1_dom');
model.physics('solid').create('fix1', 'Fixed', 1);
model.physics('solid').feature('fix1').selection.set([19 20]);
model.physics('solid').create('pl1', 'PointLoad', 0);
model.physics('solid').feature('pl1').selection.set([11]);
model.physics('solid').feature('pl1').set('Fp', {'0' '1[N]*gp1(t)' '0'});

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').selection.named('geom1_dif1_dom');
model.material('mat1').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat1').propertyGroup('Enu').set('E', {'5.6[MPa]'});
model.material('mat1').propertyGroup('Enu').set('nu', {'0.4'});
model.material('mat1').propertyGroup('def').set('density', {'1e3'});
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').selection.named('geom1_dif2_dom');
model.material('mat2').propertyGroup('def').set('density', {'1000'});
model.material('mat2').propertyGroup('def').set('dynamicviscosity', {'1'});

model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('size').set('hauto', 6);
model.mesh('mesh1').feature('size1').set('hauto', 5);
model.mesh('mesh1').feature('ftri1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('ftri1').selection.set([1 2 3]);
model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature.move('map1', 5);
model.mesh('mesh1').feature('map1').set('smoothcontrol', false);
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([12 13]);
model.mesh('mesh1').feature('map1').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis1').set('elemcount', 40);
model.mesh('mesh1').feature('map1').feature('dis1').set('elemratio', 5);
model.mesh('mesh1').feature('map1').feature('dis1').set('reverse', true);
model.mesh('mesh1').feature('bl1').set('sharpcorners', 'none');
model.mesh('mesh1').feature('bl1').set('smoothtransition', false);
model.mesh('mesh1').run;

model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl('intop1').set('axisym', true);
model.cpl('intop1').selection.geom('geom1', 1);
model.cpl('intop1').selection.set([8 9 10 15 16 17 18]);

model.probe.create('var1', 'GlobalVariable');
model.probe('var1').model('comp1');
model.probe('var1').set('probename', 'drag');
model.probe('var1').set('expr', '-intop1(spf.T_stressx)');
model.probe('var1').set('descractive', true);
model.probe('var1').set('descr', 'Drag');
model.probe('var1').set('window', 'window1');
model.probe('var1').set('windowtitle', 'Probe Plot 1');
model.probe.duplicate('var2', 'var1');
model.probe('var2').set('probename', 'lift');
model.probe('var2').set('expr', '-intop1(spf.T_stressy)');
model.probe('var2').set('descr', 'Lift');
model.probe.create('pdom1', 'DomainPoint');
model.probe('pdom1').model('comp1');
model.probe('pdom1').set('frame', 'material');
model.probe('pdom1').setIndex('coords2', 0.595, 0);
model.probe('pdom1').setIndex('coords2', 0.2, 1);
model.probe('pdom1').feature('ppb1').set('probename', 'u');
model.probe('pdom1').feature('ppb1').set('expr', 'u_solid');
model.probe('pdom1').feature('ppb1').set('unit', 'mm');
model.probe('pdom1').feature('ppb1').set('window', 'window2');
model.probe('pdom1').feature('ppb1').set('windowtitle', 'Probe Plot 2');
model.probe('pdom1').feature.duplicate('ppb2', 'ppb1');
model.probe('pdom1').feature('ppb2').set('expr', 'v_solid');
model.probe('pdom1').feature('ppb2').set('probename', 'v');

model.study('std1').feature('time').set('tlist', 'range(0,5e-2,5)');
model.study('std1').feature('time').set('plot', true);
model.study('std1').feature('time').set('plotfreq', 'tsteps');

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1 2 4]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([2]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_u_solid').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_spatial_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u_solid').set('scaleval', '1e-2*2.5333969290263223');
model.sol('sol1').feature('v1').feature('comp1_spatial_disp').set('scaleval', '1e-2*2.5333969290263223');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,5e-2,5)');
model.sol('sol1').feature('t1').set('plot', 'on');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tsteps');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {'var1' 'var2' 'pdom1'});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalmethod', 'scaled');
model.sol('sol1').feature('t1').set('atolglobalfactor', 0.05);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('atolmethod', {'comp1_fsi1_vWall' 'global' 'comp1_p' 'scaled' 'comp1_spatial_disp' 'global' 'comp1_u_fluid' 'global' 'comp1_u_solid' 'global'});
model.sol('sol1').feature('t1').set('atolvaluemethod', {'comp1_fsi1_vWall' 'factor' 'comp1_p' 'factor' 'comp1_spatial_disp' 'factor' 'comp1_u_fluid' 'factor' 'comp1_u_solid' 'factor'});
model.sol('sol1').feature('t1').set('atolfactor', {'comp1_fsi1_vWall' '0.1' 'comp1_p' '1' 'comp1_spatial_disp' '0.1' 'comp1_u_fluid' '0.1' 'comp1_u_solid' '0.1'});
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('estrat', 'exclude');
model.sol('sol1').feature('t1').set('rhoinf', 0.5);
model.sol('sol1').feature('t1').set('predictor', 'constant');
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('stabcntrl', true);
model.sol('sol1').feature('t1').set('bwinitstepfrac', '0.01');
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_u_fluid' 'comp1_p'});
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('subdamp', 0.8);
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('subjtech', 'once');
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Velocity U_fluid, Pressure p');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_u_solid'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('subdtech', 'const');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('subdamp', 0.8);
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('subjtech', 'once');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Displacement Field');
model.sol('sol1').feature('t1').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('segvar', {'comp1_spatial_disp'});
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('subdamp', 0.8);
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('subjtech', 'once');
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('subiter', 1);
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('subtermconst', 'iter');
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('subntolfact', 0.1);
model.sol('sol1').feature('t1').create('d2', 'Direct');
model.sol('sol1').feature('t1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d2').label('Direct, spatial mesh displacement (spf)');
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('linsolver', 'd2');
model.sol('sol1').feature('t1').feature('se1').feature('ss3').label('Spatial Mesh Displacement');
model.sol('sol1').feature('t1').feature('se1').create('ss4', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss4').set('segvar', {'comp1_fsi1_vWall'});
model.sol('sol1').feature('t1').feature('se1').feature('ss4').set('subdamp', 0.7);
model.sol('sol1').feature('t1').feature('se1').feature('ss4').set('subjtech', 'onevery');
model.sol('sol1').feature('t1').create('d3', 'Direct');
model.sol('sol1').feature('t1').feature('d3').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d3').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d3').label('Direct 2');
model.sol('sol1').feature('t1').feature('se1').feature('ss4').set('linsolver', 'd3');
model.sol('sol1').feature('t1').feature('se1').feature('ss4').label(['Fluid' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Structure Interaction 1']);
model.sol('sol1').feature('t1').feature('se1').set('ntolfact', 0.5);
model.sol('sol1').feature('t1').feature('se1').set('segstabacc', 'segaacc');
model.sol('sol1').feature('t1').feature('se1').set('segaaccdim', 5);
model.sol('sol1').feature('t1').feature('se1').set('segaaccmix', 0.9);
model.sol('sol1').feature('t1').feature('se1').set('segaaccdelay', 1);
model.sol('sol1').feature('t1').feature('se1').set('maxsegiter', 20);
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('t1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('t1').feature('i1').set('maxlinit', 100);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('damp', '0.9');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 0.5);
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 1);

model.probe('var1').genResult('none');
model.probe('var2').genResult('none');
model.probe('pdom1').genResult('none');

model.result.dataset('dset1').set('geom', 'geom1');
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').label('Velocity (spf)');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').set('data', 'dset1');
model.result('pg3').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg1');
model.result('pg3').feature.create('surf1', 'Surface');
model.result('pg3').feature('surf1').label('Surface');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('smooth', 'internal');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('data', 'parent');

model.sol('sol1').runAll;

model.result.remove('pg3');

model.study('std1').feature('time').set('plotgroup', 'Default');

model.result.dataset('dset1').set('geom', 'geom1');
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').label('Velocity (spf)');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').set('data', 'dset1');
model.result('pg3').setIndex('looplevel', 101, 0);
model.result('pg3').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg1');
model.result('pg3').feature.create('surf1', 'Surface');
model.result('pg3').feature('surf1').label('Surface');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('smooth', 'internal');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('data', 'parent');
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').label('Pressure (spf)');
model.result('pg4').set('frametype', 'spatial');
model.result('pg4').set('data', 'dset1');
model.result('pg4').setIndex('looplevel', 101, 0);
model.result('pg4').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg2');
model.result('pg4').feature.create('con1', 'Contour');
model.result('pg4').feature('con1').label('Contour');
model.result('pg4').feature('con1').set('showsolutionparams', 'on');
model.result('pg4').feature('con1').set('expr', 'p');
model.result('pg4').feature('con1').set('number', 40);
model.result('pg4').feature('con1').set('levelrounding', false);
model.result('pg4').feature('con1').set('smooth', 'internal');
model.result('pg4').feature('con1').set('showsolutionparams', 'on');
model.result('pg4').feature('con1').set('data', 'parent');
model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').set('data', 'dset1');
model.result('pg5').setIndex('looplevel', 101, 0);
model.result('pg5').set('defaultPlotID', 'stress');
model.result('pg5').label('Stress (solid)');
model.result('pg5').set('frametype', 'spatial');
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg5').feature('surf1').set('threshold', 'manual');
model.result('pg5').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg5').feature('surf1').set('colortable', 'Rainbow');
model.result('pg5').feature('surf1').set('colortabletrans', 'none');
model.result('pg5').feature('surf1').set('colorscalemode', 'linear');
model.result('pg5').feature('surf1').set('resolution', 'normal');
model.result('pg5').feature('surf1').set('colortable', 'Prism');
model.result.create('pg6', 'PlotGroup2D');
model.result('pg6').set('data', 'dset1');
model.result('pg6').setIndex('looplevel', 101, 0);
model.result('pg6').label('Moving Mesh');
model.result('pg6').create('mesh1', 'Mesh');
model.result('pg6').feature('mesh1').set('meshdomain', 'surface');
model.result('pg6').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg6').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg6').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg6').feature('mesh1').create('sel1', 'MeshSelection');
model.result('pg6').feature('mesh1').feature('sel1').selection.set([2 3]);
model.result('pg6').feature('mesh1').set('qualmeasure', 'custom');
model.result('pg6').feature('mesh1').set('qualexpr', 'comp1.spatial.relVol');
model.result('pg6').feature('mesh1').set('colorrangeunitinterval', false);
model.result('pg3').run;
model.result('pg3').create('surf2', 'Surface');
model.result('pg3').feature('surf2').set('expr', 'solid.mises');
model.result('pg3').feature('surf2').set('colortable', 'Traffic');
model.result('pg3').run;
model.result('pg3').create('arws1', 'ArrowSurface');
model.result('pg3').run;
model.result.export.create('anim1', 'Animation');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('plotgroup', 'pg3');
model.result.export('anim1').run;
model.result('pg1').set('window', 'window1');
model.result('pg1').run;
model.result('pg1').label('Lift and Drag Forces');
model.result('pg1').set('xlabelactive', true);
model.result('pg1').set('titletype', 'manual');
model.result('pg1').set('title', 'Lift and drag forces (N)');
model.result('pg1').set('legendpos', 'middleleft');
model.result('pg1').set('window', 'window1');
model.result('pg1').run;
model.result('pg1').set('axislimits', true);
model.result('pg1').set('xmin', 4);
model.result('pg1').set('xmax', 5);
model.result('pg1').set('ymin', -160);
model.result('pg1').set('ymax', 500);
model.result('pg1').set('legendpos', 'upperright');
model.result('pg1').set('window', 'window1');
model.result('pg1').run;
model.result('pg2').set('window', 'window2');
model.result('pg2').set('windowtitle', 'Probe Plot 2');
model.result('pg2').run;
model.result('pg2').label('Beam Tip Displacement');
model.result('pg2').set('xlabelactive', true);
model.result('pg2').set('axislimits', true);
model.result('pg2').set('xmin', 4);
model.result('pg2').set('xmax', 5);
model.result('pg2').set('ymin', -40);
model.result('pg2').set('ymax', 40);
model.result('pg2').set('titletype', 'manual');
model.result('pg2').set('title', 'Beam tip displacement (mm)');
model.result('pg2').set('window', 'window2');
model.result('pg2').set('windowtitle', 'Probe Plot 2');
model.result('pg2').run;
model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').run;
model.result('pg7').label('Frequency Spectrum');
model.result('pg7').set('data', 'cpt1');
model.result('pg7').setIndex('looplevelinput', 'interp', 0);
model.result('pg7').setIndex('interp', 'range(3,5e-3,5)', 0);
model.result('pg7').create('ptgr1', 'PointGraph');
model.result('pg7').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg7').feature('ptgr1').set('linewidth', 'preference');
model.result('pg7').feature('ptgr1').set('expr', 'u_solid');
model.result('pg7').feature('ptgr1').set('unit', 'mm');
model.result('pg7').feature('ptgr1').set('xdata', 'fourier');
model.result('pg7').feature('ptgr1').set('fouriershow', 'spectrum');
model.result('pg7').feature('ptgr1').set('freqrangeactive', true);
model.result('pg7').feature('ptgr1').set('freqmin', 1);
model.result('pg7').feature('ptgr1').set('freqmax', 15);
model.result('pg7').feature.duplicate('ptgr2', 'ptgr1');
model.result('pg7').run;
model.result('pg7').feature('ptgr2').set('expr', 'v_solid');
model.result('pg7').run;
model.result.create('pg8', 'PlotGroup1D');
model.result('pg8').run;
model.result('pg8').label('Beam Tip Trajectory');
model.result('pg8').create('tblp1', 'Table');
model.result('pg8').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg8').feature('tblp1').set('linewidth', 'preference');
model.result('pg8').feature('tblp1').set('xaxisdata', 4);
model.result('pg8').feature('tblp1').set('plotcolumninput', 'manual');
model.result('pg8').feature('tblp1').set('plotcolumns', [5]);
model.result('pg8').run;
model.result('pg3').run;

model.title('Vibrating Beam in Fluid Flow');

model.description(['This is a transient Fluid' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Structure Interaction simulation of a beam vibrating in a flow. A von' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'K' native2unicode(hex2dec({'00' 'e1'}), 'unicode') 'rm' native2unicode(hex2dec({'00' 'e1'}), 'unicode') 'n vortex street appears downstream of the structure. The results are compared with a benchmark solution.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;

model.label('oscillating_fsi.mph');

model.modelNode.label('Components');

out = model;
