function out = model
%
% lithium_sulfur.m
%
% Model exported on May 26 2025, 21:25 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Battery_Design_Module/Batteries,_General');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 1);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('tcd', 'TertiaryCurrentDistributionNernstPlanck', 'geom1', {'S8' 'S8_2m' 'S6_2m' 'S4_2m' 'S2_2m' 'S_2m' 'Li_1p' 'A_1m'});

model.study.create('std1');
model.study('std1').create('cdi', 'CurrentDistributionInitialization');
model.study('std1').feature('cdi').set('solnum', 'auto');
model.study('std1').feature('cdi').set('notsolnum', 'auto');
model.study('std1').feature('cdi').set('outputmap', {});
model.study('std1').feature('cdi').set('ngenAUX', '1');
model.study('std1').feature('cdi').set('goalngenAUX', '1');
model.study('std1').feature('cdi').set('ngenAUX', '1');
model.study('std1').feature('cdi').set('goalngenAUX', '1');
model.study('std1').feature('cdi').setSolveFor('/physics/tcd', true);
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').set('initialtime', '0');
model.study('std1').feature('time').set('solnum', 'auto');
model.study('std1').feature('time').set('notsolnum', 'auto');
model.study('std1').feature('time').set('outputmap', {});
model.study('std1').feature('time').setSolveFor('/physics/tcd', true);

model.geom('geom1').run;

model.physics('tcd').prop('SpeciesProperties').set('FromElectroneutrality', 8);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('D_Li_1p', '0.88e-12[m^2/s]', 'Diffusion coefficient, Li+');
model.param.set('D_S8', '0.88e-11[m^2/s]', 'Diffusion coefficient, S_8');
model.param.set('D_S8_2m', '3.5e-12[m^2/s]', 'Diffusion coefficient, S_8^(2-)');
model.param.set('D_S6_2m', '3.5e-12[m^2/s]', 'Diffusion coefficient, S_6^(2-)');
model.param.set('D_S4_2m', '1.75e-12[m^2/s]', 'Diffusion coefficient, S_4^(2-)');
model.param.set('D_S2_2m', '0.88e-12[m^2/s]', 'Diffusion coefficient, S_2^(2-)');
model.param.set('D_S_2m', '0.88e-12[m^2/s]', 'Diffusion coefficient, S^(2-)');
model.param.set('D_A_1m', '3.5e-12[m^2/s]', 'Diffusion coefficient, salt anion');
model.param.set('c_Li_1p_ref', '1001[mol/m^3]', 'Reference concentration, Li+');
model.param.set('c_S8_ref', '19[mol/m^3]', 'Reference concentration, S_8');
model.param.set('c_S8_2m_ref', '0.18[mol/m^3]', 'Reference concentration, S_8^(2-)');
model.param.set('c_S6_2m_ref', '0.32[mol/m^3]', 'Reference concentration, S_6^(2-)');
model.param.set('c_S4_2m_ref', '0.02[mol/m^3]', 'Reference concentration, S_4^(2-)');
model.param.set('c_S2_2m_ref', '5.23e-7[mol/m^3]', 'Reference concentration, S_2^(2-)');
model.param.set('c_S_2m_ref', '8.27e-10[mol/m^3]', 'Reference concentration, S^(2-)');
model.param.set('c_A_1m_ref', '1000[mol/m^3]', 'Reference concentration, salt anion');
model.param.set('L_sep', '25e-6[m]', 'Separator thickness');
model.param.set('L_pos', '20e-6[m]', 'Electrode thickness');
model.param.set('A_cell', '0.28[m^2]', 'Cell area');
model.param.set('Av_0', '132762[m^2/m^3]', 'Specific surface area');
model.param.set('epsl_sep_0', '0.5', 'Electrolyte volume fraction of separator without deposits');
model.param.set('epsl_pos_0', '0.7', 'Electrolyte volume fraction of positive electrode without deposits');
model.param.set('eps_S8_s_sep_0', '1e-12', 'Initial volume fraction in separator of S8(s)');
model.param.set('eps_S8_s_pos_0', '0.166', 'Initial volume fraction in electrode of S8(s)');
model.param.set('eps_Li2S_s_sep_0', '1e-7', 'Initial volume fraction in separator of Li2S(s)');
model.param.set('eps_Li2S_s_pos_0', '1e-7', 'Initial volume fraction in electrode of Li2S(s)');
model.param.set('sigma_s', '1[S/m]', 'Electric conductivity, electrode');
model.param.set('k_S8_s', '5[1/s]', 'Rate constant, S8(s) deposition-dissolution');
model.param.set('Ksp_S8_s', '19[mol/m^3]', 'Solubility product');
model.param.set('Vm_S8_s', '1.24e-4[m^3/mol]', 'Molar volume, S8(s)');
model.param.set('k_Li2S_s', '3.45e-5[m^6*mol^-2/s]', 'Rate constant, Li2S(s) deposition-dissolution');
model.param.set('Ksp_Li2S_s', '1e2[mol^3*m^-9]', 'Solubility product');
model.param.set('Vm_Li2S_s', '2.4e-5[m^3/mol]', 'Molar volume, Li2S(s)');
model.param.set('M_Li2S_s', '(32.07+2*6.941)[g/mol]', 'Molar mass, Li2S(s)');
model.param.set('M_S8_s', '8*32.07[g/mol]', 'Molar mass, S8(s)');
model.param.set('rho_Li2S_s', 'M_Li2S_s/Vm_Li2S_s', 'Density, Li2S(s)');
model.param.set('rho_S8_s', 'M_S8_s/Vm_S8_s', 'Density, S8(s)');
model.param.set('Eeq_Li_ref', '0[V]-R_const*T/F_const*log((c_Li_1p_ref/1[M])^(-1))', 'Equilibrium potential at reference concentrations, Li/Li+ reaction');
model.param.set('Eeq_1_ref', '2.41[V]-R_const*T/F_const*log((c_S8_ref       /1[M])^(-1/2) *(c_S8_2m_ref/1[M])^(1/2))', 'Equilibrium potential at reference concentrations, reaction 1');
model.param.set('Eeq_2_ref', '2.35[V]-R_const*T/F_const*log((c_S8_2m_ref/1[M])^(-3/2)*(c_S6_2m_ref/1[M])^2)', 'Equilibrium potential at reference concentrations, reaction 2');
model.param.set('Eeq_3_ref', '2.23[V]-R_const*T/F_const*log((c_S6_2m_ref/1[M])^(-1)    *(c_S4_2m_ref/1[M])^(3/2))', 'Equilibrium potential at reference concentrations, reaction 3');
model.param.set('Eeq_4_ref', '2.03[V]-R_const*T/F_const*log((c_S4_2m_ref/1[M])^(-1/2) *(c_S2_2m_ref/1[M])^(1))', 'Equilibrium potential at reference concentrations, reaction 4');
model.param.set('Eeq_5_ref', '2.01[V]-R_const*T/F_const*log((c_S2_2m_ref/1[M])^(-1/2) *(c_S_2m_ref  /1[M])^(1))', 'Equilibrium potential at reference concentrations, reaction 5');
model.param.set('i0_Li_ref', '0.5[A/m^2]', 'Exchange current density at reference concentrations, Li/Li+ reaction');
model.param.set('i0_1_ref', '1.9[A/m^2]', 'Exchange current density at reference concentrations, reaction 1');
model.param.set('i0_2_ref', '0.02[A/m^2]', 'Exchange current density at reference concentrations, reaction 2');
model.param.set('i0_3_ref', '0.02[A/m^2]', 'Exchange current density at reference concentrations, reaction 3');
model.param.set('i0_4_ref', '2e-4[A/m^2]', 'Exchange current density at reference concentrations, reaction 4');
model.param.set('i0_5_ref', '2e-9[A/m^2]*0+2e-7[A/m^2]', 'Exchange current density at reference concentrations, reaction 5');
model.param.set('Cap', '16*(c_S8_ref+eps_S8_s_pos_0/Vm_S8_s)*L_pos*F_const', 'Cell capacity (theoretical)');
model.param.set('i_1C', 'Cap_nom/1[h]', '1C current density');
model.param.set('Cap_nom', '3.4[A*h]/A_cell', 'Cell capacity (nominal)');
model.param.set('C', '0.2', 'C-rate');
model.param.set('T', '30[degC]', 'Temperature');

model.geom('geom1').create('i1', 'Interval');
model.geom('geom1').feature('i1').set('specify', 'len');
model.geom('geom1').feature('i1').setIndex('len', 'L_sep', 0);
model.geom('geom1').feature('i1').setIndex('len', 'L_pos', 1);
model.geom('geom1').run('i1');
model.geom('geom1').run;

model.physics('tcd').feature('sp1').setIndex('z', -2, 1);
model.physics('tcd').feature('sp1').setIndex('z', -2, 2);
model.physics('tcd').feature('sp1').setIndex('z', -2, 3);
model.physics('tcd').feature('sp1').setIndex('z', -2, 4);
model.physics('tcd').feature('sp1').setIndex('z', -2, 5);
model.physics('tcd').feature('sp1').setIndex('z', 1, 6);
model.physics('tcd').feature('sp1').setIndex('z', -1, 7);
model.physics('tcd').create('sep1', 'Separator', 1);
model.physics('tcd').feature('sep1').selection.set([1]);
model.physics('tcd').feature('sep1').set('D_S8', {'D_S8' '0' '0' '0' 'D_S8' '0' '0' '0' 'D_S8'});
model.physics('tcd').feature('sep1').set('D_S8_2m', {'D_S8_2m' '0' '0' '0' 'D_S8_2m' '0' '0' '0' 'D_S8_2m'});
model.physics('tcd').feature('sep1').set('D_S6_2m', {'D_S6_2m' '0' '0' '0' 'D_S6_2m' '0' '0' '0' 'D_S6_2m'});
model.physics('tcd').feature('sep1').set('D_S4_2m', {'D_S4_2m' '0' '0' '0' 'D_S4_2m' '0' '0' '0' 'D_S4_2m'});
model.physics('tcd').feature('sep1').set('D_S2_2m', {'D_S2_2m' '0' '0' '0' 'D_S2_2m' '0' '0' '0' 'D_S2_2m'});
model.physics('tcd').feature('sep1').set('D_S_2m', {'D_S_2m' '0' '0' '0' 'D_S_2m' '0' '0' '0' 'D_S_2m'});
model.physics('tcd').feature('sep1').set('D_Li_1p', {'D_Li_1p' '0' '0' '0' 'D_Li_1p' '0' '0' '0' 'D_Li_1p'});
model.physics('tcd').feature('sep1').set('D_A_1m', {'D_A_1m' '0' '0' '0' 'D_A_1m' '0' '0' '0' 'D_A_1m'});
model.physics('tcd').feature('sep1').set('epsl', 'epsl_sep_0');
model.physics('tcd').create('pce1', 'PorousElectrode', 1);
model.physics('tcd').feature('pce1').selection.set([2]);
model.physics('tcd').feature('pce1').set('D_S8', {'D_S8' '0' '0' '0' 'D_S8' '0' '0' '0' 'D_S8'});
model.physics('tcd').feature('pce1').set('D_S8_2m', {'D_S8_2m' '0' '0' '0' 'D_S8_2m' '0' '0' '0' 'D_S8_2m'});
model.physics('tcd').feature('pce1').set('D_S6_2m', {'D_S6_2m' '0' '0' '0' 'D_S6_2m' '0' '0' '0' 'D_S6_2m'});
model.physics('tcd').feature('pce1').set('D_S4_2m', {'D_S4_2m' '0' '0' '0' 'D_S4_2m' '0' '0' '0' 'D_S4_2m'});
model.physics('tcd').feature('pce1').set('D_S2_2m', {'D_S2_2m' '0' '0' '0' 'D_S2_2m' '0' '0' '0' 'D_S2_2m'});
model.physics('tcd').feature('pce1').set('D_S_2m', {'D_S_2m' '0' '0' '0' 'D_S_2m' '0' '0' '0' 'D_S_2m'});
model.physics('tcd').feature('pce1').set('D_Li_1p', {'D_Li_1p' '0' '0' '0' 'D_Li_1p' '0' '0' '0' 'D_Li_1p'});
model.physics('tcd').feature('pce1').set('D_A_1m', {'D_A_1m' '0' '0' '0' 'D_A_1m' '0' '0' '0' 'D_A_1m'});
model.physics('tcd').feature('pce1').set('sigma_mat', 'userdef');
model.physics('tcd').feature('pce1').set('sigma', {'sigma_s' '0' '0' '0' 'sigma_s' '0' '0' '0' 'sigma_s'});
model.physics('tcd').feature('pce1').set('epss', '1-epsl_pos_0');
model.physics('tcd').feature('pce1').set('epsl', 'epsl_pos_0');
model.physics('tcd').feature('pce1').set('ElectricCorrModel', 'NoCorr');
model.physics('tcd').feature('pce1').feature('per1').setIndex('Vi0', '-1/2', 0);
model.physics('tcd').feature('pce1').feature('per1').setIndex('Vi0', '1/2', 1);
model.physics('tcd').feature('pce1').feature('per1').set('Eeq_ref', 'Eeq_1_ref');
model.physics('tcd').feature('pce1').feature('per1').setIndex('cref', 'c_S8_ref', 0, 0);
model.physics('tcd').feature('pce1').feature('per1').setIndex('cref', 'c_S8_2m_ref', 1, 0);
model.physics('tcd').feature('pce1').feature('per1').set('i0_ref', 'i0_1_ref');
model.physics('tcd').feature('pce1').create('per2', 'PorousElectrodeReaction', 1);
model.physics('tcd').feature('pce1').feature('per2').setIndex('Vi0', '-3/2', 1);
model.physics('tcd').feature('pce1').feature('per2').setIndex('Vi0', 2, 2);
model.physics('tcd').feature('pce1').feature('per2').set('Eeq_ref', 'Eeq_2_ref');
model.physics('tcd').feature('pce1').feature('per2').setIndex('cref', 'c_S8_2m_ref', 1, 0);
model.physics('tcd').feature('pce1').feature('per2').setIndex('cref', 'c_S6_2m_ref', 2, 0);
model.physics('tcd').feature('pce1').feature('per2').set('i0_ref', 'i0_2_ref');
model.physics('tcd').feature('pce1').create('per3', 'PorousElectrodeReaction', 1);
model.physics('tcd').feature('pce1').feature('per3').setIndex('Vi0', -1, 2);
model.physics('tcd').feature('pce1').feature('per3').setIndex('Vi0', '3/2', 3);
model.physics('tcd').feature('pce1').feature('per3').set('Eeq_ref', 'Eeq_3_ref');
model.physics('tcd').feature('pce1').feature('per3').setIndex('cref', 'c_S6_2m_ref', 2, 0);
model.physics('tcd').feature('pce1').feature('per3').setIndex('cref', 'c_S4_2m_ref', 3, 0);
model.physics('tcd').feature('pce1').feature('per3').set('i0_ref', 'i0_3_ref');
model.physics('tcd').feature('pce1').create('per4', 'PorousElectrodeReaction', 1);
model.physics('tcd').feature('pce1').feature('per4').setIndex('Vi0', '-1/2', 3);
model.physics('tcd').feature('pce1').feature('per4').setIndex('Vi0', 1, 4);
model.physics('tcd').feature('pce1').feature('per4').set('Eeq_ref', 'Eeq_4_ref');
model.physics('tcd').feature('pce1').feature('per4').setIndex('cref', 'c_S4_2m_ref', 3, 0);
model.physics('tcd').feature('pce1').feature('per4').setIndex('cref', 'c_S2_2m_ref', 4, 0);
model.physics('tcd').feature('pce1').feature('per4').set('i0_ref', 'i0_4_ref');
model.physics('tcd').feature('pce1').create('per5', 'PorousElectrodeReaction', 1);
model.physics('tcd').feature('pce1').feature('per5').setIndex('Vi0', '-1/2', 4);
model.physics('tcd').feature('pce1').feature('per5').setIndex('Vi0', 1, 5);
model.physics('tcd').feature('pce1').feature('per5').set('Eeq_ref', 'Eeq_5_ref');
model.physics('tcd').feature('pce1').feature('per5').setIndex('cref', 'c_S2_2m_ref', 4, 0);
model.physics('tcd').feature('pce1').feature('per5').setIndex('cref', 'c_S_2m_ref', 5, 0);
model.physics('tcd').feature('pce1').feature('per5').set('i0_ref', 'i0_5_ref');
model.physics('tcd').feature('sep1').setIndex('Species', 's1', 0, 0);
model.physics('tcd').feature('sep1').setIndex('rhos', 8960, 0, 0);
model.physics('tcd').feature('sep1').setIndex('Ms', 0.06355, 0, 0);
model.physics('tcd').feature('sep1').setIndex('Species', 's1', 0, 0);
model.physics('tcd').feature('sep1').setIndex('rhos', 8960, 0, 0);
model.physics('tcd').feature('sep1').setIndex('Ms', 0.06355, 0, 0);
model.physics('tcd').feature('sep1').setIndex('Species', 'Li2S_s', 0, 0);
model.physics('tcd').feature('sep1').setIndex('rhos', 'rho_Li2S_s', 0, 0);
model.physics('tcd').feature('sep1').setIndex('Ms', 'M_Li2S_s', 0, 0);
model.physics('tcd').feature('sep1').setIndex('Species', 's1', 1, 0);
model.physics('tcd').feature('sep1').setIndex('rhos', 8960, 1, 0);
model.physics('tcd').feature('sep1').setIndex('Ms', 0.06355, 1, 0);
model.physics('tcd').feature('sep1').setIndex('rhos', 8960, 1, 0);
model.physics('tcd').feature('sep1').setIndex('Ms', 0.06355, 1, 0);
model.physics('tcd').feature('sep1').setIndex('Species', 's1', 1, 0);
model.physics('tcd').feature('sep1').setIndex('rhos', 8960, 1, 0);
model.physics('tcd').feature('sep1').setIndex('Ms', 0.06355, 1, 0);
model.physics('tcd').feature('sep1').setIndex('Species', 'S8_s', 1, 0);
model.physics('tcd').feature('sep1').setIndex('rhos', 'rho_S8_s', 1, 0);
model.physics('tcd').feature('sep1').setIndex('Ms', 'M_S8_s', 1, 0);
model.physics('tcd').feature('pce1').setIndex('Species', 's1', 0, 0);
model.physics('tcd').feature('pce1').setIndex('rhos', 8960, 0, 0);
model.physics('tcd').feature('pce1').setIndex('Ms', 0.06355, 0, 0);
model.physics('tcd').feature('pce1').setIndex('Species', 's1', 0, 0);
model.physics('tcd').feature('pce1').setIndex('rhos', 8960, 0, 0);
model.physics('tcd').feature('pce1').setIndex('Ms', 0.06355, 0, 0);
model.physics('tcd').feature('pce1').setIndex('Species', 'Li2S_s', 0, 0);
model.physics('tcd').feature('pce1').setIndex('rhos', 'rho_Li2S_s', 0, 0);
model.physics('tcd').feature('pce1').setIndex('Ms', 'M_Li2S_s', 0, 0);
model.physics('tcd').feature('pce1').setIndex('Species', 's1', 1, 0);
model.physics('tcd').feature('pce1').setIndex('rhos', 8960, 1, 0);
model.physics('tcd').feature('pce1').setIndex('Ms', 0.06355, 1, 0);
model.physics('tcd').feature('pce1').setIndex('rhos', 8960, 1, 0);
model.physics('tcd').feature('pce1').setIndex('Ms', 0.06355, 1, 0);
model.physics('tcd').feature('pce1').setIndex('Species', 's1', 1, 0);
model.physics('tcd').feature('pce1').setIndex('rhos', 8960, 1, 0);
model.physics('tcd').feature('pce1').setIndex('Ms', 0.06355, 1, 0);
model.physics('tcd').feature('pce1').setIndex('Species', 'S8_s', 1, 0);
model.physics('tcd').feature('pce1').setIndex('rhos', 'rho_S8_s', 1, 0);
model.physics('tcd').feature('pce1').setIndex('Ms', 'M_S8_s', 1, 0);

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').label('Variables - Separator');
model.variable('var1').selection.geom('geom1', 1);
model.variable('var1').selection.set([1]);

% To import content from file, use:
% model.variable('var1').loadFile('FILENAME');
model.variable('var1').set('eps_Li2S_s', 'tcd.c_sep1_Li2S_s*Vm_Li2S_s', 'Volume fraction, Li2S(s)');
model.variable('var1').set('eps_S8_s', 'tcd.c_sep1_S8_s*Vm_S8_s', 'Volume fraction, S8(s)');
model.variable.create('var2');
model.variable('var2').model('comp1');
model.variable('var2').label('Variables - Positive Electrode');
model.variable('var2').selection.geom('geom1', 1);
model.variable('var2').selection.set([2]);

% To import content from file, use:
% model.variable('var2').loadFile('FILENAME');
model.variable('var2').set('Av_pos', 'Av_0*(tcd.epsl/epsl_pos_0)^1.5', 'Specific surface area');
model.variable('var2').set('eps_Li2S_s', 'tcd.c_pce1_Li2S_s*Vm_Li2S_s', 'Volume fraction. Li2S(s)');
model.variable('var2').set('eps_S8_s', 'tcd.c_pce1_S8_s*Vm_S8_s', 'Volume fraction, S8(s)');
model.variable.create('var3');
model.variable('var3').model('comp1');
model.variable('var3').label('Variables - All Domains');

% To import content from file, use:
% model.variable('var3').loadFile('FILENAME');
model.variable('var3').set('R_Li2S_s', 'k_Li2S_s*max(eps_Li2S_s,eps)*(max(Li_1p,eps)^2*max(S_2m,eps)-Ksp_Li2S_s)', 'Reaction rate, Li2S(s) precipitation');
model.variable('var3').set('R_S8_s', 'k_S8_s*max(eps_S8_s,eps)*(S8-Ksp_S8_s)', 'Reaction rate, S8(s) precipitation');

model.physics('tcd').feature('sep1').feature('nfr1').label('Non-Faradaic Reactions - Li2S(s)');
model.physics('tcd').feature('sep1').feature('nfr1').setIndex('R_S_2m', '-R_Li2S_s/tcd.epsl', 0);
model.physics('tcd').feature('sep1').feature('nfr1').setIndex('R_Li_1p', '-2*R_Li2S_s/tcd.epsl', 0);
model.physics('tcd').feature('sep1').feature('nfr1').setIndex('R', 'R_Li2S_s', 0, 0);
model.physics('tcd').feature('sep1').create('nfr2', 'NonFaradaicReactions', 1);
model.physics('tcd').feature('sep1').feature('nfr2').label('Non-Faradaic Reactions - S8(s)');
model.physics('tcd').feature('sep1').feature('nfr2').setIndex('R_S8', '-R_S8_s/tcd.epsl', 0);
model.physics('tcd').feature('sep1').feature('nfr2').setIndex('R', 'R_S8_s', 1, 0);
model.physics('tcd').feature('sep1').create('ivdds1', 'InitialValuesForDissolvingDepositingSpecies', 1);
model.physics('tcd').feature('sep1').feature('ivdds1').setIndex('c0', 'eps_Li2S_s_sep_0/Vm_Li2S_s', 0, 0);
model.physics('tcd').feature('sep1').feature('ivdds1').setIndex('c0', 'eps_S8_s_sep_0/Vm_S8_s', 1, 0);
model.physics('tcd').feature('pce1').create('nfr1', 'NonFaradaicReactions', 1);
model.physics('tcd').feature('pce1').feature('nfr1').label('Non-Faradaic Reactions - Li2S(s)');
model.physics('tcd').feature('pce1').feature('nfr1').setIndex('R_S_2m', '-R_Li2S_s/tcd.epsl', 0);
model.physics('tcd').feature('pce1').feature('nfr1').setIndex('R_Li_1p', '-2*R_Li2S_s/tcd.epsl', 0);
model.physics('tcd').feature('pce1').feature('nfr1').setIndex('R', 'R_Li2S_s', 0, 0);
model.physics('tcd').feature('pce1').create('nfr2', 'NonFaradaicReactions', 1);
model.physics('tcd').feature('pce1').feature('nfr2').label('Non-Faradaic Reactions - S8(s)');
model.physics('tcd').feature('pce1').feature('nfr2').setIndex('R_S8', '-R_S8_s/tcd.epsl', 0);
model.physics('tcd').feature('pce1').feature('nfr2').setIndex('R', 'R_S8_s', 1, 0);
model.physics('tcd').feature('pce1').create('ivdds1', 'InitialValuesForDissolvingDepositingSpecies', 1);
model.physics('tcd').feature('pce1').feature('ivdds1').setIndex('c0', 'eps_Li2S_s_pos_0/Vm_Li2S_s', 0, 0);
model.physics('tcd').feature('pce1').feature('ivdds1').setIndex('c0', 'eps_S8_s_pos_0/Vm_S8_s', 1, 0);
model.physics('tcd').feature('pce1').feature('per1').set('Av', 'Av_pos');
model.physics('tcd').feature('pce1').feature('per2').set('Av', 'Av_pos');
model.physics('tcd').feature('pce1').feature('per3').set('Av', 'Av_pos');
model.physics('tcd').feature('pce1').feature('per4').set('Av', 'Av_pos');
model.physics('tcd').feature('pce1').feature('per5').set('Av', 'Av_pos');
model.physics('tcd').create('es1', 'ElectrodeSurface', 0);
model.physics('tcd').feature('es1').selection.set([1]);
model.physics('tcd').feature('es1').feature('er1').setIndex('Vi0', -1, 6);
model.physics('tcd').feature('es1').feature('er1').set('Eeq_ref', 'Eeq_Li_ref');
model.physics('tcd').feature('es1').feature('er1').set('i0_ref', 'i0_Li_ref');
model.physics('tcd').create('ecd1', 'ElectrodeNormalCurrentDensity', 0);
model.physics('tcd').feature('ecd1').selection.set([3]);
model.physics('tcd').feature('ecd1').set('nis', '-i_1C*C');
model.physics('tcd').feature('init1').setIndex('initc', 'c_S8_ref', 0);
model.physics('tcd').feature('init1').setIndex('initc', 'c_S8_2m_ref', 1);
model.physics('tcd').feature('init1').setIndex('initc', 'c_S6_2m_ref', 2);
model.physics('tcd').feature('init1').setIndex('initc', 'c_S4_2m_ref', 3);
model.physics('tcd').feature('init1').setIndex('initc', 'c_S2_2m_ref', 4);
model.physics('tcd').feature('init1').setIndex('initc', 'c_S_2m_ref', 5);
model.physics('tcd').feature('init1').setIndex('initc', 'c_Li_1p_ref', 6);
model.physics('tcd').feature('init1').set('initphis', 'Eeq_1_ref');

model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('edg1').create('size1', 'Size');
model.mesh('mesh1').feature('edg1').feature('size1').selection.geom('geom1', 0);
model.mesh('mesh1').feature('edg1').feature('size1').selection.set([2]);
model.mesh('mesh1').feature('edg1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('edg1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('edg1').feature('size1').set('hmax', '1e-7');
model.mesh('mesh1').run;

model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'D_Li_1p', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm^2/s', 0);
model.study('std1').feature('param').setIndex('pname', 'D_Li_1p', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm^2/s', 0);
model.study('std1').feature('param').setIndex('pname', 'C', 0);
model.study('std1').feature('param').setIndex('plistarr', '0.2 1', 0);
model.study('std1').feature('time').set('tunit', 'h');
model.study('std1').feature('time').set('tlist', 'range(0,0.01/C,1/C)');

model.probe.create('pdom1', 'DomainPoint');
model.probe('pdom1').model('comp1');
model.probe('pdom1').setIndex('coords1', 'L_sep+L_pos', 0);
model.probe('pdom1').set('bndsnap1', true);
model.probe('pdom1').feature('ppb1').set('expr', 'phis');
model.probe('pdom1').feature('ppb1').set('descr', 'Electric potential');

model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl('intop1').set('axisym', true);
model.cpl('intop1').set('opname', 'intop_pos_cc');
model.cpl('intop1').selection.geom('geom1', 0);
model.cpl('intop1').selection.set([3]);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'cdi');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_phil').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_phis').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_phil').set('scaleval', '1');
model.sol('sol1').feature('v1').feature('comp1_phis').set('scaleval', '1');
model.sol('sol1').feature('v1').set('control', 'cdi');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 1.0E-4);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').label('Direct (tcd)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('Algebraic Multigrid (tcd)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').create('i2', 'Iterative');
model.sol('sol1').feature('s1').feature('i2').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i2').label('Geometric Multigrid (tcd)');
model.sol('sol1').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'time');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').feature('comp1_phil').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_phis').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_phil').set('scaleval', '1');
model.sol('sol1').feature('v2').feature('comp1_phis').set('scaleval', '1');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('initsoluse', 'sol2');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('notsoluse', 'sol2');
model.sol('sol1').feature('v2').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.01/C,1/C)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {'pdom1'});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('eventout', true);
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').label('Direct (tcd)');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i1').label('Algebraic Multigrid (tcd)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('compactaggregation', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').create('i2', 'Iterative');
model.sol('sol1').feature('t1').feature('i2').set('maxlinit', 1000);
model.sol('sol1').feature('t1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i2').label('Geometric Multigrid (tcd)');
model.sol('sol1').feature('t1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'C'});
model.batch('p1').set('plistarr', {'0.2 1'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {'pdom1'});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol('sol1').feature('t1').create('st1', 'StopCondition');
model.sol('sol1').feature('t1').feature('st1').setIndex('stopcondarr', '', 0);
model.sol('sol1').feature('t1').feature('st1').setIndex('stopcondterminateon', 'true', 0);
model.sol('sol1').feature('t1').feature('st1').setIndex('stopcondActive', true, 0);
model.sol('sol1').feature('t1').feature('st1').setIndex('stopconddesc', 'Stop expression 1', 0);
model.sol('sol1').feature('t1').feature('st1').setIndex('stopcondarr', '', 0);
model.sol('sol1').feature('t1').feature('st1').setIndex('stopcondterminateon', 'true', 0);
model.sol('sol1').feature('t1').feature('st1').setIndex('stopcondActive', true, 0);
model.sol('sol1').feature('t1').feature('st1').setIndex('stopconddesc', 'Stop expression 1', 0);
model.sol('sol1').feature('t1').feature('st1').setIndex('stopcondarr', 'comp1.intop_pos_cc(comp1.phis)<1.7', 0);
model.sol('sol1').feature('t1').feature('st1').set('stopcondwarn', false);
model.sol.create('sol3');
model.sol('sol3').study('std1');
model.sol('sol3').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol3');

model.probe('pdom1').genResult('none');

model.batch('p1').run('compute');

model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').set('data', 'dset3');
model.result('pg2').create('ptgr1', 'PointGraph');
model.result('pg2').feature('ptgr1').selection.all;
model.result('pg2').feature('ptgr1').set('expr', {'phis'});
model.result('pg2').feature('ptgr1').selection.set([3]);
model.result('pg2').label('Boundary Electrode Potential with Respect to Ground (tcd)');
model.result('pg2').feature('ptgr1').set('xdatasolnumtype', 'level1');
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').set('data', 'dset3');
model.result('pg3').label('Electrolyte Potential (tcd)');
model.result('pg3').create('lngr1', 'LineGraph');
model.result('pg3').feature('lngr1').set('xdata', 'expr');
model.result('pg3').feature('lngr1').set('xdataexpr', 'x');
model.result('pg3').feature('lngr1').selection.geom('geom1', 1);
model.result('pg3').feature('lngr1').selection.set([1 2]);
model.result('pg3').feature('lngr1').set('expr', {'phil'});
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').set('data', 'dset3');
model.result('pg4').label('Electrode Potential with Respect to Ground (tcd)');
model.result('pg4').create('lngr1', 'LineGraph');
model.result('pg4').feature('lngr1').set('xdata', 'expr');
model.result('pg4').feature('lngr1').set('xdataexpr', 'x');
model.result('pg4').feature('lngr1').selection.geom('geom1', 1);
model.result('pg4').feature('lngr1').selection.set([1 2]);
model.result('pg4').feature('lngr1').set('expr', {'phis'});
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').set('data', 'dset3');
model.result('pg5').set('titletype', 'manual');
model.result('pg5').set('title', 'Concentrations, All Species');
model.result('pg5').label('Concentrations, All Species (tcd)');
model.result('pg5').create('lngr1', 'LineGraph');
model.result('pg5').feature('lngr1').set('xdata', 'expr');
model.result('pg5').feature('lngr1').set('xdataexpr', 'x');
model.result('pg5').feature('lngr1').selection.geom('geom1', 1);
model.result('pg5').feature('lngr1').selection.set([1 2]);
model.result('pg5').feature('lngr1').set('expr', {'S8'});
model.result('pg5').feature('lngr1').label('Species S8');
model.result('pg5').feature('lngr1').set('legend', true);
model.result('pg5').feature('lngr1').set('autosolution', false);
model.result('pg5').feature('lngr1').set('autoexpr', false);
model.result('pg5').feature('lngr1').set('autodescr', false);
model.result('pg5').feature('lngr1').set('legendprefix', 'S8 ');
model.result('pg5').create('lngr2', 'LineGraph');
model.result('pg5').feature('lngr2').set('xdata', 'expr');
model.result('pg5').feature('lngr2').set('xdataexpr', 'x');
model.result('pg5').feature('lngr2').selection.geom('geom1', 1);
model.result('pg5').feature('lngr2').selection.set([1 2]);
model.result('pg5').feature('lngr2').set('expr', {'S8_2m'});
model.result('pg5').feature('lngr2').label('Species S8_2m');
model.result('pg5').feature('lngr2').set('legend', true);
model.result('pg5').feature('lngr2').set('autosolution', false);
model.result('pg5').feature('lngr2').set('autoexpr', false);
model.result('pg5').feature('lngr2').set('autodescr', false);
model.result('pg5').feature('lngr2').set('legendprefix', 'S8_2m ');
model.result('pg5').create('lngr3', 'LineGraph');
model.result('pg5').feature('lngr3').set('xdata', 'expr');
model.result('pg5').feature('lngr3').set('xdataexpr', 'x');
model.result('pg5').feature('lngr3').selection.geom('geom1', 1);
model.result('pg5').feature('lngr3').selection.set([1 2]);
model.result('pg5').feature('lngr3').set('expr', {'S6_2m'});
model.result('pg5').feature('lngr3').label('Species S6_2m');
model.result('pg5').feature('lngr3').set('legend', true);
model.result('pg5').feature('lngr3').set('autosolution', false);
model.result('pg5').feature('lngr3').set('autoexpr', false);
model.result('pg5').feature('lngr3').set('autodescr', false);
model.result('pg5').feature('lngr3').set('legendprefix', 'S6_2m ');
model.result('pg5').create('lngr4', 'LineGraph');
model.result('pg5').feature('lngr4').set('xdata', 'expr');
model.result('pg5').feature('lngr4').set('xdataexpr', 'x');
model.result('pg5').feature('lngr4').selection.geom('geom1', 1);
model.result('pg5').feature('lngr4').selection.set([1 2]);
model.result('pg5').feature('lngr4').set('expr', {'S4_2m'});
model.result('pg5').feature('lngr4').label('Species S4_2m');
model.result('pg5').feature('lngr4').set('legend', true);
model.result('pg5').feature('lngr4').set('autosolution', false);
model.result('pg5').feature('lngr4').set('autoexpr', false);
model.result('pg5').feature('lngr4').set('autodescr', false);
model.result('pg5').feature('lngr4').set('legendprefix', 'S4_2m ');
model.result('pg5').create('lngr5', 'LineGraph');
model.result('pg5').feature('lngr5').set('xdata', 'expr');
model.result('pg5').feature('lngr5').set('xdataexpr', 'x');
model.result('pg5').feature('lngr5').selection.geom('geom1', 1);
model.result('pg5').feature('lngr5').selection.set([1 2]);
model.result('pg5').feature('lngr5').set('expr', {'S2_2m'});
model.result('pg5').feature('lngr5').label('Species S2_2m');
model.result('pg5').feature('lngr5').set('legend', true);
model.result('pg5').feature('lngr5').set('autosolution', false);
model.result('pg5').feature('lngr5').set('autoexpr', false);
model.result('pg5').feature('lngr5').set('autodescr', false);
model.result('pg5').feature('lngr5').set('legendprefix', 'S2_2m ');
model.result('pg5').create('lngr6', 'LineGraph');
model.result('pg5').feature('lngr6').set('xdata', 'expr');
model.result('pg5').feature('lngr6').set('xdataexpr', 'x');
model.result('pg5').feature('lngr6').selection.geom('geom1', 1);
model.result('pg5').feature('lngr6').selection.set([1 2]);
model.result('pg5').feature('lngr6').set('expr', {'S_2m'});
model.result('pg5').feature('lngr6').label('Species S_2m');
model.result('pg5').feature('lngr6').set('legend', true);
model.result('pg5').feature('lngr6').set('autosolution', false);
model.result('pg5').feature('lngr6').set('autoexpr', false);
model.result('pg5').feature('lngr6').set('autodescr', false);
model.result('pg5').feature('lngr6').set('legendprefix', 'S_2m ');
model.result('pg5').create('lngr7', 'LineGraph');
model.result('pg5').feature('lngr7').set('xdata', 'expr');
model.result('pg5').feature('lngr7').set('xdataexpr', 'x');
model.result('pg5').feature('lngr7').selection.geom('geom1', 1);
model.result('pg5').feature('lngr7').selection.set([1 2]);
model.result('pg5').feature('lngr7').set('expr', {'Li_1p'});
model.result('pg5').feature('lngr7').label('Species Li_1p');
model.result('pg5').feature('lngr7').set('legend', true);
model.result('pg5').feature('lngr7').set('autosolution', false);
model.result('pg5').feature('lngr7').set('autoexpr', false);
model.result('pg5').feature('lngr7').set('autodescr', false);
model.result('pg5').feature('lngr7').set('legendprefix', 'Li_1p ');
model.result('pg5').create('lngr8', 'LineGraph');
model.result('pg5').feature('lngr8').set('xdata', 'expr');
model.result('pg5').feature('lngr8').set('xdataexpr', 'x');
model.result('pg5').feature('lngr8').selection.geom('geom1', 1);
model.result('pg5').feature('lngr8').selection.set([1 2]);
model.result('pg5').feature('lngr8').set('expr', {'A_1m'});
model.result('pg5').feature('lngr8').label('Species A_1m');
model.result('pg5').feature('lngr8').set('legend', true);
model.result('pg5').feature('lngr8').set('autosolution', false);
model.result('pg5').feature('lngr8').set('autoexpr', false);
model.result('pg5').feature('lngr8').set('autodescr', false);
model.result('pg5').feature('lngr8').set('legendprefix', 'A_1m ');
model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').set('data', 'dset3');
model.result('pg6').label('Concentration, S8 (tcd)');
model.result('pg6').set('titletype', 'custom');
model.result('pg6').set('prefixintitle', 'Species S8:');
model.result('pg6').set('expressionintitle', false);
model.result('pg6').set('typeintitle', false);
model.result('pg6').create('lngr1', 'LineGraph');
model.result('pg6').feature('lngr1').set('xdata', 'expr');
model.result('pg6').feature('lngr1').set('xdataexpr', 'x');
model.result('pg6').feature('lngr1').selection.geom('geom1', 1);
model.result('pg6').feature('lngr1').selection.set([1 2]);
model.result('pg6').feature('lngr1').set('expr', {'S8'});
model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').set('data', 'dset3');
model.result('pg7').label('Concentration, S8_2m (tcd)');
model.result('pg7').set('titletype', 'custom');
model.result('pg7').set('prefixintitle', 'Species S8_2m:');
model.result('pg7').set('expressionintitle', false);
model.result('pg7').set('typeintitle', false);
model.result('pg7').create('lngr1', 'LineGraph');
model.result('pg7').feature('lngr1').set('xdata', 'expr');
model.result('pg7').feature('lngr1').set('xdataexpr', 'x');
model.result('pg7').feature('lngr1').selection.geom('geom1', 1);
model.result('pg7').feature('lngr1').selection.set([1 2]);
model.result('pg7').feature('lngr1').set('expr', {'S8_2m'});
model.result.create('pg8', 'PlotGroup1D');
model.result('pg8').set('data', 'dset3');
model.result('pg8').label('Concentration, S6_2m (tcd)');
model.result('pg8').set('titletype', 'custom');
model.result('pg8').set('prefixintitle', 'Species S6_2m:');
model.result('pg8').set('expressionintitle', false);
model.result('pg8').set('typeintitle', false);
model.result('pg8').create('lngr1', 'LineGraph');
model.result('pg8').feature('lngr1').set('xdata', 'expr');
model.result('pg8').feature('lngr1').set('xdataexpr', 'x');
model.result('pg8').feature('lngr1').selection.geom('geom1', 1);
model.result('pg8').feature('lngr1').selection.set([1 2]);
model.result('pg8').feature('lngr1').set('expr', {'S6_2m'});
model.result.create('pg9', 'PlotGroup1D');
model.result('pg9').set('data', 'dset3');
model.result('pg9').label('Concentration, S4_2m (tcd)');
model.result('pg9').set('titletype', 'custom');
model.result('pg9').set('prefixintitle', 'Species S4_2m:');
model.result('pg9').set('expressionintitle', false);
model.result('pg9').set('typeintitle', false);
model.result('pg9').create('lngr1', 'LineGraph');
model.result('pg9').feature('lngr1').set('xdata', 'expr');
model.result('pg9').feature('lngr1').set('xdataexpr', 'x');
model.result('pg9').feature('lngr1').selection.geom('geom1', 1);
model.result('pg9').feature('lngr1').selection.set([1 2]);
model.result('pg9').feature('lngr1').set('expr', {'S4_2m'});
model.result.create('pg10', 'PlotGroup1D');
model.result('pg10').set('data', 'dset3');
model.result('pg10').label('Concentration, S2_2m (tcd)');
model.result('pg10').set('titletype', 'custom');
model.result('pg10').set('prefixintitle', 'Species S2_2m:');
model.result('pg10').set('expressionintitle', false);
model.result('pg10').set('typeintitle', false);
model.result('pg10').create('lngr1', 'LineGraph');
model.result('pg10').feature('lngr1').set('xdata', 'expr');
model.result('pg10').feature('lngr1').set('xdataexpr', 'x');
model.result('pg10').feature('lngr1').selection.geom('geom1', 1);
model.result('pg10').feature('lngr1').selection.set([1 2]);
model.result('pg10').feature('lngr1').set('expr', {'S2_2m'});
model.result.create('pg11', 'PlotGroup1D');
model.result('pg11').set('data', 'dset3');
model.result('pg11').label('Concentration, S_2m (tcd)');
model.result('pg11').set('titletype', 'custom');
model.result('pg11').set('prefixintitle', 'Species S_2m:');
model.result('pg11').set('expressionintitle', false);
model.result('pg11').set('typeintitle', false);
model.result('pg11').create('lngr1', 'LineGraph');
model.result('pg11').feature('lngr1').set('xdata', 'expr');
model.result('pg11').feature('lngr1').set('xdataexpr', 'x');
model.result('pg11').feature('lngr1').selection.geom('geom1', 1);
model.result('pg11').feature('lngr1').selection.set([1 2]);
model.result('pg11').feature('lngr1').set('expr', {'S_2m'});
model.result.create('pg12', 'PlotGroup1D');
model.result('pg12').set('data', 'dset3');
model.result('pg12').label('Concentration, Li_1p (tcd)');
model.result('pg12').set('titletype', 'custom');
model.result('pg12').set('prefixintitle', 'Species Li_1p:');
model.result('pg12').set('expressionintitle', false);
model.result('pg12').set('typeintitle', false);
model.result('pg12').create('lngr1', 'LineGraph');
model.result('pg12').feature('lngr1').set('xdata', 'expr');
model.result('pg12').feature('lngr1').set('xdataexpr', 'x');
model.result('pg12').feature('lngr1').selection.geom('geom1', 1);
model.result('pg12').feature('lngr1').selection.set([1 2]);
model.result('pg12').feature('lngr1').set('expr', {'Li_1p'});
model.result.create('pg13', 'PlotGroup1D');
model.result('pg13').set('data', 'dset3');
model.result('pg13').label('Concentration, A_1m (tcd)');
model.result('pg13').set('titletype', 'custom');
model.result('pg13').set('prefixintitle', 'Species A_1m:');
model.result('pg13').set('expressionintitle', false);
model.result('pg13').set('typeintitle', false);
model.result('pg13').create('lngr1', 'LineGraph');
model.result('pg13').feature('lngr1').set('xdata', 'expr');
model.result('pg13').feature('lngr1').set('xdataexpr', 'x');
model.result('pg13').feature('lngr1').selection.geom('geom1', 1);
model.result('pg13').feature('lngr1').selection.set([1 2]);
model.result('pg13').feature('lngr1').set('expr', {'A_1m'});
model.result('pg2').run;
model.result('pg2').label('Cell Voltages');
model.result('pg2').run;
model.result('pg2').feature('ptgr1').set('xdata', 'expr');
model.result('pg2').feature('ptgr1').set('xdataexpr', 't*C*i_1C*A_cell/1[A*h]');
model.result('pg2').feature('ptgr1').set('xdatadescractive', true);
model.result('pg2').feature('ptgr1').set('xdatadescr', 'Capacity (Ah)');
model.result('pg2').feature('ptgr1').set('legend', true);
model.result('pg2').feature('ptgr1').set('autopoint', false);
model.result('pg2').run;
model.result('pg2').set('titletype', 'label');
model.result('pg2').run;
model.result('pg5').run;
model.result('pg5').setIndex('looplevelinput', 'last', 0);
model.result('pg5').setIndex('looplevelinput', 'manual', 1);
model.result('pg5').setIndex('looplevel', [1], 1);
model.result('pg5').run;
model.result('pg5').setIndex('looplevel', [2], 1);
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').feature('lngr1').set('legendprefix', 'S<sub>8 </sub>');
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').feature('lngr2').set('legendprefix', 'S<sup>2-</sup><sub>8</sub>');
model.result('pg5').run;
model.result('pg5').feature('lngr3').set('legendprefix', 'S<sup>2-</sup><sub>6</sub>');
model.result('pg5').run;
model.result('pg5').feature('lngr4').set('legendprefix', 'S<sup>2-</sup><sub>4</sub>');
model.result('pg5').run;
model.result('pg5').feature('lngr5').set('legendprefix', 'S<sup>2-</sup><sub>2</sub>');
model.result('pg5').run;
model.result('pg5').feature('lngr6').set('legendprefix', 'S<sup>2-</sup>');
model.result('pg5').run;
model.result('pg5').feature('lngr7').set('legendprefix', 'Li<sup>+</sup>');
model.result('pg5').run;
model.result('pg5').feature('lngr8').set('legendprefix', 'A<sup>-</sup>');
model.result('pg5').run;
model.result('pg5').setIndex('looplevel', [1], 1);
model.result('pg5').run;
model.result('pg5').setIndex('looplevel', [2], 1);
model.result('pg5').run;
model.result.create('pg14', 'PlotGroup1D');
model.result('pg14').run;
model.result('pg14').label('Precipitated Li2S(s)');
model.result('pg14').set('titletype', 'label');
model.result('pg14').create('lngr1', 'LineGraph');
model.result('pg14').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg14').feature('lngr1').set('linewidth', 'preference');
model.result('pg14').feature('lngr1').selection.all;
model.result('pg14').feature('lngr1').set('expr', 'eps_Li2S_s');
model.result('pg14').feature('lngr1').set('descr', 'Volume fraction, Li2S(s)');
model.result('pg14').feature('lngr1').set('xdata', 'expr');
model.result('pg14').feature('lngr1').set('xdataexpr', 'x');
model.result('pg14').feature('lngr1').set('legendprefix', 'Li<sub>2</sub>S(s)');
model.result('pg14').run;
model.result('pg14').set('data', 'dset3');
model.result('pg14').setIndex('looplevelinput', 'manual', 1);
model.result('pg14').setIndex('looplevel', [1], 1);
model.result('pg14').run;
model.result('pg14').setIndex('looplevel', [2], 1);
model.result('pg14').run;

model.title('Lithium-Sulfur Battery');

model.description('This example models discharge of a lithium-sulfur battery cell at two different discharge rates. The electrolyte charge and mass transport of a lithium salt and six polysulfides is included, as well as the precipitation-dissolution of solid octasulfur (S8) and lithium sulfide (Li2S) in the separator and positive electrode.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;

model.label('lithium_sulfur.mph');

model.modelNode.label('Components');

out = model;
