function out = model
%
% single_edge_crack.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Structural_Mechanics_Module/Fracture_Mechanics');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('Xa', '0.6[m]', 'Crack length');
model.param.set('da', '0.01[m]', 'Crack length increment');
model.param.set('Wp', '1.5[m]', 'Plate width');
model.param.set('Hp', '1.5*Wp', 'Half length of plate');
model.param.set('Th', '10[mm]', 'Plate thickness');
model.param.set('Q0', '20[MPa]', 'Load intensity');
model.param.set('AP', '1.4E-11', 'Paris'' law coefficient (in MN/m^1.5 units)');
model.param.set('mP', '3.1', 'Paris'' law exponent');
model.param.set('ar', 'pi*Xa/(2*Wp)', 'Intermediate crack length parameter');
model.param.set('K1r', 'Q0/1[Pa]*sqrt(pi*Xa/1[m])*sqrt(tan(ar)/ar)/cos(ar)*(0.752+2.02*(Xa/Wp)+0.37*(1-sin(ar))^3)', 'Reference stress intensity factor');

model.variable.create('var1');
model.variable('var1').model('comp1');

model.geom('geom1').run;

model.variable('var1').set('dadN', 'AP*(solid.crack1.jint1.KI/1e6)^mP');
model.variable('var1').descr('dadN', 'Crack growth rate (m/cycle)');

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', {'Wp' 'Hp'});
model.geom('geom1').runPre('fin');
model.geom('geom1').create('pt1', 'Point');
model.geom('geom1').feature('pt1').setIndex('p', 'Xa', 0);
model.geom('geom1').run('fin');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').label('Steel');
model.material('mat1').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat1').propertyGroup('Enu').set('E', {'206[GPa]'});
model.material('mat1').propertyGroup('Enu').set('nu', {'0.3'});
model.material('mat1').propertyGroup('def').set('density', {'7850'});

model.physics('solid').prop('Type2D').set('Type2D', 'PlaneStress');
model.physics('solid').prop('d').set('d', 'Th');
model.physics('solid').create('sym1', 'SymmetrySolid', 1);
model.physics('solid').feature('sym1').selection.set([2 4]);
model.physics('solid').create('bndl1', 'BoundaryLoad', 1);
model.physics('solid').feature('bndl1').selection.set([3]);
model.physics('solid').feature('bndl1').set('FperArea', {'0' '20[MPa]' '0'});
model.physics('solid').create('disp1', 'Displacement0', 0);
model.physics('solid').feature('disp1').selection.set([4]);
model.physics('solid').feature('disp1').setIndex('Direction', 'prescribed', 0);
model.physics('solid').create('crack1', 'Crack', 1);
model.physics('solid').feature('crack1').set('CrackSurface', 'Symmetric');
model.physics('solid').feature('crack1').selection.set([2]);
model.physics('solid').feature('crack1').selection('CrackFront').set([3]);
model.physics('solid').feature('crack1').create('jint1', 'JIntegral', 0);
model.physics('solid').feature('crack1').feature.duplicate('jint2', 'jint1');
model.physics('solid').feature('crack1').feature('jint2').set('r', 'solid.crack1.crackSize*0.7');
model.physics('solid').feature('crack1').create('jint3', 'JIntegral', 0);
model.physics('solid').feature('crack1').feature('jint3').set('IntegrationPath', 'Edges');
model.physics('solid').feature('crack1').feature('jint3').selection('Path').set([1 3 5]);
model.physics('solid').feature('crack1').create('vce1', 'VirtualCrackExtension', 1);
model.physics('solid').feature('crack1').feature('vce1').set('parametricStudy', 'yes');
model.physics('solid').feature('crack1').feature('vce1').setIndex('parameterName', 'Xa', 0, 0);
model.physics('solid').feature('crack1').feature('vce1').setIndex('parameterRange', 'range(0.5,da,0.7)', 0, 0);
model.physics('solid').feature('crack1').feature('vce1').setIndex('parameterUnit', 'm', 0, 0);
model.physics('solid').feature('crack1').feature('vce1').runCommand('createDeformedGeometryandStudy');

model.mesh('mesh1').autoMeshSize(3);
model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('size1').set('hmax', 0.01);
model.mesh('mesh1').run;
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('solidcrack1sol').study('solidcrack1std');
model.sol('solidcrack1sol').feature.remove('s1');
model.sol('solidcrack1sol').feature.remove('v1');
model.sol('solidcrack1sol').feature.remove('st1');
model.sol('solidcrack1sol').create('st1', 'StudyStep');
model.sol('solidcrack1sol').feature('st1').set('study', 'solidcrack1std');
model.sol('solidcrack1sol').feature('st1').set('studystep', 'solidcrack1stat');
model.sol('solidcrack1sol').create('v1', 'Variables');
model.sol('solidcrack1sol').feature('v1').feature('comp1_material_disp').set('scalemethod', 'manual');
model.sol('solidcrack1sol').feature('v1').feature('comp1_material_disp').set('scaleval', '0.016617400518733366');
model.sol('solidcrack1sol').feature('v1').set('control', 'solidcrack1stat');
model.sol('solidcrack1sol').create('s1', 'Stationary');
model.sol('solidcrack1sol').feature('s1').create('p1', 'Parametric');
model.sol('solidcrack1sol').feature('s1').feature.remove('pDef');
model.sol('solidcrack1sol').feature('s1').feature('p1').set('control', 'solidcrack1stat');
model.sol('solidcrack1sol').feature('s1').set('control', 'solidcrack1stat');
model.sol('solidcrack1sol').feature('s1').create('sn1', 'Sensitivity');
model.sol('solidcrack1sol').feature('s1').feature('sn1').set('control', 'solidcrack1sens');
model.sol('solidcrack1sol').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('solidcrack1sol').feature('s1').create('seDef', 'Segregated');
model.sol('solidcrack1sol').feature('s1').create('fc1', 'FullyCoupled');
model.sol('solidcrack1sol').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('solidcrack1sol').feature('s1').feature.remove('fcDef');
model.sol('solidcrack1sol').feature('s1').feature.remove('seDef');
model.sol('solidcrack1sol').attach('solidcrack1std');

model.batch('solidcrack1p').run('compute');

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset2');
model.result('pg1').setIndex('looplevel', 2, 0);
model.result('pg1').setIndex('looplevel', 21, 1);
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('surf1').set('threshold', 'manual');
model.result('pg1').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg1').feature('surf1').set('colortable', 'Rainbow');
model.result('pg1').feature('surf1').set('colortabletrans', 'none');
model.result('pg1').feature('surf1').set('colorscalemode', 'linear');
model.result('pg1').feature('surf1').set('resolution', 'normal');
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').feature('surf1').set('smooth', 'none');
model.result('pg1').feature('surf1').set('colortabletrans', 'nonlinear');
model.result('pg1').feature('surf1').set('colorcalibration', -1);
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg1').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg1').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').set('data', 'dset2');
model.result('pg2').setIndex('looplevel', 2, 0);
model.result('pg2').setIndex('looplevel', 21, 1);
model.result('pg2').label('Deformed Geometry');
model.result('pg2').create('mesh1', 'Mesh');
model.result('pg2').feature('mesh1').set('meshdomain', 'surface');
model.result('pg2').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg2').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg2').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg2').feature('mesh1').create('sel1', 'MeshSelection');
model.result('pg2').feature('mesh1').feature('sel1').selection.set([1]);
model.result('pg2').feature('mesh1').set('qualmeasure', 'custom');
model.result('pg2').feature('mesh1').set('qualexpr', 'comp1.material.relVol');
model.result('pg2').feature('mesh1').set('colorrangeunitinterval', false);
model.result('pg1').run;
model.result.dataset.create('mir1', 'Mirror2D');
model.result.dataset('mir1').setIndex('genpoints', 1, 1, 0);
model.result.dataset('mir1').setIndex('genpoints', 0, 1, 1);
model.result.dataset('mir1').set('data', 'dset2');
model.result('pg1').run;
model.result('pg1').set('data', 'mir1');
model.result('pg1').setIndex('looplevel', 11, 1);
model.result('pg1').set('edges', false);
model.result('pg1').run;
model.result('pg1').feature('surf1').set('unit', 'MPa');
model.result('pg1').feature('surf1').set('rangecoloractive', true);
model.result('pg1').feature('surf1').set('rangecolormax', 200);
model.result('pg1').create('arwl1', 'ArrowLine');
model.result('pg1').feature('arwl1').label('Boundary Load');
model.result('pg1').feature('arwl1').set('expr', {'solid.F_Ax' 'solid.F_Ay'});
model.result('pg1').feature('arwl1').set('descr', 'Load (spatial frame)');
model.result('pg1').feature('arwl1').set('titletype', 'none');
model.result('pg1').feature('arwl1').set('placement', 'elements');
model.result('pg1').feature('arwl1').set('scaleactive', true);
model.result('pg1').feature('arwl1').set('scale', '1e-8');
model.result('pg1').feature('arwl1').set('inheritplot', 'surf1');
model.result('pg1').feature('arwl1').set('inheritrange', false);
model.result('pg1').feature('arwl1').set('inheritcolor', false);
model.result('pg1').feature('arwl1').set('inheritarrowscale', false);
model.result('pg1').feature('arwl1').create('col1', 'Color');
model.result('pg1').run;
model.result('pg1').feature('arwl1').feature('col1').set('expr', 'solid.F_A_Mag');
model.result('pg1').feature('arwl1').feature('col1').set('descr', 'Load magnitude');
model.result('pg1').feature('arwl1').feature('col1').set('coloring', 'gradient');
model.result('pg1').feature('arwl1').feature('col1').set('topcolor', 'red');
model.result('pg1').feature('arwl1').feature('col1').set('bottomcolor', 'gray');
model.result('pg1').feature('arwl1').feature('col1').set('colorlegend', false);
model.result('pg1').run;
model.result('pg1').feature('arwl1').create('def1', 'Deform');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').create('line1', 'Line');
model.result('pg1').feature('line1').set('expr', '1');
model.result('pg1').feature('line1').set('titletype', 'none');
model.result('pg1').feature('line1').set('coloring', 'uniform');
model.result('pg1').feature('line1').set('color', 'fromtheme');
model.result('pg1').feature('line1').set('smooth', 'none');
model.result('pg1').feature('line1').create('def1', 'Deform');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('line1').set('inheritplot', 'surf1');
model.result('pg1').feature('line1').set('inheritcolor', false);
model.result('pg1').feature('line1').set('inheritrange', false);
model.result('pg1').run;
model.result('pg1').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg1').feature('surf1').feature('def').set('scale', 200);
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').set('titletype', 'none');
model.result('pg1').run;
model.result('pg1').feature('surf1').set('coloring', 'uniform');
model.result('pg1').feature('surf1').set('color', 'gray');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('line1').active(false);
model.result('pg1').run;
model.result('pg1').feature('surf1').feature('def').set('scale', 50);
model.result('pg1').run;
model.result('pg1').feature('surf1').feature('def').set('scale', 200);
model.result('pg1').run;
model.result('pg1').feature('line1').active(true);
model.result('pg1').run;
model.result('pg1').feature('surf1').set('coloring', 'colortable');
model.result('pg1').run;
model.result('pg1').set('titletype', 'auto');
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').set('data', 'dset2');
model.result('pg3').setIndex('looplevel', 2, 0);
model.result('pg3').setIndex('looplevel', 21, 1);
model.result('pg3').set('defaultPlotID', 'cracks');
model.result('pg3').label('Cracks (solid)');
model.result('pg3').set('showlegends', true);
model.result('pg3').set('titletype', 'label');
model.result('pg3').set('frametype', 'material');
model.result('pg3').set('showlegendsunit', true);
model.result('pg3').create('arpt1', 'ArrowPoint');
model.result('pg3').feature('arpt1').set('expr', {'solid.crack1.e1X*solid.crack1.crackSize ' 'solid.crack1.e1Y*solid.crack1.crackSize '});
model.result('pg3').feature('arpt1').set('scaleactive', true);
model.result('pg3').feature('arpt1').set('scale', '1');
model.result('pg3').feature('arpt1').label('Crack Growth Direction (Crack 1)');
model.result('pg3').create('arpt2', 'ArrowPoint');
model.result('pg3').feature('arpt2').set('expr', {'solid.crack1.e1X*solid.crack1.crackSize ' 'solid.crack1.e1Y*solid.crack1.crackSize '});
model.result('pg3').feature('arpt2').set('scaleactive', true);
model.result('pg3').feature('arpt2').set('scale', '1');
model.result('pg3').feature('arpt2').label('Crack Growth Direction (Crack 1) 1');
model.result('pg3').create('con1', 'Contour');
model.result('pg3').feature('con1').set('expr', 'sqrt((X-solid.crack1.jint1.Xp)^2+(Y-solid.crack1.jint1.Yp)^2)');
model.result('pg3').feature('con1').set('levelmethod', 'levels');
model.result('pg3').feature('con1').set('levels', {'solid.crack1.jint1.r'});
model.result('pg3').feature('con1').set('coloring', 'uniform');
model.result('pg3').feature('con1').set('color', 'magenta');
model.result('pg3').feature('con1').set('colorlegend', false);
model.result('pg3').feature('con1').label('J-Integral 1, Integration Path');
model.result('pg3').create('ann1', 'Annotation');
model.result('pg3').feature('ann1').set('text', 'J=eval(solid.crack1.jint1.J)');
model.result('pg3').feature('ann1').set('posxexpr', 'solid.crack1.jint1.Xp');
model.result('pg3').feature('ann1').set('posyexpr', 'solid.crack1.jint1.Yp');
model.result('pg3').feature('ann1').label('J-Integral 1, Evaluation');
model.result('pg3').create('con2', 'Contour');
model.result('pg3').feature('con2').set('expr', 'sqrt((X-solid.crack1.jint2.Xp)^2+(Y-solid.crack1.jint2.Yp)^2)');
model.result('pg3').feature('con2').set('levelmethod', 'levels');
model.result('pg3').feature('con2').set('levels', {'solid.crack1.jint2.r'});
model.result('pg3').feature('con2').set('coloring', 'uniform');
model.result('pg3').feature('con2').set('color', 'magenta');
model.result('pg3').feature('con2').set('colorlegend', false);
model.result('pg3').feature('con2').label('J-Integral 2, Integration Path');
model.result('pg3').create('ann2', 'Annotation');
model.result('pg3').feature('ann2').set('text', 'J=eval(solid.crack1.jint2.J)');
model.result('pg3').feature('ann2').set('posxexpr', 'solid.crack1.jint2.Xp');
model.result('pg3').feature('ann2').set('posyexpr', 'solid.crack1.jint2.Yp');
model.result('pg3').feature('ann2').label('J-Integral 2, Evaluation');
model.result('pg3').create('line1', 'Line');
model.result('pg3').feature('line1').set('expr', 'sqrt(solid.crack1.jint3.mX^2+solid.crack1.jint3.mY^2)');
model.result('pg3').feature('line1').set('coloring', 'uniform');
model.result('pg3').feature('line1').set('color', 'magenta');
model.result('pg3').feature('line1').label('J-Integral 3, Integration Path');
model.result('pg3').create('ann3', 'Annotation');
model.result('pg3').feature('ann3').set('text', 'J=eval(solid.crack1.jint3.J)');
model.result('pg3').feature('ann3').set('posxexpr', 'solid.crack1.jint3.Xp');
model.result('pg3').feature('ann3').set('posyexpr', 'solid.crack1.jint3.Yp');
model.result('pg3').feature('ann3').label('J-Integral 3, Evaluation');
model.result('pg3').label('Cracks (solid)');
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').stepFirst(1);
model.result('pg3').run;
model.result.evaluationGroup.create('eg_dset2solid', 'EvaluationGroup');
model.result.evaluationGroup('eg_dset2solid').set('defaultPlotID', 'crackTable');
model.result.evaluationGroup('eg_dset2solid').label('Fracture Mechanics Results (solid)');
model.result.evaluationGroup('eg_dset2solid').set('data', 'dset2');
model.result.evaluationGroup('eg_dset2solid').set('transpose', true);
model.result.evaluationGroup('eg_dset2solid').create('jint', 'EvalGlobal');
model.result.evaluationGroup('eg_dset2solid').feature('jint').label('J-Integrals');
model.result.evaluationGroup('eg_dset2solid').feature('jint').setIndex('expr', 'solid.crack1.jint1.J', 0);
model.result.evaluationGroup('eg_dset2solid').feature('jint').setIndex('descr', 'J-integral [crack1/jint1]', 0);
model.result.evaluationGroup('eg_dset2solid').feature('jint').setIndex('expr', 'solid.crack1.jint2.J', 1);
model.result.evaluationGroup('eg_dset2solid').feature('jint').setIndex('descr', 'J-integral [crack1/jint2]', 1);
model.result.evaluationGroup('eg_dset2solid').feature('jint').setIndex('expr', 'solid.crack1.jint3.J', 2);
model.result.evaluationGroup('eg_dset2solid').feature('jint').setIndex('descr', 'J-integral [crack1/jint3]', 2);
model.result.evaluationGroup('eg_dset2solid').create('sif1', 'EvalGlobal');
model.result.evaluationGroup('eg_dset2solid').feature('sif1').label('Stress Intensity Factors, Mode 1');
model.result.evaluationGroup('eg_dset2solid').feature('sif1').setIndex('expr', 'solid.crack1.jint1.KI', 0);
model.result.evaluationGroup('eg_dset2solid').feature('sif1').setIndex('descr', 'Stress intensity factor, mode I [crack1/jint1]', 0);
model.result.evaluationGroup('eg_dset2solid').feature('sif1').setIndex('expr', 'solid.crack1.jint2.KI', 1);
model.result.evaluationGroup('eg_dset2solid').feature('sif1').setIndex('descr', 'Stress intensity factor, mode I [crack1/jint2]', 1);
model.result.evaluationGroup('eg_dset2solid').feature('sif1').setIndex('expr', 'solid.crack1.jint3.KI', 2);
model.result.evaluationGroup('eg_dset2solid').feature('sif1').setIndex('descr', 'Stress intensity factor, mode I [crack1/jint3]', 2);
model.result.evaluationGroup('eg_dset2solid').feature('sif1').setIndex('expr', 'solid.crack1.vce1.KIG', 3);
model.result.evaluationGroup('eg_dset2solid').feature('sif1').setIndex('descr', 'Stress intensity factor, mode I [crack1/vce1]', 3);
model.result.evaluationGroup('eg_dset2solid').create('sif2', 'EvalGlobal');
model.result.evaluationGroup('eg_dset2solid').feature('sif2').label('Stress Intensity Factors, Mode 2');
model.result.evaluationGroup('eg_dset2solid').feature('sif2').setIndex('expr', 'solid.crack1.jint1.KII', 0);
model.result.evaluationGroup('eg_dset2solid').feature('sif2').setIndex('descr', 'Stress intensity factor, mode II [crack1/jint1]', 0);
model.result.evaluationGroup('eg_dset2solid').feature('sif2').setIndex('expr', 'solid.crack1.jint2.KII', 1);
model.result.evaluationGroup('eg_dset2solid').feature('sif2').setIndex('descr', 'Stress intensity factor, mode II [crack1/jint2]', 1);
model.result.evaluationGroup('eg_dset2solid').feature('sif2').setIndex('expr', 'solid.crack1.jint3.KII', 2);
model.result.evaluationGroup('eg_dset2solid').feature('sif2').setIndex('descr', 'Stress intensity factor, mode II [crack1/jint3]', 2);
model.result.evaluationGroup('eg_dset2solid').feature('sif2').setIndex('expr', 'solid.crack1.vce1.KIIG', 3);
model.result.evaluationGroup('eg_dset2solid').feature('sif2').setIndex('descr', 'Stress intensity factor, mode II [crack1/vce1]', 3);
model.result.evaluationGroup('eg_dset2solid').create('grel', 'EvalGlobal');
model.result.evaluationGroup('eg_dset2solid').feature('grel').label('Energy Release Rates');
model.result.evaluationGroup('eg_dset2solid').feature('grel').setIndex('expr', 'solid.crack1.vce1.G', 0);
model.result.evaluationGroup('eg_dset2solid').feature('grel').setIndex('descr', 'Energy release rate [crack1/vce1]', 0);
model.result.evaluationGroup('eg_dset2solid').label('Fracture Mechanics Results (solid)');
model.result.evaluationGroup('eg_dset2solid').feature.remove('sif2');
model.result.evaluationGroup('eg_dset2solid').feature('sif1').setIndex('expr', 'K1r', 3);
model.result.evaluationGroup('eg_dset2solid').feature('sif1').setIndex('unit', 1, 3);
model.result.evaluationGroup('eg_dset2solid').feature('sif1').setIndex('descr', 'Reference stress intensity factor', 3);
model.result.evaluationGroup('eg_dset2solid').feature('sif1').setIndex('expr', '(solid.crack1.jint2.KI-K1r)/K1r*100', 4);
model.result.evaluationGroup('eg_dset2solid').feature('sif1').setIndex('unit', 1, 4);
model.result.evaluationGroup('eg_dset2solid').feature('sif1').setIndex('descr', 'Percent difference from reference value', 4);
model.result.evaluationGroup('eg_dset2solid').setIndex('looplevelinput', 'last', 0);
model.result.evaluationGroup('eg_dset2solid').run;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('J-Integral and Energy Release Rate');
model.result('pg4').set('data', 'dset2');
model.result('pg4').setIndex('looplevelinput', 'manualindices', 1);
model.result('pg4').setIndex('looplevelindices', 'range(2,20)', 1);
model.result('pg4').setIndex('looplevelinput', 'last', 0);
model.result('pg4').create('glob1', 'Global');
model.result('pg4').feature('glob1').set('markerpos', 'datapoints');
model.result('pg4').feature('glob1').set('linewidth', 'preference');
model.result('pg4').feature('glob1').set('expr', {'solid.crack1.jint1.J'});
model.result('pg4').feature('glob1').set('descr', {'J-integral'});
model.result('pg4').feature('glob1').set('unit', {'J/m^2'});
model.result('pg4').feature('glob1').setIndex('descr', 'J-integral, contour 1', 0);
model.result('pg4').feature('glob1').setIndex('expr', 'solid.crack1.vce1.G', 1);
model.result('pg4').feature('glob1').setIndex('unit', 'J/m^2', 1);
model.result('pg4').feature('glob1').setIndex('descr', 'Energy release rate', 1);
model.result('pg4').feature('glob1').set('xdatasolnumtype', 'level2');
model.result('pg4').feature('glob1').set('linestyle', 'cycle');
model.result('pg4').feature('glob1').set('linewidth', 2);
model.result('pg4').feature('glob1').set('linemarker', 'cycle');
model.result('pg4').feature('glob1').set('markerpos', 'interp');
model.result('pg4').feature('glob1').set('autosolution', false);
model.result('pg4').run;
model.result('pg4').set('xlabelactive', true);
model.result('pg4').set('xlabel', 'Crack length (m)');
model.result('pg4').set('ylabelactive', true);
model.result('pg4').set('ylabel', 'Energy release rate (J/m^2)');
model.result('pg4').set('legendpos', 'lowerright');
model.result('pg4').run;
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').label('Crack Growth Rate');
model.result('pg5').set('data', 'dset2');
model.result('pg5').setIndex('looplevelinput', 'last', 0);
model.result('pg5').create('glob1', 'Global');
model.result('pg5').feature('glob1').set('markerpos', 'datapoints');
model.result('pg5').feature('glob1').set('linewidth', 'preference');
model.result('pg5').feature('glob1').setIndex('expr', 'dadN', 0);
model.result('pg5').feature('glob1').setIndex('unit', 1, 0);
model.result('pg5').feature('glob1').setIndex('descr', 'Crack growth rate (m/cycle)', 0);
model.result('pg5').feature('glob1').set('xdatasolnumtype', 'level2');
model.result('pg5').feature('glob1').set('linewidth', 2);
model.result('pg5').run;
model.result('pg5').set('titletype', 'none');
model.result('pg5').set('xlabelactive', true);
model.result('pg5').set('xlabel', 'Crack length (m)');
model.result('pg5').set('ylabelactive', true);
model.result('pg5').set('ylabel', 'Crack growth rate (m/cycle)');
model.result('pg5').set('showlegends', false);
model.result('pg5').run;
model.result.numerical.create('gev1', 'EvalGlobal');
model.result.numerical('gev1').label('Number of cycles');
model.result.numerical('gev1').set('data', 'dset2');
model.result.numerical('gev1').setIndex('expr', '1/dadN', 0);
model.result.numerical('gev1').setIndex('unit', 1, 0);
model.result.numerical('gev1').setIndex('descr', '', 0);
model.result.numerical('gev1').set('dataseries', 'integral');
model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').comments('Number of cycles');
model.result.numerical('gev1').set('table', 'tbl1');
model.result.numerical('gev1').setResult;
model.result('pg1').run;

model.title('Single Edge Crack');

model.description('A plate with a single edge crack is subjected to a tensile load. The stress intensity factor KI is determined for this load case using the so-called J-integral for three different contours.');

model.mesh.clearMeshes;

model.sol('solidcrack1sol').clearSolutionData;
model.sol('solidcrack1solp').clearSolutionData;
model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;
model.sol('sol8').clearSolutionData;
model.sol('sol9').clearSolutionData;
model.sol('sol10').clearSolutionData;
model.sol('sol11').clearSolutionData;
model.sol('sol12').clearSolutionData;
model.sol('sol13').clearSolutionData;
model.sol('sol14').clearSolutionData;
model.sol('sol15').clearSolutionData;
model.sol('sol16').clearSolutionData;
model.sol('sol17').clearSolutionData;
model.sol('sol18').clearSolutionData;
model.sol('sol19').clearSolutionData;
model.sol('sol20').clearSolutionData;
model.sol('sol21').clearSolutionData;

model.label('single_edge_crack.mph');

model.modelNode.label('Components');

out = model;
