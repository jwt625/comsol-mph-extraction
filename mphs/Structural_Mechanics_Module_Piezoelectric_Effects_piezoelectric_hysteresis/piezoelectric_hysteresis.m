function out = model
%
% piezoelectric_hysteresis.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Structural_Mechanics_Module/Piezoelectric_Effects');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');
model.physics.create('es', 'Electrostatics', 'geom1');
model.physics('es').model('comp1');
model.physics('es').create('ccnf1', 'ChargeConservationFerroelectric');
model.physics('es').feature('ccnf1').selection.all;

model.multiphysics.create('efe1', 'ElectrostrictiveEffect', 'geom1', 3);
model.multiphysics('efe1').set('Solid_physics', 'solid');
model.multiphysics('efe1').set('Electrostatics_physics', 'es');
model.multiphysics('efe1').selection.all;

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/solid', true);
model.study('std1').feature('stat').setSolveFor('/physics/es', true);
model.study('std1').feature('stat').setSolveFor('/multiphysics/efe1', true);

model.param.set('t', '0[s]');
model.param.descr('t', 'Time parameter');
model.param.set('W', '1.5[in]');
model.param.descr('W', 'Actuator width');
model.param.set('D', '0.25[in]');
model.param.descr('D', 'Actuator depth');
model.param.set('H', '0.015[in]');
model.param.descr('H', 'Actuator height');
model.param.set('alpha', '4.2e6[m/F]');
model.param.descr('alpha', 'Interdomain coupling');
model.param.set('a', '6.4e5[V/m]');
model.param.descr('a', 'Domain wall density');
model.param.set('c', '0.2');
model.param.descr('c', 'Polarization reversibility');
model.param.set('k', '1e6[V/m]');
model.param.descr('k', 'Pinning loss');
model.param.set('Ps', '0.425[C/m^2]');
model.param.descr('Ps', 'Saturation polarization');
model.param.set('Q11', '3.579e-2[m^4/C^2]');
model.param.descr('Q11', 'Electrostriction coupling parameter');
model.param.set('Q12', '-5.335e-3[m^4/C^2]');
model.param.descr('Q12', 'Electrostriction coupling parameter');
model.param.set('Q44', '1.923e-2[m^4/C^2]');
model.param.descr('Q44', 'Electrostriction coupling parameter');
model.param.set('Vmax', '1200[V]');
model.param.descr('Vmax', 'Maximum applied voltage');
model.param.set('F0', '0[MPa]');
model.param.descr('F0', 'Applied mechanical load');

model.variable.create('var1');
model.variable('var1').model('comp1');

model.geom('geom1').run;

model.variable('var1').set('V0', 'Vmax*sin(2*pi*t[1/s])');
model.variable('var1').descr('V0', 'Applied voltage');

model.geom('geom1').create('blk1', 'Block');
model.geom('geom1').feature('blk1').set('size', {'W/2' 'D/2' 'H/2'});
model.geom('geom1').runPre('fin');
model.geom('geom1').run;

model.physics('solid').feature('lemm1').set('SolidModel', 'Anisotropic');
model.physics('solid').feature('lemm1').set('AnisotropicOption', 'AnisotropicVo');
model.physics('es').feature('ccnf1').set('Hysteresis', true);

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('StrainCharge', 'Strain-charge form');
model.material('mat1').propertyGroup.create('StressCharge', 'Stress-charge form');
model.material('mat1').label('Lead Zirconate Titanate (PZT-5H)');
model.material('mat1').set('family', 'lead');
model.material('mat1').propertyGroup('def').set('heatcapacity', '440[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'1.3[W/(m*K)]' '0' '0' '0' '1.3[W/(m*K)]' '0' '0' '0' '1.3[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1704.4' '0' '0' '0' '1704.4' '0' '0' '0' '1433.6'});
model.material('mat1').propertyGroup('def').set('density', '7500[kg/m^3]');
model.material('mat1').propertyGroup('StrainCharge').set('sE', {'1.65e-011[1/Pa]' '-4.78e-012[1/Pa]' '-8.45e-012[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '-4.78e-012[1/Pa]' '1.65e-011[1/Pa]' '-8.45e-012[1/Pa]' '0[1/Pa]'  ...
'0[1/Pa]' '0[1/Pa]' '-8.45e-012[1/Pa]' '-8.45e-012[1/Pa]' '2.07e-011[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]'  ...
'0[1/Pa]' '4.35e-011[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '4.35e-011[1/Pa]' '0[1/Pa]'  ...
'0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '4.26e-011[1/Pa]'});
model.material('mat1').propertyGroup('StrainCharge').set('dET', {'0[C/N]' '0[C/N]' '-2.74e-010[C/N]' '0[C/N]' '0[C/N]' '-2.74e-010[C/N]' '0[C/N]' '0[C/N]' '5.93e-010[C/N]' '0[C/N]'  ...
'7.41e-010[C/N]' '0[C/N]' '7.41e-010[C/N]' '0[C/N]' '0[C/N]' '0[C/N]' '0[C/N]' '0[C/N]'});
model.material('mat1').propertyGroup('StrainCharge').set('epsilonrT', {'3130' '0' '0' '0' '3130' '0' '0' '0' '3400'});
model.material('mat1').propertyGroup('StressCharge').set('cE', {'1.27205e+011[Pa]' '8.02122e+010[Pa]' '8.46702e+010[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '8.02122e+010[Pa]' '1.27205e+011[Pa]' '8.46702e+010[Pa]' '0[Pa]'  ...
'0[Pa]' '0[Pa]' '8.46702e+010[Pa]' '8.46702e+010[Pa]' '1.17436e+011[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]'  ...
'0[Pa]' '2.29885e+010[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '2.29885e+010[Pa]' '0[Pa]'  ...
'0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '2.34742e+010[Pa]'});
model.material('mat1').propertyGroup('StressCharge').set('eES', {'0[C/m^2]' '0[C/m^2]' '-6.62281[C/m^2]' '0[C/m^2]' '0[C/m^2]' '-6.62281[C/m^2]' '0[C/m^2]' '0[C/m^2]' '23.2403[C/m^2]' '0[C/m^2]'  ...
'17.0345[C/m^2]' '0[C/m^2]' '17.0345[C/m^2]' '0[C/m^2]' '0[C/m^2]' '0[C/m^2]' '0[C/m^2]' '0[C/m^2]'});
model.material('mat1').propertyGroup('StressCharge').set('epsilonrS', {'1704.4' '0' '0' '0' '1704.4' '0' '0' '0' '1433.6'});
model.material('mat1').propertyGroup.create('Ferroelectric', 'Ferroelectric');
model.material('mat1').propertyGroup('Ferroelectric').set('Psat', {'Ps'});
model.material('mat1').propertyGroup('Ferroelectric').set('alphaJAe', {'alpha'});
model.material('mat1').propertyGroup('Ferroelectric').set('aJAe', {'a'});
model.material('mat1').propertyGroup('Ferroelectric').set('kJAe', {'k'});
model.material('mat1').propertyGroup('Ferroelectric').set('cJAe', {'c'});

model.physics('solid').create('sym1', 'SymmetrySolid', 2);
model.physics('solid').feature('sym1').selection.set([1 2 3]);
model.physics('solid').create('bndl1', 'BoundaryLoad', 2);
model.physics('solid').feature('bndl1').selection.set([4]);
model.physics('solid').feature('bndl1').set('FperArea', {'0' '0' 'F0'});
model.physics('es').create('gnd1', 'Ground', 2);
model.physics('es').feature('gnd1').selection.set([4]);
model.physics('es').create('pot1', 'ElectricPotential', 2);
model.physics('es').feature('pot1').selection.set([3]);
model.physics('es').feature('pot1').set('V0', 'V0/2');

model.multiphysics('efe1').set('CouplingType', 'FullyCoupled');
model.multiphysics('efe1').set('SolidModel', 'CubicCrystal');
model.multiphysics('efe1').set('Q11', 'Q11');
model.multiphysics('efe1').set('Q12', 'Q12');
model.multiphysics('efe1').set('Q44', 'Q44');

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.set([4]);
model.mesh('mesh1').feature('size').set('hauto', 6);
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis1').set('numelem', 2);
model.mesh('mesh1').run;

model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 't', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 's', 0);
model.study('std1').feature('stat').setIndex('pname', 't', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 's', 0);
model.study('std1').feature('stat').setIndex('plistarr', 'range(0,0.005,3)', 0);
model.study('std1').create('batsw', 'BatchSweep');
model.study('std1').feature('batsw').setIndex('pname', 't', 0);
model.study('std1').feature('batsw').setIndex('plistarr', '', 0);
model.study('std1').feature('batsw').setIndex('punit', 's', 0);
model.study('std1').feature('batsw').setIndex('pname', 't', 0);
model.study('std1').feature('batsw').setIndex('plistarr', '', 0);
model.study('std1').feature('batsw').setIndex('punit', 's', 0);
model.study('std1').feature('batsw').setIndex('pname', 'Vmax', 0);
model.study('std1').feature('batsw').setIndex('plistarr', '600 1000 1600', 0);
model.study('std1').feature('batsw').set('clearmesh', false);
model.study('std1').feature('batsw').set('clearsol', false);
model.study('std1').feature('batsw').set('maxallow', 3);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s1').set('control', 'stat');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('s1').feature('d1').label('Suggested Direct Solver (efe1) (Merged)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol1').feature('s1').feature('i1').label('Suggested Iterative Solver (efe1)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').attach('std1');

model.batch.create('b1', 'Batch');
model.batch('b1').study('std1');
model.batch('b1').create('so1', 'Solutionseq');
model.batch('b1').feature('so1').set('seq', 'sol1');
model.batch('b1').feature('so1').set('store', 'on');
model.batch('b1').feature('so1').set('clear', 'on');
model.batch('b1').feature('so1').set('psol', 'none');
model.batch('b1').set('batchfile', 'batchmodel.mph');
model.batch('b1').set('batchfileactive', 'off');
model.batch('b1').set('batchdir', 'C:/tmp/testusr/batchdir');
model.batch('b1').set('paramfilename', 'on');
model.batch('b1').set('synchsolutions', 'on');
model.batch('b1').set('clearsynchdata', 'on');
model.batch('b1').set('savemodelaftersynch', 'off');
model.batch('b1').attach('std1');
model.batch('b1').set('control', 'batsw');
model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');

model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').label('Accumulated Probe Table 1');

model.study('std1').feature('batsw').set('accumtable', 'tbl1');

model.batch('p1').create('jo1', 'Jobseq');
model.batch('p1').feature('jo1').set('seq', 'b1');
model.batch('p1').set('pname', {'Vmax'});
model.batch('p1').set('plistarr', {'600 1000 1600'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'batsw');

model.sol.create('sol2');
model.sol('sol2').study('std1');
model.sol('sol2').label('Parametric Solutions 1');

model.batch('b1').feature('so1').set('psol', 'sol2');
model.batch('p1').run('compute');
model.batch('b1').feature('daDef').run;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'dset2');
model.result('pg1').setIndex('looplevel', 601, 0);
model.result('pg1').setIndex('looplevel', 3, 1);
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('vol1', 'Volume');
model.result('pg1').feature('vol1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('vol1').set('threshold', 'manual');
model.result('pg1').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg1').feature('vol1').set('colortable', 'Rainbow');
model.result('pg1').feature('vol1').set('colortabletrans', 'none');
model.result('pg1').feature('vol1').set('colorscalemode', 'linear');
model.result('pg1').feature('vol1').set('resolution', 'custom');
model.result('pg1').feature('vol1').set('refine', 2);
model.result('pg1').feature('vol1').set('colortable', 'Prism');
model.result('pg1').feature('vol1').create('def', 'Deform');
model.result('pg1').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg1').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Electric Potential (es)');
model.result('pg2').set('data', 'dset2');
model.result('pg2').setIndex('looplevel', 601, 0);
model.result('pg2').setIndex('looplevel', 3, 1);
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('showlegendsmaxmin', true);
model.result('pg2').set('data', 'dset2');
model.result('pg2').setIndex('looplevel', 601, 0);
model.result('pg2').setIndex('looplevel', 3, 1);
model.result('pg2').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom2/pdef1/pcond2/pcond1/pcond1/pg1');
model.result('pg2').feature.create('mslc1', 'Multislice');
model.result('pg2').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg2').feature('mslc1').set('solutionparams', 'parent');
model.result('pg2').feature('mslc1').set('expr', 'V');
model.result('pg2').feature('mslc1').set('multiplanexmethod', 'coord');
model.result('pg2').feature('mslc1').set('xcoord', 'es.CPx');
model.result('pg2').feature('mslc1').set('multiplaneymethod', 'coord');
model.result('pg2').feature('mslc1').set('ycoord', 'es.CPy');
model.result('pg2').feature('mslc1').set('multiplanezmethod', 'coord');
model.result('pg2').feature('mslc1').set('zcoord', 'es.CPz');
model.result('pg2').feature('mslc1').set('colortable', 'Dipole');
model.result('pg2').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg2').feature('mslc1').set('data', 'parent');
model.result('pg2').feature.create('strmsl1', 'StreamlineMultislice');
model.result('pg2').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg2').feature('strmsl1').set('solutionparams', 'parent');
model.result('pg2').feature('strmsl1').set('expr', {'es.Ex' 'es.Ey' 'es.Ez'});
model.result('pg2').feature('strmsl1').set('multiplanexmethod', 'coord');
model.result('pg2').feature('strmsl1').set('xcoord', 'es.CPx');
model.result('pg2').feature('strmsl1').set('multiplaneymethod', 'coord');
model.result('pg2').feature('strmsl1').set('ycoord', 'es.CPy');
model.result('pg2').feature('strmsl1').set('multiplanezmethod', 'coord');
model.result('pg2').feature('strmsl1').set('zcoord', 'es.CPz');
model.result('pg2').feature('strmsl1').set('titletype', 'none');
model.result('pg2').feature('strmsl1').set('posmethod', 'uniform');
model.result('pg2').feature('strmsl1').set('udist', 0.02);
model.result('pg2').feature('strmsl1').set('maxlen', 0.4);
model.result('pg2').feature('strmsl1').set('maxtime', Inf);
model.result('pg2').feature('strmsl1').set('inheritcolor', false);
model.result('pg2').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg2').feature('strmsl1').set('maxtime', Inf);
model.result('pg2').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg2').feature('strmsl1').set('maxtime', Inf);
model.result('pg2').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg2').feature('strmsl1').set('maxtime', Inf);
model.result('pg2').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg2').feature('strmsl1').set('maxtime', Inf);
model.result('pg2').feature('strmsl1').set('data', 'parent');
model.result('pg2').feature('strmsl1').set('inheritplot', 'mslc1');
model.result('pg2').feature('strmsl1').feature.create('col1', 'Color');
model.result('pg2').feature('strmsl1').feature('col1').set('expr', 'V');
model.result('pg2').feature('strmsl1').feature('col1').set('colortable', 'DipoleDark');
model.result('pg2').feature('strmsl1').feature('col1').set('colorlegend', false);
model.result('pg2').feature('strmsl1').feature.create('filt1', 'Filter');
model.result('pg2').feature('strmsl1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').label('Electric Field Norm (es)');
model.result('pg3').set('data', 'dset2');
model.result('pg3').setIndex('looplevel', 601, 0);
model.result('pg3').setIndex('looplevel', 3, 1);
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').set('showlegendsmaxmin', true);
model.result('pg3').set('data', 'dset2');
model.result('pg3').setIndex('looplevel', 601, 0);
model.result('pg3').setIndex('looplevel', 3, 1);
model.result('pg3').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom3/pdef1/pcond2/pcond1/pg1');
model.result('pg3').feature.create('mslc1', 'Multislice');
model.result('pg3').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg3').feature('mslc1').set('solutionparams', 'parent');
model.result('pg3').feature('mslc1').set('expr', 'es.normE');
model.result('pg3').feature('mslc1').set('multiplanexmethod', 'coord');
model.result('pg3').feature('mslc1').set('xcoord', 'es.CPx');
model.result('pg3').feature('mslc1').set('multiplaneymethod', 'coord');
model.result('pg3').feature('mslc1').set('ycoord', 'es.CPy');
model.result('pg3').feature('mslc1').set('multiplanezmethod', 'coord');
model.result('pg3').feature('mslc1').set('zcoord', 'es.CPz');
model.result('pg3').feature('mslc1').set('colortable', 'Prism');
model.result('pg3').feature('mslc1').set('colortabletrans', 'nonlinear');
model.result('pg3').feature('mslc1').set('colorcalibration', -0.8);
model.result('pg3').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg3').feature('mslc1').set('data', 'parent');
model.result('pg3').feature.create('strmsl1', 'StreamlineMultislice');
model.result('pg3').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg3').feature('strmsl1').set('solutionparams', 'parent');
model.result('pg3').feature('strmsl1').set('expr', {'es.Ex' 'es.Ey' 'es.Ez'});
model.result('pg3').feature('strmsl1').set('multiplanexmethod', 'coord');
model.result('pg3').feature('strmsl1').set('xcoord', 'es.CPx');
model.result('pg3').feature('strmsl1').set('multiplaneymethod', 'coord');
model.result('pg3').feature('strmsl1').set('ycoord', 'es.CPy');
model.result('pg3').feature('strmsl1').set('multiplanezmethod', 'coord');
model.result('pg3').feature('strmsl1').set('zcoord', 'es.CPz');
model.result('pg3').feature('strmsl1').set('titletype', 'none');
model.result('pg3').feature('strmsl1').set('posmethod', 'uniform');
model.result('pg3').feature('strmsl1').set('udist', 0.02);
model.result('pg3').feature('strmsl1').set('maxlen', 0.4);
model.result('pg3').feature('strmsl1').set('maxtime', Inf);
model.result('pg3').feature('strmsl1').set('inheritcolor', false);
model.result('pg3').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg3').feature('strmsl1').set('maxtime', Inf);
model.result('pg3').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg3').feature('strmsl1').set('maxtime', Inf);
model.result('pg3').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg3').feature('strmsl1').set('maxtime', Inf);
model.result('pg3').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg3').feature('strmsl1').set('maxtime', Inf);
model.result('pg3').feature('strmsl1').set('data', 'parent');
model.result('pg3').feature('strmsl1').set('inheritplot', 'mslc1');
model.result('pg3').feature('strmsl1').feature.create('col1', 'Color');
model.result('pg3').feature('strmsl1').feature('col1').set('expr', 'es.normE');
model.result('pg3').feature('strmsl1').feature('col1').set('colortable', 'PrismDark');
model.result('pg3').feature('strmsl1').feature('col1').set('colorlegend', false);
model.result('pg3').feature('strmsl1').feature('col1').set('colortabletrans', 'nonlinear');
model.result('pg3').feature('strmsl1').feature('col1').set('colorcalibration', -0.8);
model.result('pg3').feature('strmsl1').feature.create('filt1', 'Filter');
model.result('pg3').feature('strmsl1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Polarization');
model.result('pg4').set('data', 'dset2');
model.result('pg4').set('manualgrid', true);
model.result('pg4').set('yspacing', 0.1);
model.result('pg4').set('legendpos', 'lowerright');
model.result('pg4').create('ptgr1', 'PointGraph');
model.result('pg4').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg4').feature('ptgr1').set('linewidth', 'preference');
model.result('pg4').feature('ptgr1').selection.set([1]);
model.result('pg4').feature('ptgr1').set('expr', 'es.PZ');
model.result('pg4').feature('ptgr1').set('xdata', 'expr');
model.result('pg4').feature('ptgr1').set('xdataexpr', 'es.EZ');
model.result('pg4').feature('ptgr1').set('xdataunit', 'MV/m');
model.result('pg4').feature('ptgr1').set('autopoint', false);
model.result('pg4').feature('ptgr1').set('legend', true);
model.result('pg4').run;
model.result('pg4').run;
model.result.duplicate('pg5', 'pg4');
model.result('pg5').run;
model.result('pg5').label('Electrostriction');
model.result('pg5').set('yspacing', 0.001);
model.result('pg5').run;
model.result('pg5').feature('ptgr1').set('expr', 'efe1.emZZ');
model.result('pg5').run;

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/solid', true);
model.study('std2').feature('stat').setSolveFor('/physics/es', true);
model.study('std2').feature('stat').setSolveFor('/multiphysics/efe1', true);
model.study('std2').feature('stat').set('useparam', true);
model.study('std2').feature('stat').setIndex('pname', 't', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 's', 0);
model.study('std2').feature('stat').setIndex('pname', 't', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 's', 0);
model.study('std2').feature('stat').setIndex('plistarr', 'range(0,0.005,3)', 0);
model.study('std2').create('batsw', 'BatchSweep');
model.study('std2').feature('batsw').setIndex('pname', 't', 0);
model.study('std2').feature('batsw').setIndex('plistarr', '', 0);
model.study('std2').feature('batsw').setIndex('punit', 's', 0);
model.study('std2').feature('batsw').setIndex('pname', 't', 0);
model.study('std2').feature('batsw').setIndex('plistarr', '', 0);
model.study('std2').feature('batsw').setIndex('punit', 's', 0);
model.study('std2').feature('batsw').setIndex('pname', 'F0', 0);
model.study('std2').feature('batsw').setIndex('plistarr', '0 -25 -50', 0);
model.study('std2').feature('batsw').setIndex('punit', 'MPa', 0);
model.study('std2').feature('batsw').set('clearmesh', false);
model.study('std2').feature('batsw').set('clearsol', false);
model.study('std2').feature('batsw').set('maxallow', 3);

model.sol.create('sol6');
model.sol('sol6').study('std2');
model.sol('sol6').create('st1', 'StudyStep');
model.sol('sol6').feature('st1').set('study', 'std2');
model.sol('sol6').feature('st1').set('studystep', 'stat');
model.sol('sol6').create('v1', 'Variables');
model.sol('sol6').feature('v1').set('control', 'stat');
model.sol('sol6').create('s1', 'Stationary');
model.sol('sol6').feature('s1').create('p1', 'Parametric');
model.sol('sol6').feature('s1').feature.remove('pDef');
model.sol('sol6').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol6').feature('s1').set('control', 'stat');
model.sol('sol6').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol6').feature('s1').create('seDef', 'Segregated');
model.sol('sol6').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol6').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol6').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol6').feature('s1').create('d1', 'Direct');
model.sol('sol6').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol6').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol6').feature('s1').feature('d1').label('Suggested Direct Solver (efe1) (Merged)');
model.sol('sol6').feature('s1').create('i1', 'Iterative');
model.sol('sol6').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol6').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol6').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol6').feature('s1').feature('i1').label('Suggested Iterative Solver (efe1)');
model.sol('sol6').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol6').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol6').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol6').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol6').feature('s1').feature.remove('fcDef');
model.sol('sol6').feature('s1').feature.remove('seDef');
model.sol('sol6').attach('std2');

model.batch.create('b2', 'Batch');
model.batch('b2').study('std2');
model.batch('b2').create('so1', 'Solutionseq');
model.batch('b2').feature('so1').set('seq', 'sol6');
model.batch('b2').feature('so1').set('store', 'on');
model.batch('b2').feature('so1').set('clear', 'on');
model.batch('b2').feature('so1').set('psol', 'none');
model.batch('b2').set('batchfile', 'batchmodel.mph');
model.batch('b2').set('batchfileactive', 'off');
model.batch('b2').set('batchdir', 'C:/tmp/testusr/batchdir');
model.batch('b2').set('paramfilename', 'on');
model.batch('b2').set('synchsolutions', 'on');
model.batch('b2').set('clearsynchdata', 'on');
model.batch('b2').set('savemodelaftersynch', 'off');
model.batch('b2').attach('std2');
model.batch('b2').set('control', 'batsw');
model.batch.create('p2', 'Parametric');
model.batch('p2').study('std2');

model.result.table.create('tbl2', 'Table');
model.result.table('tbl2').label('Accumulated Probe Table 2');

model.study('std2').feature('batsw').set('accumtable', 'tbl2');

model.batch('p2').create('jo1', 'Jobseq');
model.batch('p2').feature('jo1').set('seq', 'b2');
model.batch('p2').set('pname', {'F0'});
model.batch('p2').set('plistarr', {'0 -25 -50'});
model.batch('p2').set('sweeptype', 'sparse');
model.batch('p2').set('err', 'on');
model.batch('p2').attach('std2');
model.batch('p2').set('control', 'batsw');

model.sol.create('sol7');
model.sol('sol7').study('std2');
model.sol('sol7').label('Parametric Solutions 2');

model.batch('b2').feature('so1').set('psol', 'sol7');
model.batch('p2').run('compute');
model.batch('b2').feature('daDef').run;

model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').set('data', 'dset4');
model.result('pg6').setIndex('looplevel', 601, 0);
model.result('pg6').setIndex('looplevel', 3, 1);
model.result('pg6').set('defaultPlotID', 'stress');
model.result('pg6').label('Stress (solid) 1');
model.result('pg6').set('frametype', 'spatial');
model.result('pg6').create('vol1', 'Volume');
model.result('pg6').feature('vol1').set('expr', {'solid.misesGp'});
model.result('pg6').feature('vol1').set('threshold', 'manual');
model.result('pg6').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg6').feature('vol1').set('colortable', 'Rainbow');
model.result('pg6').feature('vol1').set('colortabletrans', 'none');
model.result('pg6').feature('vol1').set('colorscalemode', 'linear');
model.result('pg6').feature('vol1').set('resolution', 'custom');
model.result('pg6').feature('vol1').set('refine', 2);
model.result('pg6').feature('vol1').set('colortable', 'Prism');
model.result('pg6').feature('vol1').create('def', 'Deform');
model.result('pg6').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg6').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result.create('pg7', 'PlotGroup3D');
model.result('pg7').label('Electric Potential (es) 1');
model.result('pg7').set('data', 'dset4');
model.result('pg7').setIndex('looplevel', 601, 0);
model.result('pg7').setIndex('looplevel', 3, 1);
model.result('pg7').set('frametype', 'spatial');
model.result('pg7').set('showlegendsmaxmin', true);
model.result('pg7').set('data', 'dset4');
model.result('pg7').setIndex('looplevel', 601, 0);
model.result('pg7').setIndex('looplevel', 3, 1);
model.result('pg7').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom2/pdef1/pcond2/pcond1/pcond1/pg1');
model.result('pg7').feature.create('mslc1', 'Multislice');
model.result('pg7').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg7').feature('mslc1').set('solutionparams', 'parent');
model.result('pg7').feature('mslc1').set('expr', 'V');
model.result('pg7').feature('mslc1').set('multiplanexmethod', 'coord');
model.result('pg7').feature('mslc1').set('xcoord', 'es.CPx');
model.result('pg7').feature('mslc1').set('multiplaneymethod', 'coord');
model.result('pg7').feature('mslc1').set('ycoord', 'es.CPy');
model.result('pg7').feature('mslc1').set('multiplanezmethod', 'coord');
model.result('pg7').feature('mslc1').set('zcoord', 'es.CPz');
model.result('pg7').feature('mslc1').set('colortable', 'Dipole');
model.result('pg7').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg7').feature('mslc1').set('data', 'parent');
model.result('pg7').feature.create('strmsl1', 'StreamlineMultislice');
model.result('pg7').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg7').feature('strmsl1').set('solutionparams', 'parent');
model.result('pg7').feature('strmsl1').set('expr', {'es.Ex' 'es.Ey' 'es.Ez'});
model.result('pg7').feature('strmsl1').set('multiplanexmethod', 'coord');
model.result('pg7').feature('strmsl1').set('xcoord', 'es.CPx');
model.result('pg7').feature('strmsl1').set('multiplaneymethod', 'coord');
model.result('pg7').feature('strmsl1').set('ycoord', 'es.CPy');
model.result('pg7').feature('strmsl1').set('multiplanezmethod', 'coord');
model.result('pg7').feature('strmsl1').set('zcoord', 'es.CPz');
model.result('pg7').feature('strmsl1').set('titletype', 'none');
model.result('pg7').feature('strmsl1').set('posmethod', 'uniform');
model.result('pg7').feature('strmsl1').set('udist', 0.02);
model.result('pg7').feature('strmsl1').set('maxlen', 0.4);
model.result('pg7').feature('strmsl1').set('maxtime', Inf);
model.result('pg7').feature('strmsl1').set('inheritcolor', false);
model.result('pg7').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg7').feature('strmsl1').set('maxtime', Inf);
model.result('pg7').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg7').feature('strmsl1').set('maxtime', Inf);
model.result('pg7').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg7').feature('strmsl1').set('maxtime', Inf);
model.result('pg7').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg7').feature('strmsl1').set('maxtime', Inf);
model.result('pg7').feature('strmsl1').set('data', 'parent');
model.result('pg7').feature('strmsl1').set('inheritplot', 'mslc1');
model.result('pg7').feature('strmsl1').feature.create('col1', 'Color');
model.result('pg7').feature('strmsl1').feature('col1').set('expr', 'V');
model.result('pg7').feature('strmsl1').feature('col1').set('colortable', 'DipoleDark');
model.result('pg7').feature('strmsl1').feature('col1').set('colorlegend', false);
model.result('pg7').feature('strmsl1').feature.create('filt1', 'Filter');
model.result('pg7').feature('strmsl1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').label('Electric Field Norm (es) 1');
model.result('pg8').set('data', 'dset4');
model.result('pg8').setIndex('looplevel', 601, 0);
model.result('pg8').setIndex('looplevel', 3, 1);
model.result('pg8').set('frametype', 'spatial');
model.result('pg8').set('showlegendsmaxmin', true);
model.result('pg8').set('data', 'dset4');
model.result('pg8').setIndex('looplevel', 601, 0);
model.result('pg8').setIndex('looplevel', 3, 1);
model.result('pg8').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom3/pdef1/pcond2/pcond1/pg1');
model.result('pg8').feature.create('mslc1', 'Multislice');
model.result('pg8').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg8').feature('mslc1').set('solutionparams', 'parent');
model.result('pg8').feature('mslc1').set('expr', 'es.normE');
model.result('pg8').feature('mslc1').set('multiplanexmethod', 'coord');
model.result('pg8').feature('mslc1').set('xcoord', 'es.CPx');
model.result('pg8').feature('mslc1').set('multiplaneymethod', 'coord');
model.result('pg8').feature('mslc1').set('ycoord', 'es.CPy');
model.result('pg8').feature('mslc1').set('multiplanezmethod', 'coord');
model.result('pg8').feature('mslc1').set('zcoord', 'es.CPz');
model.result('pg8').feature('mslc1').set('colortable', 'Prism');
model.result('pg8').feature('mslc1').set('colortabletrans', 'nonlinear');
model.result('pg8').feature('mslc1').set('colorcalibration', -0.8);
model.result('pg8').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg8').feature('mslc1').set('data', 'parent');
model.result('pg8').feature.create('strmsl1', 'StreamlineMultislice');
model.result('pg8').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg8').feature('strmsl1').set('solutionparams', 'parent');
model.result('pg8').feature('strmsl1').set('expr', {'es.Ex' 'es.Ey' 'es.Ez'});
model.result('pg8').feature('strmsl1').set('multiplanexmethod', 'coord');
model.result('pg8').feature('strmsl1').set('xcoord', 'es.CPx');
model.result('pg8').feature('strmsl1').set('multiplaneymethod', 'coord');
model.result('pg8').feature('strmsl1').set('ycoord', 'es.CPy');
model.result('pg8').feature('strmsl1').set('multiplanezmethod', 'coord');
model.result('pg8').feature('strmsl1').set('zcoord', 'es.CPz');
model.result('pg8').feature('strmsl1').set('titletype', 'none');
model.result('pg8').feature('strmsl1').set('posmethod', 'uniform');
model.result('pg8').feature('strmsl1').set('udist', 0.02);
model.result('pg8').feature('strmsl1').set('maxlen', 0.4);
model.result('pg8').feature('strmsl1').set('maxtime', Inf);
model.result('pg8').feature('strmsl1').set('inheritcolor', false);
model.result('pg8').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg8').feature('strmsl1').set('maxtime', Inf);
model.result('pg8').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg8').feature('strmsl1').set('maxtime', Inf);
model.result('pg8').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg8').feature('strmsl1').set('maxtime', Inf);
model.result('pg8').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg8').feature('strmsl1').set('maxtime', Inf);
model.result('pg8').feature('strmsl1').set('data', 'parent');
model.result('pg8').feature('strmsl1').set('inheritplot', 'mslc1');
model.result('pg8').feature('strmsl1').feature.create('col1', 'Color');
model.result('pg8').feature('strmsl1').feature('col1').set('expr', 'es.normE');
model.result('pg8').feature('strmsl1').feature('col1').set('colortable', 'PrismDark');
model.result('pg8').feature('strmsl1').feature('col1').set('colorlegend', false);
model.result('pg8').feature('strmsl1').feature('col1').set('colortabletrans', 'nonlinear');
model.result('pg8').feature('strmsl1').feature('col1').set('colorcalibration', -0.8);
model.result('pg8').feature('strmsl1').feature.create('filt1', 'Filter');
model.result('pg8').feature('strmsl1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result('pg6').run;
model.result('pg6').feature('vol1').set('unit', 'MPa');
model.result('pg6').run;
model.result('pg4').run;
model.result.duplicate('pg9', 'pg4');
model.result('pg9').run;
model.result('pg9').set('data', 'dset4');
model.result('pg9').run;
model.result('pg5').run;
model.result.duplicate('pg10', 'pg5');
model.result('pg10').run;
model.result('pg10').label('Strain');
model.result('pg10').set('data', 'dset4');
model.result('pg10').run;
model.result('pg10').feature('ptgr1').set('expr', 'solid.eZZ');
model.result('pg10').run;

model.batch('b1').feature('daDef').set('operation', 'clearalldata');
model.batch('b1').feature('daDef').run;
model.batch('b2').feature('daDef').set('operation', 'clearalldata');
model.batch('b2').feature('daDef').run;

model.result('pg10').run;

model.title('Hysteresis in Piezoelectric Ceramics');

model.description('Many piezoelectric materials are ferroelectric. Ferroelectric materials exhibit nonlinear polarization behavior such as hysteresis and saturation at large applied electric fields. In addition, the polarization and mechanical deformations in such materials can be strongly coupled due to the electrostriction effect. This model uses Ferroelectroelasticity interface to analyze a simple actuator made of PZT piezoelectric ceramic material, which is subjected to applied electric field and mechanical load.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;
model.sol('sol8').clearSolutionData;
model.sol('sol9').clearSolutionData;
model.sol('sol10').clearSolutionData;

model.label('piezoelectric_hysteresis.mph');

model.modelNode.label('Components');

out = model;
