function out = model
%
% lombardi_surface_mobility.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Semiconductor_Module/Transistors');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('semi', 'Semiconductor', 'geom1');
model.physics('semi').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/semi', true);

model.param.set('Vds', '0[V]');
model.param.descr('Vds', 'Drain-source voltage');
model.param.set('Vgs', '1[V]');
model.param.descr('Vgs', 'Gate-source voltage');
model.param.set('cp', '0');
model.param.descr('cp', 'Continuation parameter');

model.geom('geom1').lengthUnit([native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']);
model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', [1 0.5]);
model.geom('geom1').feature('r1').set('pos', [-0.5 -0.5]);
model.geom('geom1').feature('r1').setIndex('layername', 'Layer 1', 0);
model.geom('geom1').feature('r1').setIndex('layer', 0.01, 0);
model.geom('geom1').feature('r1').set('layerbottom', false);
model.geom('geom1').feature('r1').set('layertop', true);
model.geom('geom1').runPre('fin');
model.geom('geom1').create('ls1', 'LineSegment');
model.geom('geom1').feature('ls1').set('specify1', 'coord');
model.geom('geom1').feature('ls1').set('specify2', 'coord');
model.geom('geom1').feature('ls1').set('coord1', [-0.12 0]);
model.geom('geom1').feature('ls1').set('coord2', [0.12 0]);
model.geom('geom1').run('ls1');
model.geom('geom1').create('ls2', 'LineSegment');
model.geom('geom1').feature('ls2').set('specify1', 'coord');
model.geom('geom1').feature('ls2').set('specify2', 'coord');
model.geom('geom1').feature('ls2').set('coord1', [-0.18 0]);
model.geom('geom1').feature('ls2').set('coord2', [-0.5 0]);
model.geom('geom1').run('ls2');
model.geom('geom1').create('ls3', 'LineSegment');
model.geom('geom1').feature('ls3').set('specify1', 'coord');
model.geom('geom1').feature('ls3').set('specify2', 'coord');
model.geom('geom1').feature('ls3').set('coord1', [0.18 0]);
model.geom('geom1').feature('ls3').set('coord2', [0.5 0]);
model.geom('geom1').runPre('fin');
model.geom('geom1').run('fin');
model.geom('geom1').create('mce1', 'MeshControlEdges');
model.geom('geom1').feature('mce1').selection('input').set('fin', 4);
model.geom('geom1').run;

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('AroraMobilityModel', 'Arora mobility model');
model.material('mat1').propertyGroup.create('PowerLawMobilityModel', 'Power law mobility model');
model.material('mat1').propertyGroup.create('Auger', 'Auger recombination');
model.material('mat1').propertyGroup.create('Direct', 'Direct recombination');
model.material('mat1').propertyGroup.create('SRH', ['Shockley' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Read' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Hall recombination']);
model.material('mat1').propertyGroup.create('FletcherMobilityModel', 'Fletcher mobility model');
model.material('mat1').propertyGroup.create('CaugheyThomasMobilityModel', ['Caughey' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Thomas mobility model']);
model.material('mat1').propertyGroup.create('SemicondMaterial', 'Semiconductor material');
model.material('mat1').propertyGroup.create('LombardiSurfaceMobilityModel', 'Lombardi surface mobility model');
model.material('mat1').propertyGroup.create('ImpactIonization', 'Impact ionization');
model.material('mat1').propertyGroup.create('SlotboomModel', 'Slotboom model');
model.material('mat1').propertyGroup.create('JainRoulstonModel', ['Jain' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Roulston model']);
model.material('mat1').propertyGroup.create('KlaassenUnifiedMobilityModel', 'Klaassen unified mobility model');
model.material('mat1').label('Si - Silicon');
model.material('mat1').propertyGroup('def').set('relpermittivity', {'11.7' '0' '0' '0' '11.7' '0' '0' '0' '11.7'});
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'131[W/(m*K)]' '0' '0' '0' '131[W/(m*K)]' '0' '0' '0' '131[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('density', '2329[kg/m^3]');
model.material('mat1').propertyGroup('def').set('heatcapacity', '700[J/(kg*K)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mun0_ref_arora', '1252[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mup0_ref_arora', '407[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mun_min_ref_arora', '88[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mup_min_ref_arora', '54.3[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('Nn0_ref_arora', '1.26e17[1/cm^3]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('Np0_ref_arora', '2.35e17[1/cm^3]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('alpha0_arora', '0.88');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta1_arora', '-0.57');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta2_arora', '-2.33');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta3_arora', '-2.33');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta4_arora', '-0.146');
model.material('mat1').propertyGroup('AroraMobilityModel').set('Tref_arora', '300[K]');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('mun0_pl', '1448[cm^2/(V*s)]');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('mup0_pl', '473[cm^2/(V*s)]');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('alphan_pl', '2.33');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('alphap_pl', '2.23');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('Tref_pl', '300[K]');
model.material('mat1').propertyGroup('Auger').set('Cn', '2.8e-31[cm^6/s]');
model.material('mat1').propertyGroup('Auger').set('Cp', '9.9e-32[cm^6/s]');
model.material('mat1').propertyGroup('Direct').set('C', '0[cm^3/s]');
model.material('mat1').propertyGroup('SRH').set('taun', '10[us]');
model.material('mat1').propertyGroup('SRH').set('taup', '10[us]');
model.material('mat1').propertyGroup('FletcherMobilityModel').set('F1_fl', '1.04e21[1/(cm^1*V*s)]');
model.material('mat1').propertyGroup('FletcherMobilityModel').set('F2_fl', '7.45e13[1/cm^2]');
model.material('mat1').propertyGroup('FletcherMobilityModel').set('Tref_fl', '300[K]');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').label(['Caughey' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Thomas mobility model']);
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('alphan0_ct', '1.11');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('alphap0_ct', '1.21');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('vn0_ct', '1e7[cm/s]');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('vp0_ct', '8.37e6[cm/s]');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betan1_ct', '0.66');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betap1_ct', '0.17');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betan2_ct', '-0.87');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betap2_ct', '-0.52');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('Tref_ct', '300[K]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Eg0', '1.12[V]');
model.material('mat1').propertyGroup('SemicondMaterial').set('chi0', '4.05[V]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Nv', '(T/300[K])^(3/2)*1.04e19[1/cm^3]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Nc', '(T/300[K])^(3/2)*2.8e19[1/cm^3]');
model.material('mat1').propertyGroup('SemicondMaterial').set('mun', '1450[cm^2/(V*s)]');
model.material('mat1').propertyGroup('SemicondMaterial').set('mup', '500[cm^2/(V*s)]');
model.material('mat1').propertyGroup('SemicondMaterial').addInput('temperature');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('deltan_ls', '5.82e14[V/s]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('deltap_ls', '2.05e14[V/s]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mun1_ls', '4.75e7[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mup1_ls', '9.93e7[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mun2_ls', '1.74e5[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mup2_ls', '8.84e5[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('alphan_ls', '0.125');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('alphap_ls', '0.0317');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('Tref_ls', '1[K]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('Eref_ls', '1[V/cm]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('Nref_ls', '1[1/cm^3]');
model.material('mat1').propertyGroup('ImpactIonization').set('an', '0.426');
model.material('mat1').propertyGroup('ImpactIonization').set('ap', '0.243');
model.material('mat1').propertyGroup('ImpactIonization').set('bn', '4.81E5[V/cm]');
model.material('mat1').propertyGroup('ImpactIonization').set('bp', '6.53E5[V/cm]');
model.material('mat1').propertyGroup('ImpactIonization').set('cnii', '3.05E-4');
model.material('mat1').propertyGroup('ImpactIonization').set('cpii', '5.35E-4');
model.material('mat1').propertyGroup('ImpactIonization').set('dn', '6.86E-4');
model.material('mat1').propertyGroup('ImpactIonization').set('dp', '5.67E-4');
model.material('mat1').propertyGroup('SlotboomModel').set('Eref_sb', '0.00692[V]');
model.material('mat1').propertyGroup('SlotboomModel').set('Nref_sb', '1.3e17[1/cm^3]');
model.material('mat1').propertyGroup('SlotboomModel').set('alpha_sb', '0.5');
model.material('mat1').propertyGroup('JainRoulstonModel').set('An_jr', '3.5e-8[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Bn_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Cn_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Ap_jr', '3.5e-8[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Bp_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Cp_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Nref_jr', '1[1/cm^3]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('alpha_jr', '0.5');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('T_ref_kl', '300[K]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_e_max_kl', '1414.0[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_h_max_kl', '470.5[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_e_min_kl', '68.5[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_h_min_kl', '44.9[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('theta_e_kl', '2.285');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('theta_h_kl', '2.247');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('alpha_e_1_kl', '0.711');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('alpha_h_1_kl', '0.719');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_e_1_kl', '9.20e16[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_h_1_kl', '2.23e17[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('c_D_kl', '0.21');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('c_A_kl', '0.50');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_D_kl', '4.0e20[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_A_kl', '7.2e20[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('f_BH_kl', '3.828');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('f_CW_kl', '2.459');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_BH_kl', '1.36e20[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('P_CW_kl', '3.97e13');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_1_kl', '0.89233');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_2_kl', '0.41372');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_3_kl', '0.19778');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_4_kl', '0.28227');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_5_kl', '0.005978');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_6_kl', '1.80618');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_7_kl', '0.72169');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_1_kl', '0.7643');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_2_kl', '2.2999');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_3_kl', '6.5502');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_4_kl', '2.3670');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_5_kl', '-0.01552');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_6_kl', '0.6478');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('m_e_kl', 'me_const');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('m_h_kl', '1.258*me_const');

model.physics('semi').prop('Continuation').set('cp', 'cp');
model.physics('semi').create('mc1', 'MetalContact', 1);
model.physics('semi').feature('mc1').selection.set([2 3]);
model.physics('semi').create('mc2', 'MetalContact', 1);
model.physics('semi').feature('mc2').selection.set([7]);
model.physics('semi').feature('mc2').set('V0', 'Vds');
model.physics('semi').create('gc1', 'GateContact', 1);
model.physics('semi').feature('gc1').selection.set([5]);
model.physics('semi').feature('gc1').set('V0', 'Vgs');
model.physics('semi').feature('gc1').set('epsilon_ins', 4.2);
model.physics('semi').feature('gc1').set('d_ins', '5[nm]');
model.physics('semi').feature('gc1').set('Phi', '4.5[V]');
model.physics('semi').create('adm1', 'AnalyticDopingModel', 2);
model.physics('semi').feature('adm1').selection.set([1]);
model.physics('semi').feature('adm1').set('NAc', '5e17[1/cm^3]');
model.physics('semi').create('adm2', 'AnalyticDopingModel', 2);
model.physics('semi').feature('adm2').selection.set([1]);
model.physics('semi').feature('adm2').set('impurityDistribution', 'box');
model.physics('semi').feature('adm2').set('rb', {'0.2[um]' '0[um]' '0'});
model.physics('semi').feature('adm2').set('impurityType', 'donor');
model.physics('semi').feature('adm2').set('jwidth', '0.3[um]');
model.physics('semi').feature('adm2').set('jdepth', '0.2[um]');
model.physics('semi').feature('adm2').set('NDc', '1e19[1/cm^3]');
model.physics('semi').feature('adm2').set('jds', '0.1[um]');
model.physics('semi').feature('adm2').set('Nb_src', 'root.comp1.semi.adm1.NAc');
model.physics('semi').create('adm3', 'AnalyticDopingModel', 2);
model.physics('semi').feature('adm3').selection.set([1]);
model.physics('semi').feature('adm3').set('impurityDistribution', 'box');
model.physics('semi').feature('adm3').set('rb', {'-0.5[um]' '0[um]' '0'});
model.physics('semi').feature('adm3').set('jwidth', '0.3[um]');
model.physics('semi').feature('adm3').set('jdepth', '0.2[um]');
model.physics('semi').feature('adm3').set('impurityType', 'donor');
model.physics('semi').feature('adm3').set('NDc', '1e19[1/cm^3]');
model.physics('semi').feature('adm3').set('jds', '0.1[um]');
model.physics('semi').feature('adm3').set('Nb_src', 'root.comp1.semi.adm1.NAc');
model.physics('semi').create('tar1', 'TrapAssistedRecombination', 2);
model.physics('semi').feature('tar1').selection.set([1]);
model.physics('semi').feature('smm1').create('mmls1', 'LombardiSurfaceMobilityModel', 2);
model.physics('semi').feature('smm1').feature('mmls1').set('ContinuationType', 'Interface');
model.physics('semi').feature('smm1').set('mun_mat', 'root.comp1.semi.mun_ls');

model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('size').set('custom', true);
model.mesh('mesh1').feature('size').set('hmax', 0.04);
model.mesh('mesh1').feature('size').set('hgrad', 1.04);
model.mesh('mesh1').feature.remove('size1');
model.mesh('mesh1').feature.remove('size2');
model.mesh('mesh1').feature.remove('ftri1');
model.mesh('mesh1').create('edg1', 'Edge');
model.mesh('mesh1').feature('edg1').selection.set([3 4 5 6 7]);
model.mesh('mesh1').feature('edg1').set('smoothcontrol', false);
model.mesh('mesh1').feature('edg1').create('size1', 'Size');
model.mesh('mesh1').feature('edg1').feature('size1').selection.set([4 5 6]);
model.mesh('mesh1').feature('edg1').feature('size1').set('table', 'semi');
model.mesh('mesh1').feature('edg1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('edg1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('edg1').feature('size1').set('hmax', 0.005);
model.mesh('mesh1').create('cpe1', 'CopyEdge');
model.mesh('mesh1').feature('cpe1').selection('source').geom(1);
model.mesh('mesh1').feature('cpe1').selection('destination').geom(1);
model.mesh('mesh1').feature('cpe1').selection('source').set([3 4 5 6 7]);
model.mesh('mesh1').feature('cpe1').selection('destination').set([11]);
model.mesh('mesh1').feature('cpe1').set('smoothcontrol', false);
model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('map1').selection.set([2]);
model.mesh('mesh1').feature('map1').set('smoothcontrol', false);
model.mesh('mesh1').feature('map1').set('adjustedgdistr', true);
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([9]);
model.mesh('mesh1').feature('map1').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis1').set('elemcount', 6);
model.mesh('mesh1').feature('map1').feature('dis1').set('elemratio', 7);
model.mesh('mesh1').feature('map1').feature('dis1').set('growthrate', 'exponential');
model.mesh('mesh1').feature('map1').feature('dis1').set('reverse', true);
model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').set('smoothcontrol', false);
model.mesh('mesh1').run;

model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 'Vds', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'V', 0);
model.study('std1').feature('stat').setIndex('pname', 'Vds', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'V', 0);
model.study('std1').feature('stat').setIndex('pname', 'Vgs', 1);
model.study('std1').feature('stat').setIndex('plistarr', '', 1);
model.study('std1').feature('stat').setIndex('punit', 'V', 1);
model.study('std1').feature('stat').setIndex('pname', 'Vgs', 1);
model.study('std1').feature('stat').setIndex('plistarr', '', 1);
model.study('std1').feature('stat').setIndex('punit', 'V', 1);
model.study('std1').feature('stat').setIndex('plistarr', 'range(0,0.2,1)', 0);
model.study('std1').feature('stat').setIndex('pname', 'cp', 1);
model.study('std1').feature('stat').setIndex('plistarr', '0 1', 1);
model.study('std1').feature('stat').set('sweeptype', 'filled');
model.study('std1').feature('stat').set('preusesol', 'auto');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 1.0E-6);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol1').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s1').set('control', 'stat');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', false);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').feature('aDef').set('assemtol', 0);
model.sol('sol1').feature('s1').create('se1', 'Segregated');
model.sol('sol1').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_V' 'comp1_Ne' 'comp1_Ph' 'comp1_semi_n_bnd' 'comp1_semi_p_bnd'});
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('usesubminsteprecovery', 'auto');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subtermauto', 'tol');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subdtech', 'auto');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subrstep', 10);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subntolfact', 1);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subinitstep', 1);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subminstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('segvarspec', 'all');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subminsteprecovery', 0.75);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('maxsubiter', 50);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol1').feature('s1').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol1').feature('s1').feature('d1').set('ooc', 'off');
model.sol('sol1').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_semi_smm1_mmls1_Edn' 'comp1_semi_smm1_mmls1_Edp'});
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subtermconst', 'iter');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subdamp', 1);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subjtech', 'onevery');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subdtech', 'const');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subiter', 1);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('segvarspec', 'all');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('se1').set('segterm', 'iter');
model.sol('sol1').feature('s1').feature('se1').set('segiter', 3);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').study('std1');
model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 1.0E-6);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol1').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s1').set('control', 'stat');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', false);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').feature('aDef').set('assemtol', 0);
model.sol('sol1').feature('s1').create('se1', 'Segregated');
model.sol('sol1').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_V' 'comp1_Ne' 'comp1_Ph' 'comp1_semi_n_bnd' 'comp1_semi_p_bnd'});
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('usesubminsteprecovery', 'auto');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subtermauto', 'tol');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subdtech', 'auto');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subrstep', 10);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subntolfact', 1);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subinitstep', 1);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subminstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('segvarspec', 'all');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subminsteprecovery', 0.75);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('maxsubiter', 50);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol1').feature('s1').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol1').feature('s1').feature('d1').set('ooc', 'off');
model.sol('sol1').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_semi_smm1_mmls1_Edn' 'comp1_semi_smm1_mmls1_Edp'});
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subtermconst', 'iter');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subdamp', 1);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subjtech', 'onevery');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subdtech', 'const');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subiter', 1);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('segvarspec', 'all');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('se1').set('segterm', 'iter');
model.sol('sol1').feature('s1').feature('se1').set('segiter', 3);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').label('Electron Concentration (semi)');
model.result('pg1').set('showlegendsmaxmin', true);
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 2, 0);
model.result('pg1').setIndex('looplevel', 6, 1);
model.result('pg1').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond2/pg1');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('expr', 'semi.N');
model.result('pg1').feature('surf1').set('unit', '1/cm^3');
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').feature('surf1').set('colorscalemode', 'logarithmic');
model.result('pg1').feature('surf1').set('resolution', 'norefine');
model.result('pg1').feature('surf1').set('smooth', 'internal');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').label('Hole Concentration (semi)');
model.result('pg2').set('showlegendsmaxmin', true);
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 2, 0);
model.result('pg2').setIndex('looplevel', 6, 1);
model.result('pg2').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond2/pg2');
model.result('pg2').feature.create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('expr', 'semi.P');
model.result('pg2').feature('surf1').set('unit', '1/cm^3');
model.result('pg2').feature('surf1').set('colortable', 'Prism');
model.result('pg2').feature('surf1').set('colorscalemode', 'logarithmic');
model.result('pg2').feature('surf1').set('resolution', 'norefine');
model.result('pg2').feature('surf1').set('smooth', 'internal');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('data', 'parent');
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').label('Electric Potential (semi)');
model.result('pg3').set('data', 'dset1');
model.result('pg3').setIndex('looplevel', 2, 0);
model.result('pg3').setIndex('looplevel', 6, 1);
model.result('pg3').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond2/pg3');
model.result('pg3').feature.create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('expr', 'V');
model.result('pg3').feature('surf1').set('resolution', 'norefine');
model.result('pg3').feature('surf1').set('smooth', 'internal');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('data', 'parent');
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').set('data', 'dset1');
model.result('pg4').create('surf2', 'Surface');
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf2').set('expr', 'semi.Nnetdop');
model.result('pg4').feature('surf2').set('unit', '1/cm^3');
model.result('pg4').feature('surf2').set('coloring', 'gradient');
model.result('pg4').feature('surf2').set('colorscalemode', 'logarithmic');
model.result('pg4').feature('surf2').set('topcolor', 'red');
model.result('pg4').feature('surf2').set('bottomcolor', 'custom');
model.result('pg4').feature('surf2').set('custombottomcolor', [1 0.8 0.8]);
model.result('pg4').feature('surf2').set('smooth', 'internal');
model.result('pg4').feature('surf2').set('showsolutionparams', 'on');
model.result('pg4').feature('surf2').set('data', 'parent');
model.result('pg4').feature('surf2').set('titletype', 'none');
model.result('pg4').feature('surf2').feature.create('filt1', 'Filter');
model.result('pg4').feature('surf2').feature('filt1').set('expr', 'semi.Na-semi.Nd > 1[1/cm^3]');
model.result('pg4').feature('surf2').feature('filt1').set('useder', true);
model.result('pg4').feature('surf1').set('expr', 'semi.Nnetdop');
model.result('pg4').feature('surf1').set('unit', '1/cm^3');
model.result('pg4').feature('surf1').set('coloring', 'gradient');
model.result('pg4').feature('surf1').set('colorscalemode', 'logarithmic');
model.result('pg4').feature('surf1').set('topcolor', 'blue');
model.result('pg4').feature('surf1').set('bottomcolor', 'custom');
model.result('pg4').feature('surf1').set('custombottomcolor', [0.8 0.8 1]);
model.result('pg4').feature('surf1').set('smooth', 'internal');
model.result('pg4').feature('surf1').set('showsolutionparams', 'on');
model.result('pg4').feature('surf1').set('data', 'parent');
model.result('pg4').feature('surf1').set('titletype', 'none');
model.result('pg4').feature('surf1').feature.create('filt1', 'Filter');
model.result('pg4').feature('surf1').feature('filt1').set('expr', 'semi.Nd-semi.Na > 1[1/cm^3]');
model.result('pg4').feature('surf1').feature('filt1').set('useder', true);
model.result('pg4').set('titletype', 'manual');
model.result('pg4').set('title', 'Net Dopant Concentration \vert N<sub>d</sub> - N<sub>a</sub>\vert: P-type (Red), N-type (Blue)');
model.result('pg4').set('showlegendsmaxmin', true);
model.result('pg4').set('showlegendsunit', true);
model.result('pg4').set('legendpos', 'alternating');
model.result('pg4').feature('surf2').label('P-type');
model.result('pg4').feature('surf1').label('N-type');
model.result('pg4').label('Net Dopant Concentration (semi)');
model.result('pg1').run;
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').create('glob1', 'Global');
model.result('pg5').feature('glob1').set('markerpos', 'datapoints');
model.result('pg5').feature('glob1').set('linewidth', 'preference');
model.result('pg5').feature('glob1').set('expr', {'semi.I0_2'});
model.result('pg5').feature('glob1').set('descr', {'Terminal current'});
model.result('pg5').feature('glob1').set('unit', {'A'});
model.result('pg5').feature('glob1').set('xdatasolnumtype', 'level2');
model.result('pg5').run;
model.result('pg5').feature('glob1').set('legendmethod', 'manual');
model.result('pg5').feature('glob1').setIndex('legends', 'Constant mobility', 0);
model.result('pg5').feature('glob1').setIndex('legends', 'Lombardi surface mobility', 1);
model.result('pg5').run;
model.result('pg5').set('legendpos', 'lowerright');
model.result.create('pg6', 'PlotGroup2D');
model.result('pg6').run;
model.result('pg6').label('Electron current density comparison');
model.result('pg6').setIndex('looplevel', 1, 0);
model.result('pg6').set('view', 'new');
model.result('pg6').set('edges', false);
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', 'semi.JnX');
model.result('pg6').feature('surf1').set('descr', 'Electron current density, X-component');
model.result('pg6').feature('surf1').create('filt1', 'Filter');
model.result('pg6').run;
model.result('pg6').feature('surf1').feature('filt1').set('expr', '(y>-0.05[um])&&(x>-0.1[um])&&(x<0.1[um])');
model.result('pg6').run;
model.result('pg6').run;
model.result('pg6').feature.duplicate('surf2', 'surf1');
model.result('pg6').run;
model.result('pg6').feature('surf2').set('data', 'dset1');
model.result('pg6').feature('surf2').set('inheritplot', 'surf1');
model.result('pg6').feature('surf2').create('def1', 'Deform');
model.result('pg6').run;
model.result('pg6').feature('surf2').feature('def1').set('expr', {'0' '0.06'});
model.result('pg6').feature('surf2').feature('def1').set('scaleactive', true);
model.result('pg6').feature('surf2').feature('def1').set('scale', 1);
model.result('pg6').run;
model.result.create('pg7', 'PlotGroup2D');
model.result('pg7').run;
model.result('pg7').create('surf1', 'Surface');
model.result('pg7').feature('surf1').set('expr', 'semi.mun_ls');
model.result('pg7').feature('surf1').set('descr', 'Electron mobility, Lombardi');
model.result('pg7').run;

model.title('Lombardi Surface Mobility');

model.description('This example demonstrates how to use the Lombardi surface scattering model for the electron mobility in a simple MOSFET. The additional nonlinearity introduced by the field dependence of the mobility is readily overcome by the autogenerated solver sequence upon detection of such mobility models by the Semiconductor physics interface. The current density profile and total current flowing into the terminal is compared with the constant mobility case.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;

model.label('lombardi_surface_mobility.mph');

model.modelNode.label('Components');

out = model;
