function out = model
%
% carburization_and_quenching_of_a_steel_gear.m
%
% Model exported on May 26 2025, 21:30 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Metal_Processing_Module/Steel_Quenching');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('ht', 'HeatTransfer', 'geom1');
model.physics('ht').model('comp1');
model.physics('ht').prop('ShapeProperty').set('order_temperature', '1');
model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');
model.physics('solid').prop('StructuralTransientBehavior').set('StructuralTransientBehavior', 'Quasistatic');
model.physics.create('audc', 'AusteniteDecomposition', 'geom1');
model.physics('audc').model('comp1');
model.physics('audc').prop('SolidMechanics').set('trip', '1');
model.physics('audc').prop('SolidMechanics').set('plasticity', '0');
model.physics('audc').prop('SolidMechanics').set('dilstrain', '1');
model.physics('audc').prop('HeatTransfer').set('latentheat', '1');
model.physics('audc').prop('ShapeProperty').set('order_straindiscr_disc', '2');
model.physics.create('carb', 'Carburization', 'geom1');
model.physics('carb').model('comp1');

model.multiphysics.create('lht1', 'PhaseTransformationLatentHeat', 'geom1', 2);
model.multiphysics('lht1').set('Metphase_physics', 'audc');
model.multiphysics('lht1').set('HeatTransfer_physics', 'ht');
model.multiphysics('lht1').selection.all;
model.multiphysics.create('ptstr1', 'PhaseTransformationStrain', 'geom1', 2);
model.multiphysics('ptstr1').set('Metphase_physics', 'audc');
model.multiphysics('ptstr1').set('SolidMechanics_physics', 'solid');
model.multiphysics('ptstr1').selection.all;

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/ht', true);
model.study('std1').feature('time').setSolveFor('/physics/solid', true);
model.study('std1').feature('time').setSolveFor('/physics/audc', true);
model.study('std1').feature('time').setSolveFor('/physics/carb', true);
model.study('std1').feature('time').setSolveFor('/multiphysics/lht1', true);
model.study('std1').feature('time').setSolveFor('/multiphysics/ptstr1', true);

model.param.set('cenv', '0.75');
model.param.descr('cenv', 'Carbon potential');
model.param.set('c0', '0.2');
model.param.descr('c0', 'Initial carbon concentration');
model.param.set('Dc', '2e-7[cm^2/s]');
model.param.descr('Dc', 'Carbon diffusion coefficient');
model.param.set('kc', '2e-5[cm/s]');
model.param.descr('kc', 'Mass transfer coefficient');

model.geom.load({'part1'}, 'Multibody_Dynamics_Module\2D\External_Gears\spur_gear_2d.mph', {'part1'});
model.geom('geom1').create('pi1', 'PartInstance');
model.geom('geom1').feature('pi1').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi1').set('part', 'part1');
model.geom('geom1').runPre('fin');
model.geom('geom1').create('sq1', 'Square');
model.geom('geom1').feature('sq1').set('size', 0.06);
model.geom('geom1').run('sq1');
model.geom('geom1').create('sq2', 'Square');
model.geom('geom1').feature('sq2').set('size', 0.06);
model.geom('geom1').feature('sq2').set('rot', 9);
model.geom('geom1').run('sq2');
model.geom('geom1').create('int1', 'Intersection');
model.geom('geom1').feature('int1').selection('input').set({'pi1' 'sq1'});
model.geom('geom1').run('int1');
model.geom('geom1').create('dif1', 'Difference');
model.geom('geom1').feature('dif1').selection('input').set({'int1'});
model.geom('geom1').feature('dif1').selection('input2').set({'sq2'});
model.geom('geom1').runPre('fin');
model.geom('geom1').run;

model.physics('carb').prop('Carburization').set('carbmodel', 'user');
model.physics('carb').prop('Carburization').set('cpot', 'cenv');
model.physics('carb').create('cflux1', 'CarbonFlux', 1);
model.physics('carb').feature('carb1').set('D_0', 'Dc');
model.physics('carb').feature('carb1').set('diffusioncoefficient', 'user');
model.physics('carb').feature('carb1').set('D', 'Dc');
model.physics('carb').feature('init1').set('cinit', 'c0');
model.physics('carb').feature('cflux1').selection.set([3 4 5 6 7 8]);
model.physics('carb').feature('cflux1').set('masstransfercoefficient', 'user');
model.physics('carb').feature('cflux1').set('b', 'kc');

model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('size').set('hauto', 2);
model.mesh('mesh1').create('size1', 'Size');
model.mesh('mesh1').feature.move('size1', 1);
model.mesh('mesh1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('size1').set('hmax', '0.3[mm]');
model.mesh('mesh1').feature('size1').selection.geom('geom1', 1);
model.mesh('mesh1').feature('size1').selection.set([3 4 5 6 7 8]);
model.mesh('mesh1').run;

model.study('std1').label('Carburization');
model.study('std1').feature('time').set('tunit', 'h');
model.study('std1').feature('time').set('tlist', 'range(0,0.1,12)');
model.study('std1').feature('time').setEntry('activate', 'ht', false);
model.study('std1').feature('time').setEntry('activate', 'solid', false);
model.study('std1').feature('time').setEntry('activate', 'audc', false);
model.study('std1').feature('time').setEntry('activateCoupling', 'lht1', false);
model.study('std1').feature('time').setEntry('activateCoupling', 'ptstr1', false);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.1,12)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 121, 0);
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'carb.c'});
model.result('pg1').label('Carbon Concentration (carb)');
model.result('pg1').feature('surf1').set('colortable', 'AuroraBorealis');
model.result('pg1').feature('surf1').set('colortablerev', false);
model.result('pg1').feature('surf1').set('titletype', 'manual');
model.result('pg1').feature('surf1').set('title', 'Carbon Concentration');
model.result('pg1').run;

model.func.create('int1', 'Interpolation');
model.func('int1').set('funcname', 'htc');
model.func('int1').set('table', {'0' '200'; '300' '200'; '500' '2800'; '650' '750'; '1300' '750'});
model.func('int1').setIndex('argunit', 'degC', 0);
model.func('int1').setIndex('fununit', 'W/(m^2*K)', 0);
model.func.create('an1', 'Analytic');
model.func('an1').set('funcname', 'Ms');
model.func('an1').set('expr', '560-470*carb.c');
model.func('an1').set('args', 'carb.c');
model.func('an1').setIndex('argunit', 1, 0);
model.func('an1').set('fununit', 'degC');
model.func.create('int2', 'Interpolation');
model.func('int2').set('funcname', 'EYoung');
model.func('int2').set('table', {'0' '210'; '300' '180'; '600' '165'; '900' '120'; '' ''});
model.func('int2').setIndex('argunit', 'degC', 0);
model.func('int2').setIndex('fununit', 'GPa', 0);

model.physics('ht').feature('init1').set('Tinit', '900[degC]');
model.physics('ht').create('sym1', 'Symmetry', 1);
model.physics('ht').feature('sym1').selection.set([1 2]);
model.physics('ht').create('hf1', 'HeatFluxBoundary', 1);
model.physics('ht').feature('hf1').selection.set([3 4 5 6 7 8]);
model.physics('ht').feature('hf1').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht').feature('hf1').set('h', 'htc(T)');
model.physics('ht').feature('hf1').set('Text', '80[degC]');
model.physics('solid').prop('Type2D').set('Type2D', 'GeneralizedPlaneStrain');
model.physics('solid').prop('Type2D').set('enable_bending', false);
model.physics('solid').feature('lemm1').create('plsty1', 'Plasticity', 2);
model.physics('solid').feature('lemm1').feature('plsty1').set('IsotropicHardeningModel', 'HardeningFunction');
model.physics('solid').feature('lemm1').create('iss1', 'InitialStressandStrain', 2);
model.physics('solid').feature('lemm1').feature('iss1').set('eil', [0.005 0 0 0 0.005 0 0 0 0.005]);
model.physics('solid').create('sym1', 'SymmetrySolid', 1);
model.physics('solid').feature('sym1').selection.set([1 2]);
model.physics('audc').feature('phase2').active(false);
model.physics('audc').feature('phase3').active(false);
model.physics('audc').feature('phase4').active(false);
model.physics('audc').feature('ptran1').active(false);
model.physics('audc').feature('ptran2').active(false);
model.physics('audc').feature('ptran3').active(false);

model.common.create('minpt1', 'CommonInputDef', 'comp1');
model.common('minpt1').set('quantity', 'strainreferencetemperature');
model.common('minpt1').selection.geom('geom1', 2);
model.common('minpt1').selection.set([1]);
model.common('minpt1').selection.inherit(false);
model.common('minpt1').set('value', '900[degC]');

model.physics('audc').prop('MaterialProperties').runCommand('makecompoundmaterial');
model.physics('audc').prop('HeatTransfer').set('latentheat', false);
model.physics('audc').prop('SolidMechanics').set('plasticity', true);
model.physics('audc').feature('phase1').runCommand('makephasematerial');
model.physics('audc').feature('phase1').set('IsotropicHardeningModel', 'LinearIsotropicHardening');
model.physics('audc').feature('phase5').runCommand('makephasematerial');
model.physics('audc').feature('phase5').set('weightfactorforyieldstress', 'geijselaers');
model.physics('audc').feature('phase5').set('softphase', 'phase1');
model.physics('audc').feature('phase5').set('IsotropicHardeningModel', 'LinearIsotropicHardening');
model.physics('audc').feature('ptran4').set('Ms', 'Ms(carb.c)');
model.physics('audc').feature('ptran4').set('trip', true);
model.physics('audc').feature('ptran4').set('saturationfunction', 'DesalosTRIP');
model.physics('audc').feature('ptran4').set('recovery', true);

model.material('audcphase1mat').propertyGroup('def').func.create('int1', 'Interpolation');
model.material('audcphase1mat').propertyGroup('def').func('int1').set('funcname', 'k');
model.material('audcphase1mat').propertyGroup('def').func('int1').set('table', {'0' '15'; '300' '20'; '600' '22'; '900' '25'; '' ''});
model.material('audcphase1mat').propertyGroup('def').func('int1').setIndex('argunit', 'degC', 0);
model.material('audcphase1mat').propertyGroup('def').func('int1').setIndex('fununit', 'W/(m*K)', 0);
model.material('audcphase1mat').propertyGroup('def').addInput('temperature');
model.material('audcphase1mat').propertyGroup('def').func.create('int2', 'Interpolation');
model.material('audcphase1mat').propertyGroup('def').func('int2').set('funcname', 'Cp');
model.material('audcphase1mat').propertyGroup('def').func('int2').set('table', {'0' '520'; '300' '560'; '600' '590'; '900' '620'});
model.material('audcphase1mat').propertyGroup('def').func('int2').setIndex('argunit', 'degC', 0);
model.material('audcphase1mat').propertyGroup('def').func('int2').setIndex('fununit', 'J/(kg*K)', 0);
model.material('audcphase1mat').propertyGroup('def').set('thermalconductivity', {'k(T)'});
model.material('audcphase1mat').propertyGroup('def').set('density', {'7930'});
model.material('audcphase1mat').propertyGroup('def').set('heatcapacity', {'Cp(T)'});
model.material('audcphase1mat').propertyGroup('ThermalExpansion').set('thermalexpansioncoefficient', {'2.2e-5'});
model.material('audcphase1mat').propertyGroup('Enu').addInput('temperature');
model.material('audcphase1mat').propertyGroup('Enu').set('E', {'EYoung(T)'});
model.material('audcphase1mat').propertyGroup('Enu').set('nu', {'0.3'});
model.material('audcphase1mat').propertyGroup('ElastoplasticModel').addInput('temperature');
model.material('audcphase1mat').propertyGroup('ElastoplasticModel').func.create('int1', 'Interpolation');
model.material('audcphase1mat').propertyGroup('ElastoplasticModel').func('int1').set('funcname', 'sY');
model.material('audcphase1mat').propertyGroup('ElastoplasticModel').func('int1').set('table', {'0' '200'; '300' '135'; '600' '40'; '850' '36'});
model.material('audcphase1mat').propertyGroup('ElastoplasticModel').func('int1').setIndex('argunit', 'degC', 0);
model.material('audcphase1mat').propertyGroup('ElastoplasticModel').func('int1').setIndex('fununit', 'MPa', 0);
model.material('audcphase1mat').propertyGroup('ElastoplasticModel').func.create('int2', 'Interpolation');
model.material('audcphase1mat').propertyGroup('ElastoplasticModel').func('int2').set('funcname', 'h');
model.material('audcphase1mat').propertyGroup('ElastoplasticModel').func('int2').set('table', {'0' '1'; '300' '15'; '600' '11'; '900' '0.6'});
model.material('audcphase1mat').propertyGroup('ElastoplasticModel').func('int2').setIndex('argunit', 'degC', 0);
model.material('audcphase1mat').propertyGroup('ElastoplasticModel').func('int2').setIndex('fununit', 'GPa', 0);
model.material('audcphase1mat').propertyGroup('ElastoplasticModel').set('sigmags', {'sY(T)'});
model.material('audcphase1mat').propertyGroup('ElastoplasticModel').set('Et', {'h(T)'});
model.material('audcphase5mat').propertyGroup('def').func.create('int1', 'Interpolation');
model.material('audcphase5mat').propertyGroup('def').func('int1').set('funcname', 'k');
model.material('audcphase5mat').propertyGroup('def').func('int1').set('table', {'0' '44'; '300' '38'; '600' '30'; '900' '24'});
model.material('audcphase5mat').propertyGroup('def').func('int1').setIndex('argunit', 'degC', 0);
model.material('audcphase5mat').propertyGroup('def').func('int1').setIndex('fununit', 'W/(m*K)', 0);
model.material('audcphase5mat').propertyGroup('def').addInput('temperature');
model.material('audcphase5mat').propertyGroup('def').func.create('int2', 'Interpolation');
model.material('audcphase5mat').propertyGroup('def').func('int2').set('funcname', 'Cp');
model.material('audcphase5mat').propertyGroup('def').func('int2').set('table', {'0' '480'; '300' '570'; '600' '640'; '900' '650'; '' ''});
model.material('audcphase5mat').propertyGroup('def').func('int2').setIndex('argunit', 'degC', 0);
model.material('audcphase5mat').propertyGroup('def').func('int2').setIndex('fununit', 'J/(kg*K)', 0);
model.material('audcphase5mat').propertyGroup('def').set('thermalconductivity', {'k(T)'});
model.material('audcphase5mat').propertyGroup('def').set('density', {'7850'});
model.material('audcphase5mat').propertyGroup('def').set('heatcapacity', {'Cp(T)'});
model.material('audcphase5mat').propertyGroup('ThermalExpansion').set('thermalexpansioncoefficient', {'1.4e-5'});
model.material('audcphase5mat').propertyGroup('Enu').addInput('temperature');
model.material('audcphase5mat').propertyGroup('Enu').set('E', {'EYoung(T)'});
model.material('audcphase5mat').propertyGroup('Enu').set('nu', {'0.3'});
model.material('audcphase5mat').propertyGroup('ElastoplasticModel').addInput('temperature');
model.material('audcphase5mat').propertyGroup('ElastoplasticModel').func.create('int1', 'Interpolation');
model.material('audcphase5mat').propertyGroup('ElastoplasticModel').func('int1').set('funcname', 'sY');
model.material('audcphase5mat').propertyGroup('ElastoplasticModel').func('int1').set('table', {'0' '1600'; '300' '1500'; '600' '1400'; '900' '100'; '' ''});
model.material('audcphase5mat').propertyGroup('ElastoplasticModel').func('int1').setIndex('argunit', 'degC', 0);
model.material('audcphase5mat').propertyGroup('ElastoplasticModel').func('int1').setIndex('fununit', 'MPa', 0);
model.material('audcphase5mat').propertyGroup('ElastoplasticModel').func.create('int2', 'Interpolation');
model.material('audcphase5mat').propertyGroup('ElastoplasticModel').func('int2').set('funcname', 'h');
model.material('audcphase5mat').propertyGroup('ElastoplasticModel').func('int2').set('table', {'0' '1'; '300' '15'; '600' '11'; '900' '0.6'});
model.material('audcphase5mat').propertyGroup('ElastoplasticModel').func('int2').setIndex('argunit', 'degC', 0);
model.material('audcphase5mat').propertyGroup('ElastoplasticModel').func('int2').setIndex('fununit', 'GPa', 0);
model.material('audcphase5mat').propertyGroup('ElastoplasticModel').set('sigmags', {'sY(T)'});
model.material('audcphase5mat').propertyGroup('ElastoplasticModel').set('Et', {'h(T)'});

model.study.create('std2');
model.study('std2').create('time', 'Transient');
model.study('std2').feature('time').setSolveFor('/physics/ht', true);
model.study('std2').feature('time').setSolveFor('/physics/solid', true);
model.study('std2').feature('time').setSolveFor('/physics/audc', true);
model.study('std2').feature('time').setSolveFor('/physics/carb', true);
model.study('std2').feature('time').setSolveFor('/multiphysics/lht1', true);
model.study('std2').feature('time').setSolveFor('/multiphysics/ptstr1', true);
model.study('std2').label('Quenching');
model.study('std2').feature('time').set('tunit', 'min');
model.study('std2').feature('time').set('tlist', 'range(0,0.1,10)');
model.study('std2').feature('time').set('usertol', true);
model.study('std2').feature('time').set('rtol', 0.001);
model.study('std2').feature('time').setEntry('activate', 'carb', false);
model.study('std2').feature('time').set('usesol', true);
model.study('std2').feature('time').set('notsolmethod', 'sol');
model.study('std2').feature('time').set('notstudy', 'std1');
model.study('std2').feature('time').set('notsolnum', 'last');

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'time');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_audc_phasefractions').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_w0Z').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_audc_phasefractions').set('scaleval', '1');
model.sol('sol2').feature('v1').feature('comp1_solid_w0Z').set('scaleval', '1e-3');
model.sol('sol2').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.04493603383474236');
model.sol('sol2').feature('v1').set('control', 'time');
model.sol('sol2').create('t1', 'Time');
model.sol('sol2').feature('t1').set('tlist', 'range(0,0.1,10)');
model.sol('sol2').feature('t1').set('plot', 'off');
model.sol('sol2').feature('t1').set('plotgroup', 'pg1');
model.sol('sol2').feature('t1').set('plotfreq', 'tout');
model.sol('sol2').feature('t1').set('probesel', 'all');
model.sol('sol2').feature('t1').set('probes', {});
model.sol('sol2').feature('t1').set('probefreq', 'tsteps');
model.sol('sol2').feature('t1').set('rtol', 0.001);
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol2').feature('t1').set('atolmethod', {'comp1_audc_phasefractions' 'global' 'comp1_carb_c' 'global' 'comp1_ptstr1_ptstrains' 'global' 'comp1_ptstr1_t_old' 'global' 'comp1_T' 'global'  ...
'comp1_u' 'global' 'comp1_solid_w0Z' 'global'});
model.sol('sol2').feature('t1').set('atol', {'comp1_audc_phasefractions' '1e-3' 'comp1_carb_c' '1e-3' 'comp1_ptstr1_ptstrains' '1e-3' 'comp1_ptstr1_t_old' '1e-3' 'comp1_T' '1e-3'  ...
'comp1_u' '1e-3' 'comp1_solid_w0Z' '1e-3'});
model.sol('sol2').feature('t1').set('atolvaluemethod', {'comp1_audc_phasefractions' 'factor' 'comp1_carb_c' 'factor' 'comp1_ptstr1_ptstrains' 'factor' 'comp1_ptstr1_t_old' 'factor' 'comp1_T' 'factor'  ...
'comp1_u' 'factor' 'comp1_solid_w0Z' 'factor'});
model.sol('sol2').feature('t1').set('reacf', true);
model.sol('sol2').feature('t1').set('storeudot', true);
model.sol('sol2').feature('t1').set('endtimeinterpolation', true);
model.sol('sol2').feature('t1').set('estrat', 'exclude');
model.sol('sol2').feature('t1').set('maxorder', 2);
model.sol('sol2').feature('t1').set('control', 'time');
model.sol('sol2').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('t1').create('seDef', 'Segregated');
model.sol('sol2').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol2').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol2').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol2').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol2').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol2').feature('t1').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('d1').label('Direct (Merged)');
model.sol('sol2').feature('t1').create('i1', 'Iterative');
model.sol('sol2').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol2').feature('t1').feature('i1').set('rhob', 20);
model.sol('sol2').feature('t1').feature('i1').set('maxlinit', 10000);
model.sol('sol2').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol2').feature('t1').feature('i1').label('AMG, heat transfer variables (ht)');
model.sol('sol2').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol2').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol2').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol2').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol2').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol2').feature('t1').feature.remove('fcDef');
model.sol('sol2').feature('t1').feature.remove('seDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').label('Temperature (ht)');
model.result('pg2').set('data', 'dset2');
model.result('pg2').setIndex('looplevel', 101, 0);
model.result('pg2').set('data', 'dset2');
model.result('pg2').setIndex('looplevel', 101, 0);
model.result('pg2').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pg2');
model.result('pg2').feature.create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('solutionparams', 'parent');
model.result('pg2').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('data', 'parent');
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').set('data', 'dset2');
model.result('pg3').setIndex('looplevel', 101, 0);
model.result('pg3').set('defaultPlotID', 'stress');
model.result('pg3').label('Stress (solid)');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg3').feature('surf1').set('threshold', 'manual');
model.result('pg3').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg3').feature('surf1').set('colortable', 'Rainbow');
model.result('pg3').feature('surf1').set('colortabletrans', 'none');
model.result('pg3').feature('surf1').set('colorscalemode', 'linear');
model.result('pg3').feature('surf1').set('resolution', 'normal');
model.result('pg3').feature('surf1').set('colortable', 'Prism');
model.result('pg3').feature('surf1').create('def', 'Deform');
model.result('pg3').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg3').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').set('data', 'dset2');
model.result('pg4').setIndex('looplevel', 101, 0);
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', {'audc.phase1.xi'});
model.result('pg4').label('Austenite (audc)');
model.result('pg4').feature('surf1').set('coloring', 'gradient');
model.result('pg4').feature('surf1').set('topcolor', 'custom');
model.result('pg4').feature('surf1').set('customtopcolor', [0.9 0.4 0.15]);
model.result('pg4').feature('surf1').set('bottomcolor', 'custom');
model.result('pg4').feature('surf1').set('custombottomcolor', [0 0 0.5]);
model.result('pg4').feature('surf1').set('colortablerev', false);
model.result('pg4').feature('surf1').set('titletype', 'manual');
model.result('pg4').feature('surf1').set('title', 'Austenite');
model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').set('data', 'dset2');
model.result('pg5').setIndex('looplevel', 101, 0);
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', {'audc.phase5.xi'});
model.result('pg5').label('Martensite (audc)');
model.result('pg5').feature('surf1').set('coloring', 'gradient');
model.result('pg5').feature('surf1').set('topcolor', 'custom');
model.result('pg5').feature('surf1').set('customtopcolor', [0.9 0.4 0.15]);
model.result('pg5').feature('surf1').set('bottomcolor', 'custom');
model.result('pg5').feature('surf1').set('custombottomcolor', [0 0 0.5]);
model.result('pg5').feature('surf1').set('colortablerev', false);
model.result('pg5').feature('surf1').set('titletype', 'manual');
model.result('pg5').feature('surf1').set('title', 'Martensite');
model.result('pg2').run;
model.result.dataset.create('mir1', 'Mirror2D');
model.result.dataset('mir1').set('data', 'dset2');
model.result.dataset('mir1').set('method', 'pointdir');
model.result.dataset('mir1').set('pddir', [1 0]);
model.result.dataset.create('sec1', 'Sector2D');
model.result.dataset('sec1').set('data', 'mir1');
model.result.dataset('sec1').set('sectors', 20);
model.result('pg1').run;
model.result('pg1').set('data', 'mir1');
model.result('pg1').set('edges', false);
model.result('pg1').create('surf2', 'Surface');
model.result('pg1').feature.move('surf2', 0);
model.result('pg1').feature('surf2').set('data', 'sec1');
model.result('pg1').feature('surf2').set('titletype', 'none');
model.result('pg1').feature('surf2').set('coloring', 'uniform');
model.result('pg1').feature('surf2').set('color', 'gray');
model.result('pg1').run;
model.result.create('pg6', 'PlotGroup2D');
model.result('pg6').run;
model.result('pg6').set('data', 'mir1');
model.result('pg6').label('Martensite Start Temperature');
model.result('pg6').set('edges', false);
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('data', 'sec1');
model.result('pg6').feature('surf1').set('coloring', 'uniform');
model.result('pg6').feature('surf1').set('color', 'gray');
model.result('pg6').feature('surf1').set('titletype', 'none');
model.result('pg6').run;
model.result('pg6').create('surf2', 'Surface');
model.result('pg6').feature('surf2').set('expr', 'Ms(carb.c)');
model.result('pg6').feature('surf2').set('unit', 'degC');
model.result('pg6').feature('surf2').set('descractive', true);
model.result('pg6').feature('surf2').set('descr', 'Martensite Start Temperature');
model.result('pg6').run;
model.result.create('pg7', 'PlotGroup2D');
model.result('pg7').run;
model.result('pg7').label('Residual Stress');
model.result('pg7').set('data', 'mir1');
model.result('pg7').set('edges', false);
model.result('pg7').create('surf1', 'Surface');
model.result('pg7').feature('surf1').set('data', 'sec1');
model.result('pg7').feature('surf1').set('coloring', 'uniform');
model.result('pg7').feature('surf1').set('color', 'gray');
model.result('pg7').feature('surf1').set('titletype', 'none');
model.result('pg7').run;
model.result('pg7').create('surf2', 'Surface');
model.result('pg7').feature('surf2').set('expr', 'solid.sp2Gp');
model.result('pg7').run;

model.title('Carburization and Quenching of a Steel Gear');

model.description('This model shows how to simulate carburization and quenching of a steel gear. Diffusion of carbon into the surface of the gear affects the onset of martensitic transformation. Residual stresses are computed, and it is shown that high residual compressive stresses appear at the root of the gear.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('carburization_and_quenching_of_a_steel_gear.mph');

model.modelNode.label('Components');

out = model;
