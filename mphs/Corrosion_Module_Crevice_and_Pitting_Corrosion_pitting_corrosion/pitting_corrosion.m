function out = model
%
% pitting_corrosion.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Corrosion_Module/Crevice_and_Pitting_Corrosion');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('tcd', 'TertiaryCurrentDistributionNernstPlanck', 'geom1', {'cNa' 'cCl' 'cFe'});

model.multiphysics.create('ndbdg1', 'NonDeformingBoundaryDeformedGeometry', 'geom1', 1);
model.multiphysics('ndbdg1').set('Echem_physics', 'tcd');
model.multiphysics('ndbdg1').selection.all;
model.multiphysics.create('desdg1', 'DeformingElectrodeSurfaceDeformedGeometry', 'geom1', 1);
model.multiphysics('desdg1').set('Echem_physics', 'tcd');
model.multiphysics('desdg1').selection.all;
model.multiphysics('desdg1').set('embs', '0');

model.common.create('free1', 'DeformingDomainDeformedGeometry', 'comp1');
model.common('free1').set('smoothingType', 'hyperelastic');
model.common('free1').selection.all;

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('cCl_0', 'cNa_0+cH_0+2*cFe_0-cOH_0', 'Bulk Cl- concentration');
model.param.set('cFe_0', 'Keq_FeOH2/cOH_0^2', 'Bulk Fe2+ concentration');
model.param.set('cH_0', '10^(-pKw-pH)[M]', 'Bulk H+ concentration');
model.param.set('cH_ref', '1e-7[M]', 'Reference concentration of protons for Fe dissolution kinetics');
model.param.set('cNa_0', '1[mM]', 'Bulk Na+ concentration');
model.param.set('cOH_0', '10^(-pKw+pH)[M]', 'Bulk OH- concentration');
model.param.set('D_Cl', '2.0e-9[m^2/s]', 'Diffusion coefficient, Na+');
model.param.set('D_Fe', '0.72e-9[m^2/s]', 'Diffusion coefficient, Fe2+');
model.param.set('D_H', '9.3e-9[m^2/s]', 'Diffusion coefficient, H+');
model.param.set('D_Na', '1.3e-9[m^2/s]', 'Diffusion coefficient, Cl-');
model.param.set('D_OH', '5.3e-9[m^2/s]', 'Diffusion coefficient, OH-');
model.param.set('E_metal', '-0.31[V]', 'Metal mixed potential vs SHE');
model.param.set('Eeq_Fe', '-0.44[V]', 'Iron dissolution equilibrium potential vs SHE');
model.param.set('epsl_pit', '0.025', 'Electrolyte volume fraction in pit (porosity)');
model.param.set('H_pit', '5[um]', 'Initial pit height');
model.param.set('i0_ref_Fe', '1e0[A/m^2]', 'Exchange current density at reference conditions');
model.param.set('k_FeOH2', '1e4[m^6/mol^2/s]', 'Rate constant');
model.param.set('Keq_FeOH2', '(7.66e-6[M])^3', 'Equilibrium constant');
model.param.set('pH', '10', 'Bulk pH');
model.param.set('pKw', '14.94-0.04209*(-273.15+T)/1[K]+1.718E-4*(-273.15+T)^2/1[K^2]', 'Water dissociation constant');
model.param.set('R_pit', '0.5[um]', 'Initial pit radius');
model.param.set('T', '293.15[K]', 'Temperature');
model.param.set('rho_Fe', '7860[kg/m^3]', 'Density, iron');
model.param.set('M_Fe', '55.8[g/mol]', 'Molar mass, iron');

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', {'R_pit*20' 'R_pit*10'});
model.geom('geom1').run('r1');
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').set('size', {'R_pit' 'H_pit'});
model.geom('geom1').feature('r2').set('pos', {'0' '-H_pit'});
model.geom('geom1').run('r2');
model.geom('geom1').create('uni1', 'Union');
model.geom('geom1').feature('uni1').selection('input').set({'r1' 'r2'});
model.geom('geom1').feature('uni1').set('intbnd', false);
model.geom('geom1').run('uni1');
model.geom('geom1').create('fil1', 'Fillet');
model.geom('geom1').feature('fil1').selection('point').set('uni1', [4 5]);
model.geom('geom1').feature('fil1').set('radius', 'R_pit');
model.geom('geom1').run('fil1');
model.geom('geom1').run;

model.physics('tcd').prop('SpeciesProperties').set('ChargeTransportModel', 'WaterBased');

model.variable.create('var1');
model.variable('var1').model('comp1');

% To import content from file, use:
% model.variable('var1').loadFile('FILENAME');
model.variable('var1').set('R_FeOH2_expr', 'k_FeOH2*(cFe*(tcd.cOH)^2-Keq_FeOH2)', 'FeOH2 formation rate');
model.variable('var1').set('R_FeOH2', 'if(R_FeOH2_expr>0,R_FeOH2_expr,0)', 'FeOH2 formation rate, irreversible');
model.variable('var1').set('epsl', 'if(z>0,1,epsl_pit)', 'Electrolyte volume fraction');

model.physics('tcd').feature('sp1').setIndex('z', 1, 0);
model.physics('tcd').feature('sp1').setIndex('z', -1, 1);
model.physics('tcd').feature('sp1').setIndex('z', 2, 2);
model.physics('tcd').create('sep1', 'Separator', 2);
model.physics('tcd').feature('sep1').selection.all;
model.physics('tcd').feature('sep1').set('D_cNa', {'D_Na' '0' '0' '0' 'D_Na' '0' '0' '0' 'D_Na'});
model.physics('tcd').feature('sep1').set('D_cCl', {'D_Cl' '0' '0' '0' 'D_Cl' '0' '0' '0' 'D_Cl'});
model.physics('tcd').feature('sep1').set('D_cFe', {'D_Fe' '0' '0' '0' 'D_Fe' '0' '0' '0' 'D_Fe'});
model.physics('tcd').feature('sep1').set('DH', {'D_H' '0' '0' '0' 'D_H' '0' '0' '0' 'D_H'});
model.physics('tcd').feature('sep1').set('DOH', {'D_OH' '0' '0' '0' 'D_OH' '0' '0' '0' 'D_OH'});
model.physics('tcd').feature('sep1').set('epsl', 'epsl');
model.physics('tcd').create('reac1', 'Reactions', 2);
model.physics('tcd').feature('reac1').selection.all;
model.physics('tcd').feature('reac1').setIndex('R_cFe', '-R_FeOH2', 0);
model.physics('tcd').feature('reac1').set('ROH', '-2*R_FeOH2');
model.physics('tcd').create('conc1', 'Concentration', 1);
model.physics('tcd').feature('conc1').selection.set([3]);
model.physics('tcd').feature('conc1').setIndex('species', true, 0);
model.physics('tcd').feature('conc1').setIndex('c0', 'cNa_0', 0);
model.physics('tcd').feature('conc1').setIndex('species', true, 1);
model.physics('tcd').feature('conc1').setIndex('c0', 'cCl_0', 1);
model.physics('tcd').feature('conc1').setIndex('species', true, 2);
model.physics('tcd').feature('conc1').setIndex('c0', 'cFe_0', 2);
model.physics('tcd').create('eip1', 'ElectrolytePotential', 1);
model.physics('tcd').feature('eip1').selection.set([3]);
model.physics('tcd').create('es1', 'ElectrodeSurface', 1);
model.physics('tcd').feature('es1').selection.set([4 5 7 8]);
model.physics('tcd').feature('es1').setIndex('Species', 's1', 0, 0);
model.physics('tcd').feature('es1').setIndex('rhos', 8960, 0, 0);
model.physics('tcd').feature('es1').setIndex('Ms', 0.06355, 0, 0);
model.physics('tcd').feature('es1').setIndex('Species', 's1', 0, 0);
model.physics('tcd').feature('es1').setIndex('rhos', 8960, 0, 0);
model.physics('tcd').feature('es1').setIndex('Ms', 0.06355, 0, 0);
model.physics('tcd').feature('es1').setIndex('Species', 'Fe', 0, 0);
model.physics('tcd').feature('es1').setIndex('rhos', 'rho_Fe', 0, 0);
model.physics('tcd').feature('es1').setIndex('Ms', 'M_Fe', 0, 0);
model.physics('tcd').feature('es1').set('SolveForDissolvingDepositingConcentrationVariable', false);
model.physics('tcd').feature('es1').set('phisext0', 'E_metal');
model.physics('tcd').feature('es1').feature('er1').set('nm', 2);
model.physics('tcd').feature('es1').feature('er1').setIndex('Vi0', -1, 2);
model.physics('tcd').feature('es1').feature('er1').setIndex('Vib', 1, 0, 0);
model.physics('tcd').feature('es1').feature('er1').set('Eeq_ref', 'Eeq_Fe');
model.physics('tcd').feature('es1').feature('er1').set('i0_ref', 'i0_ref_Fe*(tcd.cH/cH_ref)');
model.physics('tcd').feature('es1').feature('er1').set('alphaa', 0.25);
model.physics('tcd').feature('init1').setIndex('initc', 'cNa_0', 0);
model.physics('tcd').feature('init1').setIndex('initc', 'cCl_0', 1);
model.physics('tcd').feature('init1').setIndex('initc', 'cFe_0', 2);

model.multiphysics('ndbdg1').set('BoundaryCondition', 'ZeroNormalDisplacement');

model.physics('tcd').prop('ShapeProperty').set('order_concentration', 1);
model.physics('tcd').prop('ShapeProperty').set('order_electricpotentialionicphase', 1);
model.physics('tcd').prop('ShapeProperty').set('order_electricpotential', 1);

model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('ftri1').create('size1', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size1').selection.geom('geom1', 1);
model.mesh('mesh1').feature('ftri1').feature('size1').selection.set([4 7 8]);
model.mesh('mesh1').feature('ftri1').feature('size1').set('hauto', 1);
model.mesh('mesh1').feature('ftri1').create('size2', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size2').selection.geom('geom1', 0);
model.mesh('mesh1').feature('ftri1').feature('size2').selection.set([2]);
model.mesh('mesh1').feature('ftri1').feature('size2').set('hauto', 1);
model.mesh('mesh1').run;

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/tcd', true);
model.study('std1').feature('stat').setSolveFor('/multiphysics/ndbdg1', true);
model.study('std1').feature('stat').setSolveFor('/multiphysics/desdg1', true);
model.study('std1').feature('stat').setEntry('activate', 'frame:material1', false);
model.study('std1').feature('stat').setEntry('activateCoupling', 'ndbdg1', false);
model.study('std1').feature('stat').setEntry('activateCoupling', 'desdg1', false);
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').set('tunit', 'd');
model.study('std1').feature('time').set('tlist', 'range(0,1,30)');
model.study('std1').feature('time').set('autoremesh', true);

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_phil').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_material_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_phil').set('scaleval', '1');
model.sol('sol1').feature('v1').feature('comp1_material_disp').set('scaleval', '1.0694381702557656E-7');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 1.0E-4);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').label('Direct (tcd)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('Algebraic Multigrid (tcd)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').create('i2', 'Iterative');
model.sol('sol1').feature('s1').feature('i2').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i2').label('Geometric Multigrid (tcd)');
model.sol('sol1').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'time');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').feature('comp1_phil').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_material_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_phil').set('scaleval', '1');
model.sol('sol1').feature('v2').feature('comp1_material_disp').set('scaleval', '1.0694381702557656E-7');
model.sol('sol1').feature('v2').feature('comp1_material_lm_nv').set('out', 'off');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('initsoluse', 'sol2');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('notsoluse', 'sol2');
model.sol('sol1').feature('v2').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,1,30)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('eventout', true);
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('arDef').set('autoremeshgeom', 'geom1');
model.sol('sol1').feature('t1').feature('arDef').set('stopcondtype', 'quality');
model.sol('sol1').feature('t1').feature('arDef').set('stopexpr', 'comp1.material.minqual');
model.sol('sol1').feature('t1').feature('arDef').set('stopval', '0.2');
model.sol('sol1').feature('t1').feature('arDef').set('consistentremesh', 'bweuler');
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('mumpsalloc', 1.4);
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol.create('sol3');
model.sol('sol3').label('Remeshed Solution 1');
model.sol('sol3').study('std1');
model.sol('sol1').feature('t1').feature('arDef').set('tadapsol', 'sol3');
model.sol('sol1').runAll;

model.result.dataset.create('rev1', 'Revolve2D');
model.result.dataset('rev1').set('data', 'dset3');
model.result.dataset('rev1').set('revangle', 225);
model.result.dataset('rev1').set('startangle', -90);
model.result.dataset('rev1').set('hasspacevars', true);
model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset3');
model.result('pg1').setIndex('looplevel', 33, 0);
model.result('pg1').label('Electrolyte Potential (tcd)');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'phil'});
model.result('pg1').create('str1', 'Streamline');
model.result('pg1').feature('str1').set('expr', {'tcd.Ilr' 'tcd.Ilz'});
model.result('pg1').feature('str1').set('posmethod', 'uniform');
model.result('pg1').feature('str1').set('recover', 'pprint');
model.result('pg1').feature('str1').set('pointtype', 'arrow');
model.result('pg1').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg1').feature('str1').set('color', 'gray');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'rev1');
model.result('pg2').setIndex('looplevel', 33, 0);
model.result('pg2').label('Electrolyte Potential, 3D (tcd)');
model.result('pg2').create('mslc1', 'Multislice');
model.result('pg2').feature('mslc1').set('expr', {'phil'});
model.result('pg2').create('str1', 'Streamline');
model.result('pg2').feature('str1').set('revcoordsys', 'cylindrical');
model.result('pg2').feature('str1').set('expr', {'tcd.Ilr' 'tcd.Ilphi' 'tcd.Ilz'});
model.result('pg2').feature('str1').set('pointtype', 'arrow');
model.result('pg2').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg2').feature('str1').set('color', 'gray');
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').set('data', 'dset3');
model.result('pg3').setIndex('looplevel', 33, 0);
model.result('pg3').label('Electrolyte Current Density (tcd)');
model.result('pg3').create('str1', 'Streamline');
model.result('pg3').feature('str1').set('expr', {'tcd.Ilr' 'tcd.Ilz'});
model.result('pg3').feature('str1').set('posmethod', 'uniform');
model.result('pg3').feature('str1').set('recover', 'pprint');
model.result('pg3').feature('str1').set('pointtype', 'arrow');
model.result('pg3').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg3').feature('str1').set('color', 'gray');
model.result('pg3').feature('str1').create('col1', 'Color');
model.result('pg3').feature('str1').feature('col1').set('expr', 'root.comp1.tcd.IlMag');
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').set('data', 'rev1');
model.result('pg4').setIndex('looplevel', 33, 0);
model.result('pg4').label('Electrolyte Current Density, 3D (tcd)');
model.result('pg4').create('str1', 'Streamline');
model.result('pg4').feature('str1').set('revcoordsys', 'cylindrical');
model.result('pg4').feature('str1').set('expr', {'tcd.Ilr' 'tcd.Ilphi' 'tcd.Ilz'});
model.result('pg4').feature('str1').set('pointtype', 'arrow');
model.result('pg4').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg4').feature('str1').set('color', 'gray');
model.result('pg4').feature('str1').create('col1', 'Color');
model.result('pg4').feature('str1').feature('col1').set('expr', 'root.comp1.tcd.IlMag');
model.result('pg3').create('line1', 'Line');
model.result('pg3').feature('line1').set('expr', {'abs(tcd.itot)'});
model.result('pg3').feature('line1').set('linetype', 'tube');
model.result('pg3').feature('line1').set('inherittubescale', false);
model.result('pg3').feature('line1').set('inheritplot', 'str1');
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', {'abs(tcd.itot)'});
model.result('pg4').feature('surf1').set('inheritplot', 'str1');
model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').set('data', 'dset3');
model.result('pg5').setIndex('looplevel', 33, 0);
model.result('pg5').label('Electrode Potential with Respect to Ground (tcd)');
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').set('data', 'rev1');
model.result('pg6').setIndex('looplevel', 33, 0);
model.result('pg6').label('Electrode Potential with Respect to Ground, 3D (tcd)');
model.result('pg5').create('line1', 'Line');
model.result('pg5').feature('line1').set('expr', {'tcd.phisext'});
model.result('pg5').feature('line1').set('linetype', 'tube');
model.result('pg5').feature('line1').set('inherittubescale', false);
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', {'tcd.phisext'});
model.result.create('pg7', 'PlotGroup2D');
model.result('pg7').set('data', 'dset3');
model.result('pg7').setIndex('looplevel', 33, 0);
model.result('pg7').label('Electrode Potential vs. Adjacent Reference (tcd)');
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').set('data', 'rev1');
model.result('pg8').setIndex('looplevel', 33, 0);
model.result('pg8').label('Electrode Potential vs. Adjacent Reference, 3D (tcd)');
model.result('pg7').create('str1', 'Streamline');
model.result('pg7').feature('str1').set('expr', {'tcd.Ilr' 'tcd.Ilz'});
model.result('pg7').feature('str1').set('posmethod', 'uniform');
model.result('pg7').feature('str1').set('recover', 'pprint');
model.result('pg7').feature('str1').set('pointtype', 'arrow');
model.result('pg7').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg7').feature('str1').set('color', 'gray');
model.result('pg8').create('str1', 'Streamline');
model.result('pg8').feature('str1').set('revcoordsys', 'cylindrical');
model.result('pg8').feature('str1').set('expr', {'tcd.Ilr' 'tcd.Ilphi' 'tcd.Ilz'});
model.result('pg8').feature('str1').set('pointtype', 'arrow');
model.result('pg8').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg8').feature('str1').set('color', 'gray');
model.result('pg7').create('line1', 'Line');
model.result('pg7').feature('line1').set('expr', {'tcd.Evsref'});
model.result('pg7').feature('line1').set('linetype', 'tube');
model.result('pg7').feature('line1').set('inherittubescale', false);
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').feature('surf1').set('expr', {'tcd.Evsref'});
model.result.create('pg9', 'PlotGroup2D');
model.result('pg9').set('data', 'dset3');
model.result('pg9').setIndex('looplevel', 33, 0);
model.result('pg9').label('Concentration, Na (tcd)');
model.result('pg9').set('titletype', 'custom');
model.result('pg9').set('prefixintitle', 'Species Na:');
model.result('pg9').set('expressionintitle', false);
model.result('pg9').set('typeintitle', true);
model.result('pg9').create('surf1', 'Surface');
model.result('pg9').feature('surf1').set('expr', {'cNa'});
model.result('pg9').create('str1', 'Streamline');
model.result('pg9').feature('str1').set('expr', {'tcd.tflux_cNar' 'tcd.tflux_cNaz'});
model.result('pg9').feature('str1').set('posmethod', 'uniform');
model.result('pg9').feature('str1').set('recover', 'pprint');
model.result('pg9').feature('str1').set('pointtype', 'arrow');
model.result('pg9').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg9').feature('str1').set('color', 'gray');
model.result.dataset.create('rev2', 'Revolve2D');
model.result.dataset('rev2').set('data', 'dset3');
model.result.dataset('rev2').set('revangle', 225);
model.result.dataset('rev2').set('startangle', -90);
model.result.dataset('rev2').set('hasspacevars', false);
model.result.create('pg10', 'PlotGroup3D');
model.result('pg10').set('data', 'rev2');
model.result('pg10').setIndex('looplevel', 33, 0);
model.result('pg10').label('Concentration, Na, 3D (tcd)');
model.result('pg10').create('surf1', 'Surface');
model.result('pg10').feature('surf1').set('expr', {'cNa'});
model.result('pg10').set('titletype', 'custom');
model.result('pg10').set('typeintitle', false);
model.result('pg10').set('prefixintitle', 'Species Na:');
model.result('pg10').set('expressionintitle', false);
model.result.create('pg11', 'PlotGroup2D');
model.result('pg11').set('data', 'dset3');
model.result('pg11').setIndex('looplevel', 33, 0);
model.result('pg11').label('Concentration, Cl (tcd)');
model.result('pg11').set('titletype', 'custom');
model.result('pg11').set('prefixintitle', 'Species Cl:');
model.result('pg11').set('expressionintitle', false);
model.result('pg11').set('typeintitle', true);
model.result('pg11').create('surf1', 'Surface');
model.result('pg11').feature('surf1').set('expr', {'cCl'});
model.result('pg11').create('str1', 'Streamline');
model.result('pg11').feature('str1').set('expr', {'tcd.tflux_cClr' 'tcd.tflux_cClz'});
model.result('pg11').feature('str1').set('posmethod', 'uniform');
model.result('pg11').feature('str1').set('recover', 'pprint');
model.result('pg11').feature('str1').set('pointtype', 'arrow');
model.result('pg11').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg11').feature('str1').set('color', 'gray');
model.result.create('pg12', 'PlotGroup3D');
model.result('pg12').set('data', 'rev2');
model.result('pg12').setIndex('looplevel', 33, 0);
model.result('pg12').label('Concentration, Cl, 3D (tcd)');
model.result('pg12').create('surf1', 'Surface');
model.result('pg12').feature('surf1').set('expr', {'cCl'});
model.result('pg12').set('titletype', 'custom');
model.result('pg12').set('typeintitle', false);
model.result('pg12').set('prefixintitle', 'Species Cl:');
model.result('pg12').set('expressionintitle', false);
model.result.create('pg13', 'PlotGroup2D');
model.result('pg13').set('data', 'dset3');
model.result('pg13').setIndex('looplevel', 33, 0);
model.result('pg13').label('Concentration, Fe (tcd)');
model.result('pg13').set('titletype', 'custom');
model.result('pg13').set('prefixintitle', 'Species Fe:');
model.result('pg13').set('expressionintitle', false);
model.result('pg13').set('typeintitle', true);
model.result('pg13').create('surf1', 'Surface');
model.result('pg13').feature('surf1').set('expr', {'cFe'});
model.result('pg13').create('str1', 'Streamline');
model.result('pg13').feature('str1').set('expr', {'tcd.tflux_cFer' 'tcd.tflux_cFez'});
model.result('pg13').feature('str1').set('posmethod', 'uniform');
model.result('pg13').feature('str1').set('recover', 'pprint');
model.result('pg13').feature('str1').set('pointtype', 'arrow');
model.result('pg13').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg13').feature('str1').set('color', 'gray');
model.result.create('pg14', 'PlotGroup3D');
model.result('pg14').set('data', 'rev2');
model.result('pg14').setIndex('looplevel', 33, 0);
model.result('pg14').label('Concentration, Fe, 3D (tcd)');
model.result('pg14').create('surf1', 'Surface');
model.result('pg14').feature('surf1').set('expr', {'cFe'});
model.result('pg14').set('titletype', 'custom');
model.result('pg14').set('typeintitle', false);
model.result('pg14').set('prefixintitle', 'Species Fe:');
model.result('pg14').set('expressionintitle', false);
model.result.create('pg15', 'PlotGroup2D');
model.result('pg15').set('data', 'dset3');
model.result('pg15').setIndex('looplevel', 33, 0);
model.result('pg15').label('Deformed Geometry');
model.result('pg15').create('mesh1', 'Mesh');
model.result('pg15').feature('mesh1').set('meshdomain', 'surface');
model.result('pg15').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg15').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg15').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg15').feature('mesh1').create('sel1', 'MeshSelection');
model.result('pg15').feature('mesh1').feature('sel1').selection.set([1]);
model.result('pg15').feature('mesh1').set('qualmeasure', 'custom');
model.result('pg15').feature('mesh1').set('qualexpr', 'comp1.material.relVol');
model.result('pg15').feature('mesh1').set('colorrangeunitinterval', false);
model.result('pg1').run;
model.result('pg4').run;
model.result('pg4').set('edges', false);
model.result('pg4').run;
model.result('pg4').feature('str1').set('arrowlength', 'normalized');
model.result('pg4').run;
model.result('pg4').feature('str1').feature('col1').active(false);
model.result('pg4').run;
model.result('pg4').feature('surf1').set('colortable', 'AuroraBorealis');
model.result('pg4').feature('surf1').set('colortabletrans', 'reverse');

model.view('view2').set('showgrid', false);

model.result('pg4').run;
model.result.create('pg16', 'PlotGroup2D');
model.result('pg16').run;
model.result('pg16').label('pH');
model.result('pg16').set('data', 'dset3');
model.result('pg16').set('looplevel', [1]);
model.result('pg16').create('surf1', 'Surface');
model.result('pg16').feature('surf1').set('expr', 'tcd.pH');
model.result('pg16').run;
model.result.create('pg17', 'PlotGroup3D');
model.result('pg17').run;
model.result('pg17').label('pH, 3D');
model.result('pg17').create('surf1', 'Surface');
model.result('pg17').feature('surf1').set('expr', 'tcd.pH');
model.result('pg17').run;

model.view('view2').set('showgrid', true);

model.result('pg17').run;
model.result.create('pg18', 'PlotGroup1D');
model.result('pg18').run;
model.result('pg18').label('Corrosion rate');
model.result('pg18').set('data', 'dset3');
model.result('pg18').create('lngr1', 'LineGraph');
model.result('pg18').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg18').feature('lngr1').set('linewidth', 'preference');
model.result('pg18').feature('lngr1').selection.set([4 5 7 8]);
model.result('pg18').feature('lngr1').set('expr', 'tcd.vbtot');
model.result('pg18').feature('lngr1').set('descr', 'Total electrode growth velocity');
model.result('pg18').feature('lngr1').set('unit', 'mm/yr');
model.result('pg18').feature('lngr1').set('xdata', 'expr');
model.result('pg18').feature('lngr1').set('xdataexpr', 'z');
model.result('pg18').run;
model.result.export.create('anim1', 'Animation');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('fontsize', '9');
model.result.export('anim1').set('colortheme', 'globaltheme');
model.result.export('anim1').set('customcolor', [1 1 1]);
model.result.export('anim1').set('background', 'color');
model.result.export('anim1').set('gltfincludelines', 'on');
model.result.export('anim1').set('title1d', 'on');
model.result.export('anim1').set('legend1d', 'on');
model.result.export('anim1').set('logo1d', 'on');
model.result.export('anim1').set('options1d', 'on');
model.result.export('anim1').set('title2d', 'on');
model.result.export('anim1').set('legend2d', 'on');
model.result.export('anim1').set('logo2d', 'on');
model.result.export('anim1').set('options2d', 'off');
model.result.export('anim1').set('title3d', 'on');
model.result.export('anim1').set('legend3d', 'on');
model.result.export('anim1').set('logo3d', 'on');
model.result.export('anim1').set('options3d', 'off');
model.result.export('anim1').set('axisorientation', 'on');
model.result.export('anim1').set('grid', 'on');
model.result.export('anim1').set('axes1d', 'on');
model.result.export('anim1').set('axes2d', 'on');
model.result.export('anim1').set('showgrid', 'on');
model.result.export('anim1').showFrame;
model.result.export('anim1').set('plotgroup', 'pg16');
model.result.export('anim1').set('framesel', 'all');
model.result.export('anim1').run;
model.result('pg17').run;
model.result.duplicate('pg19', 'pg17');
model.result('pg19').run;
model.result('pg19').set('looplevel', [1]);
model.result('pg19').run;
model.result.remove('pg19');

model.title('Pitting Corrosion');

model.description(['Pitting corrosion is a type of localized corrosion by which local cavities, pits, are formed on an initially smooth metal surface.' newline  newline 'A pit may be initialized by surface defects, such as an inhomogeneities in composition or shape, or mechanical abuse resulting in a small scratch or dent.' newline  newline 'How the pit grows depends on a number of factors such as the type of metal, salinity, pH, and temperature.' newline  newline 'This tutorial investigates the fundamental mechanism of pit propagation by simulating electrode kinetics, mass transport, charge transport, and the resulting geometry deformation.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;

model.label('pitting_corrosion.mph');

model.modelNode.label('Components');

out = model;
