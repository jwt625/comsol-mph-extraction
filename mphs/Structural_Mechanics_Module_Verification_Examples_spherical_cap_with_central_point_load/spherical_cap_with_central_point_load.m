function out = model
%
% spherical_cap_with_central_point_load.m
%
% Model exported on May 26 2025, 21:34 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Structural_Mechanics_Module/Verification_Examples');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');
model.physics.create('shell', 'Shell', 'geom1');
model.physics('shell').model('comp1');

model.param.set('a', '10[m]');
model.param.descr('a', 'Radius of cap');
model.param.set('th', '0.203840[m]');
model.param.descr('th', 'Thickness of cap');
model.param.set('EE', '210e9[Pa]');
model.param.descr('EE', 'Young''s modulus');
model.param.set('Nu', '0.3');
model.param.descr('Nu', 'Poisson''s ratio');
model.param.set('Rho', '7800');
model.param.descr('Rho', 'Density');
model.param.set('disp', '0[m]');
model.param.descr('disp', 'Displacement parameter');
model.param.set('meshdist', '4');
model.param.descr('meshdist', 'Mesh distribution parameter');

model.variable.create('var1');
model.variable('var1').model('comp1');

model.geom('geom1').run;

model.variable('var1').set('Fn1', '-F1*a/(EE*th^3*2*pi)');
model.variable('var1').descr('Fn1', 'Nondimensional force');
model.variable('var1').set('wn1', '-w/th');
model.variable('var1').descr('wn1', 'Nondimensional displacement');
model.variable('var1').set('Fn2', '-F2*a/(EE*th^3*2*pi)');
model.variable('var1').descr('Fn2', 'Nondimensional force');
model.variable('var1').set('wn2', '-w2/th');
model.variable('var1').descr('wn2', 'Nondimensional displacement');

model.geom('geom1').create('c1', 'Circle');
model.geom('geom1').feature('c1').set('type', 'curve');
model.geom('geom1').feature('c1').set('angle', 45);
model.geom('geom1').feature('c1').set('r', 'a+th');
model.geom('geom1').run('c1');
model.geom('geom1').feature('c1').set('rot', 45);
model.geom('geom1').feature('c1').setIndex('layername', 'Layer 1', 0);
model.geom('geom1').feature('c1').setIndex('layer', 'th', 0);
model.geom('geom1').run('c1');
model.geom('geom1').create('del1', 'Delete');
model.geom('geom1').feature('del1').selection('input').set('c1', [1 2]);
model.geom('geom1').run('del1');

model.material.create('mat1', 'Common', '');

model.geom('geom1').run;

model.material.create('matlnk1', 'Link', 'comp1');
model.material.create('matlnk2', 'Link', 'comp1');
model.material('matlnk2').selection.geom('geom1', 1);
model.material('matlnk2').selection.set([3]);
model.material('mat1').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat1').propertyGroup('Enu').set('E', {'EE'});
model.material('mat1').propertyGroup('Enu').set('nu', {'Nu'});
model.material('mat1').propertyGroup('def').set('density', {'Rho'});

model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl('intop1').set('axisym', true);
model.cpl('intop1').selection.geom('geom1', 0);
model.cpl('intop1').selection.set([1]);
model.cpl('intop1').set('method', 'summation');

model.physics('solid').create('fix1', 'Fixed', 1);
model.physics('solid').feature('fix1').selection.set([2]);
model.physics('solid').create('ge1', 'GlobalEquations', -1);
model.physics('solid').feature('ge1').setIndex('name', 'F1', 0, 0);
model.physics('solid').feature('ge1').setIndex('equation', 'intop1(w)-disp', 0, 0);
model.physics('solid').feature('ge1').set('DependentVariableQuantity', 'force');
model.physics('solid').feature('ge1').set('SourceTermQuantity', 'displacement');
model.physics('solid').create('pla1', 'PointLoadOnAxis', 0);
model.physics('solid').feature('pla1').selection.set([1]);
model.physics('solid').feature('pla1').set('Fz_src', 'root.comp1.F1');
model.physics('shell').selection.set([3]);
model.physics('shell').feature('to1').set('d', 'th');
model.physics('shell').feature('to1').set('OffsetDefinition', 'top');
model.physics('shell').create('fix1', 'Fixed', 0);
model.physics('shell').feature('fix1').selection.set([3]);
model.physics('shell').create('ge1', 'GlobalEquations', -1);
model.physics('shell').feature('ge1').setIndex('name', 'F2', 0, 0);
model.physics('shell').feature('ge1').setIndex('equation', 'intop1(w2)-disp', 0, 0);
model.physics('shell').feature('ge1').set('DependentVariableQuantity', 'force');
model.physics('shell').feature('ge1').set('SourceTermQuantity', 'displacement');
model.physics('shell').create('pla1', 'PointLoadOnAxis', 0);
model.physics('shell').feature('pla1').selection.set([1]);
model.physics('shell').feature('pla1').set('Fz_src', 'root.comp1.F2');

model.mesh.create('mesh2', 'geom1');
model.mesh('mesh1').label('Mesh: Solid Mechanics');
model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([3 4]);
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 40);
model.mesh('mesh1').run('map1');
model.mesh('mesh2').label('Mesh: Shell');
model.mesh('mesh2').create('edg1', 'Edge');
model.mesh('mesh2').feature('edg1').selection.set([3]);
model.mesh('mesh2').feature('edg1').create('dis1', 'Distribution');
model.mesh('mesh2').feature('edg1').feature('dis1').set('numelem', 'meshdist');
model.mesh('mesh2').run('edg1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/solid', true);
model.study('std1').feature('stat').setSolveFor('/physics/shell', false);
model.study('std1').label('Study: Solid Mechanics');
model.study('std1').feature('stat').set('geometricNonlinearity', true);
model.study('std1').feature('stat').setEntry('mesh', 'geom1', 'mesh1');
model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 'a', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'm', 0);
model.study('std1').feature('stat').setIndex('pname', 'a', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'm', 0);
model.study('std1').feature('stat').setIndex('pname', 'disp', 0);
model.study('std1').feature('stat').setIndex('plistarr', 'range(0,-0.01,-6.2)', 0);
model.study('std1').feature('stat').setIndex('punit', 'm', 0);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s1').set('control', 'stat');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 621, 0);
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('surf1').set('threshold', 'manual');
model.result('pg1').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg1').feature('surf1').set('colortable', 'Rainbow');
model.result('pg1').feature('surf1').set('colortabletrans', 'none');
model.result('pg1').feature('surf1').set('colorscalemode', 'linear');
model.result('pg1').feature('surf1').set('resolution', 'normal');
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg1').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg1').feature('surf1').feature('def').set('scale', '1');
model.result('pg1').feature('surf1').feature('def').set('expr', {'u' 'w'});
model.result('pg1').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result.dataset.create('dset1solidrev', 'Revolve2D');
model.result.dataset('dset1solidrev').set('data', 'dset1');
model.result.dataset('dset1solidrev').set('revangle', 225);
model.result.dataset('dset1solidrev').set('startangle', -90);
model.result.dataset('dset1solidrev').set('hasspacevars', true);
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'dset1solidrev');
model.result('pg2').setIndex('looplevel', 621, 0);
model.result('pg2').set('defaultPlotID', 'stress3D');
model.result('pg2').label('Stress, 3D (solid)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg2').feature('surf1').set('threshold', 'manual');
model.result('pg2').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg2').feature('surf1').set('colortable', 'Rainbow');
model.result('pg2').feature('surf1').set('colortabletrans', 'none');
model.result('pg2').feature('surf1').set('colorscalemode', 'linear');
model.result('pg2').feature('surf1').set('colortable', 'Prism');
model.result('pg2').feature('surf1').create('def', 'Deform');
model.result.dataset('dset1solidrev').set('hasspacevars', true);
model.result('pg2').feature('surf1').feature('def').set('revcoordsys', 'cylindrical');
model.result('pg2').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg2').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg2').feature('surf1').feature('def').set('descractive', true);
model.result('pg2').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg2').feature('surf1').feature('def').set('scale', '1');
model.result('pg1').run;

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/solid', false);
model.study('std2').feature('stat').setSolveFor('/physics/shell', true);
model.study('std2').label('Study: Shell');
model.study('std2').create('param', 'Parametric');
model.study('std2').feature('param').setIndex('pname', 'a', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', 'm', 0);
model.study('std2').feature('param').setIndex('pname', 'a', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', 'm', 0);
model.study('std2').feature('param').setIndex('pname', 'meshdist', 0);
model.study('std2').feature('param').setIndex('plistarr', '4,8,16', 0);
model.study('std2').feature('param').setIndex('punit', '', 0);
model.study('std2').feature('stat').set('geometricNonlinearity', true);
model.study('std2').feature('stat').set('useparam', true);
model.study('std2').feature('stat').setIndex('pname', 'a', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 'm', 0);
model.study('std2').feature('stat').setIndex('pname', 'a', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 'm', 0);
model.study('std2').feature('stat').setIndex('pname', 'disp', 0);
model.study('std2').feature('stat').setIndex('plistarr', 'range(0,-0.01,-6.2)', 0);
model.study('std2').feature('stat').setIndex('punit', 'm', 0);

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_ar').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_ar').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_ar').set('scaleval', '0.01');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('p1', 'Parametric');
model.sol('sol2').feature('s1').feature.remove('pDef');
model.sol('sol2').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol2').feature('s1').set('control', 'stat');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std2');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol2');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'meshdist'});
model.batch('p1').set('plistarr', {'4,8,16'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std2');
model.batch('p1').set('control', 'param');

model.sol.create('sol3');
model.sol('sol3').study('std2');
model.sol('sol3').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol3');
model.batch('p1').run('compute');

model.result.dataset.create('dset3shellshl', 'Shell');
model.result.dataset('dset3shellshl').set('data', 'dset3');
model.result.dataset('dset3shellshl').setIndex('topconst', '1', 6, 1);
model.result.dataset('dset3shellshl').setIndex('bottomconst', '-1', 6, 1);
model.result.dataset('dset3shellshl').setIndex('orientation2expr', 'shell.nlR', 0);
model.result.dataset('dset3shellshl').setIndex('displacement2expr', 'arr', 0);
model.result.dataset('dset3shellshl').setIndex('orientation2expr', 'shell.nlZ', 1);
model.result.dataset('dset3shellshl').setIndex('displacement2expr', 'arz', 1);
model.result.dataset('dset3shellshl').set('distanceexpr', 'shell.z_pos');
model.result.dataset('dset3shellshl').set('seplevels', false);
model.result.dataset('dset3shellshl').set('resolution', 2);
model.result.dataset('dset3shellshl').set('areascalefactor', 'shell.ASF');
model.result.dataset('dset3shellshl').set('linescalefactor', 'shell.LSF');
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').set('data', 'dset3shellshl');
model.result('pg3').setIndex('looplevel', 621, 0);
model.result('pg3').setIndex('looplevel', 3, 1);
model.result('pg3').set('defaultPlotID', 'stress');
model.result('pg3').label('Stress (shell)');
model.result('pg3').set('showlegends', true);
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', {'shell.misesGp'});
model.result('pg3').feature('surf1').set('threshold', 'manual');
model.result('pg3').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg3').feature('surf1').set('colortable', 'Rainbow');
model.result('pg3').feature('surf1').set('colortabletrans', 'none');
model.result('pg3').feature('surf1').set('colorscalemode', 'linear');
model.result('pg3').feature('surf1').set('descr', 'von Mises stress');
model.result('pg3').feature('surf1').set('colortable', 'Prism');
model.result('pg3').feature('surf1').create('def', 'Deform');
model.result('pg3').feature('surf1').feature('def').set('expr', {'shell.u' 'shell.w'});
model.result('pg3').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg3').feature('surf1').feature('def').set('scale', '1');
model.result.dataset.create('dset3shellrev', 'Revolve2D');
model.result.dataset('dset3shellrev').set('data', 'dset3shellshl');
model.result.dataset('dset3shellrev').set('revangle', 225);
model.result.dataset('dset3shellrev').set('startangle', -90);
model.result.dataset('dset3shellrev').set('hasspacevars', true);
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').set('data', 'dset3shellrev');
model.result('pg4').setIndex('looplevel', 621, 0);
model.result('pg4').setIndex('looplevel', 3, 1);
model.result('pg4').set('defaultPlotID', 'stress3D');
model.result('pg4').label('Stress, 3D (shell)');
model.result('pg4').set('frametype', 'spatial');
model.result('pg4').set('data', 'dset3shellrev');
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', {'shell.misesGp'});
model.result('pg4').feature('surf1').set('threshold', 'manual');
model.result('pg4').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg4').feature('surf1').set('colortable', 'Rainbow');
model.result('pg4').feature('surf1').set('colortabletrans', 'none');
model.result('pg4').feature('surf1').set('colorscalemode', 'linear');
model.result('pg4').feature('surf1').set('colortable', 'Prism');
model.result('pg4').feature('surf1').create('def', 'Deform');
model.result('pg4').feature('surf1').feature('def').set('revcoordsys', 'cylindrical');
model.result('pg4').feature('surf1').feature('def').set('expr', {'shell.u' 'shell.v' 'shell.w'});
model.result('pg4').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg4').feature('surf1').feature('def').set('scale', '1');
model.result('pg3').run;
model.result.dataset('dset1solidrev').set('startangle', 45);
model.result.dataset('dset1solidrev').set('revangle', -90);
model.result.dataset('dset3shellrev').set('startangle', 45);
model.result.dataset('dset3shellrev').set('revangle', -90);
model.result('pg1').run;
model.result('pg1').set('frametype', 'material');
model.result('pg2').run;
model.result('pg2').label('Total Displacement, 3D (solid)');
model.result('pg2').set('titletype', 'manual');
model.result('pg2').set('title', 'Total Displacement (m)');
model.result('pg2').set('edges', false);
model.result('pg2').run;
model.result('pg2').feature('surf1').set('data', 'dset1solidrev');
model.result('pg2').feature('surf1').setIndex('looplevel', 471, 0);
model.result('pg2').feature('surf1').set('expr', 'solid.disp');
model.result('pg2').feature('surf1').set('colortable', 'SpectrumLight');
model.result('pg2').run;
model.result('pg2').create('ann1', 'Annotation');
model.result('pg2').feature('ann1').set('data', 'dset1solidrev');
model.result('pg2').feature('ann1').setIndex('looplevel', 471, 0);
model.result('pg2').feature('ann1').set('text', 'F1=eval(F1)');
model.result('pg2').feature('ann1').set('level', 'global');
model.result('pg2').feature('ann1').set('poszexpr', 'a-4.7');
model.result('pg2').feature('ann1').set('anchorpoint', 'lowerright');
model.result('pg2').run;
model.result('pg2').feature.duplicate('surf2', 'surf1');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature.duplicate('ann2', 'ann1');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('surf2').setIndex('looplevel', 521, 0);
model.result('pg2').feature('surf2').set('inheritplot', 'surf1');
model.result('pg2').run;
model.result('pg2').feature('ann2').setIndex('looplevel', 521, 0);
model.result('pg2').feature('ann2').set('poszexpr', 'a-5.2');
model.result('pg2').run;
model.result('pg2').feature.duplicate('surf3', 'surf2');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature.duplicate('ann3', 'ann2');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('surf3').setIndex('looplevel', 581, 0);
model.result('pg2').run;
model.result('pg2').feature('ann3').setIndex('looplevel', 581, 0);
model.result('pg2').feature('ann3').set('poszexpr', 'a-5.8');
model.result('pg2').run;
model.result('pg3').run;
model.result('pg3').set('frametype', 'material');
model.result('pg4').run;
model.result('pg4').label('Total Displacement, 3D (shell)');
model.result('pg4').set('titletype', 'manual');
model.result('pg4').set('title', 'Total Displacement (m)');
model.result('pg4').set('edges', false);
model.result('pg4').run;
model.result('pg4').feature('surf1').set('data', 'dset3shellrev');
model.result('pg4').feature('surf1').setIndex('looplevel', 471, 0);
model.result('pg4').feature('surf1').set('expr', 'shell.disp');
model.result('pg4').feature('surf1').set('colortable', 'SpectrumLight');
model.result('pg4').run;
model.result('pg4').create('ann1', 'Annotation');
model.result('pg4').feature('ann1').set('data', 'dset3shellrev');
model.result('pg4').feature('ann1').setIndex('looplevel', 471, 0);
model.result('pg4').feature('ann1').set('text', 'F2=eval(F2)');
model.result('pg4').feature('ann1').set('level', 'global');
model.result('pg4').feature('ann1').set('poszexpr', 'a-4.7');
model.result('pg4').feature('ann1').set('anchorpoint', 'lowerright');
model.result('pg4').run;
model.result('pg4').feature.duplicate('surf2', 'surf1');
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').feature.duplicate('ann2', 'ann1');
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').feature('surf2').setIndex('looplevel', 521, 0);
model.result('pg4').feature('surf2').set('inheritplot', 'surf1');
model.result('pg4').run;
model.result('pg4').feature('ann2').setIndex('looplevel', 521, 0);
model.result('pg4').feature('ann2').set('poszexpr', 'a-5.2');
model.result('pg4').run;
model.result('pg4').feature.duplicate('surf3', 'surf2');
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').feature.duplicate('ann3', 'ann2');
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').feature('surf3').setIndex('looplevel', 581, 0);
model.result('pg4').run;
model.result('pg4').feature('ann3').setIndex('looplevel', 581, 0);
model.result('pg4').feature('ann3').set('poszexpr', 'a-5.8');
model.result('pg4').run;
model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').set('data', 'dset3');
model.result('pg5').setIndex('looplevel', 621, 0);
model.result('pg5').setIndex('looplevel', 3, 1);
model.result('pg5').set('defaultPlotID', 'thicknessOrientation');
model.result('pg5').label('Thickness and Orientation (shell)');
model.result('pg5').set('titletype', 'label');
model.result('pg5').set('showlegendsunit', true);
model.result('pg5').create('line1', 'Line');
model.result('pg5').feature('line1').set('expr', {'shell.d'});
model.result('pg5').feature('line1').set('threshold', 'manual');
model.result('pg5').feature('line1').set('thresholdvalue', 0.2);
model.result('pg5').feature('line1').set('colortable', 'HeatCameraLight');
model.result('pg5').feature('line1').set('colortabletrans', 'reverse');
model.result('pg5').feature('line1').set('colorscalemode', 'linear');
model.result('pg5').feature('line1').set('linetype', 'tube');
model.result('pg5').feature('line1').set('radiusexpr', 'shell.d/2');
model.result('pg5').feature('line1').set('tuberadiusscale', 1);
model.result('pg5').feature('line1').label('Thickness');
model.result('pg5').create('syss', 'CoordSysLine');
model.result('pg5').feature('syss').set('sys', 'shellsys');
model.result('pg5').feature('syss').label('Shell Local System');
model.result('pg5').label('Thickness and Orientation (shell)');
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').feature('syss').set('arrowcount', 20);
model.result('pg5').run;
model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').run;
model.result('pg6').label('Load vs. Displacement at Crown');
model.result('pg6').set('titletype', 'manual');
model.result('pg6').set('title', 'Load vs. Displacement at Crown');
model.result('pg6').set('legendpos', 'upperleft');
model.result('pg6').create('ptgr1', 'PointGraph');
model.result('pg6').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg6').feature('ptgr1').set('linewidth', 'preference');
model.result('pg6').feature('ptgr1').selection.set([1]);
model.result('pg6').feature('ptgr1').set('expr', 'Fn1');
model.result('pg6').feature('ptgr1').set('xdata', 'expr');
model.result('pg6').feature('ptgr1').set('xdataexpr', 'wn1');
model.result('pg6').feature('ptgr1').set('legend', true);
model.result('pg6').feature('ptgr1').set('legendmethod', 'manual');
model.result('pg6').feature('ptgr1').setIndex('legends', 'Solid Mechanics, 40 Elements', 0);
model.result('pg6').feature.duplicate('ptgr2', 'ptgr1');
model.result('pg6').run;
model.result('pg6').feature('ptgr2').set('data', 'dset3');
model.result('pg6').feature('ptgr2').set('expr', 'Fn2');
model.result('pg6').feature('ptgr2').set('xdataexpr', 'wn2');
model.result('pg6').feature('ptgr2').set('legendmethod', 'evaluated');
model.result('pg6').feature('ptgr2').set('legendpattern', 'Shell, eval(meshdist) Elements');
model.result('pg6').run;
model.result.evaluationGroup.create('eg1', 'EvaluationGroup');
model.result.evaluationGroup('eg1').label('Load vs. Displacement at Crown');
model.result.evaluationGroup('eg1').create('pev1', 'EvalPoint');
model.result.evaluationGroup('eg1').feature('pev1').label('Solid Mechanics, 40 Elements');
model.result.evaluationGroup('eg1').feature('pev1').set('data', 'dset1');
model.result.evaluationGroup('eg1').feature('pev1').selection.set([1]);
model.result.evaluationGroup('eg1').feature('pev1').setIndex('expr', 'disp', 0);
model.result.evaluationGroup('eg1').feature('pev1').setIndex('unit', 'm', 0);
model.result.evaluationGroup('eg1').feature('pev1').setIndex('descr', 'Displacement parameter', 0);
model.result.evaluationGroup('eg1').feature('pev1').setIndex('expr', 'Fn1', 1);
model.result.evaluationGroup('eg1').feature('pev1').setIndex('unit', 1, 1);
model.result.evaluationGroup('eg1').feature('pev1').setIndex('descr', 'Nondimensional force (Solid Mechanics, 40 Elements)', 1);
model.result.evaluationGroup('eg1').feature('pev1').setIndex('expr', 'wn1', 2);
model.result.evaluationGroup('eg1').feature('pev1').setIndex('unit', 1, 2);
model.result.evaluationGroup('eg1').feature('pev1').setIndex('descr', 'Nondimensional displacement (Solid Mechanics, 40 Elements)', 2);
model.result.evaluationGroup('eg1').create('pev2', 'EvalPoint');
model.result.evaluationGroup('eg1').feature('pev2').label('Shell, 4 Elements');
model.result.evaluationGroup('eg1').feature('pev2').set('data', 'dset3');
model.result.evaluationGroup('eg1').feature('pev2').setIndex('looplevelinput', 'manual', 1);
model.result.evaluationGroup('eg1').feature('pev2').setIndex('looplevel', [1], 1);
model.result.evaluationGroup('eg1').feature('pev2').selection.set([1]);
model.result.evaluationGroup('eg1').feature('pev2').setIndex('expr', 'Fn2', 0);
model.result.evaluationGroup('eg1').feature('pev2').setIndex('unit', 1, 0);
model.result.evaluationGroup('eg1').feature('pev2').setIndex('descr', 'Nondimensional force (Shell, 4 Elements)', 0);
model.result.evaluationGroup('eg1').feature('pev2').setIndex('expr', 'wn2', 1);
model.result.evaluationGroup('eg1').feature('pev2').setIndex('unit', 1, 1);
model.result.evaluationGroup('eg1').feature('pev2').setIndex('descr', 'Nondimensional displacement (Shell, 4 Elements)', 1);
model.result.evaluationGroup('eg1').feature.duplicate('pev3', 'pev2');
model.result.evaluationGroup('eg1').feature('pev3').label('Shell, 8 Elements');
model.result.evaluationGroup('eg1').feature('pev3').setIndex('looplevel', [2], 1);
model.result.evaluationGroup('eg1').feature('pev3').setIndex('descr', 'Nondimensional force (Shell, 8 Elements)', 0);
model.result.evaluationGroup('eg1').feature('pev3').setIndex('descr', 'Nondimensional displacement (Shell, 8 Elements)', 1);
model.result.evaluationGroup('eg1').feature.duplicate('pev4', 'pev3');
model.result.evaluationGroup('eg1').feature('pev4').label('Shell, 16 Elements');
model.result.evaluationGroup('eg1').feature('pev4').setIndex('looplevel', [3], 1);
model.result.evaluationGroup('eg1').feature('pev4').setIndex('descr', 'Nondimensional force (Shell, 16 Elements)', 0);
model.result.evaluationGroup('eg1').feature('pev4').setIndex('descr', 'Nondimensional displacement (Shell, 16 Elements)', 1);
model.result.evaluationGroup('eg1').set('includeparameters', false);
model.result.evaluationGroup('eg1').run;
model.result('pg6').run;

model.title('Spherical Cap with Central Point Load');

model.description(['In this benchmark a spherical cap subjected to a point load at the center. The resulting nonlinear deformation is studied using both Solid Mechanics and Shell interfaces. In both cases, a 2D axisymmetric formulation is used.' newline  newline 'The results from both interfaces are compared with results given in the benchmark for different discretizations.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;

model.label('spherical_cap_with_central_point_load.mph');

model.modelNode.label('Components');

out = model;
