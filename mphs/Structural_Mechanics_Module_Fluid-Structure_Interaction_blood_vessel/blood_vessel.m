function out = model
%
% blood_vessel.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Structural_Mechanics_Module/Fluid-Structure_Interaction');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('spf', 'LaminarFlow', 'geom1');
model.physics('spf').model('comp1');
model.physics('spf').prop('AdvancedSettingProperty').set('UsePseudoTime', '1');
model.physics('spf').prop('PhysicalModelProperty').set('Compressibility', 'Incompressible');
model.physics('spf').field('velocity').field('u_fluid');
model.physics('spf').field('velocity').component({'u_fluid' 'v_fluid' 'w_fluid'});
model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');
model.physics('solid').field('displacement').field('u_solid');
model.physics('solid').field('displacement').component({'u_solid' 'v_solid' 'w_solid'});
model.physics('solid').prop('ShapeProperty').set('order_displacement', '2');

model.multiphysics.create('fsi1', 'FluidStructureInteractionBC', 'geom1', 2);
model.multiphysics('fsi1').set('Fluid_physics', 'spf');
model.multiphysics('fsi1').set('Structure_physics', 'solid');
model.multiphysics('fsi1').selection.all;

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/spf', true);
model.study('std1').feature('time').setSolveFor('/physics/solid', true);
model.study('std1').feature('time').setSolveFor('/multiphysics/fsi1', true);

model.param.set('t', '0[s]');
model.param.descr('t', 'Time continuation parameter');
model.param.set('alpha', '1/3');
model.param.descr('alpha', 'Relative pressure amplitude during heart''s beating');

model.func.create('pw1', 'Piecewise');
model.func('pw1').set('funcname', 'f');
model.func('pw1').set('arg', 't');
model.func('pw1').setIndex('pieces', 0, 0, 0);
model.func('pw1').setIndex('pieces', 0.5, 0, 1);
model.func('pw1').setIndex('pieces', '(1-alpha)*sin(pi*t)', 0, 2);
model.func('pw1').setIndex('pieces', 0.5, 1, 0);
model.func('pw1').setIndex('pieces', 1.5, 1, 1);
model.func('pw1').setIndex('pieces', '1-alpha*cos(2*pi*(t-0.5))', 1, 2);
model.func('pw1').set('argunit', 's');
model.func('pw1').set('fununit', '1');

model.geom('geom1').create('imp1', 'Import');
model.geom('geom1').feature('imp1').set('filename', 'blood_vessel.mphbin');
model.geom('geom1').feature('imp1').importData;
model.geom('geom1').create('sca1', 'Scale');
model.geom('geom1').feature('sca1').set('isotropic', 0.01);
model.geom('geom1').feature('sca1').selection('input').set({'imp1'});
model.geom('geom1').run('fin');
model.geom('geom1').create('rmd1', 'RemoveDetails');
model.geom('geom1').run('rmd1');
model.geom('geom1').run('fin');

model.view('view1').set('transparency', true);

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');
model.selection('sel1').label('Blood');
model.selection('sel1').set([3]);
model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').label('Artery');
model.selection('sel2').set([2]);
model.selection.create('sel3', 'Explicit');
model.selection('sel3').model('comp1');
model.selection('sel3').label('Muscle');
model.selection('sel3').set([1]);
model.selection.create('sel4', 'Explicit');
model.selection('sel4').model('comp1');
model.selection('sel4').label('Inlet');
model.selection('sel4').geom(2);
model.selection('sel4').set([38]);
model.selection.create('sel5', 'Explicit');
model.selection('sel5').model('comp1');
model.selection('sel5').label('Outlet 1');
model.selection('sel5').geom(2);
model.selection('sel5').set([19]);
model.selection.create('sel6', 'Explicit');
model.selection('sel6').model('comp1');
model.selection('sel6').label('Outlet 2');
model.selection('sel6').geom(2);
model.selection('sel6').set([9]);
model.selection.create('sel7', 'Explicit');
model.selection('sel7').model('comp1');
model.selection('sel7').label('Outlet 3');
model.selection('sel7').geom(2);
model.selection('sel7').set([41]);
model.selection.create('sel8', 'Explicit');
model.selection('sel8').model('comp1');
model.selection('sel8').label('Outlet 4');
model.selection('sel8').geom(2);
model.selection('sel8').set([70]);
model.selection.create('sel9', 'Explicit');
model.selection('sel9').model('comp1');
model.selection('sel9').label('Outlet 5');
model.selection('sel9').geom(2);
model.selection('sel9').set([84]);
model.selection.create('sel10', 'Explicit');
model.selection('sel10').model('comp1');
model.selection('sel10').label('Roller boundaries');
model.selection('sel10').geom(2);
model.selection('sel10').set([1 2 3 4 5 6 12 26 27 30 33 64 67 83 85]);
model.selection.create('sel11', 'Explicit');
model.selection('sel11').model('comp1');
model.selection('sel11').label('Loaded boundaries');
model.selection('sel11').geom(2);
model.selection('sel11').set([10 20 36 42 68]);
model.selection('sel11').set('groupcontang', true);

model.physics('spf').selection.named('sel1');
model.physics('spf').create('inl1', 'InletBoundary', 2);
model.physics('spf').feature('inl1').selection.named('sel4');
model.physics('spf').feature('inl1').set('BoundaryCondition', 'Pressure');
model.physics('spf').feature('inl1').set('p0', '126.09[mmHg]*f(t)');
model.physics('spf').create('out1', 'OutletBoundary', 2);
model.physics('spf').feature('out1').selection.named('sel5');
model.physics('spf').feature('out1').set('p0', '125.91[mmHg]*f(t)');
model.physics('spf').create('out2', 'OutletBoundary', 2);
model.physics('spf').feature('out2').selection.named('sel6');
model.physics('spf').feature('out2').set('p0', '125.415[mmHg]*f(t)');
model.physics('spf').create('out3', 'OutletBoundary', 2);
model.physics('spf').feature('out3').selection.named('sel7');
model.physics('spf').feature('out3').set('p0', '125.415[mmHg]*f(t)');
model.physics('spf').create('out4', 'OutletBoundary', 2);
model.physics('spf').feature('out4').selection.named('sel8');
model.physics('spf').feature('out4').set('p0', '125.415[mmHg]*f(t)');
model.physics('spf').create('out5', 'OutletBoundary', 2);
model.physics('spf').feature('out5').selection.named('sel9');
model.physics('spf').feature('out5').set('p0', '125.1[mmHg]*f(t)');
model.physics('solid').selection.set([1 2]);
model.physics('solid').feature('lemm1').set('IsotropicOption', 'Lame');
model.physics('solid').create('roll1', 'Roller', 2);
model.physics('solid').feature('roll1').selection.named('sel10');

model.multiphysics('fsi1').set('CouplingType', 'FluidLoading');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').label('Blood');
model.material('mat1').selection.named('sel1');
model.material('mat1').propertyGroup('def').set('density', {'1060'});
model.material('mat1').propertyGroup('def').set('dynamicviscosity', {'0.005'});
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').label('Artery');
model.material('mat2').selection.named('sel2');
model.material('mat2').propertyGroup.create('Lame', 'Lame_parameters');
model.material('mat2').propertyGroup('Lame').set('lambLame', {'20*muLame-2*muLame/3'});
model.material('mat2').propertyGroup('Lame').set('muLame', {'6.20e6'});
model.material('mat2').propertyGroup('def').set('density', {'960'});
model.material.create('mat3', 'Common', 'comp1');
model.material('mat3').label('Muscle');
model.material('mat3').selection.named('sel3');
model.material('mat3').propertyGroup.create('Lame', 'Lame_parameters');
model.material('mat3').propertyGroup('Lame').set('lambLame', {'20*muLame-2*muLame/3'});
model.material('mat3').propertyGroup('Lame').set('muLame', {'7.20e6'});
model.material('mat3').propertyGroup('def').set('density', {'1200'});

model.mesh('mesh1').autoMeshSize(4);
model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('size').set('custom', true);
model.mesh('mesh1').feature('size').set('hmin', '0.0003');
model.mesh('mesh1').run;

model.study('std1').feature('time').set('tlist', 'range(0,0.05,1.5)');
model.study('std1').feature('time').setEntry('activate', 'solid', false);
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setEntry('activate', 'spf', false);
model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 't', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'm', 0);
model.study('std1').feature('stat').setIndex('pname', 't', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'm', 0);
model.study('std1').feature('stat').setIndex('pname', 't', 0);
model.study('std1').feature('stat').setIndex('plistarr', 'range(0,0.05,1.5)', 0);
model.study('std1').feature('stat').setIndex('punit', 's', 0);
model.study('std1').feature('stat').set('usesol', true);
model.study('std1').feature('stat').set('notsolmethod', 'sol');
model.study('std1').feature('stat').set('notstudy', 'std1');
model.study('std1').feature('stat').set('notsolnum', 'all');

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([3]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([3]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.05,1.5)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.005);
model.sol('sol1').feature('t1').set('atolglobalmethod', 'scaled');
model.sol('sol1').feature('t1').set('atolglobalfactor', 0.05);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('atolmethod', {'comp1_p' 'scaled' 'comp1_u_fluid' 'global' 'comp1_u_solid' 'global'});
model.sol('sol1').feature('t1').set('atolvaluemethod', {'comp1_p' 'factor' 'comp1_u_fluid' 'factor' 'comp1_u_solid' 'factor'});
model.sol('sol1').feature('t1').set('atolfactor', {'comp1_p' '1' 'comp1_u_fluid' '0.1' 'comp1_u_solid' '0.1'});
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('estrat', 'exclude');
model.sol('sol1').feature('t1').set('rhoinf', 0.5);
model.sol('sol1').feature('t1').set('predictor', 'constant');
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('stabcntrl', true);
model.sol('sol1').feature('t1').set('bwinitstepfrac', '0.01');
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 0.5);
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('t1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('t1').feature('i1').set('maxlinit', 100);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 0.5);
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'stat');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s1').set('control', 'stat');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('s1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol1').feature('s1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('v2').set('notsolnum', 'all');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol1').feature('v2').set('solnum', 'auto');
model.sol('sol1').feature('v2').set('solvertype', 'solnum');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('t1').set('tstepsbdf', 'intermediate');
model.sol('sol1').runAll;

model.result.dataset('dset1').set('geom', 'geom1');
model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').label('Velocity (spf)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 31, 0);
model.result('pg1').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pg1');
model.result('pg1').feature.create('slc1', 'Slice');
model.result('pg1').feature('slc1').label('Slice');
model.result('pg1').feature('slc1').set('showsolutionparams', 'on');
model.result('pg1').feature('slc1').set('smooth', 'internal');
model.result('pg1').feature('slc1').set('showsolutionparams', 'on');
model.result('pg1').feature('slc1').set('data', 'parent');
model.result.dataset.create('surf1', 'Surface');
model.result.dataset('surf1').label('Exterior Walls');
model.result.dataset('surf1').set('data', 'dset1');
model.result.dataset('surf1').selection.geom('geom1', 2);
model.result.dataset('surf1').selection.set([10 11 16 17 20 21 23 24 36 37 39 40 42 43 45 46 50 51 52 53 58 59 61 62 68 69 71 72 77 78 80 81]);
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Pressure (spf)');
model.result('pg2').set('data', 'surf1');
model.result('pg2').setIndex('looplevel', 31, 0);
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('data', 'surf1');
model.result('pg2').setIndex('looplevel', 31, 0);
model.result('pg2').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pcond2/pcond1/pg4');
model.result('pg2').feature.create('surf1', 'Surface');
model.result('pg2').feature('surf1').label('Surface');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('expr', 'p');
model.result('pg2').feature('surf1').set('colortable', 'Dipole');
model.result('pg2').feature('surf1').set('smooth', 'internal');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('data', 'parent');
model.result('pg2').feature('surf1').feature.create('tran1', 'Transparency');
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').set('data', 'dset1');
model.result('pg3').setIndex('looplevel', 31, 0);
model.result('pg3').set('defaultPlotID', 'stress');
model.result('pg3').label('Stress (solid)');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').create('vol1', 'Volume');
model.result('pg3').feature('vol1').set('expr', {'solid.misesGp'});
model.result('pg3').feature('vol1').set('threshold', 'manual');
model.result('pg3').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg3').feature('vol1').set('colortable', 'Rainbow');
model.result('pg3').feature('vol1').set('colortabletrans', 'none');
model.result('pg3').feature('vol1').set('colorscalemode', 'linear');
model.result('pg3').feature('vol1').set('resolution', 'custom');
model.result('pg3').feature('vol1').set('refine', 2);
model.result('pg3').feature('vol1').set('colortable', 'Prism');
model.result('pg3').feature('vol1').create('def', 'Deform');
model.result('pg3').feature('vol1').feature('def').set('expr', {'u_solid' 'v_solid' 'w_solid'});
model.result('pg3').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result('pg1').run;

model.view('view1').set('transparency', false);

model.result('pg1').run;
model.result('pg1').setIndex('looplevel', 21, 0);
model.result('pg1').run;
model.result('pg1').feature('slc1').set('quickplane', 'zx');
model.result('pg1').feature('slc1').set('quickynumber', 1);
model.result('pg1').run;
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('surf1').set('unit', 'mmHg');
model.result('pg2').run;
model.result('pg3').run;
model.result('pg3').selection.geom('geom1', 3);
model.result('pg3').selection.named('sel2');
model.result('pg3').run;
model.result('pg3').feature('vol1').feature('def').set('scaleactive', true);
model.result('pg3').feature('vol1').feature('def').set('scale', 300);
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').set('data', 'dset1');
model.result('pg4').setIndex('looplevel', 31, 0);
model.result('pg4').set('defaultPlotID', 'displacement');
model.result('pg4').label('Displacement (solid)');
model.result('pg4').set('frametype', 'spatial');
model.result('pg4').set('showlegends', true);
model.result('pg4').create('vol1', 'Volume');
model.result('pg4').feature('vol1').set('expr', {'solid.disp'});
model.result('pg4').feature('vol1').set('threshold', 'manual');
model.result('pg4').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg4').feature('vol1').set('colortable', 'SpectrumLight');
model.result('pg4').feature('vol1').set('colortabletrans', 'none');
model.result('pg4').feature('vol1').set('colorscalemode', 'linear');
model.result('pg4').feature('vol1').set('resolution', 'custom');
model.result('pg4').feature('vol1').set('refine', 2);
model.result('pg4').feature('vol1').create('def', 'Deform');
model.result('pg4').feature('vol1').feature('def').set('expr', {'u_solid' 'v_solid' 'w_solid'});
model.result('pg4').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result('pg4').label('Displacement (solid)');
model.result('pg4').run;
model.result('pg4').setIndex('looplevel', 21, 0);
model.result('pg4').selection.geom('geom1', 3);
model.result('pg4').selection.named('sel2');
model.result('pg4').run;
model.result('pg4').feature('vol1').set('unit', [native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']);
model.result('pg4').run;
model.result('pg4').feature('vol1').feature('def').set('scaleactive', true);
model.result('pg4').feature('vol1').feature('def').set('scale', 300);
model.result('pg4').run;

model.title('Fluid-Structure Interaction in a Network of Blood Vessels');

model.description('This example studies a portion of the vascular system of a young child. The aorta and its ramified blood vessels are embedded in biological tissue. The pressure from the moving fluid deforms the blood vessel.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('blood_vessel.mph');

model.modelNode.label('Components');

out = model;
