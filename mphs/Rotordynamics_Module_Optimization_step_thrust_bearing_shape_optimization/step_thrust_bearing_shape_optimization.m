function out = model
%
% step_thrust_bearing_shape_optimization.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Rotordynamics_Module/Optimization');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('hdb', 'HydrodynamicBearing', 'geom1');
model.physics('hdb').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/hdb', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('N', '5', 'Number of pads');
model.param.set('Ro', '0.1[m]', 'Outer radius of pad');
model.param.set('Ri', '0.5*Ro', 'Inner radius of pad');
model.param.set('gAng', '15[deg]', 'Groove angle (deg)');
model.param.set('padAng', '360[deg]/N-gAng', 'Pad angle (deg)');
model.param.set('secAng', 'gAng+padAng', 'Section angle (deg)');
model.param.set('angSpeed', '1000[rad/s]', 'Angular speed of shaft');
model.param.set('hg', '2e-4[m]', 'Groove depth');
model.param.set('h_film', '1e-4[m]', 'Film thickness');
model.param.set('rho_c', '866[kg/m^3]', 'Density of fluid');
model.param.set('mu_f', '0.072[Pa*s]', 'Dynamic viscosity of fluid');
model.param.set('maxDisp', '0.15*Ro', 'Maximum displacement');

model.geom('geom1').create('wp1', 'WorkPlane');
model.geom('geom1').feature('wp1').set('unite', true);
model.geom('geom1').feature('wp1').geom.create('c1', 'Circle');
model.geom('geom1').feature('wp1').geom.feature('c1').set('r', 'Ro');
model.geom('geom1').feature('wp1').geom.feature('c1').set('angle', 'gAng');
model.geom('geom1').feature('wp1').geom.feature('c1').setIndex('layer', 'Ro-Ri', 0);
model.geom('geom1').feature('wp1').geom.feature.duplicate('c2', 'c1');
model.geom('geom1').feature('wp1').geom.feature('c2').set('angle', 'padAng/2');
model.geom('geom1').feature('wp1').geom.feature('c2').set('rot', 'gAng');
model.geom('geom1').feature('wp1').geom.feature.duplicate('c3', 'c2');
model.geom('geom1').feature('wp1').geom.feature('c3').set('rot', 'gAng+padAng/2');
model.geom('geom1').feature('wp1').geom.run('c3');
model.geom('geom1').feature('wp1').geom.create('disksel1', 'DiskSelection');
model.geom('geom1').feature('wp1').geom.feature('disksel1').label('Domains to Delete');
model.geom('geom1').feature('wp1').geom.feature('disksel1').set('r', 'Ri*1.01');
model.geom('geom1').feature('wp1').geom.feature('disksel1').set('condition', 'inside');
model.geom('geom1').feature('wp1').geom.run('disksel1');
model.geom('geom1').feature('wp1').geom.create('del1', 'Delete');
model.geom('geom1').feature('wp1').geom.feature('del1').selection('input').init(2);
model.geom('geom1').feature('wp1').geom.feature('del1').selection('input').named('disksel1');
model.geom('geom1').feature('wp1').geom.feature('del1').set('selresult', true);
model.geom('geom1').feature('wp1').geom.run('del1');
model.geom('geom1').feature('wp1').geom.create('disksel2', 'DiskSelection');
model.geom('geom1').feature('wp1').geom.feature('disksel2').label('Disk Selection: Leading Edge');
model.geom('geom1').feature('wp1').geom.feature('disksel2').set('entitydim', 1);
model.geom('geom1').feature('wp1').geom.feature('disksel2').set('r', '1.01*Ro');
model.geom('geom1').feature('wp1').geom.feature('disksel2').set('rin', '0.99*Ri');
model.geom('geom1').feature('wp1').geom.feature('disksel2').set('angle1', 'gAng-1');
model.geom('geom1').feature('wp1').geom.feature('disksel2').set('angle2', 'gAng+1');
model.geom('geom1').feature('wp1').geom.feature('disksel2').set('condition', 'inside');
model.geom('geom1').feature('wp1').geom.run('disksel2');
model.geom('geom1').feature('wp1').geom.feature.duplicate('disksel3', 'disksel2');
model.geom('geom1').feature('wp1').geom.feature('disksel3').set('angle1', 'secAng-1');
model.geom('geom1').feature('wp1').geom.feature('disksel3').set('angle2', 'secAng+1');
model.geom('geom1').feature('wp1').geom.run('disksel3');
model.geom('geom1').feature('wp1').geom.feature('disksel3').label('Disk Selection: Trailing Edge');
model.geom('geom1').feature('wp1').geom.create('disksel4', 'DiskSelection');
model.geom('geom1').feature('wp1').geom.feature('disksel4').set('r', '1.01*Ro');
model.geom('geom1').feature('wp1').geom.feature('disksel4').set('rin', '0.99*Ri');
model.geom('geom1').feature('wp1').geom.feature('disksel4').set('angle2', 'gAng');
model.geom('geom1').feature('wp1').geom.feature('disksel4').set('condition', 'inside');
model.geom('geom1').feature('wp1').geom.run('disksel4');
model.geom('geom1').feature('wp1').geom.feature('disksel4').label('Disk Selection: Groove');
model.geom('geom1').feature('wp1').geom.feature.duplicate('disksel5', 'disksel4');
model.geom('geom1').feature('wp1').geom.feature('disksel5').label('Disk Selection: Pad');
model.geom('geom1').feature('wp1').geom.feature('disksel5').set('angle1', 'gAng');
model.geom('geom1').feature('wp1').geom.feature('disksel5').set('angle2', '360/N');
model.geom('geom1').feature('wp1').geom.run('disksel5');
model.geom('geom1').feature('wp1').geom.create('rot1', 'Rotate');
model.geom('geom1').feature('wp1').geom.feature('rot1').selection('input').named('del1');
model.geom('geom1').feature('wp1').geom.feature('rot1').set('rot', 'range(0,secAng,360-secAng)');
model.geom('geom1').feature('wp1').geom.run('rot1');
model.geom('geom1').run('wp1');
model.geom('geom1').create('unisel1', 'UnionSelection');
model.geom('geom1').feature('unisel1').label('Leading Edges of the Pads');
model.geom('geom1').feature('unisel1').set('entitydim', 1);
model.geom('geom1').feature('unisel1').set('input', {'wp1_disksel2'});
model.geom('geom1').feature.duplicate('unisel2', 'unisel1');
model.geom('geom1').feature('unisel2').label('Trailing Edges of the Pads');
model.geom('geom1').runPre('unisel2');
model.geom('geom1').feature('unisel2').set('input', {'wp1_disksel3'});
model.geom('geom1').run('unisel2');
model.geom('geom1').create('unisel3', 'UnionSelection');
model.geom('geom1').feature('unisel3').set('entitydim', 2);
model.geom('geom1').feature('unisel3').set('input', {'wp1_disksel4'});
model.geom('geom1').feature('unisel3').label('Grooves');
model.geom('geom1').feature.duplicate('unisel4', 'unisel3');
model.geom('geom1').feature('unisel4').label('Pads');
model.geom('geom1').runPre('unisel4');
model.geom('geom1').feature('unisel4').set('input', {'wp1_disksel5'});
model.geom('geom1').run('unisel4');
model.geom('geom1').create('adjsel1', 'AdjacentSelection');
model.geom('geom1').feature('adjsel1').set('entitydim', 2);
model.geom('geom1').feature('adjsel1').set('input', {'unisel3'});
model.geom('geom1').feature('adjsel1').set('outputdim', 1);
model.geom('geom1').feature('adjsel1').label('Groove Edges');
model.geom('geom1').run('adjsel1');
model.geom('geom1').create('cylsel1', 'CylinderSelection');
model.geom('geom1').feature('cylsel1').set('entitydim', 1);
model.geom('geom1').feature('cylsel1').set('inputent', 'selections');
model.geom('geom1').feature('cylsel1').set('input', {'adjsel1'});
model.geom('geom1').feature('cylsel1').set('r', '1.01*Ri');
model.geom('geom1').feature('cylsel1').set('rin', '0.99*Ri');
model.geom('geom1').feature('cylsel1').set('condition', 'inside');
model.geom('geom1').feature('cylsel1').label('Groove Inner Edges');
model.geom('geom1').feature.duplicate('adjsel2', 'adjsel1');
model.geom('geom1').feature.duplicate('cylsel2', 'cylsel1');
model.geom('geom1').feature('adjsel2').label('Pad Edges');
model.geom('geom1').runPre('adjsel2');
model.geom('geom1').feature('adjsel2').set('input', {'unisel4'});
model.geom('geom1').run('adjsel2');
model.geom('geom1').feature('cylsel2').label('Pad Inner Edges');
model.geom('geom1').feature('cylsel2').set('input', {'adjsel2'});
model.geom('geom1').create('cylsel3', 'CylinderSelection');
model.geom('geom1').feature('cylsel3').label('Control Boundaries');
model.geom('geom1').feature('cylsel3').set('entitydim', 2);
model.geom('geom1').feature('cylsel3').set('r', 'INf');
model.geom('geom1').feature('cylsel3').set('angle1', '-padAng*0.51');
model.geom('geom1').feature('cylsel3').set('angle2', 'gAng+0.51*padAng');
model.geom('geom1').feature('cylsel3').set('condition', 'inside');
model.geom('geom1').run('cylsel3');
model.geom('geom1').create('comsel1', 'ComplementSelection');
model.geom('geom1').feature('comsel1').label('Sector Symmetry');
model.geom('geom1').feature('comsel1').set('entitydim', 2);
model.geom('geom1').feature('comsel1').set('input', {'cylsel3'});
model.geom('geom1').run('comsel1');
model.geom('geom1').create('adjsel3', 'AdjacentSelection');
model.geom('geom1').feature('adjsel3').label('Fixed Edges');
model.geom('geom1').feature('adjsel3').set('entitydim', 2);
model.geom('geom1').feature('adjsel3').set('outputdim', 1);
model.geom('geom1').feature('adjsel3').set('input', {'cylsel3'});

model.variable.create('var1');
model.variable('var1').model('comp1');

model.geom('geom1').run;

model.variable('var1').selection.geom('geom1', 2);
model.variable('var1').selection.named('geom1_unisel3');
model.variable('var1').set('hf', 'hg+h_film');
model.variable('var1').label('Variables: Grooves');
model.variable.duplicate('var2', 'var1');
model.variable('var2').selection.named('geom1_unisel4');
model.variable('var2').set('hf', 'h_film');
model.variable('var2').label('Variables: Pads');

model.physics('hdb').prop('EquationType').set('EquationType', 'ReynoldsEquationWithCavitation');
model.physics('hdb').prop('EquationType').set('sftransition', '0.5[MPa]');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup('def').set('dynamicviscosity', {'mu_f'});

model.physics('hdb').create('htb1', 'HydrodynamicThrustBearing', 2);
model.physics('hdb').feature('htb1').selection.all;
model.physics('hdb').feature('htb1').set('RefNormal', 'InverseOrientation');
model.physics('hdb').feature('htb1').set('BearingType', 'UserDef');
model.physics('hdb').feature('htb1').set('hB1', 'hf');
model.physics('hdb').feature('htb1').set('Ow', 'angSpeed');
model.physics('hdb').feature('htb1').set('rho_c', 'rho_c');
model.physics('hdb').feature('bax1').set('bearingAxis', 'zAxis');
model.physics('hdb').feature('bax1').set('e_aux', [1 0 0]);

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.all;
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.named('geom1_cylsel1');
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 'round(gAng)');
model.mesh('mesh1').feature('map1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis2').selection.named('geom1_cylsel2');
model.mesh('mesh1').feature('map1').feature('dis2').set('numelem', 'round(padAng/2)');
model.mesh('mesh1').feature('map1').create('dis3', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis3').selection.named('geom1_unisel1');
model.mesh('mesh1').feature('map1').feature('dis3').set('numelem', 20);
model.mesh('mesh1').run;

model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 'N', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', '', 0);
model.study('std1').feature('stat').setIndex('pname', 'N', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', '', 0);
model.study('std1').feature('stat').setIndex('pname', 'h_film', 0);
model.study('std1').feature('stat').setIndex('plistarr', 'range(6e-5,2e-5,16e-5)', 0);
model.study('std1').feature('stat').setIndex('pname', 'N', 1);
model.study('std1').feature('stat').setIndex('plistarr', '', 1);
model.study('std1').feature('stat').setIndex('punit', '', 1);
model.study('std1').feature('stat').setIndex('pname', 'N', 1);
model.study('std1').feature('stat').setIndex('plistarr', '', 1);
model.study('std1').feature('stat').setIndex('punit', '', 1);
model.study('std1').feature('stat').setIndex('pname', 'angSpeed', 1);
model.study('std1').feature('stat').setIndex('plistarr', 'range(500,100,1000)', 1);
model.study('std1').feature('stat').set('sweeptype', 'filled');
model.study('std1').label('Study: Initial Design');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_pfilm').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_pfilm').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_pfilm').set('scaleval', '1000000');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s1').set('control', 'stat');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').label('Fluid Pressure (hdb)');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 6, 0);
model.result('pg1').setIndex('looplevel', 6, 1);
model.result('pg1').set('defaultPlotID', 'fluidPressure');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('colortable', 'RainbowLight');
model.result('pg1').feature('surf1').set('smooth', 'internal');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result('pg1').feature.create('con1', 'Contour');
model.result('pg1').feature('con1').set('levelrounding', false);
model.result('pg1').feature('con1').set('colorlegend', false);
model.result('pg1').feature('con1').set('smooth', 'internal');
model.result('pg1').feature('con1').set('inherittubescale', false);
model.result('pg1').feature('con1').set('data', 'parent');
model.result('pg1').feature('con1').set('inheritplot', 'surf1');
model.result('pg1').run;
model.result.dataset.create('surf1', 'Surface');
model.result.dataset('surf1').selection.all;
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').run;
model.result('pg2').label('Pressure (Height)');
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', 'hdb.p');
model.result('pg2').feature('surf1').set('colortable', 'Traffic');
model.result('pg2').feature('surf1').create('hght1', 'Height');
model.result('pg2').run;
model.result('pg2').feature('surf1').feature('hght1').set('scaleactive', true);
model.result('pg2').feature('surf1').feature('hght1').set('scale', '2e-8');
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').run;
model.result('pg3').label('Mass Fraction');
model.result('pg3').create('con1', 'Contour');
model.result('pg3').feature('con1').set('expr', 'hdb.theta');
model.result('pg3').feature('con1').set('descr', 'Mass fraction');
model.result('pg3').feature('con1').set('contourtype', 'filled');
model.result('pg3').feature('con1').set('number', 5);
model.result('pg3').feature('con1').set('colortable', 'JupiterAuroraBorealis');
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').run;
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', 'hg-hdb.h');
model.result('pg4').feature('surf1').set('coloring', 'uniform');
model.result('pg4').feature('surf1').set('color', 'gray');
model.result('pg4').feature('surf1').create('hght1', 'Height');
model.result('pg4').run;
model.result('pg4').feature('surf1').feature('hght1').set('scaleactive', true);
model.result('pg4').feature('surf1').feature('hght1').set('scale', 100);
model.result('pg4').run;
model.result('pg4').label('Pad Profile');
model.result('pg4').set('edges', false);
model.result('pg4').run;
model.result.dataset.create('cln1', 'CutLine3D');
model.result.dataset('cln1').setIndex('genpoints', 0, 1, 0);
model.result.dataset('cln1').setIndex('genpoints', 'Ro', 1, 1);
model.result.dataset('cln1').label('Cut Line 3D: Radial Line');
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').set('data', 'cln1');
model.result('pg5').setIndex('looplevelinput', 'last', 0);
model.result('pg5').label('Radial Distribution of Pressure (Film Thickness)');
model.result('pg5').set('titletype', 'label');
model.result('pg5').create('lngr1', 'LineGraph');
model.result('pg5').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg5').feature('lngr1').set('linewidth', 'preference');
model.result('pg5').feature('lngr1').set('expr', 'hdb.p');
model.result('pg5').feature('lngr1').set('legend', true);
model.result('pg5').feature('lngr1').set('legendmethod', 'evaluated');
model.result('pg5').feature('lngr1').set('legendpattern', 'h = eval(h_film, um) \mu m');
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').set('legendpos', 'upperleft');
model.result.duplicate('pg6', 'pg5');
model.result('pg6').run;
model.result('pg6').setIndex('looplevelinput', 'last', 1);
model.result('pg6').setIndex('looplevelinput', 'all', 0);
model.result('pg6').label('Radial Distribution of Pressure (Angular Speed)');
model.result('pg6').run;
model.result('pg6').feature('lngr1').set('legendpattern', '\Omega = eval(angSpeed) rad/s');
model.result('pg6').run;
model.result.dataset.create('pc1', 'ParCurve3D');
model.result.dataset('pc1').set('parmax1', '2*pi/N');
model.result.dataset('pc1').set('exprx', '0.5*(Ro+Ri)*cos(s)');
model.result.dataset('pc1').set('expry', '0.5*(Ro+Ri)*sin(s)');
model.result.dataset('pc1').label('Parameterized Curve 3D: Circumferential Line');
model.result('pg5').run;
model.result.duplicate('pg7', 'pg5');
model.result.duplicate('pg8', 'pg6');
model.result('pg7').run;
model.result('pg7').label('Circumferential Distribution of Pressure (Film Thickness)');
model.result('pg7').set('data', 'pc1');
model.result('pg7').run;
model.result('pg8').run;
model.result('pg8').label('Circumferential Distribution of Pressure (Angular Speed)');
model.result('pg8').set('data', 'pc1');
model.result('pg8').run;
model.result.create('pg9', 'PlotGroup1D');
model.result('pg9').run;
model.result('pg9').label('Lift Force');
model.result('pg9').set('titletype', 'label');
model.result('pg9').create('glob1', 'Global');
model.result('pg9').feature('glob1').set('markerpos', 'datapoints');
model.result('pg9').feature('glob1').set('linewidth', 'preference');
model.result('pg9').feature('glob1').set('expr', {'hdb.htb1.Fcz'});
model.result('pg9').feature('glob1').set('descr', {'Fluid load on collar, z-component'});
model.result('pg9').feature('glob1').set('unit', {'N'});
model.result('pg9').feature('glob1').setIndex('unit', 'kN', 0);
model.result('pg9').feature('glob1').set('legendmethod', 'evaluated');
model.result('pg9').feature('glob1').set('legendpattern', 'h = eval(h_film, um) \mu m');
model.result('pg9').run;
model.result('pg9').run;
model.result('pg9').set('legendpos', 'upperleft');
model.result('pg9').set('xlabelactive', true);
model.result('pg9').set('xlabel', 'Angular speed of the shaft (rad/s)');
model.result('pg9').run;

model.param.set('N', '4');
model.param.set('gAng', '125[deg]/N');

model.geom('geom1').run('cylsel2');
model.geom('geom1').create('adjsel4', 'AdjacentSelection');
model.geom('geom1').feature('adjsel4').set('entitydim', 2);
model.geom('geom1').feature('adjsel4').set('input', {'unisel3' 'unisel4'});
model.geom('geom1').feature('adjsel4').set('outputdim', 1);
model.geom('geom1').feature('adjsel4').label('Circular Boundaries');
model.geom('geom1').run('adjsel4');
model.geom('geom1').create('unisel5', 'UnionSelection');
model.geom('geom1').feature('unisel5').set('entitydim', 1);
model.geom('geom1').feature('unisel5').set('input', {'unisel1' 'unisel2' 'adjsel4'});
model.geom('geom1').feature('unisel5').label('Circular & pad edges');
model.geom('geom1').run;

model.common.create('fsd1', 'FreeShapeDomain', 'comp1');
model.common('fsd1').selection.all;
model.common.create('pls1', 'PolynomialShell', 'comp1');
model.common('pls1').selection.named('geom1_cylsel3');
model.common('pls1').set('maximumDisplacementType', 'Custom');
model.common('pls1').setIndex('move_lBound', '-maxDisp', 0);
model.common('pls1').setIndex('move_uBound', 'maxDisp', 0);
model.common('pls1').setIndex('move_lBound', '-maxDisp', 1);
model.common('pls1').setIndex('move_uBound', 'maxDisp', 1);
model.common('pls1').setIndex('move_lBound', '-maxDisp', 2);
model.common('pls1').setIndex('move_uBound', 'maxDisp', 2);
model.common('pls1').setIndex('move_lock', true, 2);
model.common('pls1').set('order', '3');
model.common.create('sss1', 'SectorShape', 'comp1');
model.common('sss1').selection.geom('geom1', 2);
model.common('sss1').selection.named('geom1_comsel1');
model.common('sss1').set('transformationType', 'rotation');
model.common.remove('fsd1');
model.common.create('fse1', 'FixedShapeEdge', 'comp1');
model.common('fse1').selection.named('geom1_adjsel3');

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/hdb', true);
model.study('std2').create('sho', 'ShapeOptimization');
model.study('std2').feature('sho').set('mmamaxiter', 15);
model.study('std2').feature('sho').set('optobj', {'comp1.hdb.htb1.Fcz'});
model.study('std2').feature('sho').set('descr', {'Fluid load on collar, z-component'});
model.study('std2').feature('sho').set('objectivetype', 'maximization');
model.study('std2').feature('sho').set('objectivescaling', 'init');
model.study('std2').feature('sho').set('probesel', 'none');
model.study('std2').feature('sho').set('plot', true);
model.study('std2').label('Study: Shape Optimization');

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_pls1_s1').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_pfilm').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_pls1_s2').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_pfilm').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_pls1_s1').set('scaleval', '1');
model.sol('sol2').feature('v1').feature('comp1_pfilm').set('scaleval', '1000000');
model.sol('sol2').feature('v1').feature('comp1_pls1_s2').set('scaleval', '1');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('o1', 'Optimization');
model.sol('sol2').feature('o1').set('control', 'sho');
model.sol('sol2').feature('o1').create('s1', 'StationaryAttrib');
model.sol('sol2').feature('o1').feature('s1').set('control', 'stat');
model.sol('sol2').feature('o1').feature('s1').create('seDef', 'Segregated');
model.sol('sol2').feature('o1').feature('s1').create('se1', 'Segregated');
model.sol('sol2').feature('o1').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol2').feature('o1').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol2').feature('o1').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_pfilm' 'comp1_pls1'});
model.sol('sol2').feature('o1').feature('s1').feature('se1').feature('ss1').set('linsolver', 'dDef');
model.sol('sol2').feature('o1').feature('s1').feature('se1').feature('ss1').label('Merged Variables');
model.sol('sol2').feature('o1').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol2').feature('o1').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_pls1' 'comp1_pls1_s1' 'comp1_pls1_s2'});
model.sol('sol2').feature('o1').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('o1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('o1').feature('s1').feature('i1').label('Suggested Iterative Solver (GMRES with AMG) (opt)');
model.sol('sol2').feature('o1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('o1').feature('s1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol2').feature('o1').feature('s1').feature('se1').feature('ss2').set('linsolver', 'i1');
model.sol('sol2').feature('o1').feature('s1').feature('se1').feature('ss2').label('Optimization');
model.sol('sol2').feature('o1').feature('s1').feature.remove('fcDef');
model.sol('sol2').feature('o1').feature('s1').feature.remove('seDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runFromTo('st1', 'v1');

model.result.create('pg10', 'PlotGroup3D');
model.result('pg10').label('Fluid Pressure (hdb) 1');
model.result('pg10').set('data', 'dset2');
model.result('pg10').set('defaultPlotID', 'fluidPressure');
model.result('pg10').feature.create('surf1', 'Surface');
model.result('pg10').feature('surf1').set('colortable', 'RainbowLight');
model.result('pg10').feature('surf1').set('smooth', 'internal');
model.result('pg10').feature('surf1').set('data', 'parent');
model.result('pg10').feature.create('con1', 'Contour');
model.result('pg10').feature('con1').set('levelrounding', false);
model.result('pg10').feature('con1').set('colorlegend', false);
model.result('pg10').feature('con1').set('smooth', 'internal');
model.result('pg10').feature('con1').set('inherittubescale', false);
model.result('pg10').feature('con1').set('data', 'parent');
model.result('pg10').feature('con1').set('inheritplot', 'surf1');
model.result.create('pg11', 'PlotGroup3D');
model.result.dataset.duplicate('dset2g1', 'dset2');
model.result.dataset('dset2g1').label('Study: Shape Optimization/Solution 2 (2) - Geometry');
model.result.dataset('dset2g1').set('frametype', 'geometry');
model.result('pg11').label('Shape Optimization');
model.result('pg11').set('data', 'dset2');
model.result('pg11').set('frametype', 'geometry');
model.result('pg11').set('edgecolor', 'gray');
model.result('pg11').set('titletype', 'none');
model.result('pg11').create('line1', 'Line');
model.result('pg11').feature('line1').set('expr', '1');
model.result('pg11').feature('line1').set('coloring', 'uniform');
model.result('pg11').feature('line1').set('color', 'fromtheme');
model.result('pg11').create('con1', 'Surface');
model.result('pg11').feature('con1').set('expr', 'pls1.rel_disp');
model.result('pg11').feature('con1').set('colortabletype', 'discrete');
model.result('pg11').feature('con1').set('bandcount', 20);
model.result('pg11').feature('con1').set('rangecoloractive', true);
model.result('pg11').feature('con1').set('rangecolormin', 0);
model.result('pg11').feature('con1').set('rangecolormax', 1);
model.result('pg11').feature('con1').set('colortable', 'RainbowLight');
model.result('pg11').feature('con1').set('smooth', 'none');
model.result('pg11').create('arws1', 'ArrowSurface');
model.result('pg11').feature('arws1').set('data', 'dset2g1');
model.result('pg11').feature('arws1').set('expr', {'pls1.dXg' 'pls1.dYg' 'pls1.dZg'});
model.result('pg11').feature('arws1').set('scaleactive', true);
model.result('pg11').feature('arws1').set('scale', '1');
model.result('pg11').feature('arws1').set('placement', 'uniform');
model.result('pg11').feature('arws1').set('arrowcount', 200);
model.result('pg11').feature('arws1').create('sel1', 'Selection');
model.result('pg11').feature('arws1').feature('sel1').selection.named('dsel_pls1');
model.result('pg10').run;

model.sol('sol2').feature('o1').set('gcmma', false);
model.sol('sol2').feature('o1').set('nojacmethod', false);
model.sol('sol2').feature('o1').feature('s1').feature('se1').feature.move('ss1', 1);
model.sol('sol2').feature('o1').feature('s1').feature('se1').feature('ss1').set('subdtech', 'auto');
model.sol('sol2').runAll;

model.result('pg10').run;

model.study('std2').feature('sho').set('probewindow', '');
model.study('std2').feature('sho').set('plotgroup', 'pg2');

model.sol('sol2').runAll;

model.result('pg10').run;

model.study('std2').feature('sho').set('probewindow', '');

model.result('pg10').label('Fluid Pressure, Shape Optimization (hdb)');
model.result('pg11').run;
model.result.remove('pg11');
model.result('pg2').run;
model.result.duplicate('pg11', 'pg2');
model.result.duplicate('pg12', 'pg3');
model.result.duplicate('pg13', 'pg4');
model.result('pg11').run;
model.result.dataset.duplicate('surf2', 'surf1');
model.result.dataset('surf2').set('data', 'dset2');
model.result.dataset('surf2').label('Surface (Shape Optimization)');
model.result('pg11').run;
model.result('pg11').set('data', 'surf2');
model.result('pg11').label('Pressure, Shape Optimization (Height)');
model.result('pg11').run;
model.result('pg12').run;
model.result('pg12').set('data', 'dset2');
model.result('pg12').label('Mass Fraction, Shape Optimization');
model.result('pg12').run;
model.result('pg13').run;
model.result('pg13').set('data', 'surf2');
model.result('pg13').label('Pad Profile, Shape Optimization');
model.result('pg13').run;
model.result('pg5').run;
model.result.duplicate('pg14', 'pg5');
model.result.duplicate('pg15', 'pg7');
model.result('pg14').run;
model.result.dataset.duplicate('cln2', 'cln1');
model.result.dataset.duplicate('pc2', 'pc1');
model.result.dataset('cln2').label('Cut Line 3D: Radial line (Optimization)');
model.result.dataset('cln2').set('data', 'dset2');
model.result.dataset('pc2').label('Parameterized Curve 3D: Circumferential line (Optimization)');
model.result.dataset('pc2').set('data', 'dset2');
model.result('pg14').run;
model.result('pg14').set('data', 'cln2');
model.result('pg14').label('Radial Distribution of Pressure (Shape Optimization)');
model.result('pg14').run;
model.result('pg14').set('showlegends', false);
model.result('pg15').run;
model.result('pg15').set('data', 'pc2');
model.result('pg15').label('Circumferential Distribution of Pressure (Shape Optimization)');
model.result('pg15').run;
model.result('pg15').set('showlegends', false);
model.result.create('pg16', 'PlotGroup3D');
model.result('pg16').run;
model.result('pg16').set('data', 'dset2');
model.result('pg16').label('Mesh');
model.result('pg16').create('mesh1', 'Mesh');
model.result('pg16').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg16').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg16').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg16').run;
model.result.create('pg17', 'PlotGroup3D');
model.result('pg17').run;
model.result('pg17').label('Shape Optimization');
model.result('pg17').set('data', 'dset2');
model.result('pg17').create('line1', 'Line');
model.result('pg17').feature('line1').set('expr', '1');
model.result('pg17').feature('line1').set('coloring', 'uniform');
model.result('pg17').feature('line1').set('color', 'gray');
model.result('pg17').feature('line1').create('def1', 'Deform');
model.result('pg17').run;
model.result('pg17').feature('line1').feature('def1').set('expr', {'-material.dX' '' ''});
model.result('pg17').feature('line1').feature('def1').setIndex('expr', '-material.dY', 1);
model.result('pg17').feature('line1').feature('def1').setIndex('expr', 0, 2);
model.result('pg17').feature('line1').feature('def1').set('scaleactive', true);
model.result('pg17').feature('line1').feature('def1').set('scale', 1);
model.result('pg17').run;
model.result('pg17').run;
model.result('pg17').create('arwl1', 'ArrowLine');
model.result('pg17').feature('arwl1').setIndex('expr', 'material.dX', 0);
model.result('pg17').feature('arwl1').setIndex('expr', 'material.dY', 1);
model.result('pg17').feature('arwl1').setIndex('expr', 'material.dZ', 2);
model.result('pg17').feature('arwl1').set('placement', 'elements');
model.result('pg17').feature('arwl1').set('arrowbase', 'head');
model.result('pg17').feature('arwl1').set('scaleactive', true);
model.result('pg17').feature('arwl1').create('col1', 'Color');
model.result('pg17').run;
model.result('pg17').feature('arwl1').feature('col1').set('expr', 'pls1.rel_disp');
model.result('pg17').feature('arwl1').feature('col1').set('descr', 'Relative displacement');
model.result('pg17').feature('arwl1').feature('col1').set('rangecoloractive', true);
model.result('pg17').feature('arwl1').feature('col1').set('rangecolormin', 0);
model.result('pg17').feature('arwl1').feature('col1').set('rangecolormax', 1);
model.result('pg17').run;
model.result('pg17').create('surf1', 'Surface');
model.result('pg17').feature('surf1').set('expr', 'hf');
model.result('pg17').feature('surf1').set('colortabletrans', 'reverse');
model.result('pg17').run;
model.result('pg17').run;
model.result('pg17').set('legendpos', 'rightdouble');
model.result('pg1').run;

model.nodeGroup.create('grp1', 'Results');
model.nodeGroup('grp1').set('type', 'plotgroup');
model.nodeGroup('grp1').add('plotgroup', 'pg1');
model.nodeGroup('grp1').add('plotgroup', 'pg2');
model.nodeGroup('grp1').add('plotgroup', 'pg3');
model.nodeGroup('grp1').add('plotgroup', 'pg4');
model.nodeGroup('grp1').add('plotgroup', 'pg5');
model.nodeGroup('grp1').add('plotgroup', 'pg6');
model.nodeGroup('grp1').add('plotgroup', 'pg7');
model.nodeGroup('grp1').add('plotgroup', 'pg8');
model.nodeGroup('grp1').add('plotgroup', 'pg9');
model.nodeGroup('grp1').label('Initial Design');

model.result('pg10').run;

model.nodeGroup.create('grp2', 'Results');
model.nodeGroup('grp2').set('type', 'plotgroup');
model.nodeGroup.move('grp2', 1);
model.nodeGroup('grp2').add('plotgroup', 'pg10');
model.nodeGroup('grp2').add('plotgroup', 'pg11');
model.nodeGroup('grp2').add('plotgroup', 'pg12');
model.nodeGroup('grp2').add('plotgroup', 'pg13');
model.nodeGroup('grp2').add('plotgroup', 'pg14');
model.nodeGroup('grp2').add('plotgroup', 'pg15');
model.nodeGroup('grp2').add('plotgroup', 'pg16');
model.nodeGroup('grp2').add('plotgroup', 'pg17');
model.nodeGroup('grp2').label('Shape Optimization');

model.result.dataset.create('filt1', 'Filter');
model.result.dataset('filt1').set('data', 'dset2');
model.result.dataset('filt1').set('expr', '1');
model.result.dataset('filt1').createMeshPart('mcomp1', 'mgeom1', 'mpart1', 'imp1');

model.mesh('mpart1').feature('imp1').set('facepartition', 'minimal');
model.mesh('mpart1').run;

model.modelNode.create('comp2', true);

model.geom.create('geom2', 3);
model.geom('geom2').model('comp2');

model.mesh.create('mesh2', 'geom2');

model.geom('geom2').create('imp1', 'Import');
model.geom('geom2').feature('imp1').set('mesh', 'mpart1');
model.geom('geom2').run('imp1');
model.geom('geom2').feature('imp1').set('simplifymesh', false);
model.geom('geom2').feature('imp1').set('formsolid', false);
model.geom('geom2').run('imp1');
model.geom('geom2').run;

model.material.copy('mat2', 'mat1', 'comp2');

model.physics.copy('hdb2', 'hdb', 'comp2');
model.physics('hdb2').feature('init1').set('pfilm', '100000[Pa]*hdb2.max(hdb2.hB1)/(0.1*hdb2.max(hdb2.hB1)+hdb2.hB1)');

model.variable.copy('var3', 'var1', 'comp2');
model.variable.copy('var4', 'var2', 'comp2');
model.variable('var3').selection.geom('geom2', 2);
model.variable('var3').selection.named('geom2_imp1_mpart1_imp1_geom1_unisel3');
model.variable('var4').selection.geom('geom2', 2);
model.variable('var4').selection.named('geom2_imp1_mpart1_imp1_geom1_unisel4');

model.mesh('mesh2').create('ftri1', 'FreeTri');
model.mesh('mesh2').feature('ftri1').selection.remaining;
model.mesh('mesh2').feature('size').set('hmax', '2*pi*Ro/360');
model.mesh('mesh2').feature('size').set('hmin', '2*pi*Ro/720');
model.mesh('mesh2').run;

model.study('std2').feature('stat').setEntry('activate', 'hdb2', false);
model.study('std1').feature('stat').setEntry('activate', 'hdb2', false);
model.study.create('std3');
model.study('std3').create('stat', 'Stationary');
model.study('std3').feature('stat').setSolveFor('/physics/hdb', false);
model.study('std3').feature('stat').setSolveFor('/physics/hdb2', true);
model.study('std3').label('Study: Remesh and Verify');
model.study('std3').setGenPlots(false);

model.sol.create('sol3');
model.sol('sol3').study('std3');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std3');
model.sol('sol3').feature('st1').set('studystep', 'stat');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').feature('comp1_pls1_s1').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_pls1_s2').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp2_pfilm').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp2_pfilm').set('resscalemethod', 'parent');
model.sol('sol3').feature('v1').feature('comp1_pls1_s1').set('scaleval', '1');
model.sol('sol3').feature('v1').feature('comp1_pls1_s2').set('scaleval', '1');
model.sol('sol3').feature('v1').feature('comp2_pfilm').set('scaleval', '1000000');
model.sol('sol3').feature('v1').set('control', 'stat');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').create('seDef', 'Segregated');
model.sol('sol3').feature('s1').create('se1', 'Segregated');
model.sol('sol3').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol3').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp2_pfilm' 'comp1_pls1'});
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('linsolver', 'dDef');
model.sol('sol3').feature('s1').feature('se1').feature('ss1').label('Merged Variables');
model.sol('sol3').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol3').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_pls1' 'comp1_pls1_s1' 'comp1_pls1_s2'});
model.sol('sol3').feature('s1').create('i1', 'Iterative');
model.sol('sol3').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol3').feature('s1').feature('i1').label('Suggested Iterative Solver (GMRES with AMG) (opt)');
model.sol('sol3').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol3').feature('s1').feature('se1').feature('ss2').set('linsolver', 'i1');
model.sol('sol3').feature('s1').feature('se1').feature('ss2').label('Optimization');
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol('sol3').feature('s1').feature.remove('seDef');
model.sol('sol3').attach('std3');
model.sol('sol3').runAll;

model.result.create('pg18', 'PlotGroup3D');
model.result('pg18').run;
model.result('pg18').set('data', 'dset4');
model.result('pg18').label('Verification');
model.result('pg18').create('surf1', 'Surface');
model.result('pg18').feature('surf1').create('mrkr1', 'Marker');
model.result('pg18').run;
model.result('pg18').feature('surf1').feature('mrkr1').set('precision', 4);
model.result('pg18').run;
model.result('pg18').feature.duplicate('surf2', 'surf1');
model.result('pg18').run;
model.result('pg18').feature('surf2').set('data', 'dset2');
model.result('pg18').feature('surf2').create('trn1', 'Translation');
model.result('pg18').run;
model.result('pg18').feature('surf2').feature('trn1').set('trans', [0.2 0 0]);
model.result('pg18').run;
model.result('pg18').run;
model.result('pg18').feature('surf2').set('inheritplot', 'surf1');
model.result('pg18').run;

model.study.create('std4');
model.study('std4').create('stat', 'Stationary');
model.study('std4').feature('stat').setSolveFor('/physics/hdb', true);
model.study('std4').feature('stat').setSolveFor('/physics/hdb2', false);
model.study('std4').feature('stat').set('probesel', 'none');
model.study('std4').create('sho', 'ShapeOptimization');
model.study('std4').feature('sho').set('mmamaxiter', 15);
model.study('std4').feature('sho').set('optobj', {'comp1.hdb.htb1.Fcz'});
model.study('std4').feature('sho').set('descr', {'Fluid load on collar, z-component'});
model.study('std4').feature('sho').set('objectivetype', 'maximization');
model.study('std4').feature('sho').set('objectivescaling', 'init');
model.study('std4').feature('sho').set('probesel', 'none');
model.study('std4').create('param', 'Parametric');
model.study('std4').feature('param').setIndex('pname', 'N', 0);
model.study('std4').feature('param').setIndex('plistarr', '', 0);
model.study('std4').feature('param').setIndex('punit', '', 0);
model.study('std4').feature('param').setIndex('pname', 'N', 0);
model.study('std4').feature('param').setIndex('plistarr', '', 0);
model.study('std4').feature('param').setIndex('punit', '', 0);
model.study('std4').feature('param').setIndex('plistarr', '3 4 5', 0);
model.study('std4').feature('param').set('probesel', 'none');
model.study('std4').label('Study: Shape Optimization Sweep');
model.study('std4').setGenPlots(false);

model.sol.create('sol4');
model.sol('sol4').study('std4');
model.sol('sol4').create('st1', 'StudyStep');
model.sol('sol4').feature('st1').set('study', 'std4');
model.sol('sol4').feature('st1').set('studystep', 'stat');
model.sol('sol4').create('v1', 'Variables');
model.sol('sol4').feature('v1').feature('comp1_pls1_s1').set('scalemethod', 'manual');
model.sol('sol4').feature('v1').feature('comp1_pfilm').set('scalemethod', 'manual');
model.sol('sol4').feature('v1').feature('comp1_pls1_s2').set('scalemethod', 'manual');
model.sol('sol4').feature('v1').feature('comp1_pfilm').set('resscalemethod', 'parent');
model.sol('sol4').feature('v1').feature('comp1_pls1_s1').set('scaleval', '1');
model.sol('sol4').feature('v1').feature('comp1_pfilm').set('scaleval', '1000000');
model.sol('sol4').feature('v1').feature('comp1_pls1_s2').set('scaleval', '1');
model.sol('sol4').feature('v1').set('control', 'stat');
model.sol('sol4').create('o1', 'Optimization');
model.sol('sol4').feature('o1').set('control', 'sho');
model.sol('sol4').feature('o1').create('s1', 'StationaryAttrib');
model.sol('sol4').feature('o1').feature('s1').set('control', 'stat');
model.sol('sol4').feature('o1').feature('s1').create('seDef', 'Segregated');
model.sol('sol4').feature('o1').feature('s1').create('se1', 'Segregated');
model.sol('sol4').feature('o1').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol4').feature('o1').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol4').feature('o1').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_pfilm' 'comp1_pls1'});
model.sol('sol4').feature('o1').feature('s1').feature('se1').feature('ss1').set('linsolver', 'dDef');
model.sol('sol4').feature('o1').feature('s1').feature('se1').feature('ss1').label('Merged Variables');
model.sol('sol4').feature('o1').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol4').feature('o1').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_pls1' 'comp1_pls1_s1' 'comp1_pls1_s2'});
model.sol('sol4').feature('o1').feature('s1').create('i1', 'Iterative');
model.sol('sol4').feature('o1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol4').feature('o1').feature('s1').feature('i1').label('Suggested Iterative Solver (GMRES with AMG) (opt)');
model.sol('sol4').feature('o1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol4').feature('o1').feature('s1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol4').feature('o1').feature('s1').feature('se1').feature('ss2').set('linsolver', 'i1');
model.sol('sol4').feature('o1').feature('s1').feature('se1').feature('ss2').label('Optimization');
model.sol('sol4').feature('o1').feature('s1').feature.remove('fcDef');
model.sol('sol4').feature('o1').feature('s1').feature.remove('seDef');
model.sol('sol4').attach('std4');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std4');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol4');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'N'});
model.batch('p1').set('plistarr', {'3 4 5'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'none');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std4');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').set('control', 'param');

model.sol('sol4').feature('o1').set('gcmma', false);
model.sol('sol4').feature('o1').set('nojacmethod', false);
model.sol('sol4').feature('o1').feature('s1').feature('se1').feature.move('ss1', 1);
model.sol('sol4').feature('o1').feature('s1').feature('se1').feature('ss1').set('subdtech', 'auto');
model.sol.create('sol5');
model.sol('sol5').study('std4');
model.sol('sol5').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol5');
model.batch('p1').run('compute');

model.study('std4').feature('sho').set('probewindow', '');

model.result('pg17').run;
model.result.duplicate('pg19', 'pg17');

model.nodeGroup('grp2').add('plotgroup', 'pg19');

model.result('pg19').run;
model.result('pg19').label('Shape Optimization Sweep');
model.result('pg19').set('data', 'dset7');
model.result('pg19').setIndex('looplevel', 1, 0);
model.result('pg19').run;
model.result.create('pg20', 'PlotGroup1D');
model.result('pg20').run;
model.result('pg20').label('Objective vs Number of Pads');
model.result('pg20').set('data', 'dset7');
model.result('pg20').create('glob1', 'Global');
model.result('pg20').feature('glob1').set('markerpos', 'datapoints');
model.result('pg20').feature('glob1').set('linewidth', 'preference');
model.result('pg20').feature('glob1').set('expr', {'hdb.htb1.Fcz'});
model.result('pg20').feature('glob1').set('descr', {'Fluid load on collar, z-component'});
model.result('pg20').run;
model.result('pg20').feature('glob1').setIndex('unit', 'kN', 0);
model.result('pg20').feature('glob1').set('legend', false);
model.result('pg20').run;
model.result('pg17').run;
model.result.duplicate('pg21', 'pg17');

model.nodeGroup('grp2').add('plotgroup', 'pg21');

model.result('pg21').run;
model.result('pg21').label('Thumbnail');

model.nodeGroup('grp2').remove('plotgroup', 'pg21', false);

model.result('pg21').run;
model.result.move('pg21', 19);
model.result.move('pg21', 20);
model.result('pg21').run;
model.result('pg21').feature.remove('surf1');
model.result('pg21').run;
model.result('pg21').feature('arwl1').set('placement', 'uniform');
model.result('pg21').feature('arwl1').set('arrowcount', 500);
model.result('pg21').run;
model.result('pg21').feature('arwl1').feature('col1').set('rangecoloractive', false);
model.result('pg21').run;
model.result('pg21').run;
model.result('pg21').feature('line1').set('linetype', 'tube');
model.result('pg21').feature('line1').set('radiusexpr', '4e-4');
model.result('pg21').feature('line1').set('tuberadiusscaleactive', true);
model.result('pg21').feature.duplicate('line2', 'line1');
model.result('pg21').run;
model.result('pg21').feature('line2').set('color', 'black');
model.result('pg21').run;
model.result('pg21').feature('line2').feature.remove('def1');
model.result('pg21').run;
model.result('pg21').run;

model.title('Shape Optimization of a Step Thrust Bearing');

model.description(['In this tutorial model, a step thrust bearing is shape optimized to maximize the bearing capacity. A step thrust bearing consists of a stepped bearing surface on which the end of the shaft rotates. The entire assembly is submerged in a lubricant. The shaft collar is assumed to be spinning without any axial motion in the bearing.' newline  newline 'The resulting design shows the optimal shape of the steps. The model also sweeps over the number of steps to identify the optimal number.']);

model.mesh('mesh1').clearMesh;
model.mesh('mpart1').clearMesh;
model.mesh('mesh2').clearMesh;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;
model.sol('sol8').clearSolutionData;

model.label('step_thrust_bearing_shape_optimization.mph');

model.modelNode.label('Components');

out = model;
