function out = model
%
% layered_shell_structure_connection.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Composite_Materials_Module/Tutorials');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');
model.physics.create('shell', 'Shell', 'geom1');
model.physics('shell').model('comp1');
model.physics.create('lshell', 'LayeredShell', 'geom1');
model.physics('lshell').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/solid', true);
model.study('std1').feature('stat').setSolveFor('/physics/shell', true);
model.study('std1').feature('stat').setSolveFor('/physics/lshell', true);

model.geom('geom1').run;

model.physics('lshell').prop('LayerSelection').set('bndType', 'allShell');
model.physics.move('lshell', 1);

model.param.set('a', '1[m]');
model.param.descr('a', 'Side length');
model.param.set('th', '1e-2[m]');
model.param.descr('th', 'Layer thickness');
model.param.set('F', '10[kN]');
model.param.descr('F', 'Total load');

model.geom('geom1').create('wp1', 'WorkPlane');
model.geom('geom1').feature('wp1').set('unite', true);
model.geom('geom1').feature('wp1').geom.create('r1', 'Rectangle');
model.geom('geom1').feature('wp1').geom.feature('r1').set('size', {'0.4*a' '0.5*a'});
model.geom('geom1').feature('wp1').geom.feature('r1').set('pos', {'0.3*a' '-0.5*a'});
model.geom('geom1').feature('wp1').geom.run('r1');
model.geom('geom1').feature('wp1').geom.create('rot1', 'Rotate');
model.geom('geom1').feature('wp1').geom.feature('rot1').selection('input').set({'r1'});
model.geom('geom1').feature('wp1').geom.feature('rot1').set('keep', true);
model.geom('geom1').feature('wp1').geom.feature('rot1').set('rot', '90 180 270');
model.geom('geom1').feature('wp1').geom.feature('rot1').set('pos', {'0.5*a' '0.5*a'});
model.geom('geom1').feature('wp1').geom.run('rot1');
model.geom('geom1').run('wp1');
model.geom('geom1').create('spl1', 'Split');
model.geom('geom1').feature('spl1').selection('input').set({'wp1'});
model.geom('geom1').run('spl1');
model.geom('geom1').feature.create('ext1', 'Extrude');
model.geom('geom1').feature('ext1').set('extrudefrom', 'faces');
model.geom('geom1').feature('ext1').selection('inputface').set('spl1(1)', 1);
model.geom('geom1').feature('ext1').selection('inputface').set('spl1(3)', 1);
model.geom('geom1').feature('ext1').setIndex('distance', '20*th', 0);
model.geom('geom1').feature('ext1').set('reverse', true);
model.geom('geom1').run('ext1');
model.geom('geom1').create('mov1', 'Move');
model.geom('geom1').feature('mov1').selection('input').set({'ext1(2)'});
model.geom('geom1').feature('mov1').set('displz', '10*th');
model.geom('geom1').run('mov1');
model.geom('geom1').create('mov2', 'Move');
model.geom('geom1').feature('mov2').selection('input').set({'spl1(4)'});
model.geom('geom1').feature('mov2').set('displz', '-2*th');
model.geom('geom1').run('mov2');
model.geom('geom1').create('wp2', 'WorkPlane');
model.geom('geom1').feature('wp2').set('unite', true);
model.geom('geom1').feature('wp2').geom.create('r1', 'Rectangle');
model.geom('geom1').feature('wp2').geom.feature('r1').set('size', {'1.4*a' 'a'});
model.geom('geom1').feature('wp2').geom.feature('r1').set('pos', {'-0.2*a' '0'});
model.geom('geom1').feature('wp2').geom.run('r1');
model.geom('geom1').feature('wp2').geom.create('r2', 'Rectangle');
model.geom('geom1').feature('wp2').geom.feature('r2').set('size', {'0.2*a' 'a'});
model.geom('geom1').feature('wp2').geom.feature('r2').set('pos', {'-0.2*a' '0'});
model.geom('geom1').run('wp2');
model.geom('geom1').create('mov3', 'Move');
model.geom('geom1').feature('mov3').selection('input').set({'ext1(1)' 'mov1' 'mov2' 'spl1(2)' 'wp2'});
model.geom('geom1').feature('mov3').set('keep', true);
model.geom('geom1').feature('mov3').set('disply', '2.5*a');
model.geom('geom1').run('mov3');
model.geom('geom1').feature.create('ext2', 'Extrude');
model.geom('geom1').feature('ext2').set('extrudefrom', 'faces');
model.geom('geom1').feature('ext2').selection('inputface').set('mov3(4)', 1);
model.geom('geom1').feature('ext2').selection('inputface').set('mov3(5)', [1 2]);
model.geom('geom1').feature('ext2').setIndex('distance', 'th', 0);
model.geom('geom1').feature('ext2').setIndex('distance', '2*th', 1);
model.geom('geom1').feature('ext2').set('displ', {'0' '0'; '0' '0'});
model.geom('geom1').feature('ext2').set('scale', {'1' '1'; '1' '1'});
model.geom('geom1').feature('ext2').set('twist', {'0' '0'});
model.geom('geom1').run('ext2');
model.geom('geom1').feature.create('ext3', 'Extrude');
model.geom('geom1').feature('ext3').set('extrudefrom', 'faces');
model.geom('geom1').feature('ext3').selection('inputface').set('mov3(3)', 1);
model.geom('geom1').feature('ext3').setIndex('distance', 'th', 0);
model.geom('geom1').feature('ext3').setIndex('distance', '2*th', 1);
model.geom('geom1').feature('ext3').set('displ', {'0' '0'; '0' '0'});
model.geom('geom1').feature('ext3').set('scale', {'1' '1'; '1' '1'});
model.geom('geom1').feature('ext3').set('twist', {'0' '0'});
model.geom('geom1').run('ext3');
model.geom('geom1').run('fin');

model.view('view1').set('showgrid', false);

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').selection.geom('geom1', 3);
model.variable('var1').selection.set([4 6]);
model.variable('var1').set('misesTop_solid', 'solid.mises');
model.variable('var1').descr('misesTop_solid', 'von Mises stress');
model.variable.create('var2');
model.variable('var2').model('comp1');
model.variable('var2').selection.geom('geom1', 3);
model.variable('var2').selection.set([3 5]);
model.variable('var2').set('misesBot_solid', 'solid.mises');
model.variable('var2').descr('misesBot_solid', 'von Mises stress');
model.variable.create('var3');
model.variable('var3').model('comp1');
model.variable('var3').set('misesTop_lshell', 'lshell.atxd1(2*th,mean(lshell.mises))');
model.variable('var3').descr('misesTop_lshell', 'von Mises stress');

model.material.create('mat1', 'Common', '');
model.material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat1').propertyGroup('Enu').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup('Enu').func.create('int2', 'Interpolation');
model.material('mat1').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat1').propertyGroup.create('ElastoplasticModel', 'Elastoplastic material model');
model.material('mat1').propertyGroup('ElastoplasticModel').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('Ludwik', 'Ludwik');
model.material('mat1').propertyGroup('Ludwik').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('JohnsonCook', 'Johnson-Cook');
model.material('mat1').propertyGroup.create('Swift', 'Swift');
model.material('mat1').propertyGroup.create('Voce', 'Voce');
model.material('mat1').propertyGroup('Voce').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('HockettSherby', 'Hockett-Sherby');
model.material('mat1').propertyGroup('HockettSherby').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('ArmstrongFrederick', 'Armstrong-Frederick');
model.material('mat1').propertyGroup('ArmstrongFrederick').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('Norton', 'Norton');
model.material('mat1').propertyGroup.create('Garofalo', 'Garofalo (hyperbolic sine)');
model.material('mat1').propertyGroup.create('ChabocheViscoplasticity', 'Chaboche viscoplasticity');
model.material('mat1').label('Structural steel');
model.material('mat1').set('family', 'custom');
model.material('mat1').set('customspecular', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat1').set('customdiffuse', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat1').set('customambient', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat1').set('noise', true);
model.material('mat1').set('fresnel', 0.9);
model.material('mat1').set('roughness', 0.3);
model.material('mat1').set('metallic', 0);
model.material('mat1').set('pearl', 0);
model.material('mat1').set('diffusewrap', 0);
model.material('mat1').set('clearcoat', 0);
model.material('mat1').set('reflectance', 0);
model.material('mat1').propertyGroup('def').set('lossfactor', '0.02');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('heatcapacity', '475[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]'});
model.material('mat1').propertyGroup('def').set('density', '7850[kg/m^3]');
model.material('mat1').propertyGroup('Enu').func('int1').set('funcname', 'E');
model.material('mat1').propertyGroup('Enu').func('int1').set('table', {'293.15' '200e9'; '793.15' '166.6e9'});
model.material('mat1').propertyGroup('Enu').func('int1').set('extrap', 'linear');
model.material('mat1').propertyGroup('Enu').func('int1').set('fununit', {'Pa'});
model.material('mat1').propertyGroup('Enu').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Enu').func('int2').set('funcname', 'nu');
model.material('mat1').propertyGroup('Enu').func('int2').set('table', {'293.15' '0.30'; '793.15' '0.315'});
model.material('mat1').propertyGroup('Enu').func('int2').set('extrap', 'linear');
model.material('mat1').propertyGroup('Enu').func('int2').set('fununit', {'1'});
model.material('mat1').propertyGroup('Enu').func('int2').set('argunit', {'K'});
model.material('mat1').propertyGroup('Enu').set('E', 'E(T)');
model.material('mat1').propertyGroup('Enu').set('nu', 'nu(T)');
model.material('mat1').propertyGroup('Enu').addInput('temperature');
model.material('mat1').propertyGroup('Murnaghan').set('l', '-3.0e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('m', '-6.2e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('n', '-7.2e11[Pa]');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmags', '350[MPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('Et', '1.045[GPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('Ek', '1.045[GPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmagh', '1.050[GPa]*epe*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').addInput('temperature');
model.material('mat1').propertyGroup('ElastoplasticModel').addInput('effectiveplasticstrain');
model.material('mat1').propertyGroup('Ludwik').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('Ludwik').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('Ludwik').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('Ludwik').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Ludwik').set('k_lud', '560[MPa]*a(T)');
model.material('mat1').propertyGroup('Ludwik').set('n_lud', '0.61');
model.material('mat1').propertyGroup('Ludwik').addInput('temperature');
model.material('mat1').propertyGroup('JohnsonCook').set('k_jcook', '560[MPa]');
model.material('mat1').propertyGroup('JohnsonCook').set('n_jcook', '0.61');
model.material('mat1').propertyGroup('JohnsonCook').set('C_jcook', '0.12');
model.material('mat1').propertyGroup('JohnsonCook').set('epet0_jcook', '1[1/s]');
model.material('mat1').propertyGroup('JohnsonCook').set('m_jcook', '0.6');
model.material('mat1').propertyGroup('Swift').set('e0_swi', '0.021');
model.material('mat1').propertyGroup('Swift').set('n_swi', '0.2');
model.material('mat1').propertyGroup('Voce').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('Voce').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('Voce').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('Voce').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Voce').set('sigma_voc', '249[MPa]*a(T)');
model.material('mat1').propertyGroup('Voce').set('beta_voc', '9.3');
model.material('mat1').propertyGroup('Voce').addInput('temperature');
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('HockettSherby').set('sigma_hoc', '684[MPa]*a(T)');
model.material('mat1').propertyGroup('HockettSherby').set('m_hoc', '3.9');
model.material('mat1').propertyGroup('HockettSherby').set('n_hoc', '0.85');
model.material('mat1').propertyGroup('HockettSherby').addInput('temperature');
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('ArmstrongFrederick').set('Ck', '2.070[GPa]*a(T)');
model.material('mat1').propertyGroup('ArmstrongFrederick').set('gammak', '8.0');
model.material('mat1').propertyGroup('ArmstrongFrederick').addInput('temperature');
model.material('mat1').propertyGroup('Norton').set('A_nor', '1.2e-15[1/s]');
model.material('mat1').propertyGroup('Norton').set('sigRef_nor', '1[MPa]');
model.material('mat1').propertyGroup('Norton').set('n_nor', '4.5');
model.material('mat1').propertyGroup('Garofalo').set('A_gar', '1e-6[1/s]');
model.material('mat1').propertyGroup('Garofalo').set('sigRef_gar', '100[MPa]');
model.material('mat1').propertyGroup('Garofalo').set('n_gar', '4.6');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('A_cha', '1');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('sigRef_cha', '490[MPa]');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('n_cha', '9');
model.material.create('mat2', 'Common', '');
model.material('mat2').label(['Carbon' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Epoxy']);
model.material.create('lmat1', 'LayeredMaterial', '');
model.material('lmat1').setIndex('link', 'mat2', 0);
model.material('lmat1').setIndex('thickness', 'th', 0);
model.material('lmat1').setIndex('meshPoints', 1, 0);
model.material('lmat1').setIndex('layername', 'Layer 2', 1);
model.material('lmat1').setIndex('link', 'mat2', 1);
model.material('lmat1').setIndex('rotation', '0.0', 1);
model.material('lmat1').setIndex('thickness', 'th', 1);
model.material('lmat1').setIndex('meshPoints', 1, 1);
model.material('lmat1').setIndex('tag', 'lmat1_2', 1);
model.material('lmat1').setIndex('layername', 'Layer 2', 1);
model.material('lmat1').setIndex('link', 'mat2', 1);
model.material('lmat1').setIndex('rotation', '0.0', 1);
model.material('lmat1').setIndex('thickness', 'th', 1);
model.material('lmat1').setIndex('meshPoints', 1, 1);
model.material('lmat1').setIndex('tag', 'lmat1_2', 1);
model.material('lmat1').setIndex('rotation', 45, 1);
model.material.create('llmat1', 'LayeredMaterialLink', 'comp1');
model.material('llmat1').selection.set([11 12 13 25 37 69]);
model.material('llmat1').set('middlePlane', 'bottom');
model.material.create('matlnk1', 'Link', 'comp1');
model.material('matlnk1').selection.set([3 4 5 6 8 9 11 12]);
model.material('matlnk1').set('link', 'mat2');
model.material.create('matlnk2', 'Link', 'comp1');
model.material('matlnk2').selection.set([1 2 7 10]);

model.physics('solid').prop('ShapeProperty').set('order_displacement', 2);
model.physics('solid').feature('lemm1').set('SolidModel', 'Orthotropic');
model.physics('solid').feature('lemm1').set('TransverseIsotropic', true);
model.physics('solid').create('lemm2', 'LinearElasticModel', 3);
model.physics('solid').feature('lemm2').set('SolidModel', 'Orthotropic');
model.physics('solid').feature('lemm2').set('TransverseIsotropic', true);
model.physics('solid').feature('lemm2').selection.set([4 6 9 12]);

model.coordSystem.create('sys2', 'geom1', 'Rotated');
model.coordSystem('sys2').set('angle', {'pi/4' '0' '0'});

model.physics('solid').feature('lemm2').set('coordinateSystem', 'sys2');
model.physics('solid').create('crack1', 'Crack', 2);
model.physics('solid').feature('crack1').selection.set([57]);
model.physics('solid').create('bndl1', 'BoundaryLoad', 2);
model.physics('solid').feature('bndl1').selection.set([20 33]);
model.physics('solid').feature('bndl1').set('LoadType', 'TotalForce');
model.physics('solid').feature('bndl1').set('Ftot', {'0' '0' 'F'});
model.physics('solid').create('fix1', 'Fixed', 2);
model.physics('solid').feature('fix1').selection.set([1 6 43 45 48 60 82 83]);
model.physics('lshell').selection.set([11 12 13 25]);
model.physics('lshell').create('fl1', 'FaceLoad', 2);
model.physics('lshell').feature('lemm1').set('TransverseIsotropic', true);
model.physics('lshell').feature('fl1').selection.all;
model.physics('lshell').feature('fl1').set('applyTo', 'top');
model.physics('lshell').feature('fl1').set('LoadType', 'TotalForce');
model.physics('lshell').feature('fl1').set('Ftot', {'0' '0' 'F'});
model.physics('shell').selection.set([37 69]);
model.physics('shell').create('llem1', 'LayeredElastic', 2);
model.physics('shell').feature('llem1').set('SolidModel', 'Orthotropic');
model.physics('shell').feature('llem1').set('TransverseIsotropic', true);
model.physics('shell').feature('llem1').selection.set([37 69]);
model.physics('shell').create('fix1', 'Fixed', 1);
model.physics('shell').feature('fix1').selection.set([68 163]);

model.multiphysics.create('lssc1', 'LayeredShellStructCladding', 'geom1', -1);
model.multiphysics('lssc1').set('LayeredShellBnd', 'Bottom');
model.multiphysics.create('lsst1', 'LayeredShellStructTransition', 'geom1', 1);
model.multiphysics('lsst1').set('bndType', 'allShell');
model.multiphysics('lsst1').set('allLayers', false);
model.multiphysics('lsst1').setIndex('shelllist_lCheck', 0, 1, 0);
model.multiphysics('lsst1').selection.set([74]);
model.multiphysics('lsst1').set('selectionControl', true);
model.multiphysics('lsst1').selection('edgBndSolidSelection').set([39 41]);
model.multiphysics.create('lssc2', 'LayeredShellStructCladding', 'geom1', -1);
model.multiphysics('lssc2').set('Shell_physics', 'shell');
model.multiphysics('lssc2').set('connectionSettings', 'parallelBnd');
model.multiphysics('lssc2').selection('paraBndLShellSelection').set([25]);
model.multiphysics('lssc2').selection('paraBndShellSelection').set([69]);
model.multiphysics('lssc2').set('LayeredShellBnd', 'Bottom');
model.multiphysics('lssc2').set('ShellBndParallel', 'Top');
model.multiphysics.create('lsst2', 'LayeredShellStructTransition', 'geom1', 1);
model.multiphysics('lsst2').set('Shell_physics', 'shell');
model.multiphysics('lsst2').selection.set([69]);

model.material('mat2').propertyGroup.create('TransverseIsotropic', 'Transversely_isotropic');
model.material('mat2').propertyGroup('TransverseIsotropic').set('Evect', {'134e9' '9.2e9'});
model.material('mat2').propertyGroup('TransverseIsotropic').set('nuvect', {'0.28' '0.28'});
model.material('mat2').propertyGroup('TransverseIsotropic').set('Gvect1', {'4.8e9'});
model.material('mat2').propertyGroup('def').set('density', {'1700'});

model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('size').set('custom', true);
model.mesh('mesh1').feature('size').set('hmax', 0.03);
model.mesh('mesh1').feature('size').set('hmin', 9.0E-4);
model.mesh('mesh1').feature('size').set('hgrad', 1.3);
model.mesh('mesh1').feature('size').set('hcurve', 0.2);
model.mesh('mesh1').feature('size').set('hnarrow', 1);
model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.set([11 13 25 37 69]);
model.mesh('mesh1').run;

model.study('std1').setGenPlots(false);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_ar').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_ar').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_ar').set('scaleval', '0.01');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.dataset.create('lshl1', 'LayeredMaterial');
model.result.dataset.create('lshl2', 'LayeredMaterial');
model.result.dataset('lshl2').set('usealllayers', false);
model.result.dataset('lshl2').setIndex('layerselection', false, 1, 0);
model.result.dataset('lshl2').label('Layered Material: Bottom Layer');
model.result.dataset.create('lshl3', 'LayeredMaterial');
model.result.dataset('lshl3').label('Layered Material: Top Layer');
model.result.dataset('lshl3').set('usealllayers', false);
model.result.dataset('lshl3').setIndex('layerselection', false, 0, 0);
model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').run;
model.result('pg1').label('Stress');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', 'solid.mises');
model.result('pg1').feature('surf1').set('unit', 'MPa');
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').feature('surf1').set('rangecoloractive', true);
model.result('pg1').feature('surf1').set('rangecolormax', 10);
model.result('pg1').feature('surf1').create('def1', 'Deform');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').create('surf2', 'Surface');
model.result('pg1').feature('surf2').set('data', 'lshl1');
model.result('pg1').feature('surf2').set('expr', 'lshell.mises');
model.result('pg1').feature('surf2').set('unit', 'MPa');
model.result('pg1').feature('surf2').set('titletype', 'none');
model.result('pg1').feature('surf2').set('inheritplot', 'surf1');
model.result('pg1').feature('surf2').create('def1', 'Deform');
model.result('pg1').run;
model.result('pg1').feature('surf2').feature('def1').set('expr', {'u3' 'v3' 'w3'});
model.result('pg1').run;
model.result('pg1').create('surf3', 'Surface');
model.result('pg1').feature('surf3').set('data', 'lshl1');
model.result('pg1').feature('surf3').set('expr', 'shell.mises');
model.result('pg1').feature('surf3').set('unit', 'MPa');
model.result('pg1').feature('surf3').set('titletype', 'none');
model.result('pg1').feature('surf3').set('inheritplot', 'surf1');
model.result('pg1').feature('surf3').create('def1', 'Deform');
model.result('pg1').run;
model.result('pg1').feature('surf3').feature('def1').set('expr', {'u2' 'v2' 'w2'});
model.result('pg1').run;
model.result('pg1').create('tlan1', 'TableAnnotation');
model.result('pg1').feature('tlan1').set('source', 'localtable');
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 1.5, 0, 0);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 1.5, 0, 1);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 0, 0, 2);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 'Layered Shell-Solid-Shell', 0, 3);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 1.5, 1, 0);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 4, 1, 1);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 0, 1, 2);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 'Solid (Reference)', 1, 3);
model.result('pg1').feature('tlan1').set('showpoint', false);
model.result('pg1').run;
model.result('pg1').run;
model.result.duplicate('pg2', 'pg1');
model.result('pg2').run;
model.result('pg2').label('Displacement');
model.result('pg2').run;
model.result('pg2').feature('surf1').set('expr', 'solid.disp');
model.result('pg2').feature('surf1').set('unit', 'mm');
model.result('pg2').feature('surf1').set('rangecoloractive', false);
model.result('pg2').feature('surf1').set('colortable', 'SpectrumLight');
model.result('pg2').run;
model.result('pg2').feature('surf2').set('expr', 'lshell.disp');
model.result('pg2').feature('surf2').set('unit', 'mm');
model.result('pg2').run;
model.result('pg2').feature('surf3').set('expr', 'shell.disp');
model.result('pg2').feature('surf3').set('unit', 'mm');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg1').run;
model.result.duplicate('pg3', 'pg1');
model.result('pg3').run;
model.result('pg3').label('Stress: Layered Shell, Bottom Layer');
model.result('pg3').run;
model.result('pg3').feature.remove('surf3');
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').feature('surf1').set('expr', 'misesBot_solid');
model.result('pg3').run;
model.result('pg3').feature('surf2').set('data', 'lshl2');
model.result('pg3').run;
model.result('pg3').run;
model.result.duplicate('pg4', 'pg3');
model.result('pg4').run;
model.result('pg4').label('Stress: Layered Shell, Top Layer');
model.result('pg4').run;
model.result('pg4').feature('surf1').set('expr', 'misesTop_solid');
model.result('pg4').run;
model.result('pg4').feature('surf2').set('data', 'lshl3');
model.result('pg4').run;
model.result('pg4').run;
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').label('Stress, Layered Shell-Solid Cladding');
model.result('pg5').set('titletype', 'label');
model.result('pg5').set('xlabelactive', true);
model.result('pg5').set('xlabel', 'Y-coordinate (m)');
model.result('pg5').set('ylabelactive', true);
model.result('pg5').set('ylabel', 'von Mises stress (MPa)');
model.result('pg5').create('lngr1', 'LineGraph');
model.result('pg5').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg5').feature('lngr1').set('linewidth', 'preference');
model.result('pg5').feature('lngr1').selection.set([17 19 21]);
model.result('pg5').feature('lngr1').set('expr', 'misesTop_lshell');
model.result('pg5').feature('lngr1').set('unit', 'MPa');
model.result('pg5').feature('lngr1').set('legend', true);
model.result('pg5').feature('lngr1').set('legendmethod', 'manual');
model.result('pg5').feature('lngr1').setIndex('legends', 'Layered Shell', 0);
model.result('pg5').feature.duplicate('lngr2', 'lngr1');
model.result('pg5').run;
model.result('pg5').feature('lngr2').selection.set([30]);
model.result('pg5').feature('lngr2').set('expr', 'solid.mises');
model.result('pg5').feature('lngr2').set('linestyle', 'dashed');
model.result('pg5').feature('lngr2').setIndex('legends', 'Solid (Reference)', 0);
model.result('pg5').run;
model.result('pg5').run;
model.result.duplicate('pg6', 'pg5');
model.result('pg6').run;
model.result('pg6').label('Stress, Layered Shell-Shell Cladding');
model.result('pg6').run;
model.result('pg6').feature('lngr1').selection.set([151]);
model.result('pg6').run;
model.result('pg6').feature('lngr2').selection.set([156]);
model.result('pg6').feature('lngr2').set('xdata', 'reversedarc');
model.result('pg6').run;
model.result('pg6').run;
model.result.duplicate('pg7', 'pg6');
model.result('pg7').run;
model.result('pg7').label('Stress, Layered Shell-Shell Transition');
model.result('pg7').set('xlabel', 'X-coordinate (m)');
model.result('pg7').run;
model.result('pg7').feature('lngr1').selection.set([18 42 69 108]);
model.result('pg7').run;
model.result('pg7').feature('lngr2').selection.set([31 56 92 124]);
model.result('pg7').feature('lngr2').set('xdata', 'arc');
model.result('pg7').run;
model.result('pg7').run;
model.result.duplicate('pg8', 'pg7');
model.result('pg8').run;
model.result('pg8').label('Stress, Layered Shell-Solid Transition');
model.result('pg8').run;
model.result('pg8').feature('lngr1').selection.set([23 48 74 112]);
model.result('pg8').run;
model.result('pg8').feature('lngr2').set('expr', 'misesTop_solid');
model.result('pg8').feature('lngr2').selection.set([40 66 101 132]);
model.result('pg8').run;
model.result('pg8').run;
model.result('pg3').run;

model.title('Connecting Layered Shells with Solids and Shells');

model.description(['Layered shell elements, which are used for modeling composite shells, often connected to solid and shell elements in cladding or side-by-side configuration to represent a realistic structure. For such applications, it becomes important to connect layered shell element correctly and easily with other structural elements.' newline  newline 'In this tutorial and verification problem, you will learn how to connect layered shell elements to solid and shell elements in different configurations. The results are also compared to a solid model of the same geometry.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;

model.label('layered_shell_structure_connection.mph');

model.modelNode.label('Components');

out = model;
