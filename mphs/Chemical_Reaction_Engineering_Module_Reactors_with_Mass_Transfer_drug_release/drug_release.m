function out = model
%
% drug_release.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Chemical_Reaction_Engineering_Module/Reactors_with_Mass_Transfer');

model.modelNode.create('comp1', true);

model.physics.create('re', 'ReactionEng');
model.physics('re').model('comp1');

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/re', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('T_in', '300[K]', 'Inlet temperature');
model.param.set('kf_mm', '7.336e-3[s^-1]', 'Reaction rate constant, matrix-degradation following Michaelis-Menten kinetics');
model.param.set('Km', '0.01[mol/m^3]', 'Michaelis-Menten constant');
model.param.set('kf_d', '1.5e4[m^3/(s*mol)]', 'Forward reaction rate constant, drug dissociation');
model.param.set('kr_d', '13.5[1/s]', 'Reverse reaction rate constant, drug dissociation');
model.param.set('ce_init', '2e-3[mol/m^3]', 'Initial concentration enzyme, biomaterial matrix');
model.param.set('cnE_init', '2e-3[mol/m^3]', 'Initial concentration enzyme, nerve cell tissue');
model.param.set('cmp_init', '1e-6[mol/m^2]', 'Initial concentration matrix-bound peptide, biomaterial matrix');
model.param.set('cmpd_init', '1e-6[mol/m^2]', 'Initial concentration matrix-bound drug-peptide species, biomaterial matrix');
model.param.set('c_solv', 'rhoh2o/Mnh2o', 'Concentration, solvent (water)');
model.param.set('Dd', '8.93e-11[m^2/s]', 'Diffusion coefficient matrix-bound drug, biomaterial matrix');
model.param.set('Dp', '1.58e-10[m^2/s]', 'Diffusion coefficient drug, biomaterial matrix');
model.param.set('Dpd', '8.3e-11[m^2/s]', 'Diffusion coefficient peptide, biomaterial matrix');
model.param.set('De', '5e-11[m^2/s]', 'Diffusion coefficient enzyme, biomaterial matrix');
model.param.set('Dd_s', '8.3e-11[m^2/s]', 'Diffusion coefficient drug, surroundings');
model.param.set('Dp_s', '1.68e-10[m^2/s]', 'Diffusion coefficient peptide, surroundings');
model.param.set('Dpd_s', '9.31e-11[m^2/s]', 'Diffusion coefficient drug-peptide species, surroundings');
model.param.set('De_s', '5.5e-11[m^2/s]', 'Diffusion coefficient enzyme, surroundings');
model.param.set('Dd_n', '8.93e-11[m^2/s]', 'Diffusion coefficient drug, nerve cell tissue');
model.param.set('Dp_n', '1.58e-10[m^2/s]', 'Diffusion coefficient peptide, nerve cell tissue');
model.param.set('Dpd_n', '8.3e-11[m^2/s]', 'Diffusion coefficient drug-peptide species, nerve cell tissue');
model.param.set('De_n', '5e-11[m^2/s]', 'Diffusion coefficient enzyme, nerve cell tissue');
model.param.set('Mnd', '10[kg/mol]', 'Molar mass, drug');
model.param.set('Mnp', '1[kg/mol]', 'Molar mass, peptide');
model.param.set('Mnpd', '11[kg/mol]', 'Molar mass, drug-peptide species');
model.param.set('Mne', '50[kg/mol]', 'Molar mass, enzyme');
model.param.set('Mnh2o', '0.018[kg/mol]', 'Molar mass, solvent (water)');
model.param.set('rhoh2o', '1000[kg/m^3]', 'Density solvent (water)');
model.param.set('Ssa', '1e4[m^2/m^3]', 'Biomaterial specific surface area');
model.param.set('epsBio', '0.65', 'Biomaterial porosity');

model.physics('re').prop('mixture').set('mixture', 'liquid');
model.physics('re').create('rch1', 'ReactionChem', -1);
model.physics('re').feature('rch1').set('formula', 'd+mp(ads)=>mpd(ads)');
model.physics('re').feature('rch1').set('rType', 'rev');
model.physics('re').feature('rch1').set('kf', 'kf_d');
model.physics('re').feature('rch1').set('kr', 'kr_d');
model.physics('re').create('rch2', 'ReactionChem', -1);
model.physics('re').feature('rch2').set('formula', 'd+p<=>pd');
model.physics('re').feature('rch2').set('kf', 'kf_d');
model.physics('re').feature('rch2').set('kr', 'kr_d');
model.physics('re').create('rch3', 'ReactionChem', -1);
model.physics('re').feature('rch3').set('formula', 'mp(ads)+e=>p+e');
model.physics('re').feature('rch3').set('ReactionExpression', 'UserDefined');
model.physics('re').feature('rch3').set('r', 'kf_mm*re.c_e*re.csurf_mp_surf/(Km+re.csurf_mp_surf*Ssa)');
model.physics('re').create('rch4', 'ReactionChem', -1);
model.physics('re').feature('rch4').set('formula', 'mpd(ads)+e=>pd+e');
model.physics('re').feature('rch4').set('ReactionExpression', 'UserDefined');
model.physics('re').feature('rch4').set('r', 'kf_mm*re.c_e*re.csurf_mpd_surf/(Km+re.csurf_mpd_surf*Ssa)');
model.physics('re').create('spec1', 'SpeciesChem', -1);
model.physics('re').feature('spec1').set('specName', 'h2o');
model.physics('re').feature('h2o').set('sType', 'solvent');
model.physics('re').prop('reactor').set('surfaceAreaOptions', 'surfaceAreaToVolumeRatio');
model.physics('re').prop('reactor').set('as', 'Ssa');
model.physics('re').feature('inits1').setIndex('initialValue', 'ce_init', 1, 0);
model.physics('re').feature('inits1').setIndex('initialValue', 'c_solv', 2, 0);
model.physics('re').feature('inits1').setIndex('initialValues', 'cmp_init', 0, 0);
model.physics('re').feature('inits1').setIndex('initialValues', 'cmpd_init', 1, 0);
model.physics('re').feature('inits1').set('gamman0', '(cmp_init+cmpd_init)');

model.study('std1').feature('time').set('tunit', 'h');
model.study('std1').feature('time').set('tlist', 'range(0,0.1,16)');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.1,16)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('tout', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 1.0E-5);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('consistent', 'off');
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').create('glob1', 'Global');
model.result('pg1').feature('glob1').set('expr', {'re.c_d' 're.csurf_mp_surf' 're.csurf_mpd_surf' 're.c_p' 're.c_pd' 're.c_e'});
model.result('pg1').feature('glob1').set('descr', {'Concentration' 'Surface concentration' 'Surface concentration' 'Concentration' 'Concentration' 'Concentration'});
model.result('pg1').feature('glob1').set('unit', {'' '' '' '' '' ''});
model.result('pg1').feature('glob1').set('expr', {'re.c_d' 're.csurf_mp_surf' 're.csurf_mpd_surf' 're.c_p' 're.c_pd' 're.c_e'});
model.result('pg1').feature('glob1').set('descr', {'Concentration' 'Surface concentration' 'Surface concentration' 'Concentration' 'Concentration' 'Concentration'});
model.result('pg1').label('Concentration (re)');
model.result('pg1').feature('glob1').set('xdatasolnumtype', 'level1');
model.result('pg1').run;
model.result('pg1').label('Biomaterial Concentrations, 0D model');
model.result('pg1').set('xlog', true);
model.result('pg1').run;
model.result('pg1').feature('glob1').setIndex('expr', 're.csurf_mp_surf*Ssa', 1);
model.result('pg1').feature('glob1').setIndex('unit', 'mol/m^3', 1);
model.result('pg1').feature('glob1').setIndex('descr', '', 1);
model.result('pg1').feature('glob1').setIndex('expr', 're.csurf_mpd_surf*Ssa', 2);
model.result('pg1').feature('glob1').setIndex('unit', 'mol/m^3', 2);
model.result('pg1').feature('glob1').setIndex('descr', '', 2);
model.result('pg1').feature('glob1').set('xdataparamunit', 's');
model.result('pg1').feature('glob1').set('linewidth', 2);
model.result('pg1').run;
model.result('pg1').feature('glob1').set('legendmethod', 'manual');
model.result('pg1').feature('glob1').setIndex('legends', 'Drug', 0);
model.result('pg1').feature('glob1').setIndex('legends', 'Matrix-bound peptide', 1);
model.result('pg1').feature('glob1').setIndex('legends', 'Matrix-bound drug-peptide', 2);
model.result('pg1').feature('glob1').setIndex('legends', 'Peptide', 3);
model.result('pg1').feature('glob1').setIndex('legends', 'Drug-peptide', 4);
model.result('pg1').feature('glob1').setIndex('legends', 'Enzyme', 5);
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').set('titletype', 'none');
model.result('pg1').set('ylabelactive', true);
model.result('pg1').set('ylabel', 'Concentration (mol/m<sup>3</sup>)');
model.result('pg1').set('legendpos', 'middleleft');

model.physics('re').create('sync1', 'ReactionToMph', -1);
model.physics('re').feature('sync1').set('geomToUse', '2Daxi');
model.physics('re').feature('sync1').set('massbalance', 'DilutedSpeciesInPorousCatalysts');
model.physics('re').feature('sync1').set('study', 'Transient');
model.physics('re').prop('synchronize').set('synchronize', '1');

model.modelNode.create('comp2', true);

model.physics('re').feature('sync1').set('model', {'comp2'});

model.geom.create('geom1', 2);
model.geom('geom1').model('comp2');
model.geom('geom1').axisymmetric(true);
model.geom('geom1').label('Geometry 1(2Daxi)');

model.physics('re').feature('sync1').set('genom', {'geom1'});

model.mesh.create('mesh1', 'geom1');

model.study.create('std2');

model.physics('re').feature('sync1').set('studyname', {'std2'});

model.study('std2').create('time', 'Transient');

model.physics.create('chem1', 'Chemistry', 'geom1');
model.physics('chem1').model('comp2');
model.physics('re').feature('sync1').set('Chemistry', {'chem1'});
model.physics.create('tds', 'DilutedSpeciesInPorousCatalysts', 'geom1');
model.physics('tds').model('comp2');
model.physics('chem1').prop('TPFeatureInput').set('T_src', 'userdef');
model.physics('chem1').prop('TPFeatureInput').set('T', '293.15[K]');
model.physics('chem1').prop('mixture').set('mixture', 'liquid');
model.physics('chem1').prop('mixture').set('liquidDensitySel', 'Automatic');
model.physics('chem1').prop('Activity').set('useActivity', '0');
model.physics('chem1').prop('chemkin').set('chemkin', '0');
model.physics('chem1').prop('ChemistryCommonProperty').set('VolumetricConcentrationGlobalActivityStandardState', '1[mol/m^3]');
model.physics('chem1').prop('ChemistryCommonProperty').set('SurfaceSpeciesConcentrationType', 'SurfaceConcentration');
model.physics('chem1').prop('ChemistryCommonProperty').set('SurfaceGlobalActivityStandardState', '1[mol/m^2]');
model.physics('chem1').prop('ChemistryCommonProperty').set('SpeciesrateUserDefinedList', {'h2o'});
model.physics('chem1').prop('ChemistryCommonProperty').set('AdditionalSourceFeature', '0');
model.physics('chem1').prop('ActiveSpecies').set('SumActiveSpecies', '7');
model.physics('chem1').prop('ActiveSpecies').set('NumActiveVolumeSpecies', '5');
model.physics('chem1').prop('ActiveSpecies').set('NumActiveSurfaceSpecies', '2');
model.physics('chem1').prop('ActiveSpecies').set('NumActiveSurfaceSpeciesVariable', '2');
model.physics('chem1').prop('ActiveSpecies').set('surface', '1');
model.physics('chem1').prop('solventIsSet').set('solventIsSet', '1');
model.physics('chem1').prop('solventIsSet').set('solventTag', 'h2o');
model.physics('chem1').prop('calcTransport').set('etaRef', '1.787E-3[Pa*s]');
model.physics('chem1').prop('calcTransport').set('Tref', '273[K]');
model.physics('chem1').create('rch1', 'ReactionChem');
model.physics('chem1').feature('rch1').set('rSequenceNo', '1');
model.physics('chem1').feature('rch1').set('formula', 'd + mp(ads) <=> mpd(ads)');
model.physics('chem1').feature('rch1').set('updatechem', '0');
model.physics('chem1').feature('rch1').set('useArrhenius', '0');
model.physics('chem1').feature('rch1').set('kf', 'kf_d');
model.physics('chem1').feature('rch1').set('bulkFwdOrder', '1');
model.physics('chem1').feature('rch1').set('surfFwdOrder', '1');
model.physics('chem1').feature('rch1').set('setKeq0', '0');
model.physics('chem1').feature('rch1').set('kr', 'kr_d');
model.physics('chem1').feature('rch1').set('bulkRevOrder', '0');
model.physics('chem1').feature('rch1').set('surfRevOrder', '1');
model.physics('chem1').feature('rch1').label('1: Surface: d + mp(ads) <=> mpd(ads)');
model.physics('chem1').feature('rch1').set('rClass', 'surface');
model.physics('chem1').create('rch2', 'ReactionChem');
model.physics('chem1').feature('rch2').set('rSequenceNo', '2');
model.physics('chem1').feature('rch2').set('formula', 'd + p <=> pd');
model.physics('chem1').feature('rch2').set('updatechem', '0');
model.physics('chem1').feature('rch2').set('useArrhenius', '0');
model.physics('chem1').feature('rch2').set('kf', 'kf_d');
model.physics('chem1').feature('rch2').set('bulkFwdOrder', '2');
model.physics('chem1').feature('rch2').set('surfFwdOrder', '0');
model.physics('chem1').feature('rch2').set('setKeq0', '0');
model.physics('chem1').feature('rch2').set('kr', 'kr_d');
model.physics('chem1').feature('rch2').set('bulkRevOrder', '1');
model.physics('chem1').feature('rch2').set('surfRevOrder', '0');
model.physics('chem1').feature('rch2').label('2: d + p <=> pd');
model.physics('chem1').feature('rch2').set('rClass', 'volumetric');
model.physics('chem1').create('rch3', 'ReactionChem');
model.physics('chem1').feature('rch3').set('rSequenceNo', '3');
model.physics('chem1').feature('rch3').set('formula', 'mp(ads) + e => p + e');
model.physics('chem1').feature('rch3').set('updatechem', '0');
model.physics('chem1').feature('rch3').set('useArrhenius', '0');
model.physics('chem1').feature('rch3').set('ReactionExpression', 'UserDefined');
model.physics('chem1').feature('rch3').set('r', 'kf_mm*chem.c_e*chem.csurf_mp_surf/(Km+chem.csurf_mp_surf*Ssa)');
model.physics('chem1').feature('rch3').set('kf', '1');
model.physics('chem1').feature('rch3').set('bulkFwdOrder', '1');
model.physics('chem1').feature('rch3').set('surfFwdOrder', '1');
model.physics('chem1').feature('rch3').label('3: Surface: mp(ads) + e => p + e');
model.physics('chem1').feature('rch3').set('rClass', 'surface');
model.physics('chem1').create('rch4', 'ReactionChem');
model.physics('chem1').feature('rch4').set('rSequenceNo', '4');
model.physics('chem1').feature('rch4').set('formula', 'mpd(ads) + e => pd + e');
model.physics('chem1').feature('rch4').set('updatechem', '0');
model.physics('chem1').feature('rch4').set('useArrhenius', '0');
model.physics('chem1').feature('rch4').set('ReactionExpression', 'UserDefined');
model.physics('chem1').feature('rch4').set('r', 'kf_mm*chem.c_e*chem.csurf_mpd_surf/(Km+chem.csurf_mpd_surf*Ssa)');
model.physics('chem1').feature('rch4').set('kf', '1');
model.physics('chem1').feature('rch4').set('bulkFwdOrder', '1');
model.physics('chem1').feature('rch4').set('surfFwdOrder', '1');
model.physics('chem1').feature('rch4').label('4: Surface: mpd(ads) + e => pd + e');
model.physics('chem1').feature('rch4').set('rClass', 'surface');
model.physics('chem1').feature('d').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('d').set('sisDef', '1');
model.physics('chem1').feature('d').set('specLabel', 'd');
model.physics('chem1').feature('d').set('speciesNameInput', 'd');
model.physics('chem1').feature('d').set('specName', 'd');
model.physics('chem1').feature('d').set('enableChemicalFormulaCheckbox', '0');
model.physics('chem1').feature('d').set('chemicalFormula', '');
model.physics('chem1').feature('d').set('sType', 'volumetric');
model.physics('chem1').feature('d').set('M', '0.0[kg/mol]');
model.physics('chem1').feature('d').set('z', '0');
model.physics('chem1').feature('d').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('d').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('d').set('mu', '0[C*m]');
model.physics('chem1').feature('d').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('d').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('d').set('ActivityCoefficient', '1');
model.physics('chem1').feature('d').set('cLock', '0');
model.physics('chem1').feature('d').set('Dependent', '0');
model.physics('chem1').feature('d').set('dependent', '0');
model.physics('chem1').feature('d').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('d').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('d').set('Tlo', '300[K]');
model.physics('chem1').feature('d').set('Tmid', '1000[K]');
model.physics('chem1').feature('d').set('Thi', '5000[K]');
model.physics('chem1').feature('d').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('d').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('d').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('d').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('d').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('d').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('d').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('d').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('d').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('d').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('d').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('d').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('d').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('d').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').feature('mp_surf').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('mp_surf').set('sisDef', '1');
model.physics('chem1').feature('mp_surf').set('specLabel', 'mp(ads)');
model.physics('chem1').feature('mp_surf').set('speciesNameInput', 'mp(ads)');
model.physics('chem1').feature('mp_surf').set('specName', 'mp(ads)');
model.physics('chem1').feature('mp_surf').set('enableChemicalFormulaCheckbox', '0');
model.physics('chem1').feature('mp_surf').set('chemicalFormula', '');
model.physics('chem1').feature('mp_surf').set('sType', 'surface');
model.physics('chem1').feature('mp_surf').set('M', '0.0[kg/mol]');
model.physics('chem1').feature('mp_surf').set('z', '0');
model.physics('chem1').feature('mp_surf').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('mp_surf').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('mp_surf').set('mu', '0[C*m]');
model.physics('chem1').feature('mp_surf').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('mp_surf').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('mp_surf').set('ActivityCoefficient', '1');
model.physics('chem1').feature('mp_surf').set('cLock', '0');
model.physics('chem1').feature('mp_surf').set('Dependent', '0');
model.physics('chem1').feature('mp_surf').set('dependent', '2');
model.physics('chem1').feature('mp_surf').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('mp_surf').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('mp_surf').set('Tlo', '300[K]');
model.physics('chem1').feature('mp_surf').set('Tmid', '1000[K]');
model.physics('chem1').feature('mp_surf').set('Thi', '5000[K]');
model.physics('chem1').feature('mp_surf').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('mp_surf').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('mp_surf').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('mp_surf').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('mp_surf').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('mp_surf').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('mp_surf').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('mp_surf').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('mp_surf').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('mp_surf').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('mp_surf').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('mp_surf').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('mp_surf').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('mp_surf').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').feature('mpd_surf').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('mpd_surf').set('sisDef', '1');
model.physics('chem1').feature('mpd_surf').set('specLabel', 'mpd(ads)');
model.physics('chem1').feature('mpd_surf').set('speciesNameInput', 'mpd(ads)');
model.physics('chem1').feature('mpd_surf').set('specName', 'mpd(ads)');
model.physics('chem1').feature('mpd_surf').set('enableChemicalFormulaCheckbox', '0');
model.physics('chem1').feature('mpd_surf').set('chemicalFormula', '');
model.physics('chem1').feature('mpd_surf').set('sType', 'surface');
model.physics('chem1').feature('mpd_surf').set('M', '0.0[kg/mol]');
model.physics('chem1').feature('mpd_surf').set('z', '0');
model.physics('chem1').feature('mpd_surf').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('mpd_surf').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('mpd_surf').set('mu', '0[C*m]');
model.physics('chem1').feature('mpd_surf').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('mpd_surf').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('mpd_surf').set('ActivityCoefficient', '1');
model.physics('chem1').feature('mpd_surf').set('cLock', '0');
model.physics('chem1').feature('mpd_surf').set('Dependent', '0');
model.physics('chem1').feature('mpd_surf').set('dependent', '2');
model.physics('chem1').feature('mpd_surf').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('mpd_surf').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('mpd_surf').set('Tlo', '300[K]');
model.physics('chem1').feature('mpd_surf').set('Tmid', '1000[K]');
model.physics('chem1').feature('mpd_surf').set('Thi', '5000[K]');
model.physics('chem1').feature('mpd_surf').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('mpd_surf').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('mpd_surf').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('mpd_surf').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('mpd_surf').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('mpd_surf').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('mpd_surf').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('mpd_surf').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('mpd_surf').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('mpd_surf').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('mpd_surf').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('mpd_surf').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('mpd_surf').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('mpd_surf').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').feature('p').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('p').set('sisDef', '1');
model.physics('chem1').feature('p').set('specLabel', 'p');
model.physics('chem1').feature('p').set('speciesNameInput', 'p');
model.physics('chem1').feature('p').set('specName', 'p');
model.physics('chem1').feature('p').set('enableChemicalFormulaCheckbox', '0');
model.physics('chem1').feature('p').set('chemicalFormula', '');
model.physics('chem1').feature('p').set('sType', 'volumetric');
model.physics('chem1').feature('p').set('M', '0.0[kg/mol]');
model.physics('chem1').feature('p').set('z', '0');
model.physics('chem1').feature('p').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('p').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('p').set('mu', '0[C*m]');
model.physics('chem1').feature('p').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('p').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('p').set('ActivityCoefficient', '1');
model.physics('chem1').feature('p').set('cLock', '0');
model.physics('chem1').feature('p').set('Dependent', '0');
model.physics('chem1').feature('p').set('dependent', '0');
model.physics('chem1').feature('p').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('p').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('p').set('Tlo', '300[K]');
model.physics('chem1').feature('p').set('Tmid', '1000[K]');
model.physics('chem1').feature('p').set('Thi', '5000[K]');
model.physics('chem1').feature('p').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('p').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('p').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('p').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('p').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('p').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('p').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('p').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('p').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('p').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('p').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('p').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('p').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('p').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').feature('pd').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('pd').set('sisDef', '1');
model.physics('chem1').feature('pd').set('specLabel', 'pd');
model.physics('chem1').feature('pd').set('speciesNameInput', 'pd');
model.physics('chem1').feature('pd').set('specName', 'pd');
model.physics('chem1').feature('pd').set('enableChemicalFormulaCheckbox', '0');
model.physics('chem1').feature('pd').set('chemicalFormula', '');
model.physics('chem1').feature('pd').set('sType', 'volumetric');
model.physics('chem1').feature('pd').set('M', '0.0[kg/mol]');
model.physics('chem1').feature('pd').set('z', '0');
model.physics('chem1').feature('pd').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('pd').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('pd').set('mu', '0[C*m]');
model.physics('chem1').feature('pd').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('pd').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('pd').set('ActivityCoefficient', '1');
model.physics('chem1').feature('pd').set('cLock', '0');
model.physics('chem1').feature('pd').set('Dependent', '0');
model.physics('chem1').feature('pd').set('dependent', '0');
model.physics('chem1').feature('pd').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('pd').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('pd').set('Tlo', '300[K]');
model.physics('chem1').feature('pd').set('Tmid', '1000[K]');
model.physics('chem1').feature('pd').set('Thi', '5000[K]');
model.physics('chem1').feature('pd').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('pd').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('pd').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('pd').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('pd').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('pd').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('pd').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('pd').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('pd').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('pd').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('pd').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('pd').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('pd').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('pd').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').feature('e').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('e').set('sisDef', '1');
model.physics('chem1').feature('e').set('specLabel', 'e');
model.physics('chem1').feature('e').set('speciesNameInput', 'e');
model.physics('chem1').feature('e').set('specName', 'e');
model.physics('chem1').feature('e').set('enableChemicalFormulaCheckbox', '0');
model.physics('chem1').feature('e').set('chemicalFormula', '');
model.physics('chem1').feature('e').set('sType', 'volumetric');
model.physics('chem1').feature('e').set('M', '0.0[kg/mol]');
model.physics('chem1').feature('e').set('z', '0');
model.physics('chem1').feature('e').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('e').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('e').set('mu', '0[C*m]');
model.physics('chem1').feature('e').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('e').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('e').set('ActivityCoefficient', '1');
model.physics('chem1').feature('e').set('cLock', '0');
model.physics('chem1').feature('e').set('Dependent', '0');
model.physics('chem1').feature('e').set('dependent', '0');
model.physics('chem1').feature('e').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('e').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('e').set('Tlo', '300[K]');
model.physics('chem1').feature('e').set('Tmid', '1000[K]');
model.physics('chem1').feature('e').set('Thi', '5000[K]');
model.physics('chem1').feature('e').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('e').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('e').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('e').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('e').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('e').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('e').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('e').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('e').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('e').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('e').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('e').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('e').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('e').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').create('h2o', 'SpeciesChem');
model.physics('chem1').feature('h2o').set('SpeciesSource', 'FreeSpecies');
model.physics('chem1').feature('h2o').set('sisDef', '1');
model.physics('chem1').feature('h2o').set('specLabel', 'h2o');
model.physics('chem1').feature('h2o').set('speciesNameInput', 'h2o');
model.physics('chem1').feature('h2o').set('specName', 'h2o');
model.physics('chem1').feature('h2o').set('enableChemicalFormulaCheckbox', '0');
model.physics('chem1').feature('h2o').set('chemicalFormula', '');
model.physics('chem1').feature('h2o').label('Species: h2o');
model.physics('chem1').feature('h2o').active(true);
model.physics('chem1').feature('h2o').set('sType', 'solvent');
model.physics('chem1').feature('h2o').set('M', '0.0[kg/mol]');
model.physics('chem1').feature('h2o').set('z', '0');
model.physics('chem1').feature('h2o').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('h2o').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('h2o').set('mu', '0[C*m]');
model.physics('chem1').feature('h2o').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('h2o').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('h2o').set('ActivityCoefficient', '1');
model.physics('chem1').feature('h2o').set('cLock', '1');
model.physics('chem1').feature('h2o').set('Dependent', '0');
model.physics('chem1').feature('h2o').set('dependent', '0');
model.physics('chem1').feature('h2o').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('h2o').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('h2o').set('Tlo', '300[K]');
model.physics('chem1').feature('h2o').set('Tmid', '1000[K]');
model.physics('chem1').feature('h2o').set('Thi', '5000[K]');
model.physics('chem1').feature('h2o').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('h2o').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('h2o').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('h2o').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('h2o').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('h2o').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('h2o').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('h2o').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('h2o').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('h2o').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('h2o').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('h2o').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('h2o').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('h2o').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').prop('simpropChem').set('rSequenceNo', '4');
model.physics('chem1').prop('simpropChem').set('sSequenceNo', '7');
model.physics('chem1').prop('mixture').set('hasPropertyPackage', '0');
model.physics('chem1').prop('mixture').set('PropertyPackage', '');
model.physics('chem1').prop('mixture').set('Thermodynamics', '0');
model.physics('tds').field('concentration').component({'cd' 'ce' 'cp' 'cpd'});
model.physics('tds').feature('cat1').set('enableAdsorption', true);
model.physics('tds').feature('cat1').setIndex('species', true, 0);
model.physics('tds').feature('cat1').setIndex('species', true, 1);
model.physics('tds').feature('cat1').setIndex('species', true, 2);
model.physics('tds').feature('cat1').setIndex('species', true, 3);
model.physics('tds').feature('cat1').feature.create('srcc1', 'SurfaceReactionCatalyst');
model.physics('tds').feature('cat1').feature('fluid1').set('DiffusionCoefficientSource', 'chem');
model.physics('tds').feature('cat1').set('SurfaceSpecies', {'mp' 'mpd'});
model.physics('tds').feature('cat1').set('M', {'comp2.chem.M_mp_surf' 'comp2.chem.M_mpd_surf'});
model.physics('tds').feature('cat1').set('initialValues', {'1e-5[mol/m^2]' '1e-5[mol/m^2]'});
model.physics('tds').feature('cat1').set('Sarea', 'Ssa');
model.physics('tds').feature('cat1').feature('srcc1').set('Rsurf_cd_src', 'root.comp2.chem.Rsurf_d');
model.physics('tds').feature('cat1').feature('srcc1').set('Rsurf_ce_src', 'root.comp2.chem.Rsurf_e');
model.physics('tds').feature('cat1').feature('srcc1').set('Rsurf_cp_src', 'root.comp2.chem.Rsurf_p');
model.physics('tds').feature('cat1').feature('srcc1').set('Rsurf_cpd_src', 'root.comp2.chem.Rsurf_pd');
model.physics('tds').feature('cat1').feature('srcc1').setIndex('Rssurf_src', 'comp2.chem.R_mp_surf', 0, 0);
model.physics('tds').feature('cat1').feature('srcc1').setIndex('Rssurf_src', 'comp2.chem.R_mpd_surf', 1, 0);
model.physics('tds').feature('init1').set('initc', {'0' 'ce_init' '0' '0'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('MassTransfer', 'tds');
model.physics('chem1').prop('ChemistryModelInputParameter').set('ConcentrationInput', {'cd' 'ce' 'UserDefined' 'cp' 'cpd'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('ConcentrationValue', {'Solved for' 'Solved for' 'c_solv' 'Solved for' 'Solved for'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('uselog', {'cd' 'ce' 'c_solv' 'cp' 'cpd'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('SolidConcentration', {});
model.physics('chem1').prop('ChemistryModelInputParameter').set('csurf', {'tds.csurf_mp' 'tds.csurf_mpd'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('AqueousSpeciesConcentration', {});
model.physics('tds').feature('sp1').set('z', {'0' '0' '0' '0'});
model.physics('tds').feature('cat1').feature('fluid1').set('DiffusionCoefficientSource', 'chem');
model.physics('tds').feature('cat1').feature('fluid1').set('Dchem_cd_src', 'userdef');
model.physics('tds').feature('cat1').feature('fluid1').set('Dchem_ce_src', 'userdef');
model.physics('tds').feature('cat1').feature('fluid1').set('Dchem_cp_src', 'userdef');
model.physics('tds').feature('cat1').feature('fluid1').set('Dchem_cpd_src', 'userdef');
model.physics('re').feature('sync1').set('geomToUse', 'geom1');
model.physics('re').feature('sync1').set('massbalance', 'tds');
model.physics('re').feature('sync1').set('genom', {'geom1'});
model.physics('re').feature('sync1').set('studyname', {'std2'});
model.physics('chem1').prop('StudyStep').set('StudyStep', 'std2/time');
model.physics('chem1').feature('dcont1').set('StudyStep', 'std2/time');
model.physics('chem1').feature('rch1').set('StudyStep', 'std2/time');
model.physics('chem1').feature('d').set('StudyStep', 'std2/time');
model.physics('chem1').feature('mp_surf').set('StudyStep', 'std2/time');
model.physics('chem1').feature('mpd_surf').set('StudyStep', 'std2/time');
model.physics('chem1').feature('rch2').set('StudyStep', 'std2/time');
model.physics('chem1').feature('p').set('StudyStep', 'std2/time');
model.physics('chem1').feature('pd').set('StudyStep', 'std2/time');
model.physics('chem1').feature('rch3').set('StudyStep', 'std2/time');
model.physics('chem1').feature('e').set('StudyStep', 'std2/time');
model.physics('chem1').feature('rch4').set('StudyStep', 'std2/time');
model.physics('chem1').feature('h2o').set('StudyStep', 'std2/time');
model.physics('tds').prop('StudyStep').set('StudyStep', 'std2/time');
model.physics('tds').feature('sp1').set('StudyStep', 'std2/time');
model.physics('tds').feature('cat1').set('StudyStep', 'std2/time');
model.physics('tds').feature('axi1').set('StudyStep', 'std2/time');
model.physics('tds').feature('nflx1').set('StudyStep', 'std2/time');
model.physics('tds').feature('init1').set('StudyStep', 'std2/time');
model.physics('tds').feature('dcont1').set('StudyStep', 'std2/time');

model.study('std1').feature('time').setSolveFor('/physics/chem1', false);
model.study('std1').feature('time').setSolveFor('/physics/tds', false);
model.study('std2').feature('time').setSolveFor('/physics/re', false);

model.geom('geom1').lengthUnit('mm');
model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', [6 9]);
model.geom('geom1').feature.duplicate('r2', 'r1');
model.geom('geom1').feature('r2').set('size', [1 9]);
model.geom('geom1').feature.duplicate('r3', 'r2');
model.geom('geom1').feature('r3').set('size', [2 6]);
model.geom('geom1').feature('r3').set('pos', [1 0]);
model.geom('geom1').runPre('fin');
model.geom('geom1').run;

model.physics('chem1').feature('d').set('M', 'Mnd');
model.physics('chem1').feature('mp_surf').set('M', 'Mnp');
model.physics('chem1').feature('mpd_surf').set('M', 'Mnpd');
model.physics('chem1').feature('p').set('M', 'Mnp');
model.physics('chem1').feature('pd').set('M', 'Mnpd');
model.physics('chem1').feature('e').set('M', 'Mne');
model.physics('chem1').feature('h2o').set('M', 'Mnh2o');
model.physics('tds').prop('TransportMechanism').set('Convection', false);
model.physics('tds').feature('cat1').set('enableAdsorption', false);
model.physics('tds').feature('cat1').setIndex('initialValues', 'cmp_init', 0, 0);
model.physics('tds').feature('cat1').setIndex('initialValues', 'cmpd_init', 1, 0);
model.physics('tds').feature('cat1').label('Porous Catalyst - Biomaterial');
model.physics('tds').feature('cat1').feature('fluid1').set('Dchem_cd', {'Dd' '0' '0' '0' 'Dd' '0' '0' '0' 'Dd'});
model.physics('tds').feature('cat1').feature('fluid1').set('Dchem_ce', {'De' '0' '0' '0' 'De' '0' '0' '0' 'De'});
model.physics('tds').feature('cat1').feature('fluid1').set('Dchem_cp', {'Dp' '0' '0' '0' 'Dp' '0' '0' '0' 'Dp'});
model.physics('tds').feature('cat1').feature('fluid1').set('Dchem_cpd', {'Dpd' '0' '0' '0' 'Dpd' '0' '0' '0' 'Dpd'});
model.physics('tds').feature('cat1').feature('fluid1').set('FluidDiffusivityModelType', 'UserDefined');
model.physics('tds').feature('cat1').feature('pm1').set('poro_mat', 'userdef');
model.physics('tds').feature('cat1').feature('pm1').set('poro', 'epsBio');
model.physics('tds').create('cdm1', 'ConvectionDiffusionMigration', 2);
model.physics('tds').feature('cdm1').selection.set([3]);
model.physics('tds').feature('cdm1').label('Transport Properties - Surroundings');
model.physics('tds').feature('cdm1').set('D_cd', {'Dd_s' '0' '0' '0' 'Dd_s' '0' '0' '0' 'Dd_s'});
model.physics('tds').feature('cdm1').set('D_ce', {'De_s' '0' '0' '0' 'De_s' '0' '0' '0' 'De_s'});
model.physics('tds').feature('cdm1').set('D_cp', {'Dp_s' '0' '0' '0' 'Dp_s' '0' '0' '0' 'Dp_s'});
model.physics('tds').feature('cdm1').set('D_cpd', {'Dpd_s' '0' '0' '0' 'Dpd_s' '0' '0' '0' 'Dpd_s'});
model.physics('tds').feature.duplicate('cdm2', 'cdm1');
model.physics('tds').feature('cdm2').selection.set([1]);
model.physics('tds').feature('cdm2').label('Transport Properties - Nerve');
model.physics('tds').feature('cdm2').set('D_cd', {'Dd_n' '0' '0' '0' 'Dd_n' '0' '0' '0' 'Dd_n'});
model.physics('tds').feature('cdm2').set('D_ce', {'De_n' '0' '0' '0' 'De_n' '0' '0' '0' 'De_n'});
model.physics('tds').feature('cdm2').set('D_cp', {'Dp_n' '0' '0' '0' 'Dp_n' '0' '0' '0' 'Dp_n'});
model.physics('tds').feature('cdm2').set('D_cpd', {'Dpd_n' '0' '0' '0' 'Dpd_n' '0' '0' '0' 'Dpd_n'});
model.physics('tds').create('reac1', 'Reactions', 2);
model.physics('tds').feature('reac1').setIndex('R_cd_src', 'root.comp2.chem.R_d', 0);
model.physics('tds').feature('reac1').setIndex('R_ce_src', 'root.comp2.chem.R_e', 0);
model.physics('tds').feature('reac1').setIndex('R_cp_src', 'root.comp2.chem.R_p', 0);
model.physics('tds').feature('reac1').setIndex('R_cpd_src', 'root.comp2.chem.R_pd', 0);
model.physics('tds').feature('reac1').selection.all;
model.physics('tds').create('init2', 'init', 2);
model.physics('tds').feature('init2').selection.set([2 3]);

model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('size').set('table', 'cfd');
model.mesh('mesh1').feature('size').set('hauto', 4);
model.mesh('mesh1').run('size');
model.mesh('mesh1').create('size1', 'Size');
model.mesh('mesh1').feature('size1').selection.geom('geom1', 1);
model.mesh('mesh1').feature('size1').selection.set([4 7 9]);
model.mesh('mesh1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('size1').set('hmax', 0.1);
model.mesh('mesh1').run('ftri1');
model.mesh('mesh1').create('bl1', 'BndLayer');
model.mesh('mesh1').feature('bl1').create('blp', 'BndLayerProp');
model.mesh('mesh1').feature('bl1').selection.geom(2);
model.mesh('mesh1').feature('bl1').selection.set([]);
model.mesh('mesh1').feature('bl1').selection.allGeom;
model.mesh('mesh1').feature('bl1').feature('blp').selection.set([4 6 7 9]);
model.mesh('mesh1').run;

model.study('std2').feature('time').set('tunit', 'h');
model.study('std2').feature('time').set('tlist', '0 1/60 2/60 5/60 10/60 20/60 range(0.5,0.25,16)');

model.sol.create('sol2');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1 2 3]);

model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'time');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'time');
model.sol('sol2').create('t1', 'Time');
model.sol('sol2').feature('t1').set('tlist', '0 1/60 2/60 5/60 10/60 20/60 range(0.5,0.25,16)');
model.sol('sol2').feature('t1').set('plot', 'off');
model.sol('sol2').feature('t1').set('plotgroup', 'pg1');
model.sol('sol2').feature('t1').set('plotfreq', 'tout');
model.sol('sol2').feature('t1').set('probesel', 'all');
model.sol('sol2').feature('t1').set('probes', {});
model.sol('sol2').feature('t1').set('probefreq', 'tsteps');
model.sol('sol2').feature('t1').set('rtol', 0.005);
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol2').feature('t1').set('reacf', true);
model.sol('sol2').feature('t1').set('storeudot', true);
model.sol('sol2').feature('t1').set('endtimeinterpolation', true);
model.sol('sol2').feature('t1').set('maxorder', 2);
model.sol('sol2').feature('t1').set('stabcntrl', true);
model.sol('sol2').feature('t1').set('control', 'time');
model.sol('sol2').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol2').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol2').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol2').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol2').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol2').feature('t1').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t1').feature('d1').label('Direct, concentrations (tds)');
model.sol('sol2').feature('t1').create('i1', 'Iterative');
model.sol('sol2').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol2').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol2').feature('t1').feature('i1').set('maxlinit', 50);
model.sol('sol2').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol2').feature('t1').feature('i1').label('AMG, concentrations (tds)');
model.sol('sol2').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol2').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol2').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol2').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol2').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol2').feature('t1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').set('data', 'dset2');
model.result('pg2').setIndex('looplevel', 69, 0);
model.result('pg2').label('Concentration, d (tds)');
model.result('pg2').set('titletype', 'custom');
model.result('pg2').set('prefixintitle', 'Species d:');
model.result('pg2').set('expressionintitle', false);
model.result('pg2').set('typeintitle', true);
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'cd'});
model.result('pg2').create('str1', 'Streamline');
model.result('pg2').feature('str1').set('expr', {'tds.tflux_cdr' 'tds.tflux_cdz'});
model.result('pg2').feature('str1').set('posmethod', 'uniform');
model.result('pg2').feature('str1').set('recover', 'pprint');
model.result('pg2').feature('str1').set('pointtype', 'arrow');
model.result('pg2').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg2').feature('str1').set('color', 'gray');
model.result.dataset.create('rev1', 'Revolve2D');
model.result.dataset('rev1').set('data', 'dset2');
model.result.dataset('rev1').set('revangle', 225);
model.result.dataset('rev1').set('startangle', -90);
model.result.dataset('rev1').set('hasspacevars', false);
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').set('data', 'rev1');
model.result('pg3').setIndex('looplevel', 69, 0);
model.result('pg3').label('Concentration, d, 3D (tds)');
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', {'cd'});
model.result('pg3').set('titletype', 'custom');
model.result('pg3').set('typeintitle', false);
model.result('pg3').set('prefixintitle', 'Species d:');
model.result('pg3').set('expressionintitle', false);
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').set('data', 'dset2');
model.result('pg4').setIndex('looplevel', 69, 0);
model.result('pg4').label('Concentration, e (tds)');
model.result('pg4').set('titletype', 'custom');
model.result('pg4').set('prefixintitle', 'Species e:');
model.result('pg4').set('expressionintitle', false);
model.result('pg4').set('typeintitle', true);
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', {'ce'});
model.result('pg4').create('str1', 'Streamline');
model.result('pg4').feature('str1').set('expr', {'tds.tflux_cer' 'tds.tflux_cez'});
model.result('pg4').feature('str1').set('posmethod', 'uniform');
model.result('pg4').feature('str1').set('recover', 'pprint');
model.result('pg4').feature('str1').set('pointtype', 'arrow');
model.result('pg4').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg4').feature('str1').set('color', 'gray');
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').set('data', 'rev1');
model.result('pg5').setIndex('looplevel', 69, 0);
model.result('pg5').label('Concentration, e, 3D (tds)');
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', {'ce'});
model.result('pg5').set('titletype', 'custom');
model.result('pg5').set('typeintitle', false);
model.result('pg5').set('prefixintitle', 'Species e:');
model.result('pg5').set('expressionintitle', false);
model.result.create('pg6', 'PlotGroup2D');
model.result('pg6').set('data', 'dset2');
model.result('pg6').setIndex('looplevel', 69, 0);
model.result('pg6').label('Concentration, p (tds)');
model.result('pg6').set('titletype', 'custom');
model.result('pg6').set('prefixintitle', 'Species p:');
model.result('pg6').set('expressionintitle', false);
model.result('pg6').set('typeintitle', true);
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', {'cp'});
model.result('pg6').create('str1', 'Streamline');
model.result('pg6').feature('str1').set('expr', {'tds.tflux_cpr' 'tds.tflux_cpz'});
model.result('pg6').feature('str1').set('posmethod', 'uniform');
model.result('pg6').feature('str1').set('recover', 'pprint');
model.result('pg6').feature('str1').set('pointtype', 'arrow');
model.result('pg6').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg6').feature('str1').set('color', 'gray');
model.result.create('pg7', 'PlotGroup3D');
model.result('pg7').set('data', 'rev1');
model.result('pg7').setIndex('looplevel', 69, 0);
model.result('pg7').label('Concentration, p, 3D (tds)');
model.result('pg7').create('surf1', 'Surface');
model.result('pg7').feature('surf1').set('expr', {'cp'});
model.result('pg7').set('titletype', 'custom');
model.result('pg7').set('typeintitle', false);
model.result('pg7').set('prefixintitle', 'Species p:');
model.result('pg7').set('expressionintitle', false);
model.result.create('pg8', 'PlotGroup2D');
model.result('pg8').set('data', 'dset2');
model.result('pg8').setIndex('looplevel', 69, 0);
model.result('pg8').label('Concentration, pd (tds)');
model.result('pg8').set('titletype', 'custom');
model.result('pg8').set('prefixintitle', 'Species pd:');
model.result('pg8').set('expressionintitle', false);
model.result('pg8').set('typeintitle', true);
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').feature('surf1').set('expr', {'cpd'});
model.result('pg8').create('str1', 'Streamline');
model.result('pg8').feature('str1').set('expr', {'tds.tflux_cpdr' 'tds.tflux_cpdz'});
model.result('pg8').feature('str1').set('posmethod', 'uniform');
model.result('pg8').feature('str1').set('recover', 'pprint');
model.result('pg8').feature('str1').set('pointtype', 'arrow');
model.result('pg8').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg8').feature('str1').set('color', 'gray');
model.result.create('pg9', 'PlotGroup3D');
model.result('pg9').set('data', 'rev1');
model.result('pg9').setIndex('looplevel', 69, 0);
model.result('pg9').label('Concentration, pd, 3D (tds)');
model.result('pg9').create('surf1', 'Surface');
model.result('pg9').feature('surf1').set('expr', {'cpd'});
model.result('pg9').set('titletype', 'custom');
model.result('pg9').set('typeintitle', false);
model.result('pg9').set('prefixintitle', 'Species pd:');
model.result('pg9').set('expressionintitle', false);
model.result('pg2').run;

model.variable.create('var1');
model.variable('var1').model('comp2');
model.variable('var1').selection.geom('geom1', 2);
model.variable('var1').selection.set([2]);
model.variable('var1').set('cmp', 'tds.csurf_mp*Ssa');
model.variable('var1').descr('cmp', 'Matrix-bound peptide, volumetric concentration');
model.variable('var1').set('cmpd', 'tds.csurf_mpd*Ssa');
model.variable('var1').descr('cmpd', 'Matrix-bound peptide-drug, volumetric concentration');
model.variable('var1').label('Biomaterial Concentrations');

model.sol('sol2').updateSolution;

model.result('pg2').run;
model.result('pg2').label('Concentration, Drug');
model.result('pg4').run;
model.result('pg4').label('Concentration, Enzyme');
model.result('pg6').run;
model.result('pg6').label('Concentration, Peptide');
model.result('pg8').run;
model.result('pg8').label('Concentration, Peptide-Drug');
model.result('pg5').run;
model.result.remove('pg5');
model.result.remove('pg7');
model.result.remove('pg9');
model.result('pg6').run;
model.result('pg3').run;
model.result('pg3').label('Bulk Concentrations, 3D');
model.result('pg3').set('showlegendsunit', true);
model.result('pg3').set('plotarrayenable', true);
model.result('pg3').set('arrayshape', 'square');
model.result('pg3').set('arrayplane', 'yz');
model.result('pg3').set('order', 'columnmajor');
model.result('pg3').set('relrowpadding', -2);
model.result('pg3').set('relcolumnpadding', 0.5);
model.result('pg3').feature('surf1').set('arraydim', '2');
model.result('pg3').run;
model.result('pg3').feature.duplicate('surf2', 'surf1');
model.result('pg3').feature('surf2').set('arraydim', '2');
model.result('pg3').run;
model.result('pg3').feature('surf2').set('expr', 'ce');
model.result('pg3').feature('surf1').set('arraydim', '2');
model.result('pg3').run;
model.result('pg3').feature.duplicate('surf3', 'surf1');
model.result('pg3').feature.duplicate('surf4', 'surf2');
model.result('pg3').feature('surf3').set('arraydim', '2');
model.result('pg3').run;
model.result('pg3').feature('surf3').set('expr', 'cp');
model.result('pg3').feature('surf4').set('arraydim', '2');
model.result('pg3').run;
model.result('pg3').feature('surf4').set('expr', 'cpd');
model.result('pg3').feature('surf2').set('arraydim', '2');
model.result('pg3').run;
model.result('pg3').feature('surf2').set('colortable', 'Viridis');
model.result('pg3').run;
model.result('pg3').set('legendpos', 'rightdouble');
model.result.dataset('rev1').set('startangle', 45);

model.view('view2').camera.set('zoomanglefull', 12.5558366775512);
model.view('view2').camera.setIndex('position', 206.8589477539062, 0);
model.view('view2').camera.setIndex('position', 2.06160116195678, 1);
model.view('view2').camera.setIndex('position', 53.776111602783, 2);
model.view('view2').camera.setIndex('target', -0.874862670898437, 0);
model.view('view2').camera.setIndex('target', 8.99782371520996, 1);
model.view('view2').camera.setIndex('target', -1.998249053955078, 2);
model.view('view2').camera.setIndex('up', '-0.259314417839050', 0);
model.view('view2').camera.setIndex('up', -2.99927574815228E-4, 1);
model.view('view2').camera.setIndex('up', 0.965785443782806, 2);
model.view('view2').camera.setIndex('rotationpoint', -0.874829292297363, 0);
model.view('view2').camera.setIndex('rotationpoint', 8.9975929260253, 1);
model.view('view2').camera.setIndex('rotationpoint', -1.998074531555175, 2);
model.view('view2').camera.setIndex('viewoffset', -0.0660882666707038, 0);
model.view('view2').camera.setIndex('viewoffset', '0.0321938358247280', 1);

model.result('pg3').run;
model.result('pg3').setIndex('looplevel', 11, 0);
model.result('pg3').run;
model.result('pg3').set('titletype', 'none');
model.result('pg3').create('ann1', 'Annotation');
model.result('pg3').feature('ann1').set('arraydim', '2');
model.result('pg3').feature('ann1').set('text', 'Drug');
model.result('pg3').feature('ann1').set('poszexpr', 11);
model.result('pg3').feature('ann1').set('anchorpoint', 'lowermiddle');
model.result('pg3').feature('ann1').set('showpoint', false);
model.result('pg3').feature('ann1').set('belongstoplotarray', false);
model.result('pg3').run;
model.result('pg3').feature.duplicate('ann2', 'ann1');
model.result('pg3').feature('ann2').set('arraydim', '2');
model.result('pg3').run;
model.result('pg3').feature('ann2').set('text', 'Enzyme');
model.result('pg3').feature('ann2').set('poszexpr', -4);
model.result('pg3').feature('ann1').set('arraydim', '2');
model.result('pg3').run;
model.result('pg3').feature.duplicate('ann3', 'ann1');
model.result('pg3').feature.duplicate('ann4', 'ann2');
model.result('pg3').feature('ann3').set('arraydim', '2');
model.result('pg3').run;
model.result('pg3').feature('ann3').set('text', 'Peptide');
model.result('pg3').feature('ann3').set('posyexpr', 18);

model.view('view2').set('showaxisorientation', false);

model.result('pg3').feature('ann4').set('arraydim', '2');
model.result('pg3').run;
model.result('pg3').feature('ann4').set('text', 'Peptide-Drug');
model.result('pg3').feature('ann4').set('posyexpr', 18);
model.result('pg3').run;

model.view('view2').set('showgrid', false);
model.view('view2').set('showaxisorientation', true);

model.result('pg3').run;
model.result.move('pg3', 3);
model.result.move('pg3', 4);
model.result.move('pg3', 5);
model.result.duplicate('pg9', 'pg3');
model.result('pg9').run;
model.result('pg9').label('Matrix Concentrations, 3D');
model.result('pg9').set('arrayshape', 'linear');
model.result('pg9').set('arrayaxis', 'z');
model.result('pg9').set('relpadding', -2.5);
model.result('pg9').feature('surf3').set('arraydim', '1');
model.result('pg9').run;
model.result('pg9').feature.remove('surf3');
model.result('pg9').feature.remove('surf4');
model.result('pg9').feature.remove('ann3');
model.result('pg9').feature.remove('ann4');
model.result('pg9').feature('ann1').set('arraydim', '1');
model.result('pg9').run;
model.result('pg9').feature('surf1').set('arraydim', '1');
model.result('pg9').run;
model.result('pg9').feature('surf1').set('expr', 'cmp');
model.result('pg9').feature('surf1').set('colortable', 'Wave');
model.result('pg9').feature('surf2').set('arraydim', '1');
model.result('pg9').run;
model.result('pg9').feature('surf2').set('expr', 'cmpd');
model.result('pg9').feature('surf2').set('colortable', 'Wave');
model.result('pg9').feature('ann1').set('arraydim', '1');
model.result('pg9').run;
model.result('pg9').feature('ann1').set('text', 'Matrix-Bound Peptide');
model.result('pg9').feature('ann2').set('arraydim', '1');
model.result('pg9').run;
model.result('pg9').feature('ann2').set('text', 'Matrix-Bound Peptide-Drug');
model.result('pg9').run;
model.result('pg9').feature('ann2').set('poszexpr', -3);
model.result('pg9').run;
model.result.dataset.create('cln1', 'CutLine2D');
model.result.dataset('cln1').setIndex('genpoints', 3, 0, 1);
model.result.dataset('cln1').setIndex('genpoints', 6, 1, 0);
model.result.dataset('cln1').setIndex('genpoints', 3, 1, 1);
model.result.dataset.duplicate('cln2', 'cln1');
model.result.dataset('cln2').setIndex('genpoints', 1, 0, 0);
model.result.dataset('cln2').setIndex('genpoints', 3, 1, 0);
model.result.create('pg10', 'PlotGroup1D');
model.result('pg10').run;
model.result('pg10').set('data', 'cln1');
model.result('pg10').create('lngr1', 'LineGraph');
model.result('pg10').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg10').feature('lngr1').set('linewidth', 'preference');
model.result('pg10').feature('lngr1').set('expr', 'cpd+cd');
model.result('pg10').feature('lngr1').set('linewidth', 2);
model.result('pg10').feature('lngr1').set('linemarker', 'cycle');
model.result('pg10').feature('lngr1').set('markerpos', 'interp');
model.result('pg10').feature('lngr1').set('markers', 6);
model.result('pg10').run;
model.result('pg10').label('Total Drug Concentration');
model.result('pg10').setIndex('looplevelinput', 'interp', 0);
model.result('pg10').setIndex('interp', '0 0.1 0.5 range(1,1,8)', 0);
model.result('pg10').set('titletype', 'manual');
model.result('pg10').set('title', 'c<sub>drug</sub> + c<sub>peptide-drug</sub>');
model.result('pg10').set('ylabelactive', true);
model.result('pg10').set('ylabel', 'Concentration (mol/m<sup>3</sup>)');
model.result('pg10').run;
model.result('pg10').run;
model.result('pg10').feature('lngr1').set('legendmethod', 'evaluated');
model.result('pg10').feature('lngr1').set('legendpattern', 't = eval(t/3600) h');
model.result('pg10').run;
model.result('pg10').feature('lngr1').set('legend', true);
model.result('pg10').run;
model.result('pg10').set('titletype', 'manual');
model.result.duplicate('pg11', 'pg10');
model.result('pg11').run;
model.result('pg11').run;
model.result('pg11').feature('lngr1').set('expr', 'cmp+cmpd');
model.result('pg11').run;
model.result('pg11').label('Total Matrix Concentration');
model.result('pg11').set('title', 'c<sub>mp</sub> + c<sub>mpd</sub>');
model.result('pg11').run;
model.result('pg11').set('titletype', 'manual');
model.result.evaluationGroup.create('eg1', 'EvaluationGroup');
model.result.evaluationGroup('eg1').set('data', 'dset2');
model.result.evaluationGroup('eg1').create('int1', 'IntSurface');
model.result.evaluationGroup('eg1').feature('int1').set('intvolume', true);
model.result.evaluationGroup('eg1').feature('int1').selection.set([2]);
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', '(cd+cpd)*epsBio', 0);
model.result.evaluationGroup('eg1').feature('int1').setIndex('unit', 'mol', 0);
model.result.evaluationGroup('eg1').feature('int1').setIndex('descr', 'Free drug in the biomaterial', 0);
model.result.evaluationGroup('eg1').feature.duplicate('int2', 'int1');
model.result.evaluationGroup('eg1').feature('int2').setIndex('expr', 'cmpd', 0);
model.result.evaluationGroup('eg1').feature('int2').setIndex('unit', 'mol', 0);
model.result.evaluationGroup('eg1').feature('int2').setIndex('descr', 'Matrix-bound drug', 0);
model.result.evaluationGroup('eg1').create('int3', 'IntSurface');
model.result.evaluationGroup('eg1').feature('int3').set('intvolume', true);
model.result.evaluationGroup('eg1').feature('int3').selection.set([1]);
model.result.evaluationGroup('eg1').feature('int3').setIndex('expr', 'cd+cpd', 0);
model.result.evaluationGroup('eg1').feature('int3').setIndex('unit', 'mol', 0);
model.result.evaluationGroup('eg1').feature('int3').setIndex('descr', 'Drug in nerve', 0);
model.result.evaluationGroup('eg1').create('int4', 'IntSurface');
model.result.evaluationGroup('eg1').feature('int4').set('intvolume', true);
model.result.evaluationGroup('eg1').feature('int4').selection.set([3]);
model.result.evaluationGroup('eg1').feature('int4').setIndex('expr', 'cd+cpd', 0);
model.result.evaluationGroup('eg1').feature('int4').setIndex('unit', 'mol', 0);
model.result.evaluationGroup('eg1').feature('int4').setIndex('descr', 'Drug in surrounding', 0);
model.result.evaluationGroup('eg1').set('type', 'general');
model.result.evaluationGroup('eg1').set('generalheader', 'Total drug concentration');
model.result.evaluationGroup('eg1').run;
model.result.evaluationGroup('eg1').set('keepchildnodes', true);
model.result.evaluationGroup('eg1').run;
model.result.create('pg12', 'PlotGroup1D');
model.result('pg12').set('data', 'none');
model.result('pg12').create('tblp1', 'Table');
model.result('pg12').feature('tblp1').set('source', 'evaluationgroup');
model.result('pg12').feature('tblp1').set('evaluationgroup', 'eg1');
model.result('pg12').feature('tblp1').set('linewidth', 'preference');
model.result('pg12').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg12').run;
model.result('pg12').feature('tblp1').set('linewidth', 2);
model.result('pg12').feature('tblp1').set('legend', true);
model.result('pg12').run;
model.result('pg12').set('legendpos', 'middleright');
model.result('pg12').label('Drug Distribution');
model.result('pg12').run;
model.result.export.create('anim1', 'Animation');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('fontsize', '9');
model.result.export('anim1').set('colortheme', 'globaltheme');
model.result.export('anim1').set('customcolor', [1 1 1]);
model.result.export('anim1').set('background', 'color');
model.result.export('anim1').set('gltfincludelines', 'on');
model.result.export('anim1').set('title1d', 'on');
model.result.export('anim1').set('legend1d', 'on');
model.result.export('anim1').set('logo1d', 'on');
model.result.export('anim1').set('options1d', 'on');
model.result.export('anim1').set('title2d', 'on');
model.result.export('anim1').set('legend2d', 'on');
model.result.export('anim1').set('logo2d', 'on');
model.result.export('anim1').set('options2d', 'off');
model.result.export('anim1').set('title3d', 'on');
model.result.export('anim1').set('legend3d', 'on');
model.result.export('anim1').set('logo3d', 'on');
model.result.export('anim1').set('options3d', 'off');
model.result.export('anim1').set('axisorientation', 'on');
model.result.export('anim1').set('grid', 'on');
model.result.export('anim1').set('axes1d', 'on');
model.result.export('anim1').set('axes2d', 'on');
model.result.export('anim1').set('showgrid', 'on');
model.result.export('anim1').showFrame;
model.result.export('anim1').label('Animation - Bulk Concentrations');
model.result.export('anim1').set('plotgroup', 'pg3');
model.result.export('anim1').set('looplevelinput', 'interp');
model.result.export('anim1').set('interp', 'range(0,0.5,16)');
model.result.export('anim1').set('framesel', 'all');
model.result.export('anim1').run;
model.result.export.duplicate('anim2', 'anim1');
model.result.export('anim2').showFrame;
model.result.export('anim2').label('Animation - Matrix Concentrations');
model.result.export('anim2').set('plotgroup', 'pg9');
model.result.export('anim2').run;

model.title('Drug Release from a Biomaterial Matrix');

model.description('This example examines detailed drug-release kinetics with rate expressions handling drug dissociation/association reactions as well as matrix degradation by enzyme catalysis. The enzyme reaction is described by Michaelis-Menten kinetics. The model investigates design parameters governing the rate of drug release: drug-to-biomaterial affinity, biomaterial degradation, drug loading, and the influence of geometry and composition of the biomaterial matrix.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('drug_release.mph');

model.modelNode.label('Components');

out = model;
