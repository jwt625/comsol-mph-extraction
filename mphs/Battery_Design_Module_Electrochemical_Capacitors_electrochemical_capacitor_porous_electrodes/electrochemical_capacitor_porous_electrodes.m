function out = model
%
% electrochemical_capacitor_porous_electrodes.m
%
% Model exported on May 26 2025, 21:26 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Battery_Design_Module/Electrochemical_Capacitors');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 1);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('tcd', 'TertiaryCurrentDistributionNernstPlanck', 'geom1', {'c1' 'c2'});

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/tcd', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('L_sep', '25[um]', 'Length of separator');
model.param.set('L_elec', '50[um]', 'Length of electrode');
model.param.set('kappa_l', '0.0185[S/cm/M]*c_bulk', 'Electrolyte conductivity');
model.param.set('sigma_s', '0.0521[S/m]', 'Electrical conductivity');
model.param.set('eps_el', '0.67', 'Porosity of electrodes');
model.param.set('eps_sep', '0.6', 'Porosity of separator');
model.param.set('c_bulk', '0.93[M]', 'Bulk concentration');
model.param.set('T', '25[degC]', 'Reference temperature');
model.param.set('tau_sep', '1.29', 'Tortuosity of separator');
model.param.set('tau_electrode', '1', 'Tortuosity of electrode');
model.param.set('aC', '42[F/cm^3]', 'Area-specific capacitance');
model.param.set('D', 'kappa_l*(R_const*T)/F_const^2/c_bulk/2', 'Diffusion coefficient');
model.param.set('Av', '1[cm^2/cm^3]', 'Specific area');
model.param.set('Cap', '3500[F]', 'Nominal capacitance');
model.param.set('A_cell_nom', '2*Cap/(aC*L_elec)', 'Area from the nominal capacity');
model.param.set('A_cell', 'A_cell_nom', 'Area of the electrochemical cell');
model.param.set('tau_electrolyte', '2.3', 'Tortuosity of electrolyte');
model.param.set('Cdl', 'aC/Av', 'Area specific capacitance');
model.param.label('Parameters : Electrochemical Cell');
model.param.create('par2');
model.param('par2').label('Parameters : Load Profile');

% To import content from file, use:
% model.param('par2').loadFile('FILENAME');
model.param('par2').set('V_rest', '-2.5[V]', 'Rest potential for applied power');
model.param('par2').set('P_app', '0.85[kW]', 'Applied Power');
model.param('par2').set('i_app', '100[A]', 'Applied current');
model.param('par2').set('V_min', '1.4[V]', 'Minimum cell voltage');
model.param('par2').set('V_init', '0[V]', 'Initial potential');
model.param('par2').set('t_cv', '5[s]', 'Constant voltage operation time');
model.param('par2').set('t_rest', '180[s]', 'Rest time');

model.geom('geom1').create('i1', 'Interval');
model.geom('geom1').feature('i1').set('specify', 'len');
model.geom('geom1').feature('i1').setIndex('len', 'L_elec', 0);
model.geom('geom1').feature('i1').setIndex('len', 'L_sep', 1);
model.geom('geom1').feature('i1').setIndex('len', 'L_elec', 2);
model.geom('geom1').runPre('fin');
model.geom('geom1').run;

model.physics('tcd').feature('sp1').setIndex('z', 1, 0);
model.physics('tcd').feature('sp1').setIndex('z', -1, 1);
model.physics('tcd').feature('ice1').set('D_c1', {'D' '0' '0' '0' 'D' '0' '0' '0' 'D'});
model.physics('tcd').feature('ice1').set('D_c2', {'D' '0' '0' '0' 'D' '0' '0' '0' 'D'});
model.physics('tcd').feature('init1').setIndex('initc', 'c_bulk', 1);
model.physics('tcd').feature('init1').set('initphis', 'V_init');
model.physics('tcd').create('pce1', 'PorousElectrode', 1);
model.physics('tcd').feature('pce1').selection.set([1 3]);
model.physics('tcd').feature('pce1').set('D_c1', {'D' '0' '0' '0' 'D' '0' '0' '0' 'D'});
model.physics('tcd').feature('pce1').set('D_c2', {'D' '0' '0' '0' 'D' '0' '0' '0' 'D'});
model.physics('tcd').feature('pce1').set('sigma_mat', 'userdef');
model.physics('tcd').feature('pce1').set('sigma', {'sigma_s' '0' '0' '0' 'sigma_s' '0' '0' '0' 'sigma_s'});
model.physics('tcd').feature('pce1').set('epss', '1-eps_el');
model.physics('tcd').feature('pce1').set('epsl', 'eps_el');
model.physics('tcd').feature('pce1').set('DiffusionCorrModel', 'Tortuosity');
model.physics('tcd').feature('pce1').set('taul', 'tau_electrolyte');
model.physics('tcd').feature('pce1').set('ElectricCorrModel', 'Tortuosity');
model.physics('tcd').feature('pce1').set('taus', 'tau_electrode');
model.physics('tcd').feature('pce1').setIndex('Species', 's1', 0, 0);
model.physics('tcd').feature('pce1').setIndex('rhos', 8960, 0, 0);
model.physics('tcd').feature('pce1').setIndex('Ms', 0.06355, 0, 0);
model.physics('tcd').feature('pce1').setIndex('Species', 's1', 0, 0);
model.physics('tcd').feature('pce1').setIndex('rhos', 8960, 0, 0);
model.physics('tcd').feature('pce1').setIndex('Ms', 0.06355, 0, 0);
model.physics('tcd').feature('pce1').setIndex('Species', 'c1_q', 0, 0);
model.physics('tcd').feature('pce1').set('AddVolumeChangeToElectrodeVolumeFraction', false);
model.physics('tcd').feature('pce1').set('SubtractVolumeChangeFromElectrolyteVolumeFraction', false);
model.physics('tcd').feature('pce1').create('pdl1', 'PorousMatrixDoubleLayerCapacitance', 1);
model.physics('tcd').feature('pce1').feature('pdl1').set('Cdl', 'Cdl');
model.physics('tcd').feature('pce1').feature('pdl1').set('av_dl', 'Av');
model.physics('tcd').feature('pce1').feature('pdl1').setIndex('Vi0', 0.5, 1);
model.physics('tcd').feature('pce1').feature('per1').active(false);
model.physics('tcd').feature('pce1').create('nfr1', 'NonFaradaicReactions', 1);
model.physics('tcd').feature('pce1').feature('nfr1').setIndex('R', 'tcd.ivdl/F_const', 0, 0);
model.physics('tcd').create('sep1', 'Separator', 1);
model.physics('tcd').feature('sep1').selection.set([2]);
model.physics('tcd').feature('sep1').set('D_c1', {'D' '0' '0' '0' 'D' '0' '0' '0' 'D'});
model.physics('tcd').feature('sep1').set('D_c2', {'D' '0' '0' '0' 'D' '0' '0' '0' 'D'});
model.physics('tcd').feature('sep1').set('epsl', 'eps_sep');
model.physics('tcd').feature('sep1').set('DiffusionCorrModel', 'Tortuosity');
model.physics('tcd').feature('sep1').set('taul', 'tau_sep');
model.physics('tcd').create('egnd1', 'ElectricGround', 0);
model.physics('tcd').feature('egnd1').selection.set([1]);
model.physics('tcd').create('ecd1', 'ElectrodeNormalCurrentDensity', 0);
model.physics('tcd').feature('ecd1').selection.set([4]);
model.physics('tcd').feature('ecd1').set('nis', 'i_app_ch/A_cell');

model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl('intop1').set('axisym', true);
model.cpl('intop1').selection.geom('geom1', 0);
model.cpl('intop1').selection.set([4]);
model.cpl('intop1').set('opname', 'right_el');

model.physics.create('ev', 'Events', 'geom1');
model.physics('ev').model('comp1');

model.study('std1').feature('time').setSolveFor('/physics/ev', true);

model.physics('ev').create('ds1', 'DiscreteStates', -1);
model.physics('ev').feature('ds1').setIndex('dim', 'V_max', 0, 0);
model.physics('ev').feature('ds1').setIndex('dimInit', 0, 0, 0);
model.physics('ev').feature('ds1').setIndex('dimInit', 1.8, 0, 0);
model.physics('ev').feature('ds1').setIndex('dimDescr', 'Maximum voltage', 0, 0);
model.physics('ev').create('es1', 'EventSequence', -1);
model.physics('ev').feature('es1').label('Charge-discharge cycle');
model.physics('ev').feature('es1').set('loop', true);
model.physics('ev').feature('es1').feature('sm1').label('Constant current');
model.physics('ev').feature('es1').feature('sm1').set('stateName', 'CC');
model.physics('ev').feature('es1').feature('sm1').set('condition', 'comp1.right_el(phis)-V_max[V]');
model.physics('ev').feature('es1').create('sm2', 'SequenceMember', -1);
model.physics('ev').feature('es1').feature('sm2').label('Constant voltage');
model.physics('ev').feature('es1').feature('sm2').set('stateName', 'CV');
model.physics('ev').feature('es1').feature('sm2').set('endConditionOptions', 'duration');
model.physics('ev').feature('es1').feature('sm2').set('duration', 't_cv');
model.physics('ev').feature('es1').create('sm3', 'SequenceMember', -1);
model.physics('ev').feature('es1').feature('sm3').label('Rest');
model.physics('ev').feature('es1').feature('sm3').set('stateName', 'REST');
model.physics('ev').feature('es1').feature('sm3').set('endConditionOptions', 'duration');
model.physics('ev').feature('es1').feature('sm3').set('duration', 't_rest');
model.physics('ev').feature('es1').feature('sm3').setIndex('reInitName', 'V_max', 0, 0);
model.physics('ev').feature('es1').feature('sm3').setIndex('reInitValue', 0, 0, 0);
model.physics('ev').feature('es1').feature('sm3').setIndex('reInitValue', 'V_max+0.2', 0, 0);
model.physics('tcd').create('ge1', 'GlobalEquations', -1);
model.physics('tcd').feature('ge1').setIndex('name', 'i_app_ch', 0, 0);
model.physics('tcd').feature('ge1').setIndex('equation', '(CC==1)*(i_app_ch-i_app)/i_app+(CV==1)*(right_el(phis)-V_min)/V_min+(REST==1)*(i_app_ch)/i_app', 0, 0);
model.physics('tcd').feature('ge1').setIndex('initialValueU', 'i_app', 0, 0);
model.physics('tcd').feature('ge1').set('CustomDependentVariableUnit', '1');
model.physics('tcd').feature('ge1').set('DependentVariableQuantity', 'none');
model.physics('tcd').feature('ge1').setIndex('CustomDependentVariableUnit', 'A', 0, 0);

model.nodeGroup.create('grp1', 'Physics', 'tcd');
model.nodeGroup('grp1').placeAfter('egnd1');
model.nodeGroup('grp1').add('ecd1');
model.nodeGroup('grp1').add('ge1');
model.nodeGroup('grp1').label('Constant Current Charge/Constant Voltage Discharge');

model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('edg1').create('size1', 'Size');
model.mesh('mesh1').feature('edg1').feature('size1').selection.geom('geom1', 0);
model.mesh('mesh1').feature('edg1').feature('size1').selection.all;
model.mesh('mesh1').feature('edg1').feature('size1').set('hauto', 1);
model.mesh('mesh1').run;

model.study('std1').label('Study 1: CC Charge CV Discharge');
model.study('std1').setGenPlots(false);
model.study('std1').feature('time').set('tunit', 'min');
model.study('std1').feature('time').set('tlist', '0 40');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_phil').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_phis').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_phil').set('scaleval', '1');
model.sol('sol1').feature('v1').feature('comp1_phis').set('scaleval', '1');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', '0 40');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('eventout', true);
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').label('Direct (Merged)');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i1').label('Algebraic Multigrid (tcd)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('compactaggregation', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').create('i2', 'Iterative');
model.sol('sol1').feature('t1').feature('i2').set('maxlinit', 1000);
model.sol('sol1').feature('t1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i2').label('Geometric Multigrid (tcd)');
model.sol('sol1').feature('t1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('v1').feature('comp1_ODE1').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_ODE1').set('scaleval', 'i_app');
model.sol('sol1').feature('t1').set('tout', 'tsteps');
model.sol('sol1').feature('t1').set('tstepsbdf', 'strict');
model.sol('sol1').feature('t1').set('initialstepbdfactive', true);
model.sol('sol1').feature('t1').set('eventtol', 0.001);
model.sol('sol1').feature('t1').create('st1', 'StopCondition');
model.sol('sol1').feature('t1').feature('st1').set('eventstopName', {'comp1.ev.es1.sm1.event' 'comp1.ev.es1.sm2.event' 'comp1.ev.es1.sm3.event'});
model.sol('sol1').feature('t1').feature('st1').set('eventstopActive', {'off' 'off' 'off'});
model.sol('sol1').feature('t1').feature('st1').setIndex('stopcondarr', '', 0);
model.sol('sol1').feature('t1').feature('st1').setIndex('stopcondterminateon', 'true', 0);
model.sol('sol1').feature('t1').feature('st1').setIndex('stopcondActive', true, 0);
model.sol('sol1').feature('t1').feature('st1').setIndex('stopconddesc', 'Stop expression 1', 0);
model.sol('sol1').feature('t1').feature('st1').setIndex('stopcondarr', '', 0);
model.sol('sol1').feature('t1').feature('st1').setIndex('stopcondterminateon', 'true', 0);
model.sol('sol1').feature('t1').feature('st1').setIndex('stopcondActive', true, 0);
model.sol('sol1').feature('t1').feature('st1').setIndex('stopconddesc', 'Stop expression 1', 0);
model.sol('sol1').feature('t1').feature('st1').setIndex('stopcondarr', 'comp1.V_max>2.45', 0);
model.sol('sol1').feature('t1').feature('st1').set('storestopcondsol', 'stepbefore_stepafter');
model.sol('sol1').feature('t1').feature('st1').set('stopcondwarn', false);
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').run;
model.result('pg1').label('Voltage and Current Profile for CC Charge - CV Discharge');
model.result('pg1').create('glob1', 'Global');
model.result('pg1').feature('glob1').set('markerpos', 'datapoints');
model.result('pg1').feature('glob1').set('linewidth', 'preference');
model.result('pg1').feature('glob1').label('Current');
model.result('pg1').feature('glob1').setIndex('expr', 'comp1.i_app_ch', 0);
model.result('pg1').feature('glob1').setIndex('descr', 'Cell Current', 0);
model.result('pg1').feature('glob1').set('xdataparamunit', 's');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').create('ptgr1', 'PointGraph');
model.result('pg1').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg1').feature('ptgr1').set('linewidth', 'preference');
model.result('pg1').feature('ptgr1').label('Potential');
model.result('pg1').feature('ptgr1').selection.set([4]);
model.result('pg1').feature('ptgr1').set('expr', 'phis');
model.result('pg1').feature('ptgr1').set('descractive', true);
model.result('pg1').feature('ptgr1').set('descr', 'Cell Potential');
model.result('pg1').feature('ptgr1').set('xdataparamunit', 's');
model.result('pg1').feature('ptgr1').set('linestyle', 'dashdot');
model.result('pg1').feature('ptgr1').set('legend', true);
model.result('pg1').feature('ptgr1').set('autopoint', false);
model.result('pg1').feature('ptgr1').set('autodescr', true);
model.result('pg1').run;
model.result('pg1').set('xlabelactive', true);
model.result('pg1').set('xlabel', 't-t <sub>CCstart</sub>');
model.result('pg1').set('twoyaxes', true);
model.result('pg1').setIndex('plotonsecyaxis', true, 0, 1);
model.result('pg1').set('titletype', 'label');
model.result('pg1').set('legendpos', 'lowerright');
model.result('pg1').run;
model.result.duplicate('pg2', 'pg1');
model.result('pg2').run;
model.result('pg2').label('Voltage and Current Profile for CC Charge - CV Discharge (Overlapped)');
model.result('pg2').run;
model.result('pg2').feature('glob1').set('xdata', 'expr');
model.result('pg2').feature('glob1').set('xdataexpr', 't-t_CC_start');
model.result('pg2').feature('glob1').create('filt1', 'GlobalFilter');
model.result('pg2').run;
model.result('pg2').feature('glob1').feature('filt1').set('expr', '(REST!=1)&&(V_max>1.8)');
model.result('pg2').feature('glob1').feature('filt1').set('xdec', false);
model.result('pg2').run;
model.result('pg2').feature('glob1').create('col1', 'Color');
model.result('pg2').run;
model.result('pg2').feature('glob1').feature('col1').set('expr', 'V_max');
model.result('pg2').feature('glob1').feature('col1').set('colorlegend', false);
model.result('pg2').run;
model.result('pg2').feature('ptgr1').set('xdata', 'expr');
model.result('pg2').feature('ptgr1').set('xdataexpr', 't-t_CC_start');
model.result('pg2').feature('ptgr1').create('filt1', 'PointGraphFilter');
model.result('pg2').run;
model.result('pg2').feature('ptgr1').feature('filt1').set('expr', '(REST!=1)&&(V_max>1.8)');
model.result('pg2').feature('ptgr1').feature('filt1').set('xdec', false);
model.result('pg2').run;
model.result('pg2').feature('ptgr1').create('col1', 'Color');
model.result('pg2').run;
model.result('pg2').feature('ptgr1').feature('col1').set('expr', 'V_max');
model.result('pg2').feature('ptgr1').feature('col1').set('colorlegend', false);
model.result('pg2').run;
model.result('pg2').set('axislimits', true);
model.result('pg2').set('xmin', 0);
model.result('pg2').set('xmax', 40);
model.result('pg2').set('ymin', 0);
model.result('pg2').set('ymax', 2.6);
model.result('pg2').set('yminsec', -2000);
model.result('pg2').set('ymaxsec', 300);
model.result('pg2').set('legendpos', 'lowerleft');
model.result('pg2').run;

model.physics('tcd').create('epow1', 'ElectrodePower', 0);
model.physics('tcd').feature('epow1').selection.set([4]);
model.physics('tcd').feature('epow1').set('ElectrodePowerType', 'AveragePowerDensity');
model.physics('tcd').feature('epow1').set('Pas', '-P_app/A_cell');
model.physics('tcd').feature('epow1').set('phis0init', 'V_rest');
model.physics('tcd').create('init2', 'init', 1);
model.physics('tcd').feature('init2').selection.set([3]);
model.physics('tcd').feature('init2').setIndex('initc', 'c_bulk', 1);
model.physics('tcd').feature('init2').set('initphis', 'V_rest');
model.physics('tcd').feature('init2').label('Initial Values - Constant Power');

model.nodeGroup.create('grp2', 'Physics', 'tcd');
model.nodeGroup('grp2').placeAfter('egnd1');
model.nodeGroup('grp2').add('epow1');
model.nodeGroup('grp2').add('init2');
model.nodeGroup('grp2').label('Constant Power Charge');

model.study.create('std2');
model.study('std2').create('time', 'Transient');
model.study('std2').feature('time').setSolveFor('/physics/tcd', true);
model.study('std2').feature('time').setSolveFor('/physics/ev', true);
model.study('std2').feature('time').set('useadvanceddisable', true);
model.study('std2').feature('time').set('disabledphysics', {'tcd/ecd1' 'tcd/ge1'});
model.study('std2').feature('time').setSolveFor('/physics/ev', false);
model.study('std2').feature('time').set('disabledphysics', {'tcd/ecd1' 'tcd/ge1' 'ev'});
model.study('std2').feature('time').set('tlist', '0 2');

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'time');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_phil').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_phis').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_tcd_epow1_phis0').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_phil').set('scaleval', '1');
model.sol('sol2').feature('v1').feature('comp1_phis').set('scaleval', '1');
model.sol('sol2').feature('v1').feature('comp1_tcd_epow1_phis0').set('scaleval', '1');
model.sol('sol2').feature('v1').set('control', 'time');
model.sol('sol2').create('t1', 'Time');
model.sol('sol2').feature('t1').set('tlist', '0 2');
model.sol('sol2').feature('t1').set('plot', 'off');
model.sol('sol2').feature('t1').set('plotgroup', 'pg1');
model.sol('sol2').feature('t1').set('plotfreq', 'tout');
model.sol('sol2').feature('t1').set('probesel', 'all');
model.sol('sol2').feature('t1').set('probes', {});
model.sol('sol2').feature('t1').set('probefreq', 'tsteps');
model.sol('sol2').feature('t1').set('rtol', 0.001);
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol2').feature('t1').set('eventout', true);
model.sol('sol2').feature('t1').set('reacf', true);
model.sol('sol2').feature('t1').set('storeudot', true);
model.sol('sol2').feature('t1').set('endtimeinterpolation', true);
model.sol('sol2').feature('t1').set('maxorder', 2);
model.sol('sol2').feature('t1').set('control', 'time');
model.sol('sol2').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('t1').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('d1').label('Direct (tcd)');
model.sol('sol2').feature('t1').create('i1', 'Iterative');
model.sol('sol2').feature('t1').feature('i1').set('maxlinit', 1000);
model.sol('sol2').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol2').feature('t1').feature('i1').label('Algebraic Multigrid (tcd)');
model.sol('sol2').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', false);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('compactaggregation', true);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').create('va1', 'Vanka');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('va1').set('vankavars', {'comp1_tcd_phis_lm'});
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').create('va1', 'Vanka');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('va1').set('vankavars', {'comp1_tcd_phis_lm'});
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').create('i2', 'Iterative');
model.sol('sol2').feature('t1').feature('i2').set('maxlinit', 1000);
model.sol('sol2').feature('t1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol2').feature('t1').feature('i2').label('Geometric Multigrid (tcd)');
model.sol('sol2').feature('t1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('pr').create('va1', 'Vanka');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('pr').feature('va1').set('vankavars', {'comp1_tcd_phis_lm'});
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('po').create('va1', 'Vanka');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('po').feature('va1').set('vankavars', {'comp1_tcd_phis_lm'});
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('t1').feature.remove('fcDef');
model.sol('sol2').attach('std2');

model.study('std2').feature('time').set('useparam', true);
model.study('std2').feature('time').setIndex('pname', 'A_cell', 0);
model.study('std2').feature('time').setIndex('plistarr', '', 0);
model.study('std2').feature('time').setIndex('punit', 'm^2', 0);
model.study('std2').feature('time').setIndex('pname', 'A_cell', 0);
model.study('std2').feature('time').setIndex('plistarr', '', 0);
model.study('std2').feature('time').setIndex('punit', 'm^2', 0);
model.study('std2').feature('time').setIndex('pname', 'A_cell_nom', 1);
model.study('std2').feature('time').setIndex('plistarr', '', 1);
model.study('std2').feature('time').setIndex('punit', 'm^2', 1);
model.study('std2').feature('time').setIndex('pname', 'A_cell_nom', 1);
model.study('std2').feature('time').setIndex('plistarr', '', 1);
model.study('std2').feature('time').setIndex('punit', 'm^2', 1);
model.study('std2').feature('time').setIndex('pname', 'P_app', 0);
model.study('std2').feature('time').setIndex('plistarr', '0.5[kW] 0.85[kW]', 0);
model.study('std2').feature('time').setIndex('pname', 'V_rest', 1);
model.study('std2').feature('time').setIndex('plistarr', '-2.1[V] -2.5[V]', 1);
model.study('std2').label('Study 2: Constant Power Charge');
model.study('std2').setGenPlots(false);

model.sol('sol2').feature('t1').set('tout', 'tsteps');
model.sol('sol2').runAll;

model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('Double Layer Current');
model.result('pg3').set('titletype', 'label');
model.result('pg3').create('lngr1', 'LineGraph');
model.result('pg3').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg3').feature('lngr1').set('linewidth', 'preference');
model.result('pg3').feature('lngr1').selection.set([1 3]);
model.result('pg3').feature('lngr1').set('data', 'dset2');
model.result('pg3').feature('lngr1').setIndex('looplevelinput', 'last', 0);
model.result('pg3').feature('lngr1').set('expr', 'tcd.ivdl');
model.result('pg3').feature('lngr1').set('xdata', 'expr');
model.result('pg3').feature('lngr1').set('xdataexpr', 'x/(L_elec+L_sep+L_elec)');
model.result('pg3').run;
model.result('pg3').feature('lngr1').set('xdatadescractive', true);
model.result('pg3').feature('lngr1').set('xdatadescr', 'Dimensionless length');
model.result('pg3').run;
model.result('pg3').feature('lngr1').set('legend', true);
model.result('pg3').feature('lngr1').set('legendmethod', 'manual');
model.result('pg3').feature('lngr1').setIndex('legends', '60: t=2 s, P<sub>app</sub>=500 W, V<sub>rest</sub>=-2.1 V', 0);
model.result('pg3').feature('lngr1').setIndex('legends', '125: t=2 s, P<sub>app</sub>=850 W, V<sub>rest</sub>=-2.5 V', 1);
model.result('pg3').run;
model.result('pg3').set('legendpos', 'middleleft');
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Charge Density for Charging Power');
model.result('pg4').set('data', 'dset2');
model.result('pg4').setIndex('looplevelinput', 'last', 0);
model.result('pg4').set('titletype', 'label');
model.result('pg4').create('lngr1', 'LineGraph');
model.result('pg4').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg4').feature('lngr1').set('linewidth', 'preference');
model.result('pg4').feature('lngr1').selection.all;
model.result('pg4').feature('lngr1').set('expr', '-tcd.c_pce1_c1_q*F_const');
model.result('pg4').feature('lngr1').set('descractive', true);
model.result('pg4').feature('lngr1').set('descr', 'Charge density');
model.result('pg4').feature('lngr1').set('xdata', 'expr');
model.result('pg4').feature('lngr1').set('xdataexpr', 'x/(L_sep+2*L_elec)');
model.result('pg4').feature('lngr1').set('legend', true);
model.result('pg4').feature('lngr1').set('legendmethod', 'manual');
model.result('pg4').feature('lngr1').setIndex('legends', '60: t=2 s, P<sub>app</sub>=500 W, V<sub>rest</sub>=-2.1 V', 0);
model.result('pg4').feature('lngr1').setIndex('legends', '125: t=2 s, P<sub>app</sub>=850 W, V<sub>rest</sub>=-2.5 V', 1);
model.result('pg4').run;
model.result('pg4').set('xlabelactive', true);
model.result('pg4').set('xlabel', 'Dimensionless length (1)');
model.result('pg4').set('legendpos', 'upperleft');
model.result('pg4').run;
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').label('Voltage and Current Profiles for Constant Power Charge');
model.result('pg5').set('data', 'dset2');
model.result('pg5').set('titletype', 'label');
model.result('pg5').create('ptgr1', 'PointGraph');
model.result('pg5').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg5').feature('ptgr1').set('linewidth', 'preference');
model.result('pg5').feature('ptgr1').label('Current');
model.result('pg5').feature('ptgr1').selection.set([4]);
model.result('pg5').feature('ptgr1').set('expr', 'right_el(tcd.nIs)*A_cell');
model.result('pg5').feature('ptgr1').set('legend', true);
model.result('pg5').feature('ptgr1').set('linecolor', 'cyclereset');
model.result('pg5').feature('ptgr1').set('legendmethod', 'evaluated');
model.result('pg5').feature('ptgr1').set('legendpattern', 'Current (P = eval(P_app) kW)');
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').create('glob1', 'Global');
model.result('pg5').feature('glob1').set('markerpos', 'datapoints');
model.result('pg5').feature('glob1').set('linewidth', 'preference');
model.result('pg5').feature('glob1').label('Potential');
model.result('pg5').feature('glob1').set('expr', {'tcd.phis0_epow1'});
model.result('pg5').feature('glob1').set('descr', {'Electric potential on boundary'});
model.result('pg5').feature('glob1').set('unit', {'V'});
model.result('pg5').feature('glob1').set('linestyle', 'dashdot');
model.result('pg5').feature('glob1').set('linecolor', 'cyclereset');
model.result('pg5').feature('glob1').set('legendmethod', 'evaluated');
model.result('pg5').feature('glob1').set('legendpattern', 'Potential (P = eval(P_app) kW)');
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').set('ylabelactive', true);
model.result('pg5').set('ylabel', 'Current (A)');
model.result('pg5').set('twoyaxes', true);
model.result('pg5').set('yseclabelactive', true);
model.result('pg5').set('yseclabel', 'Electric Potential (V)');
model.result('pg5').setIndex('plotonsecyaxis', true, 1, 1);
model.result('pg5').run;
model.result('pg5').set('axislimits', true);
model.result('pg5').set('ymin', 200.79068524910107);
model.result('pg5').set('ymax', 340.58128603840646);
model.result('pg5').run;
model.result('pg5').set('ymaxsec', -0.45314923375307226);
model.result('pg5').set('yminsec', -3);
model.result('pg5').run;
model.result('pg5').set('legendpos', 'center');
model.result('pg5').run;

model.study('std1').feature('time').set('useadvanceddisable', true);
model.study('std1').feature('time').set('disabledphysics', {'tcd/epow1' 'tcd/init2'});
model.study('std1').feature('time').set('plot', true);

model.title('Electrochemical Capacitor with Porous Electrodes');

model.description(['Electrochemical supercapacitors feature relatively higher energy densities than conventional capacitors. With several advantages, such as fast charging, long charge discharge cycles, and broad operating temperature ranges, electrochemical supercapacitors have found wide applications in hybrid electric vehicles.' newline  newline 'This 1D tutorial models the current distribution and electrode utilization in the porous electrodes in an electrochemical capacitor. The Nernst' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Planck equations are used to model transport by diffusion and migration of the binary electrolyte, using tortuosity and porosity parameters to derive effective transport parameters for the porous electrodes. Simulations are run using constant current-constant voltage and constant power charge/discharge loads.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('electrochemical_capacitor_porous_electrodes.mph');

model.modelNode.label('Components');

out = model;
