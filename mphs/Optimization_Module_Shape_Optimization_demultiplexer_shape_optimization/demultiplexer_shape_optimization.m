function out = model
%
% demultiplexer_shape_optimization.m
%
% Model exported on May 26 2025, 21:31 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Optimization_Module/Shape_Optimization');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('acpr', 'PressureAcoustics', 'geom1');
model.physics('acpr').model('comp1');

model.study.create('std1');
model.study('std1').create('freq', 'Frequency');
model.study('std1').feature('freq').setSolveFor('/physics/acpr', true);

model.param.set('f1', '5.5[kHz]');
model.param.descr('f1', 'Frequency 1');
model.param.set('f2', '7.5[kHz]');
model.param.descr('f2', 'Frequency 2');
model.param.set('df', '50[Hz]');
model.param.descr('df', 'Frequency bandwidth');
model.param.set('dfN', '5');
model.param.descr('dfN', 'Frequencies per band');
model.param.set('meshsz', '340[m/s]/f2/6');
model.param.descr('meshsz', 'Mesh size');
model.param.set('Pc', '1[mW/m]');
model.param.descr('Pc', 'Characteristic power');

model.geom('geom1').insertFile('demultiplexer_shape_optimization_geom_sequence.mph', 'geom1');
model.geom('geom1').run('fin');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('rho', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('cs', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an1', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an2', 'Analytic');
model.material('mat1').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat1').propertyGroup.create('NonlinearModel', 'Nonlinear model');
model.material('mat1').propertyGroup.create('idealGas', 'Ideal gas');
model.material('mat1').propertyGroup('idealGas').func.create('Cp', 'Piecewise');
model.material('mat1').label('Air');
model.material('mat1').set('family', 'air');
model.material('mat1').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('eta').set('pieces', {'200.0' '1600.0' '-8.38278E-7+8.35717342E-8*T^1-7.69429583E-11*T^2+4.6437266E-14*T^3-1.06585607E-17*T^4'});
model.material('mat1').propertyGroup('def').func('eta').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat1').propertyGroup('def').func('Cp').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('def').func('rho').set('expr', 'pA*0.02897/R_const[K*mol/J]/T');
model.material('mat1').propertyGroup('def').func('rho').set('args', {'pA' 'T'});
model.material('mat1').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.material('mat1').propertyGroup('def').func('rho').set('argunit', {'Pa' 'K'});
model.material('mat1').propertyGroup('def').func('rho').set('plotaxis', {'off' 'on'});
model.material('mat1').propertyGroup('def').func('rho').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat1').propertyGroup('def').func('rho').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '293.15'});
model.material('mat1').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('k').set('pieces', {'200.0' '1600.0' '-0.00227583562+1.15480022E-4*T^1-7.90252856E-8*T^2+4.11702505E-11*T^3-7.43864331E-15*T^4'});
model.material('mat1').propertyGroup('def').func('k').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.material('mat1').propertyGroup('def').func('cs').set('expr', 'sqrt(1.4*R_const[K*mol/J]/0.02897*T)');
model.material('mat1').propertyGroup('def').func('cs').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('cs').set('fununit', 'm/s');
model.material('mat1').propertyGroup('def').func('cs').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('cs').set('plotfixedvalue', {'273.15'});
model.material('mat1').propertyGroup('def').func('cs').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.material('mat1').propertyGroup('def').func('an1').set('expr', '-1/rho(pA,T)*d(rho(pA,T),T)');
model.material('mat1').propertyGroup('def').func('an1').set('args', {'pA' 'T'});
model.material('mat1').propertyGroup('def').func('an1').set('fununit', '1/K');
model.material('mat1').propertyGroup('def').func('an1').set('argunit', {'Pa' 'K'});
model.material('mat1').propertyGroup('def').func('an1').set('plotaxis', {'off' 'on'});
model.material('mat1').propertyGroup('def').func('an1').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat1').propertyGroup('def').func('an1').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an2').set('funcname', 'muB');
model.material('mat1').propertyGroup('def').func('an2').set('expr', '0.6*eta(T)');
model.material('mat1').propertyGroup('def').func('an2').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('an2').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('an2').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an2').set('plotfixedvalue', {'200'});
model.material('mat1').propertyGroup('def').func('an2').set('plotargs', {'T' '200' '1600'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.material('mat1').propertyGroup('def').set('molarmass', '');
model.material('mat1').propertyGroup('def').set('bulkviscosity', '');
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)'});
model.material('mat1').propertyGroup('def').set('molarmass', '0.02897[kg/mol]');
model.material('mat1').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.material('mat1').propertyGroup('def').set('ratioofspecificheat', '1.4');
model.material('mat1').propertyGroup('def').set('electricconductivity', {'0[S/m]' '0' '0' '0' '0[S/m]' '0' '0' '0' '0[S/m]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.material('mat1').propertyGroup('def').set('density', 'rho(pA,T)');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.material('mat1').propertyGroup('def').set('soundspeed', 'cs(T)');
model.material('mat1').propertyGroup('def').addInput('temperature');
model.material('mat1').propertyGroup('def').addInput('pressure');
model.material('mat1').propertyGroup('RefractiveIndex').set('n', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('NonlinearModel').set('BA', 'def.gamma-1');
model.material('mat1').propertyGroup('idealGas').func('Cp').label('Piecewise 2');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat1').propertyGroup('idealGas').func('Cp').set('argunit', 'K');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('idealGas').set('Rs', 'R_const/Mn');
model.material('mat1').propertyGroup('idealGas').set('heatcapacity', 'Cp(T)');
model.material('mat1').propertyGroup('idealGas').set('ratioofspecificheat', '1.4');
model.material('mat1').propertyGroup('idealGas').set('molarmass', '0.02897');
model.material('mat1').propertyGroup('idealGas').addInput('temperature');
model.material('mat1').propertyGroup('idealGas').addInput('pressure');
model.material('mat1').materialType('nonSolid');

model.physics('acpr').create('port1', 'Port', 1);
model.physics('acpr').feature('port1').selection.named('geom1_boxsel1');
model.physics('acpr').feature('port1').set('PortType', 'Slit');
model.physics('acpr').feature('port1').set('pamp', 1);
model.physics('acpr').create('port2', 'Port', 1);
model.physics('acpr').feature('port2').selection.named('geom1_boxsel2');
model.physics('acpr').feature('port2').set('PortType', 'Slit');
model.physics('acpr').create('port3', 'Port', 1);
model.physics('acpr').feature('port3').selection.named('geom1_boxsel3');
model.physics('acpr').feature('port3').set('PortType', 'Slit');

model.mesh('mesh1').create('size1', 'Size');
model.mesh('mesh1').feature('size').set('hmax', 'meshsz');
model.mesh('mesh1').feature('size').set('hmin', 'meshsz/2');
model.mesh('mesh1').feature('size1').selection.geom('geom1', 1);
model.mesh('mesh1').feature('size1').selection.all;
model.mesh('mesh1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('size1').set('hmax', 'meshsz/2');
model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').run;

model.study('std1').label('Initial Design');
model.study('std1').feature('freq').set('plist', 'f1 f2');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'f1 f2'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'Default');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 2, 0);
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'acpr.p_t'});
model.result('pg1').feature('surf1').set('colortable', 'Wave');
model.result('pg1').feature('surf1').set('colorscalemode', 'linearsymmetric');
model.result('pg1').set('showlegendsunit', true);
model.result('pg1').label('Acoustic Pressure (acpr)');
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 2, 0);
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'acpr.Lp_t'});
model.result('pg2').feature('surf1').set('colortable', 'Rainbow');
model.result('pg2').feature('surf1').set('colorscalemode', 'linear');
model.result('pg2').set('showlegendsunit', true);
model.result('pg2').label('Sound Pressure Level (acpr)');
model.result('pg1').run;

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').label('Port powers');
model.variable('var1').set('power2', '10*log10(acpr.port2.P_out/Pc)');
model.variable('var1').descr('power2', 'Port 2 power');
model.variable('var1').set('power3', '10*log10(acpr.port3.P_out/Pc)');
model.variable('var1').descr('power3', 'Port 3 power');
model.variable('var1').set('power_rat', 'log10(acpr.port2.P_out/Pc)-log10(acpr.port3.P_out/Pc)');
model.variable('var1').descr('power_rat', 'Power ratio');
model.variable('var1').set('obj', 'if(2*freq<f1+f2,power_rat,-power_rat)/10');
model.variable('var1').descr('obj', 'Objective');

model.common.create('fsd1', 'FreeShapeDomain', 'comp1');
model.common('fsd1').selection.all;
model.common.create('fsb1', 'FreeShapeBoundary', 'comp1');
model.common('fsb1').selection.named('geom1_disksel3');
model.common('fsb1').set('maximumDisplacement', '0.5*Rhole');
model.common('fsb1').set('filterRadiusType', 'Medium');

model.study.create('std2');
model.study('std2').create('freq', 'Frequency');
model.study('std2').feature('freq').setSolveFor('/physics/acpr', true);
model.study('std2').label('Optimization');
model.study('std2').create('sho', 'ShapeOptimization');
model.study('std2').feature('sho').set('movelimitactive', false);
model.study('std2').feature('sho').set('optobj', {'comp1.obj'});
model.study('std2').feature('sho').set('descr', {'Objective'});
model.study('std2').feature('sho').set('objectivesolution', 'max');
model.study('std2').feature('freq').set('plist', 'range(f1-0.5*df,df/(dfN-1),f1+0.5*df) range(f2-0.5*df,df/(dfN-1),f2+0.5*df)');

model.sol.create('sol2');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'freq');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_fsb1_d').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_material_disp').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_fsb1_d').set('scaleval', '0.5*Rhole');
model.sol('sol2').feature('v1').feature('comp1_material_disp').set('scaleval', '0.0031045740448570392');
model.sol('sol2').feature('v1').set('control', 'freq');
model.sol('sol2').create('o1', 'Optimization');
model.sol('sol2').feature('o1').set('control', 'sho');
model.sol('sol2').feature('o1').create('s1', 'StationaryAttrib');
model.sol('sol2').feature('o1').feature('s1').set('stol', 0.001);
model.sol('sol2').feature('o1').feature('s1').create('p1', 'Parametric');
model.sol('sol2').feature('o1').feature('s1').feature.remove('pDef');
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('plistarr', {'range(f1-0.5*df,df/(dfN-1),f1+0.5*df) range(f2-0.5*df,df/(dfN-1),f2+0.5*df)'});
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol2').feature('o1').feature('s1').set('control', 'freq');
model.sol('sol2').feature('o1').feature('s1').set('linpmethod', 'sol');
model.sol('sol2').feature('o1').feature('s1').set('linpsol', 'zero');
model.sol('sol2').feature('o1').feature('s1').set('control', 'freq');
model.sol('sol2').feature('o1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol2').feature('o1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('o1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol2').feature('o1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol2').feature('o1').feature('s1').create('seDef', 'Segregated');
model.sol('sol2').feature('o1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('o1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol2').feature('o1').feature('s1').feature.remove('fcDef');
model.sol('sol2').feature('o1').feature('s1').feature.remove('seDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runFromTo('st1', 'v1');

model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').set('data', 'dset2');
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', {'acpr.p_t'});
model.result('pg3').feature('surf1').set('colortable', 'Wave');
model.result('pg3').feature('surf1').set('colorscalemode', 'linearsymmetric');
model.result('pg3').set('showlegendsunit', true);
model.result('pg3').label('Acoustic Pressure (acpr) 1');
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').set('data', 'dset2');
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', {'acpr.Lp_t'});
model.result('pg4').feature('surf1').set('colortable', 'Rainbow');
model.result('pg4').feature('surf1').set('colorscalemode', 'linear');
model.result('pg4').set('showlegendsunit', true);
model.result('pg4').label('Sound Pressure Level (acpr) 1');
model.result.create('pg5', 'PlotGroup2D');
model.result.dataset.duplicate('dset2g1', 'dset2');
model.result.dataset('dset2g1').label('Optimization/Solution 2 (2) - Geometry');
model.result.dataset('dset2g1').set('frametype', 'geometry');
model.result('pg5').label('Shape Optimization');
model.result('pg5').set('data', 'dset2');
model.result('pg5').set('frametype', 'geometry');
model.result('pg5').set('edgecolor', 'gray');
model.result('pg5').set('titletype', 'none');
model.result('pg5').create('line1', 'Line');
model.result('pg5').feature('line1').set('expr', '1');
model.result('pg5').feature('line1').set('coloring', 'uniform');
model.result('pg5').feature('line1').set('color', 'fromtheme');
model.result('pg5').create('arwl1', 'ArrowLine');
model.result('pg5').feature('arwl1').set('data', 'dset2g1');
model.result('pg5').feature('arwl1').set('expr', {'fsd1.dXg' 'fsd1.dYg'});
model.result('pg5').feature('arwl1').set('scaleactive', true);
model.result('pg5').feature('arwl1').set('scale', '1');
model.result('pg5').feature('arwl1').set('placement', 'uniform');
model.result('pg5').feature('arwl1').set('arrowcount', 200);
model.result('pg5').feature('arwl1').create('col1', 'Color');
model.result('pg5').feature('arwl1').feature('col1').set('expr', 'fsd1.rel_disp');
model.result('pg5').feature('arwl1').feature('col1').set('rangecoloractive', 'on');
model.result('pg5').feature('arwl1').feature('col1').set('rangecolormin', 0);
model.result('pg5').feature('arwl1').feature('col1').set('rangecolormax', 1);
model.result('pg5').feature('arwl1').create('sel1', 'Selection');
model.result('pg5').feature('arwl1').feature('sel1').selection.named('dsel_fsd1');
model.result('pg3').run;
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').feature('arwl1').set('placement', 'elements');

model.study('std2').feature('sho').set('plot', true);
model.study('std2').feature('sho').set('plotgroup', 'pg5');
model.study('std2').feature('sho').set('mmamaxiter', 25);

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol2').study('std2');
model.sol('sol2').feature.remove('o1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('st1');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'freq');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_fsb1_d').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_material_disp').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_fsb1_d').set('scaleval', '0.5*Rhole');
model.sol('sol2').feature('v1').feature('comp1_material_disp').set('scaleval', '0.0031045740448570392');
model.sol('sol2').feature('v1').set('control', 'freq');
model.sol('sol2').create('o1', 'Optimization');
model.sol('sol2').feature('o1').set('control', 'sho');
model.sol('sol2').feature('o1').create('s1', 'StationaryAttrib');
model.sol('sol2').feature('o1').feature('s1').set('stol', 0.001);
model.sol('sol2').feature('o1').feature('s1').create('p1', 'Parametric');
model.sol('sol2').feature('o1').feature('s1').feature.remove('pDef');
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('plistarr', {'range(f1-0.5*df,df/(dfN-1),f1+0.5*df) range(f2-0.5*df,df/(dfN-1),f2+0.5*df)'});
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol2').feature('o1').feature('s1').set('control', 'freq');
model.sol('sol2').feature('o1').feature('s1').set('linpmethod', 'sol');
model.sol('sol2').feature('o1').feature('s1').set('linpsol', 'zero');
model.sol('sol2').feature('o1').feature('s1').set('control', 'freq');
model.sol('sol2').feature('o1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol2').feature('o1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('o1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol2').feature('o1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol2').feature('o1').feature('s1').create('seDef', 'Segregated');
model.sol('sol2').feature('o1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('o1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol2').feature('o1').feature('s1').feature.remove('fcDef');
model.sol('sol2').feature('o1').feature('s1').feature.remove('seDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result('pg3').run;

model.study('std2').feature('sho').set('probewindow', '');

model.result.dataset('dset2').createDeformedConfig('deform1', 'mesh2');

model.mesh('mesh2').create('size1', 'Size');
model.mesh('mesh2').feature('size').set('custom', true);
model.mesh('mesh2').feature('size').set('hmax', 'meshsz/2');
model.mesh('mesh2').feature('size').set('hmin', 'meshsz/4');
model.mesh('mesh2').feature('size1').selection.geom('deform1', 1);
model.mesh('mesh2').feature('size1').selection.named('geom1_disksel3');
model.mesh('mesh2').feature('size1').set('custom', true);
model.mesh('mesh2').feature('size1').set('hmaxactive', true);
model.mesh('mesh2').feature('size1').set('hmax', 'meshsz/4');
model.mesh('mesh2').create('ftri1', 'FreeTri');
model.mesh('mesh2').feature('ref1').active(false);

model.study.create('std3');
model.study('std3').create('freq', 'Frequency');
model.study('std3').feature('freq').setSolveFor('/physics/acpr', true);
model.study.create('std4');
model.study('std4').create('freq', 'Frequency');
model.study('std4').feature('freq').setSolveFor('/physics/acpr', true);
model.study('std3').feature('freq').set('plist', 'f1 f2');
model.study('std3').feature('freq').setEntry('activate', 'frame:material1', false);
model.study('std3').feature('freq').setEntry('activate', 'comp1:shape', false);
model.study('std3').feature('freq').set('usesol', true);
model.study('std3').feature('freq').set('notsolmethod', 'sol');
model.study('std3').feature('freq').set('notstudy', 'std2');
model.study('std3').setGenPlots(false);
model.study('std3').label('Verification (f1,f2)');

model.sol.create('sol3');

model.mesh('mesh2').stat.selection.geom(2);
model.mesh('mesh2').stat.selection.set([1]);

model.sol('sol3').study('std3');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std3');
model.sol('sol3').feature('st1').set('studystep', 'freq');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').feature('comp1_material_disp').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_material_disp').set('scaleval', '0.0020290901902084097');
model.sol('sol3').feature('v1').set('control', 'freq');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').set('stol', 0.001);
model.sol('sol3').feature('s1').create('p1', 'Parametric');
model.sol('sol3').feature('s1').feature.remove('pDef');
model.sol('sol3').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol3').feature('s1').feature('p1').set('plistarr', {'f1 f2'});
model.sol('sol3').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol3').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol3').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol3').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol3').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol3').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol3').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol3').feature('s1').feature('p1').set('probes', {});
model.sol('sol3').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol3').feature('s1').set('linpmethod', 'sol');
model.sol('sol3').feature('s1').set('linpsol', 'zero');
model.sol('sol3').feature('s1').set('control', 'freq');
model.sol('sol3').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol3').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol3').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol3').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol('sol3').attach('std3');
model.sol('sol3').runAll;

model.study('std4').feature('freq').set('plist', 'range(f1-10*df,(f2+10*df-(f1-10*df))/400,f2+10*df)');
model.study('std4').feature('freq').setEntry('activate', 'frame:material1', false);
model.study('std4').feature('freq').setEntry('activate', 'comp1:shape', false);
model.study('std4').feature('freq').set('usesol', true);
model.study('std4').feature('freq').set('notsolmethod', 'sol');
model.study('std4').feature('freq').set('notstudy', 'std2');
model.study('std4').feature('freq').setEntry('outputmap', 'acpr', 'selection');
model.study('std4').feature('freq').setEntry('outputselectionmap', 'acpr', 'geom1_disksel2');
model.study('std4').feature('freq').setEntry('outputmap', 'frame:material1', 'selection');
model.study('std4').feature('freq').setEntry('outputselectionmap', 'frame:material1', 'geom1_disksel2');
model.study('std4').feature('freq').setEntry('outputmap', 'comp1:shape', 'selection');
model.study('std4').feature('freq').setEntry('outputselectionmap', 'comp1:shape', 'geom1_disksel2');
model.study('std4').setGenPlots(false);
model.study('std4').label('Verification (mesh2)');

model.sol.create('sol4');

model.mesh('mesh2').stat.selection.geom(2);
model.mesh('mesh2').stat.selection.set([1]);

model.sol('sol4').study('std4');
model.sol('sol4').create('st1', 'StudyStep');
model.sol('sol4').feature('st1').set('study', 'std4');
model.sol('sol4').feature('st1').set('studystep', 'freq');
model.sol('sol4').create('v1', 'Variables');
model.sol('sol4').feature('v1').feature('comp1_material_disp').set('scalemethod', 'manual');
model.sol('sol4').feature('v1').feature('comp1_material_disp').set('scaleval', '0.0020290901902084097');
model.sol('sol4').feature('v1').set('control', 'freq');
model.sol('sol4').create('s1', 'Stationary');
model.sol('sol4').feature('s1').set('stol', 0.001);
model.sol('sol4').feature('s1').create('p1', 'Parametric');
model.sol('sol4').feature('s1').feature.remove('pDef');
model.sol('sol4').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol4').feature('s1').feature('p1').set('plistarr', {'range(f1-10*df,(f2+10*df-(f1-10*df))/400,f2+10*df)'});
model.sol('sol4').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol4').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol4').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol4').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol4').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol4').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol4').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol4').feature('s1').feature('p1').set('probes', {});
model.sol('sol4').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol4').feature('s1').set('linpmethod', 'sol');
model.sol('sol4').feature('s1').set('linpsol', 'zero');
model.sol('sol4').feature('s1').set('control', 'freq');
model.sol('sol4').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol4').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol4').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol4').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol4').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol4').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol4').feature('s1').feature.remove('fcDef');
model.sol('sol4').attach('std4');
model.sol('sol4').runAll;

model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').run;
model.result('pg6').label('Spectrum');
model.result('pg6').set('data', 'dset4');
model.result('pg6').set('titletype', 'none');
model.result('pg6').set('ylabelactive', true);
model.result('pg6').set('ylabel', 'Power (dB)');
model.result('pg6').set('legendpos', 'lowermiddle');
model.result('pg6').create('glob1', 'Global');
model.result('pg6').feature('glob1').set('markerpos', 'datapoints');
model.result('pg6').feature('glob1').set('linewidth', 'preference');
model.result('pg6').feature('glob1').set('expr', {'power2'});
model.result('pg6').feature('glob1').set('descr', {'Port 2 power'});
model.result('pg6').feature('glob1').set('expr', {'power2' 'power3'});
model.result('pg6').feature('glob1').set('descr', {'Port 2 power' 'Port 3 power'});
model.result('pg6').feature('glob1').set('xdataparamunit', 'kHz');
model.result('pg6').feature('glob1').set('linewidth', 2);
model.result('pg6').feature.duplicate('glob2', 'glob1');
model.result('pg6').run;
model.result('pg6').feature('glob2').set('data', 'dset2');
model.result('pg6').feature('glob2').setIndex('expr', 'power2', 0);
model.result('pg6').feature('glob2').setIndex('unit', '', 0);
model.result('pg6').feature('glob2').setIndex('descr', 'Port 2 (mesh1)', 0);
model.result('pg6').feature('glob2').setIndex('expr', 'power3', 1);
model.result('pg6').feature('glob2').setIndex('unit', '', 1);
model.result('pg6').feature('glob2').setIndex('descr', 'Port 3 (mesh1)', 1);
model.result('pg6').feature('glob2').set('linestyle', 'none');
model.result('pg6').feature('glob2').set('linecolor', 'cyclereset');
model.result('pg6').feature('glob2').set('linemarker', 'square');
model.result('pg6').feature('glob2').set('legend', false);
model.result('pg6').run;
model.result.dataset('dset3').set('frametype', 'spatial');
model.result('pg3').run;
model.result('pg3').label('Animation');
model.result('pg3').set('titletype', 'none');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').create('surf2', 'Surface');
model.result('pg3').feature('surf2').set('expr', 'with(1,acpr.p_t)');
model.result('pg3').feature('surf2').set('inheritplot', 'surf1');
model.result('pg3').feature('surf2').create('trn1', 'Translation');
model.result('pg3').run;
model.result('pg3').feature('surf2').feature('trn1').set('trans', {'1.25*L' '0'});
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').feature('surf1').set('rangecoloractive', true);
model.result('pg3').feature('surf1').set('rangecolormin', -1);
model.result('pg3').feature('surf1').set('rangecolormax', 1);
model.result('pg3').run;
model.result('pg3').create('line1', 'Line');
model.result('pg3').feature('line1').set('coloring', 'uniform');
model.result('pg3').feature('line1').set('color', 'black');
model.result('pg3').feature('line1').create('trn1', 'Translation');
model.result('pg3').run;
model.result('pg3').feature('line1').feature('trn1').set('trans', {'1.25*L' '0'});
model.result('pg3').run;
model.result('pg3').run;
model.result.export.create('anim1', 'Animation');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('fontsize', '9');
model.result.export('anim1').set('colortheme', 'globaltheme');
model.result.export('anim1').set('customcolor', [1 1 1]);
model.result.export('anim1').set('background', 'color');
model.result.export('anim1').set('gltfincludelines', 'on');
model.result.export('anim1').set('title1d', 'on');
model.result.export('anim1').set('legend1d', 'on');
model.result.export('anim1').set('logo1d', 'on');
model.result.export('anim1').set('options1d', 'on');
model.result.export('anim1').set('title2d', 'on');
model.result.export('anim1').set('legend2d', 'on');
model.result.export('anim1').set('logo2d', 'on');
model.result.export('anim1').set('options2d', 'off');
model.result.export('anim1').set('title3d', 'on');
model.result.export('anim1').set('legend3d', 'on');
model.result.export('anim1').set('logo3d', 'on');
model.result.export('anim1').set('options3d', 'off');
model.result.export('anim1').set('axisorientation', 'on');
model.result.export('anim1').set('grid', 'on');
model.result.export('anim1').set('axes1d', 'on');
model.result.export('anim1').set('axes2d', 'on');
model.result.export('anim1').set('showgrid', 'on');
model.result.export('anim1').showFrame;
model.result.export('anim1').set('plotgroup', 'pg3');
model.result.export('anim1').set('sweeptype', 'dde');
model.result.export('anim1').run;
model.result.export('anim1').set('repeat', 'forever');
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').feature.duplicate('surf2', 'surf1');
model.result('pg4').run;
model.result('pg4').feature('surf2').set('expr', 'with(1,acpr.Lp_t)');
model.result('pg4').feature('surf2').set('inheritplot', 'surf1');
model.result('pg4').feature('surf2').create('trn1', 'Translation');
model.result('pg4').run;
model.result('pg4').feature('surf2').feature('trn1').set('trans', {'1.25*L' '0'});
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').set('titletype', 'none');
model.result('pg4').set('frametype', 'spatial');
model.result('pg4').create('str1', 'Streamline');
model.result('pg4').feature('str1').set('expr', {'acpr.Ix' 'acpr.Iy'});
model.result('pg4').feature('str1').set('descr', 'Intensity (spatial and material frames)');
model.result('pg4').feature('str1').selection.named('geom1_boxsel1');
model.result('pg4').feature('str1').set('color', 'blue');
model.result('pg4').feature.duplicate('str2', 'str1');
model.result('pg4').run;
model.result('pg4').feature('str2').set('expr', {'with(1,acpr.Ix)' 'acpr.Iy'});
model.result('pg4').feature('str2').setIndex('expr', 'with(1,acpr.Iy)', 1);
model.result('pg4').feature('str2').create('trn1', 'Translation');
model.result('pg4').run;
model.result('pg4').feature('str2').feature('trn1').set('trans', {'1.25*L' '0'});
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').create('line1', 'Line');
model.result('pg4').feature('line1').set('coloring', 'uniform');
model.result('pg4').feature('line1').set('color', 'black');
model.result('pg4').feature('line1').create('trn1', 'Translation');
model.result('pg4').run;
model.result('pg4').feature('line1').feature('trn1').set('trans', {'1.25*L' '0'});
model.result('pg4').run;
model.result('pg4').run;

model.study('std1').feature('freq').setEntry('activate', 'frame:material1', false);
model.study('std1').feature('freq').setEntry('activate', 'comp1:shape', false);

model.result('pg4').run;
model.result('pg4').set('data', 'dset1');
model.result('pg4').run;
model.result('pg4').set('data', 'dset3');
model.result('pg4').run;

model.title('Shape Optimization of an Acoustic Demultiplexer');

model.description(['This model shows how shape optimization can be used to design an acoustic demultiplexer. A demultiplexer is a data distributing device, in this case it will distribute acoustic energy. The geometry consists of a circular domain with one input port and two output ports. The domain has the structure of a sonic crystal, it has 19' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'circular cavities which are deformed such that the energy goes to one output port for one frequency band and to another output port for another frequency band.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;

model.label('demultiplexer_shape_optimization.mph');

model.modelNode.label('Components');

out = model;
