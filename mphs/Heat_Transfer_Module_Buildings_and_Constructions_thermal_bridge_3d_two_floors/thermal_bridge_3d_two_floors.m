function out = model
%
% thermal_bridge_3d_two_floors.m
%
% Model exported on May 26 2025, 21:28 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Heat_Transfer_Module/Buildings_and_Constructions');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('ht', 'HeatTransfer', 'geom1');
model.physics('ht').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/ht', true);

model.param.set('wall_t1', '5[cm]');
model.param.descr('wall_t1', 'Insulation layer thickness');
model.param.set('wall_t2', '30[cm]');
model.param.descr('wall_t2', 'Wall thickness');
model.param.set('rect1', '1.2[m]');
model.param.descr('rect1', 'Wall first rectangle basis');
model.param.set('rect2', '1.3[m]');
model.param.descr('rect2', 'Wall second rectangle basis');
model.param.set('rect_shift', '-10[cm]');
model.param.descr('rect_shift', 'Shift for the rectangles');
model.param.set('wall_h', '2.15[m]');
model.param.descr('wall_h', 'Wall height');
model.param.set('blk_w', '1.15[m]');
model.param.descr('blk_w', 'Rectangle horizontal block width');
model.param.set('blk_d', '1.9[m]');
model.param.descr('blk_d', 'Rectangle horizontal block depth');
model.param.set('blk_h', '0.15[m]');
model.param.descr('blk_h', 'Rectangle horizontal block height');
model.param.set('blk_shiftx', '5[cm]');
model.param.descr('blk_shiftx', 'Rectangle horizontal block x-shift');
model.param.set('blk_shifty', '-0.7[m]');
model.param.descr('blk_shifty', 'Rectangle horizontal block y-shift');
model.param.set('blk_shiftz', '1[m]');
model.param.descr('blk_shiftz', 'Rectangle horizontal block z-shift');
model.param.set('sq_l', '1[m]');
model.param.descr('sq_l', 'Square horizontal block side length');
model.param.set('sq_h', '5[cm]');
model.param.descr('sq_h', 'Square horizontal block height');
model.param.set('sq_shift', '0.2[m]');
model.param.descr('sq_shift', 'Square horizontal block shift');
model.param.create('par2');
model.param('par2').label('Parameters - Physics');

% To import content from file, use:
% model.param('par2').loadFile('FILENAME');
model.param('par2').set('T_gamma', '0[degC]', 'Gamma temperature');
model.param('par2').set('T_beta', '15[degC]', 'Beta temperature');
model.param('par2').set('T_alpha', '20[degC]', 'Alpha temperature');
model.param('par2').set('R_gamma', '0.05[m^2*K/W]', 'Gamma R-value');
model.param('par2').set('R_beta', '0.2[m^2*K/W]', 'Beta R-value');
model.param('par2').set('R_alpha', '0.2[m^2*K/W]', 'Alpha R-value');
model.param('par2').set('h_gamma', '1/R_gamma', 'Gamma heat transfer coefficient');
model.param('par2').set('h_beta', '1/R_beta', 'Beta heat transfer coefficient');
model.param('par2').set('h_alpha', '1/R_alpha', 'Alpha heat transfer coefficient');

model.geom('geom1').create('wp1', 'WorkPlane');
model.geom('geom1').feature('wp1').set('unite', true);
model.geom('geom1').feature('wp1').geom.create('r1', 'Rectangle');
model.geom('geom1').feature('wp1').geom.feature('r1').set('size', {'rect1' 'wall_t1'});
model.geom('geom1').feature('wp1').geom.run('r1');
model.geom('geom1').feature('wp1').geom.create('r2', 'Rectangle');
model.geom('geom1').feature('wp1').geom.feature('r2').set('size', {'wall_t1' 'rect1'});
model.geom('geom1').feature('wp1').geom.run('r2');
model.geom('geom1').feature('wp1').geom.create('uni1', 'Union');
model.geom('geom1').feature('wp1').geom.feature('uni1').selection('input').set({'r1' 'r2'});
model.geom('geom1').feature('wp1').geom.feature('uni1').set('intbnd', false);
model.geom('geom1').feature('wp1').geom.run('uni1');
model.geom('geom1').feature('wp1').geom.create('r3', 'Rectangle');
model.geom('geom1').feature('wp1').geom.feature('r3').set('size', {'rect2' 'wall_t2'});
model.geom('geom1').feature('wp1').geom.feature('r3').set('pos', {'rect_shift' 'rect_shift'});
model.geom('geom1').feature('wp1').geom.run('r3');
model.geom('geom1').feature('wp1').geom.create('r4', 'Rectangle');
model.geom('geom1').feature('wp1').geom.feature('r4').set('size', {'wall_t2' 'rect2'});
model.geom('geom1').feature('wp1').geom.feature('r4').set('pos', {'rect_shift' 'rect_shift'});
model.geom('geom1').feature('wp1').geom.run('r4');
model.geom('geom1').feature('wp1').geom.create('uni2', 'Union');
model.geom('geom1').feature('wp1').geom.feature('uni2').selection('input').set({'r3' 'r4'});
model.geom('geom1').feature('wp1').geom.feature('uni2').set('intbnd', false);
model.geom('geom1').feature('wp1').geom.run('uni2');
model.geom('geom1').run('wp1');
model.geom('geom1').feature.create('ext1', 'Extrude');
model.geom('geom1').feature('ext1').setIndex('distance', 'wall_h', 0);
model.geom('geom1').run('ext1');
model.geom('geom1').create('blk1', 'Block');
model.geom('geom1').feature('blk1').set('size', {'blk_w' 'blk_d' 'blk_h'});
model.geom('geom1').feature('blk1').set('pos', {'blk_shiftx' '0' '0'});
model.geom('geom1').feature('blk1').setIndex('pos', 'blk_shifty', 1);
model.geom('geom1').feature('blk1').setIndex('pos', 'blk_shiftz', 2);
model.geom('geom1').run('blk1');
model.geom('geom1').feature.duplicate('blk2', 'blk1');
model.geom('geom1').run('blk2');
model.geom('geom1').create('dif1', 'Difference');
model.geom('geom1').feature('dif1').selection('input').set({'ext1'});
model.geom('geom1').feature('dif1').selection('input2').set({'blk1'});
model.geom('geom1').run('dif1');
model.geom('geom1').create('blk3', 'Block');
model.geom('geom1').feature('blk3').set('size', {'sq_l' 'sq_l' 'sq_h'});
model.geom('geom1').feature('blk3').set('pos', {'sq_shift' 'sq_shift' '0'});
model.geom('geom1').feature('blk3').setIndex('pos', 'blk_shiftz+blk_h', 2);
model.geom('geom1').run('blk3');
model.geom('geom1').run('fin');
model.geom('geom1').create('ige1', 'IgnoreEdges');
model.geom('geom1').feature('ige1').selection('input').set('fin', [6 17 33 38 60 63]);
model.geom('geom1').run('ige1');
model.geom('geom1').create('sel1', 'ExplicitSelection');
model.geom('geom1').feature('sel1').selection('selection').set('ige1', [4 5]);
model.geom('geom1').feature('sel1').label('Interior wall');
model.geom('geom1').run('sel1');
model.geom('geom1').create('sel2', 'ExplicitSelection');
model.geom('geom1').feature('sel2').selection('selection').set('ige1', 2);
model.geom('geom1').feature('sel2').label('Isolation');
model.geom('geom1').run('sel2');
model.geom('geom1').create('sel3', 'ExplicitSelection');
model.geom('geom1').feature('sel3').label('Exterior wall');
model.geom('geom1').feature('sel3').selection('selection').set('ige1', 1);
model.geom('geom1').run('sel3');
model.geom('geom1').create('sel4', 'ExplicitSelection');
model.geom('geom1').feature('sel4').label('Horizontal Structure');
model.geom('geom1').feature('sel4').selection('selection').set('ige1', 3);
model.geom('geom1').run('sel4');
model.geom('geom1').create('sel5', 'ExplicitSelection');
model.geom('geom1').feature('sel5').label('Floor');
model.geom('geom1').feature('sel5').selection('selection').set('ige1', 6);
model.geom('geom1').run('sel5');
model.geom('geom1').create('sel6', 'ExplicitSelection');
model.geom('geom1').feature('sel6').label('Alpha');
model.geom('geom1').feature('sel6').selection('selection').init(2);
model.geom('geom1').feature('sel6').selection('selection').set('ige1', [33 34 35]);
model.geom('geom1').run('sel6');
model.geom('geom1').create('sel7', 'ExplicitSelection');
model.geom('geom1').feature('sel7').label('Beta');
model.geom('geom1').feature('sel7').selection('selection').init(2);
model.geom('geom1').feature('sel7').selection('selection').set('ige1', [39 40 41]);
model.geom('geom1').run('sel7');
model.geom('geom1').create('sel8', 'ExplicitSelection');
model.geom('geom1').feature('sel8').label('Gamma');
model.geom('geom1').feature('sel8').selection('selection').init(2);
model.geom('geom1').feature('sel8').selection('selection').set('ige1', [1 2 11 12 13 14]);
model.geom('geom1').run;

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').label('Interior Wall');
model.material('mat1').selection.named('geom1_sel1');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'0.7'});
model.material('mat1').propertyGroup('def').set('density', {'1700'});
model.material('mat1').propertyGroup('def').set('heatcapacity', {'800'});
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').label('Isolation');
model.material('mat2').selection.named('geom1_sel2');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'0.04'});
model.material('mat2').propertyGroup('def').set('density', {'200'});
model.material('mat2').propertyGroup('def').set('heatcapacity', {'1000'});
model.material.create('mat3', 'Common', 'comp1');
model.material('mat3').label('Exterior Wall');
model.material('mat3').selection.named('geom1_sel3');
model.material('mat3').propertyGroup('def').set('thermalconductivity', {'1'});
model.material('mat3').propertyGroup('def').set('density', {'2000'});
model.material('mat3').propertyGroup('def').set('heatcapacity', {'1000'});
model.material.create('mat4', 'Common', 'comp1');
model.material('mat4').label('Horizontal Structure');
model.material('mat4').selection.named('geom1_sel4');
model.material('mat4').propertyGroup('def').set('thermalconductivity', {'2.5'});
model.material('mat4').propertyGroup('def').set('density', {'5000'});
model.material('mat4').propertyGroup('def').set('heatcapacity', {'600'});
model.material.create('mat5', 'Common', 'comp1');
model.material('mat5').label('Floor');
model.material('mat5').selection.named('geom1_sel5');
model.material('mat5').propertyGroup('def').set('thermalconductivity', {'1'});
model.material('mat5').propertyGroup('def').set('density', {'1000'});
model.material('mat5').propertyGroup('def').set('heatcapacity', {'800'});

model.physics('ht').create('hf1', 'HeatFluxBoundary', 2);
model.physics('ht').feature('hf1').label('Heat Flux - Alpha');
model.physics('ht').feature('hf1').selection.named('geom1_sel6');
model.physics('ht').feature('hf1').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht').feature('hf1').set('h', 'h_alpha');
model.physics('ht').feature('hf1').set('Text', 'T_alpha');
model.physics('ht').create('hf2', 'HeatFluxBoundary', 2);
model.physics('ht').feature('hf2').label('Heat Flux - Beta');
model.physics('ht').feature('hf2').selection.named('geom1_sel7');
model.physics('ht').feature('hf2').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht').feature('hf2').set('h', 'h_beta');
model.physics('ht').feature('hf2').set('Text', 'T_beta');
model.physics('ht').create('hf3', 'HeatFluxBoundary', 2);
model.physics('ht').feature('hf3').selection.set([1 2 11 12 13 14]);
model.physics('ht').feature('hf3').label('Heat Flux - Gamma');
model.physics('ht').feature('hf3').selection.named('geom1_sel8');
model.physics('ht').feature('hf3').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht').feature('hf3').set('h', 'h_gamma');
model.physics('ht').feature('hf3').set('Text', 'T_gamma');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, heat transfer variables (ht)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 10000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, heat transfer variables (ht)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').label('Temperature (ht)');
model.result('pg1').set('data', 'dset1');
model.result('pg1').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond3/pcond3/pg1');
model.result('pg1').feature.create('vol1', 'Volume');
model.result('pg1').feature('vol1').set('showsolutionparams', 'on');
model.result('pg1').feature('vol1').set('solutionparams', 'parent');
model.result('pg1').feature('vol1').set('colortable', 'HeatCameraLight');
model.result('pg1').feature('vol1').set('smooth', 'internal');
model.result('pg1').feature('vol1').set('showsolutionparams', 'on');
model.result('pg1').feature('vol1').set('data', 'parent');
model.result('pg1').run;

model.view('view1').camera.setIndex('position', 14.79, 0);
model.view('view1').camera.setIndex('position', -3.81, 1);
model.view('view1').camera.set('position', [14.79 -3.81 8.44]);
model.view('view1').camera.setIndex('target', 0.56, 0);
model.view('view1').camera.setIndex('target', 0.25, 1);
model.view('view1').camera.set('target', [0.56 0.25 1]);
model.view('view1').camera.setIndex('up', -0.44, 0);
model.view('view1').camera.setIndex('up', '0.10', 1);
model.view('view1').camera.set('up', {'-0.44' '0.10' '0.89'});
model.view('view1').camera.setIndex('rotationpoint', 0.55, 0);
model.view('view1').camera.setIndex('rotationpoint', 0.25, 1);
model.view('view1').camera.set('rotationpoint', [0.55 0.25 1.08]);
model.view('view1').camera.setIndex('viewoffset', -0.017, 0);
model.view('view1').camera.set('viewoffset', [-0.017 -0.025]);
model.view('view1').camera.set('zoomanglefull', 17.54);

model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('vol1').set('unit', 'degC');
model.result('pg1').run;
model.result.numerical.create('min1', 'MinSurface');
model.result.numerical('min1').selection.named('geom1_sel6');
model.result.numerical('min1').setIndex('unit', 'degC', 0);
model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').comments('Surface Minimum 1');
model.result.numerical('min1').set('table', 'tbl1');
model.result.numerical('min1').setResult;
model.result.numerical.create('min2', 'MinSurface');
model.result.numerical('min2').selection.named('geom1_sel7');
model.result.numerical('min2').setIndex('unit', 'degC', 0);
model.result.table.create('tbl2', 'Table');
model.result.table('tbl2').comments('Surface Minimum 2');
model.result.numerical('min2').set('table', 'tbl2');
model.result.numerical('min2').setResult;
model.result.numerical.create('int1', 'IntSurface');
model.result.numerical('int1').set('intvolume', true);
model.result.numerical('int1').selection.named('geom1_sel6');
model.result.numerical('int1').set('expr', {'ht.q0'});
model.result.numerical('int1').set('descr', {'Inward heat flux'});
model.result.numerical('int1').set('unit', {'W'});
model.result.table.create('tbl3', 'Table');
model.result.table('tbl3').comments('Surface Integration 1');
model.result.numerical('int1').set('table', 'tbl3');
model.result.numerical('int1').setResult;
model.result.numerical.create('int2', 'IntSurface');
model.result.numerical('int2').set('intvolume', true);
model.result.numerical('int2').selection.named('geom1_sel7');
model.result.numerical('int2').set('expr', {'ht.q0'});
model.result.numerical('int2').set('descr', {'Inward heat flux'});
model.result.numerical('int2').set('unit', {'W'});
model.result.table.create('tbl4', 'Table');
model.result.table('tbl4').comments('Surface Integration 2');
model.result.numerical('int2').set('table', 'tbl4');
model.result.numerical('int2').setResult;
model.result.numerical.create('int3', 'IntSurface');
model.result.numerical('int3').set('intvolume', true);
model.result.numerical('int3').selection.named('geom1_sel8');
model.result.numerical('int3').set('expr', {'ht.q0'});
model.result.numerical('int3').set('descr', {'Inward heat flux'});
model.result.numerical('int3').set('unit', {'W'});
model.result.table.create('tbl5', 'Table');
model.result.table('tbl5').comments('Surface Integration 3');
model.result.numerical('int3').set('table', 'tbl5');
model.result.numerical('int3').setResult;
model.result('pg1').run;
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').run;
model.result('pg2').label('Minimum Temperature on Alpha');
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('unit', 'degC');
model.result('pg2').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg2').feature('surf1').create('sel1', 'Selection');
model.result('pg2').feature('surf1').feature('sel1').selection.named('geom1_sel6');
model.result('pg2').run;
model.result('pg2').create('mms1', 'MaxMinSurface');
model.result('pg2').feature('mms1').set('unit', 'degC');
model.result('pg2').feature('mms1').create('sel1', 'Selection');
model.result('pg2').feature('mms1').feature('sel1').selection.named('geom1_sel6');
model.result('pg2').run;

model.view('view1').camera.setIndex('position', 11, 0);
model.view('view1').camera.setIndex('position', 10, 1);
model.view('view1').camera.set('position', [11 10 -5]);
model.view('view1').camera.set('target', [1 1 1]);
model.view('view1').camera.setIndex('up', 0.05, 0);
model.view('view1').camera.setIndex('up', 0.05, 1);
model.view('view1').camera.set('up', [0.05 0.05 1]);
model.view('view1').camera.setIndex('rotationpoint', 1, 0);
model.view('view1').camera.setIndex('rotationpoint', 1, 1);
model.view('view1').camera.set('rotationpoint', [1 1 2]);
model.view('view1').camera.setIndex('viewoffset', 0.05, 1);

model.result('pg2').run;
model.result.duplicate('pg3', 'pg2');
model.result('pg3').run;
model.result('pg3').label('Minimum Temperature on Beta');
model.result('pg3').run;
model.result('pg3').feature('surf1').feature('sel1').selection.named('geom1_sel7');
model.result('pg3').run;
model.result('pg3').feature('mms1').feature('sel1').selection.named('geom1_sel7');
model.result('pg3').run;

model.view('view1').camera.setIndex('position', 11, 0);
model.view('view1').camera.setIndex('position', 10, 1);
model.view('view1').camera.set('position', [11 10 10]);
model.view('view1').camera.setIndex('target', 1, 0);
model.view('view1').camera.setIndex('target', 1, 1);
model.view('view1').camera.setIndex('up', 0.05, 0);
model.view('view1').camera.setIndex('up', 0.05, 1);
model.view('view1').camera.set('up', [0.05 0.05 1]);
model.view('view1').camera.setIndex('rotationpoint', 1, 0);
model.view('view1').camera.setIndex('rotationpoint', 1, 1);
model.view('view1').camera.set('rotationpoint', [1 1 2]);
model.view('view1').camera.setIndex('viewoffset', -0.1, 1);

model.result('pg3').run;

model.title(['Thermal Bridges in Building Construction ' native2unicode(hex2dec({'20' '14'}), 'unicode') ' 3D Structure Between Two Floors']);

model.description(['This example studies the heat conduction in a building structure separating two floors from the external environment. The structure is made of four materials with different thermal conductivities. The temperature distribution and the heat flux through the structure are compared with published data. This example corresponds to Case' native2unicode(hex2dec({'00' 'a0'}), 'unicode') '3 in the European standard EN ISO 10211:2017 for thermal bridges in building constructions.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;

model.label('thermal_bridge_3d_two_floors.mph');

model.modelNode.label('Components');

out = model;
