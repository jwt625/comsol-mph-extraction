function out = model
%
% single_mode_fiber_coupling.m
%
% Model exported on May 26 2025, 21:34 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Wave_Optics_Module/Couplers_Filters_and_Mirrors');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('ewbe', 'ElectromagneticWavesBeamEnvelopes', 'geom1');
model.physics('ewbe').model('comp1');

model.study.create('std1');
model.study('std1').create('bma', 'BoundaryModeAnalysis');
model.study('std1').feature('bma').set('shiftactive', false);
model.study('std1').feature('bma').set('conrad', '1');
model.study('std1').feature('bma').set('conradynhm', '1');
model.study('std1').feature('bma').set('linpsolnum', 'auto');
model.study('std1').feature('bma').set('solnum', 'auto');
model.study('std1').feature('bma').set('notsolnum', 'auto');
model.study('std1').feature('bma').set('outputmap', {});
model.study('std1').feature('bma').set('ngenAUX', '1');
model.study('std1').feature('bma').set('goalngenAUX', '1');
model.study('std1').feature('bma').set('ngenAUX', '1');
model.study('std1').feature('bma').set('goalngenAUX', '1');
model.study('std1').feature('bma').setSolveFor('/physics/ewbe', true);
model.study('std1').create('freq', 'Frequency');
model.study('std1').feature('freq').set('solnum', 'auto');
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('outputmap', {});
model.study('std1').feature('freq').set('ngenAUX', '1');
model.study('std1').feature('freq').set('goalngenAUX', '1');
model.study('std1').feature('freq').set('ngenAUX', '1');
model.study('std1').feature('freq').set('goalngenAUX', '1');
model.study('std1').feature('freq').setSolveFor('/physics/ewbe', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('h_clad', '40[um]', 'Cladding width');
model.param.set('h_core', '4[um]', 'Core width');
model.param.set('l_fiber', '100[um]', 'Fiber length');
model.param.set('f_lens', '50[um]', 'Focal length');
model.param.set('t_lens', '15[um]', 'Lens thickness');
model.param.set('df', '-4[um]', 'Focus adjustment');
model.param.set('t_PML', '1[um]', 'Perfectly matched layer thickness');
model.param.set('n_lens', '1.5', 'Refractive index, lens');
model.param.set('n_clad', '1.5', 'Refractive index, cladding');
model.param.set('n_core', '1.51', 'Refractive index, core');
model.param.set('lda0', '1[um]', 'Vacuum wavelength');
model.param.set('f0', 'c_const/lda0', 'Frequency');
model.param.set('l_dom', 'f_lens*2', 'Half of the coupling length');
model.param.set('lamc', '2*pi*h_core/2/2.405*sqrt(n_core^2-n_clad^2)', 'Single mode critical wavelength');
model.param.set('V', '2*pi/lda0*h_core/2*sqrt(n_core^2-n_clad^2)', 'Fiber parameter');
model.param.set('r_lens', '(n_lens-1)*f_lens', 'Lens radius of curvature');

model.geom('geom1').lengthUnit([native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']);
model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', {'l_fiber' 'h_core'});
model.geom('geom1').feature('r1').set('base', 'center');
model.geom('geom1').feature('r1').set('pos', {'-l_fiber/2-l_dom' '0'});
model.geom('geom1').feature.duplicate('r2', 'r1');
model.geom('geom1').feature('r2').set('size', {'l_fiber' 'h_clad'});
model.geom('geom1').feature('r2').setIndex('layername', 'Layer 1', 0);
model.geom('geom1').feature('r2').setIndex('layer', 't_PML', 0);
model.geom('geom1').feature('r2').set('layertop', true);
model.geom('geom1').run('r2');
model.geom('geom1').create('r3', 'Rectangle');
model.geom('geom1').feature('r3').set('size', {'l_dom' 'h_clad'});
model.geom('geom1').feature('r3').set('pos', {'-l_dom' '-h_clad/2'});
model.geom('geom1').feature('r3').setIndex('layername', 'Layer 1', 0);
model.geom('geom1').feature('r3').setIndex('layer', 't_PML', 0);
model.geom('geom1').feature('r3').set('layertop', true);
model.geom('geom1').run('r3');
model.geom('geom1').create('c1', 'Circle');
model.geom('geom1').feature('c1').set('r', 'r_lens');
model.geom('geom1').feature('c1').set('pos', {'r_lens' '0'});
model.geom('geom1').run('c1');
model.geom('geom1').create('r4', 'Rectangle');
model.geom('geom1').feature('r4').set('size', {'t_lens-(r_lens-sqrt(r_lens^2-h_clad^2/4))' '1'});
model.geom('geom1').feature('r4').setIndex('size', 'h_clad', 1);
model.geom('geom1').feature('r4').set('pos', {'r_lens-sqrt(r_lens^2-h_clad^2/4)' '0'});
model.geom('geom1').feature('r4').setIndex('pos', '-h_clad/2', 1);
model.geom('geom1').run('r4');
model.geom('geom1').create('uni1', 'Union');
model.geom('geom1').feature('uni1').selection('input').set({'c1' 'r4'});
model.geom('geom1').run('uni1');
model.geom('geom1').create('del1', 'Delete');
model.geom('geom1').feature('del1').selection('input').init(2);
model.geom('geom1').feature('del1').selection('input').set('uni1', 3);
model.geom('geom1').run('del1');
model.geom('geom1').create('uni2', 'Union');
model.geom('geom1').feature('uni2').selection('input').set({'del1'});
model.geom('geom1').feature('uni2').set('intbnd', false);
model.geom('geom1').run('uni2');
model.geom('geom1').create('rot1', 'Rotate');
model.geom('geom1').feature('rot1').selection('input').set({'uni2'});
model.geom('geom1').feature('rot1').set('rot', 180);
model.geom('geom1').run('rot1');
model.geom('geom1').create('mov1', 'Move');
model.geom('geom1').feature('mov1').selection('input').set({'rot1'});
model.geom('geom1').feature('mov1').set('displx', '-t_lens/2+f_lens+df-l_dom+t_lens');
model.geom('geom1').run('mov1');
model.geom('geom1').create('mir1', 'Mirror');
model.geom('geom1').feature('mir1').selection('input').set({'mov1' 'r1' 'r2' 'r3'});
model.geom('geom1').feature('mir1').set('keep', true);
model.geom('geom1').run('mir1');
model.geom('geom1').create('r5', 'Rectangle');
model.geom('geom1').feature('r5').set('size', {'t_PML' 'h_clad'});
model.geom('geom1').feature('r5').set('pos', {'l_dom+l_fiber-t_PML' '0'});
model.geom('geom1').feature('r5').setIndex('pos', '-h_clad/2', 1);
model.geom('geom1').runPre('fin');
model.geom('geom1').run;

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').label('Air');
model.material('mat1').propertyGroup.create('RefractiveIndex', 'Refractive_index');
model.material('mat1').propertyGroup('RefractiveIndex').set('n', {'1'});
model.material('mat1').propertyGroup('RefractiveIndex').set('ki', {'0'});
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').label('Lens');
model.material('mat2').selection.set([9 10 11 18 19 20]);
model.material('mat2').propertyGroup.create('RefractiveIndex', 'Refractive_index');
model.material('mat2').propertyGroup('RefractiveIndex').set('n', {'n_lens'});
model.material('mat2').propertyGroup('RefractiveIndex').set('ki', {'0'});
model.material.create('mat3', 'Common', 'comp1');
model.material('mat3').label('Core');
model.material('mat3').selection.set([3 26 31]);
model.material('mat3').propertyGroup.create('RefractiveIndex', 'Refractive_index');
model.material('mat3').propertyGroup('RefractiveIndex').set('n', {'n_core'});
model.material('mat3').propertyGroup('RefractiveIndex').set('ki', {'0'});
model.material.create('mat4', 'Common', 'comp1');
model.material('mat4').label('Cladding');
model.material('mat4').selection.set([1 2 4 5 24 25 27 28 29 30 32 33]);
model.material('mat4').propertyGroup.create('RefractiveIndex', 'Refractive_index');
model.material('mat4').propertyGroup('RefractiveIndex').set('n', {'n_clad'});
model.material('mat4').propertyGroup('RefractiveIndex').set('ki', {'0'});

model.physics('ewbe').prop('components').set('components', 'outofplane');
model.physics('ewbe').prop('WaveVector').set('dirCount', 'UniDirectionality');
model.physics('ewbe').prop('WaveVector').set('PhaseSpec', 'UserDefined');
model.physics('ewbe').prop('WaveVector').set('phase1', 'psi');
model.physics('ewbe').create('port1', 'Port', 1);
model.physics('ewbe').feature('port1').selection.set([3 5 7]);
model.physics('ewbe').feature('port1').set('PortType', 'Numeric');
model.physics('ewbe').create('port2', 'Port', 1);
model.physics('ewbe').feature('port2').selection.set([63 65 67]);
model.physics('ewbe').feature('port2').set('PortType', 'Numeric');
model.physics('ewbe').feature('port2').set('PortSlit', true);
model.physics('ewbe').feature('port2').set('SlitType', 'DomainBacked');
model.physics('ewbe').create('trans1', 'TransitionBoundaryCondition', 1);
model.physics('ewbe').feature('trans1').selection.set([12 14 16 17 18 50 52 54 56 58]);
model.physics('ewbe').feature('trans1').set('n_mat', 'userdef');
model.physics('ewbe').feature('trans1').set('n', 'sqrt(ewbe.neff_1)');
model.physics('ewbe').feature('trans1').set('ki_mat', 'userdef');
model.physics('ewbe').feature('trans1').set('d', 'lda0/4/sqrt(ewbe.neff_1)');
model.physics('ewbe').create('trans2', 'TransitionBoundaryCondition', 1);
model.physics('ewbe').feature('trans2').selection.set([21 23 25 43 45 47 77 78 79 80 81 82 83 84]);
model.physics('ewbe').feature('trans2').set('n_mat', 'userdef');
model.physics('ewbe').feature('trans2').set('n', 'sqrt(n_lens)');
model.physics('ewbe').feature('trans2').set('ki_mat', 'userdef');
model.physics('ewbe').feature('trans2').set('d', 'lda0/4/sqrt(n_lens)');

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').selection.geom('geom1', 2);
model.variable('var1').selection.set([1 2 3 4 5 24 25 26 27 28 29 30 31 32 33]);
model.variable('var1').set('psi', 'ewbe.beta_1*x');
model.variable('var1').descr('psi', '');
model.variable.create('var2');
model.variable('var2').model('comp1');
model.variable('var2').selection.geom('geom1', 2);
model.variable('var2').selection.set([6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23]);
model.variable('var2').set('psi', 'ewbe.k*x');
model.variable('var2').descr('psi', '');

model.coordSystem.create('pml1', 'geom1', 'PML');
model.coordSystem('pml1').selection.set([1 5 6 8 9 11 12 13 15 17 19 20 21 23 24 28 29 30 31 32 33]);

model.mesh('mesh1').run;
model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('distr1').label('Distribution - Air Space');
model.mesh('mesh1').feature('distr1').selection.set([13 28 33 44]);
model.mesh('mesh1').feature('distr1').set('numelem', 15);
model.mesh('mesh1').feature('distr2').label('Distribution - Core');
model.mesh('mesh1').feature('distr2').selection.set([5 74]);
model.mesh('mesh1').feature('distr2').set('numelem', 22);
model.mesh('mesh1').feature('distr3').label('Distribution - Cladding');
model.mesh('mesh1').feature('distr3').selection.set([3 7 73 75]);
model.mesh('mesh1').feature('distr3').set('numelem', 80);
model.mesh('mesh1').feature('distr4').label('Distribution - PML');
model.mesh('mesh1').feature('distr4').selection.set([1 9 61 64 69 70]);
model.mesh('mesh1').feature('distr4').set('numelem', 10);
model.mesh('mesh1').feature('distr5').label('Distribution - Input Fiber');
model.mesh('mesh1').feature('distr5').selection.set([2]);
model.mesh('mesh1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('dis1').label('Distribution - Output Fiber');
model.mesh('mesh1').feature('dis1').selection.set([51]);
model.mesh('mesh1').feature('dis1').set('numelem', 20);
model.mesh('mesh1').feature.move('dis1', 6);
model.mesh('mesh1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('dis2').label('Distribution - Lens');
model.mesh('mesh1').feature('dis2').selection.set([22 41]);
model.mesh('mesh1').run;

model.study('std1').feature('bma').set('modeFreq', 'f0');
model.study('std1').feature('bma').set('shiftactive', true);
model.study('std1').feature('bma').set('shift', 'n_core');
model.study('std1').feature.duplicate('bma1', 'bma');
model.study('std1').feature('bma1').set('PortName', '2');
model.study('std1').feature.move('bma1', 1);
model.study('std1').feature('freq').set('plist', 'f0');
model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'h_clad', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);
model.study('std1').feature('param').setIndex('pname', 'h_clad', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);
model.study('std1').feature('param').setIndex('pname', 'df', 0);
model.study('std1').feature('param').setIndex('plistarr', '-25 -20 -15 range(-10,2,10) 15 20 25', 0);
model.study('std1').feature('param').setIndex('punit', 'um', 0);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'bma');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'bma');
model.sol('sol1').create('e1', 'Eigenvalue');
model.sol('sol1').feature('e1').set('neigs', 1);
model.sol('sol1').feature('e1').set('shift', '1');
model.sol('sol1').feature('e1').set('eigref', 'n_core');
model.sol('sol1').feature('e1').set('control', 'bma');
model.sol('sol1').feature('e1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('e1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('e1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('e1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('e1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'bma1');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'bma1');
model.sol('sol1').create('e2', 'Eigenvalue');
model.sol('sol1').feature('e2').set('neigs', 1);
model.sol('sol1').feature('e2').set('shift', '1');
model.sol('sol1').feature('e2').set('eigref', 'n_core');
model.sol('sol1').feature('e2').set('control', 'bma1');
model.sol('sol1').feature('e2').set('linpmethod', 'sol');
model.sol('sol1').feature('e2').set('linpsol', 'sol1');
model.sol('sol1').feature('e2').set('control', 'bma1');
model.sol('sol1').feature('e2').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('e2').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('e2').feature('aDef').set('matherr', true);
model.sol('sol1').feature('e2').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('e2').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').create('su2', 'StoreSolution');
model.sol('sol1').create('st3', 'StudyStep');
model.sol('sol1').feature('st3').set('study', 'std1');
model.sol('sol1').feature('st3').set('studystep', 'freq');
model.sol('sol1').create('v3', 'Variables');
model.sol('sol1').feature('v3').set('initmethod', 'sol');
model.sol('sol1').feature('v3').set('initsol', 'sol1');
model.sol('sol1').feature('v3').set('notsolmethod', 'sol');
model.sol('sol1').feature('v3').set('notsol', 'sol1');
model.sol('sol1').feature('v3').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'f0'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'THz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'Default');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('v3').set('notsolnum', 'auto');
model.sol('sol1').feature('v3').set('notsolvertype', 'solnum');
model.sol('sol1').feature('v3').set('solnum', 'auto');
model.sol('sol1').feature('v3').set('solvertype', 'solnum');
model.sol('sol1').feature('e2').set('linpsolnum', 'auto');
model.sol('sol1').feature('e2').set('linpsolvertype', 'solnum');
model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol1').feature('v2').set('solnum', 'auto');
model.sol('sol1').feature('v2').set('solvertype', 'solnum');
model.sol('sol1').attach('std1');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'df'});
model.batch('p1').set('plistarr', {'-25 -20 -15 range(-10,2,10) 15 20 25'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol.create('sol4');
model.sol('sol4').study('std1');
model.sol('sol4').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol4');
model.batch('p1').run('compute');

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').label('Electric Field (ewbe)');
model.result('pg1').set('data', 'dset4');
model.result('pg1').setIndex('looplevel', 1, 0);
model.result('pg1').setIndex('looplevel', 17, 1);
model.result('pg1').set('data', 'dset4');
model.result('pg1').setIndex('looplevel', 1, 0);
model.result('pg1').setIndex('looplevel', 17, 1);
model.result('pg1').set('defaultPlotID', 'ElectromagneticWavesBeamEnvelopes/phys1/pdef1/pcond2/pg1');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').label('Electric Field');
model.result('pg1').feature('surf1').set('smooth', 'internal');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').set('data', 'dset4');
model.result('pg2').create('glob1', 'Global');
model.result('pg2').feature('glob1').set('unit', {'' '' '' ''});
model.result('pg2').feature('glob1').set('expr', {'ewbe.Rport_1' 'ewbe.Tport_2' 'ewbe.RTtotal' 'ewbe.Atotal'});
model.result('pg2').feature('glob1').set('descr', {'Reflectance, port 1' 'Transmittance, port 2' 'Total reflectance and transmittance' 'Absorptance'});
model.result('pg2').label('Reflectance, Transmittance, and Absorptance (ewbe)');
model.result('pg2').feature('glob1').set('titletype', 'none');
model.result('pg2').feature('glob1').set('xdata', 'expr');
model.result('pg2').set('ylabelactive', true);
model.result('pg2').set('ylabel', 'Reflectance, transmittance, and absorptance (1)');
model.result('pg2').feature('glob1').set('xdataexpr', 'df');
model.result('pg2').feature('glob1').set('xdataunit', 'um');
model.result('pg2').feature('glob1').set('markerpos', 'datapoints');
model.result('pg2').feature('glob1').set('xdatasolnumtype', 'all');
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').label('Electric Mode Field, Port 1 (ewbe)');
model.result('pg3').set('showlegendsmaxmin', true);
model.result('pg3').set('data', 'dset4');
model.result('pg3').create('lngr1', 'LineGraph');
model.result('pg3').feature('lngr1').selection.set([3 5 7]);
model.result('pg3').feature('lngr1').set('expr', 'root.comp1.ewbe.normEbm_1');
model.result('pg3').feature('lngr1').set('legend', true);
model.result('pg3').feature('lngr1').set('legendmethod', 'evaluated');
model.result('pg3').feature('lngr1').set('legendpattern', 'Effective mode index: eval(comp1.ewbe.neff_1)');
model.result('pg3').feature('lngr1').set('legendexprprecision', 5);
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').label('Electric Mode Field, Port 2 (ewbe)');
model.result('pg4').set('showlegendsmaxmin', true);
model.result('pg4').set('data', 'dset4');
model.result('pg4').create('lngr1', 'LineGraph');
model.result('pg4').feature('lngr1').selection.set([63 65 67]);
model.result('pg4').feature('lngr1').set('expr', 'root.comp1.ewbe.normEbm_2');
model.result('pg4').feature('lngr1').set('legend', true);
model.result('pg4').feature('lngr1').set('legendmethod', 'evaluated');
model.result('pg4').feature('lngr1').set('legendpattern', 'Effective mode index: eval(comp1.ewbe.neff_2)');
model.result('pg4').feature('lngr1').set('legendexprprecision', 5);
model.result('pg1').run;
model.result('pg2').run;
model.result('pg2').label('Reflectance, Transmittance, and Loss(ewbe)');
model.result('pg2').set('ylabel', 'Reflectance, transmittance, and loss (1)');
model.result('pg2').run;
model.result('pg2').feature('glob1').remove('unit', 2);
model.result('pg2').feature('glob1').remove('descr', 2);
model.result('pg2').feature('glob1').remove('expr', [2]);
model.result('pg2').feature('glob1').setIndex('unit', 1, 2);
model.result('pg2').feature('glob1').setIndex('descr', 'Loss', 2);
model.result('pg2').run;
model.result('pg1').run;
model.result('pg1').setIndex('looplevel', 7, 1);
model.result('pg1').run;
model.result('pg1').feature('surf1').set('colortable', 'AuroraAustralis');
model.result('pg1').run;
model.result('pg3').run;
model.result('pg3').setIndex('looplevelinput', 'first', 1);
model.result('pg3').run;
model.result('pg4').run;
model.result('pg4').setIndex('looplevelinput', 'first', 1);
model.result('pg4').run;
model.result('pg1').run;

model.title('Single Mode Fiber-to-Fiber Coupling');

model.description(['Focusing a laser beam onto the tip of a single mode fiber is a common way to couple light. To achieve a good coupling efficiency, the spatial mode of the light field has to match the spatial model of the fiber.' newline  newline 'In this model, we use the Electromagnetic Waves, Beam Envelopes physics interface to compute the free space coupling between two small fiber ends. The coupling efficiency depends on the position of the coupling lenses.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;
model.sol('sol8').clearSolutionData;
model.sol('sol9').clearSolutionData;
model.sol('sol10').clearSolutionData;
model.sol('sol11').clearSolutionData;
model.sol('sol12').clearSolutionData;
model.sol('sol13').clearSolutionData;
model.sol('sol14').clearSolutionData;
model.sol('sol15').clearSolutionData;
model.sol('sol16').clearSolutionData;
model.sol('sol17').clearSolutionData;
model.sol('sol18').clearSolutionData;
model.sol('sol19').clearSolutionData;
model.sol('sol20').clearSolutionData;
model.sol('sol21').clearSolutionData;

model.label('single_mode_fiber_coupling.mph');

model.modelNode.label('Components');

out = model;
