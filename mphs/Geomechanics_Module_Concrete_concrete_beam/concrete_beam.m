function out = model
%
% concrete_beam.m
%
% Model exported on May 26 2025, 21:28 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Geomechanics_Module/Concrete');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');
model.physics.create('truss', 'Truss', 'geom1');
model.physics('truss').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/solid', true);
model.study('std1').feature('stat').setSolveFor('/physics/truss', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('height', '200[mm]', 'Height of the beam');
model.param.set('width', '300[mm]', 'Width of the beam');
model.param.set('length', '4[m]', 'Length of the beam');
model.param.set('height_reinforcement', '2*layer_spacing_first+(bar_layers-1)*layer_spacing', 'Height of the reinforced area');
model.param.set('diam_bar', '10[mm]', 'Diameter of the bar');
model.param.set('area_bar', 'pi*diam_bar^2/4', 'Cross-section area of a bar');
model.param.set('bar_layers', '2', 'Number of bar layers');
model.param.set('layer_spacing', '20[mm]', 'Layer spacing');
model.param.set('layer_spacing_first', '10[mm]', 'Distance from surface of first rebars layer');
model.param.set('width_spacing', '50[mm]', 'Width spacing');
model.param.set('width_spacing_firstmin', '25[mm]', 'Minimal lateral distance from rebars to beam surface');
model.param.set('bars_across_width', 'floor((width-2*width_spacing_firstmin)/width_spacing)+1', 'Number of bars across the width');
model.param.set('width_spacing_first', '(width-(bars_across_width-1)*width_spacing)/2', 'Y distance from surface of rebars');
model.param.set('v_reinforcement', 'bar_layers*bars_across_width*area_bar/(height_reinforcement*width)', 'Reinforcement volume fraction');
model.param.set('max_defl', '-30[mm]', 'Maximum deflection');
model.param.set('mesh_par', '1', 'Mesh distribution multiplier');
model.param.set('para', '0', 'Parameter used for parametric sweep');

model.geom('geom1').create('blk1', 'Block');
model.geom('geom1').feature('blk1').set('size', {'length/2' 'width/2' '1'});
model.geom('geom1').feature('blk1').setIndex('size', 'height', 2);
model.geom('geom1').feature('blk1').setIndex('layer', 'height_reinforcement', 0);
model.geom('geom1').feature('blk1').setIndex('layer', 'height-2*height_reinforcement', 1);
model.geom('geom1').run('blk1');
model.geom('geom1').create('ls1', 'LineSegment');
model.geom('geom1').feature('ls1').set('specify1', 'coord');
model.geom('geom1').feature('ls1').set('specify2', 'coord');
model.geom('geom1').feature('ls1').set('coord2', {'length/2' '0' '0'});
model.geom('geom1').feature('ls1').set('coord1', {'0' '(bars_across_width-1)/2*width_spacing' '0'});
model.geom('geom1').feature('ls1').set('coord2', {'length/2' '(bars_across_width-1)/2*width_spacing' '0'});
model.geom('geom1').feature('ls1').setIndex('coord1', 'layer_spacing_first', 2);
model.geom('geom1').feature('ls1').setIndex('coord2', 'layer_spacing_first', 2);
model.geom('geom1').selection.create('csel1', 'CumulativeSelection');
model.geom('geom1').selection('csel1').label('Bars Inside Domain');
model.geom('geom1').feature('ls1').set('contributeto', 'csel1');
model.geom('geom1').run('ls1');
model.geom('geom1').create('arr1', 'Array');
model.geom('geom1').feature('arr1').selection('input').named('csel1');
model.geom('geom1').feature('arr1').set('fullsize', {'1' 'floor(bars_across_width/2)' '1'});
model.geom('geom1').feature('arr1').set('displ', {'0' '-width_spacing' '0'});
model.geom('geom1').run('arr1');
model.geom('geom1').create('ls2', 'LineSegment');
model.geom('geom1').feature('ls2').set('specify1', 'coord');
model.geom('geom1').feature('ls2').set('specify2', 'coord');
model.geom('geom1').feature('ls2').set('coord2', {'length/2' '0' '0'});
model.geom('geom1').feature('ls2').set('coord1', {'0' '0' 'layer_spacing_first'});
model.geom('geom1').feature('ls2').set('coord2', {'length/2' '0' 'layer_spacing_first'});
model.geom('geom1').selection.create('csel2', 'CumulativeSelection');
model.geom('geom1').selection('csel2').label('Bars on Symmetry Plane');
model.geom('geom1').feature('ls2').set('contributeto', 'csel2');
model.geom('geom1').run('ls2');
model.geom('geom1').create('arr2', 'Array');
model.geom('geom1').feature('arr2').selection('input').set({'arr1' 'ls2'});
model.geom('geom1').feature('arr2').set('fullsize', {'1' '1' 'bar_layers'});
model.geom('geom1').feature('arr2').set('displ', {'0' '0' 'layer_spacing'});
model.geom('geom1').run('arr2');
model.geom('geom1').create('mir1', 'Mirror');

model.view('view1').camera.set('zoomanglefull', 2);
model.view('view1').camera.setIndex('viewoffset', 2, 0);
model.view('view1').camera.set('viewoffset', [2 1.1]);
model.view('view1').set('renderwireframe', true);

model.geom('geom1').feature('mir1').selection('input').set({'arr2(1,1,1,1)' 'arr2(1,1,1,2)' 'arr2(1,1,1,3)' 'arr2(1,1,2,1)' 'arr2(1,1,2,2)' 'arr2(1,1,2,3)'});

model.view('view1').set('renderwireframe', false);

model.geom('geom1').feature('mir1').set('pos', {'0' '0' 'height/2'});
model.geom('geom1').runPre('fin');
model.geom('geom1').feature('mir1').set('keep', true);
model.geom('geom1').runPre('fin');
model.geom('geom1').feature('fin').set('action', 'assembly');
model.geom('geom1').feature('fin').set('createpairs', false);
model.geom('geom1').feature.createAfter('if1', 'If', 'arr1');
model.geom('geom1').feature('if1').set('condition', 'mod(bars_across_width,2)==1');
model.geom('geom1').feature.createAfter('endif1', 'EndIf', 'ls2');
model.geom('geom1').runPre('fin');

model.selection.create('uni1', 'Union');
model.selection('uni1').model('comp1');

model.geom('geom1').run;

model.selection('uni1').label('Bars');
model.selection('uni1').set('entitydim', 1);
model.selection('uni1').set('input', {'geom1_csel1_edg' 'geom1_csel2_edg'});

model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl('intop1').set('axisym', true);
model.cpl('intop1').selection.geom('geom1', 0);
model.cpl('intop1').label('Deflection');
model.cpl('intop1').selection.set([12]);
model.cpl('intop1').set('frame', 'material');

model.physics('solid').feature('lemm1').create('cm1', 'Concrete', 3);
model.physics('solid').feature('lemm1').feature('cm1').set('ConcreteCriterion', 'Ottosen');
model.physics('solid').create('sym1', 'SymmetrySolid', 2);
model.physics('solid').feature('sym1').selection.set([2 5 8 14 15 16]);
model.physics('solid').create('rig1', 'RigidConnector', 2);
model.physics('solid').feature('rig1').selection.set([1 4 7]);
model.physics('solid').feature('rig1').setIndex('Direction', true, 1);
model.physics('solid').feature('rig1').setIndex('Direction', true, 2);
model.physics('solid').feature('rig1').set('RotationType', 'ConstrainedRotationGroup');
model.physics('solid').feature('rig1').setIndex('ConstrainedRotation', true, 0);
model.physics('solid').feature('rig1').setIndex('ConstrainedRotation', true, 2);
model.physics('solid').create('bndl1', 'BoundaryLoad', 2);
model.physics('solid').feature('bndl1').selection.set([10]);
model.physics('solid').feature('bndl1').set('FperArea', {'0' '0' 'load'});
model.physics('solid').create('ge1', 'GlobalEquations', -1);
model.physics('solid').feature('ge1').setIndex('name', 'load', 0, 0);
model.physics('solid').feature('ge1').setIndex('equation', 'intop1(w)-para*max_defl', 0, 0);
model.physics('solid').feature('ge1').set('DependentVariableQuantity', 'faceload');
model.physics('solid').feature('ge1').set('SourceTermQuantity', 'displacement');
model.physics('truss').selection.named('uni1');
model.physics('truss').prop('ShapeProperty').set('order_displacement', 2);
model.physics('truss').feature('emm1').create('plsty1', 'Plasticity', 1);
model.physics('truss').feature('csd1').set('area', 'pi*(diam_bar/2)^2*(0.5+0.5*Y>0.1[mm])');

model.multiphysics.create('ere1', 'EmbeddedReinforcement', 'geom1', -1);
model.multiphysics('ere1').selection('dstEdgSel').named('geom1_csel1_edg');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat1').label('Concrete');
model.material('mat1').set('family', 'concrete');
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'10e-6[1/K]' '0' '0' '0' '10e-6[1/K]' '0' '0' '0' '10e-6[1/K]'});
model.material('mat1').propertyGroup('def').set('density', '2300[kg/m^3]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'1.8[W/(m*K)]' '0' '0' '0' '1.8[W/(m*K)]' '0' '0' '0' '1.8[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', '880[J/(kg*K)]');
model.material('mat1').propertyGroup('Enu').set('E', '25[GPa]');
model.material('mat1').propertyGroup('Enu').set('nu', '0.20');
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat2').propertyGroup('Enu').func.create('int1', 'Interpolation');
model.material('mat2').propertyGroup('Enu').func.create('int2', 'Interpolation');
model.material('mat2').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat2').propertyGroup.create('ElastoplasticModel', 'Elastoplastic material model');
model.material('mat2').propertyGroup('ElastoplasticModel').func.create('int1', 'Interpolation');
model.material('mat2').propertyGroup.create('Ludwik', 'Ludwik');
model.material('mat2').propertyGroup('Ludwik').func.create('int1', 'Interpolation');
model.material('mat2').propertyGroup.create('JohnsonCook', 'Johnson-Cook');
model.material('mat2').propertyGroup.create('Swift', 'Swift');
model.material('mat2').propertyGroup.create('Voce', 'Voce');
model.material('mat2').propertyGroup('Voce').func.create('int1', 'Interpolation');
model.material('mat2').propertyGroup.create('HockettSherby', 'Hockett-Sherby');
model.material('mat2').propertyGroup('HockettSherby').func.create('int1', 'Interpolation');
model.material('mat2').propertyGroup.create('ArmstrongFrederick', 'Armstrong-Frederick');
model.material('mat2').propertyGroup('ArmstrongFrederick').func.create('int1', 'Interpolation');
model.material('mat2').propertyGroup.create('Norton', 'Norton');
model.material('mat2').propertyGroup.create('Garofalo', 'Garofalo (hyperbolic sine)');
model.material('mat2').propertyGroup.create('ChabocheViscoplasticity', 'Chaboche viscoplasticity');
model.material('mat2').label('Structural steel');
model.material('mat2').set('family', 'custom');
model.material('mat2').set('customspecular', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat2').set('customdiffuse', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat2').set('customambient', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat2').set('noise', true);
model.material('mat2').set('fresnel', 0.9);
model.material('mat2').set('roughness', 0.3);
model.material('mat2').set('metallic', 0);
model.material('mat2').set('pearl', 0);
model.material('mat2').set('diffusewrap', 0);
model.material('mat2').set('clearcoat', 0);
model.material('mat2').set('reflectance', 0);
model.material('mat2').propertyGroup('def').set('lossfactor', '0.02');
model.material('mat2').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('heatcapacity', '475[J/(kg*K)]');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]'});
model.material('mat2').propertyGroup('def').set('electricconductivity', {'4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]'});
model.material('mat2').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]'});
model.material('mat2').propertyGroup('def').set('density', '7850[kg/m^3]');
model.material('mat2').propertyGroup('Enu').func('int1').set('funcname', 'E');
model.material('mat2').propertyGroup('Enu').func('int1').set('table', {'293.15' '200e9'; '793.15' '166.6e9'});
model.material('mat2').propertyGroup('Enu').func('int1').set('extrap', 'linear');
model.material('mat2').propertyGroup('Enu').func('int1').set('fununit', {'Pa'});
model.material('mat2').propertyGroup('Enu').func('int1').set('argunit', {'K'});
model.material('mat2').propertyGroup('Enu').func('int2').set('funcname', 'nu');
model.material('mat2').propertyGroup('Enu').func('int2').set('table', {'293.15' '0.30'; '793.15' '0.315'});
model.material('mat2').propertyGroup('Enu').func('int2').set('extrap', 'linear');
model.material('mat2').propertyGroup('Enu').func('int2').set('fununit', {'1'});
model.material('mat2').propertyGroup('Enu').func('int2').set('argunit', {'K'});
model.material('mat2').propertyGroup('Enu').set('E', 'E(T)');
model.material('mat2').propertyGroup('Enu').set('nu', 'nu(T)');
model.material('mat2').propertyGroup('Enu').addInput('temperature');
model.material('mat2').propertyGroup('Murnaghan').set('l', '-3.0e11[Pa]');
model.material('mat2').propertyGroup('Murnaghan').set('m', '-6.2e11[Pa]');
model.material('mat2').propertyGroup('Murnaghan').set('n', '-7.2e11[Pa]');
model.material('mat2').propertyGroup('ElastoplasticModel').func('int1').set('funcname', 'a');
model.material('mat2').propertyGroup('ElastoplasticModel').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat2').propertyGroup('ElastoplasticModel').func('int1').set('fununit', {'1'});
model.material('mat2').propertyGroup('ElastoplasticModel').func('int1').set('argunit', {'K'});
model.material('mat2').propertyGroup('ElastoplasticModel').set('sigmags', '350[MPa]*a(T)');
model.material('mat2').propertyGroup('ElastoplasticModel').set('Et', '1.045[GPa]*a(T)');
model.material('mat2').propertyGroup('ElastoplasticModel').set('Ek', '1.045[GPa]*a(T)');
model.material('mat2').propertyGroup('ElastoplasticModel').set('sigmagh', '1.050[GPa]*epe*a(T)');
model.material('mat2').propertyGroup('ElastoplasticModel').addInput('temperature');
model.material('mat2').propertyGroup('ElastoplasticModel').addInput('effectiveplasticstrain');
model.material('mat2').propertyGroup('Ludwik').func('int1').set('funcname', 'a');
model.material('mat2').propertyGroup('Ludwik').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat2').propertyGroup('Ludwik').func('int1').set('fununit', {'1'});
model.material('mat2').propertyGroup('Ludwik').func('int1').set('argunit', {'K'});
model.material('mat2').propertyGroup('Ludwik').set('k_lud', '560[MPa]*a(T)');
model.material('mat2').propertyGroup('Ludwik').set('n_lud', '0.61');
model.material('mat2').propertyGroup('Ludwik').addInput('temperature');
model.material('mat2').propertyGroup('JohnsonCook').set('k_jcook', '560[MPa]');
model.material('mat2').propertyGroup('JohnsonCook').set('n_jcook', '0.61');
model.material('mat2').propertyGroup('JohnsonCook').set('C_jcook', '0.12');
model.material('mat2').propertyGroup('JohnsonCook').set('epet0_jcook', '1[1/s]');
model.material('mat2').propertyGroup('JohnsonCook').set('m_jcook', '0.6');
model.material('mat2').propertyGroup('Swift').set('e0_swi', '0.021');
model.material('mat2').propertyGroup('Swift').set('n_swi', '0.2');
model.material('mat2').propertyGroup('Voce').func('int1').set('funcname', 'a');
model.material('mat2').propertyGroup('Voce').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat2').propertyGroup('Voce').func('int1').set('fununit', {'1'});
model.material('mat2').propertyGroup('Voce').func('int1').set('argunit', {'K'});
model.material('mat2').propertyGroup('Voce').set('sigma_voc', '249[MPa]*a(T)');
model.material('mat2').propertyGroup('Voce').set('beta_voc', '9.3');
model.material('mat2').propertyGroup('Voce').addInput('temperature');
model.material('mat2').propertyGroup('HockettSherby').func('int1').set('funcname', 'a');
model.material('mat2').propertyGroup('HockettSherby').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat2').propertyGroup('HockettSherby').func('int1').set('fununit', {'1'});
model.material('mat2').propertyGroup('HockettSherby').func('int1').set('argunit', {'K'});
model.material('mat2').propertyGroup('HockettSherby').set('sigma_hoc', '684[MPa]*a(T)');
model.material('mat2').propertyGroup('HockettSherby').set('m_hoc', '3.9');
model.material('mat2').propertyGroup('HockettSherby').set('n_hoc', '0.85');
model.material('mat2').propertyGroup('HockettSherby').addInput('temperature');
model.material('mat2').propertyGroup('ArmstrongFrederick').func('int1').set('funcname', 'a');
model.material('mat2').propertyGroup('ArmstrongFrederick').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat2').propertyGroup('ArmstrongFrederick').func('int1').set('fununit', {'1'});
model.material('mat2').propertyGroup('ArmstrongFrederick').func('int1').set('argunit', {'K'});
model.material('mat2').propertyGroup('ArmstrongFrederick').set('Ck', '2.070[GPa]*a(T)');
model.material('mat2').propertyGroup('ArmstrongFrederick').set('gammak', '8.0');
model.material('mat2').propertyGroup('ArmstrongFrederick').addInput('temperature');
model.material('mat2').propertyGroup('Norton').set('A_nor', '1.2e-15[1/s]');
model.material('mat2').propertyGroup('Norton').set('sigRef_nor', '1[MPa]');
model.material('mat2').propertyGroup('Norton').set('n_nor', '4.5');
model.material('mat2').propertyGroup('Garofalo').set('A_gar', '1e-6[1/s]');
model.material('mat2').propertyGroup('Garofalo').set('sigRef_gar', '100[MPa]');
model.material('mat2').propertyGroup('Garofalo').set('n_gar', '4.6');
model.material('mat2').propertyGroup('ChabocheViscoplasticity').set('A_cha', '1');
model.material('mat2').propertyGroup('ChabocheViscoplasticity').set('sigRef_cha', '490[MPa]');
model.material('mat2').propertyGroup('ChabocheViscoplasticity').set('n_cha', '9');
model.material('mat1').propertyGroup.create('YieldStressParameters', 'Yield_stress_parameters');
model.material('mat1').propertyGroup('YieldStressParameters').set('sigmauc', {'20e6'});
model.material('mat1').propertyGroup.create('Ottosen', 'Ottosen_criterion');
model.material('mat1').propertyGroup('Ottosen').set('aOttosen', {'1.3'});
model.material('mat1').propertyGroup('Ottosen').set('bOttosen', {'3.2'});
model.material('mat1').propertyGroup('Ottosen').set('k1Ottosen', {'11.8'});
model.material('mat1').propertyGroup('Ottosen').set('k2Ottosen', {'0.98'});
model.material('mat2').selection.geom('geom1', 1);
model.material('mat2').selection.named('uni1');
model.material('mat2').propertyGroup('ElastoplasticModel').set('sigmags', {'100[MPa]'});
model.material('mat2').propertyGroup('ElastoplasticModel').set('Et', {'20[GPa]'});

model.mesh('mesh1').create('edg1', 'Edge');
model.mesh('mesh1').feature('edg1').selection.named('uni1');
model.mesh('mesh1').feature('edg1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('edg1').feature('dis1').set('numelem', '20*mesh_par');
model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.set([1 4 7]);
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([4 10]);
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', '6*mesh_par');
model.mesh('mesh1').feature('map1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis2').selection.set([1 7]);
model.mesh('mesh1').feature('map1').feature('dis2').set('numelem', '2*mesh_par');
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis1').set('numelem', '20*mesh_par');
model.mesh('mesh1').run;

model.study('std1').label('Without Bars');
model.study('std1').feature('stat').set('useadvanceddisable', true);
model.study('std1').feature('stat').set('disabledphysics', {'solid/lemm1/cm1'});
model.study('std1').feature('stat').setSolveFor('/physics/truss', false);
model.study('std1').feature('stat').set('disabledphysics', {'solid/lemm1/cm1' 'truss'});
model.study('std1').feature('stat').setSolveFor('/multiphysics/ere1', false);
model.study('std1').feature('stat').set('disabledcoupling', {'ere1'});
model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 'height', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'm', 0);
model.study('std1').feature('stat').setIndex('pname', 'height', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'm', 0);
model.study('std1').feature('stat').setIndex('pname', 'para', 0);
model.study('std1').feature('stat').setIndex('plistarr', 'range(0,0.025,1)', 0);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_rot').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_disp').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_rot').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_disp').set('scaleval', '0.020155644370746375');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_rot').set('scaleval', '0.01');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*2.0155644370746373');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s1').set('control', 'stat');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('s1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol1').feature('s1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('s1').feature('p1').create('st1', 'StopCondition');
model.sol('sol1').feature('s1').feature('p1').feature('st1').setIndex('stopcondarr', '', 0);
model.sol('sol1').feature('s1').feature('p1').feature('st1').setIndex('stopcondterminateon', 'true', 0);
model.sol('sol1').feature('s1').feature('p1').feature('st1').setIndex('stopcondActive', true, 0);
model.sol('sol1').feature('s1').feature('p1').feature('st1').setIndex('stopconddesc', 'Stop expression 1', 0);
model.sol('sol1').feature('s1').feature('p1').feature('st1').setIndex('stopcondarr', '', 0);
model.sol('sol1').feature('s1').feature('p1').feature('st1').setIndex('stopcondterminateon', 'true', 0);
model.sol('sol1').feature('s1').feature('p1').feature('st1').setIndex('stopcondActive', true, 0);
model.sol('sol1').feature('s1').feature('p1').feature('st1').setIndex('stopconddesc', 'Stop expression 1', 0);
model.sol('sol1').feature('s1').feature('p1').feature('st1').setIndex('stopcondarr', 'comp1.load<-50e3', 0);
model.sol('sol1').feature('s1').feature('p1').feature('st1').set('storestopcondsol', 'stepafter');
model.sol('sol1').feature('s1').feature('p1').feature('st1').set('stopcondwarn', false);
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 15, 0);
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('vol1', 'Volume');
model.result('pg1').feature('vol1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('vol1').set('threshold', 'manual');
model.result('pg1').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg1').feature('vol1').set('colortable', 'Rainbow');
model.result('pg1').feature('vol1').set('colortabletrans', 'none');
model.result('pg1').feature('vol1').set('colorscalemode', 'linear');
model.result('pg1').feature('vol1').set('resolution', 'custom');
model.result('pg1').feature('vol1').set('refine', 2);
model.result('pg1').feature('vol1').set('colortable', 'Prism');
model.result('pg1').feature('vol1').create('def', 'Deform');
model.result('pg1').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg1').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result('pg1').run;
model.result.dataset.create('mir1', 'Mirror3D');
model.result.dataset('mir1').set('quickplane', 'zx');
model.result.dataset.create('mir2', 'Mirror3D');
model.result.dataset('mir2').set('data', 'mir1');
model.result.dataset('mir2').set('quickx', 'length/2');
model.result('pg1').run;
model.result('pg1').label('Stress 1');
model.result('pg1').set('data', 'mir2');
model.result('pg1').set('edges', false);
model.result('pg1').run;
model.result('pg1').feature('vol1').set('unit', 'MPa');
model.result('pg1').run;
model.result('pg1').run;

model.nodeGroup.create('grp1', 'Results');
model.nodeGroup('grp1').set('type', 'plotgroup');
model.nodeGroup('grp1').add('plotgroup', 'pg1');
model.nodeGroup('grp1').label('Without Bars');

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/solid', true);
model.study('std2').feature('stat').setSolveFor('/physics/truss', true);
model.study('std2').feature('stat').setSolveFor('/multiphysics/ere1', true);
model.study('std2').feature('stat').set('useadvanceddisable', true);
model.study('std2').feature('stat').set('disabledphysics', {'solid/lemm1/cm1'});
model.study('std2').feature('stat').set('useparam', true);
model.study('std2').feature('stat').setIndex('pname', 'height', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 'm', 0);
model.study('std2').feature('stat').setIndex('pname', 'height', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 'm', 0);
model.study('std2').feature('stat').setIndex('pname', 'para', 0);
model.study('std2').feature('stat').setIndex('plistarr', 'range(0,0.025,1)', 0);

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_disp').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_rot').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_disp').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_rot').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_disp').set('scaleval', '0.020155644370746375');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_rot').set('scaleval', '0.01');
model.sol('sol2').feature('v1').feature('comp1_u').set('scaleval', '1e-2*2.0155644370746373');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('p1', 'Parametric');
model.sol('sol2').feature('s1').feature.remove('pDef');
model.sol('sol2').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol2').feature('s1').set('control', 'stat');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('seDef', 'Segregated');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol2').feature('s1').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol2').feature('s1').feature('d1').label('Suggested Direct Solver (ere1) (Merged)');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol2').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol2').feature('s1').feature('i1').label('Suggested Iterative Solver (ere1)');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').feature('s1').feature.remove('seDef');
model.sol('sol2').attach('std2');
model.sol('sol2').feature('s1').feature('p1').create('st1', 'StopCondition');
model.sol('sol2').feature('s1').feature('p1').feature('st1').setIndex('stopcondarr', '', 0);
model.sol('sol2').feature('s1').feature('p1').feature('st1').setIndex('stopcondterminateon', 'true', 0);
model.sol('sol2').feature('s1').feature('p1').feature('st1').setIndex('stopcondActive', true, 0);
model.sol('sol2').feature('s1').feature('p1').feature('st1').setIndex('stopconddesc', 'Stop expression 1', 0);
model.sol('sol2').feature('s1').feature('p1').feature('st1').setIndex('stopcondarr', '', 0);
model.sol('sol2').feature('s1').feature('p1').feature('st1').setIndex('stopcondterminateon', 'true', 0);
model.sol('sol2').feature('s1').feature('p1').feature('st1').setIndex('stopcondActive', true, 0);
model.sol('sol2').feature('s1').feature('p1').feature('st1').setIndex('stopconddesc', 'Stop expression 1', 0);
model.sol('sol2').feature('s1').feature('p1').feature('st1').setIndex('stopcondarr', 'comp1.load<-50e3', 0);
model.sol('sol2').feature('s1').feature('p1').feature('st1').set('storestopcondsol', 'stepafter');
model.sol('sol2').feature('s1').feature('p1').feature('st1').set('stopcondwarn', false);

model.study('std2').label('With Bars');

model.sol('sol2').runAll;

model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'dset2');
model.result('pg2').setIndex('looplevel', 11, 0);
model.result('pg2').set('defaultPlotID', 'stress');
model.result('pg2').label('Stress (solid)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').create('vol1', 'Volume');
model.result('pg2').feature('vol1').set('expr', {'solid.misesGp'});
model.result('pg2').feature('vol1').set('threshold', 'manual');
model.result('pg2').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg2').feature('vol1').set('colortable', 'Rainbow');
model.result('pg2').feature('vol1').set('colortabletrans', 'none');
model.result('pg2').feature('vol1').set('colorscalemode', 'linear');
model.result('pg2').feature('vol1').set('resolution', 'custom');
model.result('pg2').feature('vol1').set('refine', 2);
model.result('pg2').feature('vol1').set('colortable', 'Prism');
model.result('pg2').feature('vol1').create('def', 'Deform');
model.result('pg2').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg2').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').set('data', 'dset2');
model.result('pg3').setIndex('looplevel', 11, 0);
model.result('pg3').set('defaultPlotID', 'stress');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').create('line1', 'Line');
model.result('pg3').feature('line1').set('expr', {'truss.misesGp'});
model.result('pg3').feature('line1').set('threshold', 'manual');
model.result('pg3').feature('line1').set('thresholdvalue', 0.2);
model.result('pg3').feature('line1').set('colortable', 'Rainbow');
model.result('pg3').feature('line1').set('colortabletrans', 'none');
model.result('pg3').feature('line1').set('colorscalemode', 'linear');
model.result('pg3').label('Stress (truss)');
model.result('pg3').feature('line1').set('colortable', 'Rainbow');
model.result('pg3').feature('line1').set('linetype', 'tube');
model.result('pg3').feature('line1').set('radiusexpr', 'truss.re');
model.result('pg3').feature('line1').set('resolution', 'extrafine');
model.result('pg3').feature('line1').set('smooth', 'internal');
model.result('pg3').feature('line1').set('tuberadiusscaleactive', true);
model.result('pg3').feature('line1').set('tuberadiusscale', 1);
model.result('pg3').feature('line1').set('tubeendcaps', false);
model.result('pg3').feature('line1').create('def', 'Deform');
model.result('pg3').feature('line1').feature('def').set('expr', {'u2' 'v2' 'w2'});
model.result('pg3').feature('line1').feature('def').set('descr', 'Displacement field');
model.result('pg2').run;
model.result.dataset.create('mir3', 'Mirror3D');
model.result.dataset('mir3').set('data', 'dset2');
model.result.dataset('mir3').set('quickplane', 'zx');
model.result.dataset('mir3').set('quicky', '-1e-10');
model.result.dataset.create('mir4', 'Mirror3D');
model.result.dataset('mir4').set('data', 'mir3');
model.result.dataset('mir4').set('quickx', 'length/2');
model.result('pg2').run;
model.result('pg2').label('Stress 2');
model.result('pg2').set('data', 'mir4');
model.result('pg2').set('edges', false);
model.result('pg2').run;
model.result('pg2').feature('vol1').set('unit', 'MPa');
model.result('pg2').run;
model.result('pg3').run;
model.result('pg3').label('Stress in Bars 2');
model.result('pg3').set('data', 'mir4');
model.result('pg3').set('edges', false);
model.result('pg3').run;
model.result('pg3').feature('line1').set('expr', 'truss.sn');
model.result('pg3').feature('line1').set('unit', 'MPa');
model.result('pg3').feature('line1').set('colortable', 'WaveLight');
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').set('data', 'dset2');
model.result('pg4').setIndex('looplevel', 11, 0);
model.result('pg4').set('defaultPlotID', 'axialForce');
model.result('pg4').set('frametype', 'spatial');
model.result('pg4').create('line1', 'Line');
model.result('pg4').feature('line1').set('expr', {'truss.Nxl'});
model.result('pg4').feature('line1').set('threshold', 'manual');
model.result('pg4').feature('line1').set('thresholdvalue', 0.2);
model.result('pg4').feature('line1').set('colortable', 'Wave');
model.result('pg4').feature('line1').set('colortabletrans', 'none');
model.result('pg4').feature('line1').set('colorscalemode', 'linearsymmetric');
model.result('pg4').feature('line1').set('linetype', 'tube');
model.result('pg4').feature('line1').set('radiusexpr', 'truss.re');
model.result('pg4').feature('line1').set('resolution', 'extrafine');
model.result('pg4').feature('line1').set('smooth', 'internal');
model.result('pg4').feature('line1').set('tuberadiusscaleactive', true);
model.result('pg4').feature('line1').set('tuberadiusscale', 1);
model.result('pg4').feature('line1').set('tubeendcaps', false);
model.result('pg4').feature('line1').create('def', 'Deform');
model.result('pg4').feature('line1').feature('def').set('expr', {'u2' 'v2' 'w2'});
model.result('pg4').feature('line1').feature('def').set('descr', 'Displacement field');
model.result('pg4').label('Force (truss)');
model.result('pg4').label('Force (truss)');
model.result('pg4').run;
model.result('pg4').label('Force in Bars 2');
model.result('pg4').set('data', 'mir4');
model.result('pg4').set('edges', false);
model.result('pg4').run;
model.result('pg4').feature('line1').set('expr', '(1+(y==0))*truss.Nxl');
model.result('pg4').feature('line1').set('unit', 'kN');
model.result('pg4').feature('line1').set('colortable', 'WaveLight');
model.result('pg4').run;
model.result('pg2').run;

model.nodeGroup.create('grp2', 'Results');
model.nodeGroup('grp2').set('type', 'plotgroup');
model.nodeGroup.move('grp2', 1);
model.nodeGroup('grp2').add('plotgroup', 'pg2');
model.nodeGroup('grp2').add('plotgroup', 'pg3');
model.nodeGroup('grp2').add('plotgroup', 'pg4');
model.nodeGroup('grp2').label('With Bars');

model.study.create('std3');
model.study('std3').create('stat', 'Stationary');
model.study('std3').feature('stat').setSolveFor('/physics/solid', true);
model.study('std3').feature('stat').setSolveFor('/physics/truss', true);
model.study('std3').feature('stat').setSolveFor('/multiphysics/ere1', true);
model.study('std3').feature('stat').set('useparam', true);
model.study('std3').feature('stat').setIndex('pname', 'height', 0);
model.study('std3').feature('stat').setIndex('plistarr', '', 0);
model.study('std3').feature('stat').setIndex('punit', 'm', 0);
model.study('std3').feature('stat').setIndex('pname', 'height', 0);
model.study('std3').feature('stat').setIndex('plistarr', '', 0);
model.study('std3').feature('stat').setIndex('punit', 'm', 0);
model.study('std3').feature('stat').setIndex('pname', 'para', 0);
model.study('std3').feature('stat').setIndex('plistarr', 'range(0,0.025,1)', 0);
model.study('std3').setGenPlots(false);

model.sol.create('sol3');
model.sol('sol3').study('std3');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std3');
model.sol('sol3').feature('st1').set('studystep', 'stat');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').feature('comp1_solid_rig_disp').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_solid_rig_rot').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_solid_rig_disp').set('resscalemethod', 'parent');
model.sol('sol3').feature('v1').feature('comp1_solid_rig_rot').set('resscalemethod', 'parent');
model.sol('sol3').feature('v1').feature('comp1_solid_rig_disp').set('scaleval', '0.020155644370746375');
model.sol('sol3').feature('v1').feature('comp1_solid_rig_rot').set('scaleval', '0.01');
model.sol('sol3').feature('v1').feature('comp1_u').set('scaleval', '1e-2*2.0155644370746373');
model.sol('sol3').feature('v1').set('control', 'stat');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').create('p1', 'Parametric');
model.sol('sol3').feature('s1').feature.remove('pDef');
model.sol('sol3').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol3').feature('s1').set('control', 'stat');
model.sol('sol3').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('s1').create('seDef', 'Segregated');
model.sol('sol3').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol3').feature('s1').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol3').feature('s1').feature('d1').set('nliniterrefine', true);
model.sol('sol3').feature('s1').feature('d1').label('Suggested Direct Solver (ere1) (Merged)');
model.sol('sol3').feature('s1').create('i1', 'Iterative');
model.sol('sol3').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol3').feature('s1').feature('i1').set('rhob', 40);
model.sol('sol3').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol3').feature('s1').feature('i1').label('Suggested Iterative Solver (ere1)');
model.sol('sol3').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol3').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol3').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol('sol3').feature('s1').feature.remove('seDef');
model.sol('sol3').attach('std3');
model.sol('sol3').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol3').feature('s1').feature('p1').create('st1', 'StopCondition');
model.sol('sol3').feature('s1').feature('p1').feature('st1').setIndex('stopcondarr', '', 0);
model.sol('sol3').feature('s1').feature('p1').feature('st1').setIndex('stopcondterminateon', 'true', 0);
model.sol('sol3').feature('s1').feature('p1').feature('st1').setIndex('stopcondActive', true, 0);
model.sol('sol3').feature('s1').feature('p1').feature('st1').setIndex('stopconddesc', 'Stop expression 1', 0);
model.sol('sol3').feature('s1').feature('p1').feature('st1').setIndex('stopcondarr', '', 0);
model.sol('sol3').feature('s1').feature('p1').feature('st1').setIndex('stopcondterminateon', 'true', 0);
model.sol('sol3').feature('s1').feature('p1').feature('st1').setIndex('stopcondActive', true, 0);
model.sol('sol3').feature('s1').feature('p1').feature('st1').setIndex('stopconddesc', 'Stop expression 1', 0);
model.sol('sol3').feature('s1').feature('p1').feature('st1').setIndex('stopcondarr', 'comp1.load<-50e3', 0);
model.sol('sol3').feature('s1').feature('p1').feature('st1').set('storestopcondsol', 'stepafter');
model.sol('sol3').feature('s1').feature('p1').feature('st1').set('stopcondwarn', false);

model.study('std3').label('With Bars and Ottosen');

model.sol('sol3').runAll;

model.result.dataset.create('mir5', 'Mirror3D');
model.result.dataset('mir5').set('data', 'dset3');
model.result.dataset('mir5').set('quickplane', 'zx');
model.result.dataset('mir5').set('quicky', '-1e-10');
model.result.dataset.create('mir6', 'Mirror3D');
model.result.dataset('mir6').set('data', 'mir5');
model.result.dataset('mir6').set('quickx', 'length/2');

model.nodeGroup.duplicate('grp3', 'grp2');
model.nodeGroup('grp3').label('With Bars and Ottosen');

model.result('pg5').run;
model.result('pg5').label('Stress 3');
model.result('pg5').set('data', 'mir6');
model.result('pg5').stepLast(0);
model.result('pg5').run;
model.result('pg6').run;
model.result('pg6').label('Stress in Bars 3');
model.result('pg6').set('data', 'mir6');
model.result('pg6').stepLast(0);
model.result('pg6').run;
model.result('pg7').run;
model.result('pg7').set('data', 'mir6');
model.result('pg7').label('Force in Bars 3');
model.result('pg7').stepLast(0);
model.result('pg7').run;
model.result.create('pg8', 'PlotGroup3D');

model.nodeGroup('grp3').add('plotgroup', 'pg8');

model.result('pg8').run;
model.result('pg8').set('data', 'mir6');
model.result('pg8').label('Plastic Region');
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').feature('surf1').set('expr', 'solid.elemgpmax(solid.epe>0)');
model.result('pg8').feature('surf1').set('colorlegend', false);
model.result('pg8').feature('surf1').set('smooth', 'none');
model.result('pg8').feature('surf1').create('def1', 'Deform');
model.result('pg8').run;
model.result('pg8').run;
model.result('pg8').set('edges', false);
model.result('pg8').stepLast(0);
model.result('pg8').run;

model.physics('solid').feature('lemm1').create('cm2', 'Concrete', 3);
model.physics('solid').feature('lemm1').feature('cm2').set('materialModel', 'mazarsDamage');
model.physics('solid').feature('lemm1').feature('cm2').set('equivalentStrainMazars', 'modifiedMazars');
model.physics('solid').feature('lemm1').feature('cm2').set('epsilon0c_maz', '1e-4');
model.physics('solid').feature('lemm1').feature('cm2').set('Ac_maz', 1.12);
model.physics('solid').create('disc1', 'Discretization', -1);
model.physics('solid').feature('disc1').label('Discretization, Linear');
model.physics('solid').feature('disc1').set('order_displacement', 1);
model.physics('truss').create('disc1', 'Discretization', -1);
model.physics('truss').feature('disc1').label('Discretization, Linear');

model.material('mat1').propertyGroup('YieldStressParameters').set('sigmaut', {'2[MPa]'});
model.material('mat1').propertyGroup.create('FractureParameters', 'Fracture_parameters');
model.material('mat1').propertyGroup('FractureParameters').set('Gft', {'220[J/m^2]'});

model.study.create('std4');
model.study('std4').create('stat', 'Stationary');
model.study('std4').feature('stat').setSolveFor('/physics/solid', true);
model.study('std4').feature('stat').setSolveFor('/physics/truss', true);
model.study('std4').feature('stat').setSolveFor('/multiphysics/ere1', true);
model.study('std4').create('param', 'Parametric');
model.study('std4').feature('param').setIndex('pname', 'height', 0);
model.study('std4').feature('param').setIndex('plistarr', '', 0);
model.study('std4').feature('param').setIndex('punit', 'm', 0);
model.study('std4').feature('param').setIndex('pname', 'height', 0);
model.study('std4').feature('param').setIndex('plistarr', '', 0);
model.study('std4').feature('param').setIndex('punit', 'm', 0);
model.study('std4').feature('param').setIndex('pname', 'mesh_par', 0);
model.study('std4').feature('param').setIndex('plistarr', 2, 0);
model.study('std4').feature('stat').set('useadvanceddisable', true);
model.study('std4').feature('stat').setEntry('discretization', 'solid', 'disc1');
model.study('std4').feature('stat').setEntry('discretization', 'truss', 'disc1');
model.study('std4').feature('stat').set('useparam', true);
model.study('std4').feature('stat').setIndex('pname', 'height', 0);
model.study('std4').feature('stat').setIndex('plistarr', '', 0);
model.study('std4').feature('stat').setIndex('punit', 'm', 0);
model.study('std4').feature('stat').setIndex('pname', 'height', 0);
model.study('std4').feature('stat').setIndex('plistarr', '', 0);
model.study('std4').feature('stat').setIndex('punit', 'm', 0);
model.study('std4').feature('stat').setIndex('pname', 'para', 0);
model.study('std4').feature('stat').setIndex('plistarr', 'range(0,0.025,1)', 0);
model.study('std4').setGenPlots(false);

model.sol.create('sol4');
model.sol('sol4').study('std4');
model.sol('sol4').create('st1', 'StudyStep');
model.sol('sol4').feature('st1').set('study', 'std4');
model.sol('sol4').feature('st1').set('studystep', 'stat');
model.sol('sol4').create('v1', 'Variables');
model.sol('sol4').feature('v1').feature('comp1_solid_rig_disp').set('scalemethod', 'manual');
model.sol('sol4').feature('v1').feature('comp1_solid_rig_rot').set('scalemethod', 'manual');
model.sol('sol4').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol4').feature('v1').feature('comp1_solid_rig_disp').set('resscalemethod', 'parent');
model.sol('sol4').feature('v1').feature('comp1_solid_rig_rot').set('resscalemethod', 'parent');
model.sol('sol4').feature('v1').feature('comp1_solid_rig_disp').set('scaleval', '0.020155644370746375');
model.sol('sol4').feature('v1').feature('comp1_solid_rig_rot').set('scaleval', '0.01');
model.sol('sol4').feature('v1').feature('comp1_u').set('scaleval', '1e-2*2.0155644370746373');
model.sol('sol4').feature('v1').set('control', 'stat');
model.sol('sol4').create('s1', 'Stationary');
model.sol('sol4').feature('s1').create('p1', 'Parametric');
model.sol('sol4').feature('s1').feature.remove('pDef');
model.sol('sol4').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol4').feature('s1').set('control', 'stat');
model.sol('sol4').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol4').feature('s1').create('seDef', 'Segregated');
model.sol('sol4').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol4').feature('s1').feature('fc1').set('dtech', 'const');
model.sol('sol4').feature('s1').feature('fc1').set('maxiter', 8);
model.sol('sol4').feature('s1').create('d1', 'Direct');
model.sol('sol4').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol4').feature('s1').feature('d1').label('Suggested Direct Solver (ere1) (Merged)');
model.sol('sol4').feature('s1').create('i1', 'Iterative');
model.sol('sol4').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol4').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol4').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol4').feature('s1').feature('i1').label('Suggested Iterative Solver (GMRES with SA AMG) (ere1)');
model.sol('sol4').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol4').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol4').feature('s1').feature('fc1').set('dtech', 'const');
model.sol('sol4').feature('s1').feature('fc1').set('maxiter', 8);
model.sol('sol4').feature('s1').feature.remove('fcDef');
model.sol('sol4').feature('s1').feature.remove('seDef');
model.sol('sol4').attach('std4');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std4');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol4');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'mesh_par'});
model.batch('p1').set('plistarr', {'2'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std4');
model.batch('p1').set('control', 'param');

model.sol('sol4').feature('s1').feature('p1').create('st1', 'StopCondition');
model.sol('sol4').feature('s1').feature('p1').feature('st1').setIndex('stopcondarr', '', 0);
model.sol('sol4').feature('s1').feature('p1').feature('st1').setIndex('stopcondterminateon', 'true', 0);
model.sol('sol4').feature('s1').feature('p1').feature('st1').setIndex('stopcondActive', true, 0);
model.sol('sol4').feature('s1').feature('p1').feature('st1').setIndex('stopconddesc', 'Stop expression 1', 0);
model.sol('sol4').feature('s1').feature('p1').feature('st1').setIndex('stopcondarr', '', 0);
model.sol('sol4').feature('s1').feature('p1').feature('st1').setIndex('stopcondterminateon', 'true', 0);
model.sol('sol4').feature('s1').feature('p1').feature('st1').setIndex('stopcondActive', true, 0);
model.sol('sol4').feature('s1').feature('p1').feature('st1').setIndex('stopconddesc', 'Stop expression 1', 0);
model.sol('sol4').feature('s1').feature('p1').feature('st1').setIndex('stopcondarr', 'comp1.load<-50e3', 0);
model.sol('sol4').feature('s1').feature('p1').feature('st1').set('storestopcondsol', 'stepafter');
model.sol('sol4').feature('s1').feature('p1').feature('st1').set('stopcondwarn', false);

model.study('std4').label('With Bars and Damage');

model.sol.create('sol5');
model.sol('sol5').study('std4');
model.sol('sol5').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol5');
model.batch('p1').run('compute');

model.result.dataset.create('mir7', 'Mirror3D');
model.result.dataset('mir7').set('data', 'dset4');
model.result.dataset('mir7').set('quickplane', 'zx');
model.result.dataset('mir7').set('quicky', '-1e-10');
model.result.dataset.create('mir8', 'Mirror3D');
model.result.dataset('mir8').set('data', 'mir7');
model.result.dataset('mir8').set('quickx', 'length/2');

model.nodeGroup.duplicate('grp4', 'grp2');
model.nodeGroup('grp4').label('With Bars and Damage');

model.result('pg9').run;
model.result('pg9').label('Stress 4');
model.result('pg9').set('data', 'mir8');
model.result('pg9').run;
model.result('pg9').feature('vol1').set('expr', 'solid.misesdGp');
model.result('pg9').feature('vol1').stepLast(0);
model.result('pg9').run;
model.result('pg10').run;
model.result('pg10').label('Stress in Bars 4');
model.result('pg10').set('data', 'mir8');
model.result('pg10').stepLast(0);
model.result('pg10').run;
model.result('pg11').run;
model.result('pg11').set('data', 'mir8');
model.result('pg11').label('Force in Bars 4');
model.result('pg11').stepLast(0);
model.result('pg11').run;
model.result.create('pg12', 'PlotGroup3D');

model.nodeGroup('grp4').add('plotgroup', 'pg12');

model.result('pg12').run;
model.result('pg12').set('data', 'mir8');
model.result('pg12').label('Damage');
model.result('pg12').create('surf1', 'Surface');
model.result('pg12').feature('surf1').set('expr', 'solid.dmgGp');
model.result('pg12').feature('surf1').set('resolution', 'norefine');
model.result('pg12').feature('surf1').set('smooth', 'none');
model.result('pg12').feature('surf1').create('def1', 'Deform');
model.result('pg12').run;
model.result('pg12').run;
model.result('pg12').set('edges', false);
model.result('pg12').stepLast(0);
model.result('pg12').run;
model.result.create('pg13', 'PlotGroup3D');

model.nodeGroup('grp4').add('plotgroup', 'pg13');

model.result('pg13').run;
model.result('pg13').set('data', 'mir8');
model.result('pg13').label('Cracks');
model.result('pg13').create('surf1', 'Surface');
model.result('pg13').feature('surf1').set('expr', 'solid.eeqGp');
model.result('pg13').feature('surf1').set('descr', 'Equivalent strain');
model.result('pg13').feature('surf1').set('expr', 'solid.elemgpmax(solid.eeq>2e-3)');
model.result('pg13').feature('surf1').set('colortable', 'GrayScale');
model.result('pg13').feature('surf1').set('colortabletrans', 'reverse');
model.result('pg13').feature('surf1').set('resolution', 'norefine');
model.result('pg13').feature('surf1').set('smooth', 'none');
model.result('pg13').feature('surf1').create('def1', 'Deform');
model.result('pg13').run;
model.result('pg13').run;
model.result('pg13').set('edges', false);
model.result('pg13').stepLast(0);
model.result('pg13').run;

model.physics('solid').feature('lemm1').create('fib1', 'Fiber', 3);
model.physics('solid').feature('lemm1').feature('fib1').selection.set([1 3]);
model.physics('solid').feature('lemm1').feature('fib1').set('Fiber_material', 'mat2');
model.physics('solid').feature('lemm1').feature('fib1').set('V', 'v_reinforcement');
model.physics('solid').feature('lemm1').feature('fib1').set('E_mat', 'userdef');
model.physics('solid').feature('lemm1').feature('fib1').set('E', 'mat1.Enu.E+mat2.Enu.E');

model.study.create('std5');
model.study('std5').create('stat', 'Stationary');
model.study('std5').feature('stat').setSolveFor('/physics/solid', true);
model.study('std5').feature('stat').setSolveFor('/physics/truss', false);
model.study('std5').feature('stat').setSolveFor('/multiphysics/ere1', false);
model.study('std5').feature('stat').set('useadvanceddisable', true);
model.study('std5').feature('stat').set('disabledphysics', {'solid/lemm1/cm2' 'solid/lemm1/cm1'});
model.study('std5').feature('stat').set('useparam', true);
model.study('std5').feature('stat').setIndex('pname', 'height', 0);
model.study('std5').feature('stat').setIndex('plistarr', '', 0);
model.study('std5').feature('stat').setIndex('punit', 'm', 0);
model.study('std5').feature('stat').setIndex('pname', 'height', 0);
model.study('std5').feature('stat').setIndex('plistarr', '', 0);
model.study('std5').feature('stat').setIndex('punit', 'm', 0);
model.study('std5').feature('stat').setIndex('pname', 'para', 0);
model.study('std5').feature('stat').setIndex('plistarr', 'range(0,0.025,1)', 0);

model.sol.create('sol7');
model.sol('sol7').study('std5');
model.sol('sol7').create('st1', 'StudyStep');
model.sol('sol7').feature('st1').set('study', 'std5');
model.sol('sol7').feature('st1').set('studystep', 'stat');
model.sol('sol7').create('v1', 'Variables');
model.sol('sol7').feature('v1').feature('comp1_solid_rig_disp').set('scalemethod', 'manual');
model.sol('sol7').feature('v1').feature('comp1_solid_rig_rot').set('scalemethod', 'manual');
model.sol('sol7').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol7').feature('v1').feature('comp1_solid_rig_disp').set('resscalemethod', 'parent');
model.sol('sol7').feature('v1').feature('comp1_solid_rig_rot').set('resscalemethod', 'parent');
model.sol('sol7').feature('v1').feature('comp1_solid_rig_disp').set('scaleval', '0.020155644370746375');
model.sol('sol7').feature('v1').feature('comp1_solid_rig_rot').set('scaleval', '0.01');
model.sol('sol7').feature('v1').feature('comp1_u').set('scaleval', '1e-2*2.0155644370746373');
model.sol('sol7').feature('v1').set('control', 'stat');
model.sol('sol7').create('s1', 'Stationary');
model.sol('sol7').feature('s1').create('p1', 'Parametric');
model.sol('sol7').feature('s1').feature.remove('pDef');
model.sol('sol7').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol7').feature('s1').set('control', 'stat');
model.sol('sol7').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol7').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol7').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol7').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol7').feature('s1').create('d1', 'Direct');
model.sol('sol7').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol7').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol7').feature('s1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol7').feature('s1').create('i1', 'Iterative');
model.sol('sol7').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol7').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol7').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol7').feature('s1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol7').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol7').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol7').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol7').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol7').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol7').feature('s1').feature.remove('fcDef');
model.sol('sol7').attach('std5');
model.sol('sol7').feature('s1').feature('p1').create('st1', 'StopCondition');
model.sol('sol7').feature('s1').feature('p1').feature('st1').setIndex('stopcondarr', '', 0);
model.sol('sol7').feature('s1').feature('p1').feature('st1').setIndex('stopcondterminateon', 'true', 0);
model.sol('sol7').feature('s1').feature('p1').feature('st1').setIndex('stopcondActive', true, 0);
model.sol('sol7').feature('s1').feature('p1').feature('st1').setIndex('stopconddesc', 'Stop expression 1', 0);
model.sol('sol7').feature('s1').feature('p1').feature('st1').setIndex('stopcondarr', '', 0);
model.sol('sol7').feature('s1').feature('p1').feature('st1').setIndex('stopcondterminateon', 'true', 0);
model.sol('sol7').feature('s1').feature('p1').feature('st1').setIndex('stopcondActive', true, 0);
model.sol('sol7').feature('s1').feature('p1').feature('st1').setIndex('stopconddesc', 'Stop expression 1', 0);
model.sol('sol7').feature('s1').feature('p1').feature('st1').setIndex('stopcondarr', 'comp1.load<-50e3', 0);
model.sol('sol7').feature('s1').feature('p1').feature('st1').set('storestopcondsol', 'stepafter');
model.sol('sol7').feature('s1').feature('p1').feature('st1').set('stopcondwarn', false);

model.study('std5').label('With Fibers');

model.sol('sol7').runAll;

model.result.create('pg14', 'PlotGroup3D');
model.result('pg14').set('data', 'dset6');
model.result('pg14').setIndex('looplevel', 10, 0);
model.result('pg14').set('defaultPlotID', 'stress');
model.result('pg14').label('Stress (solid)');
model.result('pg14').set('frametype', 'spatial');
model.result('pg14').create('vol1', 'Volume');
model.result('pg14').feature('vol1').set('expr', {'solid.misesGp'});
model.result('pg14').feature('vol1').set('threshold', 'manual');
model.result('pg14').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg14').feature('vol1').set('colortable', 'Rainbow');
model.result('pg14').feature('vol1').set('colortabletrans', 'none');
model.result('pg14').feature('vol1').set('colorscalemode', 'linear');
model.result('pg14').feature('vol1').set('resolution', 'custom');
model.result('pg14').feature('vol1').set('refine', 2);
model.result('pg14').feature('vol1').set('colortable', 'Prism');
model.result('pg14').feature('vol1').create('def', 'Deform');
model.result('pg14').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg14').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result('pg14').run;
model.result.dataset.duplicate('mir9', 'mir1');
model.result.dataset('mir9').set('data', 'dset6');
model.result.dataset.duplicate('mir10', 'mir2');
model.result.dataset('mir10').set('data', 'mir9');
model.result('pg14').run;
model.result('pg14').label('Stress 5');
model.result('pg14').set('edges', false);
model.result('pg14').set('data', 'mir10');
model.result('pg14').run;
model.result('pg14').feature('vol1').set('unit', 'MPa');
model.result('pg14').run;
model.result.create('pg15', 'PlotGroup3D');
model.result('pg15').set('data', 'dset6');
model.result('pg15').setIndex('looplevel', 10, 0);
model.result('pg15').set('defaultPlotID', 'fiberStresslemm1');
model.result('pg15').label('Fiber, Linear Elastic Material 1 (solid)');
model.result('pg15').set('showlegends', true);
model.result('pg15').set('titletype', 'manual');
model.result('pg15').set('title', 'Fiber stress, Fiber, Linear Elastic Material 1 (solid)');
model.result('pg15').set('showlegendsunit', true);
model.result('pg15').create('str1', 'Streamline');
model.result('pg15').feature('str1').set('expr', {'solid.lemm1.fib1.a0X' 'solid.lemm1.fib1.a0Y' 'solid.lemm1.fib1.a0Z'});
model.result('pg15').feature('str1').set('linetype', 'tube');
model.result('pg15').feature('str1').set('posmethod', 'uniform');
model.result('pg15').feature('str1').set('revcoordsys', 'cylindrical');
model.result('pg15').feature('str1').label('Fiber 1');
model.result('pg15').feature('str1').set('inheritplot', 'none');
model.result('pg15').feature('str1').create('col', 'Color');
model.result('pg15').feature('str1').feature('col').set('colortabletrans', 'none');
model.result('pg15').feature('str1').feature('col').set('colorscalemode', 'linear');
model.result('pg15').feature('str1').feature('col').set('expr', 'solid.lemm1.fib1.sa');
model.result('pg15').feature('str1').feature('col').set('colortable', 'Rainbow');
model.result('pg15').label('Fiber, Linear Elastic Material 1 (solid)');
model.result('pg15').run;
model.result('pg15').label('Stress in Fibers');
model.result('pg15').set('data', 'mir10');
model.result('pg15').set('edges', false);
model.result('pg15').set('paramindicator', 'para(10)=0.225');
model.result('pg15').run;
model.result('pg15').feature('str1').create('def1', 'Deform');
model.result('pg15').run;
model.result('pg15').run;
model.result('pg15').feature('str1').set('udist', 0.01);
model.result('pg15').feature('str1').set('tuberadiusscaleactive', true);
model.result('pg15').feature('str1').set('tuberadiusscale', 'diam_bar/2');
model.result('pg15').run;
model.result('pg15').feature('str1').feature('col').set('unit', 'MPa');
model.result('pg15').feature('str1').feature('col').set('colortable', 'WaveLight');
model.result('pg15').run;
model.result('pg14').run;

model.nodeGroup.create('grp5', 'Results');
model.nodeGroup('grp5').set('type', 'plotgroup');
model.nodeGroup.move('grp5', 4);
model.nodeGroup('grp5').add('plotgroup', 'pg14');
model.nodeGroup('grp5').add('plotgroup', 'pg15');
model.nodeGroup('grp5').label('With Fibers');

model.result.create('pg16', 'PlotGroup1D');
model.result('pg16').run;
model.result('pg16').label('Deflection');
model.result('pg16').setIndex('looplevelinput', 'last', 0);
model.result('pg16').set('titletype', 'manual');
model.result('pg16').set('title', 'Deflection of the beam');
model.result('pg16').set('xlabelactive', true);
model.result('pg16').set('xlabel', 'Position on X-axis');
model.result('pg16').set('ylabelactive', true);
model.result('pg16').set('ylabel', 'Deflection (mm)');
model.result('pg16').set('legendpos', 'lowerleft');
model.result('pg16').create('lngr1', 'LineGraph');
model.result('pg16').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg16').feature('lngr1').set('linewidth', 'preference');
model.result('pg16').feature('lngr1').set('data', 'dset1');
model.result('pg16').feature('lngr1').setIndex('looplevelinput', 'last', 0);
model.result('pg16').feature('lngr1').selection.set([11]);
model.result('pg16').feature('lngr1').set('unit', 'mm');
model.result('pg16').feature('lngr1').set('expr', 'w');
model.result('pg16').feature('lngr1').set('descr', 'Displacement field, Z-component');
model.result('pg16').feature('lngr1').set('xdata', 'expr');
model.result('pg16').feature('lngr1').set('xdataexpr', 'X');
model.result('pg16').feature('lngr1').set('linemarker', 'cycle');
model.result('pg16').feature('lngr1').set('markerpos', 'interp');
model.result('pg16').feature('lngr1').set('legend', true);
model.result('pg16').feature('lngr1').set('legendmethod', 'manual');
model.result('pg16').feature('lngr1').setIndex('legends', 'Linear elastic model', 0);
model.result('pg16').feature.duplicate('lngr2', 'lngr1');
model.result('pg16').run;
model.result('pg16').feature('lngr2').set('data', 'dset2');
model.result('pg16').feature('lngr2').setIndex('legends', 'Linear elastic model with bars', 0);
model.result('pg16').run;
model.result('pg16').feature.duplicate('lngr3', 'lngr1');
model.result('pg16').run;
model.result('pg16').feature('lngr3').set('data', 'dset3');
model.result('pg16').feature('lngr3').setIndex('legends', 'Ottosen model with bars', 0);
model.result('pg16').run;
model.result('pg16').feature.duplicate('lngr4', 'lngr1');
model.result('pg16').run;
model.result('pg16').feature('lngr4').set('data', 'dset4');
model.result('pg16').feature('lngr4').setIndex('legends', 'Mazars model with bars', 0);
model.result('pg16').run;
model.result('pg16').feature.duplicate('lngr5', 'lngr1');
model.result('pg16').run;
model.result('pg16').feature('lngr5').set('data', 'dset6');
model.result('pg16').feature('lngr5').setIndex('legends', 'Linear elastic model with fibers', 0);
model.result('pg16').feature('lngr5').set('markers', 7);
model.result('pg16').run;
model.result.create('pg17', 'PlotGroup1D');
model.result('pg17').run;
model.result('pg17').label('Plastic Strains');
model.result('pg17').setIndex('looplevelinput', 'last', 0);
model.result('pg17').set('titletype', 'manual');
model.result('pg17').set('title', 'Plastic strain in bars');
model.result('pg17').set('xlabelactive', true);
model.result('pg17').set('xlabel', 'Position on X-axis');
model.result('pg17').set('ylabelactive', true);
model.result('pg17').set('ylabel', 'Plastic strains');
model.result('pg17').set('legendpos', 'upperleft');
model.result('pg17').create('lngr1', 'LineGraph');
model.result('pg17').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg17').feature('lngr1').set('linewidth', 'preference');
model.result('pg17').feature('lngr1').set('data', 'dset2');
model.result('pg17').feature('lngr1').setIndex('looplevelinput', 'last', 0);

model.view('view1').set('renderwireframe', true);

model.result('pg17').feature('lngr1').selection.set([29]);

model.view('view1').set('renderwireframe', false);

model.result('pg17').feature('lngr1').set('expr', 'truss.epnGp');
model.result('pg17').feature('lngr1').set('descr', 'Plastic axial strain');
model.result('pg17').feature('lngr1').set('xdata', 'expr');
model.result('pg17').feature('lngr1').set('xdataexpr', 'X');
model.result('pg17').feature('lngr1').set('xdataunit', 'mm');
model.result('pg17').feature('lngr1').set('legend', true);
model.result('pg17').feature('lngr1').set('legendmethod', 'manual');
model.result('pg17').feature('lngr1').setIndex('legends', 'Linear elastic model with bars', 0);
model.result('pg17').feature.duplicate('lngr2', 'lngr1');
model.result('pg17').run;
model.result('pg17').feature('lngr2').set('data', 'dset3');
model.result('pg17').feature('lngr2').setIndex('legends', 'Ottosen model with bars', 0);
model.result('pg17').run;
model.result('pg17').feature.duplicate('lngr3', 'lngr1');
model.result('pg17').run;
model.result('pg17').feature('lngr3').set('data', 'dset4');
model.result('pg17').feature('lngr3').setIndex('legends', 'Mazars model with bars', 0);
model.result('pg17').run;
model.result.create('pg18', 'PlotGroup1D');
model.result('pg18').run;
model.result('pg18').label('Load vs. Deflection');
model.result('pg18').set('titletype', 'manual');
model.result('pg18').set('title', 'Load vs. Deflection');
model.result('pg18').set('xlabelactive', true);
model.result('pg18').set('xlabel', 'Deflection (mm)');
model.result('pg18').set('ylabelactive', true);
model.result('pg18').set('ylabel', 'Load  (kN/m<sup>2</sup>)');
model.result('pg18').set('legendpos', 'lowerright');
model.result('pg18').create('glob1', 'Global');
model.result('pg18').feature('glob1').set('markerpos', 'datapoints');
model.result('pg18').feature('glob1').set('linewidth', 'preference');
model.result('pg18').feature('glob1').set('data', 'dset1');
model.result('pg18').feature('glob1').setIndex('expr', '-load', 0);
model.result('pg18').feature('glob1').setIndex('unit', 'kN/m^2', 0);
model.result('pg18').feature('glob1').setIndex('descr', 'Linear elastic model', 0);
model.result('pg18').feature('glob1').set('xdata', 'expr');
model.result('pg18').feature('glob1').set('xdataexpr', '-intop1(w)');
model.result('pg18').feature('glob1').set('xdataunit', 'mm');
model.result('pg18').feature.duplicate('glob2', 'glob1');
model.result('pg18').run;
model.result('pg18').feature('glob2').set('data', 'dset2');
model.result('pg18').feature('glob2').setIndex('descr', 'Linear elastic model with bars', 0);
model.result('pg18').run;
model.result('pg18').feature.duplicate('glob3', 'glob1');
model.result('pg18').run;
model.result('pg18').feature('glob3').set('data', 'dset3');
model.result('pg18').feature('glob3').setIndex('descr', 'Ottosen model with bars', 0);
model.result('pg18').run;
model.result('pg18').feature.duplicate('glob4', 'glob1');
model.result('pg18').run;
model.result('pg18').feature('glob4').set('data', 'dset4');
model.result('pg18').feature('glob4').setIndex('descr', 'Mazars model with bars', 0);
model.result('pg18').run;
model.result('pg18').feature.duplicate('glob5', 'glob1');
model.result('pg18').run;
model.result('pg18').feature('glob5').set('data', 'dset6');
model.result('pg18').feature('glob5').setIndex('descr', 'Linear elastic model with fibers', 0);
model.result('pg18').run;

model.study('std1').feature('stat').set('disabledphysics', {'solid/lemm1/cm1' 'truss' 'solid/lemm1/cm2' 'solid/lemm1/fib1'});
model.study('std2').feature('stat').set('disabledphysics', {'solid/lemm1/cm1' 'solid/lemm1/cm2' 'solid/lemm1/fib1'});
model.study('std3').feature('stat').set('useadvanceddisable', true);
model.study('std3').feature('stat').set('disabledphysics', {'solid/lemm1/cm2' 'solid/lemm1/fib1'});
model.study('std4').feature('stat').set('disabledphysics', {'solid/lemm1/fib1'});

model.result('pg5').run;

model.title('Concrete Beam with Reinforcement Bars');

model.description(['Concrete structures almost always contain reinforcements in the shape of steel bars ("rebars"). In COMSOL, rebars can be modeled either individually by adding a Truss interface to the Solid interface used for the concrete or using the Fiber subfeature to model their global effect. In case the Truss interface is used the solid mesh for the concrete and the rebar mesh can be independent, because the displacements are mapped from within the solids onto the rebar at a certain position.' newline  newline 'The beam is analyzed with several material models, including the Ottosen concrete model and the Mazars damage model.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;

model.label('concrete_beam.mph');

model.modelNode.label('Components');

out = model;
