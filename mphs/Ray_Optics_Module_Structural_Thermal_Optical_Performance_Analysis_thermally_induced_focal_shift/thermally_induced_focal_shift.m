function out = model
%
% thermally_induced_focal_shift.m
%
% Model exported on May 26 2025, 21:32 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Ray_Optics_Module/Structural_Thermal_Optical_Performance_Analysis');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('gop', 'GeometricalOptics', 'geom1');
model.physics('gop').model('comp1');
model.physics('gop').prop('IntensityComputation').set('IntensityComputation', 'ComputeIntensityAndPower');
model.physics.create('ht', 'HeatTransfer', 'geom1');
model.physics('ht').model('comp1');
model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.multiphysics.create('rhs1', 'RayHeatSource', 'geom1', 3);
model.multiphysics('rhs1').set('RayHeatSource_physics', 'gop');
model.multiphysics('rhs1').set('RayHeatDestination_physics', 'ht');

model.study.create('std1');
model.study('std1').create('bcrt', 'BidirectionallyCoupledRayTracing');
model.study('std1').feature('bcrt').setSolveFor('/physics/gop', true);
model.study('std1').feature('bcrt').setSolveFor('/physics/ht', true);
model.study('std1').feature('bcrt').setSolveFor('/physics/solid', true);
model.study('std1').feature('bcrt').setSolveFor('/multiphysics/rhs1', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('Irms', '1[W]', 'Root mean square power of the source');
model.param.set('T0', '293.15', 'Room temperature');
model.param.set('lam', '1064[nm]', 'Fiber laser''s wavelength');
model.param.set('d', '50[mm]', 'Diameter of the plano-convex lens');
model.param.set('R', '68.8[mm]', 'Radius of curvature of plano-convex lens');
model.param.set('Te', '3.0[mm]', 'Edge thickness of the plano-convex lens');
model.param.set('Tc', 'Te+R-sqrt(R^2-(d/2)^2)', 'Center thickness of the plano-convex lens');
model.param.set('dis', '1.5*R', 'Distance between the collimating and focusing lens');
model.param.set('bfl', '145.0[mm]', 'Back focal length of the plano-convex lens');
model.param.set('fiber_pos', '-(dis/2+Tc+bfl)', 'Position of the optical fiber');
model.param.set('fiber_NA', '0.1', 'Numerical aperture of the optical fiber');
model.param.set('theta', 'asin(fiber_NA)', 'Half cone angle of the released rays');
model.param.set('n0', '1.45', 'Real part of the refractive index at T=T0 and lambda=lam');
model.param.set('dndT', '10e-6[1/K]', 'Thermal variation of the real part of the refractive index');

model.geom('geom1').lengthUnit('mm');
model.geom.load({'part1'}, 'Ray_Optics_Module/3D/Spherical_Lenses/spherical_lens_3d.mph', {'part1'});
model.geom('geom1').create('pi1', 'PartInstance');
model.geom('geom1').feature('pi1').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi1').set('part', 'part1');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'R1', 'R');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'R2', 0);
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'Tc', 'Tc');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'd0', 'd');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'd1', 0);
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'd2', 0);
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'd1_clear', 0);
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'd2_clear', 0);
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'nix', 0);
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'niy', -1);
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'niz', 0);
model.geom('geom1').feature('pi1').set('displ', {'0' '-dis/2' '0'});
model.geom('geom1').selection.create('csel1', 'CumulativeSelection');
model.geom('geom1').selection('csel1').label('Clear Apertures');
model.geom('geom1').feature('pi1').setEntry('selcontributetobnd', 'pi1_sel3', 'csel1');
model.geom('geom1').run('pi1');
model.geom('geom1').create('cyl1', 'Cylinder');
model.geom('geom1').feature('cyl1').set('r', 0.75);
model.geom('geom1').feature('cyl1').set('h', 20);
model.geom('geom1').feature('cyl1').set('pos', [0 -58 10]);
model.geom('geom1').run('cyl1');
model.geom('geom1').create('rot1', 'Rotate');
model.geom('geom1').feature('rot1').selection('input').set({'cyl1'});
model.geom('geom1').feature('rot1').set('rot', 120);
model.geom('geom1').feature('rot1').set('axistype', 'y');
model.geom('geom1').feature('rot1').set('keep', true);
model.geom('geom1').feature.duplicate('rot2', 'rot1');
model.geom('geom1').feature('rot2').set('rot', -120);
model.geom('geom1').run('rot2');
model.geom('geom1').create('par1', 'Partition');
model.geom('geom1').feature('par1').selection('input').init;
model.geom('geom1').feature('par1').selection('input').set({'pi1'});
model.geom('geom1').feature('par1').selection('tool').set({'cyl1' 'rot1' 'rot2'});
model.geom('geom1').run('par1');
model.geom('geom1').create('uni1', 'Union');
model.geom('geom1').feature('uni1').selection('input').set({'par1'});
model.geom('geom1').feature('uni1').set('intbnd', false);
model.geom('geom1').run('uni1');
model.geom('geom1').create('sel1', 'ExplicitSelection');
model.geom('geom1').feature('sel1').label('Exposed Lens Surfaces');
model.geom('geom1').feature('sel1').selection('selection').init(2);
model.geom('geom1').feature('sel1').selection('selection').set('uni1', [1 2 3 4 7 8]);
model.geom('geom1').run('sel1');
model.geom('geom1').create('comsel1', 'ComplementSelection');
model.geom('geom1').feature('comsel1').label('Fixed Lens Surfaces');
model.geom('geom1').feature('comsel1').set('entitydim', 2);
model.geom('geom1').feature('comsel1').set('input', {'sel1'});
model.geom('geom1').run('comsel1');
model.geom('geom1').create('mir1', 'Mirror');
model.geom('geom1').feature('mir1').selection('input').set({'uni1'});
model.geom('geom1').feature('mir1').set('keep', true);
model.geom('geom1').feature('mir1').set('pos', [1 0 0]);
model.geom('geom1').feature('mir1').set('axis', [0 -1 0]);
model.geom.load({'part2'}, 'Ray_Optics_Module/3D/Apertures_and_Obstructions/circular_planar_annulus.mph', {'part1'});
model.geom('geom1').run('mir1');
model.geom('geom1').create('pi2', 'PartInstance');
model.geom('geom1').feature('pi2').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi2').set('part', 'part2');
model.geom('geom1').feature('pi2').label('Target');
model.geom('geom1').feature('pi2').setEntry('inputexpr', 'd0', '1.0[mm]');
model.geom('geom1').feature('pi2').setEntry('inputexpr', 'd1', 0);
model.geom('geom1').feature('pi2').setEntry('inputexpr', 'nix', 0);
model.geom('geom1').feature('pi2').setEntry('inputexpr', 'niy', 1);
model.geom('geom1').feature('pi2').setEntry('inputexpr', 'niz', 0);
model.geom('geom1').feature('pi2').set('displ', {'0' 'dis/2+Tc+bfl' '0'});
model.geom('geom1').feature('pi2').setEntry('selkeepbnd', 'pi2_sel1', true);
model.geom('geom1').run('fin');

model.variable.create('var1');
model.variable('var1').model('comp1');

% To import content from file, use:
% model.variable('var1').loadFile('FILENAME');
model.variable('var1').set('n_r', 'n0+dndT*(T-T0)', 'Real part of the refractive index');
model.variable('var1').set('n_i', '3e-8', 'Imaginary part of the refractive index');
model.variable('var1').set('n', 'n_r-i*n_i', 'Refractive index of the lens');

model.physics('gop').prop('MaximumSecondary').setIndex('MaximumSecondary', 0, 0);
model.physics('gop').feature('matd1').set('ThinDielectricFilmsOnBoundary', 'AntiReflectiveCoating');
model.physics('gop').feature('op1').set('lambda0', 'lam');
model.physics('gop').create('relg1', 'ReleaseGrid', -1);
model.physics('gop').feature('relg1').setIndex('x0', 'fiber_pos', 1);
model.physics('gop').feature('relg1').set('RayDirectionVector', 'Conical');
model.physics('gop').feature('relg1').set('ConicalDistribution', 'Hexapolar');
model.physics('gop').feature('relg1').setIndex('Nctheta', 18, 0);
model.physics('gop').feature('relg1').set('cax', [0 1 0]);
model.physics('gop').feature('relg1').set('alphac', 'theta');
model.physics('gop').feature('relg1').set('Psrc', 'Irms');
model.physics('gop').create('wall1', 'Wall', 2);
model.physics('gop').feature('wall1').selection.named('geom1_pi2_sel1');
model.physics('gop').feature('wall1').set('WallCondition', 'Pass');
model.physics('gop').feature('wall1').create('bacc1', 'BoundaryAccumulator', 2);
model.physics('gop').feature('wall1').feature('bacc1').set('R', 'gop.Q');
model.physics('gop').feature('wall1').feature('bacc1').set('CustomDependentVariableUnit', '1');
model.physics('gop').feature('wall1').feature('bacc1').set('DependentVariableQuantity', 'none');
model.physics('gop').feature('wall1').feature('bacc1').setIndex('CustomDependentVariableUnit', 'W/m^2', 0, 0);
model.physics('ht').prop('ShapeProperty').set('order_temperature', 3);
model.physics('ht').create('hf1', 'HeatFluxBoundary', 2);
model.physics('ht').feature('hf1').selection.named('geom1_sel1');
model.physics('ht').feature('hf1').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht').feature('hf1').set('h', 10);
model.physics('ht').feature('hf1').set('Text', 'T0');
model.physics('solid').prop('ShapeProperty').set('order_displacement', 3);
model.physics('solid').create('fix1', 'Fixed', 2);
model.physics('solid').feature('fix1').selection.named('geom1_comsel1');

model.multiphysics.create('te1', 'ThermalExpansion', 'geom1', 3);
model.multiphysics('te1').selection.set([1 2]);

model.common('cminpt').set('modified', {'strainreferencetemperature' 'T0'});

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat1').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat1').label('Silica glass');
model.material('mat1').set('family', 'custom');
model.material('mat1').set('customambient', [1 1 1]);
model.material('mat1').set('noise', true);
model.material('mat1').set('fresnel', 0.99);
model.material('mat1').set('roughness', 0.02);
model.material('mat1').set('metallic', 0);
model.material('mat1').set('pearl', 0);
model.material('mat1').set('diffusewrap', 0);
model.material('mat1').set('clearcoat', 0);
model.material('mat1').set('reflectance', 0);
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'1e-14[S/m]' '0' '0' '0' '1e-14[S/m]' '0' '0' '0' '1e-14[S/m]'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'0.55e-6[1/K]' '0' '0' '0' '0.55e-6[1/K]' '0' '0' '0' '0.55e-6[1/K]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', '703[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('relpermittivity', {'3.75' '0' '0' '0' '3.75' '0' '0' '0' '3.75'});
model.material('mat1').propertyGroup('def').set('density', '2203[kg/m^3]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'1.38[W/(m*K)]' '0' '0' '0' '1.38[W/(m*K)]' '0' '0' '0' '1.38[W/(m*K)]'});
model.material('mat1').propertyGroup('Enu').set('E', '73.1[GPa]');
model.material('mat1').propertyGroup('Enu').set('nu', '0.17');
model.material('mat1').propertyGroup('RefractiveIndex').set('n', {'n'});

model.mesh('mesh1').create('size1', 'Size');
model.mesh('mesh1').feature('size1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('size1').selection.named('geom1_pi2_sel1');
model.mesh('mesh1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('size1').set('hmax', 0.025);
model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.named('geom1_comsel1');
model.mesh('mesh1').feature('ftri1').create('size1', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('ftri1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 0.5);
model.mesh('mesh1').create('ftri2', 'FreeTri');
model.mesh('mesh1').feature('ftri2').selection.named('geom1_csel1_bnd');
model.mesh('mesh1').feature('ftri2').create('size1', 'Size');
model.mesh('mesh1').feature('ftri2').feature('size1').set('custom', true);
model.mesh('mesh1').feature('ftri2').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('ftri2').feature('size1').set('hmax', '3.0');
model.mesh('mesh1').create('ftet1', 'FreeTet');
model.mesh('mesh1').run;

model.study('std1').feature('bcrt').set('timestepspec', 'specifylength');
model.study('std1').feature('bcrt').set('lunit', 'mm');
model.study('std1').feature('bcrt').set('llist', '0 400 range(414,0.2,419)');
model.study('std1').feature('bcrt').set('geometricNonlinearity', true);
model.study('std1').feature('bcrt').set('iter', 3);
model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'Irms', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'W', 0);
model.study('std1').feature('param').setIndex('pname', 'Irms', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'W', 0);
model.study('std1').feature('param').setIndex('pname', 'Irms', 0);
model.study('std1').feature('param').setIndex('plistarr', '1 3000', 0);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'bcrt');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'bcrt');
model.sol('sol1').create('for1', 'For');
model.sol('sol1').feature('for1').set('control', 'bcrt');
model.sol('sol1').feature('for1').set('iter', '3');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('studystep', 'bcrt');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').set('control', 'user');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').feature('comp1_e1gop').set('solvefor', 'off');
model.sol('sol1').feature('v2').feature('comp1_gop_atten').set('solvefor', 'off');
model.sol('sol1').feature('v2').feature('comp1_gop_I0').set('solvefor', 'off');
model.sol('sol1').feature('v2').feature('comp1_gop_Q0').set('solvefor', 'off');
model.sol('sol1').feature('v2').feature('comp1_gop_r').set('solvefor', 'off');
model.sol('sol1').feature('v2').feature('comp1_gop_s').set('solvefor', 'off');
model.sol('sol1').feature('v2').feature('comp1_gop_wall1_bacc1_rpb_accum').set('solvefor', 'off');
model.sol('sol1').feature('v2').feature('comp1_kgop').set('solvefor', 'off');
model.sol('sol1').feature('v2').feature('comp1_qgop').set('solvefor', 'off');
model.sol('sol1').feature('v2').feature('comp1_rhs1_Qsrc_accum').set('solvefor', 'off');
model.sol('sol1').feature('v2').feature('comp1_T').set('solvefor', 'on');
model.sol('sol1').feature('v2').feature('comp1_u').set('solvefor', 'on');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('se1', 'Segregated');
model.sol('sol1').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_T'});
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subdamp', 0.7);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subjtech', 'onevery');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, heat transfer variables ht (te1)');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').label('Temperature');
model.sol('sol1').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_u'});
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').label('Solid Mechanics');
model.sol('sol1').feature('s1').feature('se1').set('segtermonres', 'off');
model.sol('sol1').feature('s1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol1').feature('s1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.T 0 ');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 10000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, heat transfer variables ht (te1)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('v3', 'Variables');
model.sol('sol1').feature('v3').set('control', 'user');
model.sol('sol1').feature('v3').set('notsolmethod', 'sol');
model.sol('sol1').feature('v3').set('notsol', 'sol1');
model.sol('sol1').feature('v3').set('initsol', 'sol1');
model.sol('sol1').feature('v3').feature('comp1_e1gop').set('solvefor', 'off');
model.sol('sol1').feature('v3').feature('comp1_gop_atten').set('solvefor', 'off');
model.sol('sol1').feature('v3').feature('comp1_gop_I0').set('solvefor', 'off');
model.sol('sol1').feature('v3').feature('comp1_gop_Q0').set('solvefor', 'off');
model.sol('sol1').feature('v3').feature('comp1_gop_r').set('solvefor', 'off');
model.sol('sol1').feature('v3').feature('comp1_gop_s').set('solvefor', 'off');
model.sol('sol1').feature('v3').feature('comp1_gop_wall1_bacc1_rpb_accum').set('solvefor', 'off');
model.sol('sol1').feature('v3').feature('comp1_kgop').set('solvefor', 'off');
model.sol('sol1').feature('v3').feature('comp1_qgop').set('solvefor', 'off');
model.sol('sol1').feature('v3').feature('comp1_rhs1_Qsrc_accum').set('solvefor', 'off');
model.sol('sol1').feature('v3').feature('comp1_T').set('solvefor', 'off');
model.sol('sol1').feature('v3').feature('comp1_u').set('solvefor', 'off');
model.sol('sol1').create('st3', 'StudyStep');
model.sol('sol1').feature('st3').set('studystep', 'bcrt');
model.sol('sol1').create('v4', 'Variables');
model.sol('sol1').feature('v4').set('control', 'user');
model.sol('sol1').feature('v4').set('notsolmethod', 'sol');
model.sol('sol1').feature('v4').set('notsol', 'sol1');
model.sol('sol1').feature('v4').feature('comp1_e1gop').set('solvefor', 'on');
model.sol('sol1').feature('v4').feature('comp1_gop_atten').set('solvefor', 'on');
model.sol('sol1').feature('v4').feature('comp1_gop_I0').set('solvefor', 'on');
model.sol('sol1').feature('v4').feature('comp1_gop_Q0').set('solvefor', 'on');
model.sol('sol1').feature('v4').feature('comp1_gop_r').set('solvefor', 'on');
model.sol('sol1').feature('v4').feature('comp1_gop_s').set('solvefor', 'on');
model.sol('sol1').feature('v4').feature('comp1_gop_wall1_bacc1_rpb_accum').set('solvefor', 'on');
model.sol('sol1').feature('v4').feature('comp1_kgop').set('solvefor', 'on');
model.sol('sol1').feature('v4').feature('comp1_qgop').set('solvefor', 'on');
model.sol('sol1').feature('v4').feature('comp1_rhs1_Qsrc_accum').set('solvefor', 'on');
model.sol('sol1').feature('v4').feature('comp1_T').set('solvefor', 'off');
model.sol('sol1').feature('v4').feature('comp1_u').set('solvefor', 'off');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.01,1)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 1.0E-5);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('atolmethod', {'comp1_e1gop' 'global' 'comp1_gop_atten' 'global' 'comp1_gop_I0' 'global' 'comp1_gop_Q0' 'global' 'comp1_gop_r' 'global'  ...
'comp1_gop_s' 'global' 'comp1_gop_wall1_bacc1_rpb_accum' 'global' 'comp1_kgop' 'global' 'comp1_qgop' 'global' 'comp1_rhs1_Qsrc_accum' 'global'  ...
'comp1_T' 'global' 'comp1_u' 'global'});
model.sol('sol1').feature('t1').set('atol', {'comp1_e1gop' '1e-3' 'comp1_gop_atten' '1e-3' 'comp1_gop_I0' '1e-3' 'comp1_gop_Q0' '1e-3' 'comp1_gop_r' '1e-3'  ...
'comp1_gop_s' '1e-3' 'comp1_gop_wall1_bacc1_rpb_accum' '1e-3' 'comp1_kgop' '1e-3' 'comp1_qgop' '1e-3' 'comp1_rhs1_Qsrc_accum' '1e-3'  ...
'comp1_T' '1e-3' 'comp1_u' '1e-3'});
model.sol('sol1').feature('t1').set('atolvaluemethod', {'comp1_e1gop' 'factor' 'comp1_gop_atten' 'factor' 'comp1_gop_I0' 'factor' 'comp1_gop_Q0' 'factor' 'comp1_gop_r' 'factor'  ...
'comp1_gop_s' 'factor' 'comp1_gop_wall1_bacc1_rpb_accum' 'factor' 'comp1_kgop' 'factor' 'comp1_qgop' 'factor' 'comp1_rhs1_Qsrc_accum' 'factor'  ...
'comp1_T' 'factor' 'comp1_u' 'factor'});
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('tstepsgenalpha', 'strict');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('timemethod', 'genalpha');
model.sol('sol1').feature('t1').set('estrat', 'exclude');
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('control', 'bcrt');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_gop_r' 'comp1_e1gop' 'comp1_gop_I0' 'comp1_gop_s' 'comp1_gop_atten' 'comp1_gop_Q0' 'comp1_gop_wall1_bacc1_rpb_accum' 'comp1_qgop' 'comp1_kgop'});
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').create('ja1', 'Jacobi');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Geometrical Optics');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_rhs1_Qsrc_accum'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Ray Heat Source 1');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').create('endfor1', 'EndFor');
model.sol('sol1').feature('v4').set('notsolnum', 'auto');
model.sol('sol1').feature('v4').set('notsolvertype', 'solnum');
model.sol('sol1').feature('v3').set('notsolnum', 'auto');
model.sol('sol1').feature('v3').set('notsolvertype', 'solnum');
model.sol('sol1').feature('v3').set('solnum', 'auto');
model.sol('sol1').feature('v3').set('solvertype', 'solnum');
model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol1').feature('v2').set('solnum', 'auto');
model.sol('sol1').feature('v2').set('solvertype', 'solnum');
model.sol('sol1').attach('std1');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'Irms'});
model.batch('p1').set('plistarr', {'1 3000'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol('sol1').feature('v2').feature('comp1_u').set('scalemethod', 'manual');
model.sol.create('sol2');
model.sol('sol2').study('std1');
model.sol('sol2').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').run('compute');

model.result.dataset.create('ray1', 'Ray');
model.result.dataset('ray1').set('solution', 'sol2');
model.result.dataset('ray1').set('posdof', {'comp1.qx' 'comp1.qy' 'comp1.qz'});
model.result.dataset('ray1').set('geom', 'geom1');
model.result.dataset('ray1').set('rgeom', 'pgeom_gop');
model.result.dataset('ray1').set('rgeomspec', 'fromphysics');
model.result.dataset('ray1').set('physicsinterface', 'gop');
model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'ray1');
model.result('pg1').setIndex('looplevel', 28, 0);
model.result('pg1').setIndex('looplevel', 2, 1);
model.result('pg1').label('Ray Trajectories (gop)');
model.result('pg1').create('rtrj1', 'RayTrajectories');
model.result('pg1').feature('rtrj1').set('linetype', 'line');
model.result('pg1').feature('rtrj1').create('col1', 'Color');
model.result('pg1').feature('rtrj1').feature('col1').set('expr', 'gop.I');
model.result('pg1').feature('rtrj1').create('filt1', 'RayTrajectoriesFilter');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Temperature (ht)');
model.result('pg2').set('data', 'dset2');
model.result('pg2').setIndex('looplevel', 28, 0);
model.result('pg2').setIndex('looplevel', 2, 1);
model.result('pg2').set('data', 'dset2');
model.result('pg2').setIndex('looplevel', 28, 0);
model.result('pg2').setIndex('looplevel', 2, 1);
model.result('pg2').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond3/pcond3/pg1');
model.result('pg2').feature.create('vol1', 'Volume');
model.result('pg2').feature('vol1').set('showsolutionparams', 'on');
model.result('pg2').feature('vol1').set('solutionparams', 'parent');
model.result('pg2').feature('vol1').set('expr', 'T');
model.result('pg2').feature('vol1').set('colortable', 'HeatCameraLight');
model.result('pg2').feature('vol1').set('smooth', 'internal');
model.result('pg2').feature('vol1').set('showsolutionparams', 'on');
model.result('pg2').feature('vol1').set('data', 'parent');
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').set('data', 'dset2');
model.result('pg3').setIndex('looplevel', 28, 0);
model.result('pg3').setIndex('looplevel', 2, 1);
model.result('pg3').set('defaultPlotID', 'stress');
model.result('pg3').label('Stress (solid)');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').create('vol1', 'Volume');
model.result('pg3').feature('vol1').set('expr', {'solid.misesGp'});
model.result('pg3').feature('vol1').set('threshold', 'manual');
model.result('pg3').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg3').feature('vol1').set('colortable', 'Rainbow');
model.result('pg3').feature('vol1').set('colortabletrans', 'none');
model.result('pg3').feature('vol1').set('colorscalemode', 'linear');
model.result('pg3').feature('vol1').set('resolution', 'custom');
model.result('pg3').feature('vol1').set('refine', 2);
model.result('pg3').feature('vol1').set('colortable', 'Prism');
model.result('pg3').feature('vol1').create('def', 'Deform');
model.result('pg3').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg3').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result('pg1').run;
model.result.dataset('dset2').selection.geom('geom1', 2);
model.result.dataset('dset2').selection.named('geom1_csel1_bnd');
model.result('pg1').run;
model.result('pg1').set('showlegendsmaxmin', true);
model.result('pg1').set('showlegendsunit', true);
model.result('pg1').run;
model.result('pg1').feature('rtrj1').feature('col1').set('expr', 'gop.Q');
model.result('pg1').feature('rtrj1').feature('col1').set('colorlegend', false);
model.result('pg1').feature('rtrj1').feature('col1').set('colortable', 'GrayPrint');
model.result('pg1').feature('rtrj1').feature('col1').set('colortabletrans', 'reverse');
model.result('pg1').run;
model.result('pg1').feature('rtrj1').feature('filt1').set('evaluate', 'fraction');
model.result('pg1').feature('rtrj1').feature('filt1').set('fraction', 0.1);
model.result('pg1').run;
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', 'T');
model.result('pg1').feature('surf1').set('descr', 'Temperature');
model.result('pg1').feature('surf1').set('colortable', 'GrayBody');
model.result('pg1').run;
model.result('pg3').run;
model.result('pg3').set('edges', false);
model.result('pg3').set('showlegendsmaxmin', true);
model.result('pg3').set('showlegendsunit', true);
model.result('pg3').run;
model.result('pg3').feature('vol1').set('unit', 'MPa');
model.result('pg3').feature('vol1').set('rangecoloractive', true);
model.result('pg3').feature('vol1').set('rangecolormax', 10);
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').run;
model.result('pg4').label('Deposited Ray Power (lenses)');
model.result('pg4').set('data', 'dset2');
model.result('pg4').set('edges', false);
model.result('pg4').set('showlegendsmaxmin', true);
model.result('pg4').set('showlegendsunit', true);
model.result('pg4').create('vol1', 'Volume');
model.result('pg4').feature('vol1').set('expr', 'rhs1.Qsrc');
model.result('pg4').feature('vol1').set('descr', 'Heat source');
model.result('pg4').feature('vol1').set('unit', 'mW/mm^3');
model.result('pg4').feature('vol1').set('colortable', 'GrayBody');
model.result('pg4').feature('vol1').set('colortabletrans', 'nonlinear');
model.result('pg4').feature('vol1').set('colorcalibration', 1.5);
model.result('pg4').feature('vol1').set('resolution', 'norefine');
model.result('pg4').run;
model.result.dataset.create('surf1', 'Surface');
model.result.dataset('surf1').set('data', 'dset2');
model.result.dataset('surf1').selection.named('geom1_pi2_sel1');
model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').run;
model.result('pg5').label('Deposited Ray Power (target)');
model.result('pg5').set('data', 'surf1');
model.result('pg5').set('edges', false);
model.result('pg5').set('showlegendsunit', true);
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', 'gop.wall1.bacc1.rpb');
model.result('pg5').feature('surf1').set('descr', 'Accumulated variable rpb');
model.result('pg5').feature('surf1').set('unit', 'kW/mm^2');
model.result('pg5').feature('surf1').set('colortable', 'GrayBody');
model.result('pg5').feature('surf1').set('colortabletrans', 'nonlinear');
model.result('pg5').feature('surf1').set('colorcalibration', -1);
model.result('pg5').run;
model.result.dataset.create('surf2', 'Surface');
model.result.dataset('surf2').set('data', 'dset2');
model.result.dataset('surf2').selection.set([7]);
model.result.create('pg6', 'PlotGroup2D');
model.result('pg6').run;
model.result('pg6').label('Refractive Index');
model.result('pg6').set('data', 'surf2');
model.result('pg6').set('showlegendsmaxmin', true);
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', 'n_r-n0');
model.result('pg6').feature('surf1').set('colortable', 'Viridis');
model.result('pg6').run;
model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').run;
model.result('pg7').label('Spot Size');
model.result('pg7').set('data', 'ray1');
model.result('pg7').setIndex('looplevelinput', 'manualindices', 0);
model.result('pg7').setIndex('looplevelindices', 'range(3,1,28)', 0);
model.result('pg7').create('glob1', 'Global');
model.result('pg7').feature('glob1').set('markerpos', 'datapoints');
model.result('pg7').feature('glob1').set('linewidth', 'preference');
model.result('pg7').feature('glob1').setIndex('expr', 'gop.rrms', 0);
model.result('pg7').feature('glob1').setIndex('unit', 'um', 0);
model.result('pg7').feature('glob1').set('titletype', 'none');
model.result('pg7').feature('glob1').set('xdata', 'expr');
model.result('pg7').feature('glob1').set('xdataexpr', 'gop.qavey');
model.result('pg7').run;
model.result('pg7').set('xlabelactive', true);
model.result('pg7').set('ylabelactive', true);
model.result('pg7').set('xlabel', 'Focus (y position, mm)');
model.result('pg7').set('ylabel', 'RMS spot radius (um)');
model.result('pg7').set('legendpos', 'uppermiddle');
model.result('pg7').run;
model.result.dataset.duplicate('ray2', 'ray1');
model.result.dataset('ray2').set('solution', 'sol3');
model.result.dataset.duplicate('ray3', 'ray2');
model.result.dataset('ray3').set('solution', 'sol4');
model.result.create('pg8', 'PlotGroup2D');
model.result('pg8').run;
model.result('pg8').label('Spot Diagrams');
model.result('pg8').set('data', 'none');
model.result('pg8').set('showlegends', false);
model.result('pg8').create('spot1', 'SpotDiagram');
model.result('pg8').feature('spot1').set('data', 'ray2');
model.result('pg8').run;
model.result.dataset.create('ip1', 'IntersectionPoint3D');
model.result('pg8').feature('spot1').set('data', 'ip1');
model.result.dataset('ip1').set('data', 'ray2');
model.result.dataset('ip1').set('genmethod', 'pointnormal');
model.result.dataset('ip1').setIndex('genpnpoint', '3.641358278276553E-6[mm]', 0);
model.result.dataset('ip1').setIndex('genpnpoint', '206.46369894838796[mm]', 1);
model.result.dataset('ip1').setIndex('genpnpoint', '5.312837599797055E-7[mm]', 2);
model.result.dataset('ip1').set('genpnvec', [1.4619579605813038E-8 1 5.285627862189591E-9]);
model.result('pg8').feature('spot1').run;
model.result.dataset('ip1').set('genmethod', 'pointnormal');
model.result.dataset('ip1').setIndex('genpnpoint', '3.6708681083678776E-6[mm]', 0);
model.result.dataset('ip1').setIndex('genpnpoint', '206.45925148707948[mm]', 1);
model.result.dataset('ip1').setIndex('genpnpoint', '5.373144705328191E-7[mm]', 2);
model.result.dataset('ip1').set('genpnvec', [1.46195796053795E-8 1 5.2856278613225126E-9]);
model.result('pg8').set('ispendingzoom', true);
model.result('pg8').feature('spot1').run;
model.result('pg8').feature('spot1').set('spotcoordsactive', true);
model.result('pg8').feature('spot1').set('spotcoordssystem', 'global');
model.result('pg8').feature('spot1').set('spotcoordsprecision', 6);
model.result('pg8').feature('spot1').create('col1', 'Color');
model.result('pg8').run;
model.result('pg8').feature('spot1').feature('col1').set('expr', 'at(0,gop.phic)');
model.result('pg8').feature('spot1').feature('col1').set('unit', [native2unicode(hex2dec({'00' 'b0'}), 'unicode') ]);
model.result('pg8').feature('spot1').feature('col1').set('colortable', 'Viridis');
model.result('pg8').run;
model.result('pg8').feature.duplicate('spot2', 'spot1');
model.result('pg8').run;
model.result('pg8').feature('spot2').set('data', 'ray3');
model.result('pg8').run;
model.result.dataset.create('ip2', 'IntersectionPoint3D');
model.result('pg8').feature('spot2').set('data', 'ip2');
model.result.dataset('ip2').set('data', 'ray3');
model.result.dataset('ip2').set('genmethod', 'pointnormal');
model.result.dataset('ip2').setIndex('genpnpoint', '4.986591582945467E-6[mm]', 0);
model.result.dataset('ip2').setIndex('genpnpoint', '204.2324831606669[mm]', 1);
model.result.dataset('ip2').setIndex('genpnpoint', '-2.8345681088276432E-5[mm]', 2);
model.result.dataset('ip2').set('genpnvec', [4.93127182482464E-8 0.9999999999999909 -1.259634548066519E-7]);
model.result('pg8').feature('spot2').run;
model.result.dataset('ip2').set('genmethod', 'pointnormal');
model.result.dataset('ip2').setIndex('genpnpoint', '5.1244269105068095E-6[mm]', 0);
model.result.dataset('ip2').setIndex('genpnpoint', '204.22638459205962[mm]', 1);
model.result.dataset('ip2').setIndex('genpnpoint', '-2.8312896217706512E-5[mm]', 2);
model.result.dataset('ip2').set('genpnvec', [4.9312718247379283E-8 0.9999999999999909 -1.259634548049109E-7]);
model.result('pg8').set('ispendingzoom', true);
model.result('pg8').feature('spot2').run;
model.result('pg8').feature('spot2').set('posexpr', {'0.35' '0'});
model.result('pg8').run;
model.result('pg1').run;

model.title('Thermally Induced Focal Shift in High-Power Laser Focusing Systems');

model.description(['A modern high-power industrial fiber laser system can deliver up to 3' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'kW of single-mode laser radiation on to surfaces to be cut, drilled, welded or marked. Even using highly transmissive materials, the optical component used to focus the laser beam onto target surfaces can be affected by the large amount of power carried by the light. As the laser beam passes through the optical components, thermal expansion as well as variation of the refractive index of the optical materials can change the system''s focus. This example computes the focal shift in a high-powered laser system due to thermal deformation.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;

model.label('thermally_induced_focal_shift.mph');

model.modelNode.label('Components');

out = model;
