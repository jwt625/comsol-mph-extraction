function out = model
%
% composite_blade_multiple_model_method.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Composite_Materials_Module/Tutorials');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('lshell', 'LayeredShell', 'geom1');
model.physics('lshell').model('comp1');
model.physics.create('shell', 'Shell', 'geom1');
model.physics('shell').model('comp1');

model.study.create('std1');
model.study('std1').create('eig', 'Eigenfrequency');
model.study('std1').feature('eig').set('chkeigregion', true);
model.study('std1').feature('eig').set('conrad', '1');
model.study('std1').feature('eig').set('conradynhm', '1');
model.study('std1').feature('eig').set('storefact', false);
model.study('std1').feature('eig').set('solnum', 'auto');
model.study('std1').feature('eig').set('notsolnum', 'auto');
model.study('std1').feature('eig').set('outputmap', {});
model.study('std1').feature('eig').set('ngenAUX', '1');
model.study('std1').feature('eig').set('goalngenAUX', '1');
model.study('std1').feature('eig').set('ngenAUX', '1');
model.study('std1').feature('eig').set('goalngenAUX', '1');
model.study('std1').feature('eig').setSolveFor('/physics/lshell', true);
model.study('std1').feature('eig').setSolveFor('/physics/shell', true);

model.param.set('th', '1.4[mm]');
model.param.descr('th', 'Layer thickness');
model.param.set('thc', '2[cm]');
model.param.descr('thc', 'Core thickness');
model.param.set('mn', '3');
model.param.descr('mn', 'Azimuthal mode number');
model.param.set('p0', '1e4[Pa]');
model.param.descr('p0', 'Load magnitude');

model.material.create('mat1', 'Common', '');
model.material('mat1').label(['Material: Carbon' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Epoxy']);
model.material.create('lmat1', 'LayeredMaterial', '');
model.material('lmat1').label('Layered Material: CE-[0]');
model.material('lmat1').setIndex('thickness', 'th*4', 0);
model.material('lmat1').setIndex('meshPoints', 4, 0);
model.material.create('mat2', 'Common', '');
model.material('mat2').label(['Material: Glass' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Vinylester']);
model.material.create('lmat2', 'LayeredMaterial', '');
model.material('lmat2').label('Layered Material: GV-[0/45/-45/90]_s');
model.material('lmat2').setIndex('link', 'mat2', 0);
model.material('lmat2').setIndex('thickness', 'th', 0);
model.material('lmat2').setIndex('meshPoints', 1, 0);
model.material('lmat2').setIndex('layername', 'Layer 2', 1);
model.material('lmat2').setIndex('link', 'mat2', 1);
model.material('lmat2').setIndex('rotation', '0.0', 1);
model.material('lmat2').setIndex('thickness', 'th', 1);
model.material('lmat2').setIndex('meshPoints', 1, 1);
model.material('lmat2').setIndex('tag', 'lmat2_2', 1);
model.material('lmat2').setIndex('layername', 'Layer 2', 1);
model.material('lmat2').setIndex('link', 'mat2', 1);
model.material('lmat2').setIndex('rotation', '0.0', 1);
model.material('lmat2').setIndex('thickness', 'th', 1);
model.material('lmat2').setIndex('meshPoints', 1, 1);
model.material('lmat2').setIndex('tag', 'lmat2_2', 1);
model.material('lmat2').setIndex('layername', 'Layer 3', 2);
model.material('lmat2').setIndex('link', 'mat2', 2);
model.material('lmat2').setIndex('rotation', '0.0', 2);
model.material('lmat2').setIndex('thickness', 'th', 2);
model.material('lmat2').setIndex('meshPoints', 1, 2);
model.material('lmat2').setIndex('tag', 'lmat2_3', 2);
model.material('lmat2').setIndex('layername', 'Layer 3', 2);
model.material('lmat2').setIndex('link', 'mat2', 2);
model.material('lmat2').setIndex('rotation', '0.0', 2);
model.material('lmat2').setIndex('thickness', 'th', 2);
model.material('lmat2').setIndex('meshPoints', 1, 2);
model.material('lmat2').setIndex('tag', 'lmat2_3', 2);
model.material('lmat2').setIndex('layername', 'Layer 4', 3);
model.material('lmat2').setIndex('link', 'mat2', 3);
model.material('lmat2').setIndex('rotation', '0.0', 3);
model.material('lmat2').setIndex('thickness', 'th', 3);
model.material('lmat2').setIndex('meshPoints', 1, 3);
model.material('lmat2').setIndex('tag', 'lmat2_4', 3);
model.material('lmat2').setIndex('layername', 'Layer 4', 3);
model.material('lmat2').setIndex('link', 'mat2', 3);
model.material('lmat2').setIndex('rotation', '0.0', 3);
model.material('lmat2').setIndex('thickness', 'th', 3);
model.material('lmat2').setIndex('meshPoints', 1, 3);
model.material('lmat2').setIndex('tag', 'lmat2_4', 3);
model.material('lmat2').setIndex('layername', 'Layer 5', 4);
model.material('lmat2').setIndex('link', 'mat2', 4);
model.material('lmat2').setIndex('rotation', '0.0', 4);
model.material('lmat2').setIndex('thickness', 'th', 4);
model.material('lmat2').setIndex('meshPoints', 1, 4);
model.material('lmat2').setIndex('tag', 'lmat2_5', 4);
model.material('lmat2').setIndex('layername', 'Layer 5', 4);
model.material('lmat2').setIndex('link', 'mat2', 4);
model.material('lmat2').setIndex('rotation', '0.0', 4);
model.material('lmat2').setIndex('thickness', 'th', 4);
model.material('lmat2').setIndex('meshPoints', 1, 4);
model.material('lmat2').setIndex('tag', 'lmat2_5', 4);
model.material('lmat2').setIndex('layername', 'Layer 6', 5);
model.material('lmat2').setIndex('link', 'mat2', 5);
model.material('lmat2').setIndex('rotation', '0.0', 5);
model.material('lmat2').setIndex('thickness', 'th', 5);
model.material('lmat2').setIndex('meshPoints', 1, 5);
model.material('lmat2').setIndex('tag', 'lmat2_6', 5);
model.material('lmat2').setIndex('layername', 'Layer 6', 5);
model.material('lmat2').setIndex('link', 'mat2', 5);
model.material('lmat2').setIndex('rotation', '0.0', 5);
model.material('lmat2').setIndex('thickness', 'th', 5);
model.material('lmat2').setIndex('meshPoints', 1, 5);
model.material('lmat2').setIndex('tag', 'lmat2_6', 5);
model.material('lmat2').setIndex('layername', 'Layer 7', 6);
model.material('lmat2').setIndex('link', 'mat2', 6);
model.material('lmat2').setIndex('rotation', '0.0', 6);
model.material('lmat2').setIndex('thickness', 'th', 6);
model.material('lmat2').setIndex('meshPoints', 1, 6);
model.material('lmat2').setIndex('tag', 'lmat2_7', 6);
model.material('lmat2').setIndex('layername', 'Layer 7', 6);
model.material('lmat2').setIndex('link', 'mat2', 6);
model.material('lmat2').setIndex('rotation', '0.0', 6);
model.material('lmat2').setIndex('thickness', 'th', 6);
model.material('lmat2').setIndex('meshPoints', 1, 6);
model.material('lmat2').setIndex('tag', 'lmat2_7', 6);
model.material('lmat2').setIndex('layername', 'Layer 8', 7);
model.material('lmat2').setIndex('link', 'mat2', 7);
model.material('lmat2').setIndex('rotation', '0.0', 7);
model.material('lmat2').setIndex('thickness', 'th', 7);
model.material('lmat2').setIndex('meshPoints', 1, 7);
model.material('lmat2').setIndex('tag', 'lmat2_8', 7);
model.material('lmat2').setIndex('layername', 'Layer 8', 7);
model.material('lmat2').setIndex('link', 'mat2', 7);
model.material('lmat2').setIndex('rotation', '0.0', 7);
model.material('lmat2').setIndex('thickness', 'th', 7);
model.material('lmat2').setIndex('meshPoints', 1, 7);
model.material('lmat2').setIndex('tag', 'lmat2_8', 7);
model.material('lmat2').setIndex('rotation', 45, 1);
model.material('lmat2').setIndex('rotation', -45, 2);
model.material('lmat2').setIndex('rotation', 90, 3);
model.material('lmat2').setIndex('rotation', 90, 4);
model.material('lmat2').setIndex('rotation', -45, 5);
model.material('lmat2').setIndex('rotation', 45, 6);
model.material('lmat2').setIndex('rotation', 0, 7);
model.material('lmat2').set('widthRatio', 0.6);
model.material.create('mat3', 'Common', '');
model.material('mat3').label('Material: PVC Foam');
model.material.create('lmat3', 'LayeredMaterial', '');
model.material('lmat3').label('Layered Material: PF-[0]');
model.material('lmat3').setIndex('link', 'mat3', 0);
model.material('lmat3').setIndex('thickness', 'thc', 0);
model.material('lmat3').setIndex('meshPoints', 10, 0);

model.geom('geom1').create('wp1', 'WorkPlane');
model.geom('geom1').feature('wp1').set('unite', true);
model.geom('geom1').feature('wp1').set('quickplane', 'zy');
model.geom('geom1').feature('wp1').geom.create('ls1', 'LineSegment');
model.geom('geom1').feature('wp1').geom.feature('ls1').set('specify1', 'coord');
model.geom('geom1').feature('wp1').geom.feature('ls1').set('specify2', 'coord');
model.geom('geom1').feature('wp1').geom.feature('ls1').set('coord2', [0 0.4]);
model.geom('geom1').run('wp1');
model.geom('geom1').feature.create('ext1', 'Extrude');
model.geom('geom1').feature('ext1').setIndex('distance', 2, 0);
model.geom('geom1').feature('ext1').set('reverse', true);
model.geom('geom1').feature('ext1').setIndex('scale', 2, 0, 1);
model.geom('geom1').feature('ext1').setIndex('twist', 30, 0);
model.geom('geom1').runPre('fin');

model.view('view1').set('showgrid', false);

model.geom('geom1').run;

model.coordSystem('sys1').set('mastercoordsystcomp', '1');

model.material.create('stlmat1', 'LayeredMaterialStack', 'comp1');
model.material('stlmat1').feature('stllmat1').label(['Carbon' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Epoxy-1 [0]']);
model.material('stlmat1').feature.duplicate('stllmat2', 'stllmat1');
model.material('stlmat1').feature('stllmat2').label(['Glass' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Vinylester-1 [0/45/-45/90]_s']);
model.material('stlmat1').feature('stllmat2').set('link', 'lmat2');
model.material('stlmat1').feature.duplicate('stllmat3', 'stllmat2');
model.material('stlmat1').feature('stllmat3').label('PVC Foam [0]');
model.material('stlmat1').feature('stllmat3').set('link', 'lmat3');
model.material('stlmat1').feature.duplicate('stllmat4', 'stllmat3');
model.material('stlmat1').feature('stllmat4').label(['Glass' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Vinylester-2 [0/45/-45/90]_s']);
model.material('stlmat1').feature('stllmat4').set('link', 'lmat2');
model.material('stlmat1').feature.duplicate('stllmat5', 'stllmat4');
model.material('stlmat1').feature('stllmat5').label(['Carbon' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Epoxy-2 [0]']);
model.material('stlmat1').feature('stllmat5').set('link', 'lmat1');
model.material('stlmat1').set('widthRatio', 0.4);

model.physics('lshell').prop('LayerSelection').set('bndType', 'allShell');
model.physics('lshell').label('Layered Shell (Multiple Model Method)');
model.physics('lshell').prop('LayerSelection').set('allLayers', false);
model.physics('lshell').prop('LayerSelection').set('shelllist_lCheck', {'0' '0' '0' '0' '0' '0' '0' '0' '0' '0'  ...
'0' '0' '0' '0' '0' '0' '0' '0' '0'});
model.physics('lshell').prop('LayerSelection').setIndex('shelllist_lCheck', 1, 0, 0);
model.physics('lshell').prop('LayerSelection').setIndex('shelllist_lCheck', 1, 9, 0);
model.physics('lshell').prop('LayerSelection').setIndex('shelllist_lCheck', 1, 18, 0);
model.physics('lshell').feature('lemm1').set('TransverseIsotropic', true);
model.physics('lshell').create('fix1', 'Fixed', 1);
model.physics('lshell').feature('fix1').selection.set([1]);
model.physics('lshell').feature('fix1').set('allLayers', true);
model.physics('lshell').create('fl1', 'FaceLoad', 2);
model.physics('lshell').feature('fl1').label('Face Load, Top');
model.physics('lshell').feature('fl1').selection.set([1]);
model.physics('lshell').feature('fl1').set('applyTo', 'top');
model.physics('lshell').feature('fl1').set('FperArea', {'0' '0' '-p0*exp(-j*mn*atan2(Y,X))'});
model.physics('lshell').feature.duplicate('fl2', 'fl1');
model.physics('lshell').feature('fl2').label('Face Load, Bottom');
model.physics('lshell').feature('fl2').set('applyTo', 'bottom');
model.physics('shell').label('Shell 1 (Multiple Model Method)');
model.physics('shell').prop('ShellAdvancedSettings').set('UseMITCInterp', false);
model.physics('shell').create('llem1', 'LayeredElastic', 2);
model.physics('shell').feature('llem1').selection.set([1]);
model.physics('shell').feature('llem1').set('allLayers', false);
model.physics('shell').feature('llem1').set('stack', 'stlmat1@stllmat2');
model.physics('shell').feature('llem1').set('SolidModel', 'Orthotropic');
model.physics('shell').feature('llem1').set('TransverseIsotropic', true);
model.physics('shell').feature('llem1').set('ShearCorrectionFactor', 'UserDefined');
model.physics('shell').create('fix1', 'Fixed', 1);
model.physics('shell').feature('fix1').selection.set([1]);
model.physics.copy('shell2', 'shell', 'comp1');
model.physics('shell2').label('Shell 2 (Multiple Model Method)');
model.physics('shell2').feature('llem1').set('stack', 'stlmat1@stllmat4');

model.material('mat1').propertyGroup.create('TransverseIsotropic', 'Transversely_isotropic');
model.material('mat1').propertyGroup('TransverseIsotropic').set('Evect', {'139e9' '9e9'});
model.material('mat1').propertyGroup('TransverseIsotropic').set('nuvect', {'0.32' '0.32'});
model.material('mat1').propertyGroup('TransverseIsotropic').set('Gvect1', {'5.5e9'});
model.material('mat1').propertyGroup('def').set('density', {'1560'});
model.material('mat2').propertyGroup.create('TransverseIsotropic', 'Transversely_isotropic');
model.material('mat2').propertyGroup('TransverseIsotropic').set('Evect', {'41e9' '9e9'});
model.material('mat2').propertyGroup('TransverseIsotropic').set('nuvect', {'0.3' '0.3'});
model.material('mat2').propertyGroup('TransverseIsotropic').set('Gvect1', {'4.1e9'});
model.material('mat2').propertyGroup('def').set('density', {'1890'});
model.material('mat3').propertyGroup.create('TransverseIsotropic', 'Transversely_isotropic');
model.material('mat3').propertyGroup('TransverseIsotropic').set('Evect', {'250e6' '250e6'});
model.material('mat3').propertyGroup('TransverseIsotropic').set('nuvect', {'0.35' '0.35'});
model.material('mat3').propertyGroup('TransverseIsotropic').set('Gvect1', {'92.6e6'});
model.material('mat3').propertyGroup('def').set('density', {'200'});

model.multiphysics.create('lssh1', 'LayeredShellShellConnection', 'geom1', 2);
model.multiphysics('lssh1').set('bndType', 'allShell');
model.multiphysics.duplicate('lssh2', 'lssh1');
model.multiphysics('lssh2').set('Shell_physics', 'shell2');

model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('ftri1').selection.all;
model.mesh('mesh1').feature('size').set('hauto', 2);
model.mesh('mesh1').run;

model.study('std1').label('Study: Eigenfrequency (Multiple Model Method)');
model.study('std1').setGenPlots(false);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'eig');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_ar').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_ar2').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_ar').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_ar2').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_ar').set('scaleval', '0.01');
model.sol('sol1').feature('v1').feature('comp1_ar2').set('scaleval', '0.01');
model.sol('sol1').feature('v1').set('control', 'eig');
model.sol('sol1').create('e1', 'Eigenvalue');
model.sol('sol1').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol1').feature('e1').set('eigvfunscaleparam', '2.1499999999999997E-6');
model.sol('sol1').feature('e1').set('control', 'eig');
model.sol('sol1').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.dataset.create('lshl1', 'LayeredMaterial');
model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').run;
model.result('pg1').label('Mode Shape (Multiple Model Method)');
model.result('pg1').set('data', 'lshl1');
model.result('pg1').set('showlegends', false);
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('colortable', 'AuroraAustralis');
model.result('pg1').feature('surf1').create('def1', 'Deform');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature.duplicate('surf2', 'surf1');
model.result('pg1').run;
model.result('pg1').feature('surf2').set('expr', 'shell.disp');
model.result('pg1').feature('surf2').set('titletype', 'none');
model.result('pg1').feature('surf2').set('inheritplot', 'surf1');
model.result('pg1').run;
model.result('pg1').feature('surf2').feature('def1').set('expr', {'u2' 'v2' 'w2'});
model.result('pg1').run;
model.result('pg1').feature.duplicate('surf3', 'surf2');
model.result('pg1').run;
model.result('pg1').feature('surf3').set('expr', 'shell2.disp');
model.result('pg1').run;
model.result('pg1').feature('surf3').feature('def1').set('expr', {'u3' 'v3' 'w3'});
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').set('looplevel', [2]);
model.result('pg1').run;
model.result('pg1').set('looplevel', [3]);
model.result('pg1').run;
model.result('pg1').set('looplevel', [4]);
model.result('pg1').run;
model.result('pg1').set('looplevel', [5]);
model.result('pg1').run;
model.result('pg1').set('looplevel', [6]);
model.result('pg1').run;
model.result('pg1').set('looplevel', [1]);
model.result('pg1').run;

model.study.create('std2');
model.study('std2').create('freq', 'Frequency');
model.study('std2').feature('freq').setSolveFor('/physics/lshell', true);
model.study('std2').feature('freq').setSolveFor('/physics/shell', true);
model.study('std2').feature('freq').setSolveFor('/physics/shell2', true);
model.study('std2').feature('freq').setSolveFor('/multiphysics/lssh1', true);
model.study('std2').feature('freq').setSolveFor('/multiphysics/lssh2', true);
model.study('std2').feature('freq').set('plist', 10);
model.study('std2').label('Study: Frequency (Multiple Model Method)');
model.study('std2').setGenPlots(false);

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'freq');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_ar').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_ar2').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_ar').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_ar2').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_ar').set('scaleval', '0.01');
model.sol('sol2').feature('v1').feature('comp1_ar2').set('scaleval', '0.01');
model.sol('sol2').feature('v1').set('control', 'freq');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('p1', 'Parametric');
model.sol('sol2').feature('s1').feature.remove('pDef');
model.sol('sol2').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol2').feature('s1').feature('p1').set('plistarr', {'10'});
model.sol('sol2').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol2').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol2').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol2').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol2').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol2').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol2').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol2').feature('s1').feature('p1').set('probes', {});
model.sol('sol2').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol2').feature('s1').set('linpmethod', 'sol');
model.sol('sol2').feature('s1').set('linpsol', 'zero');
model.sol('sol2').feature('s1').set('control', 'freq');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('seDef', 'Segregated');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').feature('s1').feature.remove('seDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result.dataset.create('lshl2', 'LayeredMaterial');
model.result.dataset('lshl2').set('data', 'dset2');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').run;
model.result('pg2').label('Mises Peak Stress');
model.result('pg2').set('data', 'lshl2');
model.result('pg2').set('edges', false);
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', 'lshell.mises_peak');
model.result('pg2').feature('surf1').set('unit', 'GPa');
model.result('pg2').feature('surf1').set('colortable', 'Prism');
model.result('pg2').feature('surf1').create('def1', 'Deform');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature.duplicate('surf2', 'surf1');
model.result('pg2').run;
model.result('pg2').feature('surf2').set('titletype', 'none');
model.result('pg2').feature('surf2').set('inheritplot', 'surf1');
model.result('pg2').run;
model.result('pg2').feature('surf2').feature('def1').set('expr', {'u2' 'v2' 'w2'});
model.result('pg2').run;
model.result('pg2').feature('surf2').set('expr', 'shell.mises_peak');
model.result('pg2').feature.duplicate('surf3', 'surf2');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('surf3').feature('def1').set('expr', {'u3' 'v3' 'w3'});
model.result('pg2').run;
model.result('pg2').feature('surf3').set('expr', 'shell2.mises_peak');
model.result('pg2').run;
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').run;
model.result('pg3').label('Displacement, Slice');
model.result('pg3').set('data', 'dset2');
model.result('pg3').set('edges', false);
model.result('pg3').create('lss1', 'LayeredMaterialSlice');
model.result('pg3').feature('lss1').set('locdef', 'relative');
model.result('pg3').feature('lss1').set('localzrel', 1);
model.result('pg3').run;
model.result('pg3').run;

model.physics.copy('lshell2', 'lshell', 'comp1');
model.physics('lshell2').label('Layered Shell (Layerwise Theory)');
model.physics('lshell2').prop('LayerSelection').set('allLayers', true);

model.study.create('std3');
model.study('std3').create('eig', 'Eigenfrequency');
model.study('std3').feature('eig').set('plotgroup', 'Default');
model.study('std3').feature('eig').set('chkeigregion', true);
model.study('std3').feature('eig').set('conrad', '1');
model.study('std3').feature('eig').set('conradynhm', '1');
model.study('std3').feature('eig').set('storefact', false);
model.study('std3').feature('eig').set('solnum', 'auto');
model.study('std3').feature('eig').set('notsolnum', 'auto');
model.study('std3').feature('eig').set('outputmap', {});
model.study('std3').feature('eig').set('ngenAUX', '1');
model.study('std3').feature('eig').set('goalngenAUX', '1');
model.study('std3').feature('eig').set('ngenAUX', '1');
model.study('std3').feature('eig').set('goalngenAUX', '1');
model.study('std3').feature('eig').setSolveFor('/physics/lshell', true);
model.study('std3').feature('eig').setSolveFor('/physics/shell', true);
model.study('std3').feature('eig').setSolveFor('/physics/shell2', true);
model.study('std3').feature('eig').setSolveFor('/physics/lshell2', true);
model.study('std3').feature('eig').setSolveFor('/multiphysics/lssh1', true);
model.study('std3').feature('eig').setSolveFor('/multiphysics/lssh2', true);
model.study('std3').feature('eig').setEntry('activate', 'lshell', false);
model.study('std3').feature('eig').setEntry('activate', 'shell', false);
model.study('std3').feature('eig').setEntry('activate', 'shell2', false);
model.study('std3').feature('eig').setEntry('activateCoupling', 'lssh1', false);
model.study('std3').feature('eig').setEntry('activateCoupling', 'lssh2', false);
model.study('std3').label('Study: Eigenfrequency (Layerwise Theory)');
model.study('std3').setGenPlots(false);

model.sol.create('sol3');
model.sol('sol3').study('std3');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std3');
model.sol('sol3').feature('st1').set('studystep', 'eig');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').set('control', 'eig');
model.sol('sol3').create('e1', 'Eigenvalue');
model.sol('sol3').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol3').feature('e1').set('eigvfunscaleparam', '2.1499999999999997E-6');
model.sol('sol3').feature('e1').set('control', 'eig');
model.sol('sol3').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol3').attach('std3');
model.sol('sol3').runAll;

model.result.dataset.duplicate('lshl3', 'lshl1');
model.result.dataset('lshl3').set('data', 'dset3');
model.result('pg1').run;
model.result.duplicate('pg4', 'pg1');
model.result('pg4').run;
model.result('pg4').label('Mode Shape (Layerwise Theory)');
model.result('pg4').set('data', 'none');
model.result('pg4').run;
model.result('pg4').feature.remove('surf2');
model.result('pg4').feature.remove('surf3');
model.result('pg4').run;
model.result('pg4').feature('surf1').set('expr', 'lshell2.disp');
model.result('pg4').run;
model.result('pg4').feature('surf1').feature('def1').set('expr', {'u4' 'v4' 'w4'});
model.result('pg4').run;
model.result('pg4').set('data', 'lshl3');
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').feature('surf1').set('expr', 'lshell2.disp');
model.result('pg4').feature('surf1').set('descr', 'Displacement magnitude');
model.result('pg4').run;
model.result('pg4').run;
model.result.move('pg4', 1);

model.study.create('std4');
model.study('std4').create('freq', 'Frequency');
model.study('std4').feature('freq').setSolveFor('/physics/lshell', true);
model.study('std4').feature('freq').setSolveFor('/physics/shell', true);
model.study('std4').feature('freq').setSolveFor('/physics/shell2', true);
model.study('std4').feature('freq').setSolveFor('/physics/lshell2', true);
model.study('std4').feature('freq').setSolveFor('/multiphysics/lssh1', true);
model.study('std4').feature('freq').setSolveFor('/multiphysics/lssh2', true);
model.study('std4').feature('freq').set('plist', 10);
model.study('std4').feature('freq').setEntry('activate', 'lshell', false);
model.study('std4').feature('freq').setEntry('activate', 'shell', false);
model.study('std4').feature('freq').setEntry('activate', 'shell2', false);
model.study('std4').feature('freq').setEntry('activateCoupling', 'lssh1', false);
model.study('std4').feature('freq').setEntry('activateCoupling', 'lssh2', false);
model.study('std4').label('Study: Frequency (Layerwise Theory)');
model.study('std4').setGenPlots(false);

model.sol.create('sol4');
model.sol('sol4').study('std4');
model.sol('sol4').create('st1', 'StudyStep');
model.sol('sol4').feature('st1').set('study', 'std4');
model.sol('sol4').feature('st1').set('studystep', 'freq');
model.sol('sol4').create('v1', 'Variables');
model.sol('sol4').feature('v1').set('control', 'freq');
model.sol('sol4').create('s1', 'Stationary');
model.sol('sol4').feature('s1').create('p1', 'Parametric');
model.sol('sol4').feature('s1').feature.remove('pDef');
model.sol('sol4').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol4').feature('s1').feature('p1').set('plistarr', {'10'});
model.sol('sol4').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol4').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol4').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol4').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol4').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol4').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol4').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol4').feature('s1').feature('p1').set('probes', {});
model.sol('sol4').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol4').feature('s1').set('linpmethod', 'sol');
model.sol('sol4').feature('s1').set('linpsol', 'zero');
model.sol('sol4').feature('s1').set('control', 'freq');
model.sol('sol4').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol4').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol4').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol4').feature('s1').feature.remove('fcDef');
model.sol('sol4').attach('std4');
model.sol('sol4').runAll;

model.result.dataset.duplicate('lshl4', 'lshl2');
model.result.dataset('lshl4').set('data', 'dset4');
model.result('pg2').run;
model.result('pg2').set('plotarrayenable', true);
model.result('pg2').set('arrayaxis', 'y');
model.result('pg2').set('relpadding', 1);
model.result('pg2').feature('surf2').set('arraydim', '1');
model.result('pg2').run;
model.result('pg2').feature('surf2').set('manualindexing', true);
model.result('pg2').feature('surf3').set('arraydim', '1');
model.result('pg2').run;
model.result('pg2').feature('surf3').set('manualindexing', true);
model.result('pg2').feature.duplicate('surf4', 'surf3');
model.result('pg2').feature('surf4').set('arraydim', '1');
model.result('pg2').run;
model.result('pg2').feature('surf4').set('data', 'lshl4');
model.result('pg2').feature('surf4').set('expr', 'lshell2.mises_peak');
model.result('pg2').feature('surf4').set('arrayindex', 1);
model.result('pg2').run;
model.result('pg2').feature('surf4').feature('def1').set('expr', {'u4' 'v4' 'w4'});
model.result('pg2').run;
model.result('pg2').run;
model.result('pg3').run;
model.result('pg3').set('plotarrayenable', true);
model.result('pg3').set('arrayaxis', 'y');
model.result('pg3').set('relpadding', 1);
model.result('pg3').feature('lss1').set('arraydim', '1');
model.result('pg3').run;
model.result('pg3').feature.duplicate('lss2', 'lss1');
model.result('pg3').feature('lss2').set('arraydim', '1');
model.result('pg3').run;
model.result('pg3').feature('lss2').set('data', 'dset4');
model.result('pg3').feature('lss2').set('expr', 'lshell2.disp');
model.result('pg3').feature('lss2').set('titletype', 'none');
model.result('pg3').feature('lss2').set('inheritplot', 'lss1');
model.result('pg3').run;

model.physics.copy('shell3', 'shell', 'comp1');
model.physics('shell3').label('Shell (ESL Theory)');
model.physics('shell3').feature('llem1').set('allLayers', true);
model.physics('shell3').create('fl1', 'FaceLoad', 2);
model.physics('shell3').feature('fl1').label('Face Load, Top');
model.physics('shell3').feature('fl1').selection.set([1]);
model.physics('shell3').feature('fl1').set('loadLocation', 'top');
model.physics('shell3').feature('fl1').set('Ff', {'0' '0' '-p0*exp(-j*mn*atan2(Y,X))'});
model.physics('shell3').feature.duplicate('fl2', 'fl1');
model.physics('shell3').feature('fl2').label('Face Load, Bottom');
model.physics('shell3').feature('fl2').set('loadLocation', 'bottom');

model.study.create('std5');
model.study('std5').create('eig', 'Eigenfrequency');
model.study('std5').feature('eig').set('plotgroup', 'Default');
model.study('std5').feature('eig').set('chkeigregion', true);
model.study('std5').feature('eig').set('conrad', '1');
model.study('std5').feature('eig').set('conradynhm', '1');
model.study('std5').feature('eig').set('storefact', false);
model.study('std5').feature('eig').set('solnum', 'auto');
model.study('std5').feature('eig').set('notsolnum', 'auto');
model.study('std5').feature('eig').set('outputmap', {});
model.study('std5').feature('eig').set('ngenAUX', '1');
model.study('std5').feature('eig').set('goalngenAUX', '1');
model.study('std5').feature('eig').set('ngenAUX', '1');
model.study('std5').feature('eig').set('goalngenAUX', '1');
model.study('std5').feature('eig').setSolveFor('/physics/lshell', true);
model.study('std5').feature('eig').setSolveFor('/physics/shell', true);
model.study('std5').feature('eig').setSolveFor('/physics/shell2', true);
model.study('std5').feature('eig').setSolveFor('/physics/lshell2', true);
model.study('std5').feature('eig').setSolveFor('/physics/shell3', true);
model.study('std5').feature('eig').setSolveFor('/multiphysics/lssh1', true);
model.study('std5').feature('eig').setSolveFor('/multiphysics/lssh2', true);
model.study('std5').feature('eig').setEntry('activate', 'lshell', false);
model.study('std5').feature('eig').setEntry('activate', 'shell', false);
model.study('std5').feature('eig').setEntry('activate', 'shell2', false);
model.study('std5').feature('eig').setEntry('activate', 'lshell2', false);
model.study('std5').feature('eig').setEntry('activateCoupling', 'lssh1', false);
model.study('std5').feature('eig').setEntry('activateCoupling', 'lssh2', false);
model.study('std5').label('Study: Eigenfrequency (ESL Theory)');
model.study('std5').setGenPlots(false);

model.sol.create('sol5');
model.sol('sol5').study('std5');
model.sol('sol5').create('st1', 'StudyStep');
model.sol('sol5').feature('st1').set('study', 'std5');
model.sol('sol5').feature('st1').set('studystep', 'eig');
model.sol('sol5').create('v1', 'Variables');
model.sol('sol5').feature('v1').feature('comp1_ar3').set('scalemethod', 'manual');
model.sol('sol5').feature('v1').feature('comp1_ar3').set('resscalemethod', 'parent');
model.sol('sol5').feature('v1').feature('comp1_ar3').set('scaleval', '0.01');
model.sol('sol5').feature('v1').set('control', 'eig');
model.sol('sol5').create('e1', 'Eigenvalue');
model.sol('sol5').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol5').feature('e1').set('eigvfunscaleparam', '2.1499999999999997E-6');
model.sol('sol5').feature('e1').set('control', 'eig');
model.sol('sol5').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol5').attach('std5');
model.sol('sol5').runAll;

model.result.dataset.duplicate('lshl5', 'lshl1');
model.result.dataset('lshl5').set('data', 'dset5');
model.result('pg4').run;
model.result.duplicate('pg5', 'pg4');
model.result('pg5').run;
model.result('pg5').label('Mode Shape (ESL Theory)');
model.result('pg5').set('data', 'none');
model.result('pg5').run;
model.result('pg5').feature('surf1').set('expr', 'shell3.disp');
model.result('pg5').run;
model.result('pg5').feature('surf1').feature('def1').set('expr', {'u5' 'v5' 'w5'});
model.result('pg5').run;
model.result('pg5').set('data', 'lshl5');
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').feature('surf1').set('expr', 'shell3.disp');
model.result('pg5').feature('surf1').set('descr', 'Displacement magnitude');
model.result('pg5').run;
model.result('pg5').run;
model.result.move('pg5', 2);

model.study.create('std6');
model.study('std6').create('freq', 'Frequency');
model.study('std6').feature('freq').setSolveFor('/physics/lshell', true);
model.study('std6').feature('freq').setSolveFor('/physics/shell', true);
model.study('std6').feature('freq').setSolveFor('/physics/shell2', true);
model.study('std6').feature('freq').setSolveFor('/physics/lshell2', true);
model.study('std6').feature('freq').setSolveFor('/physics/shell3', true);
model.study('std6').feature('freq').setSolveFor('/multiphysics/lssh1', true);
model.study('std6').feature('freq').setSolveFor('/multiphysics/lssh2', true);
model.study('std6').feature('freq').set('plist', 10);
model.study('std6').feature('freq').setEntry('activate', 'lshell', false);
model.study('std6').feature('freq').setEntry('activate', 'shell', false);
model.study('std6').feature('freq').setEntry('activate', 'shell2', false);
model.study('std6').feature('freq').setEntry('activate', 'lshell2', false);
model.study('std6').feature('freq').setEntry('activateCoupling', 'lssh1', false);
model.study('std6').feature('freq').setEntry('activateCoupling', 'lssh2', false);
model.study('std6').label('Study: Frequency (ESL Theory)');
model.study('std6').setGenPlots(false);

model.sol.create('sol6');
model.sol('sol6').study('std6');
model.sol('sol6').create('st1', 'StudyStep');
model.sol('sol6').feature('st1').set('study', 'std6');
model.sol('sol6').feature('st1').set('studystep', 'freq');
model.sol('sol6').create('v1', 'Variables');
model.sol('sol6').feature('v1').feature('comp1_ar3').set('scalemethod', 'manual');
model.sol('sol6').feature('v1').feature('comp1_ar3').set('resscalemethod', 'parent');
model.sol('sol6').feature('v1').feature('comp1_ar3').set('scaleval', '0.01');
model.sol('sol6').feature('v1').set('control', 'freq');
model.sol('sol6').create('s1', 'Stationary');
model.sol('sol6').feature('s1').create('p1', 'Parametric');
model.sol('sol6').feature('s1').feature.remove('pDef');
model.sol('sol6').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol6').feature('s1').feature('p1').set('plistarr', {'10'});
model.sol('sol6').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol6').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol6').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol6').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol6').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol6').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol6').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol6').feature('s1').feature('p1').set('probes', {});
model.sol('sol6').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol6').feature('s1').set('linpmethod', 'sol');
model.sol('sol6').feature('s1').set('linpsol', 'zero');
model.sol('sol6').feature('s1').set('control', 'freq');
model.sol('sol6').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol6').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol6').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol6').feature('s1').feature.remove('fcDef');
model.sol('sol6').attach('std6');
model.sol('sol6').runAll;

model.result.dataset.duplicate('lshl6', 'lshl4');
model.result.dataset('lshl6').set('data', 'dset6');
model.result('pg2').feature('surf4').set('arraydim', '1');
model.result('pg2').run;
model.result('pg2').feature.duplicate('surf5', 'surf4');
model.result('pg2').feature('surf5').set('arraydim', '1');
model.result('pg2').run;
model.result('pg2').feature('surf5').set('data', 'lshl6');
model.result('pg2').feature('surf5').set('expr', 'shell3.mises_peak');
model.result('pg2').feature('surf5').set('arrayindex', 2);
model.result('pg2').run;
model.result('pg2').feature('surf5').feature('def1').set('expr', {'u5' 'v5' 'w5'});
model.result('pg2').run;
model.result('pg2').create('tlan1', 'TableAnnotation');
model.result('pg2').feature('tlan1').set('arraydim', '1');
model.result('pg2').feature('tlan1').set('source', 'localtable');
model.result('pg2').feature('tlan1').setIndex('localtablematrix', -0.8, 0, 0);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 0.5, 0, 1);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 0, 0, 2);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 'Multiple Model Method', 0, 3);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', -0.8, 1, 0);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 1.6, 1, 1);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 0, 1, 2);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 'Layerwise Theory', 1, 3);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', -0.8, 2, 0);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 2.7, 2, 1);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 0, 2, 2);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 'ESL Theory', 2, 3);
model.result('pg2').feature('tlan1').set('showpoint', false);
model.result('pg2').feature('tlan1').set('anchorpoint', 'lowermiddle');
model.result('pg2').run;
model.result('pg3').feature('lss2').set('arraydim', '1');
model.result('pg3').run;
model.result('pg3').feature.duplicate('lss3', 'lss2');
model.result('pg3').feature('lss3').set('arraydim', '1');
model.result('pg3').run;
model.result('pg3').feature('lss3').set('data', 'dset6');
model.result('pg3').feature('lss3').set('expr', 'shell3.disp');
model.result('pg3').run;
model.result('pg2').feature('tlan1').set('arraydim', '1');
model.result('pg2').run;
model.result('pg3').run;
model.result('pg3').feature.copy('tlan1', 'pg2/tlan1');
model.result('pg3').feature('tlan1').set('arraydim', '1');
model.result('pg3').run;
model.result('pg3').run;
model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').run;
model.result('pg6').label('Mises Peak Stress, Through Thickness');
model.result('pg6').set('data', 'dset2');
model.result('pg6').set('legendpos', 'middleright');
model.result('pg6').create('thr1', 'ThroughThickness');
model.result('pg6').feature('thr1').set('markerpos', 'datapoints');
model.result('pg6').feature('thr1').set('linewidth', 'preference');
model.result('pg6').feature('thr1').selection.set([2]);
model.result('pg6').feature('thr1').set('expr', 'lshell.mises_peak');
model.result('pg6').feature('thr1').set('unit', 'GPa');
model.result('pg6').feature('thr1').set('includeinterfaces', 'exterior');
model.result('pg6').feature('thr1').set('linestyle', 'dashed');
model.result('pg6').feature('thr1').set('linecolor', 'blue');
model.result('pg6').feature('thr1').set('linewidth', 2);
model.result('pg6').feature('thr1').set('legend', true);
model.result('pg6').feature('thr1').set('legendmethod', 'manual');
model.result('pg6').feature('thr1').setIndex('legends', 'Multiple Model Method', 0);
model.result('pg6').feature.duplicate('thr2', 'thr1');
model.result('pg6').run;
model.result('pg6').feature('thr2').set('expr', 'shell.mises_peak');
model.result('pg6').feature('thr2').set('titletype', 'none');
model.result('pg6').feature('thr2').set('legend', false);
model.result('pg6').feature.duplicate('thr3', 'thr2');
model.result('pg6').run;
model.result('pg6').feature('thr3').set('expr', 'shell2.mises_peak');
model.result('pg6').run;
model.result('pg6').feature.duplicate('thr4', 'thr1');
model.result('pg6').run;
model.result('pg6').feature('thr4').set('data', 'dset4');
model.result('pg6').feature('thr4').set('expr', 'lshell2.mises_peak');
model.result('pg6').feature('thr4').set('titletype', 'none');
model.result('pg6').feature('thr4').set('linestyle', 'solid');
model.result('pg6').feature('thr4').set('linecolor', 'green');
model.result('pg6').feature('thr4').set('linewidth', 1);
model.result('pg6').feature('thr4').setIndex('legends', 'Layerwise Theory', 0);
model.result('pg6').feature.duplicate('thr5', 'thr4');
model.result('pg6').run;
model.result('pg6').feature('thr5').set('data', 'dset6');
model.result('pg6').feature('thr5').set('expr', 'shell3.mises_peak');
model.result('pg6').feature('thr5').set('linecolor', 'red');
model.result('pg6').feature('thr5').setIndex('legends', 'ESL Theory', 0);
model.result('pg6').run;
model.result('pg6').create('tlan1', 'TableAnnotation');
model.result('pg6').feature('tlan1').set('source', 'localtable');
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 0.2, 0, 0);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 0.005, 0, 1);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', ['Carbon' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Epoxy'], 0, 2);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 0.2, 1, 0);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 0.013, 1, 1);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', ['Glass' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Vinylester'], 1, 2);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 0.2, 2, 0);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 0.028, 2, 1);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 'PVC Foam', 2, 2);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 0.2, 3, 0);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 0.045, 3, 1);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', ['Glass' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Vinylester'], 3, 2);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 0.2, 4, 0);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 0.053, 4, 1);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', ['Carbon' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Epoxy'], 4, 2);
model.result('pg6').feature('tlan1').set('showpoint', false);
model.result('pg6').run;
model.result.evaluationGroup.create('eg1', 'EvaluationGroup');
model.result.evaluationGroup('eg1').label('Maximum Mises Peak Stress Comparison');
model.result.evaluationGroup('eg1').set('data', 'lshl2');
model.result.evaluationGroup('eg1').set('includeparameters', false);
model.result.evaluationGroup('eg1').create('max1', 'MaxVolume');
model.result.evaluationGroup('eg1').feature('max1').setIndex('expr', 'lshell.mises_peak', 0);
model.result.evaluationGroup('eg1').feature('max1').setIndex('unit', 'GPa', 0);
model.result.evaluationGroup('eg1').feature('max1').setIndex('descr', 'Von Mises stress, peak', 0);
model.result.evaluationGroup('eg1').feature.duplicate('max2', 'max1');
model.result.evaluationGroup('eg1').feature('max2').set('data', 'lshl4');
model.result.evaluationGroup('eg1').feature('max2').setIndex('expr', 'lshell2.mises_peak', 0);
model.result.evaluationGroup('eg1').feature.duplicate('max3', 'max2');
model.result.evaluationGroup('eg1').feature('max3').set('data', 'lshl6');
model.result.evaluationGroup('eg1').feature('max3').setIndex('expr', 'shell3.mises_peak', 0);
model.result.evaluationGroup('eg1').run;
model.result.evaluationGroup.create('eg2', 'EvaluationGroup');
model.result.evaluationGroup('eg2').label('Maximum Displacement Comparison');
model.result.evaluationGroup('eg2').set('data', 'lshl2');
model.result.evaluationGroup('eg2').set('includeparameters', false);
model.result.evaluationGroup('eg2').create('max1', 'MaxVolume');
model.result.evaluationGroup('eg2').feature('max1').setIndex('expr', 'lshell.disp', 0);
model.result.evaluationGroup('eg2').feature('max1').setIndex('unit', 'm', 0);
model.result.evaluationGroup('eg2').feature('max1').setIndex('descr', 'Displacement magnitude', 0);
model.result.evaluationGroup('eg2').feature.duplicate('max2', 'max1');
model.result.evaluationGroup('eg2').feature('max2').set('data', 'lshl4');
model.result.evaluationGroup('eg2').feature('max2').setIndex('expr', 'lshell2.disp', 0);
model.result.evaluationGroup('eg2').feature('max2').setIndex('unit', 'm', 0);
model.result.evaluationGroup('eg2').feature('max2').setIndex('descr', 'Displacement magnitude', 0);
model.result.evaluationGroup('eg2').feature.duplicate('max3', 'max2');
model.result.evaluationGroup('eg2').feature('max3').set('data', 'lshl6');
model.result.evaluationGroup('eg2').feature('max3').setIndex('expr', 'shell3.disp', 0);
model.result.evaluationGroup('eg2').feature('max3').setIndex('unit', 'm', 0);
model.result.evaluationGroup('eg2').feature('max3').setIndex('descr', 'Displacement magnitude', 0);
model.result.evaluationGroup('eg2').run;
model.result.evaluationGroup.create('eg3', 'EvaluationGroup');
model.result.evaluationGroup('eg3').label('Eigenfrequency Comparison');
model.result.evaluationGroup('eg3').set('includeparameters', false);
model.result.evaluationGroup('eg3').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg3').feature('gev1').setIndex('expr', 'freq', 0);
model.result.evaluationGroup('eg3').feature('gev1').setIndex('unit', 'Hz', 0);
model.result.evaluationGroup('eg3').feature('gev1').setIndex('descr', 'Frequency', 0);
model.result.evaluationGroup('eg3').feature.duplicate('gev2', 'gev1');
model.result.evaluationGroup('eg3').feature('gev2').set('data', 'dset3');
model.result.evaluationGroup('eg3').feature.duplicate('gev3', 'gev2');
model.result.evaluationGroup('eg3').feature('gev3').set('data', 'dset5');
model.result.evaluationGroup('eg3').run;

model.study('std1').feature('eig').setEntry('activate', 'lshell2', false);
model.study('std1').feature('eig').setEntry('activate', 'shell3', false);
model.study('std2').feature('freq').setEntry('activate', 'lshell2', false);
model.study('std2').feature('freq').setEntry('activate', 'shell3', false);
model.study('std3').feature('eig').setEntry('activate', 'shell3', false);
model.study('std4').feature('freq').setEntry('activate', 'shell3', false);

model.result('pg2').run;
model.result('pg2').set('view', 'new');
model.result('pg2').run;

model.view('view6').set('locked', true);
model.view('view6').camera.setIndex('position', -11, 0);
model.view('view6').camera.setIndex('position', -14, 1);
model.view('view6').camera.set('position', [-11 -14 12]);
model.view('view6').camera.setIndex('target', 0.61, 0);
model.view('view6').camera.setIndex('target', 1.77, 1);
model.view('view6').camera.set('target', {'0.61' '1.77' '0.20'});
model.view('view6').camera.setIndex('up', '0.30', 0);
model.view('view6').camera.setIndex('up', 0.41, 1);
model.view('view6').camera.set('up', {'0.30' '0.41' '0.85'});
model.view('view6').camera.setIndex('rotationpoint', 0.61, 0);
model.view('view6').camera.setIndex('rotationpoint', 1.77, 1);
model.view('view6').camera.set('rotationpoint', {'0.61' '1.77' '0.20'});
model.view('view6').camera.setIndex('viewoffset', -0.079, 0);
model.view('view6').camera.set('viewoffset', [-0.079 -0.006]);

model.result('pg3').run;
model.result('pg3').set('view', 'view6');
model.result('pg3').run;
model.result('pg1').run;
model.result('pg1').run;
model.result('pg3').run;

model.title('Analysis of a Composite Blade Using a Multiple Model Method');

model.description(['This example demonstrates the modeling of a sandwiched composite blade made up of carbon' native2unicode(hex2dec({'20' '13'}), 'unicode') 'epoxy, glass' native2unicode(hex2dec({'20' '13'}), 'unicode') 'vinylester, and PVC foam materials. Three different methods are used to model the sandwich composite structure: Layerwise theory, Equivalent Single Layer (ESL) theory, and a multiple model method. Modal and frequency-response analyses are performed for the specified loading and the multiple model method is compared with the traditional layerwise and ESL theory in terms of performance and accuracy in the results, including through-thickness stress distribution.' newline  newline 'It is shown that the layerwise theory is accurate but computationally expensive. In contrast, the ESL theory is computationally less expensive but unable to capture the accurate through thickness and the overall stress distribution. The multiple model method seems like the best choice in terms of accuracy and performance for modeling sandwich composite structures.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;

model.label('composite_blade_multiple_model_method.mph');

model.modelNode.label('Components');

out = model;
