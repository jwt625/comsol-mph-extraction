function out = model
%
% atmospheric_corrosion_busbar.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Corrosion_Module/Atmospheric_Corrosion');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.geom.create('part1', 'Part', 3);
model.geom('part1').label('Bolt');
model.geom('part1').lengthUnit('mm');
model.geom('part1').create('wp1', 'WorkPlane');
model.geom('part1').feature('wp1').set('unite', true);
model.geom('part1').feature('wp1').set('quickplane', 'yz');
model.geom('part1').feature('wp1').geom.create('pol1', 'Polygon');
model.geom('part1').feature('wp1').geom.feature('pol1').set('source', 'vectors');
model.geom('part1').feature('wp1').geom.feature('pol1').set('x', '2 0 0 2.5 0 0 5.9 5.9 2.5 2.5 2');
model.geom('part1').feature('wp1').geom.feature('pol1').set('y', '0 0 16 16 16 20 16.7 16 16 0.5 0');
model.geom('part1').run('wp1');
model.geom('part1').feature.create('rev1', 'Revolve');
model.geom('part1').feature('rev1').set('angtype', 'full');
model.geom('part1').feature('rev1').set('origfaces', false);
model.geom('part1').run('rev1');
model.geom('part1').create('wp2', 'WorkPlane');
model.geom('part1').feature('wp2').set('unite', true);
model.geom('part1').feature('wp2').set('quickz', 21.4);
model.geom('part1').feature('wp2').geom.create('pol1', 'Polygon');
model.geom('part1').feature('wp2').geom.feature('pol1').set('source', 'vectors');
model.geom('part1').feature('wp2').geom.feature('pol1').set('x', '0 0 0 -3.98372');
model.geom('part1').feature('wp2').geom.feature('pol1').set('y', '0 4.6 4.6 2.3');
model.geom('part1').feature('wp2').geom.run('pol1');
model.geom('part1').feature('wp2').geom.create('rot1', 'Rotate');
model.geom('part1').feature('wp2').geom.feature('rot1').selection('input').set({'pol1'});
model.geom('part1').feature('wp2').geom.feature('rot1').set('rot', 'range(0,60,360)');
model.geom('part1').feature('wp2').geom.run('rot1');
model.geom('part1').feature('wp2').geom.create('uni1', 'Union');
model.geom('part1').feature('wp2').geom.feature('uni1').selection('input').set({'rot1'});
model.geom('part1').feature('wp2').geom.feature('uni1').set('intbnd', false);
model.geom('part1').run('wp2');
model.geom('part1').feature.create('ext1', 'Extrude');
model.geom('part1').feature('ext1').set('workplane', 'wp2');
model.geom('part1').feature('ext1').selection('input').set({'wp2'});
model.geom('part1').feature('ext1').setIndex('distance', 5, 0);
model.geom('part1').feature('ext1').set('reverse', true);
model.geom('part1').run('ext1');
model.geom('part1').create('uni1', 'Union');
model.geom('part1').feature('uni1').selection('input').set({'ext1' 'rev1'});
model.geom('part1').feature('uni1').set('intbnd', false);
model.geom.create('part2', 'Part', 3);
model.geom('part2').label('Nut');
model.geom('part2').lengthUnit('mm');
model.geom('part2').create('wp1', 'WorkPlane');
model.geom('part2').feature('wp1').set('unite', true);
model.geom('part2').feature('wp1').set('quickplane', 'yz');
model.geom('part2').feature('wp1').geom.create('r1', 'Rectangle');
model.geom('part2').feature('wp1').geom.feature('r1').set('size', [2.253 3.38]);
model.geom('part2').feature('wp1').geom.feature('r1').set('pos', [2 8]);
model.geom('part2').feature('wp1').geom.run('r1');
model.geom('part2').feature('wp1').geom.create('cha1', 'Chamfer');
model.geom('part2').feature('wp1').geom.feature('cha1').set('selectinsketch', true);
model.geom('part2').feature('wp1').geom.feature('cha1').selection('pointinsketch').set('r1', [1 4]);
model.geom('part2').feature('wp1').geom.feature('cha1').set('dist', 0.4);
model.geom('part2').feature('wp1').geom.run('cha1');
model.geom('part2').feature('wp1').geom.create('cha2', 'Chamfer');
model.geom('part2').feature('wp1').geom.feature('cha2').set('selectinsketch', true);
model.geom('part2').feature('wp1').geom.feature('cha2').selection('pointinsketch').set('cha1', 5);
model.geom('part2').feature('wp1').geom.feature('cha2').set('dist', 0.26);
model.geom('part2').feature('wp1').geom.run('cha2');
model.geom('part2').feature('wp1').geom.create('r2', 'Rectangle');
model.geom('part2').feature('wp1').geom.feature('r2').set('size', [1.15 0.7]);
model.geom('part2').feature('wp1').geom.feature('r2').set('pos', [3.103 10.68]);
model.geom('part2').feature('wp1').geom.run('r2');
model.geom('part2').feature('wp1').geom.create('r3', 'Rectangle');
model.geom('part2').feature('wp1').geom.feature('r3').set('size', [0.6 0.7]);
model.geom('part2').feature('wp1').geom.feature('r3').set('pos', [3.653 9.98]);
model.geom('part2').feature('wp1').geom.run('r3');
model.geom('part2').feature('wp1').geom.create('dif1', 'Difference');
model.geom('part2').feature('wp1').geom.feature('dif1').selection('input').set({'cha2'});
model.geom('part2').feature('wp1').geom.feature('dif1').selection('input2').set({'r2' 'r3'});
model.geom('part2').run('wp1');
model.geom('part2').feature.create('rev1', 'Revolve');
model.geom('part2').feature('rev1').set('workplane', 'wp1');
model.geom('part2').feature('rev1').selection('input').set({'wp1'});
model.geom('part2').feature('rev1').set('angtype', 'full');
model.geom.create('part3', 'Part', 3);
model.geom('part3').label('Flange 1');
model.geom('part3').lengthUnit('mm');
model.geom('part3').create('blk1', 'Block');
model.geom('part3').feature('blk1').set('size', [16 22.5 3]);
model.geom('part3').feature('blk1').set('pos', [-8 -9 13]);
model.geom('part3').run('blk1');
model.geom('part3').create('cyl1', 'Cylinder');
model.geom('part3').feature('cyl1').set('r', 3.3);
model.geom('part3').feature('cyl1').set('h', 3);
model.geom('part3').feature('cyl1').set('pos', [0 0 13]);
model.geom('part3').run('cyl1');
model.geom('part3').create('blk2', 'Block');
model.geom('part3').feature('blk2').set('size', [16 3.75 2.4]);
model.geom('part3').feature('blk2').set('pos', [-8 13.5 13]);
model.geom('part3').run('blk2');
model.geom('part3').create('cyl2', 'Cylinder');
model.geom('part3').feature('cyl2').set('r', 2);
model.geom('part3').feature('cyl2').set('h', 3);
model.geom('part3').feature('cyl2').set('pos', [8 17.25 13]);
model.geom('part3').run('cyl2');
model.geom('part3').create('dif1', 'Difference');
model.geom('part3').feature('dif1').selection('input').set({'blk1'});
model.geom('part3').feature('dif1').selection('input2').set({'cyl1'});
model.geom('part3').run('dif1');
model.geom('part3').create('dif2', 'Difference');
model.geom('part3').feature('dif2').selection('input').set({'blk2'});
model.geom('part3').feature('dif2').selection('input2').set({'cyl2'});
model.geom('part3').run('dif2');
model.geom('part3').create('mir1', 'Mirror');
model.geom('part3').feature('mir1').selection('input').set({'dif1' 'dif2'});
model.geom('part3').feature('mir1').set('keep', true);
model.geom('part3').feature('mir1').set('pos', [0 17.25 0]);
model.geom('part3').feature('mir1').set('axis', [0 1 0]);
model.geom('part3').run('mir1');
model.geom('part3').create('uni1', 'Union');
model.geom('part3').feature('uni1').selection('input').set({'dif2' 'mir1(2)'});
model.geom.create('part4', 'Part', 3);
model.geom('part4').label('Flange 2');
model.geom('part4').lengthUnit('mm');
model.geom('part4').create('blk1', 'Block');
model.geom('part4').feature('blk1').set('size', [13 16 1.5]);
model.geom('part4').feature('blk1').set('pos', [-6.5 -8 11.5]);
model.geom('part4').run('blk1');
model.geom('part4').create('cyl1', 'Cylinder');
model.geom('part4').feature('cyl1').set('r', 3.3);
model.geom('part4').feature('cyl1').set('h', 3);
model.geom('part4').feature('cyl1').set('pos', [0 0 11.5]);
model.geom('part4').run('cyl1');
model.geom('part4').create('dif1', 'Difference');
model.geom('part4').feature('dif1').selection('input').set({'blk1'});
model.geom('part4').feature('dif1').selection('input2').set({'cyl1'});
model.geom('part4').run('dif1');
model.geom('part4').create('wp1', 'WorkPlane');
model.geom('part4').feature('wp1').set('unite', true);
model.geom('part4').feature('wp1').set('planetype', 'faceparallel');
model.geom('part4').feature('wp1').selection('face').set('dif1', 2);
model.geom('part4').feature('wp1').geom.create('r1', 'Rectangle');
model.geom('part4').feature('wp1').geom.feature('r1').set('size', [1.7 1.5]);
model.geom('part4').feature('wp1').geom.feature('r1').set('pos', [-4.45 -10]);
model.geom('part4').feature('wp1').geom.run('r1');
model.geom('part4').feature('wp1').geom.create('c1', 'Circle');
model.geom('part4').feature('wp1').geom.feature('c1').set('type', 'curve');
model.geom('part4').feature('wp1').geom.feature('c1').set('r', 3.5);
model.geom('part4').feature('wp1').geom.feature('c1').set('angle', 90);
model.geom('part4').feature('wp1').geom.feature('c1').set('pos', [-2.75 -6.5]);
model.geom('part4').feature('wp1').geom.feature('c1').set('rot', -90);
model.geom('part4').feature('wp1').geom.feature('c1').setIndex('layername', 'Layer 1', 0);
model.geom('part4').feature('wp1').geom.feature('c1').setIndex('layer', 1.5, 0);
model.geom('part4').feature('wp1').geom.run('c1');
model.geom('part4').feature('wp1').geom.create('c2', 'Circle');
model.geom('part4').feature('wp1').geom.feature('c2').set('type', 'curve');
model.geom('part4').feature('wp1').geom.feature('c2').set('r', 3.5);
model.geom('part4').feature('wp1').geom.feature('c2').set('angle', 90);
model.geom('part4').feature('wp1').geom.feature('c2').set('pos', [-4.45 -12]);
model.geom('part4').feature('wp1').geom.feature('c2').set('rot', 90);
model.geom('part4').feature('wp1').geom.feature('c2').setIndex('layername', 'Layer 1', 0);
model.geom('part4').feature('wp1').geom.feature('c2').setIndex('layer', 1.5, 0);
model.geom('part4').feature('wp1').geom.run('c2');
model.geom('part4').feature('wp1').geom.feature.create('del1', 'Delete');
model.geom('part4').feature('wp1').geom.feature('del1').selection('input').init;
model.geom('part4').feature('wp1').geom.feature('del1').selection('input').init(1);
model.geom('part4').feature('wp1').geom.feature('del1').selection('input').set('c1', [1 2]);
model.geom('part4').feature('wp1').geom.feature('del1').selection('input').set('c2', [1 2]);
model.geom('part4').run('wp1');
model.geom('part4').feature.create('ext1', 'Extrude');
model.geom('part4').feature('ext1').set('workplane', 'wp1');
model.geom('part4').feature('ext1').selection('input').set({'wp1'});
model.geom('part4').feature('ext1').setIndex('distance', 16, 0);
model.geom('part4').feature('ext1').set('reverse', true);
model.geom('part4').run('ext1');
model.geom('part4').create('blk2', 'Block');
model.geom('part4').feature('blk2').set('size', [23 52 1.5]);
model.geom('part4').feature('blk2').set('pos', [12 -8 4.3]);
model.geom('part4').run('blk2');
model.geom('part4').create('uni1', 'Union');
model.geom('part4').feature('uni1').selection('input').set({'blk2' 'dif1' 'ext1'});
model.geom('geom1').create('pi1', 'PartInstance');
model.geom('geom1').feature('pi1').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi1').set('part', 'part1');
model.geom('geom1').run('pi1');
model.geom('geom1').create('pi2', 'PartInstance');
model.geom('geom1').feature('pi2').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi2').set('part', 'part2');
model.geom('geom1').run('pi2');
model.geom('geom1').create('pi3', 'PartInstance');
model.geom('geom1').feature('pi3').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi3').set('part', 'part3');
model.geom('geom1').run('pi3');
model.geom('geom1').create('pi4', 'PartInstance');
model.geom('geom1').feature('pi4').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi4').set('part', 'part4');
model.geom('geom1').runPre('fin');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');

model.geom('geom1').run;

model.selection('sel1').label('Cu Domain');
model.selection('sel1').set([1 2 3 4]);
model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').label('Al Domain');
model.selection('sel2').set([5 9 10 11 12]);
model.selection.create('sel3', 'Explicit');
model.selection('sel3').model('comp1');
model.selection('sel3').label('Bolt (Zn)');
model.selection('sel3').set([6 7 8]);
model.selection.create('adj1', 'Adjacent');
model.selection('adj1').model('comp1');
model.selection('adj1').label('Cu Surface');
model.selection('adj1').set('input', {'sel1'});
model.selection.create('adj2', 'Adjacent');
model.selection('adj2').model('comp1');
model.selection('adj2').label('Al Surface');
model.selection('adj2').set('input', {'sel2'});
model.selection.create('adj3', 'Adjacent');
model.selection('adj3').model('comp1');
model.selection('adj3').label('Zn Surface');
model.selection('adj3').set('input', {'sel3'});
model.selection.create('sel4', 'Explicit');
model.selection('sel4').model('comp1');
model.selection('sel4').set([1 2 3 4 5 6 7 9 10 11 12]);
model.selection('sel4').label('All Domains');
model.selection.create('adj4', 'Adjacent');
model.selection('adj4').model('comp1');
model.selection('adj4').label('Exterior Boundaries');
model.selection('adj4').set('input', {'sel4'});
model.selection.create('sel5', 'Explicit');
model.selection('sel5').model('comp1');
model.selection('sel5').label('Cu Terminal Boundary');
model.selection('sel5').geom(2);
model.selection('sel5').set([16]);
model.selection.create('sel6', 'Explicit');
model.selection('sel6').model('comp1');
model.selection('sel6').label('Al Terminal Boundary');
model.selection('sel6').geom(2);
model.selection('sel6').set([157]);
model.selection.create('cyl1', 'Cylinder');
model.selection('cyl1').model('comp1');
model.selection('cyl1').label('Inner Boundaries');
model.selection('cyl1').set('entitydim', 2);
model.selection('cyl1').set('r', 0.0026);
model.selection('cyl1').set('top', 0.011);
model.selection('cyl1').set('bottom', 0);
model.selection('cyl1').set('pos', [0 0 0.0075]);
model.selection('cyl1').set('condition', 'inside');
model.selection.create('dif1', 'Difference');
model.selection('dif1').model('comp1');
model.selection('dif1').label('Exterior Surfaces');
model.selection('dif1').set('entitydim', 2);
model.selection('dif1').set('add', {'adj4'});
model.selection('dif1').set('subtract', {'sel5' 'sel6' 'cyl1'});
model.selection.create('int1', 'Intersection');
model.selection('int1').model('comp1');
model.selection('int1').label('Exterior Cu Surface');
model.selection('int1').set('entitydim', 2);
model.selection('int1').set('input', {'adj1' 'dif1'});
model.selection.create('int2', 'Intersection');
model.selection('int2').model('comp1');
model.selection('int2').label('Exterior Al Surface');
model.selection('int2').set('entitydim', 2);
model.selection('int2').set('input', {'adj2' 'dif1'});
model.selection.create('int3', 'Intersection');
model.selection('int3').model('comp1');
model.selection('int3').label('Exterior Zn Surface');
model.selection('int3').set('entitydim', 2);
model.selection('int3').set('input', {'adj3' 'dif1'});

model.title(['Atmospheric Corrosion of a Busbar ' native2unicode(hex2dec({'20' '14'}), 'unicode') ' Template File']);

model.description('This example is a template MPH-file used by the atmospheric corrosion of a busbar model. The geometry is a combination of a nut, a bolt and two flanges of a busbar and makes use of geometry subsequences specified in the Geometry Parts.');

model.label('atmospheric_corrosion_busbar_geom.mph');

model.physics.create('cd', 'SecondaryCurrentDistribution', 'geom1');
model.physics('cd').model('comp1');
model.physics.create('cdsh', 'CurrentDistributionShell', 'geom1');
model.physics('cdsh').model('comp1');

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('TF', '0.0005', 'Thickness factor');
model.param.set('RH', '0.85', 'Relative humidity');
model.param.set('d_film', 'TF[m]*(24.9+14.8*RH-22.58*RH^2)/(5811.95+23909*RH-3291*RH^2-57990*RH^3+31576*RH^4)', 'Electrolyte film thickness');
model.param.set('sigma', '48250.20-287264*RH+683394*RH^2-811693*RH^3+481365*RH^4-114051*RH^5[S/m]', 'Electrolyte conductivity');
model.param.set('D_O2', '1.5e-9[m^2/s]', 'Diffusion coefficient of O2');
model.param.set('O2_solubility', '0.0003*exp(6.59*RH)[mol/m^3]', 'O2 solubility');
model.param.set('ilim', '4*F_const*D_O2*O2_solubility/d_film', 'Limiting current density for O2');
model.param.set('Eeq_Al', '-1[V]', 'Equilibrium potential, Al');
model.param.set('i0_Al', '1e-4[A/m^2]', 'Exchange current density, Al');
model.param.set('A_Al', '100[mV]', 'Tafel slope, Al');
model.param.set('Eeq_Zn', '-0.7[V]', 'Equilibrium potential, Zn');
model.param.set('i0_Zn', '1e-4[A/m^2]', 'Exchange current density, Zn');
model.param.set('A_Zn', '100[mV]', 'Tafel slope, Zn');
model.param.set('Eeq_Cu', '0[V]', 'Equilibrium potential, Cu');
model.param.set('i0_Cu', '1e-4[A/m^2]', 'Exchange current density, Cu');
model.param.set('A_Cu', '100[mV]', 'Tafel slope, Cu');
model.param.set('Eeq_O2', '1[V]', 'Equilibrium potential, O2');
model.param.set('i0_O2_on_Al', '1e-6[A/m^2]', 'Exchange current density, O2');
model.param.set('A_O2_on_Al', '-100[mV]', 'Tafel slope, O2');
model.param.set('i0_O2_on_Zn', '1e-6[A/m^2]', 'Exchange current density, O2');
model.param.set('A_O2_on_Zn', '-100[mV]', 'Tafel slope, O2');
model.param.set('i0_O2_on_Cu', '1e-3[A/m^2]', 'Exchange current density, O2');
model.param.set('A_O2_on_Cu', '-100[mV]', 'Tafel slope, O2');

model.physics('cd').create('cc1', 'CurrentConductor', 3);
model.physics('cd').feature('cc1').selection.all;
model.physics('cd').create('egnd1', 'ElectricGround', 2);
model.physics('cd').feature('egnd1').selection.named('sel6');
model.physics('cd').create('ec1', 'ElectrodeCurrent', 2);
model.physics('cd').feature('ec1').selection.named('sel5');
model.physics('cd').feature('ec1').set('Its', '100[A]');
model.physics('cd').create('ecd1', 'ElectrodeNormalCurrentDensity', 2);
model.physics('cd').feature('ecd1').selection.named('dif1');
model.physics('cd').feature('ecd1').set('nis', '-cdsh.itot');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat1').label('Aluminum 3003-H18');
model.material('mat1').set('family', 'aluminum');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'2.326e7[S/m]' '0' '0' '0' '2.326e7[S/m]' '0' '0' '0' '2.326e7[S/m]'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'23.2e-6[1/K]' '0' '0' '0' '23.2e-6[1/K]' '0' '0' '0' '23.2e-6[1/K]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', '893[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('density', '2730[kg/m^3]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'155[W/(m*K)]' '0' '0' '0' '155[W/(m*K)]' '0' '0' '0' '155[W/(m*K)]'});
model.material('mat1').propertyGroup('Enu').set('E', '69[GPa]');
model.material('mat1').propertyGroup('Enu').set('nu', '0.33');
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat2').propertyGroup.create('linzRes', 'Linearized resistivity');
model.material('mat2').label('Copper');
model.material('mat2').set('family', 'copper');
model.material('mat2').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('electricconductivity', {'5.998e7[S/m]' '0' '0' '0' '5.998e7[S/m]' '0' '0' '0' '5.998e7[S/m]'});
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'17e-6[1/K]' '0' '0' '0' '17e-6[1/K]' '0' '0' '0' '17e-6[1/K]'});
model.material('mat2').propertyGroup('def').set('heatcapacity', '385[J/(kg*K)]');
model.material('mat2').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('density', '8960[kg/m^3]');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'400[W/(m*K)]' '0' '0' '0' '400[W/(m*K)]' '0' '0' '0' '400[W/(m*K)]'});
model.material('mat2').propertyGroup('Enu').set('E', '110[GPa]');
model.material('mat2').propertyGroup('Enu').set('nu', '0.35');
model.material('mat2').propertyGroup('linzRes').set('rho0', '1.72e-8[ohm*m]');
model.material('mat2').propertyGroup('linzRes').set('alpha', '0.0039[1/K]');
model.material('mat2').propertyGroup('linzRes').set('Tref', '298[K]');
model.material('mat2').propertyGroup('linzRes').addInput('temperature');
model.material('mat1').selection.named('sel2');
model.material('mat2').selection.named('sel1');
model.material.create('mat3', 'Common', 'comp1');
model.material('mat3').selection.named('sel3');
model.material('mat3').propertyGroup('def').set('electricconductivity', {'1.66e7[S/m]'});
model.material('mat3').label('Zinc');

model.physics('cdsh').selection.named('adj4');
model.physics('cdsh').feature('ice1').set('s', 'd_film');
model.physics('cdsh').feature('ice1').set('sigmal_mat', 'userdef');
model.physics('cdsh').feature('ice1').set('sigmal', {'sigma' '0' '0' '0' 'sigma' '0' '0' '0' 'sigma'});
model.physics('cdsh').create('eebii1', 'ExternalElectrodeSurface', 2);
model.physics('cdsh').feature('eebii1').selection.named('int2');
model.physics('cdsh').feature('eebii1').set('phisext0', 'phis');
model.physics('cdsh').feature('eebii1').feature('er1').set('Eeq', 'Eeq_Al');
model.physics('cdsh').feature('eebii1').feature('er1').set('ElectrodeKinetics', 'AnodicTafelEquation');
model.physics('cdsh').feature('eebii1').feature('er1').set('i0', 'i0_Al');
model.physics('cdsh').feature('eebii1').feature('er1').set('Aa', 'A_Al');
model.physics('cdsh').feature('eebii1').create('er2', 'ElectrodeReaction', 2);
model.physics('cdsh').feature('eebii1').feature('er2').set('Eeq', 'Eeq_O2');
model.physics('cdsh').feature('eebii1').feature('er2').set('ElectrodeKinetics', 'CathodicTafelEquation');
model.physics('cdsh').feature('eebii1').feature('er2').set('i0', 'i0_O2_on_Al');
model.physics('cdsh').feature('eebii1').feature('er2').set('Ac', 'A_O2_on_Al');
model.physics('cdsh').feature('eebii1').feature('er2').set('LimitingCurrentDensity', true);
model.physics('cdsh').feature('eebii1').feature('er2').set('ilim', 'ilim');
model.physics('cdsh').feature.duplicate('eebii2', 'eebii1');
model.physics('cdsh').feature('eebii2').selection.named('int1');
model.physics('cdsh').feature('eebii2').feature('er1').set('Eeq', 'Eeq_Cu');
model.physics('cdsh').feature('eebii2').feature('er1').set('i0', 'i0_Cu');
model.physics('cdsh').feature('eebii2').feature('er1').set('Aa', 'A_Cu');
model.physics('cdsh').feature('eebii2').feature('er2').set('i0', 'i0_O2_on_Cu');
model.physics('cdsh').feature('eebii2').feature('er2').set('Ac', 'A_O2_on_Cu');
model.physics('cdsh').feature.duplicate('eebii3', 'eebii2');
model.physics('cdsh').feature('eebii3').selection.named('int3');
model.physics('cdsh').feature('eebii3').feature('er1').set('Eeq', 'Eeq_Zn');
model.physics('cdsh').feature('eebii3').feature('er1').set('i0', 'i0_Zn');
model.physics('cdsh').feature('eebii3').feature('er1').set('Aa', 'A_Zn');
model.physics('cdsh').feature('eebii3').feature('er2').set('i0', 'i0_O2_on_Zn');
model.physics('cdsh').feature('eebii3').feature('er2').set('Ac', 'A_O2_on_Zn');

model.mesh('mesh1').autoMeshSize(4);

model.study.create('std1');
model.study('std1').create('cdi', 'CurrentDistributionInitialization');
model.study('std1').feature('cdi').set('solnum', 'auto');
model.study('std1').feature('cdi').set('notsolnum', 'auto');
model.study('std1').feature('cdi').set('outputmap', {});
model.study('std1').feature('cdi').set('ngenAUX', '1');
model.study('std1').feature('cdi').set('goalngenAUX', '1');
model.study('std1').feature('cdi').set('ngenAUX', '1');
model.study('std1').feature('cdi').set('goalngenAUX', '1');
model.study('std1').feature('cdi').setSolveFor('/physics/cd', true);
model.study('std1').feature('cdi').setSolveFor('/physics/cdsh', true);
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').set('solnum', 'auto');
model.study('std1').feature('stat').set('notsolnum', 'auto');
model.study('std1').feature('stat').set('outputmap', {});
model.study('std1').feature('stat').set('ngenAUX', '1');
model.study('std1').feature('stat').set('goalngenAUX', '1');
model.study('std1').feature('stat').set('ngenAUX', '1');
model.study('std1').feature('stat').set('goalngenAUX', '1');
model.study('std1').feature('stat').setSolveFor('/physics/cd', true);
model.study('std1').feature('stat').setSolveFor('/physics/cdsh', true);
model.study('std1').setGenPlots(false);
model.study('std1').feature('cdi').setEntry('activate', 'cd', false);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'cdi');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_phil2').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_phil2').set('scaleval', '1');
model.sol('sol1').feature('v1').set('control', 'cdi');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 1.0E-4);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').label('Direct (cdsh)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('Algebraic Multigrid (cdsh)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').create('i2', 'Iterative');
model.sol('sol1').feature('s1').feature('i2').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i2').label('Geometric Multigrid (cdsh)');
model.sol('sol1').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'stat');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').feature('comp1_phil').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_phil2').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_cd_ec1_phis0').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_phis').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_phil').set('scaleval', '1');
model.sol('sol1').feature('v2').feature('comp1_phil2').set('scaleval', '1');
model.sol('sol1').feature('v2').feature('comp1_cd_ec1_phis0').set('scaleval', '1');
model.sol('sol1').feature('v2').feature('comp1_phis').set('scaleval', '1');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('initsoluse', 'sol2');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'stat');
model.sol('sol1').create('s2', 'Stationary');
model.sol('sol1').feature('s2').set('stol', 1.0E-4);
model.sol('sol1').feature('s2').create('se1', 'Segregated');
model.sol('sol1').feature('s2').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s2').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('segvar', {'comp1_phil' 'comp1_phis' 'comp1_cd_ec1_phis0'});
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('subjtech', 'onevery');
model.sol('sol1').feature('s2').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('d1').label('Direct (cd)');
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol1').feature('s2').feature('se1').feature('ss1').label('Current Distribution');
model.sol('sol1').feature('s2').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('segvar', {'comp1_phil2'});
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('subjtech', 'onevery');
model.sol('sol1').feature('s2').create('d2', 'Direct');
model.sol('sol1').feature('s2').feature('d2').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('d2').label('Direct (cdsh)');
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol1').feature('s2').feature('se1').feature('ss2').label('Current Distribution (2)');
model.sol('sol1').feature('s2').create('i1', 'Iterative');
model.sol('sol1').feature('s2').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s2').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s2').feature('i1').label('Algebraic Multigrid (cd)');
model.sol('sol1').feature('s2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('compactaggregation', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').create('i2', 'Iterative');
model.sol('sol1').feature('s2').feature('i2').set('maxlinit', 1000);
model.sol('sol1').feature('s2').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('s2').feature('i2').label('Geometric Multigrid (cd)');
model.sol('sol1').feature('s2').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').create('i3', 'Iterative');
model.sol('sol1').feature('s2').feature('i3').set('maxlinit', 1000);
model.sol('sol1').feature('s2').feature('i3').set('nlinnormuse', 'on');
model.sol('sol1').feature('s2').feature('i3').label('Algebraic Multigrid (cdsh)');
model.sol('sol1').feature('s2').feature('i3').create('mg1', 'Multigrid');
model.sol('sol1').feature('s2').feature('i3').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s2').feature('i3').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s2').feature('i3').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s2').feature('i3').feature('mg1').set('compactaggregation', true);
model.sol('sol1').feature('s2').feature('i3').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s2').feature('i3').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s2').feature('i3').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('i3').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').create('i4', 'Iterative');
model.sol('sol1').feature('s2').feature('i4').set('maxlinit', 1000);
model.sol('sol1').feature('s2').feature('i4').set('nlinnormuse', 'on');
model.sol('sol1').feature('s2').feature('i4').label('Geometric Multigrid (cdsh)');
model.sol('sol1').feature('s2').feature('i4').create('mg1', 'Multigrid');
model.sol('sol1').feature('s2').feature('i4').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s2').feature('i4').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s2').feature('i4').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('i4').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature.remove('fcDef');
model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').run;
model.result('pg1').label('Electrode Potential vs. Ground (cd)');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', 'cd.phis');
model.result('pg1').feature('surf1').set('descr', 'Electric potential');
model.result('pg1').run;
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').run;
model.result('pg2').label('Electrode Potential vs. Adjacent Reference (cdsh)');
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', 'cdsh.Evsref');
model.result('pg2').feature('surf1').set('descr', 'Electrode potential vs. adjacent reference');
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').run;
model.result('pg3').label('Electrolyte Potential in Film (cdsh)');
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', 'phil2');
model.result('pg3').feature('surf1').set('descr', 'Electrolyte potential');
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').run;
model.result('pg4').label('Corrosion Current Density (cdsh)');
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', 'cdsh.iloc_er1');
model.result('pg4').feature('surf1').set('descr', 'Local current density');
model.result('pg4').run;
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').run;
model.result('pg5').label('Oxygen Reduction Current Density (cdsh)');
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', 'cdsh.iloc_er2');
model.result('pg5').feature('surf1').set('descr', 'Local current density');
model.result('pg5').run;

model.title('Atmospheric Corrosion of a Busbar');

model.description(['This model simulates atmospheric galvanic corrosion of a busbar, which includes a copper flange, an aluminum alloy flange in contact with a zinc nut and bolt. The Secondary Current Distribution interface is used to solve for the electric potential in electrode domain and Current Distribution, Shell interface is used to solve for the electrolyte potential in the thin electrolyte layer.' newline  newline 'The electrolyte film thickness and conductivity depend on the relative humidity of the surrounding air. The limiting oxygen reduction current density depends on the oxygen diffusivity and solubility in this model.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('atmospheric_corrosion_busbar.mph');

model.modelNode.label('Components');

out = model;
