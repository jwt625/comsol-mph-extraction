function out = model
%
% bracket_import_optimization_dimensions.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Design_Module/Tutorial_Examples');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.study.create('std1');
model.study('std1').create('eig', 'Eigenfrequency');
model.study('std1').feature('eig').set('chkeigregion', true);
model.study('std1').feature('eig').set('conrad', '1');
model.study('std1').feature('eig').set('conradynhm', '1');
model.study('std1').feature('eig').set('storefact', false);
model.study('std1').feature('eig').set('solnum', 'auto');
model.study('std1').feature('eig').set('notsolnum', 'auto');
model.study('std1').feature('eig').set('outputmap', {});
model.study('std1').feature('eig').set('ngenAUX', '1');
model.study('std1').feature('eig').set('goalngenAUX', '1');
model.study('std1').feature('eig').set('ngenAUX', '1');
model.study('std1').feature('eig').set('goalngenAUX', '1');
model.study('std1').feature('eig').setSolveFor('/physics/solid', true);

model.common.create('mpf1', 'ParticipationFactors', 'comp1');

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('IXCmp', '7.1e-4[kg*m^2]', 'Component mass moment of inertia around X axis');
model.param.set('IYZCmp', '9.3e-4[kg*m^2]', 'Component mass moment of inertia around Y and Z axes');
model.param.set('mCmp', '2.4[kg]', 'Component mass');
model.param.set('maxStressLimit', '80[MPa]', 'Maximum allowed equivalent stress under 4g acceleration');
model.param.set('minFreq', '60[Hz]', 'Lowest allowed natural frequency');
model.param.set('LX', '65[mm]', 'Bracket length');
model.param.set('RC', '4[mm]', 'Radius of central hole');
model.param.set('ZCO', '5[mm]', 'Distance from bend to bottom of central hole');
model.param.set('RO', '5[mm]', 'Radius of outer holes');
model.param.set('ZOO', '20[mm]', 'Distance from bend to bottom of outer hole');
model.param.set('YOO', '8[mm]', 'Distance from edge to center of outer hole');
model.param('default').paramCase.create('case1');
model.param('default').paramCase('case1').label('Original Values');

model.geom('geom1').geomRep('cadps');
model.geom('geom1').create('imp1', 'Import');
model.geom('geom1').feature('imp1').set('filename', 'bracket_import_optimization_geom.step');
model.geom('geom1').feature('imp1').set('unit', 'source');
model.geom('geom1').feature('imp1').importData;

model.view('view1').set('showgrid', false);
model.view('view1').set('showaxisorientation', false);
model.view('view1').camera.set('projection', 'orthographic');
model.view('view1').set('showgrid', true);
model.view('view1').set('showaxisorientation', true);
model.view('view1').camera.set('projection', 'perspective');

model.geom('geom1').create('wp1', 'WorkPlane');
model.geom('geom1').feature('wp1').set('unite', true);
model.geom('geom1').feature('wp1').label('Original Geometry');
model.geom('geom1').feature('wp1').set('quickplane', 'yz');
model.geom('geom1').feature('wp1').geom.create('proj1', 'Projection');
model.geom('geom1').feature('wp1').geom.feature('proj1').set('projectiontype', 'edgvtx');
model.geom('geom1').feature('wp1').geom.feature('proj1').setAttribute('construction', 'on');
model.geom('geom1').feature('wp1').geom.run('proj1');
model.geom('geom1').feature('wp1').geom.useConstrDim(true);
model.geom('geom1').feature('wp1').geom.run('proj1');
model.geom('geom1').feature('wp1').geom.create('dist1', 'Distance');
model.geom('geom1').feature('wp1').geom.feature('dist1').selection('entity1').set('proj1', 16);
model.geom('geom1').feature('wp1').geom.feature('dist1').selection('entity2').set('proj1', 79);
model.geom('geom1').feature('wp1').geom.feature('dist1').set('distanceconstr', false);
model.geom('geom1').feature('wp1').geom.feature('dist1').set('createpar', true);
model.geom('geom1').feature('wp1').geom.feature('dist1').set('parname', 'LY');
model.geom('geom1').feature('wp1').geom.run('dist1');
model.geom('geom1').feature('wp1').geom.run('dist1');
model.geom('geom1').feature('wp1').geom.create('rad1', 'Radius');
model.geom('geom1').feature('wp1').geom.feature('rad1').selection('edge').set('proj1', 5);
model.geom('geom1').feature('wp1').geom.feature('rad1').set('radiusconstr', false);
model.geom('geom1').feature('wp1').geom.feature('rad1').set('createpar', true);
model.geom('geom1').feature('wp1').geom.feature('rad1').set('parname', 'RCmp');
model.geom('geom1').feature('wp1').geom.run('rad1');
model.geom('geom1').feature('wp1').geom.create('dist2', 'Distance');
model.geom('geom1').feature('wp1').geom.feature('dist2').selection('entity1').set('proj1', 66);
model.geom('geom1').feature('wp1').geom.feature('dist2').selection('entity2').set('proj1', 70);
model.geom('geom1').feature('wp1').geom.feature('dist2').set('distanceconstr', false);
model.geom('geom1').feature('wp1').geom.feature('dist2').set('createpar', true);
model.geom('geom1').feature('wp1').geom.feature('dist2').set('parname', 'LZ');
model.geom('geom1').feature('wp1').geom.run('dist2');
model.geom('geom1').feature('wp1').geom.create('dist3', 'Distance');
model.geom('geom1').feature('wp1').geom.feature('dist3').selection('entity1').set('proj1', 3);
model.geom('geom1').feature('wp1').geom.feature('dist3').selection('entity2').set('proj1', 17);
model.geom('geom1').feature('wp1').geom.feature('dist3').set('distanceconstr', false);
model.geom('geom1').feature('wp1').geom.feature('dist3').set('createpar', true);
model.geom('geom1').feature('wp1').geom.feature('dist3').set('parname', 'ZOOorig');
model.geom('geom1').feature('wp1').geom.run('dist3');
model.geom('geom1').feature('wp1').geom.create('dist4', 'Distance');
model.geom('geom1').feature('wp1').geom.feature('dist4').selection('entity1').set('proj1', 17);
model.geom('geom1').feature('wp1').geom.feature('dist4').selection('entity2').set('proj1', 13);
model.geom('geom1').feature('wp1').geom.feature('dist4').set('distanceconstr', false);
model.geom('geom1').feature('wp1').geom.feature('dist4').set('createpar', true);
model.geom('geom1').feature('wp1').geom.feature('dist4').set('parname', 'HInd');
model.geom('geom1').feature('wp1').geom.run('dist4');
model.geom('geom1').feature('wp1').geom.create('dist5', 'Distance');
model.geom('geom1').feature('wp1').geom.feature('dist5').selection('entity1').set('proj1', 42);
model.geom('geom1').feature('wp1').geom.feature('dist5').selection('entity2').set('proj1', 7);
model.geom('geom1').feature('wp1').geom.feature('dist5').set('distanceconstr', false);
model.geom('geom1').feature('wp1').geom.feature('dist5').set('createpar', true);
model.geom('geom1').feature('wp1').geom.feature('dist5').set('parname', 'ZCOorig');
model.geom('geom1').feature('wp1').geom.run('dist5');
model.geom('geom1').feature('wp1').geom.create('dist6', 'Distance');
model.geom('geom1').feature('wp1').geom.feature('dist6').selection('entity1').set('proj1', 3);
model.geom('geom1').feature('wp1').geom.feature('dist6').selection('entity2').set('proj1', 16);
model.geom('geom1').feature('wp1').geom.feature('dist6').set('distanceconstr', false);
model.geom('geom1').feature('wp1').geom.feature('dist6').set('createpar', true);
model.geom('geom1').feature('wp1').geom.feature('dist6').set('parname', 'YOOorig');
model.geom('geom1').feature('wp1').geom.run('dist6');
model.geom('geom1').feature('wp1').geom.create('dist7', 'Distance');
model.geom('geom1').feature('wp1').geom.feature('dist7').selection('entity1').set('proj1', 74);
model.geom('geom1').feature('wp1').geom.feature('dist7').selection('entity2').set('proj1', 78);
model.geom('geom1').feature('wp1').geom.feature('dist7').set('distanceconstr', false);
model.geom('geom1').feature('wp1').geom.feature('dist7').set('createpar', true);
model.geom('geom1').feature('wp1').geom.feature('dist7').set('parname', 'YInd');
model.geom('geom1').feature('wp1').geom.run('dist7');
model.geom('geom1').feature('wp1').geom.create('dist8', 'Distance');
model.geom('geom1').feature('wp1').geom.feature('dist8').selection('entity1').set('proj1', 22);
model.geom('geom1').feature('wp1').geom.feature('dist8').selection('entity2').set('proj1', 38);
model.geom('geom1').feature('wp1').geom.feature('dist8').set('distanceconstr', false);
model.geom('geom1').feature('wp1').geom.feature('dist8').set('createpar', true);
model.geom('geom1').feature('wp1').geom.feature('dist8').set('parname', 'WInd');
model.geom('geom1').feature('wp1').geom.run('dist8');
model.geom('geom1').feature('wp1').geom.create('dist9', 'Distance');
model.geom('geom1').feature('wp1').geom.feature('dist9').selection('entity1').set('proj1', 73);
model.geom('geom1').feature('wp1').geom.feature('dist9').selection('entity2').set('proj1', 70);
model.geom('geom1').feature('wp1').geom.feature('dist9').set('distanceconstr', false);
model.geom('geom1').feature('wp1').geom.feature('dist9').set('createpar', true);
model.geom('geom1').feature('wp1').geom.feature('dist9').set('parname', 'THK');
model.geom('geom1').feature('wp1').geom.run('dist9');
model.geom('geom1').feature('wp1').geom.create('rad2', 'Radius');
model.geom('geom1').feature('wp1').geom.feature('rad2').selection('edge').set('proj1', 8);
model.geom('geom1').feature('wp1').geom.feature('rad2').set('radiusconstr', false);
model.geom('geom1').feature('wp1').geom.feature('rad2').set('createpar', true);
model.geom('geom1').feature('wp1').geom.feature('rad2').set('parname', 'ROorig');
model.geom('geom1').feature('wp1').geom.run('rad2');
model.geom('geom1').feature('wp1').geom.create('rad3', 'Radius');
model.geom('geom1').feature('wp1').geom.feature('rad3').selection('edge').set('proj1', 7);
model.geom('geom1').feature('wp1').geom.feature('rad3').set('radiusconstr', false);
model.geom('geom1').feature('wp1').geom.feature('rad3').set('createpar', true);
model.geom('geom1').feature('wp1').geom.feature('rad3').set('parname', 'RCorig');
model.geom('geom1').feature('wp1').geom.run('rad3');
model.geom('geom1').run('wp1');
model.geom('geom1').create('wp2', 'WorkPlane');
model.geom('geom1').feature('wp2').set('unite', true);

model.view('view1').hideObjects.create('hide1');
model.view('view1').hideObjects('hide1').init;
model.view('view1').hideObjects('hide1').add({'wp1'});

model.geom('geom1').feature('wp2').label('Coordinate System - Central Hole');
model.geom('geom1').feature('wp2').set('planetype', 'circleperpendicular');
model.geom('geom1').feature('wp2').selection('circedge').set('imp1', 91);
model.geom('geom1').run('wp2');
model.geom('geom1').create('wp3', 'WorkPlane');
model.geom('geom1').feature('wp3').set('unite', true);
model.geom('geom1').feature('wp3').label('Coordinate System - Outer Hole 1');
model.geom('geom1').feature('wp3').set('planetype', 'circleperpendicular');
model.geom('geom1').feature('wp3').selection('circedge').set('imp1', 99);
model.geom('geom1').feature('wp3').set('reverse', true);
model.geom('geom1').run('wp3');
model.geom('geom1').create('wp4', 'WorkPlane');
model.geom('geom1').feature('wp4').set('unite', true);
model.geom('geom1').feature('wp4').label('Coordinate System - Outer Hole 2');
model.geom('geom1').feature('wp4').set('planetype', 'circleperpendicular');
model.geom('geom1').feature('wp4').selection('circedge').set('imp1', 81);
model.geom('geom1').run('wp4');
model.geom('geom1').create('tf1', 'TransformFaces');
model.geom('geom1').feature('tf1').label('Z Displacement and Scaling - Central Hole');
model.geom('geom1').feature('tf1').selection('face').set('imp1', [31 32]);
model.geom('geom1').feature('tf1').set('workplane', 'wp2');
model.geom('geom1').feature('tf1').set('factor', 'RC/RCorig');
model.geom('geom1').feature('tf1').set('displ', {'ZCO+RC-RCorig-ZCOorig' '0' '0'});
model.geom('geom1').run('tf1');
model.geom('geom1').create('off1', 'OffsetFaces');
model.geom('geom1').feature('off1').label('Offset - Outer Holes');
model.geom('geom1').feature('off1').selection('face').set('tf1', [28 29 34 35]);
model.geom('geom1').feature('off1').set('distance', 'RO-ROorig');
model.geom('geom1').feature('off1').set('reverse', true);
model.geom('geom1').run('off1');
model.geom('geom1').create('tf2', 'TransformFaces');
model.geom('geom1').feature('tf2').label('Displacement - Outer Hole 1');
model.geom('geom1').feature('tf2').selection('face').set('off1', [34 35]);
model.geom('geom1').feature('tf2').set('workplane', 'wp3');
model.geom('geom1').feature('tf2').set('displ', {'-(ZOO-ZOOorig+RO-ROorig)' '0' '0'});
model.geom('geom1').feature('tf2').setIndex('displ', 'YOO-YOOorig+RO-ROorig', 2);
model.geom('geom1').run('tf2');
model.geom('geom1').create('tf3', 'TransformFaces');
model.geom('geom1').feature('tf3').label('Displacement - Outer Hole 2');
model.geom('geom1').feature('tf3').selection('face').set('tf2', [28 29]);
model.geom('geom1').feature('tf3').set('workplane', 'wp4');
model.geom('geom1').feature('tf3').set('displ', {'-(ZOO-ZOOorig+RO-ROorig)' '0' '0'});
model.geom('geom1').feature('tf3').setIndex('displ', 'YOO-YOOorig+RO-ROorig', 2);
model.geom('geom1').run('tf3');
model.geom('geom1').create('wp5', 'WorkPlane');
model.geom('geom1').feature('wp5').set('unite', true);
model.geom('geom1').feature('wp5').set('quickplane', 'yz');
model.geom('geom1').feature('wp5').set('quickoffsettype', 'vertex');
model.geom('geom1').feature('wp5').selection('offsetvertex').set('tf3', 18);
model.geom('geom1').run('wp5');
model.geom('geom1').create('par1', 'Partition');
model.geom('geom1').feature('par1').selection('input').set({'tf3'});
model.geom('geom1').feature('par1').set('partitionwith', 'workplane');
model.geom('geom1').run('par1');
model.geom('geom1').create('wp6', 'WorkPlane');
model.geom('geom1').feature('wp6').set('unite', true);
model.geom('geom1').feature('wp6').label('Geometrical Constraints');
model.geom('geom1').feature('wp6').set('quickplane', 'yz');
model.geom('geom1').feature('wp6').set('showcoincident', false);
model.geom('geom1').feature('wp6').set('showintersection', false);
model.geom('geom1').feature('wp6').set('showprojection', false);
model.geom('geom1').feature('wp6').geom.create('proj1', 'Projection');
model.geom('geom1').feature('wp6').geom.feature('proj1').setAttribute('construction', 'on');
model.geom('geom1').feature('wp6').geom.run('proj1');
model.geom('geom1').feature('wp6').geom.create('pt1', 'Point');
model.geom('geom1').feature('wp6').geom.feature('pt1').setIndex('p', '-20[mm]', 0);
model.geom('geom1').feature('wp6').geom.feature('pt1').setIndex('p', '20[mm]', 1);
model.geom('geom1').feature('wp6').geom.feature('pt1').setAttribute('construction', 'on');
model.geom('geom1').feature('wp6').geom.run('pt1');
model.geom('geom1').feature('wp6').geom.create('con1', 'Concentric');
model.geom('geom1').feature('wp6').geom.feature('con1').selection('edge').set('proj1', 3);
model.geom('geom1').feature('wp6').geom.feature('con1').selection('vertex').set('pt1', 1);
model.geom('geom1').feature('wp6').geom.run('con1');
model.geom('geom1').feature('wp6').geom.create('pt2', 'Point');
model.geom('geom1').feature('wp6').geom.feature('pt2').setIndex('p', '5[mm]', 1);
model.geom('geom1').feature('wp6').geom.feature('pt2').setAttribute('construction', 'on');
model.geom('geom1').feature('wp6').geom.run('pt2');
model.geom('geom1').feature('wp6').geom.create('con2', 'Concentric');
model.geom('geom1').feature('wp6').geom.feature('con2').selection('edge').set('proj1', 6);
model.geom('geom1').feature('wp6').geom.feature('con2').selection('vertex').set('pt2', 1);
model.geom('geom1').feature('wp6').geom.run('con2');
model.geom('geom1').feature('wp6').geom.create('pt3', 'Point');
model.geom('geom1').feature('wp6').geom.feature('pt3').setIndex('p', '20[mm]', 0);
model.geom('geom1').feature('wp6').geom.feature('pt3').setIndex('p', '20[mm]', 1);
model.geom('geom1').feature('wp6').geom.feature('pt3').setAttribute('construction', 'on');
model.geom('geom1').feature('wp6').geom.run('pt3');
model.geom('geom1').feature('wp6').geom.create('con3', 'Concentric');
model.geom('geom1').feature('wp6').geom.feature('con3').selection('edge').set('proj1', 8);
model.geom('geom1').feature('wp6').geom.feature('con3').selection('vertex').set('pt3', 1);
model.geom('geom1').feature('wp6').geom.run('con3');
model.geom('geom1').feature('wp6').geom.create('pt4', 'Point');
model.geom('geom1').feature('wp6').geom.feature('pt4').setIndex('p', '50[mm]', 1);
model.geom('geom1').feature('wp6').geom.feature('pt4').setAttribute('construction', 'on');
model.geom('geom1').feature('wp6').geom.run('pt4');
model.geom('geom1').feature('wp6').geom.create('con4', 'Concentric');
model.geom('geom1').feature('wp6').geom.feature('con4').selection('edge').set('proj1', 5);
model.geom('geom1').feature('wp6').geom.feature('con4').selection('vertex').set('pt4', 1);
model.geom('geom1').feature('wp6').geom.run('con4');
model.geom('geom1').feature('wp6').geom.create('dist1', 'Distance');
model.geom('geom1').feature('wp6').geom.feature('dist1').selection('entity1').init(0);
model.geom('geom1').feature('wp6').geom.feature('dist1').selection('entity1').set('pt1', 1);
model.geom('geom1').feature('wp6').geom.feature('dist1').selection('entity2').init(0);
model.geom('geom1').feature('wp6').geom.feature('dist1').selection('entity2').set('pt4', 1);
model.geom('geom1').feature('wp6').geom.feature('dist1').set('distanceconstr', false);
model.geom('geom1').feature('wp6').geom.feature('dist1').set('createpar', true);
model.geom('geom1').feature('wp6').geom.feature('dist1').set('parname', 'd_O_Cmp');
model.geom('geom1').feature('wp6').geom.run('dist1');
model.geom('geom1').feature('wp6').geom.create('dist2', 'Distance');
model.geom('geom1').feature('wp6').geom.feature('dist2').selection('entity1').init(0);
model.geom('geom1').feature('wp6').geom.feature('dist2').selection('entity1').set('pt1', 1);
model.geom('geom1').feature('wp6').geom.feature('dist2').selection('entity2').init(0);
model.geom('geom1').feature('wp6').geom.feature('dist2').selection('entity2').set('pt3', 1);
model.geom('geom1').feature('wp6').geom.feature('dist2').set('distanceconstr', false);
model.geom('geom1').feature('wp6').geom.feature('dist2').set('createpar', true);
model.geom('geom1').feature('wp6').geom.feature('dist2').set('parname', 'd_O_O');
model.geom('geom1').feature('wp6').geom.run('dist2');
model.geom('geom1').feature('wp6').geom.create('dist3', 'Distance');
model.geom('geom1').feature('wp6').geom.feature('dist3').selection('entity1').init(0);
model.geom('geom1').feature('wp6').geom.feature('dist3').selection('entity1').set('pt1', 1);
model.geom('geom1').feature('wp6').geom.feature('dist3').selection('entity2').init(0);
model.geom('geom1').feature('wp6').geom.feature('dist3').selection('entity2').set('pt2', 1);
model.geom('geom1').feature('wp6').geom.feature('dist3').set('distanceconstr', false);
model.geom('geom1').feature('wp6').geom.feature('dist3').set('createpar', true);
model.geom('geom1').feature('wp6').geom.feature('dist3').set('parname', 'd_O_C');
model.geom('geom1').feature('wp6').geom.run('dist3');
model.geom('geom1').feature('wp6').geom.create('dist4', 'Distance');
model.geom('geom1').feature('wp6').geom.feature('dist4').selection('entity1').init(0);
model.geom('geom1').feature('wp6').geom.feature('dist4').selection('entity1').set('pt4', 1);
model.geom('geom1').feature('wp6').geom.feature('dist4').selection('entity2').init(0);
model.geom('geom1').feature('wp6').geom.feature('dist4').selection('entity2').set('pt2', 1);
model.geom('geom1').feature('wp6').geom.feature('dist4').set('distanceconstr', false);
model.geom('geom1').feature('wp6').geom.feature('dist4').set('createpar', true);
model.geom('geom1').feature('wp6').geom.feature('dist4').set('parname', 'd_C_Cmp');
model.geom('geom1').feature('wp6').geom.run('dist4');
model.geom('geom1').run('wp6');
model.geom('geom1').create('pch1', 'ParameterCheck');
model.geom('geom1').feature('pch1').set('condition', 'd_O_Cmp<3[mm]+RO+RCmp');
model.geom('geom1').feature('pch1').set('message', ['Distance' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'between' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'outer' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'hole' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'and' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'component' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'smaller' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'than' native2unicode(hex2dec({'00' 'a0'}), 'unicode') '3' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'mm']);
model.geom('geom1').run('pch1');
model.geom('geom1').create('pch2', 'ParameterCheck');
model.geom('geom1').feature('pch2').set('condition', 'd_O_C<3[mm]+RO+RC');
model.geom('geom1').feature('pch2').set('message', ['Distance' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'between' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'outer' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'hole' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'and' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'central' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'hole' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'smaller' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'than' native2unicode(hex2dec({'00' 'a0'}), 'unicode') '3 mm']);
model.geom('geom1').run('pch2');
model.geom('geom1').create('pch3', 'ParameterCheck');
model.geom('geom1').feature('pch3').set('condition', 'd_O_O<3[mm]+2*RO');
model.geom('geom1').feature('pch3').set('message', ['Distance' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'between' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'outer' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'holes' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'smaller' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'than' native2unicode(hex2dec({'00' 'a0'}), 'unicode') '3 mm']);
model.geom('geom1').run('pch3');
model.geom('geom1').create('pch4', 'ParameterCheck');
model.geom('geom1').feature('pch4').set('condition', 'd_C_Cmp<3[mm]+RC+RCmp');
model.geom('geom1').feature('pch4').set('message', ['Distance' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'between' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'central' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'hole' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'and' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'component' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'less' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'than' native2unicode(hex2dec({'00' 'a0'}), 'unicode') '3 mm']);
model.geom('geom1').run('pch4');
model.geom('geom1').create('boxsel1', 'BoxSelection');
model.geom('geom1').feature('boxsel1').label('Left Edges Indent');
model.geom('geom1').feature('boxsel1').set('entitydim', 1);
model.geom('geom1').feature('boxsel1').set('xmin', 'LX-THK');
model.geom('geom1').feature('boxsel1').set('xmax', 'LX');
model.geom('geom1').feature('boxsel1').set('ymin', 'YInd');
model.geom('geom1').feature('boxsel1').set('ymax', 'WInd');
model.geom('geom1').feature('boxsel1').set('zmin', 'HInd+1[mm]');
model.geom('geom1').feature('boxsel1').set('zmax', 'HInd+10[mm]');
model.geom('geom1').selection.create('csel1', 'CumulativeSelection');
model.geom('geom1').selection('csel1').label('Ignore Edges Selection');
model.geom('geom1').feature('boxsel1').set('contributeto', 'csel1');
model.geom('geom1').run('boxsel1');
model.geom('geom1').create('boxsel2', 'BoxSelection');
model.geom('geom1').feature('boxsel2').label('Right Edges Indent');
model.geom('geom1').feature('boxsel2').set('entitydim', 1);
model.geom('geom1').feature('boxsel2').set('xmin', 'LX-THK');
model.geom('geom1').feature('boxsel2').set('xmax', 'LX');
model.geom('geom1').feature('boxsel2').set('ymin', 'LY-WInd');
model.geom('geom1').feature('boxsel2').set('ymax', 'LY-YInd');
model.geom('geom1').feature('boxsel2').set('zmin', 'HInd+1[mm]');
model.geom('geom1').feature('boxsel2').set('zmax', 'HInd+10[mm]');
model.geom('geom1').feature('boxsel2').set('contributeto', 'csel1');
model.geom('geom1').run('boxsel2');
model.geom('geom1').create('boxsel3', 'BoxSelection');
model.geom('geom1').feature('boxsel3').label('Central Edges Indent');
model.geom('geom1').feature('boxsel3').set('entitydim', 1);
model.geom('geom1').feature('boxsel3').set('xmin', 'LX-2*THK');
model.geom('geom1').feature('boxsel3').set('xmax', 'LX');
model.geom('geom1').feature('boxsel3').set('ymin', 'LY/2-YInd');
model.geom('geom1').feature('boxsel3').set('ymax', 'LY/2+YInd');
model.geom('geom1').feature('boxsel3').set('zmin', 0);
model.geom('geom1').feature('boxsel3').set('zmax', 'HInd+1[mm]');
model.geom('geom1').feature('boxsel3').set('contributeto', 'csel1');
model.geom('geom1').run('boxsel3');
model.geom('geom1').run('fin');
model.geom('geom1').create('ige1', 'IgnoreEdges');
model.geom('geom1').feature('ige1').selection('input').named('csel1');

model.view('view1').camera.set('zoomanglefull', 20);
model.view('view1').camera.setIndex('position', 555, 0);
model.view('view1').camera.setIndex('position', -85, 1);
model.view('view1').camera.set('position', [555 -85 -290]);
model.view('view1').camera.setIndex('target', 32, 0);
model.view('view1').camera.set('target', [32 36 35]);
model.view('view1').camera.setIndex('up', 0.5489, 0);
model.view('view1').camera.setIndex('up', 0.16734, 1);
model.view('view1').camera.setIndex('up', 0.8189529, 2);
model.view('view1').camera.setIndex('rotationpoint', 32, 0);
model.view('view1').camera.set('rotationpoint', [32 36 35]);
model.view('view1').camera.setIndex('viewoffset', -0.0034896, 0);
model.view('view1').camera.set('viewoffset', [-0.0034896 0.020231444]);

model.geom('geom1').run('ige1');
model.geom('geom1').run('boxsel3');
model.geom('geom1').create('cyl1', 'Cylinder');
model.geom('geom1').feature('cyl1').set('r', '19[mm]');
model.geom('geom1').feature('cyl1').set('h', '100[mm]');
model.geom('geom1').feature('cyl1').set('pos', {'10[mm]' '36[mm]' '0'});
model.geom('geom1').feature('cyl1').setIndex('pos', '70[mm]', 2);
model.geom('geom1').feature('cyl1').set('axistype', 'x');
model.geom('geom1').run('cyl1');
model.geom('geom1').run('ige1');
model.geom('geom1').create('ige2', 'IgnoreEdges');
model.geom('geom1').feature('ige2').selection('input').set('ige1', [16 20]);
model.geom('geom1').run('ige2');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');

model.view('view1').set('showgrid', false);
model.view('view1').set('showaxisorientation', false);

model.selection('sel1').set([2]);
model.selection('sel1').set('color', 'custom');
model.selection('sel1').set('customcolor', [0.5411764979362488 0.48235294222831726 0.3960784375667572]);

model.view('view1').set('showgrid', true);
model.view('view1').set('showaxisorientation', true);

model.geom('geom1').feature.remove('cyl1');
model.geom('geom1').feature.remove('ige2');
model.geom('geom1').run;

model.selection.remove('sel1');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat1').propertyGroup('Enu').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup('Enu').func.create('int2', 'Interpolation');
model.material('mat1').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat1').propertyGroup.create('ElastoplasticModel', 'Elastoplastic material model');
model.material('mat1').propertyGroup('ElastoplasticModel').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('Ludwik', 'Ludwik');
model.material('mat1').propertyGroup('Ludwik').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('JohnsonCook', 'Johnson-Cook');
model.material('mat1').propertyGroup.create('Swift', 'Swift');
model.material('mat1').propertyGroup.create('Voce', 'Voce');
model.material('mat1').propertyGroup('Voce').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('HockettSherby', 'Hockett-Sherby');
model.material('mat1').propertyGroup('HockettSherby').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('ArmstrongFrederick', 'Armstrong-Frederick');
model.material('mat1').propertyGroup('ArmstrongFrederick').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('Norton', 'Norton');
model.material('mat1').propertyGroup.create('Garofalo', 'Garofalo (hyperbolic sine)');
model.material('mat1').propertyGroup.create('ChabocheViscoplasticity', 'Chaboche viscoplasticity');
model.material('mat1').label('Structural steel');
model.material('mat1').set('family', 'custom');
model.material('mat1').set('customspecular', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat1').set('customdiffuse', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat1').set('customambient', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat1').set('noise', true);
model.material('mat1').set('fresnel', 0.9);
model.material('mat1').set('roughness', 0.3);
model.material('mat1').set('metallic', 0);
model.material('mat1').set('pearl', 0);
model.material('mat1').set('diffusewrap', 0);
model.material('mat1').set('clearcoat', 0);
model.material('mat1').set('reflectance', 0);
model.material('mat1').propertyGroup('def').set('lossfactor', '0.02');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('heatcapacity', '475[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]'});
model.material('mat1').propertyGroup('def').set('density', '7850[kg/m^3]');
model.material('mat1').propertyGroup('Enu').func('int1').set('funcname', 'E');
model.material('mat1').propertyGroup('Enu').func('int1').set('table', {'293.15' '200e9'; '793.15' '166.6e9'});
model.material('mat1').propertyGroup('Enu').func('int1').set('extrap', 'linear');
model.material('mat1').propertyGroup('Enu').func('int1').set('fununit', {'Pa'});
model.material('mat1').propertyGroup('Enu').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Enu').func('int2').set('funcname', 'nu');
model.material('mat1').propertyGroup('Enu').func('int2').set('table', {'293.15' '0.30'; '793.15' '0.315'});
model.material('mat1').propertyGroup('Enu').func('int2').set('extrap', 'linear');
model.material('mat1').propertyGroup('Enu').func('int2').set('fununit', {'1'});
model.material('mat1').propertyGroup('Enu').func('int2').set('argunit', {'K'});
model.material('mat1').propertyGroup('Enu').set('E', 'E(T)');
model.material('mat1').propertyGroup('Enu').set('nu', 'nu(T)');
model.material('mat1').propertyGroup('Enu').addInput('temperature');
model.material('mat1').propertyGroup('Murnaghan').set('l', '-3.0e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('m', '-6.2e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('n', '-7.2e11[Pa]');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmags', '350[MPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('Et', '1.045[GPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('Ek', '1.045[GPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmagh', '1.050[GPa]*epe*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').addInput('temperature');
model.material('mat1').propertyGroup('ElastoplasticModel').addInput('effectiveplasticstrain');
model.material('mat1').propertyGroup('Ludwik').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('Ludwik').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('Ludwik').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('Ludwik').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Ludwik').set('k_lud', '560[MPa]*a(T)');
model.material('mat1').propertyGroup('Ludwik').set('n_lud', '0.61');
model.material('mat1').propertyGroup('Ludwik').addInput('temperature');
model.material('mat1').propertyGroup('JohnsonCook').set('k_jcook', '560[MPa]');
model.material('mat1').propertyGroup('JohnsonCook').set('n_jcook', '0.61');
model.material('mat1').propertyGroup('JohnsonCook').set('C_jcook', '0.12');
model.material('mat1').propertyGroup('JohnsonCook').set('epet0_jcook', '1[1/s]');
model.material('mat1').propertyGroup('JohnsonCook').set('m_jcook', '0.6');
model.material('mat1').propertyGroup('Swift').set('e0_swi', '0.021');
model.material('mat1').propertyGroup('Swift').set('n_swi', '0.2');
model.material('mat1').propertyGroup('Voce').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('Voce').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('Voce').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('Voce').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Voce').set('sigma_voc', '249[MPa]*a(T)');
model.material('mat1').propertyGroup('Voce').set('beta_voc', '9.3');
model.material('mat1').propertyGroup('Voce').addInput('temperature');
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('HockettSherby').set('sigma_hoc', '684[MPa]*a(T)');
model.material('mat1').propertyGroup('HockettSherby').set('m_hoc', '3.9');
model.material('mat1').propertyGroup('HockettSherby').set('n_hoc', '0.85');
model.material('mat1').propertyGroup('HockettSherby').addInput('temperature');
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('ArmstrongFrederick').set('Ck', '2.070[GPa]*a(T)');
model.material('mat1').propertyGroup('ArmstrongFrederick').set('gammak', '8.0');
model.material('mat1').propertyGroup('ArmstrongFrederick').addInput('temperature');
model.material('mat1').propertyGroup('Norton').set('A_nor', '1.2e-15[1/s]');
model.material('mat1').propertyGroup('Norton').set('sigRef_nor', '1[MPa]');
model.material('mat1').propertyGroup('Norton').set('n_nor', '4.5');
model.material('mat1').propertyGroup('Garofalo').set('A_gar', '1e-6[1/s]');
model.material('mat1').propertyGroup('Garofalo').set('sigRef_gar', '100[MPa]');
model.material('mat1').propertyGroup('Garofalo').set('n_gar', '4.6');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('A_cha', '1');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('sigRef_cha', '490[MPa]');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('n_cha', '9');

model.physics('solid').create('fix1', 'Fixed', 2);
model.physics('solid').feature('fix1').label('Fixed (Bolts)');
model.physics('solid').feature('fix1').selection.set([6 7 8 9 10 11]);
model.physics('solid').create('rig1', 'RigidConnector', 2);
model.physics('solid').feature('rig1').label('Rigid Connector (Mounted component)');
model.physics('solid').feature('rig1').selection.set([28 29 38 39]);
model.physics('solid').feature('rig1').set('CenterOfRotationType', 'userDefined');
model.physics('solid').feature('rig1').set('xc', {'LX-THK/2' 'LY/2' 'LZ'});
model.physics('solid').feature('rig1').create('rmm1', 'RigidBodyMassInertia', -1);
model.physics('solid').feature('rig1').feature('rmm1').set('mt', 'mCmp');
model.physics('solid').feature('rig1').feature('rmm1').set('mi', {'IXCmp' '0' '0' '0' 'IYZCmp' '0' '0' '0' 'IYZCmp'});

model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.set([4 15 17 19 21 24 26]);
model.mesh('mesh1').feature('ftri1').create('size1', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size1').selection.set([4]);
model.mesh('mesh1').feature('ftri1').feature('size1').set('hauto', 3);
model.mesh('mesh1').feature('ftri1').create('size2', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size2').selection.set([15 17 19 21 24 26]);
model.mesh('mesh1').feature('ftri1').feature('size2').set('hauto', 2);
model.mesh('mesh1').run('ftri1');
model.mesh('mesh1').feature('ftri1').feature('size2').selection.set([15 17 19 21 24 26]);
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis1').set('numelem', 3);
model.mesh('mesh1').run;
model.mesh('mesh1').feature('swe1').feature('dis1').selection.set([1 2]);

model.study('std1').label('Eigenfrequency Study');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'eig');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_rot').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_disp').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_rot').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_disp').set('scaleval', '0.0011967959824919013');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_rot').set('scaleval', '0.01');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.11967959824919013');
model.sol('sol1').feature('v1').set('control', 'eig');
model.sol('sol1').create('e1', 'Eigenvalue');
model.sol('sol1').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol1').feature('e1').set('eigvfunscaleparam', '1.2E-7');
model.sol('sol1').feature('e1').set('control', 'eig');
model.sol('sol1').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 1, 0);
model.result('pg1').set('defaultPlotID', 'modeShape');
model.result('pg1').label('Mode Shape (solid)');
model.result('pg1').set('showlegends', false);
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'solid.disp'});
model.result('pg1').feature('surf1').set('threshold', 'manual');
model.result('pg1').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg1').feature('surf1').set('colortable', 'Rainbow');
model.result('pg1').feature('surf1').set('colortabletrans', 'none');
model.result('pg1').feature('surf1').set('colorscalemode', 'linear');
model.result('pg1').feature('surf1').set('colortable', 'AuroraBorealis');
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg1').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg1').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result.evaluationGroup.create('std1EvgFrq', 'EvaluationGroup');
model.result.evaluationGroup('std1EvgFrq').set('defaultPlotID', 'eigenfrequenciesTable_solid');
model.result.evaluationGroup('std1EvgFrq').set('data', 'dset1');
model.result.evaluationGroup('std1EvgFrq').label('Eigenfrequencies (Eigenfrequency Study)');
model.result.evaluationGroup('std1EvgFrq').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('expr', '2*pi*freq', 0);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('unit', 'rad/s', 0);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('descr', 'Angular frequency', 0);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('expr', 'imag(freq)/abs(freq)', 1);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('unit', '1', 1);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('descr', 'Damping ratio', 1);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('expr', 'abs(freq)/imag(freq)/2', 2);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('unit', '1', 2);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('descr', 'Quality factor', 2);
model.result.evaluationGroup('std1EvgFrq').run;
model.result.evaluationGroup.create('std1mpf1', 'EvaluationGroup');
model.result.evaluationGroup('std1mpf1').set('data', 'dset1');
model.result.evaluationGroup('std1mpf1').label('Participation Factors (Eigenfrequency Study)');
model.result.evaluationGroup('std1mpf1').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfLnormX', 0);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 0);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, X-translation', 0);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfLnormY', 1);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 1);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Y-translation', 1);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfLnormZ', 2);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 2);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Z-translation', 2);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfRnormX', 3);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 3);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, X-rotation', 3);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfRnormY', 4);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 4);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Y-rotation', 4);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfRnormZ', 5);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 5);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Z-rotation', 5);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffLX', 6);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg', 6);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, X-translation', 6);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffLY', 7);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg', 7);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Y-translation', 7);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffLZ', 8);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg', 8);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Z-translation', 8);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffRX', 9);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg*m^2', 9);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, X-rotation', 9);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffRY', 10);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg*m^2', 10);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Y-rotation', 10);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffRZ', 11);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg*m^2', 11);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Z-rotation', 11);
model.result.evaluationGroup('std1mpf1').run;
model.result('pg1').run;

model.physics('solid').create('bl1', 'BodyLoad', 3);
model.physics('solid').feature('bl1').label('Body load 4g on bracket');
model.physics('solid').feature('bl1').selection.all;
model.physics('solid').feature('bl1').set('FperVol', {'4*g_const*solid.rho' '4*g_const*solid.rho' '4*g_const*solid.rho'});
model.physics('solid').feature('rig1').create('rf1', 'RigidBodyForce', -1);
model.physics('solid').feature('rig1').feature('rf1').label('Force 4g on mounted component');
model.physics('solid').feature('rig1').feature('rf1').set('Ft', {'4*g_const*mCmp' '4*g_const*mCmp' '4*g_const*mCmp'});

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/solid', true);
model.study('std2').label('Stationary Study');

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_disp').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_rot').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_disp').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_rot').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_disp').set('scaleval', '0.0011967959824919013');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_rot').set('scaleval', '0.01');
model.sol('sol2').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.11967959824919013');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol2').feature('s1').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol2').feature('s1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol2').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol2').feature('s1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'dset2');
model.result('pg2').set('defaultPlotID', 'stress');
model.result('pg2').label('Stress (solid)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').create('vol1', 'Volume');
model.result('pg2').feature('vol1').set('expr', {'solid.misesGp'});
model.result('pg2').feature('vol1').set('threshold', 'manual');
model.result('pg2').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg2').feature('vol1').set('colortable', 'Rainbow');
model.result('pg2').feature('vol1').set('colortabletrans', 'none');
model.result('pg2').feature('vol1').set('colorscalemode', 'linear');
model.result('pg2').feature('vol1').set('resolution', 'custom');
model.result('pg2').feature('vol1').set('refine', 2);
model.result('pg2').feature('vol1').set('colortable', 'Prism');
model.result('pg2').feature('vol1').create('def', 'Deform');
model.result('pg2').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg2').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result('pg2').run;

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');
model.selection('sel1').label('Stress Optimization Domain');
model.selection('sel1').set([2]);

model.probe.create('dom1', 'Domain');
model.probe('dom1').model('comp1');
model.probe('dom1').set('intsurface', true);
model.probe('dom1').set('intvolume', true);
model.probe('dom1').set('probename', 'mass');
model.probe('dom1').set('type', 'integral');
model.probe('dom1').set('expr', 'solid.rho');
model.probe('dom1').set('descr', 'Density');
model.probe.create('dom2', 'Domain');
model.probe('dom2').model('comp1');
model.probe('dom2').set('intsurface', true);
model.probe('dom2').set('intvolume', true);
model.probe('dom2').set('probename', 'maxStress');
model.probe('dom2').set('type', 'maximum');
model.probe('dom2').selection.named('sel1');
model.probe('dom2').set('expr', 'solid.mises');
model.probe('dom2').set('descr', 'von Mises stress');

model.result('pg2').run;
model.result('pg2').label('Stress in Optimized Region');
model.result('pg2').run;
model.result('pg2').feature('vol1').set('unit', 'MPa');
model.result('pg2').run;
model.result('pg2').feature('vol1').feature.remove('def');
model.result('pg2').run;
model.result('pg2').feature('vol1').create('sel1', 'Selection');
model.result('pg2').feature('vol1').feature('sel1').selection.named('sel1');
model.result('pg2').run;
model.result('pg2').feature('vol1').create('mrkr1', 'Marker');
model.result('pg2').run;

model.study.create('std3');
model.study('std3').label('Optimization Study');
model.study('std3').create('opt', 'Optimization');
model.study('std3').create('ref', 'StudyReference');
model.study('std3').feature('ref').label('Eigenfrequency');
model.study('std3').feature('ref').set('studyref', 'std1');
model.study('std3').create('ref2', 'StudyReference');
model.study('std3').feature('ref2').label('Stationary');
model.study('std3').feature('ref2').set('studyref', 'std2');
model.study('std3').feature('opt').set('optsolver', 'cobyla');
model.study('std3').feature('opt').set('err', false);
model.study('std3').feature('opt').set('optobj', {'comp1.mass'});
model.study('std3').feature('opt').set('descr', {'Domain Probe 1'});
model.study('std3').feature('opt').setIndex('descr', 'Bracket mass', 0);
model.study('std3').feature('opt').setIndex('optobjEvaluateFor', 'ref2', 0);
model.study('std3').feature('opt').set('objectivesolution', 'first');
model.study('std3').feature('opt').set('pname', {'RC' 'ZCO' 'RO' 'YOO' 'ZOO'});
model.study('std3').feature('opt').set('initval', {'4[mm]' '5[mm]' '5[mm]' '8[mm]' '20[mm]'});
model.study('std3').feature('opt').set('scale', {'12[mm]' '22[mm]' '12[mm]' '26[mm]' '22[mm]'});
model.study('std3').feature('opt').set('lbound', {'3[mm]' '1[mm]' '3[mm]' '3[mm]' '8[mm]'});
model.study('std3').feature('opt').set('ubound', {'15[mm]' '23[mm]' '15[mm]' '29[mm]' '30[mm]'});
model.study('std3').feature('opt').setIndex('constraintExpression', 'real(freq)', 0);
model.study('std3').feature('opt').setIndex('constraintLbound', 'minFreq', 0);
model.study('std3').feature('opt').setIndex('constraintExpression', 'comp1.maxStress/maxStressLimit', 1);
model.study('std3').feature('opt').setIndex('constraintUbound', 1, 1);
model.study('std3').feature('opt').setIndex('constraintEvaluateFor', 'ref2', 1);
model.study('std3').feature('opt').set('plot', true);
model.study('std3').feature('opt').set('plotgroup', 'pg2');

model.sol.create('sol3');
model.sol('sol3').study('std3');
model.sol('sol1').study('std1');
model.sol('sol1').feature.remove('e1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'eig');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_rot').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_disp').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_rot').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_disp').set('scaleval', '0.0011967959824919013');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_rot').set('scaleval', '0.01');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.11967959824919013');
model.sol('sol1').feature('v1').set('control', 'eig');
model.sol('sol1').create('e1', 'Eigenvalue');
model.sol('sol1').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol1').feature('e1').set('eigvfunscaleparam', '1.2E-7');
model.sol('sol1').feature('e1').set('control', 'eig');
model.sol('sol1').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol1').attach('std1');
model.sol('sol2').study('std2');
model.sol('sol2').feature.remove('s1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('st1');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_disp').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_rot').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_disp').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_rot').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_disp').set('scaleval', '0.0011967959824919013');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_rot').set('scaleval', '0.01');
model.sol('sol2').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.11967959824919013');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol2').feature('s1').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol2').feature('s1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol2').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol2').feature('s1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol3').create('copy1', 'CopySolution');
model.sol('sol3').feature('copy1').set('sol', 'sol2');
model.sol('sol3').attach('std3');
model.sol('sol1').study('std1');
model.sol('sol1').feature.remove('e1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'eig');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_rot').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_disp').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_rot').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_disp').set('scaleval', '0.0011967959824919013');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_rot').set('scaleval', '0.01');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.11967959824919013');
model.sol('sol1').feature('v1').set('control', 'eig');
model.sol('sol1').create('e1', 'Eigenvalue');
model.sol('sol1').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol1').feature('e1').set('eigvfunscaleparam', '1.2E-7');
model.sol('sol1').feature('e1').set('control', 'eig');
model.sol('sol1').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol1').attach('std1');
model.sol('sol2').study('std2');
model.sol('sol2').feature.remove('s1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('st1');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_disp').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_rot').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_disp').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_rot').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_disp').set('scaleval', '0.0011967959824919013');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_rot').set('scaleval', '0.01');
model.sol('sol2').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.11967959824919013');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol2').feature('s1').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol2').feature('s1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol2').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol2').feature('s1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');

model.batch.create('o1', 'Optimization');
model.batch('o1').study('std3');
model.batch('p1').study('std3');
model.batch('o1').attach('std3');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').attach('std3');
model.batch('p1').set('optimization', 'o1');
model.batch('p1').set('err', 'on');
model.batch('p1').set('control', 'opt');
model.batch.create('p2', 'Parametric');
model.batch('p2').study('std3');
model.batch('p2').create('so1', 'Solutionseq');
model.batch('p2').feature('so1').set('seq', 'sol2');
model.batch('p2').feature('so1').set('store', 'on');
model.batch('p2').feature('so1').set('clear', 'on');
model.batch('p2').feature('so1').set('psol', 'none');
model.batch('p2').attach('std3');
model.batch('p2').set('optimization', 'o1');
model.batch('p2').set('err', 'on');
model.batch('p2').set('control', 'opt');
model.batch.create('p3', 'Parametric');
model.batch('p3').study('std3');
model.batch('p3').create('so1', 'Solutionseq');
model.batch('p3').feature('so1').set('seq', 'sol3');
model.batch('p3').feature('so1').set('store', 'on');
model.batch('p3').feature('so1').set('clear', 'on');
model.batch('p3').feature('so1').set('psol', 'none');
model.batch('p3').attach('std3');
model.batch('p3').set('optimization', 'o1');
model.batch('p3').set('err', 'on');
model.batch('p3').set('control', 'opt');
model.batch('o1').set('parametricjobs', {'p1' 'p2' 'p3'});

model.sol('sol3').study('std3');
model.sol('sol3').feature.remove('copy1');
model.sol('sol1').study('std1');
model.sol('sol1').feature.remove('e1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'eig');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_rot').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_disp').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_rot').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_disp').set('scaleval', '0.0011967959824919013');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_rot').set('scaleval', '0.01');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.11967959824919013');
model.sol('sol1').feature('v1').set('control', 'eig');
model.sol('sol1').create('e1', 'Eigenvalue');
model.sol('sol1').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol1').feature('e1').set('eigvfunscaleparam', '1.2E-7');
model.sol('sol1').feature('e1').set('control', 'eig');
model.sol('sol1').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol1').attach('std1');
model.sol('sol2').study('std2');
model.sol('sol2').feature.remove('s1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('st1');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_disp').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_rot').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_disp').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_rot').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_disp').set('scaleval', '0.0011967959824919013');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_rot').set('scaleval', '0.01');
model.sol('sol2').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.11967959824919013');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol2').feature('s1').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol2').feature('s1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol2').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol2').feature('s1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol3').create('copy1', 'CopySolution');
model.sol('sol3').feature('copy1').set('sol', 'sol2');
model.sol('sol3').attach('std3');
model.sol('sol1').study('std1');
model.sol('sol1').feature.remove('e1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'eig');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_rot').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_disp').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_rot').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_disp').set('scaleval', '0.0011967959824919013');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_rot').set('scaleval', '0.01');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.11967959824919013');
model.sol('sol1').feature('v1').set('control', 'eig');
model.sol('sol1').create('e1', 'Eigenvalue');
model.sol('sol1').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol1').feature('e1').set('eigvfunscaleparam', '1.2E-7');
model.sol('sol1').feature('e1').set('control', 'eig');
model.sol('sol1').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol1').attach('std1');
model.sol('sol2').study('std2');
model.sol('sol2').feature.remove('s1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('st1');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_disp').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_rot').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_disp').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_rot').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_disp').set('scaleval', '0.0011967959824919013');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_rot').set('scaleval', '0.01');
model.sol('sol2').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.11967959824919013');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol2').feature('s1').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol2').feature('s1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol2').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol2').feature('s1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');

model.batch('o1').active(true);
model.batch('o1').attach('std3');
model.batch('p1').feature.remove('so1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').attach('std3');
model.batch('p1').set('optimization', 'o1');
model.batch('p1').set('err', 'on');
model.batch('p1').set('control', 'opt');
model.batch('p2').feature.remove('so1');
model.batch('p2').create('so1', 'Solutionseq');
model.batch('p2').feature('so1').set('seq', 'sol2');
model.batch('p2').feature('so1').set('store', 'on');
model.batch('p2').feature('so1').set('clear', 'on');
model.batch('p2').feature('so1').set('psol', 'none');
model.batch('p2').attach('std3');
model.batch('p2').set('optimization', 'o1');
model.batch('p2').set('err', 'on');
model.batch('p2').set('control', 'opt');
model.batch('p3').feature.remove('so1');
model.batch('p3').create('so1', 'Solutionseq');
model.batch('p3').feature('so1').set('seq', 'sol3');
model.batch('p3').feature('so1').set('store', 'on');
model.batch('p3').feature('so1').set('clear', 'on');
model.batch('p3').feature('so1').set('psol', 'none');
model.batch('p3').attach('std3');
model.batch('p3').set('optimization', 'o1');
model.batch('p3').set('err', 'on');
model.batch('p3').set('control', 'opt');
model.batch('o1').set('parametricjobs', {'p1' 'p2' 'p3'});

model.sol.create('sol4');
model.sol('sol4').study('std3');
model.sol('sol4').label('Parametric Solutions 1');

model.batch('p3').feature('so1').set('psol', 'sol4');

model.probe('dom1').genResult('none');
model.probe('dom2').genResult('none');

model.geom('geom1').run('wp6');
model.geom('geom1').run('wp6');
model.geom('geom1').run('wp6');
model.geom('geom1').run('wp6');
model.geom('geom1').run('wp6');
model.geom('geom1').run('wp6');
model.geom('geom1').run('wp6');
model.geom('geom1').run('wp6');
model.geom('geom1').run('wp6');
model.geom('geom1').run('wp6');
model.geom('geom1').run('wp6');
model.geom('geom1').run('wp6');
model.geom('geom1').run('wp6');
model.geom('geom1').run('wp6');
model.geom('geom1').run('wp6');
model.geom('geom1').run('wp6');
model.geom('geom1').run('wp6');
model.geom('geom1').run('wp6');
model.geom('geom1').run('wp6');
model.geom('geom1').run('wp6');
model.geom('geom1').run('wp6');
model.geom('geom1').run('wp6');
model.geom('geom1').run('wp6');
model.geom('geom1').run('wp6');

model.batch('o1').run('compute');

model.geom('geom1').run;

model.study('std3').feature('opt').set('probewindow', '');

model.result('pg2').run;
model.result('pg2').run;

model.param('default').paramCase.create('case2');
model.param('default').paramCase('case2').set('RC', '0.0062777[m]');
model.param('default').paramCase('case2').set('ZCO', '0.0027855[m]');
model.param('default').paramCase('case2').set('YOO', '0.0081103[m]');
model.param('default').paramCase('case2').set('ZOO', '0.020057[m]');
model.param('default').paramCase('case2').set('RO', '0.0099480[m]');
model.param('default').paramCase('case2').label('Optimized Values');
model.param('default').setFromCase('case2');

model.geom('geom1').run('ige1');

model.title(['Optimization of an Imported Bracket Geometry ' native2unicode(hex2dec({'20' '14'}), 'unicode') ' with Measuring Dimensions']);

model.description(['In this tutorial, you will use the Offset Faces and Transform Faces operations as a way to reparameterize existing holes in a bracket geometry imported from a STEP file. The mass of the bracket is minimized with limits for both the lowest natural frequency, and for the maximum stress in a static load case.' newline  newline 'In this tutorial dimension features are added to the geometry sequence to measure both the imported and the modified geometry. The parameters created by the measuring dimensions are used in parameter check nodes. These enforce the geometrical constraints during the optimization to maintain the design intent of the geometry.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;

model.label('bracket_import_optimization_dimensions.mph');

model.modelNode.label('Components');

out = model;
