function out = model
%
% heterojunction_tunneling.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Semiconductor_Module/Verification_Examples');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('semi', 'Semiconductor', 'geom1');
model.physics('semi').model('comp1');
model.physics.create('cc', 'CurvilinearCoordinates', 'geom1');
model.physics('cc').model('comp1');
model.physics.create('cc2', 'CurvilinearCoordinates', 'geom1');
model.physics('cc2').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/semi', true);
model.study('std1').feature('stat').setSolveFor('/physics/cc', true);
model.study('std1').feature('stat').setSolveFor('/physics/cc2', true);

model.geom('geom1').lengthUnit([native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('T0', '300[K]', 'Reference temperature');
model.param.set('T', 'T0', 'Lattice temperature');
model.param.set('d1', '0.25[um]', 'Layer 1 thickness');
model.param.set('d3', 'd1', 'Layer 3 thickness');
model.param.set('d2', '0.078[um]', 'Layer 2 thickness');
model.param.set('N_D1', '1.5e17[cm^-3]', 'Layer 1 n doping');
model.param.set('N_D2', '5e15[cm^-3]', 'Layer 2 n doping');
model.param.set('N_D3', '8e17[cm^-3]', 'Layer 3 n doping');
model.param.set('N_A', '0[cm^-3]', 'P doping');
model.param.set('Al_frac0', '0.3', 'Mole fraction of Al at heterojunction');
model.param.set('Va', '0[V]', 'Applied voltage');
model.param.set('thickness', '1[m]', 'Out of plane thickness');
model.param.set('Vth', 'k_B_const*T/e_const', 'Thermal voltage');

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', {'d1+d2+d3' 'd2'});
model.geom('geom1').feature('r1').set('pos', {'-d1' '0'});
model.geom('geom1').feature('r1').set('layerbottom', false);
model.geom('geom1').feature('r1').set('layerleft', true);
model.geom('geom1').feature('r1').setIndex('layer', 'd1', 0);
model.geom('geom1').feature('r1').setIndex('layer', 'd2', 1);
model.geom('geom1').runPre('fin');

model.variable.create('var1');
model.variable('var1').model('comp1');

model.geom('geom1').run;

model.variable('var1').label('Variables for Domain 1');
model.variable('var1').selection.geom('geom1', 2);
model.variable('var1').selection.set([1]);
model.variable('var1').set('N_D', 'N_D1');
model.variable('var1').descr('N_D', 'n doping');
model.variable('var1').set('Al_frac', '0');
model.variable('var1').descr('Al_frac', 'Mole fraction of Al');
model.variable.duplicate('var2', 'var1');
model.variable('var2').label('Variables for Domain 2');
model.variable('var2').selection.set([2]);
model.variable('var2').set('N_D', 'N_D2');
model.variable('var2').set('Al_frac', 'Al_frac0*(1-x/d2)');
model.variable.duplicate('var3', 'var1');
model.variable('var3').label('Variables for Domain 3');
model.variable('var3').selection.set([3]);
model.variable('var3').set('N_D', 'N_D3');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').label('Al(x)Ga(1-x)As (Yang et al 1993)');
model.material('mat1').propertyGroup('def').set('x', {'Al_frac'});
model.material('mat1').propertyGroup('def').descr('x', 'Mole fraction of Al');
model.material('mat1').propertyGroup('def').set('me', {'(0.067+0.083*def.x)*me_const'});
model.material('mat1').propertyGroup('def').descr('me', 'Electron DOS effective mass');
model.material('mat1').propertyGroup('def').set('mh', {'(0.48+0.31*def.x)*me_const'});
model.material('mat1').propertyGroup('def').descr('mh', 'Hole DOS effective mass');
model.material('mat1').propertyGroup.create('SemicondMaterial', 'Semiconductor_material');
model.material('mat1').propertyGroup('SemicondMaterial').set('mun', {'7200[cm^2/V/s]/(1+5.51e-17[cm^3]*(N_D+N_A))^0.233*(T0/T)^2.3*(1-0.127*def.x/0.1)'});
model.material('mat1').propertyGroup('SemicondMaterial').set('mup', {'380[cm^2/V/s]/(1+3.17e-17[cm^3]*(N_D+N_A))^0.266*(T0/T)^2.7*(1-0.067*def.x/0.1)'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'13.1-3*def.x'});
model.material('mat1').propertyGroup('SemicondMaterial').set('Eg0', {'1.519[V]+1.247[V]*def.x-5.405e-4[V/K]*T^2/(T+204[K])'});
model.material('mat1').propertyGroup('SemicondMaterial').set('chi0', {'4.07[V]-0.6*1.247[V]*def.x'});
model.material('mat1').propertyGroup('SemicondMaterial').set('Nc', {'2*((def.me*k_B_const*T)/(2*pi*hbar_const^2))^1.5'});
model.material('mat1').propertyGroup('SemicondMaterial').set('Nv', {'2*((def.mh*k_B_const*T)/(2*pi*hbar_const^2))^1.5'});

model.physics('cc').selection.set([2]);
model.physics('cc').create('diff1', 'DiffusionMethod', 2);
model.physics('cc').feature('diff1').create('inl1', 'Inlet', 1);
model.physics('cc').feature('diff1').feature('inl1').selection.set([6]);
model.physics('cc').feature('diff1').create('out1', 'Outlet', 1);
model.physics('cc').feature('diff1').feature('out1').selection.set([5]);
model.physics('cc2').selection.set([2]);
model.physics('cc2').create('diff1', 'DiffusionMethod', 2);
model.physics('cc2').feature('diff1').create('inl1', 'Inlet', 1);
model.physics('cc2').feature('diff1').feature('inl1').selection.set([7]);
model.physics('cc2').feature('diff1').create('out1', 'Outlet', 1);
model.physics('cc2').feature('diff1').feature('out1').selection.set([4]);

model.variable.create('var4');
model.variable('var4').model('comp1');
model.variable('var4').label('Variables for tunneling');
model.variable('var4').selection.geom('geom1', 2);
model.variable('var4').selection.set([2]);
model.variable('var4').set('pbcc', 'cc.diff1.U');
model.variable('var4').descr('pbcc', 'Normalized arc length along the edge of the potential barrier');
model.variable('var4').set('flcc', 'cc2.diff1.U');
model.variable('var4').descr('flcc', 'Normalized arc length along the field line');

model.physics('semi').prop('d').set('d', 'thickness');
model.physics('semi').prop('ShapeProperty').set('Formulation', 'FEM2Ef');
model.physics('semi').prop('LatticeProperties').set('T0', 'T0');
model.physics('semi').feature('smm1').set('minput_temperature', 'T');
model.physics('semi').feature('smm1').set('Ionization', 'incomplete');
model.physics('semi').feature('smm1').set('deltaEd', '0.005[V]+0.03[V]*material.def.x/Al_frac0');
model.physics('semi').feature('smm1').set('deltaEa', '0.026[V]');
model.physics('semi').feature('cont1').set('HeteroModelSelection', 2);
model.physics('semi').feature.duplicate('cont2', 'cont1');
model.physics('semi').feature('cont2').selection.set([4]);
model.physics('semi').feature('cont2').set('extraElectronCurrent', 'WKBTunneling');
model.physics('semi').feature('cont2').create('wkbe1', 'WKBTunnelingModelElectrons', 1);
model.physics('semi').feature('cont2').feature('wkbe1').selection('pbdm').set([2]);
model.physics('semi').feature('cont2').feature('wkbe1').selection('obnd').set([7]);
model.physics('semi').feature('cont2').feature('wkbe1').set('m', 'material.def.me');
model.physics('semi').feature('cont2').feature('wkbe1').set('flc', 'flcc');
model.physics('semi').feature('cont2').feature('wkbe1').set('bndc', 'pbcc');
model.physics('semi').create('adm1', 'AnalyticDopingModel', 2);
model.physics('semi').feature('adm1').selection.all;
model.physics('semi').feature('adm1').set('impurityType', 'donor');
model.physics('semi').feature('adm1').set('NDc', 'N_D');
model.physics('semi').create('tar1', 'TrapAssistedRecombination', 2);
model.physics('semi').feature('tar1').selection.all;

model.material('mat1').propertyGroup.create('SRH', 'Shockley-Read-Hall_recombination');
model.material('mat1').propertyGroup('SRH').set('taun', {'1[ns]'});
model.material('mat1').propertyGroup('SRH').set('taup', {'1[ns]'});

model.physics('semi').create('mc1', 'MetalContact', 1);
model.physics('semi').feature('mc1').selection.set([1]);
model.physics('semi').feature('mc1').set('V0', 'Va');
model.physics('semi').create('mc2', 'MetalContact', 1);
model.physics('semi').feature('mc2').selection.set([10]);

model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('size1').selection.set([4]);

model.study('std1').label('Study 1: no tunneling');
model.study('std1').feature('stat').setEntry('activate', 'cc', false);
model.study('std1').feature('stat').setEntry('activate', 'cc2', false);
model.study('std1').feature('stat').set('useadvanceddisable', true);
model.study('std1').feature('stat').set('disabledphysics', {'semi/cont2'});
model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 'T0', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'K', 0);
model.study('std1').feature('stat').setIndex('pname', 'T0', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'K', 0);
model.study('std1').feature('stat').setIndex('pname', 'Va', 0);
model.study('std1').feature('stat').setIndex('plistarr', 'range(-1.2,0.1,-0.01) -0.05 range(0.025,0.025,0.25)', 0);
model.study('std1').feature('stat').setIndex('punit', 'V', 0);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_V').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_Efn_').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_Efp_').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_V').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_Efn_').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_Efp_').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_V').set('scaleval', '1');
model.sol('sol1').feature('v1').feature('comp1_Efn_').set('scaleval', '1');
model.sol('sol1').feature('v1').feature('comp1_Efp_').set('scaleval', '1');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 1.0E-4);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol1').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s1').set('control', 'stat');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', false);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').feature('aDef').set('assemtol', 0);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol1').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol1').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol1').feature('s1').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol1').feature('s1').feature('d1').set('ooc', 'off');
model.sol('sol1').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol1').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol1').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').label('Electron Concentration (semi)');
model.result('pg1').set('showlegendsmaxmin', true);
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 23, 0);
model.result('pg1').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond2/pg1');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('expr', 'semi.N');
model.result('pg1').feature('surf1').set('unit', '1/cm^3');
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').feature('surf1').set('colorscalemode', 'logarithmic');
model.result('pg1').feature('surf1').set('resolution', 'norefine');
model.result('pg1').feature('surf1').set('smooth', 'internal');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').label('Hole Concentration (semi)');
model.result('pg2').set('showlegendsmaxmin', true);
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 23, 0);
model.result('pg2').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond2/pg2');
model.result('pg2').feature.create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('expr', 'semi.P');
model.result('pg2').feature('surf1').set('unit', '1/cm^3');
model.result('pg2').feature('surf1').set('colortable', 'Prism');
model.result('pg2').feature('surf1').set('colorscalemode', 'logarithmic');
model.result('pg2').feature('surf1').set('resolution', 'norefine');
model.result('pg2').feature('surf1').set('smooth', 'internal');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('data', 'parent');
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').label('Electric Potential (semi)');
model.result('pg3').set('data', 'dset1');
model.result('pg3').setIndex('looplevel', 23, 0);
model.result('pg3').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond2/pg3');
model.result('pg3').feature.create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('expr', 'V');
model.result('pg3').feature('surf1').set('resolution', 'norefine');
model.result('pg3').feature('surf1').set('smooth', 'internal');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('data', 'parent');
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').set('data', 'dset1');
model.result('pg4').create('surf2', 'Surface');
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf2').set('expr', 'semi.Nnetdop');
model.result('pg4').feature('surf2').set('unit', '1/cm^3');
model.result('pg4').feature('surf2').set('coloring', 'gradient');
model.result('pg4').feature('surf2').set('colorscalemode', 'logarithmic');
model.result('pg4').feature('surf2').set('topcolor', 'red');
model.result('pg4').feature('surf2').set('bottomcolor', 'custom');
model.result('pg4').feature('surf2').set('custombottomcolor', [1 0.8 0.8]);
model.result('pg4').feature('surf2').set('smooth', 'internal');
model.result('pg4').feature('surf2').set('showsolutionparams', 'on');
model.result('pg4').feature('surf2').set('data', 'parent');
model.result('pg4').feature('surf2').set('titletype', 'none');
model.result('pg4').feature('surf2').feature.create('filt1', 'Filter');
model.result('pg4').feature('surf2').feature('filt1').set('expr', 'semi.Na-semi.Nd > 1[1/cm^3]');
model.result('pg4').feature('surf2').feature('filt1').set('useder', true);
model.result('pg4').feature('surf1').set('expr', 'semi.Nnetdop');
model.result('pg4').feature('surf1').set('unit', '1/cm^3');
model.result('pg4').feature('surf1').set('coloring', 'gradient');
model.result('pg4').feature('surf1').set('colorscalemode', 'logarithmic');
model.result('pg4').feature('surf1').set('topcolor', 'blue');
model.result('pg4').feature('surf1').set('bottomcolor', 'custom');
model.result('pg4').feature('surf1').set('custombottomcolor', [0.8 0.8 1]);
model.result('pg4').feature('surf1').set('smooth', 'internal');
model.result('pg4').feature('surf1').set('showsolutionparams', 'on');
model.result('pg4').feature('surf1').set('data', 'parent');
model.result('pg4').feature('surf1').set('titletype', 'none');
model.result('pg4').feature('surf1').feature.create('filt1', 'Filter');
model.result('pg4').feature('surf1').feature('filt1').set('expr', 'semi.Nd-semi.Na > 1[1/cm^3]');
model.result('pg4').feature('surf1').feature('filt1').set('useder', true);
model.result('pg4').set('titletype', 'manual');
model.result('pg4').set('title', 'Net Dopant Concentration \vert N<sub>d</sub> - N<sub>a</sub>\vert: P-type (Red), N-type (Blue)');
model.result('pg4').set('showlegendsmaxmin', true);
model.result('pg4').set('showlegendsunit', true);
model.result('pg4').set('legendpos', 'alternating');
model.result('pg4').feature('surf2').label('P-type');
model.result('pg4').feature('surf1').label('N-type');
model.result('pg4').label('Net Dopant Concentration (semi)');
model.result('pg1').run;
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').feature.remove('surf2');
model.result('pg4').run;
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').label('I-V at 300 K');
model.result('pg5').set('titletype', 'manual');
model.result('pg5').set('title', 'I-V at 300K');
model.result('pg5').set('ylabelactive', true);
model.result('pg5').set('ylabel', 'Current density (10<sup>4</sup>A/cm<sup>2</sup>)');
model.result('pg5').set('axislimits', true);
model.result('pg5').set('xmin', -1.2);
model.result('pg5').set('xmax', 0.4);
model.result('pg5').set('ymax', 2);
model.result('pg5').set('legendpos', 'upperleft');
model.result('pg5').create('glob1', 'Global');
model.result('pg5').feature('glob1').set('markerpos', 'datapoints');
model.result('pg5').feature('glob1').set('linewidth', 'preference');
model.result('pg5').feature('glob1').setIndex('expr', 'semi.I0_1/d2/thickness/1e4[A/cm^2]', 0);
model.result('pg5').feature('glob1').setIndex('descr', 'no tunneling', 0);
model.result('pg5').run;

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/semi', false);
model.study('std2').feature('stat').setSolveFor('/physics/cc', true);
model.study('std2').feature('stat').setSolveFor('/physics/cc2', true);
model.study('std2').label('Study 2: curvilinear coordinates');

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('seDef', 'Segregated');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').feature('s1').feature.remove('seDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result.create('pg6', 'PlotGroup2D');
model.result('pg6').label('Vector Field (cc)');
model.result('pg6').set('data', 'dset2');
model.result('pg6').set('titlecolor', 'black');
model.result('pg6').set('edgecolor', 'black');
model.result('pg6').set('legendcolor', 'black');
model.result('pg6').set('data', 'dset2');
model.result('pg6').set('defaultPlotID', 'CurvilinearCoordinates/phys1/pdef1/pcond2/pg1');
model.result('pg6').feature.create('str1', 'Streamline');
model.result('pg6').feature('str1').set('posmethod', 'uniform');
model.result('pg6').feature('str1').set('color', 'red');
model.result('pg6').feature('str1').set('smooth', 'internal');
model.result('pg6').feature('str1').set('maxlen', Inf);
model.result('pg6').feature('str1').set('maxtime', Inf);
model.result('pg6').feature('str1').set('maxlen', Inf);
model.result('pg6').feature('str1').set('maxtime', Inf);
model.result('pg6').feature('str1').set('maxlen', Inf);
model.result('pg6').feature('str1').set('maxtime', Inf);
model.result('pg6').feature('str1').set('maxlen', Inf);
model.result('pg6').feature('str1').set('maxtime', Inf);
model.result('pg6').feature('str1').set('maxlen', Inf);
model.result('pg6').feature('str1').set('maxtime', Inf);
model.result('pg6').feature('str1').set('data', 'parent');
model.result.create('pg7', 'PlotGroup2D');
model.result('pg7').label('Vector Field (cc2)');
model.result('pg7').set('data', 'dset2');
model.result('pg7').set('titlecolor', 'black');
model.result('pg7').set('edgecolor', 'black');
model.result('pg7').set('legendcolor', 'black');
model.result('pg7').set('data', 'dset2');
model.result('pg7').set('defaultPlotID', 'CurvilinearCoordinates/phys1/pdef1/pcond2/pg1');
model.result('pg7').feature.create('str1', 'Streamline');
model.result('pg7').feature('str1').set('expr', {'cc2.vX' 'cc2.vY'});
model.result('pg7').feature('str1').set('posmethod', 'uniform');
model.result('pg7').feature('str1').set('color', 'red');
model.result('pg7').feature('str1').set('smooth', 'internal');
model.result('pg7').feature('str1').set('maxlen', Inf);
model.result('pg7').feature('str1').set('maxtime', Inf);
model.result('pg7').feature('str1').set('maxlen', Inf);
model.result('pg7').feature('str1').set('maxtime', Inf);
model.result('pg7').feature('str1').set('maxlen', Inf);
model.result('pg7').feature('str1').set('maxtime', Inf);
model.result('pg7').feature('str1').set('maxlen', Inf);
model.result('pg7').feature('str1').set('maxtime', Inf);
model.result('pg7').feature('str1').set('maxlen', Inf);
model.result('pg7').feature('str1').set('maxtime', Inf);
model.result('pg7').feature('str1').set('data', 'parent');
model.result('pg6').run;
model.result.create('pg8', 'PlotGroup2D');
model.result('pg8').run;
model.result('pg8').label('Curvilinear coordinates');
model.result('pg8').set('data', 'dset2');
model.result('pg8').create('con1', 'Contour');
model.result('pg8').feature('con1').set('expr', 'pbcc');
model.result('pg8').feature('con1').set('number', 5);
model.result('pg8').feature.duplicate('con2', 'con1');
model.result('pg8').run;
model.result('pg8').feature('con2').set('expr', 'flcc');
model.result('pg8').feature('con2').set('number', 8);
model.result('pg8').run;
model.result('pg8').feature('con1').set('colortable', 'GrayScale');
model.result('pg8').run;

model.study.create('std3');
model.study('std3').create('stat', 'Stationary');
model.study('std3').feature('stat').setSolveFor('/physics/semi', true);
model.study('std3').feature('stat').setSolveFor('/physics/cc', false);
model.study('std3').feature('stat').setSolveFor('/physics/cc2', false);
model.study('std3').label('Study 3: tunneling');
model.study('std3').feature('stat').set('useinitsol', true);
model.study('std3').feature('stat').set('initmethod', 'sol');
model.study('std3').feature('stat').set('initstudy', 'std1');
model.study('std3').feature('stat').set('solnum', 1);
model.study('std3').feature('stat').set('usesol', true);
model.study('std3').feature('stat').set('notsolmethod', 'sol');
model.study('std3').feature('stat').set('notstudy', 'std2');
model.study('std3').feature('stat').set('useparam', true);
model.study('std3').feature('stat').setIndex('pname', 'T0', 0);
model.study('std3').feature('stat').setIndex('plistarr', '', 0);
model.study('std3').feature('stat').setIndex('punit', 'K', 0);
model.study('std3').feature('stat').setIndex('pname', 'T0', 0);
model.study('std3').feature('stat').setIndex('plistarr', '', 0);
model.study('std3').feature('stat').setIndex('punit', 'K', 0);
model.study('std3').feature('stat').setIndex('pname', 'Va', 0);
model.study('std3').feature('stat').setIndex('plistarr', 'range(-1.2,0.1,-0.01) -0.05 range(0.025,0.025,0.25)', 0);
model.study('std3').feature('stat').setIndex('punit', 'V', 0);

model.sol.create('sol3');
model.sol('sol3').study('std3');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std3');
model.sol('sol3').feature('st1').set('studystep', 'stat');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').feature('comp1_V').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_Efn_').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_Efp_').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_V').set('resscalemethod', 'parent');
model.sol('sol3').feature('v1').feature('comp1_Efn_').set('resscalemethod', 'parent');
model.sol('sol3').feature('v1').feature('comp1_Efp_').set('resscalemethod', 'parent');
model.sol('sol3').feature('v1').feature('comp1_V').set('scaleval', '1');
model.sol('sol3').feature('v1').feature('comp1_Efn_').set('scaleval', '1');
model.sol('sol3').feature('v1').feature('comp1_Efp_').set('scaleval', '1');
model.sol('sol3').feature('v1').set('control', 'stat');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').set('stol', 1.0E-4);
model.sol('sol3').feature('s1').create('p1', 'Parametric');
model.sol('sol3').feature('s1').feature.remove('pDef');
model.sol('sol3').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol3').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol3').feature('s1').set('control', 'stat');
model.sol('sol3').feature('s1').feature('aDef').set('complexfun', false);
model.sol('sol3').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol3').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol3').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol3').feature('s1').feature('aDef').set('assemtol', 0);
model.sol('sol3').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol3').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol3').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol3').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol3').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol3').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol3').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol3').feature('s1').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol3').feature('s1').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol3').feature('s1').feature('d1').set('ooc', 'off');
model.sol('sol3').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol3').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol3').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol3').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol3').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol3').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol3').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol3').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol3').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol('sol3').attach('std3');
model.sol('sol3').runAll;

model.result.create('pg9', 'PlotGroup2D');
model.result('pg9').label('Electron Concentration (semi) 1');
model.result('pg9').set('data', 'dset3');
model.result('pg9').setIndex('looplevel', 23, 0);
model.result('pg9').set('showlegendsmaxmin', true);
model.result('pg9').set('data', 'dset3');
model.result('pg9').setIndex('looplevel', 23, 0);
model.result('pg9').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond2/pg1');
model.result('pg9').feature.create('surf1', 'Surface');
model.result('pg9').feature('surf1').set('showsolutionparams', 'on');
model.result('pg9').feature('surf1').set('expr', 'semi.N');
model.result('pg9').feature('surf1').set('unit', '1/cm^3');
model.result('pg9').feature('surf1').set('colortable', 'Prism');
model.result('pg9').feature('surf1').set('colorscalemode', 'logarithmic');
model.result('pg9').feature('surf1').set('resolution', 'norefine');
model.result('pg9').feature('surf1').set('smooth', 'internal');
model.result('pg9').feature('surf1').set('showsolutionparams', 'on');
model.result('pg9').feature('surf1').set('data', 'parent');
model.result.create('pg10', 'PlotGroup2D');
model.result('pg10').label('Hole Concentration (semi) 1');
model.result('pg10').set('data', 'dset3');
model.result('pg10').setIndex('looplevel', 23, 0);
model.result('pg10').set('showlegendsmaxmin', true);
model.result('pg10').set('data', 'dset3');
model.result('pg10').setIndex('looplevel', 23, 0);
model.result('pg10').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond2/pg2');
model.result('pg10').feature.create('surf1', 'Surface');
model.result('pg10').feature('surf1').set('showsolutionparams', 'on');
model.result('pg10').feature('surf1').set('expr', 'semi.P');
model.result('pg10').feature('surf1').set('unit', '1/cm^3');
model.result('pg10').feature('surf1').set('colortable', 'Prism');
model.result('pg10').feature('surf1').set('colorscalemode', 'logarithmic');
model.result('pg10').feature('surf1').set('resolution', 'norefine');
model.result('pg10').feature('surf1').set('smooth', 'internal');
model.result('pg10').feature('surf1').set('showsolutionparams', 'on');
model.result('pg10').feature('surf1').set('data', 'parent');
model.result.create('pg11', 'PlotGroup2D');
model.result('pg11').label('Electric Potential (semi) 1');
model.result('pg11').set('data', 'dset3');
model.result('pg11').setIndex('looplevel', 23, 0);
model.result('pg11').set('data', 'dset3');
model.result('pg11').setIndex('looplevel', 23, 0);
model.result('pg11').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond2/pg3');
model.result('pg11').feature.create('surf1', 'Surface');
model.result('pg11').feature('surf1').set('showsolutionparams', 'on');
model.result('pg11').feature('surf1').set('expr', 'V');
model.result('pg11').feature('surf1').set('resolution', 'norefine');
model.result('pg11').feature('surf1').set('smooth', 'internal');
model.result('pg11').feature('surf1').set('showsolutionparams', 'on');
model.result('pg11').feature('surf1').set('data', 'parent');
model.result.create('pg12', 'PlotGroup2D');
model.result('pg12').set('data', 'dset3');
model.result('pg12').create('surf2', 'Surface');
model.result('pg12').create('surf1', 'Surface');
model.result('pg12').feature('surf2').set('expr', 'semi.Nnetdop');
model.result('pg12').feature('surf2').set('unit', '1/cm^3');
model.result('pg12').feature('surf2').set('coloring', 'gradient');
model.result('pg12').feature('surf2').set('colorscalemode', 'logarithmic');
model.result('pg12').feature('surf2').set('topcolor', 'red');
model.result('pg12').feature('surf2').set('bottomcolor', 'custom');
model.result('pg12').feature('surf2').set('custombottomcolor', [1 0.8 0.8]);
model.result('pg12').feature('surf2').set('smooth', 'internal');
model.result('pg12').feature('surf2').set('showsolutionparams', 'on');
model.result('pg12').feature('surf2').set('data', 'parent');
model.result('pg12').feature('surf2').set('titletype', 'none');
model.result('pg12').feature('surf2').feature.create('filt1', 'Filter');
model.result('pg12').feature('surf2').feature('filt1').set('expr', 'semi.Na-semi.Nd > 1[1/cm^3]');
model.result('pg12').feature('surf2').feature('filt1').set('useder', true);
model.result('pg12').feature('surf1').set('expr', 'semi.Nnetdop');
model.result('pg12').feature('surf1').set('unit', '1/cm^3');
model.result('pg12').feature('surf1').set('coloring', 'gradient');
model.result('pg12').feature('surf1').set('colorscalemode', 'logarithmic');
model.result('pg12').feature('surf1').set('topcolor', 'blue');
model.result('pg12').feature('surf1').set('bottomcolor', 'custom');
model.result('pg12').feature('surf1').set('custombottomcolor', [0.8 0.8 1]);
model.result('pg12').feature('surf1').set('smooth', 'internal');
model.result('pg12').feature('surf1').set('showsolutionparams', 'on');
model.result('pg12').feature('surf1').set('data', 'parent');
model.result('pg12').feature('surf1').set('titletype', 'none');
model.result('pg12').feature('surf1').feature.create('filt1', 'Filter');
model.result('pg12').feature('surf1').feature('filt1').set('expr', 'semi.Nd-semi.Na > 1[1/cm^3]');
model.result('pg12').feature('surf1').feature('filt1').set('useder', true);
model.result('pg12').set('titletype', 'manual');
model.result('pg12').set('title', 'Net Dopant Concentration \vert N<sub>d</sub> - N<sub>a</sub>\vert: P-type (Red), N-type (Blue)');
model.result('pg12').set('showlegendsmaxmin', true);
model.result('pg12').set('showlegendsunit', true);
model.result('pg12').set('legendpos', 'alternating');
model.result('pg12').feature('surf2').label('P-type');
model.result('pg12').feature('surf1').label('N-type');
model.result('pg12').label('Net Dopant Concentration (semi) 1');
model.result('pg9').run;
model.result('pg12').run;
model.result.remove('pg12');
model.result('pg5').run;
model.result('pg5').feature.duplicate('glob2', 'glob1');
model.result('pg5').run;
model.result('pg5').feature('glob2').set('data', 'dset3');
model.result('pg5').feature('glob2').setIndex('descr', 'tunneling', 0);
model.result('pg5').run;
model.result.create('pg12', 'PlotGroup1D');
model.result('pg12').run;
model.result('pg12').label('Conduction band profiles');
model.result('pg12').set('data', 'dset3');
model.result('pg12').setIndex('looplevelinput', 'manual', 0);
model.result('pg12').setIndex('looplevel', [8 19], 0);
model.result('pg12').create('lngr1', 'LineGraph');
model.result('pg12').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg12').feature('lngr1').set('linewidth', 'preference');
model.result('pg12').feature('lngr1').selection.set([2 5 8]);
model.result('pg12').feature('lngr1').set('expr', 'semi.Ec');
model.result('pg12').feature('lngr1').set('smooth', 'everywhere');
model.result('pg12').feature('lngr1').set('legend', true);
model.result('pg12').feature('lngr1').set('autodescr', true);
model.result('pg12').feature.duplicate('lngr2', 'lngr1');
model.result('pg12').run;
model.result('pg12').feature('lngr2').set('expr', 'semi.Efn');
model.result('pg12').feature('lngr2').set('linestyle', 'dashed');
model.result('pg12').feature('lngr2').set('linecolor', 'cyclereset');
model.result('pg12').run;
model.result('pg12').set('axislimits', true);
model.result('pg12').set('xmin', 0.1);
model.result('pg12').set('xmax', 0.4);
model.result('pg12').set('legendpos', 'middleleft');
model.result('pg12').run;

model.study.create('std4');
model.study('std4').label('Study 4: no tunneling, lower Ts');
model.study('std4').feature.copy('stat1', 'std1/stat');
model.study('std4').feature('stat1').setIndex('plistarr', '-0.05 range(-0.1,-0.1,-1.2)', 0);
model.study('std4').feature('stat1').setIndex('punit', 'V', 0);
model.study('std4').feature('stat1').set('useinitsol', true);
model.study('std4').feature('stat1').set('initmethod', 'sol');
model.study('std4').feature('stat1').set('initstudy', 'std1');
model.study('std4').feature('stat1').set('solnum', 13);
model.study('std4').create('param', 'Parametric');
model.study('std4').feature('param').setIndex('pname', 'T0', 0);
model.study('std4').feature('param').setIndex('plistarr', '', 0);
model.study('std4').feature('param').setIndex('punit', 'K', 0);
model.study('std4').feature('param').setIndex('pname', 'T0', 0);
model.study('std4').feature('param').setIndex('plistarr', '', 0);
model.study('std4').feature('param').setIndex('punit', 'K', 0);
model.study('std4').feature('param').setIndex('pname', 'T', 0);
model.study('std4').feature('param').setIndex('plistarr', '200 180', 0);
model.study('std4').feature('param').setIndex('pname', 'T0', 1);
model.study('std4').feature('param').setIndex('plistarr', '', 1);
model.study('std4').feature('param').setIndex('punit', 'K', 1);
model.study('std4').feature('param').setIndex('pname', 'T0', 1);
model.study('std4').feature('param').setIndex('plistarr', '', 1);
model.study('std4').feature('param').setIndex('punit', 'K', 1);
model.study('std4').feature('param').setIndex('pname', 'Al_frac0', 1);
model.study('std4').feature('param').setIndex('plistarr', '0.27 0.28', 1);

model.sol.create('sol4');
model.sol('sol4').study('std4');
model.sol('sol4').create('st1', 'StudyStep');
model.sol('sol4').feature('st1').set('study', 'std4');
model.sol('sol4').feature('st1').set('studystep', 'stat1');
model.sol('sol4').create('v1', 'Variables');
model.sol('sol4').feature('v1').feature('comp1_V').set('scalemethod', 'manual');
model.sol('sol4').feature('v1').feature('comp1_Efn_').set('scalemethod', 'manual');
model.sol('sol4').feature('v1').feature('comp1_Efp_').set('scalemethod', 'manual');
model.sol('sol4').feature('v1').feature('comp1_V').set('resscalemethod', 'parent');
model.sol('sol4').feature('v1').feature('comp1_Efn_').set('resscalemethod', 'parent');
model.sol('sol4').feature('v1').feature('comp1_Efp_').set('resscalemethod', 'parent');
model.sol('sol4').feature('v1').feature('comp1_V').set('scaleval', '1');
model.sol('sol4').feature('v1').feature('comp1_Efn_').set('scaleval', '1');
model.sol('sol4').feature('v1').feature('comp1_Efp_').set('scaleval', '1');
model.sol('sol4').feature('v1').set('control', 'stat1');
model.sol('sol4').create('s1', 'Stationary');
model.sol('sol4').feature('s1').set('stol', 1.0E-4);
model.sol('sol4').feature('s1').create('p1', 'Parametric');
model.sol('sol4').feature('s1').feature.remove('pDef');
model.sol('sol4').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol4').feature('s1').feature('p1').set('control', 'stat1');
model.sol('sol4').feature('s1').set('control', 'stat1');
model.sol('sol4').feature('s1').feature('aDef').set('complexfun', false);
model.sol('sol4').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol4').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol4').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol4').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol4').feature('s1').feature('aDef').set('assemtol', 0);
model.sol('sol4').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol4').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol4').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol4').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol4').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol4').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol4').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol4').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol4').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol4').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol4').feature('s1').create('d1', 'Direct');
model.sol('sol4').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol4').feature('s1').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol4').feature('s1').feature('d1').set('ooc', 'off');
model.sol('sol4').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol4').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol4').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol4').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol4').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol4').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol4').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol4').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol4').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol4').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol4').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol4').feature('s1').feature.remove('fcDef');
model.sol('sol4').attach('std4');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std4');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol4');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'T' 'Al_frac0'});
model.batch('p1').set('plistarr', {'200 180' '0.27 0.28'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std4');
model.batch('p1').set('control', 'param');

model.sol.create('sol5');
model.sol('sol5').study('std4');
model.sol('sol5').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol5');
model.batch('p1').run('compute');

model.result.create('pg13', 'PlotGroup2D');
model.result('pg13').label('Electron Concentration (semi) 2');
model.result('pg13').set('data', 'dset5');
model.result('pg13').setIndex('looplevel', 13, 0);
model.result('pg13').setIndex('looplevel', 2, 1);
model.result('pg13').set('showlegendsmaxmin', true);
model.result('pg13').set('data', 'dset5');
model.result('pg13').setIndex('looplevel', 13, 0);
model.result('pg13').setIndex('looplevel', 2, 1);
model.result('pg13').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond2/pg1');
model.result('pg13').feature.create('surf1', 'Surface');
model.result('pg13').feature('surf1').set('showsolutionparams', 'on');
model.result('pg13').feature('surf1').set('expr', 'semi.N');
model.result('pg13').feature('surf1').set('unit', '1/cm^3');
model.result('pg13').feature('surf1').set('colortable', 'Prism');
model.result('pg13').feature('surf1').set('colorscalemode', 'logarithmic');
model.result('pg13').feature('surf1').set('resolution', 'norefine');
model.result('pg13').feature('surf1').set('smooth', 'internal');
model.result('pg13').feature('surf1').set('showsolutionparams', 'on');
model.result('pg13').feature('surf1').set('data', 'parent');
model.result.create('pg14', 'PlotGroup2D');
model.result('pg14').label('Hole Concentration (semi) 2');
model.result('pg14').set('data', 'dset5');
model.result('pg14').setIndex('looplevel', 13, 0);
model.result('pg14').setIndex('looplevel', 2, 1);
model.result('pg14').set('showlegendsmaxmin', true);
model.result('pg14').set('data', 'dset5');
model.result('pg14').setIndex('looplevel', 13, 0);
model.result('pg14').setIndex('looplevel', 2, 1);
model.result('pg14').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond2/pg2');
model.result('pg14').feature.create('surf1', 'Surface');
model.result('pg14').feature('surf1').set('showsolutionparams', 'on');
model.result('pg14').feature('surf1').set('expr', 'semi.P');
model.result('pg14').feature('surf1').set('unit', '1/cm^3');
model.result('pg14').feature('surf1').set('colortable', 'Prism');
model.result('pg14').feature('surf1').set('colorscalemode', 'logarithmic');
model.result('pg14').feature('surf1').set('resolution', 'norefine');
model.result('pg14').feature('surf1').set('smooth', 'internal');
model.result('pg14').feature('surf1').set('showsolutionparams', 'on');
model.result('pg14').feature('surf1').set('data', 'parent');
model.result.create('pg15', 'PlotGroup2D');
model.result('pg15').label('Electric Potential (semi) 2');
model.result('pg15').set('data', 'dset5');
model.result('pg15').setIndex('looplevel', 13, 0);
model.result('pg15').setIndex('looplevel', 2, 1);
model.result('pg15').set('data', 'dset5');
model.result('pg15').setIndex('looplevel', 13, 0);
model.result('pg15').setIndex('looplevel', 2, 1);
model.result('pg15').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond2/pg3');
model.result('pg15').feature.create('surf1', 'Surface');
model.result('pg15').feature('surf1').set('showsolutionparams', 'on');
model.result('pg15').feature('surf1').set('expr', 'V');
model.result('pg15').feature('surf1').set('resolution', 'norefine');
model.result('pg15').feature('surf1').set('smooth', 'internal');
model.result('pg15').feature('surf1').set('showsolutionparams', 'on');
model.result('pg15').feature('surf1').set('data', 'parent');
model.result.create('pg16', 'PlotGroup2D');
model.result('pg16').set('data', 'dset5');
model.result('pg16').create('surf2', 'Surface');
model.result('pg16').create('surf1', 'Surface');
model.result('pg16').feature('surf2').set('expr', 'semi.Nnetdop');
model.result('pg16').feature('surf2').set('unit', '1/cm^3');
model.result('pg16').feature('surf2').set('coloring', 'gradient');
model.result('pg16').feature('surf2').set('colorscalemode', 'logarithmic');
model.result('pg16').feature('surf2').set('topcolor', 'red');
model.result('pg16').feature('surf2').set('bottomcolor', 'custom');
model.result('pg16').feature('surf2').set('custombottomcolor', [1 0.8 0.8]);
model.result('pg16').feature('surf2').set('smooth', 'internal');
model.result('pg16').feature('surf2').set('showsolutionparams', 'on');
model.result('pg16').feature('surf2').set('data', 'parent');
model.result('pg16').feature('surf2').set('titletype', 'none');
model.result('pg16').feature('surf2').feature.create('filt1', 'Filter');
model.result('pg16').feature('surf2').feature('filt1').set('expr', 'semi.Na-semi.Nd > 1[1/cm^3]');
model.result('pg16').feature('surf2').feature('filt1').set('useder', true);
model.result('pg16').feature('surf1').set('expr', 'semi.Nnetdop');
model.result('pg16').feature('surf1').set('unit', '1/cm^3');
model.result('pg16').feature('surf1').set('coloring', 'gradient');
model.result('pg16').feature('surf1').set('colorscalemode', 'logarithmic');
model.result('pg16').feature('surf1').set('topcolor', 'blue');
model.result('pg16').feature('surf1').set('bottomcolor', 'custom');
model.result('pg16').feature('surf1').set('custombottomcolor', [0.8 0.8 1]);
model.result('pg16').feature('surf1').set('smooth', 'internal');
model.result('pg16').feature('surf1').set('showsolutionparams', 'on');
model.result('pg16').feature('surf1').set('data', 'parent');
model.result('pg16').feature('surf1').set('titletype', 'none');
model.result('pg16').feature('surf1').feature.create('filt1', 'Filter');
model.result('pg16').feature('surf1').feature('filt1').set('expr', 'semi.Nd-semi.Na > 1[1/cm^3]');
model.result('pg16').feature('surf1').feature('filt1').set('useder', true);
model.result('pg16').set('titletype', 'manual');
model.result('pg16').set('title', 'Net Dopant Concentration \vert N<sub>d</sub> - N<sub>a</sub>\vert: P-type (Red), N-type (Blue)');
model.result('pg16').set('showlegendsmaxmin', true);
model.result('pg16').set('showlegendsunit', true);
model.result('pg16').set('legendpos', 'alternating');
model.result('pg16').feature('surf2').label('P-type');
model.result('pg16').feature('surf1').label('N-type');
model.result('pg16').label('Net Dopant Concentration (semi) 1');
model.result('pg13').run;
model.result('pg16').run;
model.result.remove('pg16');
model.result.create('pg16', 'PlotGroup1D');
model.result('pg16').run;
model.result('pg16').label('I-V at different Ts');
model.result('pg16').create('glob1', 'Global');
model.result('pg16').feature('glob1').set('markerpos', 'datapoints');
model.result('pg16').feature('glob1').set('linewidth', 'preference');
model.result('pg16').feature('glob1').setIndex('expr', '-semi.I0_1/d2/thickness', 0);
model.result('pg16').feature('glob1').setIndex('unit', 'A/cm^2', 0);
model.result('pg16').feature('glob1').setIndex('descr', 'T=300 K, Al_frac0=0.30, no tunneling', 0);
model.result('pg16').feature('glob1').set('xdata', 'expr');
model.result('pg16').feature('glob1').set('xdataexpr', '-Va');
model.result('pg16').feature('glob1').set('linestyle', 'dotted');
model.result('pg16').run;
model.result('pg16').setIndex('looplevelinput', 'manual', 0);
model.result('pg16').setIndex('looplevel', [1 2 3 4 5 6 7 8 9 10 11 12 13], 0);
model.result('pg16').set('titletype', 'manual');
model.result('pg16').set('title', 'I-V at 300, 200, and 180 K');
model.result('pg16').set('ylabelactive', true);
model.result('pg16').set('ylabel', 'Current density (A/cm<sup>2</sup>)');
model.result('pg16').run;
model.result('pg16').feature.duplicate('glob2', 'glob1');
model.result('pg16').run;
model.result('pg16').feature('glob2').set('data', 'dset5');
model.result('pg16').feature('glob2').setIndex('unit', 'A/cm^2', 0);
model.result('pg16').feature('glob2').setIndex('descr', 'no tunneling', 0);
model.result('pg16').set('ylog', true);
model.result('pg16').run;

model.study.create('std5');
model.study('std5').label('Study 5: tunneling, lower Ts');
model.study('std5').feature.copy('param1', 'std4/param');
model.study('std5').feature.copy('stat1', 'std4/stat1');
model.study('std5').feature('stat1').set('useadvanceddisable', false);
model.study('std5').feature('stat1').set('initstudy', 'std4');
model.study('std5').feature('stat1').set('initsol', 'sol5');
model.study('std5').feature('stat1').set('initsoluse', 'sol6');
model.study('std5').feature('stat1').set('solnum', 'first');
model.study('std5').feature('stat1').set('usesol', true);
model.study('std5').feature('stat1').set('notsolmethod', 'sol');
model.study('std5').feature('stat1').set('notstudy', 'std2');

model.sol.create('sol8');
model.sol('sol8').study('std5');
model.sol('sol8').create('st1', 'StudyStep');
model.sol('sol8').feature('st1').set('study', 'std5');
model.sol('sol8').feature('st1').set('studystep', 'stat1');
model.sol('sol8').create('v1', 'Variables');
model.sol('sol8').feature('v1').feature('comp1_V').set('scalemethod', 'manual');
model.sol('sol8').feature('v1').feature('comp1_Efn_').set('scalemethod', 'manual');
model.sol('sol8').feature('v1').feature('comp1_Efp_').set('scalemethod', 'manual');
model.sol('sol8').feature('v1').feature('comp1_V').set('resscalemethod', 'parent');
model.sol('sol8').feature('v1').feature('comp1_Efn_').set('resscalemethod', 'parent');
model.sol('sol8').feature('v1').feature('comp1_Efp_').set('resscalemethod', 'parent');
model.sol('sol8').feature('v1').feature('comp1_V').set('scaleval', '1');
model.sol('sol8').feature('v1').feature('comp1_Efn_').set('scaleval', '1');
model.sol('sol8').feature('v1').feature('comp1_Efp_').set('scaleval', '1');
model.sol('sol8').feature('v1').set('control', 'stat1');
model.sol('sol8').create('s1', 'Stationary');
model.sol('sol8').feature('s1').set('stol', 1.0E-4);
model.sol('sol8').feature('s1').create('p1', 'Parametric');
model.sol('sol8').feature('s1').feature.remove('pDef');
model.sol('sol8').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol8').feature('s1').feature('p1').set('control', 'stat1');
model.sol('sol8').feature('s1').set('control', 'stat1');
model.sol('sol8').feature('s1').feature('aDef').set('complexfun', false);
model.sol('sol8').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol8').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol8').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol8').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol8').feature('s1').feature('aDef').set('assemtol', 0);
model.sol('sol8').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol8').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol8').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol8').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol8').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol8').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol8').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol8').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol8').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol8').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol8').feature('s1').create('d1', 'Direct');
model.sol('sol8').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol8').feature('s1').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol8').feature('s1').feature('d1').set('ooc', 'off');
model.sol('sol8').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol8').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol8').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol8').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol8').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol8').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol8').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol8').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol8').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol8').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol8').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol8').feature('s1').feature.remove('fcDef');
model.sol('sol8').attach('std5');

model.batch.create('p2', 'Parametric');
model.batch('p2').study('std5');
model.batch('p2').create('so1', 'Solutionseq');
model.batch('p2').feature('so1').set('seq', 'sol8');
model.batch('p2').feature('so1').set('store', 'on');
model.batch('p2').feature('so1').set('clear', 'on');
model.batch('p2').feature('so1').set('psol', 'none');
model.batch('p2').set('pname', {'T' 'Al_frac0'});
model.batch('p2').set('plistarr', {'200 180' '0.27 0.28'});
model.batch('p2').set('sweeptype', 'sparse');
model.batch('p2').set('probesel', 'all');
model.batch('p2').set('probes', {});
model.batch('p2').set('plot', 'off');
model.batch('p2').set('err', 'on');
model.batch('p2').attach('std5');
model.batch('p2').set('control', 'param1');

model.sol.create('sol9');
model.sol('sol9').study('std5');
model.sol('sol9').label('Parametric Solutions 2');

model.batch('p2').feature('so1').set('psol', 'sol9');
model.batch('p2').run('compute');

model.result.create('pg17', 'PlotGroup2D');
model.result('pg17').label('Electron Concentration (semi) 3');
model.result('pg17').set('data', 'dset7');
model.result('pg17').setIndex('looplevel', 13, 0);
model.result('pg17').setIndex('looplevel', 2, 1);
model.result('pg17').set('showlegendsmaxmin', true);
model.result('pg17').set('data', 'dset7');
model.result('pg17').setIndex('looplevel', 13, 0);
model.result('pg17').setIndex('looplevel', 2, 1);
model.result('pg17').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond2/pg1');
model.result('pg17').feature.create('surf1', 'Surface');
model.result('pg17').feature('surf1').set('showsolutionparams', 'on');
model.result('pg17').feature('surf1').set('expr', 'semi.N');
model.result('pg17').feature('surf1').set('unit', '1/cm^3');
model.result('pg17').feature('surf1').set('colortable', 'Prism');
model.result('pg17').feature('surf1').set('colorscalemode', 'logarithmic');
model.result('pg17').feature('surf1').set('resolution', 'norefine');
model.result('pg17').feature('surf1').set('smooth', 'internal');
model.result('pg17').feature('surf1').set('showsolutionparams', 'on');
model.result('pg17').feature('surf1').set('data', 'parent');
model.result.create('pg18', 'PlotGroup2D');
model.result('pg18').label('Hole Concentration (semi) 3');
model.result('pg18').set('data', 'dset7');
model.result('pg18').setIndex('looplevel', 13, 0);
model.result('pg18').setIndex('looplevel', 2, 1);
model.result('pg18').set('showlegendsmaxmin', true);
model.result('pg18').set('data', 'dset7');
model.result('pg18').setIndex('looplevel', 13, 0);
model.result('pg18').setIndex('looplevel', 2, 1);
model.result('pg18').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond2/pg2');
model.result('pg18').feature.create('surf1', 'Surface');
model.result('pg18').feature('surf1').set('showsolutionparams', 'on');
model.result('pg18').feature('surf1').set('expr', 'semi.P');
model.result('pg18').feature('surf1').set('unit', '1/cm^3');
model.result('pg18').feature('surf1').set('colortable', 'Prism');
model.result('pg18').feature('surf1').set('colorscalemode', 'logarithmic');
model.result('pg18').feature('surf1').set('resolution', 'norefine');
model.result('pg18').feature('surf1').set('smooth', 'internal');
model.result('pg18').feature('surf1').set('showsolutionparams', 'on');
model.result('pg18').feature('surf1').set('data', 'parent');
model.result.create('pg19', 'PlotGroup2D');
model.result('pg19').label('Electric Potential (semi) 3');
model.result('pg19').set('data', 'dset7');
model.result('pg19').setIndex('looplevel', 13, 0);
model.result('pg19').setIndex('looplevel', 2, 1);
model.result('pg19').set('data', 'dset7');
model.result('pg19').setIndex('looplevel', 13, 0);
model.result('pg19').setIndex('looplevel', 2, 1);
model.result('pg19').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond2/pg3');
model.result('pg19').feature.create('surf1', 'Surface');
model.result('pg19').feature('surf1').set('showsolutionparams', 'on');
model.result('pg19').feature('surf1').set('expr', 'V');
model.result('pg19').feature('surf1').set('resolution', 'norefine');
model.result('pg19').feature('surf1').set('smooth', 'internal');
model.result('pg19').feature('surf1').set('showsolutionparams', 'on');
model.result('pg19').feature('surf1').set('data', 'parent');
model.result.create('pg20', 'PlotGroup2D');
model.result('pg20').set('data', 'dset7');
model.result('pg20').create('surf2', 'Surface');
model.result('pg20').create('surf1', 'Surface');
model.result('pg20').feature('surf2').set('expr', 'semi.Nnetdop');
model.result('pg20').feature('surf2').set('unit', '1/cm^3');
model.result('pg20').feature('surf2').set('coloring', 'gradient');
model.result('pg20').feature('surf2').set('colorscalemode', 'logarithmic');
model.result('pg20').feature('surf2').set('topcolor', 'red');
model.result('pg20').feature('surf2').set('bottomcolor', 'custom');
model.result('pg20').feature('surf2').set('custombottomcolor', [1 0.8 0.8]);
model.result('pg20').feature('surf2').set('smooth', 'internal');
model.result('pg20').feature('surf2').set('showsolutionparams', 'on');
model.result('pg20').feature('surf2').set('data', 'parent');
model.result('pg20').feature('surf2').set('titletype', 'none');
model.result('pg20').feature('surf2').feature.create('filt1', 'Filter');
model.result('pg20').feature('surf2').feature('filt1').set('expr', 'semi.Na-semi.Nd > 1[1/cm^3]');
model.result('pg20').feature('surf2').feature('filt1').set('useder', true);
model.result('pg20').feature('surf1').set('expr', 'semi.Nnetdop');
model.result('pg20').feature('surf1').set('unit', '1/cm^3');
model.result('pg20').feature('surf1').set('coloring', 'gradient');
model.result('pg20').feature('surf1').set('colorscalemode', 'logarithmic');
model.result('pg20').feature('surf1').set('topcolor', 'blue');
model.result('pg20').feature('surf1').set('bottomcolor', 'custom');
model.result('pg20').feature('surf1').set('custombottomcolor', [0.8 0.8 1]);
model.result('pg20').feature('surf1').set('smooth', 'internal');
model.result('pg20').feature('surf1').set('showsolutionparams', 'on');
model.result('pg20').feature('surf1').set('data', 'parent');
model.result('pg20').feature('surf1').set('titletype', 'none');
model.result('pg20').feature('surf1').feature.create('filt1', 'Filter');
model.result('pg20').feature('surf1').feature('filt1').set('expr', 'semi.Nd-semi.Na > 1[1/cm^3]');
model.result('pg20').feature('surf1').feature('filt1').set('useder', true);
model.result('pg20').set('titletype', 'manual');
model.result('pg20').set('title', 'Net Dopant Concentration \vert N<sub>d</sub> - N<sub>a</sub>\vert: P-type (Red), N-type (Blue)');
model.result('pg20').set('showlegendsmaxmin', true);
model.result('pg20').set('showlegendsunit', true);
model.result('pg20').set('legendpos', 'alternating');
model.result('pg20').feature('surf2').label('P-type');
model.result('pg20').feature('surf1').label('N-type');
model.result('pg20').label('Net Dopant Concentration (semi) 1');
model.result('pg17').run;
model.result('pg20').run;
model.result.remove('pg20');
model.result('pg16').run;
model.result('pg16').feature.duplicate('glob3', 'glob1');
model.result('pg16').run;
model.result('pg16').feature('glob3').set('data', 'dset3');
model.result('pg16').feature('glob3').setIndex('looplevelinput', 'manual', 0);
model.result('pg16').feature('glob3').setIndex('looplevel', [1 2 3 4 5 6 7 8 9 10 11 12 13], 0);
model.result('pg16').feature('glob3').setIndex('unit', 'A/cm^2', 0);
model.result('pg16').feature('glob3').setIndex('descr', 'T=300 K, Al_frac0=0.30, tunneling', 0);
model.result('pg16').feature('glob3').set('linestyle', 'solid');
model.result('pg16').feature('glob3').set('linecolor', 'cyclereset');
model.result('pg16').feature.duplicate('glob4', 'glob3');
model.result('pg16').run;
model.result('pg16').feature('glob4').set('data', 'dset7');
model.result('pg16').feature('glob4').setIndex('unit', 'A/cm^2', 0);
model.result('pg16').feature('glob4').setIndex('descr', 'tunneling', 0);
model.result('pg16').feature('glob4').set('linecolor', 'cycle');
model.result('pg16').run;
model.result('pg16').set('axislimits', true);
model.result('pg16').set('xmin', 0);
model.result('pg16').set('ymin', 0.1);
model.result('pg16').set('ymax', '1e4');
model.result('pg16').set('legendpos', 'upperleft');
model.result('pg16').run;

model.title('Heterojunction Tunneling');

model.description('This benchmark model simulates a graded heterojunction using the thermionic emission formulation for the charge transfer over the junction. It shows the additional contribution to the current density from the quantum tunneling effect across the potential barrier, using the WKB approximation. Even though the simulated system is 1D in nature, a 2D model is created to illustrate the procedure for simulating a more general configuration. Also demonstrated is the setup of user-defined ternary material properties. The computed I-V curves, their temperature dependence, and energy band diagrams all agree well with results from the literature.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;
model.sol('sol8').clearSolutionData;
model.sol('sol9').clearSolutionData;
model.sol('sol10').clearSolutionData;
model.sol('sol11').clearSolutionData;

model.label('heterojunction_tunneling.mph');

model.modelNode.label('Components');

out = model;
