function out = model
%
% ac_corrosion.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Corrosion_Module/General_Corrosion');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 1);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('tcd', 'TertiaryElectroanalysis', 'geom1', {'cO2'});
model.physics.create('ge', 'GlobalEquations', 'geom1');
model.physics('ge').model('comp1');
model.physics('ge').prop('EquationForm').set('form', 'Automatic');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/tcd', true);
model.study('std1').feature('stat').setSolveFor('/physics/ge', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('Ecorr', '-0.67[V]', 'Equilibrium potential for metal dissolution');
model.param.set('icorr', '5e-5[A/cm^2]', 'Exchange current density for metal dissolution');
model.param.set('ba', '0.089[V]', 'Anodic tafel slope for metal dissolution');
model.param.set('bc', '-0.352[V]', 'Cathodic tafel slope for oxygen reduction');
model.param.set('i_O2_lim', '7e-5[A/cm^2]', 'Limiting current density for oxygen reduction');
model.param.set('i0_H2', '1e-7[A/cm^2]', 'Exchange current density for hydrogen evolution reaction');
model.param.set('E_H2', '-0.244[V]', 'Equilibrium potential for hydrogen evolution reaction');
model.param.set('b_H2', '-0.205[V]', 'Cathodic tafel slope for hydrogen evolution reaction');
model.param.set('C', '6.38[F/m^2]', 'Double layer capacitance');
model.param.set('Rs', '8.7[ohm*cm^2]', 'Solution resistance');
model.param.set('E_DC', '-0.67[V]', 'Applied DC potential');
model.param.set('E_RMS', '0.6[V]', 'Amplitude of AC potential');
model.param.set('f', '60[Hz]', 'Frequency of AC potential');
model.param.set('omega', '2*pi*f', 'Angular frequency');
model.param.set('E0', 'E_DC-(icorr*exp(2.3*(E_DC-Ecorr)/ba)-icorr*exp(-2.3*(E_DC-Ecorr)/bc)/(1-icorr/i_O2_lim+icorr/i_O2_lim*exp(-2.3*(E_DC-Ecorr)/bc))-i0_H2*exp(-2.3*(E_DC-E_H2)/b_H2))*Rs', 'Initial electric potential');
model.param.set('tf', '3/f', 'Final time');
model.param.set('D_O2', '2e-5[cm^2/s]', 'Diffusion coefficient of dissolved oxygen');
model.param.set('c_O2_sat', '2e-7[mol/ml]', 'Saturation concentration of dissolved oxygen');
model.param.set('L', '4*F_const*c_O2_sat*D_O2/i_O2_lim', 'Diffusion layer thickness');
model.param.set('t', '0', 'Initial time');

model.geom('geom1').create('i1', 'Interval');
model.geom('geom1').feature('i1').setIndex('coord', 'L', 1);
model.geom('geom1').runPre('fin');

model.variable.create('var1');
model.variable('var1').model('comp1');

model.geom('geom1').run;

% To import content from file, use:
% model.variable('var1').loadFile('FILENAME');
model.variable('var1').set('ia', 'intop1(tcd.iloc_er1)', 'Anodic current density');
model.variable('var1').set('E_app', 'E_DC+E_RMS*sin(omega*t)', 'Applied DC and AC Potential');

model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl('intop1').set('axisym', true);
model.cpl('intop1').selection.geom('geom1', 0);
model.cpl('intop1').selection.set([1]);

model.physics('tcd').feature('ice1').set('D_cO2', {'D_O2' '0' '0' '0' 'D_O2' '0' '0' '0' 'D_O2'});
model.physics('tcd').feature('init1').setIndex('initc', 'c_O2_sat', 0);
model.physics('tcd').create('conc1', 'Concentration', 0);
model.physics('tcd').feature('conc1').selection.set([2]);
model.physics('tcd').feature('conc1').setIndex('species', true, 0);
model.physics('tcd').feature('conc1').setIndex('c0', 'c_O2_sat', 0);
model.physics('tcd').create('es1', 'ElectrodeSurface', 0);
model.physics('tcd').feature('es1').selection.set([1]);
model.physics('tcd').feature('es1').set('phisext0', 'E');
model.physics('tcd').feature('es1').feature('er1').set('Eeq_mat', 'userdef');
model.physics('tcd').feature('es1').feature('er1').set('Eeq', 'Ecorr');
model.physics('tcd').feature('es1').feature('er1').set('ElectrodeKinetics', 'AnodicTafelEquation');
model.physics('tcd').feature('es1').feature('er1').set('i0', 'icorr');
model.physics('tcd').feature('es1').feature('er1').set('Aa', 'ba');
model.physics('tcd').feature('es1').feature('er1').label('Electrode Reaction: Anodic Reaction');
model.physics('tcd').feature('es1').create('er2', 'ElectrodeReaction', 0);
model.physics('tcd').feature('es1').feature('er2').label('Electrode Reaction: Oxygen reduction cathodic reaction');
model.physics('tcd').feature('es1').feature('er2').set('nm', 4);
model.physics('tcd').feature('es1').feature('er2').setIndex('Vi0', -1, 0);
model.physics('tcd').feature('es1').feature('er2').set('Eeq_mat', 'userdef');
model.physics('tcd').feature('es1').feature('er2').set('Eeq', 'Ecorr');
model.physics('tcd').feature('es1').feature('er2').set('ElectrodeKinetics', 'CathodicTafelEquation');
model.physics('tcd').feature('es1').feature('er2').set('i0', 'icorr*cO2/ c_O2_sat');
model.physics('tcd').feature('es1').feature('er2').set('Ac', 'bc');
model.physics('tcd').feature('es1').create('er3', 'ElectrodeReaction', 0);
model.physics('tcd').feature('es1').feature('er3').label('Electrode Reaction: Hydrogen evolution cathodic reaction');
model.physics('tcd').feature('es1').feature('er3').set('Eeq_mat', 'userdef');
model.physics('tcd').feature('es1').feature('er3').set('Eeq', 'E_H2');
model.physics('tcd').feature('es1').feature('er3').set('ElectrodeKinetics', 'CathodicTafelEquation');
model.physics('tcd').feature('es1').feature('er3').set('i0', 'i0_H2');
model.physics('tcd').feature('es1').feature('er3').set('Ac', 'b_H2');
model.physics('tcd').feature('es1').create('dlc1', 'DoubleLayerCapacitance', 0);
model.physics('tcd').feature('es1').feature('dlc1').set('Cdl', 'C');
model.physics('ge').feature('ge1').setIndex('name', 'E', 0, 0);
model.physics('ge').feature('ge1').setIndex('equation', 'E_app-tcd.itotavg_es1*Rs-E', 0, 0);
model.physics('ge').feature('ge1').setIndex('initialValueU', 'E0', 0, 0);
model.physics('ge').feature('ge1').setIndex('description', 'Electric potential', 0, 0);
model.physics('ge').feature('ge1').set('CustomDependentVariableUnit', '1');
model.physics('ge').feature('ge1').set('DependentVariableQuantity', 'none');
model.physics('ge').feature('ge1').setIndex('CustomDependentVariableUnit', 'V', 0, 0);
model.physics('ge').feature('ge1').set('CustomSourceTermUnit', '1');
model.physics('ge').feature('ge1').set('SourceTermQuantity', 'none');
model.physics('ge').feature('ge1').setIndex('CustomSourceTermUnit', 'V', 0, 0);

model.study('std1').setGenPlots(false);
model.study('std1').label('Study : AC Effect');
model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'Ecorr', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'V', 0);
model.study('std1').feature('param').setIndex('pname', 'Ecorr', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'V', 0);
model.study('std1').feature('param').setIndex('pname', 'E_DC', 0);
model.study('std1').feature('param').setIndex('plistarr', '-0.74[V] -0.67[V] -0.6[V] -0.4[V]', 0);
model.study('std1').feature('param').setIndex('punit', 'V', 0);
model.study('std1').feature('param').setIndex('pname', 'Ecorr', 1);
model.study('std1').feature('param').setIndex('plistarr', '', 1);
model.study('std1').feature('param').setIndex('punit', 'V', 1);
model.study('std1').feature('param').setIndex('pname', 'Ecorr', 1);
model.study('std1').feature('param').setIndex('plistarr', '', 1);
model.study('std1').feature('param').setIndex('punit', 'V', 1);
model.study('std1').feature('param').setIndex('pname', 'C', 1);
model.study('std1').feature('param').setIndex('plistarr', '35[F/m^2] 2.61[F/m^2] 2.57[F/m^2] 3.09[F/m^2]', 1);
model.study('std1').feature('param').setIndex('punit', 'F/m^2', 1);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 1.0E-4);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'E_DC' 'C'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'-0.74[V] -0.67[V] -0.6[V] -0.4[V]' '35[F/m^2] 2.61[F/m^2] 2.57[F/m^2] 3.09[F/m^2]'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'V' 'F/m^2'});
model.sol('sol1').feature('s1').feature('p1').set('sweeptype', 'sparse');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'Default');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'param');
model.sol('sol1').feature('s1').set('control', 'stat');
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').label('Direct (Merged)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('Algebraic Multigrid (tcd)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').create('i2', 'Iterative');
model.sol('sol1').feature('s1').feature('i2').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i2').label('Geometric Multigrid (tcd)');
model.sol('sol1').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;
model.sol('sol1').copySolution('sol2');
model.sol('sol2').label('Solution 1 - No AC');

model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').set('tlist', 'range(0,tf/10,tf)');

model.sol('sol1').study('std1');

model.study('std1').feature('time').set('notsolnum', 'auto');
model.study('std1').feature('time').set('notsolvertype', 'solnum');
model.study('std1').feature('time').set('notsolnumhide', 'off');
model.study('std1').feature('time').set('notstudyhide', 'off');
model.study('std1').feature('time').set('notsolhide', 'on');
model.study('std1').feature('time').set('solnum', 'auto');
model.study('std1').feature('time').set('solvertype', 'solnum');
model.study('std1').feature('time').set('solnumhide', 'off');
model.study('std1').feature('time').set('initstudyhide', 'off');
model.study('std1').feature('time').set('initsolhide', 'on');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 1.0E-4);
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').label('Direct (Merged)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('Algebraic Multigrid (tcd)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').create('i2', 'Iterative');
model.sol('sol1').feature('s1').feature('i2').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i2').label('Geometric Multigrid (tcd)');
model.sol('sol1').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'time');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('initsoluse', 'sol3');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,tf/10,tf)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('tout', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('eventout', true);
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'const');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 1);
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').label('Direct (Merged)');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i1').label('Algebraic Multigrid (tcd)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('compactaggregation', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').create('i2', 'Iterative');
model.sol('sol1').feature('t1').feature('i2').set('maxlinit', 1000);
model.sol('sol1').feature('t1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i2').label('Geometric Multigrid (tcd)');
model.sol('sol1').feature('t1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'const');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 1);
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std1');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'E_DC' 'C'});
model.batch('p1').set('plistarr', {'-0.74[V] -0.67[V] -0.6[V] -0.4[V]' '35[F/m^2] 2.61[F/m^2] 2.57[F/m^2] 3.09[F/m^2]'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol.create('sol4');
model.sol('sol4').study('std1');
model.sol('sol4').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol4');
model.batch('p1').run('compute');

model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').run;
model.result('pg1').label('Effect of AC');
model.result('pg1').set('data', 'none');
model.result('pg1').set('titletype', 'manual');
model.result('pg1').set('title', 'Anodic current density versus applied DC potential');
model.result('pg1').set('ylabelactive', true);
model.result('pg1').set('ylabel', 'Anodic Current density (A/m<sup>2</sup>)');
model.result('pg1').set('ylog', true);
model.result('pg1').set('legendpos', 'upperleft');
model.result('pg1').create('glob1', 'Global');
model.result('pg1').feature('glob1').set('markerpos', 'datapoints');
model.result('pg1').feature('glob1').set('linewidth', 'preference');
model.result('pg1').feature('glob1').set('data', 'dset2');
model.result('pg1').feature('glob1').setIndex('expr', 'ia', 0);
model.result('pg1').feature('glob1').setIndex('unit', 'A/m^2', 0);
model.result('pg1').feature('glob1').setIndex('descr', 'Anodic current density', 0);
model.result('pg1').feature('glob1').set('xdata', 'expr');
model.result('pg1').feature('glob1').set('xdataexpr', 'E_DC');
model.result('pg1').feature('glob1').set('legendmethod', 'manual');
model.result('pg1').feature('glob1').setIndex('legends', 'No AC', 0);
model.result('pg1').run;
model.result('pg1').create('glob2', 'Global');
model.result('pg1').feature('glob2').set('markerpos', 'datapoints');
model.result('pg1').feature('glob2').set('linewidth', 'preference');
model.result('pg1').feature('glob2').set('data', 'dset4');
model.result('pg1').feature('glob2').setIndex('looplevelinput', 'last', 0);
model.result('pg1').feature('glob2').setIndex('expr', 'timeint(tf-1/f,tf,ia)/(1/f)', 0);
model.result('pg1').feature('glob2').setIndex('unit', 'A/m^2', 0);
model.result('pg1').feature('glob2').setIndex('descr', 'Time averaged anodic current density', 0);
model.result('pg1').feature('glob2').set('xdatasolnumtype', 'outer');
model.result('pg1').feature('glob2').set('xdata', 'expr');
model.result('pg1').feature('glob2').set('xdataexpr', 'E_DC');
model.result('pg1').feature('glob2').set('legendmethod', 'manual');
model.result('pg1').feature('glob2').setIndex('legends', 'AC', 0);
model.result('pg1').run;

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/tcd', true);
model.study('std2').feature('stat').setSolveFor('/physics/ge', true);
model.study('std2').label('Study : Frequency Effect');
model.study('std2').setGenPlots(false);
model.study('std2').create('time', 'Transient');
model.study('std2').create('param', 'Parametric');
model.study('std2').feature('param').setIndex('pname', 'Ecorr', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', 'V', 0);
model.study('std2').feature('param').setIndex('pname', 'Ecorr', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', 'V', 0);
model.study('std2').feature('param').setIndex('pname', 'f', 0);
model.study('std2').feature('param').setIndex('plistarr', '60[Hz] 0.01[Hz]', 0);
model.study('std2').feature('param').setIndex('punit', 'Hz', 0);
model.study('std2').feature('time').set('tlist', 'range(0,tf/10,tf)');

model.sol.create('sol9');
model.sol('sol9').study('std2');
model.sol('sol9').create('st1', 'StudyStep');
model.sol('sol9').feature('st1').set('study', 'std2');
model.sol('sol9').feature('st1').set('studystep', 'stat');
model.sol('sol9').create('v1', 'Variables');
model.sol('sol9').feature('v1').set('control', 'stat');
model.sol('sol9').create('s1', 'Stationary');
model.sol('sol9').feature('s1').set('stol', 1.0E-4);
model.sol('sol9').feature('s1').create('seDef', 'Segregated');
model.sol('sol9').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol9').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol9').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol9').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol9').feature('s1').create('d1', 'Direct');
model.sol('sol9').feature('s1').feature('d1').label('Direct (Merged)');
model.sol('sol9').feature('s1').create('i1', 'Iterative');
model.sol('sol9').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol9').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol9').feature('s1').feature('i1').label('Algebraic Multigrid (tcd)');
model.sol('sol9').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol9').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol9').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol9').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol9').feature('s1').feature('i1').feature('mg1').set('compactaggregation', true);
model.sol('sol9').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol9').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol9').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 1);
model.sol('sol9').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol9').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol9').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol9').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol9').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol9').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol9').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol9').feature('s1').create('i2', 'Iterative');
model.sol('sol9').feature('s1').feature('i2').set('maxlinit', 1000);
model.sol('sol9').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol9').feature('s1').feature('i2').label('Geometric Multigrid (tcd)');
model.sol('sol9').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol9').feature('s1').feature('i2').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol9').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol9').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('iter', 1);
model.sol('sol9').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol9').feature('s1').feature('i2').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol9').feature('s1').feature('i2').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol9').feature('s1').feature('i2').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol9').feature('s1').feature('i2').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol9').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol9').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol9').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol9').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol9').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol9').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol9').feature('s1').feature.remove('fcDef');
model.sol('sol9').feature('s1').feature.remove('seDef');
model.sol('sol9').create('su1', 'StoreSolution');
model.sol('sol9').create('st2', 'StudyStep');
model.sol('sol9').feature('st2').set('study', 'std2');
model.sol('sol9').feature('st2').set('studystep', 'time');
model.sol('sol9').create('v2', 'Variables');
model.sol('sol9').feature('v2').set('initmethod', 'sol');
model.sol('sol9').feature('v2').set('initsol', 'sol9');
model.sol('sol9').feature('v2').set('initsoluse', 'sol10');
model.sol('sol9').feature('v2').set('notsolmethod', 'sol');
model.sol('sol9').feature('v2').set('notsol', 'sol9');
model.sol('sol9').feature('v2').set('notsoluse', 'sol10');
model.sol('sol9').feature('v2').set('control', 'time');
model.sol('sol9').create('t1', 'Time');
model.sol('sol9').feature('t1').set('tlist', 'range(0,tf/10,tf)');
model.sol('sol9').feature('t1').set('plot', 'off');
model.sol('sol9').feature('t1').set('plotgroup', 'pg1');
model.sol('sol9').feature('t1').set('plotfreq', 'tout');
model.sol('sol9').feature('t1').set('probesel', 'all');
model.sol('sol9').feature('t1').set('probes', {});
model.sol('sol9').feature('t1').set('probefreq', 'tsteps');
model.sol('sol9').feature('t1').set('tout', 'tsteps');
model.sol('sol9').feature('t1').set('rtol', 0.001);
model.sol('sol9').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol9').feature('t1').set('eventout', true);
model.sol('sol9').feature('t1').set('reacf', true);
model.sol('sol9').feature('t1').set('storeudot', true);
model.sol('sol9').feature('t1').set('endtimeinterpolation', true);
model.sol('sol9').feature('t1').set('maxorder', 2);
model.sol('sol9').feature('t1').set('control', 'time');
model.sol('sol9').feature('t1').create('seDef', 'Segregated');
model.sol('sol9').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol9').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol9').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol9').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol9').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol9').feature('t1').feature('fc1').set('dtech', 'const');
model.sol('sol9').feature('t1').feature('fc1').set('damp', 1);
model.sol('sol9').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol9').feature('t1').create('d1', 'Direct');
model.sol('sol9').feature('t1').feature('d1').label('Direct (Merged)');
model.sol('sol9').feature('t1').create('i1', 'Iterative');
model.sol('sol9').feature('t1').feature('i1').set('maxlinit', 1000);
model.sol('sol9').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol9').feature('t1').feature('i1').label('Algebraic Multigrid (tcd)');
model.sol('sol9').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol9').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol9').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol9').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol9').feature('t1').feature('i1').feature('mg1').set('compactaggregation', true);
model.sol('sol9').feature('t1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol9').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol9').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 1);
model.sol('sol9').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol9').feature('t1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol9').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol9').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol9').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol9').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol9').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol9').feature('t1').create('i2', 'Iterative');
model.sol('sol9').feature('t1').feature('i2').set('maxlinit', 1000);
model.sol('sol9').feature('t1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol9').feature('t1').feature('i2').label('Geometric Multigrid (tcd)');
model.sol('sol9').feature('t1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol9').feature('t1').feature('i2').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol9').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol9').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('iter', 1);
model.sol('sol9').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol9').feature('t1').feature('i2').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol9').feature('t1').feature('i2').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol9').feature('t1').feature('i2').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol9').feature('t1').feature('i2').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol9').feature('t1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol9').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol9').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol9').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol9').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol9').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol9').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol9').feature('t1').feature('fc1').set('dtech', 'const');
model.sol('sol9').feature('t1').feature('fc1').set('damp', 1);
model.sol('sol9').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol9').feature('t1').feature.remove('fcDef');
model.sol('sol9').feature('t1').feature.remove('seDef');
model.sol('sol9').attach('std2');

model.batch.create('p2', 'Parametric');
model.batch('p2').study('std2');
model.batch('p2').create('so1', 'Solutionseq');
model.batch('p2').feature('so1').set('seq', 'sol9');
model.batch('p2').feature('so1').set('store', 'on');
model.batch('p2').feature('so1').set('clear', 'on');
model.batch('p2').feature('so1').set('psol', 'none');
model.batch('p2').set('pname', {'f'});
model.batch('p2').set('plistarr', {'60[Hz] 0.01[Hz]'});
model.batch('p2').set('sweeptype', 'sparse');
model.batch('p2').set('probesel', 'all');
model.batch('p2').set('probes', {});
model.batch('p2').set('plot', 'off');
model.batch('p2').set('err', 'on');
model.batch('p2').attach('std2');
model.batch('p2').set('control', 'param');

model.sol.create('sol11');
model.sol('sol11').study('std2');
model.sol('sol11').label('Parametric Solutions 2');

model.batch('p2').feature('so1').set('psol', 'sol11');
model.batch('p2').run('compute');

model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').run;
model.result('pg2').label('Effect of AC Frequency');
model.result('pg2').set('data', 'dset7');
model.result('pg2').setIndex('looplevelinput', 'manual', 1);
model.result('pg2').setIndex('looplevel', [1], 1);
model.result('pg2').set('titletype', 'manual');
model.result('pg2').set('title', 'Current Density Versus Time');
model.result('pg2').set('ylabelactive', true);
model.result('pg2').set('ylabel', 'Current density (A/m<sup>2</sup>)');
model.result('pg2').create('ptgr1', 'PointGraph');
model.result('pg2').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg2').feature('ptgr1').set('linewidth', 'preference');
model.result('pg2').feature('ptgr1').label('Point Graph: Anodic Current Density');
model.result('pg2').feature('ptgr1').selection.set([1]);
model.result('pg2').feature('ptgr1').set('expr', 'tcd.iloc_er1');
model.result('pg2').feature('ptgr1').set('descr', 'Local current density');
model.result('pg2').feature('ptgr1').set('legend', true);
model.result('pg2').feature('ptgr1').set('legendmethod', 'manual');
model.result('pg2').feature('ptgr1').setIndex('legends', 'Anodic Current Density', 0);
model.result('pg2').feature.duplicate('ptgr2', 'ptgr1');
model.result('pg2').run;
model.result('pg2').feature('ptgr2').label('Point Graph: Cathodic Current Density');
model.result('pg2').feature('ptgr2').set('expr', 'tcd.iloc_er2+tcd.iloc_er3');
model.result('pg2').feature('ptgr2').setIndex('legends', 'Cathodic Current Density', 0);
model.result('pg2').feature.duplicate('ptgr3', 'ptgr2');
model.result('pg2').run;
model.result('pg2').feature('ptgr3').set('expr', 'tcd.idl');
model.result('pg2').feature('ptgr3').label('Point Graph: Double Layer Current Density');
model.result('pg2').feature('ptgr3').setIndex('legends', 'Double Layer Current Density', 0);
model.result('pg2').feature.duplicate('ptgr4', 'ptgr3');
model.result('pg2').run;
model.result('pg2').feature('ptgr4').set('expr', 'tcd.itot');
model.result('pg2').feature('ptgr4').set('descr', 'Total interface current density');
model.result('pg2').feature('ptgr4').label('Point Graph: Total Current Density');
model.result('pg2').feature('ptgr4').setIndex('legends', 'Total Current Density', 0);
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').setIndex('looplevel', [2], 1);
model.result('pg2').run;

model.title('Alternating Current-Induced Corrosion');

model.description('This model first evaluates the effect of a direct-current (DC) applied potential on corrosion using a stationary analysis and then evaluates the effect of AC on corrosion using a transient analysis. The model is subsequently extended to investigate the effect of frequency on the AC corrosion rate, bringing out the double-layer capacitance contribution particularly at higher frequencies.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;
model.sol('sol8').clearSolutionData;
model.sol('sol9').clearSolutionData;
model.sol('sol10').clearSolutionData;
model.sol('sol11').clearSolutionData;
model.sol('sol12').clearSolutionData;
model.sol('sol13').clearSolutionData;

model.label('ac_corrosion.mph');

model.modelNode.label('Components');

out = model;
