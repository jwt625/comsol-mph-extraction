function out = model
%
% surface_chemistry_tutorial.m
%
% Model exported on May 26 2025, 21:31 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Plasma_Module/Chemical_Vapor_Deposition');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('hs', 'HeavySpeciesTransport', 'geom1');
model.physics('hs').model('comp1');

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/hs', true);

model.geom('geom1').create('sq1', 'Square');
model.geom('geom1').feature('sq1').set('size', 0.1);
model.geom('geom1').run('sq1');
model.geom('geom1').create('pol1', 'Polygon');
model.geom('geom1').feature('pol1').set('source', 'table');
model.geom('geom1').feature('pol1').setIndex('table', 0.03, 0, 0);
model.geom('geom1').feature('pol1').setIndex('table', 0, 0, 1);
model.geom('geom1').feature('pol1').setIndex('table', 0.07, 1, 0);
model.geom('geom1').feature('pol1').setIndex('table', 0, 1, 1);

model.variable.create('var1');
model.variable('var1').model('comp1');

model.geom('geom1').run;

% To import content from file, use:
% model.variable('var1').loadFile('FILENAME');
model.variable('var1').set('mass_domain', 'at(0,intop1(hs.rho))-intop1(hs.rho)', 'Mass change in the domain');
model.variable('var1').set('mass_bulk', 'intop2(Hk_Si_bulk*2329[kg/m^3])', 'Total mass of bulk species');
model.variable('var1').set('mass_Si_surf', 'intop2(Zk_Si_surf*hs.Gammat/hs.sigmak_Si_surf*0.028[kg/mol])', 'Total mass of Si surface species');
model.variable('var1').set('mass_SiH_surf', 'intop2(Zk_SiH_surf*hs.Gammat/hs.sigmak_SiH_surf*0.029[kg/mol])', 'Total mass of SiH surface species');
model.variable('var1').set('dmass_Si_surf', 'mass_Si_surf-at(0,mass_Si_surf)', 'Total mass minus initial mass of Si surface species');
model.variable('var1').set('dmass_SiH_surf', 'mass_SiH_surf-at(0,mass_SiH_surf)', 'Total mass minus initial mass of SiH surface species');
model.variable('var1').set('mass_surf', 'dmass_Si_surf+dmass_SiH_surf', 'Total mass minus initial mass of all surface species');

model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl('intop1').set('axisym', true);
model.cpl('intop1').selection.set([1]);
model.cpl.create('intop2', 'Integration', 'geom1');
model.cpl('intop2').set('axisym', true);
model.cpl('intop2').selection.geom('geom1', 1);
model.cpl('intop2').selection.set([4]);

model.physics('hs').prop('DiffusionModel').set('DiffusionModel', 'GlobalModel');
model.physics('hs').create('sr1', 'SurfaceReaction', 1);
model.physics('hs').feature('sr1').set('formula', 'SiH4+2Si(s)=>Si(b)+2SiH(s)+H2');
model.physics('hs').feature('sr1').selection.set([4]);
model.physics('hs').feature('sr1').set('gammaf', '2e-4');
model.physics('hs').create('sr2', 'SurfaceReaction', 1);
model.physics('hs').feature('sr2').set('formula', 'SiH(s)=>Si(s)+0.5H2');
model.physics('hs').feature('sr2').selection.set([4]);
model.physics('hs').feature('sr2').set('SpecifyReactionUsing', 'UseRate');
model.physics('hs').feature('sr2').set('ksf', 3);
model.physics('hs').feature('SiH4').set('FromMassConstraint', true);
model.physics('hs').feature('SiH4').set('PresetSpeciesData', 'SiH4');
model.physics('hs').feature('H2').set('PresetSpeciesData', 'H2');
model.physics('hs').feature('H2').set('x0', '1E-3');
model.physics('hs').feature('Si_surf').set('PresetSpeciesData', 'Si');
model.physics('hs').feature('Si_surf').set('Zk0', 0.995);
model.physics('hs').feature('Si_bulk').set('PresetSpeciesData', 'Si');
model.physics('hs').feature('SiH_surf').set('PresetSpeciesData', 'SiH');
model.physics('hs').feature('SiH_surf').set('Zk0', 0.005);
model.physics('hs').feature('cdm1').set('p0', 13.3);

model.study('std1').label('Global model');
model.study('std1').setGenPlots(false);
model.study('std1').setGenConv(false);
model.study('std1').feature('time').set('tlist', 'range(0,5,300)');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,5,300)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'manual');
model.sol('sol1').feature('t1').set('atolglobalmethod', 'unscaled');
model.sol('sol1').feature('t1').set('atolglobal', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'manual');
model.sol('sol1').feature('t1').set('eventtol', 0.01);
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('tstepsbdf', 'intermediate');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('estrat', 'exclude');
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('minorder', 1);
model.sol('sol1').feature('t1').set('initialstepbdfactive', true);
model.sol('sol1').feature('t1').set('initialstepbdf', '(1.0E-6)[s]');
model.sol('sol1').feature('t1').set('rescaleafterinitbw', false);
model.sol('sol1').feature('t1').set('bwinitstepfrac', '0.001');
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('aDef').set('complexfun', false);
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('t1').feature('aDef').set('matherr', false);
model.sol('sol1').feature('t1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('t1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 4);
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'const');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 1);
model.sol('sol1').feature('t1').feature('fc1').set('ratelimitactive', false);
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('t1').feature('fc1').set('ntermconst', 'tol');
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').set('ooc', 'auto');
model.sol('sol1').feature('t1').feature('d1').set('errorchk', 'auto');
model.sol('sol1').feature('t1').feature('d1').set('rhob', 1);
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 4);
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'const');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 1);
model.sol('sol1').feature('t1').feature('fc1').set('ratelimitactive', false);
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('t1').feature('fc1').set('ntermconst', 'tol');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').run;
model.result('pg1').label('Average Pressure Divided by Average Initial Pressure');
model.result('pg1').set('titletype', 'label');
model.result('pg1').set('legendpos', 'lowerright');
model.result('pg1').create('glob1', 'Global');
model.result('pg1').feature('glob1').set('markerpos', 'datapoints');
model.result('pg1').feature('glob1').set('linewidth', 'preference');
model.result('pg1').feature('glob1').label('Global model');
model.result('pg1').feature('glob1').set('data', 'dset1');
model.result('pg1').feature('glob1').setIndex('expr', 'hs.pA/at(0,hs.pA)', 0);
model.result('pg1').feature('glob1').setIndex('unit', 1, 0);
model.result('pg1').feature('glob1').setIndex('descr', '', 0);
model.result('pg1').feature('glob1').set('legendmethod', 'manual');
model.result('pg1').feature('glob1').setIndex('legends', 'Global model', 0);
model.result('pg1').run;
model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').run;
model.result('pg2').label('Density ratio');
model.result('pg2').set('titletype', 'label');
model.result('pg2').set('legendpos', 'lowerright');
model.result('pg2').create('glob1', 'Global');
model.result('pg2').feature('glob1').set('markerpos', 'datapoints');
model.result('pg2').feature('glob1').set('linewidth', 'preference');
model.result('pg2').feature('glob1').label('Global model');
model.result('pg2').feature('glob1').set('data', 'dset1');
model.result('pg2').feature('glob1').setIndex('expr', 'at(0,hs.rho)/hs.rho', 0);
model.result('pg2').feature('glob1').setIndex('unit', 1, 0);
model.result('pg2').feature('glob1').setIndex('descr', '', 0);
model.result('pg2').feature('glob1').set('legendmethod', 'manual');
model.result('pg2').feature('glob1').setIndex('legends', 'Global model', 0);
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('Total Reactor Mass');
model.result('pg3').set('titletype', 'label');
model.result('pg3').set('legendpos', 'lowerright');
model.result('pg3').create('glob1', 'Global');
model.result('pg3').feature('glob1').set('markerpos', 'datapoints');
model.result('pg3').feature('glob1').set('linewidth', 'preference');
model.result('pg3').feature('glob1').label('Global model');
model.result('pg3').feature('glob1').set('data', 'dset1');
model.result('pg3').feature('glob1').setIndex('expr', 'mass_domain', 0);
model.result('pg3').feature('glob1').setIndex('unit', 'kg/m', 0);
model.result('pg3').feature('glob1').setIndex('descr', 'Mass change in the domain', 0);
model.result('pg3').feature('glob1').setIndex('expr', 'mass_surf+mass_bulk', 1);
model.result('pg3').feature('glob1').setIndex('unit', 'kg/m', 1);
model.result('pg3').feature('glob1').setIndex('descr', '', 1);
model.result('pg3').feature('glob1').set('legendmethod', 'manual');
model.result('pg3').feature('glob1').setIndex('legends', 'mass_domain: Global model', 0);
model.result('pg3').feature('glob1').setIndex('legends', 'mass_surf+mass_bulk: Global model', 1);
model.result('pg3').run;
model.result.dataset.create('edg1', 'Edge2D');
model.result.dataset('edg1').selection.set([4]);
model.result.dataset.create('par1', 'Parametric1D');
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').run;
model.result('pg4').label('Parametric Extrusion 1D 1 - Global model');
model.result('pg4').set('data', 'par1');
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', 'Hk_Si_bulk');
model.result('pg4').feature('surf1').set('unit', [native2unicode(hex2dec({'00' 'c5'}), 'unicode') ]);
model.result('pg4').feature('surf1').create('hght1', 'Height');
model.result('pg4').run;

model.physics.create('spf', 'LaminarFlow', 'geom1');
model.physics('spf').model('comp1');

model.study('std1').feature('time').setSolveFor('/physics/spf', false);

model.physics.create('ht', 'HeatTransferInFluids', 'geom1');
model.physics('ht').model('comp1');

model.study('std1').feature('time').setSolveFor('/physics/ht', false);

model.physics('hs').prop('DiffusionModel').set('DiffusionModel', 'MixtureAveraged');
model.physics('hs').prop('TransportSettings').set('calcThermo', true);
model.physics('hs').prop('TransportSettings').set('Migration', false);
model.physics('hs').prop('TransportSettings').set('Convection', true);
model.physics('hs').feature('cdm1').set('T_src', 'root.comp1.T');
model.physics('hs').feature('cdm1').set('pA_src', 'root.comp1.spf.pA');
model.physics('hs').feature('cdm1').set('u_src', 'root.comp1.u');
model.physics('spf').prop('PhysicalModelProperty').set('Compressibility', 'CompressibleMALT03');
model.physics('spf').prop('PhysicalModelProperty').set('pref', '13.3[Pa]');
model.physics('spf').prop('ConsistentStabilization').set('CrosswindDiffusion', false);
model.physics('spf').prop('ShapeProperty').set('order_fluid', 2);
model.physics('spf').feature('fp1').set('rho_mat', 'root.comp1.hs.rho');
model.physics('spf').feature('fp1').set('mu_mat', 'root.comp1.hs.eta');
model.physics('spf').create('wallbc2', 'WallBC', 1);
model.physics('spf').feature('wallbc2').selection.set([4]);
model.physics('spf').feature('wallbc2').set('TranslationalVelocityOption', 'Manual');
model.physics('spf').feature('wallbc2').set('utr', {'0' 'hs.mfin/spf.rho' '0'});
model.physics('spf').feature('wallbc2').set('constraintOptions', 'nitscheConstraints');
model.physics('ht').feature('fluid1').set('u_src', 'root.comp1.u');
model.physics('ht').feature('fluid1').set('k_mat', 'root.comp1.hs.kxx');
model.physics('ht').feature('fluid1').set('fluidType', 'idealGas');
model.physics('ht').feature('fluid1').set('gasConstantType', 'numberAve');
model.physics('ht').feature('fluid1').set('molarmass_mat', 'root.comp1.hs.Mn');
model.physics('ht').feature('fluid1').set('heatcapacity_mat', 'root.comp1.hs.Cptot');
model.physics('ht').create('temp1', 'TemperatureBoundary', 1);
model.physics('ht').feature('temp1').set('T0', 300);
model.physics('ht').feature('temp1').selection.set([1 3 6]);
model.physics('ht').feature('init1').set('Tinit', 300);
model.physics('ht').create('bhs1', 'BoundaryHeatSource', 1);
model.physics('ht').feature('bhs1').selection.set([4]);
model.physics('ht').feature('bhs1').set('Qb_input_src', 'root.comp1.hs.Qst');

model.mesh('mesh1').create('size1', 'Size');
model.mesh('mesh1').feature('size1').selection.geom('geom1', 0);
model.mesh('mesh1').feature('size1').selection.set([3 4]);
model.mesh('mesh1').feature('size1').set('hauto', 1);
model.mesh('mesh1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('size1').set('hmax', '0.0002');
model.mesh('mesh1').create('edg1', 'Edge');
model.mesh('mesh1').feature('edg1').selection.set([4]);
model.mesh('mesh1').feature('edg1').create('size1', 'Size');
model.mesh('mesh1').feature('edg1').feature('size1').set('hauto', 1);
model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').run;

model.study.create('std2');
model.study('std2').create('time', 'Transient');
model.study('std2').feature('time').setSolveFor('/physics/hs', true);
model.study('std2').feature('time').setSolveFor('/physics/spf', true);
model.study('std2').feature('time').setSolveFor('/physics/ht', true);
model.study('std2').feature('time').set('tlist', 'range(0,5,300)');
model.study('std2').label('Space dependent model');

model.sol.create('sol2');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'time');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'time');
model.sol('sol2').create('t1', 'Time');
model.sol('sol2').feature('t1').set('tlist', 'range(0,5,300)');
model.sol('sol2').feature('t1').set('plot', 'off');
model.sol('sol2').feature('t1').set('plotgroup', 'pg1');
model.sol('sol2').feature('t1').set('plotfreq', 'tout');
model.sol('sol2').feature('t1').set('probesel', 'all');
model.sol('sol2').feature('t1').set('probes', {});
model.sol('sol2').feature('t1').set('probefreq', 'tsteps');
model.sol('sol2').feature('t1').set('rtol', 0.001);
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'manual');
model.sol('sol2').feature('t1').set('atolglobalmethod', 'unscaled');
model.sol('sol2').feature('t1').set('atolglobal', 0.001);
model.sol('sol2').feature('t1').set('atolglobalmethod', 'scaled');
model.sol('sol2').feature('t1').set('atolglobalfactor', 0.05);
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol2').feature('t1').set('atolmethod', {'comp1_hs_H2_W' 'global' 'comp1_hs_Si_bulk_Hk' 'global' 'comp1_hs_Si_surf_Zk' 'global' 'comp1_hs_SiH_surf_Zk' 'global' 'comp1_p' 'scaled'  ...
'comp1_T' 'global' 'comp1_u' 'global'});
model.sol('sol2').feature('t1').set('atol', {'comp1_hs_H2_W' '1e-3' 'comp1_hs_Si_bulk_Hk' '1e-3' 'comp1_hs_Si_surf_Zk' '1e-3' 'comp1_hs_SiH_surf_Zk' '1e-3' 'comp1_p' '1e-3'  ...
'comp1_T' '1e-3' 'comp1_u' '1e-3'});
model.sol('sol2').feature('t1').set('atolvaluemethod', {'comp1_hs_H2_W' 'factor' 'comp1_hs_Si_bulk_Hk' 'factor' 'comp1_hs_Si_surf_Zk' 'factor' 'comp1_hs_SiH_surf_Zk' 'factor' 'comp1_p' 'factor'  ...
'comp1_T' 'factor' 'comp1_u' 'factor'});
model.sol('sol2').feature('t1').set('atolfactor', {'comp1_hs_H2_W' '0.1' 'comp1_hs_Si_bulk_Hk' '0.1' 'comp1_hs_Si_surf_Zk' '0.1' 'comp1_hs_SiH_surf_Zk' '0.1' 'comp1_p' '1'  ...
'comp1_T' '0.1' 'comp1_u' '0.1'});
model.sol('sol2').feature('t1').set('eventtol', 0.01);
model.sol('sol2').feature('t1').set('reacf', true);
model.sol('sol2').feature('t1').set('storeudot', true);
model.sol('sol2').feature('t1').set('tstepsbdf', 'intermediate');
model.sol('sol2').feature('t1').set('endtimeinterpolation', true);
model.sol('sol2').feature('t1').set('estrat', 'exclude');
model.sol('sol2').feature('t1').set('rhoinf', 0.5);
model.sol('sol2').feature('t1').set('predictor', 'constant');
model.sol('sol2').feature('t1').set('maxorder', 2);
model.sol('sol2').feature('t1').set('minorder', 1);
model.sol('sol2').feature('t1').set('stabcntrl', true);
model.sol('sol2').feature('t1').set('initialstepbdfactive', true);
model.sol('sol2').feature('t1').set('initialstepbdf', '(1.0E-6)[s]');
model.sol('sol2').feature('t1').set('rescaleafterinitbw', false);
model.sol('sol2').feature('t1').set('bwinitstepfrac', '0.001');
model.sol('sol2').feature('t1').set('control', 'time');
model.sol('sol2').feature('t1').feature('aDef').set('complexfun', false);
model.sol('sol2').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('t1').feature('aDef').set('matherr', false);
model.sol('sol2').feature('t1').feature('aDef').set('blocksizeactive', false);
model.sol('sol2').feature('t1').create('seDef', 'Segregated');
model.sol('sol2').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol2').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol2').feature('t1').feature('fc1').set('dtech', 'const');
model.sol('sol2').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('ratelimitactive', false);
model.sol('sol2').feature('t1').feature('fc1').set('ntolfact', 0.5);
model.sol('sol2').feature('t1').feature('fc1').set('ntermconst', 'tol');
model.sol('sol2').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol2').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol2').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol2').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol2').feature('t1').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('d1').set('ooc', 'auto');
model.sol('sol2').feature('t1').feature('d1').set('errorchk', 'auto');
model.sol('sol2').feature('t1').feature('d1').set('rhob', 1);
model.sol('sol2').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t1').create('i1', 'Iterative');
model.sol('sol2').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol2').feature('t1').feature('i1').set('rhob', 20);
model.sol('sol2').feature('t1').feature('i1').set('maxlinit', 100);
model.sol('sol2').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol2').feature('t1').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol2').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t1').create('i2', 'Iterative');
model.sol('sol2').feature('t1').feature('i2').set('linsolver', 'gmres');
model.sol('sol2').feature('t1').feature('i2').set('prefuntype', 'left');
model.sol('sol2').feature('t1').feature('i2').set('itrestart', 50);
model.sol('sol2').feature('t1').feature('i2').set('rhob', 20);
model.sol('sol2').feature('t1').feature('i2').set('maxlinit', 10000);
model.sol('sol2').feature('t1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol2').feature('t1').feature('i2').label('AMG, heat transfer variables (ht)');
model.sol('sol2').feature('t1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol2').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol2').feature('t1').feature('fc1').set('dtech', 'const');
model.sol('sol2').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('ratelimitactive', false);
model.sol('sol2').feature('t1').feature('fc1').set('ntolfact', 0.5);
model.sol('sol2').feature('t1').feature('fc1').set('ntermconst', 'tol');
model.sol('sol2').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol2').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol2').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol2').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol2').feature('t1').feature.remove('fcDef');
model.sol('sol2').feature('t1').feature.remove('seDef');
model.sol('sol2').attach('std2');
model.sol('sol2').feature('t1').set('atolglobalmethod', 'unscaled');
model.sol('sol2').feature('t1').set('initialstepbdf', 0.001);
model.sol('sol2').runAll;

model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').set('data', 'dset2');
model.result('pg5').setIndex('looplevel', 61, 0);
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', {'hs.x_wSiH4'});
model.result('pg5').feature('surf1').set('colortable', 'Prism');
model.result('pg5').label('Mole Fraction (hs)');
model.result.dataset('dset2').set('geom', 'geom1');
model.result.create('pg6', 'PlotGroup2D');
model.result('pg6').label('Velocity (spf)');
model.result('pg6').set('data', 'dset2');
model.result('pg6').setIndex('looplevel', 61, 0);
model.result('pg6').set('frametype', 'spatial');
model.result('pg6').set('data', 'dset2');
model.result('pg6').setIndex('looplevel', 61, 0);
model.result('pg6').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg1');
model.result('pg6').feature.create('surf1', 'Surface');
model.result('pg6').feature('surf1').label('Surface');
model.result('pg6').feature('surf1').set('showsolutionparams', 'on');
model.result('pg6').feature('surf1').set('expr', 'spf.U');
model.result('pg6').feature('surf1').set('smooth', 'internal');
model.result('pg6').feature('surf1').set('showsolutionparams', 'on');
model.result('pg6').feature('surf1').set('data', 'parent');
model.result.create('pg7', 'PlotGroup2D');
model.result('pg7').label('Pressure (spf)');
model.result('pg7').set('data', 'dset2');
model.result('pg7').setIndex('looplevel', 61, 0);
model.result('pg7').set('frametype', 'spatial');
model.result('pg7').set('data', 'dset2');
model.result('pg7').setIndex('looplevel', 61, 0);
model.result('pg7').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg2');
model.result('pg7').feature.create('con1', 'Contour');
model.result('pg7').feature('con1').label('Contour');
model.result('pg7').feature('con1').set('showsolutionparams', 'on');
model.result('pg7').feature('con1').set('expr', 'p');
model.result('pg7').feature('con1').set('number', 40);
model.result('pg7').feature('con1').set('levelrounding', false);
model.result('pg7').feature('con1').set('smooth', 'internal');
model.result('pg7').feature('con1').set('showsolutionparams', 'on');
model.result('pg7').feature('con1').set('data', 'parent');
model.result.create('pg8', 'PlotGroup2D');
model.result('pg8').label('Temperature (ht)');
model.result('pg8').set('data', 'dset2');
model.result('pg8').setIndex('looplevel', 61, 0);
model.result('pg8').set('data', 'dset2');
model.result('pg8').setIndex('looplevel', 61, 0);
model.result('pg8').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pg2');
model.result('pg8').feature.create('surf1', 'Surface');
model.result('pg8').feature('surf1').set('showsolutionparams', 'on');
model.result('pg8').feature('surf1').set('solutionparams', 'parent');
model.result('pg8').feature('surf1').set('expr', 'T');
model.result('pg8').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg8').feature('surf1').set('showsolutionparams', 'on');
model.result('pg8').feature('surf1').set('data', 'parent');
model.result('pg5').run;
model.result('pg6').run;
model.result('pg6').setIndex('looplevel', 2, 0);
model.result('pg6').run;
model.result('pg6').feature('surf1').set('expr', 'v');
model.result('pg6').run;
model.result('pg8').run;
model.result('pg8').setIndex('looplevel', 2, 0);
model.result('pg8').run;
model.result('pg8').feature('surf1').set('expr', 'T-300[K]');
model.result('pg8').run;
model.result.create('pg9', 'PlotGroup2D');
model.result('pg9').run;
model.result('pg9').label('Diffusion Velocity, Hydrogen');
model.result('pg9').setIndex('looplevel', 2, 0);
model.result('pg9').set('data', 'dset2');
model.result('pg9').create('surf1', 'Surface');
model.result('pg9').feature('surf1').set('expr', 'hs.Vdy_wH2');
model.result('pg9').run;
model.result('pg1').run;
model.result('pg1').set('ylabelactive', true);
model.result('pg1').set('ylabel', 'Average pressure divided by average initial pressure');
model.result('pg1').create('glob2', 'Global');
model.result('pg1').feature('glob2').set('markerpos', 'datapoints');
model.result('pg1').feature('glob2').set('linewidth', 'preference');
model.result('pg1').feature('glob2').label('Space dependent model');
model.result('pg1').feature('glob2').set('data', 'dset2');
model.result('pg1').feature('glob2').setIndex('expr', 'intop1(spf.pA)/at(0,intop1(spf.pA))', 0);
model.result('pg1').feature('glob2').setIndex('unit', 1, 0);
model.result('pg1').feature('glob2').setIndex('descr', '', 0);
model.result('pg1').feature('glob2').set('legendmethod', 'manual');
model.result('pg1').feature('glob2').setIndex('legends', 'Space dependent model', 0);
model.result('pg1').run;
model.result('pg2').run;
model.result('pg2').set('ylabelactive', true);
model.result('pg2').set('ylabel', 'Initial mass divided by the mass in the reactor');
model.result('pg2').create('glob2', 'Global');
model.result('pg2').feature('glob2').set('markerpos', 'datapoints');
model.result('pg2').feature('glob2').set('linewidth', 'preference');
model.result('pg2').feature('glob2').label('Space dependent model');
model.result('pg2').feature('glob2').set('data', 'dset2');
model.result('pg2').feature('glob2').setIndex('expr', 'at(0,intop1(hs.rho))/intop1(hs.rho)', 0);
model.result('pg2').feature('glob2').setIndex('unit', 1, 0);
model.result('pg2').feature('glob2').setIndex('descr', '', 0);
model.result('pg2').feature('glob2').set('legendmethod', 'manual');
model.result('pg2').feature('glob2').setIndex('legends', 'Space dependent model', 0);
model.result('pg2').run;
model.result('pg3').run;
model.result('pg3').set('ylabelactive', true);
model.result('pg3').set('ylabel', 'Mass density (kg/m)');
model.result('pg3').create('glob2', 'Global');
model.result('pg3').feature('glob2').set('markerpos', 'datapoints');
model.result('pg3').feature('glob2').set('linewidth', 'preference');
model.result('pg3').feature('glob2').label('Space dependent model');
model.result('pg3').feature('glob2').set('data', 'dset2');
model.result('pg3').feature('glob2').setIndex('expr', 'mass_domain', 0);
model.result('pg3').feature('glob2').setIndex('unit', 'kg/m', 0);
model.result('pg3').feature('glob2').setIndex('descr', 'Mass change in the domain', 0);
model.result('pg3').feature('glob2').setIndex('expr', 'mass_surf+mass_bulk', 1);
model.result('pg3').feature('glob2').setIndex('unit', 'kg/m', 1);
model.result('pg3').feature('glob2').setIndex('descr', '', 1);
model.result('pg3').feature('glob2').set('legendmethod', 'manual');
model.result('pg3').feature('glob2').setIndex('legends', 'mass_domain: Space dependent model', 0);
model.result('pg3').feature('glob2').setIndex('legends', 'mass_surf+mass_bulk: Space dependent model', 1);
model.result('pg3').run;
model.result.dataset.create('edg2', 'Edge2D');
model.result.dataset('edg2').set('data', 'dset2');
model.result.dataset('edg2').selection.set([4]);
model.result.dataset.create('par2', 'Parametric1D');
model.result.dataset('par2').set('data', 'edg2');
model.result('pg4').run;
model.result.duplicate('pg10', 'pg4');
model.result('pg10').run;
model.result('pg10').label('Parametric Extrusion 1D 1 - Space dependent model');
model.result('pg10').set('data', 'par2');
model.result('pg10').run;

model.title('Surface Chemistry Tutorial Using the Plasma Module');

model.description(['Surface chemistry is often an overlooked aspect of reacting flow modeling. This tutorial model shows how surface reactions and species can be added to study processes like chemical vapor deposition (CVD). The tutorial then models silicon growth on a wafer.' newline  newline 'Initially, the example uses a global model to investigate a broad region of parameters with complex chemistry. Then, a space-dependent model is set up and run. Careful attention is paid to the overall mass balance in the system while the difference between the mass-averaged velocity and diffusion velocity is explored. The model demonstrates that the total mass and molar concentration in the system is conserved. Finally, the height of the deposited silicon is studied as a function of time.']);

model.label('surface_chemistry_tutorial.mph');

model.modelNode.label('Components');

out = model;
