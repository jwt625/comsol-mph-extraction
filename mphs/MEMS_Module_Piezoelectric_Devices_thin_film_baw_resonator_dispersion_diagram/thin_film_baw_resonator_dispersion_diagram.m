function out = model
%
% thin_film_baw_resonator_dispersion_diagram.m
%
% Model exported on May 26 2025, 21:30 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/MEMS_Module/Piezoelectric_Devices');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');
model.physics('solid').create('pzm1', 'PiezoelectricMaterialModel');
model.physics('solid').feature('pzm1').selection.all;
model.physics.create('es', 'Electrostatics', 'geom1');
model.physics('es').model('comp1');
model.physics('es').create('ccnp1', 'ChargeConservationPiezo');
model.physics('es').feature('ccnp1').selection.all;

model.multiphysics.create('pze1', 'PiezoelectricEffect', 'geom1', 2);
model.multiphysics('pze1').set('Solid_physics', 'solid');
model.multiphysics('pze1').set('Electrostatics_physics', 'es');

model.study.create('std1');
model.study('std1').create('eig', 'Eigenfrequency');
model.study('std1').feature('eig').set('shift', '1[Hz]');
model.study('std1').feature('eig').set('conrad', '1');
model.study('std1').feature('eig').set('linpsolnum', 'auto');
model.study('std1').feature('eig').set('solnum', 'auto');
model.study('std1').feature('eig').set('notsolnum', 'auto');
model.study('std1').feature('eig').set('outputmap', {});
model.study('std1').feature('eig').set('ngenAUX', '1');
model.study('std1').feature('eig').set('goalngenAUX', '1');
model.study('std1').feature('eig').set('ngenAUX', '1');
model.study('std1').feature('eig').set('goalngenAUX', '1');
model.study('std1').feature('eig').setSolveFor('/physics/solid', true);
model.study('std1').feature('eig').setSolveFor('/physics/es', true);
model.study('std1').feature('eig').setSolveFor('/multiphysics/pze1', true);

model.common.create('mpf1', 'ParticipationFactors', 'comp1');

model.geom('geom1').lengthUnit([native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']);
model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', [1000 16.7]);
model.geom('geom1').feature('r1').set('base', 'center');
model.geom('geom1').feature('r1').setIndex('layer', 50, 0);
model.geom('geom1').feature('r1').set('layerleft', true);
model.geom('geom1').feature('r1').set('layerright', true);
model.geom('geom1').feature('r1').set('layerbottom', false);
model.geom('geom1').run('r1');
model.geom('geom1').feature.duplicate('r2', 'r1');
model.geom('geom1').feature('r2').set('size', [1000 0.2]);
model.geom('geom1').feature('r2').set('pos', [0 -1.25]);
model.geom('geom1').run('r2');
model.geom('geom1').create('r3', 'Rectangle');
model.geom('geom1').feature('r3').set('size', [500 0.2]);
model.geom('geom1').feature('r3').set('base', 'center');
model.geom('geom1').feature('r3').set('pos', [0 8.45]);
model.geom('geom1').runPre('fin');

model.view('view1').axis.set('viewscaletype', 'automatic');

model.coordSystem.create('pml1', 'geom1', 'PML');

model.geom('geom1').run;

model.coordSystem('pml1').selection.set([1 2 3 8 9 10]);
model.coordSystem('pml1').set('PMLfactor', '5');
model.coordSystem('pml1').set('PMLgamma', '2');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Anisotropic', 'Anisotropic');
model.material('mat1').label('Si - Silicon (single-crystal, anisotropic)');
model.material('mat1').set('family', 'custom');
model.material('mat1').set('customspecular', [0.7843137254901961 1 1]);
model.material('mat1').set('customdiffuse', [0.6666666666666666 0.6666666666666666 0.7058823529411765]);
model.material('mat1').set('customambient', [0.6666666666666666 0.6666666666666666 0.7058823529411765]);
model.material('mat1').set('noise', true);
model.material('mat1').set('fresnel', 0.7);
model.material('mat1').set('metallic', 0);
model.material('mat1').set('pearl', 0);
model.material('mat1').set('diffusewrap', 0);
model.material('mat1').set('clearcoat', 0);
model.material('mat1').set('reflectance', 0);
model.material('mat1').propertyGroup('def').set('density', '2330[kg/m^3]');
model.material('mat1').propertyGroup('Anisotropic').set('D', {'166[GPa]' '64[GPa]' '64[GPa]' '0[GPa]' '0[GPa]' '0[GPa]' '64[GPa]' '166[GPa]' '64[GPa]' '0[GPa]'  ...
'0[GPa]' '0[GPa]' '64[GPa]' '64[GPa]' '166[GPa]' '0[GPa]' '0[GPa]' '0[GPa]' '0[GPa]' '0[GPa]'  ...
'0[GPa]' '80[GPa]' '0[GPa]' '0[GPa]' '0[GPa]' '0[GPa]' '0[GPa]' '0[GPa]' '80[GPa]' '0[GPa]'  ...
'0[GPa]' '0[GPa]' '0[GPa]' '0[GPa]' '0[GPa]' '80[GPa]'});
model.material('mat1').set('family', 'custom');
model.material('mat1').set('lighting', 'cooktorrance');
model.material('mat1').set('fresnel', 0.7);
model.material('mat1').set('roughness', 0.5);
model.material('mat1').set('anisotropy', 0);
model.material('mat1').set('flipanisotropy', false);
model.material('mat1').set('metallic', 0);
model.material('mat1').set('pearl', 0);
model.material('mat1').set('diffusewrap', 0);
model.material('mat1').set('clearcoat', 0);
model.material('mat1').set('reflectance', 0);
model.material('mat1').set('ambient', 'custom');
model.material('mat1').set('customambient', [0.6666666666666666 0.6666666666666666 0.7058823529411765]);
model.material('mat1').set('diffuse', 'custom');
model.material('mat1').set('customdiffuse', [0.6666666666666666 0.6666666666666666 0.7058823529411765]);
model.material('mat1').set('specular', 'custom');
model.material('mat1').set('customspecular', [0.7843137254901961 1 1]);
model.material('mat1').set('noisecolor', 'custom');
model.material('mat1').set('customnoisecolor', [0 0 0]);
model.material('mat1').set('noisescale', 0);
model.material('mat1').set('noise', 'off');
model.material('mat1').set('noisefreq', 1);
model.material('mat1').set('normalnoisebrush', '0');
model.material('mat1').set('normalnoisetype', '0');
model.material('mat1').set('alpha', 1);
model.material('mat1').set('anisotropyaxis', [0 0 1]);
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat2').label('Al - Aluminum');
model.material('mat2').set('family', 'aluminum');
model.material('mat2').propertyGroup('def').set('electricconductivity', {'35.5e6[S/m]' '0' '0' '0' '35.5e6[S/m]' '0' '0' '0' '35.5e6[S/m]'});
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'23.1e-6[1/K]' '0' '0' '0' '23.1e-6[1/K]' '0' '0' '0' '23.1e-6[1/K]'});
model.material('mat2').propertyGroup('def').set('heatcapacity', '904[J/(kg*K)]');
model.material('mat2').propertyGroup('def').set('density', '2700[kg/m^3]');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'237[W/(m*K)]' '0' '0' '0' '237[W/(m*K)]' '0' '0' '0' '237[W/(m*K)]'});
model.material('mat2').propertyGroup('Enu').set('E', '70.0e9[Pa]');
model.material('mat2').propertyGroup('Enu').set('nu', '0.35');
model.material('mat2').set('family', 'aluminum');
model.material.create('mat3', 'Common', 'comp1');
model.material('mat3').propertyGroup.create('StrainCharge', 'Strain-charge form');
model.material('mat3').propertyGroup.create('StressCharge', 'Stress-charge form');
model.material('mat3').label('Zinc Oxide');
model.material('mat3').set('family', 'custom');
model.material('mat3').set('customspecular', [0.7843137254901961 1 1]);
model.material('mat3').set('customdiffuse', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat3').set('noise', true);
model.material('mat3').set('fresnel', 0.9);
model.material('mat3').set('roughness', 0.1);
model.material('mat3').set('metallic', 0);
model.material('mat3').set('pearl', 0);
model.material('mat3').set('diffusewrap', 0);
model.material('mat3').set('clearcoat', 0);
model.material('mat3').set('reflectance', 0);
model.material('mat3').propertyGroup('def').set('relpermittivity', {'8.5446' '0' '0' '0' '8.5446' '0' '0' '0' '10.204'});
model.material('mat3').propertyGroup('def').set('density', '5680[kg/m^3]');
model.material('mat3').propertyGroup('StrainCharge').set('sE', {'7.86e-012[1/Pa]' '-3.43e-012[1/Pa]' '-2.21e-012[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '-3.43e-012[1/Pa]' '7.86e-012[1/Pa]' '-2.21e-012[1/Pa]' '0[1/Pa]'  ...
'0[1/Pa]' '0[1/Pa]' '-2.21e-012[1/Pa]' '-2.21e-012[1/Pa]' '6.94e-012[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]'  ...
'0[1/Pa]' '2.36e-011[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '2.36e-011[1/Pa]' '0[1/Pa]'  ...
'0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '2.26e-011[1/Pa]'});
model.material('mat3').propertyGroup('StrainCharge').set('dET', {'0[C/N]' '0[C/N]' '-5.43e-012[C/N]' '0[C/N]' '0[C/N]' '-5.43e-012[C/N]' '0[C/N]' '0[C/N]' '1.167e-011[C/N]' '0[C/N]'  ...
'-1.134e-011[C/N]' '0[C/N]' '-1.134e-011[C/N]' '0[C/N]' '0[C/N]' '0[C/N]' '0[C/N]' '0[C/N]'});
model.material('mat3').propertyGroup('StrainCharge').set('epsilonrT', {'9.16' '0' '0' '0' '9.16' '0' '0' '0' '12.64'});
model.material('mat3').propertyGroup('StressCharge').set('cE', {'2.09714e+011[Pa]' '1.2114e+011[Pa]' '1.05359e+011[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '1.2114e+011[Pa]' '2.09714e+011[Pa]' '1.05359e+011[Pa]' '0[Pa]'  ...
'0[Pa]' '0[Pa]' '1.05359e+011[Pa]' '1.05359e+011[Pa]' '2.11194e+011[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]'  ...
'0[Pa]' '4.23729e+010[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '4.23729e+010[Pa]' '0[Pa]'  ...
'0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '4.42478e+010[Pa]'});
model.material('mat3').propertyGroup('StressCharge').set('eES', {'0[C/m^2]' '0[C/m^2]' '-0.567005[C/m^2]' '0[C/m^2]' '0[C/m^2]' '-0.567005[C/m^2]' '0[C/m^2]' '0[C/m^2]' '1.32044[C/m^2]' '0[C/m^2]'  ...
'-0.480508[C/m^2]' '0[C/m^2]' '-0.480508[C/m^2]' '0[C/m^2]' '0[C/m^2]' '0[C/m^2]' '0[C/m^2]' '0[C/m^2]'});
model.material('mat3').propertyGroup('StressCharge').set('epsilonrS', {'8.5446' '0' '0' '0' '8.5446' '0' '0' '0' '10.204'});
model.material('mat3').set('family', 'custom');
model.material('mat3').set('lighting', 'cooktorrance');
model.material('mat3').set('fresnel', 0.9);
model.material('mat3').set('roughness', 0.1);
model.material('mat3').set('anisotropy', 0);
model.material('mat3').set('flipanisotropy', false);
model.material('mat3').set('metallic', 0);
model.material('mat3').set('pearl', 0);
model.material('mat3').set('diffusewrap', 0);
model.material('mat3').set('clearcoat', 0);
model.material('mat3').set('reflectance', 0);
model.material('mat3').set('ambient', 'custom');
model.material('mat3').set('customambient', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat3').set('diffuse', 'custom');
model.material('mat3').set('customdiffuse', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat3').set('specular', 'custom');
model.material('mat3').set('customspecular', [0.7843137254901961 1 1]);
model.material('mat3').set('noisecolor', 'custom');
model.material('mat3').set('customnoisecolor', [0 0 0]);
model.material('mat3').set('noisescale', 0);
model.material('mat3').set('noise', 'off');
model.material('mat3').set('noisefreq', 1);
model.material('mat3').set('normalnoisebrush', '0');
model.material('mat3').set('normalnoisetype', '0');
model.material('mat3').set('alpha', 1);
model.material('mat3').set('anisotropyaxis', [0 0 1]);
model.material('mat2').selection.set([2 5 7 9]);
model.material('mat3').selection.set([3 6 10]);

model.physics('solid').prop('d').set('d', '1.7[mm]');
model.physics('solid').prop('cref').set('cref', '9000[m/s]');
model.physics('solid').feature('pzm1').selection.set([3 6 10]);
model.physics('solid').feature('pzm1').create('mdmp1', 'MechanicalDamping', 2);
model.physics('solid').feature('pzm1').feature('mdmp1').set('DampingType', 'IsotropicLossFactor');
model.physics('solid').feature('pzm1').feature('mdmp1').set('eta_s_mat', 'userdef');
model.physics('solid').feature('pzm1').feature('mdmp1').set('eta_s', 0.001);
model.physics('solid').feature('pzm1').create('dels1', 'DielectricLoss', 2);
model.physics('solid').feature('pzm1').feature('dels1').set('eta_epsilonS_mat', 'userdef');
model.physics('solid').feature('pzm1').feature('dels1').set('eta_epsilonS', [0.01 0 0 0 0.01 0 0 0 0.01]);
model.physics('solid').create('lemm2', 'LinearElasticModel', 2);
model.physics('solid').feature('lemm2').selection.set([1 4 8]);
model.physics('solid').feature('lemm2').set('SolidModel', 'Anisotropic');
model.physics('solid').create('fix1', 'Fixed', 1);
model.physics('solid').feature('fix1').selection.set([1 3 5 27 28 29]);
model.physics('es').selection.set([3 6 10]);
model.physics('es').prop('d').set('d', '1.7[mm]');
model.physics('es').create('gnd1', 'Ground', 1);
model.physics('es').feature('gnd1').selection.set([6 13 25]);
model.physics('es').create('term1', 'Terminal', 1);
model.physics('es').feature('term1').selection.set([16]);
model.physics('es').feature('term1').set('TerminalType', 'Voltage');

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([2 21]);
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 10);
model.mesh('mesh1').feature('map1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis2').selection.set([9]);
model.mesh('mesh1').feature('map1').feature('dis2').set('numelem', 100);
model.mesh('mesh1').feature('map1').create('dis3', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis3').selection.set([8]);
model.mesh('mesh1').feature('map1').feature('dis3').set('numelem', 2);
model.mesh('mesh1').feature('map1').create('dis4', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis4').selection.set([12]);
model.mesh('mesh1').feature('map1').feature('dis4').set('numelem', 3);
model.mesh('mesh1').run;

model.study('std1').feature('eig').set('eigmethod', 'region');
model.study('std1').feature('eig').set('appnreigs', 6);
model.study('std1').feature('eig').set('eigunit', 'MHz');
model.study('std1').feature('eig').set('eigsr', 220);
model.study('std1').feature('eig').set('eiglr', 230);
model.study('std1').feature('eig').set('eigli', 0.1);

model.sol.create('sol1');
model.sol('sol1').study('std1');

model.study('std1').feature('eig').set('notlistsolnum', 1);
model.study('std1').feature('eig').set('notsolnum', 'auto');
model.study('std1').feature('eig').set('listsolnum', 1);
model.study('std1').feature('eig').set('solnum', 'auto');
model.study('std1').feature('eig').set('linplistsolnum', {'1'});
model.study('std1').feature('eig').set('linpsolnum', 'auto');

model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'eig');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'eig');
model.sol('sol1').create('e1', 'Eigenvalue');
model.sol('sol1').feature('e1').set('eigref', '100');
model.sol('sol1').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol1').feature('e1').set('eigvfunscaleparam', '1.0E-9');
model.sol('sol1').feature('e1').set('control', 'eig');
model.sol('sol1').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol1').attach('std1');
model.sol('sol1').feature('e1').set('eigref', '2e8');

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').set('defaultPlotID', 'modeShape');
model.result('pg1').label('Mode Shape (solid)');
model.result('pg1').set('showlegends', false);
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'solid.disp'});
model.result('pg1').feature('surf1').set('threshold', 'manual');
model.result('pg1').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg1').feature('surf1').set('colortable', 'AuroraBorealis');
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg1').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg1').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result.evaluationGroup.create('std1EvgFrq', 'EvaluationGroup');
model.result.evaluationGroup('std1EvgFrq').set('defaultPlotID', 'eigenfrequenciesTable_solid');
model.result.evaluationGroup('std1EvgFrq').set('data', 'dset1');
model.result.evaluationGroup('std1EvgFrq').label('Eigenfrequencies (Study 1)');
model.result.evaluationGroup('std1EvgFrq').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('expr', '2*pi*freq', 0);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('unit', 'rad/s', 0);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('descr', 'Angular frequency', 0);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('expr', 'imag(freq)/abs(freq)', 1);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('unit', '1', 1);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('descr', 'Damping ratio', 1);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('expr', 'abs(freq)/imag(freq)/2', 2);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('unit', '1', 2);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('descr', 'Quality factor', 2);
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').label('Electric Potential (es)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('showlegendsmaxmin', true);
model.result('pg2').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom2/pdef1/pcond2/pcond2/pg1');
model.result('pg2').feature.create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('solutionparams', 'parent');
model.result('pg2').feature('surf1').set('expr', 'V');
model.result('pg2').feature('surf1').set('colortable', 'Dipole');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('data', 'parent');
model.result('pg2').feature.create('str1', 'Streamline');
model.result('pg2').feature('str1').set('showsolutionparams', 'on');
model.result('pg2').feature('str1').set('solutionparams', 'parent');
model.result('pg2').feature('str1').set('expr', {'es.Ex' 'es.Ey'});
model.result('pg2').feature('str1').set('titletype', 'none');
model.result('pg2').feature('str1').set('posmethod', 'uniform');
model.result('pg2').feature('str1').set('udist', 0.02);
model.result('pg2').feature('str1').set('maxlen', 0.4);
model.result('pg2').feature('str1').set('maxtime', Inf);
model.result('pg2').feature('str1').set('inheritcolor', false);
model.result('pg2').feature('str1').set('showsolutionparams', 'on');
model.result('pg2').feature('str1').set('maxtime', Inf);
model.result('pg2').feature('str1').set('showsolutionparams', 'on');
model.result('pg2').feature('str1').set('maxtime', Inf);
model.result('pg2').feature('str1').set('showsolutionparams', 'on');
model.result('pg2').feature('str1').set('maxtime', Inf);
model.result('pg2').feature('str1').set('showsolutionparams', 'on');
model.result('pg2').feature('str1').set('maxtime', Inf);
model.result('pg2').feature('str1').set('data', 'parent');
model.result('pg2').feature('str1').set('inheritplot', 'surf1');
model.result('pg2').feature('str1').feature.create('col1', 'Color');
model.result('pg2').feature('str1').feature('col1').set('expr', 'V');
model.result('pg2').feature('str1').feature('col1').set('colortable', 'DipoleDark');
model.result('pg2').feature('str1').feature('col1').set('colorlegend', false);
model.result('pg2').feature('str1').feature.create('filt1', 'Filter');
model.result('pg2').feature('str1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').label('Electric Field Norm (es)');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').set('showlegendsmaxmin', true);
model.result('pg3').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom3/pdef1/pcond2/pcond2/pg1');
model.result('pg3').feature.create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('solutionparams', 'parent');
model.result('pg3').feature('surf1').set('expr', 'es.normE');
model.result('pg3').feature('surf1').set('colortable', 'Prism');
model.result('pg3').feature('surf1').set('colortabletrans', 'nonlinear');
model.result('pg3').feature('surf1').set('colorcalibration', -0.8);
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('data', 'parent');
model.result('pg3').feature.create('str1', 'Streamline');
model.result('pg3').feature('str1').set('showsolutionparams', 'on');
model.result('pg3').feature('str1').set('solutionparams', 'parent');
model.result('pg3').feature('str1').set('expr', {'es.Ex' 'es.Ey'});
model.result('pg3').feature('str1').set('titletype', 'none');
model.result('pg3').feature('str1').set('posmethod', 'uniform');
model.result('pg3').feature('str1').set('udist', 0.02);
model.result('pg3').feature('str1').set('maxlen', 0.4);
model.result('pg3').feature('str1').set('maxtime', Inf);
model.result('pg3').feature('str1').set('inheritcolor', false);
model.result('pg3').feature('str1').set('showsolutionparams', 'on');
model.result('pg3').feature('str1').set('maxtime', Inf);
model.result('pg3').feature('str1').set('showsolutionparams', 'on');
model.result('pg3').feature('str1').set('maxtime', Inf);
model.result('pg3').feature('str1').set('showsolutionparams', 'on');
model.result('pg3').feature('str1').set('maxtime', Inf);
model.result('pg3').feature('str1').set('showsolutionparams', 'on');
model.result('pg3').feature('str1').set('maxtime', Inf);
model.result('pg3').feature('str1').set('data', 'parent');
model.result('pg3').feature('str1').set('inheritplot', 'surf1');
model.result('pg3').feature('str1').feature.create('col1', 'Color');
model.result('pg3').feature('str1').feature('col1').set('expr', 'es.normE');
model.result('pg3').feature('str1').feature('col1').set('colortable', 'PrismDark');
model.result('pg3').feature('str1').feature('col1').set('colorlegend', false);
model.result('pg3').feature('str1').feature('col1').set('colortabletrans', 'nonlinear');
model.result('pg3').feature('str1').feature('col1').set('colorcalibration', -0.8);
model.result('pg3').feature('str1').feature.create('filt1', 'Filter');
model.result('pg3').feature('str1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result.evaluationGroup.create('std1mpf1', 'EvaluationGroup');
model.result.evaluationGroup('std1mpf1').set('data', 'dset1');
model.result.evaluationGroup('std1mpf1').label('Participation Factors (Study 1)');
model.result.evaluationGroup('std1mpf1').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfLnormX', 0);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 0);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, X-translation', 0);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfLnormY', 1);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 1);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Y-translation', 1);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfLnormZ', 2);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 2);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Z-translation', 2);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfRnormX', 3);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 3);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, X-rotation', 3);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfRnormY', 4);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 4);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Y-rotation', 4);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfRnormZ', 5);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 5);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Z-rotation', 5);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffLX', 6);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg', 6);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, X-translation', 6);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffLY', 7);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg', 7);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Y-translation', 7);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffLZ', 8);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg', 8);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Z-translation', 8);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffRX', 9);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg*m^2', 9);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, X-rotation', 9);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffRY', 10);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg*m^2', 10);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Y-rotation', 10);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffRZ', 11);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg*m^2', 11);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Z-rotation', 11);

model.sol('sol1').runAll;

model.result.evaluationGroup('std1EvgFrq').run;
model.result('pg2').feature('str1').selection.geom('geom1', 1);
model.result('pg2').feature('str1').selection.set([5 6 7 12 13 14 16 19 24 25 26 29]);
model.result('pg3').feature('str1').selection.geom('geom1', 1);
model.result('pg3').feature('str1').selection.set([5 6 7 12 13 14 16 19 24 25 26 29]);
model.result.evaluationGroup('std1mpf1').run;
model.result('pg1').run;

model.view('view1').axis.set('viewscaletype', 'none');

model.result('pg1').run;
model.result('pg1').run;

model.study.create('std2');
model.study('std2').create('freq', 'Frequency');
model.study('std2').feature('freq').setSolveFor('/physics/solid', true);
model.study('std2').feature('freq').setSolveFor('/physics/es', true);
model.study('std2').feature('freq').setSolveFor('/multiphysics/pze1', true);
model.study('std2').feature('freq').set('plist', 'range(215,0.1,235)[MHz]');

model.sol.create('sol2');
model.sol('sol2').study('std2');

model.study('std2').feature('freq').set('notlistsolnum', 1);
model.study('std2').feature('freq').set('notsolnum', 'auto');
model.study('std2').feature('freq').set('listsolnum', 1);
model.study('std2').feature('freq').set('solnum', 'auto');

model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'freq');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'freq');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('p1', 'Parametric');
model.sol('sol2').feature('s1').feature.remove('pDef');
model.sol('sol2').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol2').feature('s1').feature('p1').set('plistarr', {'range(215,0.1,235)[MHz]'});
model.sol('sol2').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol2').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol2').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol2').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol2').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol2').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol2').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol2').feature('s1').feature('p1').set('probes', {});
model.sol('sol2').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol2').feature('s1').set('linpmethod', 'sol');
model.sol('sol2').feature('s1').set('linpsol', 'zero');
model.sol('sol2').feature('s1').set('control', 'freq');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('seDef', 'Segregated');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').feature('s1').feature.remove('seDef');
model.sol('sol2').attach('std2');

model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').set('data', 'dset2');
model.result('pg4').set('defaultPlotID', 'stress');
model.result('pg4').label('Stress (solid)');
model.result('pg4').set('frametype', 'spatial');
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', {'solid.mises_peak'});
model.result('pg4').feature('surf1').set('threshold', 'manual');
model.result('pg4').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg4').feature('surf1').set('resolution', 'normal');
model.result('pg4').feature('surf1').set('colortable', 'Prism');
model.result('pg4').feature('surf1').create('def', 'Deform');
model.result('pg4').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg4').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').label('Electric Potential (es) 1');
model.result('pg5').set('frametype', 'spatial');
model.result('pg5').set('showlegendsmaxmin', true);
model.result('pg5').set('data', 'dset2');
model.result('pg5').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom2/pdef1/pcond2/pcond2/pg1');
model.result('pg5').feature.create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('showsolutionparams', 'on');
model.result('pg5').feature('surf1').set('solutionparams', 'parent');
model.result('pg5').feature('surf1').set('expr', 'V');
model.result('pg5').feature('surf1').set('colortable', 'Dipole');
model.result('pg5').feature('surf1').set('showsolutionparams', 'on');
model.result('pg5').feature('surf1').set('data', 'parent');
model.result('pg5').feature.create('str1', 'Streamline');
model.result('pg5').feature('str1').set('showsolutionparams', 'on');
model.result('pg5').feature('str1').set('solutionparams', 'parent');
model.result('pg5').feature('str1').set('expr', {'es.Ex' 'es.Ey'});
model.result('pg5').feature('str1').set('titletype', 'none');
model.result('pg5').feature('str1').set('posmethod', 'uniform');
model.result('pg5').feature('str1').set('udist', 0.02);
model.result('pg5').feature('str1').set('maxlen', 0.4);
model.result('pg5').feature('str1').set('maxtime', Inf);
model.result('pg5').feature('str1').set('inheritcolor', false);
model.result('pg5').feature('str1').set('showsolutionparams', 'on');
model.result('pg5').feature('str1').set('maxtime', Inf);
model.result('pg5').feature('str1').set('showsolutionparams', 'on');
model.result('pg5').feature('str1').set('maxtime', Inf);
model.result('pg5').feature('str1').set('showsolutionparams', 'on');
model.result('pg5').feature('str1').set('maxtime', Inf);
model.result('pg5').feature('str1').set('showsolutionparams', 'on');
model.result('pg5').feature('str1').set('maxtime', Inf);
model.result('pg5').feature('str1').set('data', 'parent');
model.result('pg5').feature('str1').set('inheritplot', 'surf1');
model.result('pg5').feature('str1').feature.create('col1', 'Color');
model.result('pg5').feature('str1').feature('col1').set('expr', 'V');
model.result('pg5').feature('str1').feature('col1').set('colortable', 'DipoleDark');
model.result('pg5').feature('str1').feature('col1').set('colorlegend', false);
model.result('pg5').feature('str1').feature.create('filt1', 'Filter');
model.result('pg5').feature('str1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result.create('pg6', 'PlotGroup2D');
model.result('pg6').label('Electric Field Norm (es) 1');
model.result('pg6').set('frametype', 'spatial');
model.result('pg6').set('showlegendsmaxmin', true);
model.result('pg6').set('data', 'dset2');
model.result('pg6').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom3/pdef1/pcond2/pcond2/pg1');
model.result('pg6').feature.create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('showsolutionparams', 'on');
model.result('pg6').feature('surf1').set('solutionparams', 'parent');
model.result('pg6').feature('surf1').set('expr', 'es.normE');
model.result('pg6').feature('surf1').set('colortable', 'Prism');
model.result('pg6').feature('surf1').set('colortabletrans', 'nonlinear');
model.result('pg6').feature('surf1').set('colorcalibration', -0.8);
model.result('pg6').feature('surf1').set('showsolutionparams', 'on');
model.result('pg6').feature('surf1').set('data', 'parent');
model.result('pg6').feature.create('str1', 'Streamline');
model.result('pg6').feature('str1').set('showsolutionparams', 'on');
model.result('pg6').feature('str1').set('solutionparams', 'parent');
model.result('pg6').feature('str1').set('expr', {'es.Ex' 'es.Ey'});
model.result('pg6').feature('str1').set('titletype', 'none');
model.result('pg6').feature('str1').set('posmethod', 'uniform');
model.result('pg6').feature('str1').set('udist', 0.02);
model.result('pg6').feature('str1').set('maxlen', 0.4);
model.result('pg6').feature('str1').set('maxtime', Inf);
model.result('pg6').feature('str1').set('inheritcolor', false);
model.result('pg6').feature('str1').set('showsolutionparams', 'on');
model.result('pg6').feature('str1').set('maxtime', Inf);
model.result('pg6').feature('str1').set('showsolutionparams', 'on');
model.result('pg6').feature('str1').set('maxtime', Inf);
model.result('pg6').feature('str1').set('showsolutionparams', 'on');
model.result('pg6').feature('str1').set('maxtime', Inf);
model.result('pg6').feature('str1').set('showsolutionparams', 'on');
model.result('pg6').feature('str1').set('maxtime', Inf);
model.result('pg6').feature('str1').set('data', 'parent');
model.result('pg6').feature('str1').set('inheritplot', 'surf1');
model.result('pg6').feature('str1').feature.create('col1', 'Color');
model.result('pg6').feature('str1').feature('col1').set('expr', 'es.normE');
model.result('pg6').feature('str1').feature('col1').set('colortable', 'PrismDark');
model.result('pg6').feature('str1').feature('col1').set('colorlegend', false);
model.result('pg6').feature('str1').feature('col1').set('colortabletrans', 'nonlinear');
model.result('pg6').feature('str1').feature('col1').set('colorcalibration', -0.8);
model.result('pg6').feature('str1').feature.create('filt1', 'Filter');
model.result('pg6').feature('str1').feature('filt1').set('expr', '!isScalingSystemDomain');

model.sol('sol2').runAll;

model.result('pg5').set('data', 'dset2');
model.result('pg5').feature('str1').selection.geom('geom1', 1);
model.result('pg5').feature('str1').selection.set([5 6 7 12 13 14 16 19 24 25 26 29]);
model.result('pg6').set('data', 'dset2');
model.result('pg6').feature('str1').selection.geom('geom1', 1);
model.result('pg6').feature('str1').selection.set([5 6 7 12 13 14 16 19 24 25 26 29]);
model.result('pg4').run;
model.result('pg4').label('Displacement (solid)');
model.result('pg4').setIndex('looplevel', 66, 0);
model.result('pg4').run;
model.result('pg4').feature('surf1').set('expr', 'solid.disp');
model.result('pg4').feature('surf1').set('descr', 'Displacement magnitude');
model.result('pg4').run;
model.result('pg5').run;
model.result('pg5').run;
model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').run;
model.result('pg7').label('Admittance');
model.result('pg7').set('data', 'dset2');
model.result('pg7').create('glob1', 'Global');
model.result('pg7').feature('glob1').set('markerpos', 'datapoints');
model.result('pg7').feature('glob1').set('linewidth', 'preference');
model.result('pg7').feature('glob1').setIndex('expr', 'abs(es.Y11)', 0);
model.result('pg7').feature('glob1').setIndex('descr', 'Absolute value of admittance', 0);
model.result('pg7').feature('glob1').set('xdataparamunit', 'MHz');
model.result('pg7').run;
model.result('pg7').set('ylog', true);
model.result('pg7').set('showmanualgrid', true);
model.result('pg7').set('showxspacing', true);
model.result('pg7').set('showyspacing', false);
model.result('pg7').set('showsecyspacing', false);
model.result('pg7').set('showsecyextra', false);
model.result('pg7').run;
model.result.duplicate('pg8', 'pg7');
model.result('pg8').run;
model.result('pg8').label('Quality Factor');
model.result('pg8').run;
model.result('pg8').feature('glob1').set('expr', {'solid.Q_freq'});
model.result('pg8').feature('glob1').set('descr', {'Quality factor for frequency'});
model.result('pg8').feature('glob1').set('unit', {'1'});
model.result('pg8').set('ylog', false);
model.result('pg8').set('showmanualgrid', true);
model.result('pg8').set('showxspacing', true);
model.result('pg8').set('showyspacing', true);
model.result('pg8').set('showsecyspacing', false);
model.result('pg8').set('showsecyextra', false);
model.result('pg8').run;
model.result.numerical.create('gev1', 'EvalGlobal');
model.result.numerical('gev1').label('Q Factor');
model.result.numerical('gev1').setIndex('looplevelinput', 'manual', 0);
model.result.numerical('gev1').setIndex('looplevel', [1], 0);
model.result.numerical('gev1').set('expr', {'solid.Q_eig'});
model.result.numerical('gev1').set('descr', {'Quality factor for eigenvalue'});
model.result.numerical('gev1').set('unit', {'1'});
model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').comments('Q Factor');
model.result.numerical('gev1').set('table', 'tbl1');
model.result.numerical('gev1').setResult;
model.result.numerical.duplicate('gev2', 'gev1');
model.result.numerical('gev2').set('expr', {'solid.decay'});
model.result.numerical('gev2').set('descr', {'Exponential decay factor'});
model.result.numerical('gev2').set('unit', {'1'});
model.result.numerical('gev2').label('Decay Factor');
model.result.numerical('gev2').set('table', 'tbl1');
model.result.numerical('gev2').appendResult;
model.result('pg2').run;
model.result('pg2').feature('str1').set('udist', 0.005);
model.result('pg2').run;
model.result('pg3').run;
model.result('pg3').feature('str1').set('udist', 0.005);
model.result('pg3').run;
model.result('pg5').run;
model.result('pg5').feature('str1').set('udist', 0.005);
model.result('pg5').run;
model.result('pg6').run;
model.result('pg6').feature('str1').set('udist', 0.005);
model.result('pg6').run;

model.title('Thin-Film BAW Composite Resonator');

model.description('Bulk acoustic wave (BAW) resonators are useful components for many radio-frequency applications, where they can operate as narrow band filters. This example shows how you can perform eigenfrequency and frequency-response analyses of a composite thin-film BAW resonator.');

model.label('thin_film_baw_resonator.mph');

model.result('pg6').run;

model.geom('geom1').feature('r1').set('size', [2 16.7]);
model.geom('geom1').feature('r1').set('layerleft', false);
model.geom('geom1').feature('r1').set('layerright', false);
model.geom('geom1').feature('r2').set('size', [2 0.2]);
model.geom('geom1').feature('r2').set('layerleft', false);
model.geom('geom1').feature('r2').set('layerright', false);
model.geom('geom1').feature('r3').set('size', [2 0.2]);
model.geom('geom1').runPre('fin');
model.geom('geom1').run;

model.physics('solid').feature.remove('fix1');
model.physics('solid').create('pc1', 'PeriodicCondition', 1);
model.physics('solid').feature('pc1').selection.set([1 3 5 7 10 11 12 13]);
model.physics('solid').feature('pc1').set('PeriodicType', 'Floquet');

model.param.set('k', '0[1/m]');
model.param.descr('k', 'wave number');

model.physics('solid').feature('pc1').set('kFloquet', {'k' '0' '0'});
model.physics('solid').feature('pc1').label('Periodic Condition 1: real k');
model.physics('solid').feature.duplicate('pc2', 'pc1');
model.physics('solid').feature('pc2').label('Periodic Condition 2: imag k');
model.physics('solid').feature('pc2').set('kFloquet', {'i*k' '0' '0'});
model.physics('es').create('pc1', 'PeriodicCondition', 1);
model.physics('es').feature('pc1').label('Periodic Condition 1: real k');
model.physics('es').feature('pc1').selection.set([5 12]);
model.physics('es').feature('pc1').set('PeriodicType', 'Floquet');
model.physics('es').feature('pc1').set('kFloquet', {'k' '0' '0'});
model.physics('es').feature.duplicate('pc2', 'pc1');
model.physics('es').feature('pc2').label('Periodic Condition 2: imag k');
model.physics('es').feature('pc2').set('kFloquet', {'i*k' '0' '0'});
model.physics('es').feature('term1').label('Terminal 1: real k');
model.physics('es').feature('term1').set('V0', '1[V]*exp(-i*k*x)');
model.physics('es').feature.duplicate('term2', 'term1');
model.physics('es').feature('term2').label('Terminal 2: imag k');
model.physics('es').feature('term2').set('V0', '1[V]*exp(-i*i*k*x)');

model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 1);
model.mesh('mesh1').feature('map1').feature.remove('dis2');
model.mesh('mesh1').feature('map1').feature.remove('dis3');
model.mesh('mesh1').feature('map1').feature.remove('dis4');

model.study.create('std3');
model.study('std3').create('freq', 'Frequency');
model.study('std3').feature('freq').setSolveFor('/physics/solid', true);
model.study('std3').feature('freq').setSolveFor('/physics/es', true);
model.study('std3').feature('freq').setSolveFor('/multiphysics/pze1', true);
model.study('std3').feature('freq').set('plist', 'range(200,0.5,260)[MHz]');
model.study('std3').feature('freq').set('useadvanceddisable', true);
model.study('std3').feature('freq').set('disabledphysics', {'solid/pc2' 'es/pc2' 'es/term2'});
model.study('std3').feature('freq').set('useparam', true);
model.study('std3').feature('freq').setIndex('pname_aux', 'k', 0);
model.study('std3').feature('freq').setIndex('plistarr_aux', '', 0);
model.study('std3').feature('freq').setIndex('punit_aux', '1/m', 0);
model.study('std3').feature('freq').setIndex('pname_aux', 'k', 0);
model.study('std3').feature('freq').setIndex('plistarr_aux', '', 0);
model.study('std3').feature('freq').setIndex('punit_aux', '1/m', 0);
model.study('std3').feature('freq').setIndex('plistarr_aux', 'range(0,0.025,1)*1.5e5', 0);
model.study('std3').label('Study 3: Freq domain, real k');

model.sol.create('sol3');
model.sol('sol3').study('std3');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std3');
model.sol('sol3').feature('st1').set('studystep', 'freq');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').set('control', 'freq');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').create('p1', 'Parametric');
model.sol('sol3').feature('s1').feature.remove('pDef');
model.sol('sol3').feature('s1').feature('p1').set('pname', {'freq' 'k'});
model.sol('sol3').feature('s1').feature('p1').set('punit', {'Hz' '1/m'});
model.sol('sol3').feature('s1').feature('p1').set('sweeptype', 'filled');
model.sol('sol3').feature('s1').feature('p1').set('plistarr', {'range(200,0.5,260)[MHz]' 'range(0,0.025,1)*1.5e5'});
model.sol('sol3').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol3').feature('s1').feature('p1').set('pcontinuation', '');
model.sol('sol3').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol3').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol3').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol3').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol3').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol3').feature('s1').feature('p1').set('probes', {});
model.sol('sol3').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol3').feature('s1').set('linpmethod', 'sol');
model.sol('sol3').feature('s1').set('linpsol', 'zero');
model.sol('sol3').feature('s1').set('control', 'freq');
model.sol('sol3').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('s1').create('seDef', 'Segregated');
model.sol('sol3').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol('sol3').feature('s1').feature.remove('seDef');
model.sol('sol3').attach('std3');
model.sol('sol3').runAll;

model.result.create('pg9', 'PlotGroup2D');
model.result('pg9').set('data', 'dset3');
model.result('pg9').setIndex('looplevel', 41, 0);
model.result('pg9').setIndex('looplevel', 121, 1);
model.result('pg9').set('defaultPlotID', 'stress');
model.result('pg9').label('Stress (solid)');
model.result('pg9').set('frametype', 'spatial');
model.result('pg9').create('surf1', 'Surface');
model.result('pg9').feature('surf1').set('expr', {'solid.misesGp_peak'});
model.result('pg9').feature('surf1').set('threshold', 'manual');
model.result('pg9').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg9').feature('surf1').set('colortable', 'Rainbow');
model.result('pg9').feature('surf1').set('colortabletrans', 'none');
model.result('pg9').feature('surf1').set('colorscalemode', 'linear');
model.result('pg9').feature('surf1').set('resolution', 'normal');
model.result('pg9').feature('surf1').set('colortable', 'Prism');
model.result('pg9').feature('surf1').create('def', 'Deform');
model.result('pg9').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg9').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result.create('pg10', 'PlotGroup2D');
model.result('pg10').label('Electric Potential (es) 2');
model.result('pg10').set('data', 'dset3');
model.result('pg10').setIndex('looplevel', 41, 0);
model.result('pg10').setIndex('looplevel', 121, 1);
model.result('pg10').set('frametype', 'spatial');
model.result('pg10').set('showlegendsmaxmin', true);
model.result('pg10').set('data', 'dset3');
model.result('pg10').setIndex('looplevel', 41, 0);
model.result('pg10').setIndex('looplevel', 121, 1);
model.result('pg10').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom2/pdef1/pcond2/pcond2/pg1');
model.result('pg10').feature.create('surf1', 'Surface');
model.result('pg10').feature('surf1').set('showsolutionparams', 'on');
model.result('pg10').feature('surf1').set('solutionparams', 'parent');
model.result('pg10').feature('surf1').set('expr', 'V');
model.result('pg10').feature('surf1').set('colortable', 'Dipole');
model.result('pg10').feature('surf1').set('showsolutionparams', 'on');
model.result('pg10').feature('surf1').set('data', 'parent');
model.result('pg10').feature.create('str1', 'Streamline');
model.result('pg10').feature('str1').set('showsolutionparams', 'on');
model.result('pg10').feature('str1').set('solutionparams', 'parent');
model.result('pg10').feature('str1').set('expr', {'es.Ex' 'es.Ey'});
model.result('pg10').feature('str1').set('titletype', 'none');
model.result('pg10').feature('str1').set('posmethod', 'uniform');
model.result('pg10').feature('str1').set('udist', 0.02);
model.result('pg10').feature('str1').set('maxlen', 0.4);
model.result('pg10').feature('str1').set('maxtime', Inf);
model.result('pg10').feature('str1').set('inheritcolor', false);
model.result('pg10').feature('str1').set('showsolutionparams', 'on');
model.result('pg10').feature('str1').set('maxtime', Inf);
model.result('pg10').feature('str1').set('showsolutionparams', 'on');
model.result('pg10').feature('str1').set('maxtime', Inf);
model.result('pg10').feature('str1').set('showsolutionparams', 'on');
model.result('pg10').feature('str1').set('maxtime', Inf);
model.result('pg10').feature('str1').set('showsolutionparams', 'on');
model.result('pg10').feature('str1').set('maxtime', Inf);
model.result('pg10').feature('str1').set('data', 'parent');
model.result('pg10').feature('str1').selection.geom('geom1', 1);
model.result('pg10').feature('str1').selection.set([5 6 8 12]);
model.result('pg10').feature('str1').set('inheritplot', 'surf1');
model.result('pg10').feature('str1').feature.create('col1', 'Color');
model.result('pg10').feature('str1').feature('col1').set('expr', 'V');
model.result('pg10').feature('str1').feature('col1').set('colortable', 'DipoleDark');
model.result('pg10').feature('str1').feature('col1').set('colorlegend', false);
model.result('pg10').feature('str1').feature.create('filt1', 'Filter');
model.result('pg10').feature('str1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result.create('pg11', 'PlotGroup2D');
model.result('pg11').label('Electric Field Norm (es) 2');
model.result('pg11').set('data', 'dset3');
model.result('pg11').setIndex('looplevel', 41, 0);
model.result('pg11').setIndex('looplevel', 121, 1);
model.result('pg11').set('frametype', 'spatial');
model.result('pg11').set('showlegendsmaxmin', true);
model.result('pg11').set('data', 'dset3');
model.result('pg11').setIndex('looplevel', 41, 0);
model.result('pg11').setIndex('looplevel', 121, 1);
model.result('pg11').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom3/pdef1/pcond2/pcond2/pg1');
model.result('pg11').feature.create('surf1', 'Surface');
model.result('pg11').feature('surf1').set('showsolutionparams', 'on');
model.result('pg11').feature('surf1').set('solutionparams', 'parent');
model.result('pg11').feature('surf1').set('expr', 'es.normE');
model.result('pg11').feature('surf1').set('colortable', 'Prism');
model.result('pg11').feature('surf1').set('colortabletrans', 'nonlinear');
model.result('pg11').feature('surf1').set('colorcalibration', -0.8);
model.result('pg11').feature('surf1').set('showsolutionparams', 'on');
model.result('pg11').feature('surf1').set('data', 'parent');
model.result('pg11').feature.create('str1', 'Streamline');
model.result('pg11').feature('str1').set('showsolutionparams', 'on');
model.result('pg11').feature('str1').set('solutionparams', 'parent');
model.result('pg11').feature('str1').set('expr', {'es.Ex' 'es.Ey'});
model.result('pg11').feature('str1').set('titletype', 'none');
model.result('pg11').feature('str1').set('posmethod', 'uniform');
model.result('pg11').feature('str1').set('udist', 0.02);
model.result('pg11').feature('str1').set('maxlen', 0.4);
model.result('pg11').feature('str1').set('maxtime', Inf);
model.result('pg11').feature('str1').set('inheritcolor', false);
model.result('pg11').feature('str1').set('showsolutionparams', 'on');
model.result('pg11').feature('str1').set('maxtime', Inf);
model.result('pg11').feature('str1').set('showsolutionparams', 'on');
model.result('pg11').feature('str1').set('maxtime', Inf);
model.result('pg11').feature('str1').set('showsolutionparams', 'on');
model.result('pg11').feature('str1').set('maxtime', Inf);
model.result('pg11').feature('str1').set('showsolutionparams', 'on');
model.result('pg11').feature('str1').set('maxtime', Inf);
model.result('pg11').feature('str1').set('data', 'parent');
model.result('pg11').feature('str1').selection.geom('geom1', 1);
model.result('pg11').feature('str1').selection.set([5 6 8 12]);
model.result('pg11').feature('str1').set('inheritplot', 'surf1');
model.result('pg11').feature('str1').feature.create('col1', 'Color');
model.result('pg11').feature('str1').feature('col1').set('expr', 'es.normE');
model.result('pg11').feature('str1').feature('col1').set('colortable', 'PrismDark');
model.result('pg11').feature('str1').feature('col1').set('colorlegend', false);
model.result('pg11').feature('str1').feature('col1').set('colortabletrans', 'nonlinear');
model.result('pg11').feature('str1').feature('col1').set('colorcalibration', -0.8);
model.result('pg11').feature('str1').feature.create('filt1', 'Filter');
model.result('pg11').feature('str1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result('pg9').run;

model.study.create('std4');
model.study('std4').create('freq', 'Frequency');
model.study('std4').feature('freq').setSolveFor('/physics/solid', true);
model.study('std4').feature('freq').setSolveFor('/physics/es', true);
model.study('std4').feature('freq').setSolveFor('/multiphysics/pze1', true);
model.study('std4').feature('freq').set('plist', 'range(200,0.5,260)[MHz]');
model.study('std4').feature('freq').set('useadvanceddisable', true);
model.study('std4').feature('freq').set('disabledphysics', {'solid/pc1' 'es/term1' 'es/pc1'});
model.study('std4').feature('freq').set('useparam', true);
model.study('std4').feature('freq').setIndex('pname_aux', 'k', 0);
model.study('std4').feature('freq').setIndex('plistarr_aux', '', 0);
model.study('std4').feature('freq').setIndex('punit_aux', '1/m', 0);
model.study('std4').feature('freq').setIndex('pname_aux', 'k', 0);
model.study('std4').feature('freq').setIndex('plistarr_aux', '', 0);
model.study('std4').feature('freq').setIndex('punit_aux', '1/m', 0);
model.study('std4').feature('freq').setIndex('plistarr_aux', '-range(0,0.025,1)*2.8e4', 0);
model.study('std4').label('Study 4: Freq domain, imag k');

model.sol.create('sol4');
model.sol('sol4').study('std4');
model.sol('sol4').create('st1', 'StudyStep');
model.sol('sol4').feature('st1').set('study', 'std4');
model.sol('sol4').feature('st1').set('studystep', 'freq');
model.sol('sol4').create('v1', 'Variables');
model.sol('sol4').feature('v1').set('control', 'freq');
model.sol('sol4').create('s1', 'Stationary');
model.sol('sol4').feature('s1').create('p1', 'Parametric');
model.sol('sol4').feature('s1').feature.remove('pDef');
model.sol('sol4').feature('s1').feature('p1').set('pname', {'freq' 'k'});
model.sol('sol4').feature('s1').feature('p1').set('punit', {'Hz' '1/m'});
model.sol('sol4').feature('s1').feature('p1').set('sweeptype', 'filled');
model.sol('sol4').feature('s1').feature('p1').set('plistarr', {'range(200,0.5,260)[MHz]' '-range(0,0.025,1)*2.8e4'});
model.sol('sol4').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol4').feature('s1').feature('p1').set('pcontinuation', '');
model.sol('sol4').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol4').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol4').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol4').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol4').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol4').feature('s1').feature('p1').set('probes', {});
model.sol('sol4').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol4').feature('s1').set('linpmethod', 'sol');
model.sol('sol4').feature('s1').set('linpsol', 'zero');
model.sol('sol4').feature('s1').set('control', 'freq');
model.sol('sol4').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol4').feature('s1').create('seDef', 'Segregated');
model.sol('sol4').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol4').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol4').feature('s1').feature.remove('fcDef');
model.sol('sol4').feature('s1').feature.remove('seDef');
model.sol('sol4').attach('std4');
model.sol('sol4').runAll;

model.result.create('pg12', 'PlotGroup2D');
model.result('pg12').set('data', 'dset4');
model.result('pg12').setIndex('looplevel', 41, 0);
model.result('pg12').setIndex('looplevel', 121, 1);
model.result('pg12').set('defaultPlotID', 'stress');
model.result('pg12').label('Stress (solid) 1');
model.result('pg12').set('frametype', 'spatial');
model.result('pg12').create('surf1', 'Surface');
model.result('pg12').feature('surf1').set('expr', {'solid.misesGp_peak'});
model.result('pg12').feature('surf1').set('threshold', 'manual');
model.result('pg12').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg12').feature('surf1').set('colortable', 'Rainbow');
model.result('pg12').feature('surf1').set('colortabletrans', 'none');
model.result('pg12').feature('surf1').set('colorscalemode', 'linear');
model.result('pg12').feature('surf1').set('resolution', 'normal');
model.result('pg12').feature('surf1').set('colortable', 'Prism');
model.result('pg12').feature('surf1').create('def', 'Deform');
model.result('pg12').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg12').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result.create('pg13', 'PlotGroup2D');
model.result('pg13').label('Electric Potential (es) 3');
model.result('pg13').set('data', 'dset4');
model.result('pg13').setIndex('looplevel', 41, 0);
model.result('pg13').setIndex('looplevel', 121, 1);
model.result('pg13').set('frametype', 'spatial');
model.result('pg13').set('showlegendsmaxmin', true);
model.result('pg13').set('data', 'dset4');
model.result('pg13').setIndex('looplevel', 41, 0);
model.result('pg13').setIndex('looplevel', 121, 1);
model.result('pg13').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom2/pdef1/pcond2/pcond2/pg1');
model.result('pg13').feature.create('surf1', 'Surface');
model.result('pg13').feature('surf1').set('showsolutionparams', 'on');
model.result('pg13').feature('surf1').set('solutionparams', 'parent');
model.result('pg13').feature('surf1').set('expr', 'V');
model.result('pg13').feature('surf1').set('colortable', 'Dipole');
model.result('pg13').feature('surf1').set('showsolutionparams', 'on');
model.result('pg13').feature('surf1').set('data', 'parent');
model.result('pg13').feature.create('str1', 'Streamline');
model.result('pg13').feature('str1').set('showsolutionparams', 'on');
model.result('pg13').feature('str1').set('solutionparams', 'parent');
model.result('pg13').feature('str1').set('expr', {'es.Ex' 'es.Ey'});
model.result('pg13').feature('str1').set('titletype', 'none');
model.result('pg13').feature('str1').set('posmethod', 'uniform');
model.result('pg13').feature('str1').set('udist', 0.02);
model.result('pg13').feature('str1').set('maxlen', 0.4);
model.result('pg13').feature('str1').set('maxtime', Inf);
model.result('pg13').feature('str1').set('inheritcolor', false);
model.result('pg13').feature('str1').set('showsolutionparams', 'on');
model.result('pg13').feature('str1').set('maxtime', Inf);
model.result('pg13').feature('str1').set('showsolutionparams', 'on');
model.result('pg13').feature('str1').set('maxtime', Inf);
model.result('pg13').feature('str1').set('showsolutionparams', 'on');
model.result('pg13').feature('str1').set('maxtime', Inf);
model.result('pg13').feature('str1').set('showsolutionparams', 'on');
model.result('pg13').feature('str1').set('maxtime', Inf);
model.result('pg13').feature('str1').set('data', 'parent');
model.result('pg13').feature('str1').selection.geom('geom1', 1);
model.result('pg13').feature('str1').selection.set([5 6 8 12]);
model.result('pg13').feature('str1').set('inheritplot', 'surf1');
model.result('pg13').feature('str1').feature.create('col1', 'Color');
model.result('pg13').feature('str1').feature('col1').set('expr', 'V');
model.result('pg13').feature('str1').feature('col1').set('colortable', 'DipoleDark');
model.result('pg13').feature('str1').feature('col1').set('colorlegend', false);
model.result('pg13').feature('str1').feature.create('filt1', 'Filter');
model.result('pg13').feature('str1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result.create('pg14', 'PlotGroup2D');
model.result('pg14').label('Electric Field Norm (es) 3');
model.result('pg14').set('data', 'dset4');
model.result('pg14').setIndex('looplevel', 41, 0);
model.result('pg14').setIndex('looplevel', 121, 1);
model.result('pg14').set('frametype', 'spatial');
model.result('pg14').set('showlegendsmaxmin', true);
model.result('pg14').set('data', 'dset4');
model.result('pg14').setIndex('looplevel', 41, 0);
model.result('pg14').setIndex('looplevel', 121, 1);
model.result('pg14').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom3/pdef1/pcond2/pcond2/pg1');
model.result('pg14').feature.create('surf1', 'Surface');
model.result('pg14').feature('surf1').set('showsolutionparams', 'on');
model.result('pg14').feature('surf1').set('solutionparams', 'parent');
model.result('pg14').feature('surf1').set('expr', 'es.normE');
model.result('pg14').feature('surf1').set('colortable', 'Prism');
model.result('pg14').feature('surf1').set('colortabletrans', 'nonlinear');
model.result('pg14').feature('surf1').set('colorcalibration', -0.8);
model.result('pg14').feature('surf1').set('showsolutionparams', 'on');
model.result('pg14').feature('surf1').set('data', 'parent');
model.result('pg14').feature.create('str1', 'Streamline');
model.result('pg14').feature('str1').set('showsolutionparams', 'on');
model.result('pg14').feature('str1').set('solutionparams', 'parent');
model.result('pg14').feature('str1').set('expr', {'es.Ex' 'es.Ey'});
model.result('pg14').feature('str1').set('titletype', 'none');
model.result('pg14').feature('str1').set('posmethod', 'uniform');
model.result('pg14').feature('str1').set('udist', 0.02);
model.result('pg14').feature('str1').set('maxlen', 0.4);
model.result('pg14').feature('str1').set('maxtime', Inf);
model.result('pg14').feature('str1').set('inheritcolor', false);
model.result('pg14').feature('str1').set('showsolutionparams', 'on');
model.result('pg14').feature('str1').set('maxtime', Inf);
model.result('pg14').feature('str1').set('showsolutionparams', 'on');
model.result('pg14').feature('str1').set('maxtime', Inf);
model.result('pg14').feature('str1').set('showsolutionparams', 'on');
model.result('pg14').feature('str1').set('maxtime', Inf);
model.result('pg14').feature('str1').set('showsolutionparams', 'on');
model.result('pg14').feature('str1').set('maxtime', Inf);
model.result('pg14').feature('str1').set('data', 'parent');
model.result('pg14').feature('str1').selection.geom('geom1', 1);
model.result('pg14').feature('str1').selection.set([5 6 8 12]);
model.result('pg14').feature('str1').set('inheritplot', 'surf1');
model.result('pg14').feature('str1').feature.create('col1', 'Color');
model.result('pg14').feature('str1').feature('col1').set('expr', 'es.normE');
model.result('pg14').feature('str1').feature('col1').set('colortable', 'PrismDark');
model.result('pg14').feature('str1').feature('col1').set('colorlegend', false);
model.result('pg14').feature('str1').feature('col1').set('colortabletrans', 'nonlinear');
model.result('pg14').feature('str1').feature('col1').set('colorcalibration', -0.8);
model.result('pg14').feature('str1').feature.create('filt1', 'Filter');
model.result('pg14').feature('str1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result('pg12').run;
model.result.evaluationGroup.create('eg1', 'EvaluationGroup');
model.result.evaluationGroup('eg1').label('Evaluation Group 1: Dispersion diagram');
model.result.evaluationGroup('eg1').set('data', 'none');
model.result.evaluationGroup('eg1').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg1').feature('gev1').label('Global Evaluation 1: real k');
model.result.evaluationGroup('eg1').feature('gev1').set('data', 'dset3');
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'log10(abs(es.Y11)/1[S])', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'log10(abs(Y11))', 0);
model.result.evaluationGroup('eg1').feature.duplicate('gev2', 'gev1');
model.result.evaluationGroup('eg1').feature('gev2').label('Global Evaluation 2: imag k');
model.result.evaluationGroup('eg1').feature('gev2').set('data', 'dset4');
model.result.evaluationGroup('eg1').feature('gev2').setIndex('expr', 'log10(abs(es.Y22)/1[S])', 0);
model.result.evaluationGroup('eg1').feature('gev2').setIndex('descr', 'log10(abs(Y22))', 0);
model.result.evaluationGroup('eg1').run;
model.result.create('pg15', 'PlotGroup2D');
model.result('pg15').set('data', 'none');
model.result('pg15').create('tbls1', 'TableSurface');
model.result('pg15').feature('tbls1').set('source', 'evaluationgroup');
model.result('pg15').feature('tbls1').set('evaluationgroup', 'eg1');
model.result('pg15').run;
model.result('pg15').feature('tbls1').set('colx', 2);
model.result('pg15').feature('tbls1').set('coly', 1);
model.result('pg15').feature('tbls1').set('rangecoloractive', true);
model.result('pg15').feature('tbls1').set('rangecolormin', -4.5);
model.result('pg15').feature('tbls1').set('rangecolormax', -1.5);
model.result('pg15').feature('tbls1').label('Table Surface 1: real k');
model.result('pg15').feature.duplicate('tbls2', 'tbls1');
model.result('pg15').run;
model.result('pg15').feature('tbls2').label('Table Surface 2: imag k');
model.result('pg15').feature('tbls2').set('colx', 5);
model.result('pg15').feature('tbls2').set('coly', 4);
model.result('pg15').feature('tbls2').set('coldata', 6);
model.result('pg15').feature('tbls2').set('inheritplot', 'tbls1');
model.result('pg15').run;
model.result('pg15').label('Dispersion Diagram');
model.result('pg15').run;
model.result.dataset.create('arr1', 'Array2D');
model.result.dataset('arr1').label('Array 2D 1: real k');
model.result.dataset('arr1').set('data', 'dset3');
model.result.dataset('arr1').set('fullsize', [40 1]);
model.result.dataset('arr1').set('floquetper', true);
model.result.dataset('arr1').set('wavevector', {'k' '0'});
model.result.create('pg16', 'PlotGroup2D');
model.result('pg16').run;
model.result('pg16').label('TS2 Mode');
model.result('pg16').set('data', 'arr1');
model.result('pg16').setIndex('looplevel', 4, 1);
model.result('pg16').setIndex('looplevel', 23, 0);
model.result('pg16').set('edges', false);
model.result('pg16').create('surf1', 'Surface');
model.result('pg16').feature('surf1').create('def1', 'Deform');
model.result('pg16').run;
model.result('pg16').run;
model.result('pg16').create('str1', 'Streamline');
model.result('pg16').feature('str1').set('posmethod', 'uniform');
model.result('pg16').feature('str1').set('udist', 0.025);
model.result('pg16').feature('str1').set('pointtype', 'arrow');
model.result('pg16').feature('str1').set('inheritplot', 'surf1');
model.result('pg16').feature('str1').set('inheritcolor', false);
model.result('pg16').feature('str1').create('def1', 'Deform');
model.result('pg16').run;
model.result('pg16').run;
model.result('pg16').run;
model.result.duplicate('pg17', 'pg16');
model.result('pg17').run;
model.result('pg17').label('TE1 Mode');
model.result('pg17').setIndex('looplevel', 89, 1);
model.result('pg17').run;
model.result.dataset.duplicate('arr2', 'arr1');
model.result.dataset('arr2').label('Array 2D 1: imag k');
model.result.dataset('arr2').set('data', 'dset4');
model.result.dataset('arr2').set('wavevector', {'i*k' '0'});
model.result('pg17').run;
model.result.duplicate('pg18', 'pg17');
model.result('pg18').run;
model.result('pg18').label('Evanescent Mode');
model.result('pg18').set('data', 'arr2');
model.result('pg18').setIndex('looplevel', 29, 1);
model.result('pg18').setIndex('looplevel', 37, 0);
model.result('pg18').run;

model.title('Dispersion Diagram of a Thin-Film BAW Structure');

model.description('This model shows how to create dispersion diagrams from simulation results by extending the tutorial Thin-Film BAW Composite Resonator. The dispersion curve can be plotted against both real and imaginary values of the wave number, corresponding to the propagating modes and evanescent modes, respectively. Each mode can also be visualized by plotting its displacement field. The consideration about such propagating and evanescent modes is an important part of the process in selecting appropriate design parameters for the layer structure of a BAW resonator.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;

model.result('pg15').feature('tbls2').set('showparam', false);
model.result('pg15').feature('tbls1').set('showparam', false);

model.label('thin_film_baw_resonator_dispersion_diagram.mph');

model.modelNode.label('Components');

out = model;
