function out = model
%
% viscoplastic_solder_joints.m
%
% Model exported on May 26 2025, 21:31 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Nonlinear_Structural_Materials_Module/Viscoplasticity');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');
model.physics('solid').prop('StructuralTransientBehavior').set('StructuralTransientBehavior', 'Quasistatic');
model.physics.create('ht', 'HeatTransfer', 'geom1');
model.physics('ht').model('comp1');

model.multiphysics.create('te1', 'ThermalExpansion', 'geom1', 3);
model.multiphysics('te1').set('Heat_physics', 'ht');
model.multiphysics('te1').set('Solid_physics', 'solid');
model.multiphysics('te1').selection.all;

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/solid', true);
model.study('std1').feature('time').setSolveFor('/physics/ht', true);
model.study('std1').feature('time').setSolveFor('/multiphysics/te1', true);

model.param.set('T0', '20[degC]');
model.param.descr('T0', 'Initial temperature');

model.func.create('an1', 'Analytic');
model.func('an1').set('funcname', 'power');
model.func('an1').set('expr', '(flc2hs(x-0.1,0.1)*50)-flc2hs(x-(4.1),0.1)*40');
model.func('an1').setIndex('argunit', 'h', 0);
model.func('an1').set('fununit', 'MW/m^3');

model.geom('geom1').create('imp1', 'Import');
model.geom('geom1').feature('imp1').set('filename', 'viscoplastic_solder_joints.mphbin');
model.geom('geom1').feature('imp1').importData;
model.geom('geom1').run('fin');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');
model.selection('sel1').label('FR4');
model.selection('sel1').set([1]);
model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').label('Copper');
model.selection('sel2').set([2]);
model.selection.create('sel3', 'Explicit');
model.selection('sel3').model('comp1');
model.selection('sel3').label('Silicon');
model.selection('sel3').set([3 24]);
model.selection.create('sel4', 'Explicit');
model.selection('sel4').model('comp1');
model.selection('sel4').label('Solder');
model.selection('sel4').all;
model.selection('sel4').set([4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40]);
model.selection.duplicate('sel5', 'sel4');
model.selection('sel5').label('Solder_face');
model.selection('sel5').geom('geom1', 3, 2, {'exterior'});
model.selection('sel5').set([4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40]);
model.selection.create('sel6', 'Explicit');
model.selection('sel6').model('comp1');
model.selection('sel6').label('Symmetry Boundaries');
model.selection('sel6').geom(2);
model.selection('sel6').set([17 19 182 183]);
model.selection.create('com1', 'Complement');
model.selection('com1').model('comp1');
model.selection('com1').label('Symmetry Complement');
model.selection('com1').set('entitydim', 2);
model.selection('com1').set('input', {'sel6'});

model.common('cminpt').set('modified', {'strainreferencetemperature' 'T0'});

model.physics('solid').feature('lemm1').create('vpl1', 'Viscoplasticity', 3);
model.physics('solid').feature('lemm1').feature('vpl1').selection.named('sel4');
model.physics('solid').feature('lemm1').set('CalculateDissipatedEnergy', true);
model.physics('solid').create('sym1', 'SymmetrySolid', 2);
model.physics('solid').feature('sym1').selection.named('sel6');
model.physics('solid').create('disp1', 'Displacement0', 0);
model.physics('solid').feature('disp1').selection.set([193]);
model.physics('solid').feature('disp1').setIndex('Direction', 'prescribed', 2);
model.physics('ht').feature('init1').set('Tinit', 'T0');
model.physics('ht').create('sym1', 'Symmetry', 2);
model.physics('ht').feature('sym1').selection.named('sel6');
model.physics('ht').create('hs1', 'HeatSource', 3);
model.physics('ht').feature('hs1').selection.named('sel3');
model.physics('ht').feature('hs1').set('Q0', 'power(t)');
model.physics('ht').create('hf1', 'HeatFluxBoundary', 2);
model.physics('ht').feature('hf1').selection.named('com1');
model.physics('ht').feature('hf1').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht').feature('hf1').set('h', 10);
model.physics('ht').feature('hf1').set('Text', 'T0');

model.material.create('mat1', 'Common', '');
model.material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat1').label('FR4 (Circuit Board)');
model.material('mat1').set('family', 'pcbgreen');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'0.004[S/m]' '0' '0' '0' '0.004[S/m]' '0' '0' '0' '0.004[S/m]'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'4.5' '0' '0' '0' '4.5' '0' '0' '0' '4.5'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'18e-6[1/K]' '0' '0' '0' '18e-6[1/K]' '0' '0' '0' '18e-6[1/K]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', '1369[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('density', '1900[kg/m^3]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'0.3[W/(m*K)]' '0' '0' '0' '0.3[W/(m*K)]' '0' '0' '0' '0.3[W/(m*K)]'});
model.material('mat1').propertyGroup('Enu').set('E', '22[GPa]');
model.material('mat1').propertyGroup('Enu').set('nu', '0.15');
model.material.create('mat2', 'Common', '');
model.material('mat2').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat2').propertyGroup.create('linzRes', 'Linearized resistivity');
model.material('mat2').label('Copper');
model.material('mat2').set('family', 'copper');
model.material('mat2').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('electricconductivity', {'5.998e7[S/m]' '0' '0' '0' '5.998e7[S/m]' '0' '0' '0' '5.998e7[S/m]'});
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'17e-6[1/K]' '0' '0' '0' '17e-6[1/K]' '0' '0' '0' '17e-6[1/K]'});
model.material('mat2').propertyGroup('def').set('heatcapacity', '385[J/(kg*K)]');
model.material('mat2').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('density', '8960[kg/m^3]');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'400[W/(m*K)]' '0' '0' '0' '400[W/(m*K)]' '0' '0' '0' '400[W/(m*K)]'});
model.material('mat2').propertyGroup('Enu').set('E', '110[GPa]');
model.material('mat2').propertyGroup('Enu').set('nu', '0.35');
model.material('mat2').propertyGroup('linzRes').set('rho0', '1.72e-8[ohm*m]');
model.material('mat2').propertyGroup('linzRes').set('alpha', '0.0039[1/K]');
model.material('mat2').propertyGroup('linzRes').set('Tref', '298[K]');
model.material('mat2').propertyGroup('linzRes').addInput('temperature');
model.material.create('mat3', 'Common', '');
model.material('mat3').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat3').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat3').label('Silicon');
model.material('mat3').set('family', 'custom');
model.material('mat3').set('customspecular', [0.7843137254901961 1 1]);
model.material('mat3').set('customdiffuse', [0.6666666666666666 0.6666666666666666 0.7058823529411765]);
model.material('mat3').set('customambient', [0.6666666666666666 0.6666666666666666 0.7058823529411765]);
model.material('mat3').set('noise', true);
model.material('mat3').set('fresnel', 0.7);
model.material('mat3').set('metallic', 0);
model.material('mat3').set('pearl', 0);
model.material('mat3').set('diffusewrap', 0);
model.material('mat3').set('clearcoat', 0);
model.material('mat3').set('reflectance', 0);
model.material('mat3').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('def').set('electricconductivity', {'1e-12[S/m]' '0' '0' '0' '1e-12[S/m]' '0' '0' '0' '1e-12[S/m]'});
model.material('mat3').propertyGroup('def').set('thermalexpansioncoefficient', {'2.6e-6[1/K]' '0' '0' '0' '2.6e-6[1/K]' '0' '0' '0' '2.6e-6[1/K]'});
model.material('mat3').propertyGroup('def').set('heatcapacity', '700[J/(kg*K)]');
model.material('mat3').propertyGroup('def').set('relpermittivity', {'11.7' '0' '0' '0' '11.7' '0' '0' '0' '11.7'});
model.material('mat3').propertyGroup('def').set('density', '2329[kg/m^3]');
model.material('mat3').propertyGroup('def').set('thermalconductivity', {'130[W/(m*K)]' '0' '0' '0' '130[W/(m*K)]' '0' '0' '0' '130[W/(m*K)]'});
model.material('mat3').propertyGroup('Enu').set('E', '170[GPa]');
model.material('mat3').propertyGroup('Enu').set('nu', '0.28');
model.material('mat3').propertyGroup('RefractiveIndex').set('n', {'3.48' '0' '0' '0' '3.48' '0' '0' '0' '3.48'});
model.material.create('mat4', 'Common', '');
model.material('mat4').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat4').propertyGroup.create('linzRes', 'Linearized resistivity');
model.material('mat4').propertyGroup.create('Anand', 'Anand viscoplasticity');
model.material('mat4').label('Solder, 60Sn-40Pb');
model.material('mat4').set('family', 'custom');
model.material('mat4').set('customspecular', [0.7843137254901961 1 1]);
model.material('mat4').set('customdiffuse', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat4').set('noise', true);
model.material('mat4').set('fresnel', 0.9);
model.material('mat4').set('roughness', 0.1);
model.material('mat4').set('metallic', 0);
model.material('mat4').set('pearl', 0);
model.material('mat4').set('diffusewrap', 0);
model.material('mat4').set('clearcoat', 0);
model.material('mat4').set('reflectance', 0);
model.material('mat4').propertyGroup('def').set('electricconductivity', {'6.67e6[S/m]' '0' '0' '0' '6.67e6[S/m]' '0' '0' '0' '6.67e6[S/m]'});
model.material('mat4').propertyGroup('def').set('thermalexpansioncoefficient', {'21e-6[1/K]' '0' '0' '0' '21e-6[1/K]' '0' '0' '0' '21e-6[1/K]'});
model.material('mat4').propertyGroup('def').set('heatcapacity', '150[J/(kg*K)]');
model.material('mat4').propertyGroup('def').set('density', '9000[kg/m^3]');
model.material('mat4').propertyGroup('def').set('thermalconductivity', {'50[W/(m*K)]' '0' '0' '0' '50[W/(m*K)]' '0' '0' '0' '50[W/(m*K)]'});
model.material('mat4').propertyGroup('Enu').set('E', '10[GPa]');
model.material('mat4').propertyGroup('Enu').set('nu', '0.4');
model.material('mat4').propertyGroup('linzRes').set('rho0', '4.99e-7[ohm*m]');
model.material('mat4').propertyGroup('linzRes').addInput('temperature');
model.material('mat4').propertyGroup('Anand').set('A_ana', '1.49e7');
model.material('mat4').propertyGroup('Anand').set('Q_ana', '90046');
model.material('mat4').propertyGroup('Anand').set('xi_ana', '11');
model.material('mat4').propertyGroup('Anand').set('m_ana', '0.303');
model.material('mat4').propertyGroup('Anand').set('ssat_ana', '80.42[MPa]');
model.material('mat4').propertyGroup('Anand').set('sa_init', '56.33[MPa]');
model.material('mat4').propertyGroup('Anand').set('h0_ana', '2640.75[MPa]');
model.material('mat4').propertyGroup('Anand').set('a_ana', '1.34');
model.material('mat4').propertyGroup('Anand').set('n_ana', '0.0231');
model.material.create('matlnk1', 'Link', 'comp1');
model.material('matlnk1').selection.named('sel1');
model.material('matlnk1').set('family', 'pcbgreen');

model.view('view1').set('showmaterial', true);

model.material.create('matlnk2', 'Link', 'comp1');
model.material('matlnk2').selection.named('sel2');
model.material('matlnk2').set('link', 'mat2');
model.material('matlnk2').set('family', 'copper');
model.material.create('matlnk3', 'Link', 'comp1');
model.material('matlnk3').selection.named('sel3');
model.material('matlnk3').set('link', 'mat3');
model.material('matlnk3').set('color', 'black');
model.material.create('matlnk4', 'Link', 'comp1');
model.material('matlnk4').selection.named('sel4');
model.material('matlnk4').set('link', 'mat4');
model.material('matlnk4').set('family', 'steel');

model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('ftet1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('ftet1').selection.named('sel4');
model.mesh('mesh1').feature('size').set('hauto', 4);
model.mesh('mesh1').run;

model.view('view1').set('renderwireframe', true);

model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.set([7]);
model.mesh('mesh1').run;
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe1').selection.named('sel2');
model.mesh('mesh1').run;
model.mesh('mesh1').create('ftet2', 'FreeTet');
model.mesh('mesh1').run;

model.view('view1').set('renderwireframe', false);

model.study('std1').feature('time').set('tunit', 'h');
model.study('std1').feature('time').set('tlist', '0 0.005 range(0.025,0.025,0.5) range(0.75,0.25,3.75) 3.975 4+{range(0,0.025,0.5) range(0.75,0.25,2)}');
model.study('std1').feature('time').setEntry('activate', 'solid', false);
model.study('std1').create('time2', 'Transient');
model.study('std1').feature('time2').set('tunit', 'h');
model.study('std1').feature('time2').set('tlist', '0 0.005 range(0.025,0.025,0.5) range(0.75,0.25,3.75) 3.975 4+{range(0,0.025,0.5) range(0.75,0.25,2)}');
model.study('std1').feature('time2').setEntry('activate', 'ht', false);
model.study('std1').feature('time2').set('usesol', true);
model.study('std1').feature('time2').set('notsolmethod', 'sol');
model.study('std1').feature('time2').set('notstudy', 'std1');
model.study('std1').feature('time2').set('notsolnum', 'all');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', '0 0.005 range(0.025,0.025,0.5) range(0.75,0.25,3.75) 3.975 4+{range(0,0.025,0.5) range(0.75,0.25,2)}');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('atolmethod', {'comp1_solid_Wvp' 'global' 'comp1_T' 'global' 'comp1_u' 'global'});
model.sol('sol1').feature('t1').set('atol', {'comp1_solid_Wvp' '1e-3' 'comp1_T' '1e-3' 'comp1_u' '1e-3'});
model.sol('sol1').feature('t1').set('atolvaluemethod', {'comp1_solid_Wvp' 'factor' 'comp1_T' 'factor' 'comp1_u' 'factor'});
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('estrat', 'exclude');
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d1').label('Direct, heat transfer variables ht (te1)');
model.sol('sol1').feature('t1').create('d2', 'Direct');
model.sol('sol1').feature('t1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d2').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('t1').feature('d2').label('Suggested Direct Solver solid (te1)');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', true);
model.sol('sol1').feature('t1').feature('i1').label('Suggested Iterative Solver solid (te1)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('t1').create('i2', 'Iterative');
model.sol('sol1').feature('t1').feature('i2').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i2').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i2').set('itrestart', 50);
model.sol('sol1').feature('t1').feature('i2').set('rhob', 20);
model.sol('sol1').feature('t1').feature('i2').set('maxlinit', 10000);
model.sol('sol1').feature('t1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i2').label('AMG, heat transfer variables ht (te1)');
model.sol('sol1').feature('t1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'time2');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_u').set('scaleval', '1e-2*0.020722210306818162');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('initsoluse', 'sol2');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('notsoluse', 'sol2');
model.sol('sol1').feature('v2').set('control', 'time2');
model.sol('sol1').create('t2', 'Time');
model.sol('sol1').feature('t2').set('tlist', '0 0.005 range(0.025,0.025,0.5) range(0.75,0.25,3.75) 3.975 4+{range(0,0.025,0.5) range(0.75,0.25,2)}');
model.sol('sol1').feature('t2').set('plot', 'off');
model.sol('sol1').feature('t2').set('plotgroup', 'Default');
model.sol('sol1').feature('t2').set('plotfreq', 'tout');
model.sol('sol1').feature('t2').set('probesel', 'all');
model.sol('sol1').feature('t2').set('probes', {});
model.sol('sol1').feature('t2').set('probefreq', 'tsteps');
model.sol('sol1').feature('t2').set('rtol', 0.001);
model.sol('sol1').feature('t2').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t2').set('reacf', true);
model.sol('sol1').feature('t2').set('storeudot', true);
model.sol('sol1').feature('t2').set('endtimeinterpolation', true);
model.sol('sol1').feature('t2').set('control', 'time2');
model.sol('sol1').feature('t2').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t2').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t2').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t2').feature('fc1').set('minstep', 0.5);
model.sol('sol1').feature('t2').feature('fc1').set('useminsteprecovery', 'on');
model.sol('sol1').feature('t2').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('t2').feature('fc1').set('maxiter', 4);
model.sol('sol1').feature('t2').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('t2').create('d1', 'Direct');
model.sol('sol1').feature('t2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t2').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('t2').feature('d1').label('Suggested Direct Solver solid (te1)');
model.sol('sol1').feature('t2').create('i1', 'Iterative');
model.sol('sol1').feature('t2').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t2').feature('i1').set('rhob', 400);
model.sol('sol1').feature('t2').feature('i1').set('nlinnormuse', true);
model.sol('sol1').feature('t2').feature('i1').label('Suggested Iterative Solver solid (te1)');
model.sol('sol1').feature('t2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t2').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol1').feature('t2').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('t2').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('t2').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('t2').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('t2').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t2').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t2').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('t2').create('d2', 'Direct');
model.sol('sol1').feature('t2').feature('d2').set('linsolver', 'pardiso');
model.sol('sol1').feature('t2').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t2').feature('d2').label('Direct, heat transfer variables ht (te1)');
model.sol('sol1').feature('t2').create('i2', 'Iterative');
model.sol('sol1').feature('t2').feature('i2').set('linsolver', 'gmres');
model.sol('sol1').feature('t2').feature('i2').set('prefuntype', 'left');
model.sol('sol1').feature('t2').feature('i2').set('itrestart', 50);
model.sol('sol1').feature('t2').feature('i2').set('rhob', 20);
model.sol('sol1').feature('t2').feature('i2').set('maxlinit', 10000);
model.sol('sol1').feature('t2').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('t2').feature('i2').label('AMG, heat transfer variables ht (te1)');
model.sol('sol1').feature('t2').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('t2').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t2').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('t2').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t2').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('t2').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('t2').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t2').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t2').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('t2').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('t2').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('t2').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('t2').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('t2').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('t2').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('t2').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('t2').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t2').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t2').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t2').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t2').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t2').feature('fc1').set('minstep', 0.5);
model.sol('sol1').feature('t2').feature('fc1').set('useminsteprecovery', 'on');
model.sol('sol1').feature('t2').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('t2').feature('fc1').set('maxiter', 4);
model.sol('sol1').feature('t2').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('t2').feature.remove('fcDef');
model.sol('sol1').feature('v2').set('notsolnum', 'all');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('t1').set('storeudot', false);
model.sol('sol1').feature('t1').set('tstepsbdf', 'strict');
model.sol('sol1').feature('v2').feature('comp1_solid_Wvp').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_solid_Wvp').set('scaleval', '1e5');
model.sol('sol1').feature('t2').set('storeudot', false);
model.sol('sol1').feature('t2').set('tstepsbdf', 'strict');
model.sol('sol1').feature('t2').set('estrat', 'exclude');
model.sol('sol1').feature('t2').create('se1', 'Segregated');
model.sol('sol1').feature('t2').feature('se1').set('segterm', 'iter');
model.sol('sol1').feature('t2').feature('se1').feature('ssDef').label('Displacement Field');
model.sol('sol1').feature('t2').feature('se1').feature('ssDef').set('segvar', {'comp1_T' 'comp1_u'});
model.sol('sol1').feature('t2').feature('se1').feature('ssDef').set('subtermconst', 'tol');
model.sol('sol1').feature('t2').feature('se1').feature('ssDef').set('subntolfact', 1);
model.sol('sol1').feature('t2').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t2').feature('se1').feature('ss1').label('Energy Dissipation');
model.sol('sol1').feature('t2').feature('se1').feature('ss1').set('subtermconst', 'tol');
model.sol('sol1').feature('t2').feature('se1').feature('ss1').set('subntolfact', 1);
model.sol('sol1').feature('t2').feature('se1').feature('ss1').set('segvar', {'comp1_solid_Wvp'});
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 63, 0);
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('vol1', 'Volume');
model.result('pg1').feature('vol1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('vol1').set('threshold', 'manual');
model.result('pg1').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg1').feature('vol1').set('colortable', 'Rainbow');
model.result('pg1').feature('vol1').set('colortabletrans', 'none');
model.result('pg1').feature('vol1').set('colorscalemode', 'linear');
model.result('pg1').feature('vol1').set('resolution', 'custom');
model.result('pg1').feature('vol1').set('refine', 2);
model.result('pg1').feature('vol1').set('colortable', 'Prism');
model.result('pg1').feature('vol1').create('def', 'Deform');
model.result('pg1').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg1').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Temperature (ht)');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 63, 0);
model.result('pg2').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond3/pcond3/pg1');
model.result('pg2').feature.create('vol1', 'Volume');
model.result('pg2').feature('vol1').set('showsolutionparams', 'on');
model.result('pg2').feature('vol1').set('solutionparams', 'parent');
model.result('pg2').feature('vol1').set('expr', 'T');
model.result('pg2').feature('vol1').set('colortable', 'HeatCameraLight');
model.result('pg2').feature('vol1').set('smooth', 'internal');
model.result('pg2').feature('vol1').set('showsolutionparams', 'on');
model.result('pg2').feature('vol1').set('data', 'parent');
model.result('pg1').run;
model.result('pg2').run;
model.result('pg2').setIndex('looplevel', 24, 0);
model.result('pg2').run;
model.result('pg2').feature('vol1').set('unit', 'degC');
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('Deformation Resistance History');
model.result('pg3').set('titletype', 'none');
model.result('pg3').create('ptgr1', 'PointGraph');
model.result('pg3').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg3').feature('ptgr1').set('linewidth', 'preference');
model.result('pg3').feature('ptgr1').selection.set([36]);
model.result('pg3').feature('ptgr1').set('expr', 'solid.saGp');
model.result('pg3').feature('ptgr1').set('unit', 'MPa');
model.result('pg3').feature('ptgr1').set('linewidth', 2);
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Strain History');
model.result('pg4').create('ptgr1', 'PointGraph');
model.result('pg4').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg4').feature('ptgr1').set('linewidth', 'preference');
model.result('pg4').feature('ptgr1').selection.set([36]);
model.result('pg4').feature('ptgr1').set('expr', 'solid.gpeval(solid.el13)');
model.result('pg4').feature('ptgr1').set('linewidth', 2);
model.result('pg4').feature('ptgr1').set('legend', true);
model.result('pg4').feature('ptgr1').set('legendmethod', 'manual');
model.result('pg4').feature('ptgr1').setIndex('legends', 'Total strain', 0);
model.result('pg4').feature.duplicate('ptgr2', 'ptgr1');
model.result('pg4').run;
model.result('pg4').feature('ptgr2').set('expr', 'solid.gpeval(solid.evpl13)');
model.result('pg4').feature('ptgr2').setIndex('legends', 'Viscoplastic strain', 0);
model.result('pg4').feature.duplicate('ptgr3', 'ptgr2');
model.result('pg4').run;
model.result('pg4').feature('ptgr3').set('expr', 'solid.gpeval(solid.el13-solid.evpl13)');
model.result('pg4').feature('ptgr3').setIndex('legends', 'Elastic strain', 0);
model.result('pg4').run;
model.result('pg4').set('ylabelactive', true);
model.result('pg4').set('ylabel', 'Shear strain, xz-component');
model.result('pg4').set('titletype', 'none');
model.result('pg4').set('legendlayout', 'outside');
model.result('pg4').set('legendposoutside', 'bottom');
model.result('pg4').run;
model.result('pg3').run;
model.result.duplicate('pg5', 'pg3');
model.result('pg5').run;
model.result('pg5').label('Dissipation History');
model.result('pg5').run;
model.result('pg5').feature('ptgr1').set('expr', 'solid.WvpGp');
model.result('pg5').feature('ptgr1').set('descr', 'Viscoplastic dissipation density');
model.result('pg5').feature('ptgr1').set('unit', 'kJ/m^3');
model.result('pg5').run;
model.result('pg5').run;
model.result.duplicate('pg6', 'pg5');
model.result('pg6').run;
model.result('pg6').label('Temperature History');
model.result('pg6').run;
model.result('pg6').feature('ptgr1').set('expr', 'T');
model.result('pg6').feature('ptgr1').set('descr', 'Temperature');
model.result('pg6').feature('ptgr1').set('unit', 'degC');
model.result('pg6').run;
model.result('pg5').run;

model.title('Viscoplastic Creep in Solder Joints');

model.description('This example studies viscoplastic creep in solder joints under thermal loading using the Anand viscoplasticity model.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('viscoplastic_solder_joints.mph');

model.modelNode.label('Components');

out = model;
