function out = model
%
% thin_domain.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Chemical_Reaction_Engineering_Module/Tutorials');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('tds', 'DilutedSpecies', 'geom1', {'c'});
model.physics.create('spf', 'LaminarFlow', 'geom1');
model.physics('spf').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/tds', true);
model.study('std1').feature('stat').setSolveFor('/physics/spf', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('dz', '10[mm]', 'Out-of-plane thickness');
model.param.set('L', '1[m]', 'Side length of domain');
model.param.set('u0', '0.01[mm/s]', 'Inlet fluid velocity');
model.param.set('cb', '3[mol/m^3]', 'Parameter for flux expression');
model.param.set('kc', '8e-5[m/h]', 'Parameter for flux expression');
model.param.set('conc', '10[mol/m^3]', 'Concentration for boundary condition');
model.param.set('rho', '1000[kg/m^3]', 'Fluid density');
model.param.set('visc', '1e-3[s*Pa]', 'Fluid dynamic viscosity');

model.geom('geom1').create('sq1', 'Square');
model.geom('geom1').feature('sq1').set('size', 'L');
model.geom('geom1').run('sq1');
model.geom('geom1').run;

model.physics('tds').prop('dz').set('dz', 'dz');
model.physics('tds').feature('cdm1').set('u_src', 'root.comp1.u');
model.physics('tds').create('conc1', 'Concentration', 1);
model.physics('tds').feature('conc1').setIndex('species', true, 0);
model.physics('tds').feature('conc1').setIndex('c0', 'conc', 0);
model.physics('tds').feature('conc1').selection.set([1]);
model.physics('tds').create('opf1', 'OutOfPlaneFlux', 2);
model.physics('tds').feature('opf1').selection.set([1]);
model.physics('tds').feature('opf1').setIndex('speciesUp', true, 0);
model.physics('tds').feature('opf1').setIndex('J0_u', '-kc*(c-cb)', 0);
model.physics('spf').prop('PhysicalModelProperty').set('ShallowChannelProperty', true);
model.physics('spf').prop('PhysicalModelProperty').set('dz', 'dz');
model.physics('spf').feature('fp1').set('rho_mat', 'userdef');
model.physics('spf').feature('fp1').set('rho', 'rho');
model.physics('spf').feature('fp1').set('mu_mat', 'userdef');
model.physics('spf').feature('fp1').set('mu', 'visc');
model.physics('spf').feature('init1').set('u_init', {'u0' '0' '0'});
model.physics('spf').create('inl1', 'InletBoundary', 1);
model.physics('spf').feature('inl1').selection.set([1]);
model.physics('spf').feature('inl1').set('BoundaryCondition', 'FullyDevelopedFlow');
model.physics('spf').feature('inl1').set('Uavfdf', 'u0');
model.physics('spf').create('out1', 'OutletBoundary', 1);
model.physics('spf').feature('out1').selection.set([4]);

model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature.remove('size1');
model.mesh('mesh1').feature.remove('cr1');
model.mesh('mesh1').feature.remove('ftri1');
model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature.move('map1', 1);
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([2 3]);
model.mesh('mesh1').feature('map1').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis1').set('elemcount', 70);
model.mesh('mesh1').feature('map1').feature('dis1').set('elemratio', 10);
model.mesh('mesh1').feature('map1').feature('dis1').set('reverse', true);
model.mesh('mesh1').run('map1');
model.mesh('mesh1').feature('map1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis2').selection.set([1 4]);
model.mesh('mesh1').feature('map1').feature('dis2').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis2').set('elemcount', 20);
model.mesh('mesh1').feature('map1').feature('dis2').set('elemratio', 5);
model.mesh('mesh1').feature('map1').feature('dis2').set('symmetric', true);
model.mesh('mesh1').run('map1');
model.mesh('mesh1').feature('bl1').feature('blp1').set('blnlayers', 12);
model.mesh('mesh1').feature('bl1').feature('blp1').set('blhminfact', 1);
model.mesh('mesh1').feature('bl1').set('smoothtransition', false);
model.mesh('mesh1').run('bl1');

model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'dz', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);
model.study('std1').feature('param').setIndex('pname', 'dz', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);
model.study('std1').feature('param').setIndex('plistarr', '0.01, 0.005, 0.001', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'dz'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'0.01, 0.005, 0.001'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'m'});
model.sol('sol1').feature('s1').feature('p1').set('sweeptype', 'sparse');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'Default');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'param');
model.sol('sol1').feature('s1').set('control', 'stat');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, fluid flow variables (spf) (Merged)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, concentrations (tds)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').create('i2', 'Iterative');
model.sol('sol1').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i2').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i2').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i2').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i2').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i2').label('AMG, fluid flow variables (spf)');
model.sol('sol1').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 3, 0);
model.result('pg1').label('Concentration (tds)');
model.result('pg1').set('titletype', 'custom');
model.result('pg1').set('prefixintitle', '');
model.result('pg1').set('expressionintitle', false);
model.result('pg1').set('typeintitle', true);
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'c'});
model.result('pg1').create('str1', 'Streamline');
model.result('pg1').feature('str1').set('expr', {'tds.tflux_cx' 'tds.tflux_cy'});
model.result('pg1').feature('str1').set('posmethod', 'uniform');
model.result('pg1').feature('str1').set('recover', 'pprint');
model.result('pg1').feature('str1').set('pointtype', 'arrow');
model.result('pg1').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg1').feature('str1').set('color', 'gray');
model.result.dataset('dset1').set('geom', 'geom1');
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').label('Velocity (spf)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 3, 0);
model.result('pg2').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg1');
model.result('pg2').feature.create('surf1', 'Surface');
model.result('pg2').feature('surf1').label('Surface');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('expr', 'spf.U');
model.result('pg2').feature('surf1').set('smooth', 'internal');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('data', 'parent');
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').label('Pressure (spf)');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').set('data', 'dset1');
model.result('pg3').setIndex('looplevel', 3, 0);
model.result('pg3').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg2');
model.result('pg3').feature.create('con1', 'Contour');
model.result('pg3').feature('con1').label('Contour');
model.result('pg3').feature('con1').set('showsolutionparams', 'on');
model.result('pg3').feature('con1').set('expr', 'p');
model.result('pg3').feature('con1').set('number', 40);
model.result('pg3').feature('con1').set('levelrounding', false);
model.result('pg3').feature('con1').set('smooth', 'internal');
model.result('pg3').feature('con1').set('showsolutionparams', 'on');
model.result('pg3').feature('con1').set('data', 'parent');
model.result('pg1').run;
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Concentration profiles');
model.result('pg4').create('lngr1', 'LineGraph');
model.result('pg4').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg4').feature('lngr1').set('linewidth', 'preference');
model.result('pg4').feature('lngr1').label('2D');
model.result('pg4').feature('lngr1').set('data', 'dset1');
model.result('pg4').feature('lngr1').selection.set([2]);
model.result('pg4').feature('lngr1').set('xdata', 'expr');
model.result('pg4').feature('lngr1').set('xdataexpr', 'x');
model.result('pg4').feature('lngr1').set('linestyle', 'dotted');
model.result('pg4').feature('lngr1').set('linemarker', 'cycle');
model.result('pg4').feature('lngr1').set('markerpos', 'interp');
model.result('pg4').feature('lngr1').set('legend', true);
model.result('pg4').feature('lngr1').set('legendmethod', 'manual');
model.result('pg4').feature('lngr1').setIndex('legends', 'dz 0.01[m] - 2D', 0);
model.result('pg4').run;
model.result('pg4').feature('lngr1').setIndex('legends', 'dz 0.005[m] - 2D', 1);
model.result('pg4').feature('lngr1').setIndex('legends', 'dz 0.001[m] - 2D', 2);
model.result('pg4').run;
model.result('pg4').set('legendpos', 'manual');
model.result('pg4').set('legendposy', 0.2);

model.modelNode.create('comp2', true);

model.geom.create('geom2', 3);
model.geom('geom2').model('comp2');

model.mesh.create('mesh2', 'geom2');

model.geom('geom2').create('blk1', 'Block');
model.geom('geom2').feature('blk1').set('size', {'L' 'L' 'dz'});
model.geom('geom2').run('blk1');
model.geom('geom2').run('fin');

model.physics.create('tds2', 'DilutedSpecies', 'geom2', {'c2'});

model.study('std1').feature('stat').setSolveFor('/physics/tds2', true);

model.physics.create('spf2', 'LaminarFlow', 'geom2');
model.physics('spf2').model('comp2');

model.study('std1').feature('stat').setSolveFor('/physics/spf2', true);

model.physics('tds2').feature('cdm1').set('u_src', 'root.comp2.u2');
model.physics('tds2').create('conc1', 'Concentration', 2);
model.physics('tds2').feature('conc1').setIndex('species', true, 0);
model.physics('tds2').feature('conc1').setIndex('c0', 'conc', 0);
model.physics('tds2').feature('conc1').selection.set([1]);
model.physics('tds2').create('fl1', 'FluxBoundary', 2);
model.physics('tds2').feature('fl1').setIndex('species', true, 0);
model.physics('tds2').feature('fl1').setIndex('J0', '-kc*(c2-cb)', 0);
model.physics('tds2').feature('fl1').selection.set([4]);
model.physics('spf2').feature('fp1').set('rho_mat', 'userdef');
model.physics('spf2').feature('fp1').set('rho', 'rho');
model.physics('spf2').feature('fp1').set('mu_mat', 'userdef');
model.physics('spf2').feature('fp1').set('mu', 'visc');
model.physics('spf2').feature('init1').set('u_init', {'u0' '0' '0'});
model.physics('spf2').create('inl1', 'InletBoundary', 2);
model.physics('spf2').feature('inl1').set('BoundaryCondition', 'FullyDevelopedFlow');
model.physics('spf2').feature('inl1').set('Uavfdf', 'u0');
model.physics('spf2').feature('inl1').selection.set([1]);
model.physics('spf2').create('out1', 'OutletBoundary', 2);
model.physics('spf2').feature('out1').set('NormalFlow', true);
model.physics('spf2').feature('out1').selection.set([6]);

model.mesh('mesh2').automatic(false);
model.mesh('mesh2').feature.remove('size1');
model.mesh('mesh2').feature.remove('cr1');
model.mesh('mesh2').feature.remove('ftet1');
model.mesh('mesh2').create('map1', 'Map');
model.mesh('mesh2').feature.move('map1', 1);
model.mesh('mesh2').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh2').feature('map1').feature('dis1').selection.set([5 8]);
model.mesh('mesh2').feature('map1').feature('dis1').set('type', 'predefined');
model.mesh('mesh2').feature('map1').feature('dis1').set('elemcount', 70);
model.mesh('mesh2').feature('map1').feature('dis1').set('elemratio', 10);
model.mesh('mesh2').run('map1');
model.mesh('mesh2').feature('map1').selection.set([4]);
model.mesh('mesh2').feature('map1').feature.duplicate('dis2', 'dis1');
model.mesh('mesh2').feature('map1').feature('dis2').selection.set([4 11]);
model.mesh('mesh2').feature('map1').feature('dis2').set('elemcount', 20);
model.mesh('mesh2').feature('map1').feature('dis2').set('symmetric', true);
model.mesh('mesh2').run('map1');
model.mesh('mesh2').create('swe1', 'Sweep');
model.mesh('mesh2').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh2').feature('swe1').feature('dis1').set('type', 'predefined');
model.mesh('mesh2').feature('swe1').feature('dis1').set('elemcount', 10);
model.mesh('mesh2').feature('swe1').feature('dis1').set('elemratio', 5);
model.mesh('mesh2').feature('swe1').feature('dis1').set('symmetric', true);
model.mesh('mesh2').feature('bl1').selection.geom('geom2');
model.mesh('mesh2').feature('bl1').feature('blp1').selection.set([2 5]);
model.mesh('mesh2').feature('bl1').set('smoothtransition', false);
model.mesh('mesh2').run;

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/tds', false);
model.study('std2').feature('stat').setSolveFor('/physics/spf', false);
model.study('std2').feature('stat').setSolveFor('/physics/tds2', true);
model.study('std2').feature('stat').setSolveFor('/physics/spf2', true);
model.study('std2').create('param', 'Parametric');
model.study('std2').feature('param').setIndex('pname', 'dz', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', 'm', 0);
model.study('std2').feature('param').setIndex('pname', 'dz', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', 'm', 0);
model.study('std2').feature('param').setIndex('plistarr', '0.01,0.005,0.001', 0);
model.study('std2').feature('param').setIndex('punit', 'm', 0);

model.sol.create('sol2');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh2').stat.selection.geom(3);
model.mesh('mesh2').stat.selection.set([1]);
model.mesh('mesh2').stat.selection.geom(3);
model.mesh('mesh2').stat.selection.set([1]);

model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').set('stol', 0.001);
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('se1', 'Segregated');
model.sol('sol2').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol2').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp2_p2' 'comp2_u2' 'comp2_spf2_inl1_Pinlfdf'});
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('subdamp', 0.5);
model.sol('sol2').feature('s1').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s1').feature('d1').label('Direct, fluid flow variables (spf2)');
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol2').feature('s1').feature('se1').feature('ss1').label('Velocity U2, Pressure P2');
model.sol('sol2').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol2').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp2_c2'});
model.sol('sol2').feature('s1').feature('se1').feature('ss2').set('subdamp', 0.35);
model.sol('sol2').feature('s1').feature('se1').feature('ss2').set('subtermconst', 'itertol');
model.sol('sol2').feature('s1').feature('se1').feature('ss2').set('subntolfact', 1);
model.sol('sol2').feature('s1').feature('se1').feature('ss2').set('subiter', 3);
model.sol('sol2').feature('s1').create('d2', 'Direct');
model.sol('sol2').feature('s1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s1').feature('d2').label('Direct, concentrations (tds2)');
model.sol('sol2').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol2').feature('s1').feature('se1').feature('ss2').label('Concentration C2');
model.sol('sol2').feature('s1').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol2').feature('s1').feature('se1').set('subinitcfl', 5);
model.sol('sol2').feature('s1').feature('se1').set('submincfl', 10000);
model.sol('sol2').feature('s1').feature('se1').set('subkppid', 0.65);
model.sol('sol2').feature('s1').feature('se1').set('subkdpid', 0.05);
model.sol('sol2').feature('s1').feature('se1').set('subkipid', 0.05);
model.sol('sol2').feature('s1').feature('se1').set('subcfltol', 0.1);
model.sol('sol2').feature('s1').feature('se1').set('segcflaa', true);
model.sol('sol2').feature('s1').feature('se1').set('segcflaacfl', 9000);
model.sol('sol2').feature('s1').feature('se1').set('segcflaafact', 1);
model.sol('sol2').feature('s1').feature('se1').set('maxsegiter', 200);
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol2').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol2').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol2').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol2').feature('s1').feature('i1').label('AMG, fluid flow variables (spf2)');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp2_spf2_inl1_Pinlfdf'});
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp2_spf2_inl1_Pinlfdf'});
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s1').create('i2', 'Iterative');
model.sol('sol2').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol2').feature('s1').feature('i2').set('prefuntype', 'left');
model.sol('sol2').feature('s1').feature('i2').set('itrestart', 50);
model.sol('sol2').feature('s1').feature('i2').set('rhob', 400);
model.sol('sol2').feature('s1').feature('i2').set('maxlinit', 1000);
model.sol('sol2').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol2').feature('s1').feature('i2').label('AMG, concentrations (tds2)');
model.sol('sol2').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol2').feature('s1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol2').feature('s1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('s1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('s1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('s1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std2');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol2');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'dz'});
model.batch('p1').set('plistarr', {'0.01,0.005,0.001'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std2');
model.batch('p1').set('control', 'param');

model.sol.create('sol3');
model.sol('sol3').study('std2');
model.sol('sol3').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol3');
model.batch('p1').run('compute');

model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').set('data', 'dset5');
model.result('pg5').setIndex('looplevel', 3, 0);
model.result('pg5').label('Concentration, Streamline (tds2)');
model.result('pg5').set('titletype', 'custom');
model.result('pg5').set('typeintitle', true);
model.result('pg5').set('prefixintitle', '');
model.result('pg5').create('str1', 'Streamline');
model.result('pg5').feature('str1').set('expr', {'tds2.tflux_c2x' 'tds2.tflux_c2y' 'tds2.tflux_c2z'});
model.result('pg5').feature('str1').set('posmethod', 'start');
model.result('pg5').feature('str1').set('pointtype', 'arrow');
model.result('pg5').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg5').feature('str1').set('color', 'gray');
model.result('pg5').feature('str1').create('col', 'Color');
model.result('pg5').feature('str1').feature('col').set('expr', 'c2');
model.result('pg5').feature('str1').feature('col').set('titletype', 'custom');
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').set('data', 'dset5');
model.result('pg6').setIndex('looplevel', 3, 0);
model.result('pg6').label('Concentration, Surface (tds2)');
model.result('pg6').set('titletype', 'custom');
model.result('pg6').set('prefixintitle', '');
model.result('pg6').set('expressionintitle', false);
model.result('pg6').set('typeintitle', false);
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', {'c2'});
model.result.dataset('dset5').set('geom', 'geom2');
model.result.create('pg7', 'PlotGroup3D');
model.result('pg7').label('Velocity (spf2)');
model.result('pg7').set('data', 'dset5');
model.result('pg7').setIndex('looplevel', 3, 0);
model.result('pg7').set('frametype', 'spatial');
model.result('pg7').set('data', 'dset5');
model.result('pg7').setIndex('looplevel', 3, 0);
model.result('pg7').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pg1');
model.result('pg7').feature.create('slc1', 'Slice');
model.result('pg7').feature('slc1').label('Slice');
model.result('pg7').feature('slc1').set('showsolutionparams', 'on');
model.result('pg7').feature('slc1').set('expr', 'spf2.U');
model.result('pg7').feature('slc1').set('smooth', 'internal');
model.result('pg7').feature('slc1').set('showsolutionparams', 'on');
model.result('pg7').feature('slc1').set('data', 'parent');
model.result.dataset.create('surf1', 'Surface');
model.result.dataset('surf1').label('Exterior Walls');
model.result.dataset('surf1').set('data', 'dset5');
model.result.dataset('surf1').selection.geom('geom2', 2);
model.result.dataset('surf1').selection.set([2 3 4 5]);
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').label('Pressure (spf2)');
model.result('pg8').set('data', 'surf1');
model.result('pg8').setIndex('looplevel', 3, 0);
model.result('pg8').set('frametype', 'spatial');
model.result('pg8').set('data', 'surf1');
model.result('pg8').setIndex('looplevel', 3, 0);
model.result('pg8').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pcond2/pcond1/pg4');
model.result('pg8').feature.create('surf1', 'Surface');
model.result('pg8').feature('surf1').label('Surface');
model.result('pg8').feature('surf1').set('showsolutionparams', 'on');
model.result('pg8').feature('surf1').set('expr', 'p2');
model.result('pg8').feature('surf1').set('colortable', 'Dipole');
model.result('pg8').feature('surf1').set('smooth', 'internal');
model.result('pg8').feature('surf1').set('showsolutionparams', 'on');
model.result('pg8').feature('surf1').set('data', 'parent');
model.result('pg8').feature('surf1').feature.create('tran1', 'Transparency');
model.result('pg5').run;
model.result('pg4').run;
model.result('pg4').feature.duplicate('lngr2', 'lngr1');
model.result('pg4').run;
model.result('pg4').feature('lngr2').label('3D');
model.result('pg4').feature('lngr2').set('data', 'dset5');
model.result('pg4').feature('lngr2').selection.set([3 5]);
model.result('pg4').feature('lngr2').set('expr', 'c2');
model.result('pg4').feature('lngr2').setIndex('legends', 'dz 0.01[m] - 3D', 0);
model.result('pg4').feature('lngr2').setIndex('legends', 'dz 0.005[m] - 3D', 1);
model.result('pg4').feature('lngr2').setIndex('legends', 'dz 0.001[m] - 3D', 2);
model.result('pg4').feature('lngr2').set('linestyle', 'solid');
model.result('pg4').feature('lngr2').set('linemarker', 'none');
model.result('pg4').feature('lngr2').set('linecolor', 'cyclereset');
model.result('pg4').run;
model.result('pg4').set('ylabelactive', true);
model.result('pg4').set('titletype', 'none');
model.result('pg4').run;
model.result.create('pg9', 'PlotGroup1D');
model.result('pg9').run;
model.result('pg9').label('Relative difference for dz=0.01');
model.result.dataset.create('edg1', 'Edge2D');
model.result.dataset('edg1').selection.set([2]);
model.result.dataset.create('edg2', 'Edge3D');
model.result.dataset('edg2').selection.set([5]);
model.result.dataset('edg2').set('data', 'dset5');
model.result.dataset.create('join1', 'Join');
model.result.dataset('join1').set('data', 'edg1');
model.result.dataset('join1').set('solutions', 'one');
model.result.dataset('join1').set('solnum', 1);
model.result.dataset('join1').set('data2', 'edg2');
model.result.dataset('join1').set('solutions2', 'one');
model.result.dataset('join1').set('outersolnum2', 1);
model.result.dataset('join1').set('method', 'explicit');
model.result('pg9').run;
model.result('pg9').set('data', 'join1');
model.result('pg9').create('lngr1', 'LineGraph');
model.result('pg9').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg9').feature('lngr1').set('linewidth', 'preference');
model.result('pg9').feature('lngr1').label('c for edge 2D');
model.result('pg9').feature('lngr1').set('expr', 'data1(c)');
model.result('pg9').feature('lngr1').set('xdata', 'expr');
model.result('pg9').feature('lngr1').set('xdataexpr', 'x');
model.result('pg9').feature('lngr1').set('linestyle', 'dotted');
model.result('pg9').feature('lngr1').set('linemarker', 'asterisk');
model.result('pg9').feature('lngr1').set('markerpos', 'interp');
model.result('pg9').feature('lngr1').set('legend', true);
model.result('pg9').feature('lngr1').set('legendmethod', 'manual');
model.result('pg9').feature('lngr1').setIndex('legends', 'dz=0.01m 2D', 0);
model.result('pg9').run;
model.result('pg9').feature.duplicate('lngr2', 'lngr1');
model.result('pg9').run;
model.result('pg9').feature('lngr2').label('c2 for edge 3D');
model.result('pg9').feature('lngr2').set('expr', 'data2(c2)');
model.result('pg9').feature('lngr2').set('linestyle', 'solid');
model.result('pg9').feature('lngr2').set('linecolor', 'blue');
model.result('pg9').feature('lngr2').set('linemarker', 'none');
model.result('pg9').feature('lngr2').setIndex('legends', 'dz=0.01m 3D', 0);
model.result('pg9').run;
model.result.dataset('edg2').set('reverse', true);
model.result('pg9').run;
model.result('pg9').run;
model.result('pg9').feature.duplicate('lngr3', 'lngr2');
model.result('pg9').run;
model.result('pg9').feature('lngr3').label('relative difference in concentration');
model.result('pg9').feature('lngr3').set('expr', '(data1(c)-data2(c2))/data1(c)*100');
model.result('pg9').feature('lngr3').set('descractive', true);
model.result('pg9').feature('lngr3').set('descr', 'Relative difference (%)');
model.result('pg9').feature('lngr3').set('linestyle', 'dashdot');
model.result('pg9').feature('lngr3').set('linecolor', 'red');
model.result('pg9').feature('lngr3').setIndex('legends', 'rel diff', 0);
model.result('pg9').run;
model.result('pg9').set('twoyaxes', true);
model.result('pg9').set('ylabelactive', true);
model.result('pg9').set('ylabel', 'Concentration (mol/m<sup>3</sup>)');
model.result('pg9').set('yseclabelactive', true);
model.result('pg9').set('yseclabel', 'Relative difference (%)');
model.result('pg9').setIndex('plotonsecyaxis', true, 2, 1);
model.result('pg9').set('titletype', 'none');
model.result('pg9').run;
model.result('pg9').set('legendpos', 'middleright');
model.result('pg5').run;
model.result.remove('pg5');
model.result('pg6').run;
model.result('pg7').run;
model.result('pg7').run;
model.result('pg7').feature('slc1').set('quickplane', 'xy');
model.result('pg7').feature('slc1').set('quickznumber', 1);
model.result('pg7').run;
model.result('pg6').run;
model.result('pg6').setIndex('looplevel', 1, 0);
model.result('pg6').run;

model.title('Mass Transfer from a Thin Domain');

model.description('This model demonstrates how mass transfer out from a thin domain can be approximated with a 2D model using the Out-of-Plane Flux feature. To check the validity of the 2D approximation, the equivalent 3D model is also solved. Additionally, this model illustrates how the out-of-plane thickness affects the relative error of the 2D approximation, and by how much the computational time can be decreased.');

model.label('thin_domain.mph');

model.modelNode.label('Components');

out = model;
