function out = model
%
% piezoceramic_tube.m
%
% Model exported on May 26 2025, 21:30 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/MEMS_Module/Piezoelectric_Devices');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');
model.physics('solid').create('pzm1', 'PiezoelectricMaterialModel');
model.physics('solid').feature('pzm1').selection.all;
model.physics.create('es', 'Electrostatics', 'geom1');
model.physics('es').model('comp1');
model.physics('es').create('ccnp1', 'ChargeConservationPiezo');
model.physics('es').feature('ccnp1').selection.all;

model.multiphysics.create('pze1', 'PiezoelectricEffect', 'geom1', 2);
model.multiphysics('pze1').set('Solid_physics', 'solid');
model.multiphysics('pze1').set('Electrostatics_physics', 'es');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/solid', true);
model.study('std1').feature('stat').setSolveFor('/physics/es', true);
model.study('std1').feature('stat').setSolveFor('/multiphysics/pze1', true);

model.geom('geom1').lengthUnit([native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']);
model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', [240 620]);
model.geom('geom1').feature('r1').set('pos', [380 0]);
model.geom('geom1').runPre('fin');
model.geom('geom1').run;

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('StrainCharge', 'Strain-charge form');
model.material('mat1').propertyGroup.create('StressCharge', 'Stress-charge form');
model.material('mat1').label('Lead Zirconate Titanate (PZT-5H)');
model.material('mat1').set('family', 'custom');
model.material('mat1').set('customspecular', [0.7843137254901961 1 1]);
model.material('mat1').set('customdiffuse', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat1').set('noise', true);
model.material('mat1').set('fresnel', 0.9);
model.material('mat1').set('roughness', 0.1);
model.material('mat1').set('metallic', 0);
model.material('mat1').set('pearl', 0);
model.material('mat1').set('diffusewrap', 0);
model.material('mat1').set('clearcoat', 0);
model.material('mat1').set('reflectance', 0);
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1704.4' '0' '0' '0' '1704.4' '0' '0' '0' '1433.6'});
model.material('mat1').propertyGroup('def').set('density', '7500[kg/m^3]');
model.material('mat1').propertyGroup('StrainCharge').set('sE', {'1.65e-011[1/Pa]' '-4.78e-012[1/Pa]' '-8.45e-012[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '-4.78e-012[1/Pa]' '1.65e-011[1/Pa]' '-8.45e-012[1/Pa]' '0[1/Pa]'  ...
'0[1/Pa]' '0[1/Pa]' '-8.45e-012[1/Pa]' '-8.45e-012[1/Pa]' '2.07e-011[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]'  ...
'0[1/Pa]' '4.35e-011[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '4.35e-011[1/Pa]' '0[1/Pa]'  ...
'0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '0[1/Pa]' '4.26e-011[1/Pa]'});
model.material('mat1').propertyGroup('StrainCharge').set('dET', {'0[C/N]' '0[C/N]' '-2.74e-010[C/N]' '0[C/N]' '0[C/N]' '-2.74e-010[C/N]' '0[C/N]' '0[C/N]' '5.93e-010[C/N]' '0[C/N]'  ...
'7.41e-010[C/N]' '0[C/N]' '7.41e-010[C/N]' '0[C/N]' '0[C/N]' '0[C/N]' '0[C/N]' '0[C/N]'});
model.material('mat1').propertyGroup('StrainCharge').set('epsilonrT', {'3130' '0' '0' '0' '3130' '0' '0' '0' '3400'});
model.material('mat1').propertyGroup('StressCharge').set('cE', {'1.27205e+011[Pa]' '8.02122e+010[Pa]' '8.46702e+010[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '8.02122e+010[Pa]' '1.27205e+011[Pa]' '8.46702e+010[Pa]' '0[Pa]'  ...
'0[Pa]' '0[Pa]' '8.46702e+010[Pa]' '8.46702e+010[Pa]' '1.17436e+011[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]'  ...
'0[Pa]' '2.29885e+010[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '2.29885e+010[Pa]' '0[Pa]'  ...
'0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '0[Pa]' '2.34742e+010[Pa]'});
model.material('mat1').propertyGroup('StressCharge').set('eES', {'0[C/m^2]' '0[C/m^2]' '-6.62281[C/m^2]' '0[C/m^2]' '0[C/m^2]' '-6.62281[C/m^2]' '0[C/m^2]' '0[C/m^2]' '23.2403[C/m^2]' '0[C/m^2]'  ...
'17.0345[C/m^2]' '0[C/m^2]' '17.0345[C/m^2]' '0[C/m^2]' '0[C/m^2]' '0[C/m^2]' '0[C/m^2]' '0[C/m^2]'});
model.material('mat1').propertyGroup('StressCharge').set('epsilonrS', {'1704.4' '0' '0' '0' '1704.4' '0' '0' '0' '1433.6'});

model.physics('solid').feature('pzm1').set('coordinateSystem', 'comp1_zx_sys');
model.physics('solid').create('bndl1', 'BoundaryLoad', 1);
model.physics('solid').feature('bndl1').selection.set([1]);
model.physics('solid').feature('bndl1').set('LoadType', 'FollowerPressure');
model.physics('solid').feature('bndl1').set('FollowerPressure', '0.1[MPa]');
model.physics('solid').create('roll1', 'Roller', 1);
model.physics('solid').feature('roll1').selection.set([2]);
model.physics('es').create('gnd1', 'Ground', 1);
model.physics('es').feature('gnd1').selection.set([1 4]);
model.physics('es').create('pot1', 'ElectricPotential', 1);
model.physics('es').feature('pot1').selection.set([4]);
model.physics('es').feature('pot1').set('V0', 1);

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').run;

model.study('std1').feature('stat').set('useadvanceddisable', true);
model.study('std1').feature('stat').set('disabledphysics', {'es/pot1'});

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('surf1').set('threshold', 'manual');
model.result('pg1').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg1').feature('surf1').set('colortable', 'Rainbow');
model.result('pg1').feature('surf1').set('colortabletrans', 'none');
model.result('pg1').feature('surf1').set('colorscalemode', 'linear');
model.result('pg1').feature('surf1').set('resolution', 'normal');
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg1').feature('surf1').feature('def').set('expr', {'u' 'w'});
model.result('pg1').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result.dataset.create('dset1solidrev', 'Revolve2D');
model.result.dataset('dset1solidrev').set('data', 'dset1');
model.result.dataset('dset1solidrev').set('revangle', 225);
model.result.dataset('dset1solidrev').set('startangle', -90);
model.result.dataset('dset1solidrev').set('hasspacevars', true);
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'dset1solidrev');
model.result('pg2').set('defaultPlotID', 'stress3D');
model.result('pg2').label('Stress, 3D (solid)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg2').feature('surf1').set('threshold', 'manual');
model.result('pg2').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg2').feature('surf1').set('colortable', 'Rainbow');
model.result('pg2').feature('surf1').set('colortabletrans', 'none');
model.result('pg2').feature('surf1').set('colorscalemode', 'linear');
model.result('pg2').feature('surf1').set('colortable', 'Prism');
model.result('pg2').feature('surf1').create('def', 'Deform');
model.result.dataset('dset1solidrev').set('hasspacevars', true);
model.result('pg2').feature('surf1').feature('def').set('revcoordsys', 'cylindrical');
model.result('pg2').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg2').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg2').feature('surf1').feature('def').set('descractive', true);
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').label('Electric Potential (es)');
model.result('pg3').set('dataisaxisym', 'off');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').set('showlegendsmaxmin', true);
model.result('pg3').set('data', 'dset1');
model.result('pg3').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom2/pdef1/pcond2/pcond2/pg1');
model.result('pg3').feature.create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('solutionparams', 'parent');
model.result('pg3').feature('surf1').set('expr', 'V');
model.result('pg3').feature('surf1').set('colortable', 'Dipole');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('data', 'parent');
model.result('pg3').feature.create('str1', 'Streamline');
model.result('pg3').feature('str1').set('showsolutionparams', 'on');
model.result('pg3').feature('str1').set('solutionparams', 'parent');
model.result('pg3').feature('str1').set('expr', {'es.Er' 'es.Ez'});
model.result('pg3').feature('str1').set('titletype', 'none');
model.result('pg3').feature('str1').set('posmethod', 'uniform');
model.result('pg3').feature('str1').set('udist', 0.02);
model.result('pg3').feature('str1').set('maxlen', 0.4);
model.result('pg3').feature('str1').set('maxtime', Inf);
model.result('pg3').feature('str1').set('inheritcolor', false);
model.result('pg3').feature('str1').set('showsolutionparams', 'on');
model.result('pg3').feature('str1').set('maxtime', Inf);
model.result('pg3').feature('str1').set('showsolutionparams', 'on');
model.result('pg3').feature('str1').set('maxtime', Inf);
model.result('pg3').feature('str1').set('showsolutionparams', 'on');
model.result('pg3').feature('str1').set('maxtime', Inf);
model.result('pg3').feature('str1').set('showsolutionparams', 'on');
model.result('pg3').feature('str1').set('maxtime', Inf);
model.result('pg3').feature('str1').set('data', 'parent');
model.result('pg3').feature('str1').selection.geom('geom1', 1);
model.result('pg3').feature('str1').selection.set([1 2 3 4]);
model.result('pg3').feature('str1').set('inheritplot', 'surf1');
model.result('pg3').feature('str1').feature.create('col1', 'Color');
model.result('pg3').feature('str1').feature('col1').set('expr', 'V');
model.result('pg3').feature('str1').feature('col1').set('colortable', 'DipoleDark');
model.result('pg3').feature('str1').feature('col1').set('colorlegend', false);
model.result('pg3').feature('str1').feature.create('filt1', 'Filter');
model.result('pg3').feature('str1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result.dataset.create('rev1', 'Revolve2D');
model.result.dataset('rev1').set('data', 'none');
model.result.dataset('rev1').set('startangle', -90);
model.result.dataset('rev1').set('revangle', 225);
model.result.dataset('rev1').set('data', 'dset1');
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').label('Electric Potential, Revolved Geometry (es)');
model.result('pg4').set('data', 'rev1');
model.result('pg4').set('frametype', 'spatial');
model.result('pg4').set('showlegendsmaxmin', true);
model.result('pg4').set('data', 'rev1');
model.result('pg4').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom2/pdef1/pcond2/pcond3/pcond1/pg1');
model.result('pg4').feature.create('vol1', 'Volume');
model.result('pg4').feature('vol1').set('showsolutionparams', 'on');
model.result('pg4').feature('vol1').set('solutionparams', 'parent');
model.result('pg4').feature('vol1').set('expr', 'V');
model.result('pg4').feature('vol1').set('colortable', 'Dipole');
model.result('pg4').feature('vol1').set('showsolutionparams', 'on');
model.result('pg4').feature('vol1').set('data', 'parent');
model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').label('Electric Field Norm (es)');
model.result('pg5').set('dataisaxisym', 'off');
model.result('pg5').set('frametype', 'spatial');
model.result('pg5').set('showlegendsmaxmin', true);
model.result('pg5').set('data', 'dset1');
model.result('pg5').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom3/pdef1/pcond2/pcond2/pg1');
model.result('pg5').feature.create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('showsolutionparams', 'on');
model.result('pg5').feature('surf1').set('solutionparams', 'parent');
model.result('pg5').feature('surf1').set('expr', 'es.normE');
model.result('pg5').feature('surf1').set('colortable', 'Prism');
model.result('pg5').feature('surf1').set('colortabletrans', 'nonlinear');
model.result('pg5').feature('surf1').set('colorcalibration', -0.8);
model.result('pg5').feature('surf1').set('showsolutionparams', 'on');
model.result('pg5').feature('surf1').set('data', 'parent');
model.result('pg5').feature.create('str1', 'Streamline');
model.result('pg5').feature('str1').set('showsolutionparams', 'on');
model.result('pg5').feature('str1').set('solutionparams', 'parent');
model.result('pg5').feature('str1').set('expr', {'es.Er' 'es.Ez'});
model.result('pg5').feature('str1').set('titletype', 'none');
model.result('pg5').feature('str1').set('posmethod', 'uniform');
model.result('pg5').feature('str1').set('udist', 0.02);
model.result('pg5').feature('str1').set('maxlen', 0.4);
model.result('pg5').feature('str1').set('maxtime', Inf);
model.result('pg5').feature('str1').set('inheritcolor', false);
model.result('pg5').feature('str1').set('showsolutionparams', 'on');
model.result('pg5').feature('str1').set('maxtime', Inf);
model.result('pg5').feature('str1').set('showsolutionparams', 'on');
model.result('pg5').feature('str1').set('maxtime', Inf);
model.result('pg5').feature('str1').set('showsolutionparams', 'on');
model.result('pg5').feature('str1').set('maxtime', Inf);
model.result('pg5').feature('str1').set('showsolutionparams', 'on');
model.result('pg5').feature('str1').set('maxtime', Inf);
model.result('pg5').feature('str1').set('data', 'parent');
model.result('pg5').feature('str1').selection.geom('geom1', 1);
model.result('pg5').feature('str1').selection.set([1 2 3 4]);
model.result('pg5').feature('str1').set('inheritplot', 'surf1');
model.result('pg5').feature('str1').feature.create('col1', 'Color');
model.result('pg5').feature('str1').feature('col1').set('expr', 'es.normE');
model.result('pg5').feature('str1').feature('col1').set('colortable', 'PrismDark');
model.result('pg5').feature('str1').feature('col1').set('colorlegend', false);
model.result('pg5').feature('str1').feature('col1').set('colortabletrans', 'nonlinear');
model.result('pg5').feature('str1').feature('col1').set('colorcalibration', -0.8);
model.result('pg5').feature('str1').feature.create('filt1', 'Filter');
model.result('pg5').feature('str1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result('pg1').run;
model.result('pg1').label('Radial Displacement (Direct Effect)');
model.result('pg1').run;
model.result('pg1').feature('surf1').set('expr', 'u');
model.result('pg1').feature('surf1').set('descr', 'Displacement field, R-component');
model.result('pg1').run;
model.result('pg2').run;
model.result('pg2').label('Stress, 3D (Direct Effect)');
model.result('pg3').run;
model.result('pg3').label('Electric Potential (Direct Effect)');
model.result('pg4').run;
model.result('pg4').label('Electric Potential, 3D (Direct Effect)');
model.result('pg4').run;
model.result.dataset.create('cln1', 'CutLine2D');
model.result.dataset('cln1').setIndex('genpoints', 380, 0, 0);
model.result.dataset('cln1').setIndex('genpoints', 300, 0, 1);
model.result.dataset('cln1').setIndex('genpoints', 620, 1, 0);
model.result.dataset('cln1').setIndex('genpoints', 300, 1, 1);
model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').run;
model.result('pg6').label('Radial Displacement, Cut (Direct Effect)');
model.result('pg6').set('data', 'cln1');
model.result('pg6').create('lngr1', 'LineGraph');
model.result('pg6').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg6').feature('lngr1').set('linewidth', 'preference');
model.result('pg6').feature('lngr1').set('expr', 'u');
model.result('pg6').feature('lngr1').set('descr', 'Displacement field, R-component');
model.result('pg6').feature('lngr1').set('unit', 'nm');
model.result('pg6').feature('lngr1').set('xdata', 'expr');
model.result('pg6').feature('lngr1').set('xdataexpr', 'r');
model.result('pg6').run;
model.result('pg6').run;
model.result.duplicate('pg7', 'pg6');
model.result('pg7').run;
model.result('pg7').label('Voltage, Cut (Direct Effect)');
model.result('pg7').run;
model.result('pg7').feature('lngr1').set('expr', 'abs(V)');
model.result('pg7').run;

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/solid', true);
model.study('std2').feature('stat').setSolveFor('/physics/es', true);
model.study('std2').feature('stat').setSolveFor('/multiphysics/pze1', true);
model.study('std2').feature('stat').set('useadvanceddisable', true);
model.study('std2').feature('stat').set('disabledphysics', {'solid/bndl1'});

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('seDef', 'Segregated');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').feature('s1').feature.remove('seDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result.create('pg8', 'PlotGroup2D');
model.result('pg8').set('data', 'dset2');
model.result('pg8').set('defaultPlotID', 'stress');
model.result('pg8').label('Stress (solid)');
model.result('pg8').set('frametype', 'spatial');
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg8').feature('surf1').set('threshold', 'manual');
model.result('pg8').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg8').feature('surf1').set('colortable', 'Rainbow');
model.result('pg8').feature('surf1').set('colortabletrans', 'none');
model.result('pg8').feature('surf1').set('colorscalemode', 'linear');
model.result('pg8').feature('surf1').set('resolution', 'normal');
model.result('pg8').feature('surf1').set('colortable', 'Prism');
model.result('pg8').feature('surf1').create('def', 'Deform');
model.result('pg8').feature('surf1').feature('def').set('expr', {'u' 'w'});
model.result('pg8').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result.dataset.create('dset2solidrev', 'Revolve2D');
model.result.dataset('dset2solidrev').set('data', 'dset2');
model.result.dataset('dset2solidrev').set('revangle', 225);
model.result.dataset('dset2solidrev').set('startangle', -90);
model.result.dataset('dset2solidrev').set('hasspacevars', true);
model.result.create('pg9', 'PlotGroup3D');
model.result('pg9').set('data', 'dset2solidrev');
model.result('pg9').set('defaultPlotID', 'stress3D');
model.result('pg9').label('Stress, 3D (solid)');
model.result('pg9').set('frametype', 'spatial');
model.result('pg9').create('surf1', 'Surface');
model.result('pg9').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg9').feature('surf1').set('threshold', 'manual');
model.result('pg9').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg9').feature('surf1').set('colortable', 'Rainbow');
model.result('pg9').feature('surf1').set('colortabletrans', 'none');
model.result('pg9').feature('surf1').set('colorscalemode', 'linear');
model.result('pg9').feature('surf1').set('colortable', 'Prism');
model.result('pg9').feature('surf1').create('def', 'Deform');
model.result.dataset('dset2solidrev').set('hasspacevars', true);
model.result('pg9').feature('surf1').feature('def').set('revcoordsys', 'cylindrical');
model.result('pg9').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg9').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg9').feature('surf1').feature('def').set('descractive', true);
model.result.create('pg10', 'PlotGroup2D');
model.result('pg10').label('Electric Potential (es)');
model.result('pg10').set('data', 'dset2');
model.result('pg10').set('dataisaxisym', 'off');
model.result('pg10').set('frametype', 'spatial');
model.result('pg10').set('showlegendsmaxmin', true);
model.result('pg10').set('data', 'dset2');
model.result('pg10').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom2/pdef1/pcond2/pcond2/pg1');
model.result('pg10').feature.create('surf1', 'Surface');
model.result('pg10').feature('surf1').set('showsolutionparams', 'on');
model.result('pg10').feature('surf1').set('solutionparams', 'parent');
model.result('pg10').feature('surf1').set('expr', 'V');
model.result('pg10').feature('surf1').set('colortable', 'Dipole');
model.result('pg10').feature('surf1').set('showsolutionparams', 'on');
model.result('pg10').feature('surf1').set('data', 'parent');
model.result('pg10').feature.create('str1', 'Streamline');
model.result('pg10').feature('str1').set('showsolutionparams', 'on');
model.result('pg10').feature('str1').set('solutionparams', 'parent');
model.result('pg10').feature('str1').set('expr', {'es.Er' 'es.Ez'});
model.result('pg10').feature('str1').set('titletype', 'none');
model.result('pg10').feature('str1').set('posmethod', 'uniform');
model.result('pg10').feature('str1').set('udist', 0.02);
model.result('pg10').feature('str1').set('maxlen', 0.4);
model.result('pg10').feature('str1').set('maxtime', Inf);
model.result('pg10').feature('str1').set('inheritcolor', false);
model.result('pg10').feature('str1').set('showsolutionparams', 'on');
model.result('pg10').feature('str1').set('maxtime', Inf);
model.result('pg10').feature('str1').set('showsolutionparams', 'on');
model.result('pg10').feature('str1').set('maxtime', Inf);
model.result('pg10').feature('str1').set('showsolutionparams', 'on');
model.result('pg10').feature('str1').set('maxtime', Inf);
model.result('pg10').feature('str1').set('showsolutionparams', 'on');
model.result('pg10').feature('str1').set('maxtime', Inf);
model.result('pg10').feature('str1').set('data', 'parent');
model.result('pg10').feature('str1').selection.geom('geom1', 1);
model.result('pg10').feature('str1').selection.set([1 2 3 4]);
model.result('pg10').feature('str1').set('inheritplot', 'surf1');
model.result('pg10').feature('str1').feature.create('col1', 'Color');
model.result('pg10').feature('str1').feature('col1').set('expr', 'V');
model.result('pg10').feature('str1').feature('col1').set('colortable', 'DipoleDark');
model.result('pg10').feature('str1').feature('col1').set('colorlegend', false);
model.result('pg10').feature('str1').feature.create('filt1', 'Filter');
model.result('pg10').feature('str1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result.dataset.create('rev2', 'Revolve2D');
model.result.dataset('rev2').set('data', 'none');
model.result.dataset('rev2').set('startangle', -90);
model.result.dataset('rev2').set('revangle', 225);
model.result.dataset('rev2').set('data', 'dset2');
model.result.create('pg11', 'PlotGroup3D');
model.result('pg11').label('Electric Potential, Revolved Geometry (es)');
model.result('pg11').set('data', 'rev2');
model.result('pg11').set('frametype', 'spatial');
model.result('pg11').set('showlegendsmaxmin', true);
model.result('pg11').set('data', 'rev2');
model.result('pg11').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom2/pdef1/pcond2/pcond3/pcond1/pg1');
model.result('pg11').feature.create('vol1', 'Volume');
model.result('pg11').feature('vol1').set('showsolutionparams', 'on');
model.result('pg11').feature('vol1').set('solutionparams', 'parent');
model.result('pg11').feature('vol1').set('expr', 'V');
model.result('pg11').feature('vol1').set('colortable', 'Dipole');
model.result('pg11').feature('vol1').set('showsolutionparams', 'on');
model.result('pg11').feature('vol1').set('data', 'parent');
model.result.create('pg12', 'PlotGroup2D');
model.result('pg12').label('Electric Field Norm (es) 1');
model.result('pg12').set('data', 'dset2');
model.result('pg12').set('dataisaxisym', 'off');
model.result('pg12').set('frametype', 'spatial');
model.result('pg12').set('showlegendsmaxmin', true);
model.result('pg12').set('data', 'dset2');
model.result('pg12').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom3/pdef1/pcond2/pcond2/pg1');
model.result('pg12').feature.create('surf1', 'Surface');
model.result('pg12').feature('surf1').set('showsolutionparams', 'on');
model.result('pg12').feature('surf1').set('solutionparams', 'parent');
model.result('pg12').feature('surf1').set('expr', 'es.normE');
model.result('pg12').feature('surf1').set('colortable', 'Prism');
model.result('pg12').feature('surf1').set('colortabletrans', 'nonlinear');
model.result('pg12').feature('surf1').set('colorcalibration', -0.8);
model.result('pg12').feature('surf1').set('showsolutionparams', 'on');
model.result('pg12').feature('surf1').set('data', 'parent');
model.result('pg12').feature.create('str1', 'Streamline');
model.result('pg12').feature('str1').set('showsolutionparams', 'on');
model.result('pg12').feature('str1').set('solutionparams', 'parent');
model.result('pg12').feature('str1').set('expr', {'es.Er' 'es.Ez'});
model.result('pg12').feature('str1').set('titletype', 'none');
model.result('pg12').feature('str1').set('posmethod', 'uniform');
model.result('pg12').feature('str1').set('udist', 0.02);
model.result('pg12').feature('str1').set('maxlen', 0.4);
model.result('pg12').feature('str1').set('maxtime', Inf);
model.result('pg12').feature('str1').set('inheritcolor', false);
model.result('pg12').feature('str1').set('showsolutionparams', 'on');
model.result('pg12').feature('str1').set('maxtime', Inf);
model.result('pg12').feature('str1').set('showsolutionparams', 'on');
model.result('pg12').feature('str1').set('maxtime', Inf);
model.result('pg12').feature('str1').set('showsolutionparams', 'on');
model.result('pg12').feature('str1').set('maxtime', Inf);
model.result('pg12').feature('str1').set('showsolutionparams', 'on');
model.result('pg12').feature('str1').set('maxtime', Inf);
model.result('pg12').feature('str1').set('data', 'parent');
model.result('pg12').feature('str1').selection.geom('geom1', 1);
model.result('pg12').feature('str1').selection.set([1 2 3 4]);
model.result('pg12').feature('str1').set('inheritplot', 'surf1');
model.result('pg12').feature('str1').feature.create('col1', 'Color');
model.result('pg12').feature('str1').feature('col1').set('expr', 'es.normE');
model.result('pg12').feature('str1').feature('col1').set('colortable', 'PrismDark');
model.result('pg12').feature('str1').feature('col1').set('colorlegend', false);
model.result('pg12').feature('str1').feature('col1').set('colortabletrans', 'nonlinear');
model.result('pg12').feature('str1').feature('col1').set('colorcalibration', -0.8);
model.result('pg12').feature('str1').feature.create('filt1', 'Filter');
model.result('pg12').feature('str1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result('pg8').run;
model.result('pg8').label('Radial Displacement (Inverse Effect)');
model.result('pg8').run;
model.result('pg8').feature('surf1').set('expr', 'u');
model.result('pg8').feature('surf1').set('descr', 'Displacement field, R-component');
model.result('pg8').run;
model.result('pg9').run;
model.result('pg9').label('Stress, 3D (Inverse Effect)');
model.result('pg10').run;
model.result('pg10').label('Electric Potential (Inverse Effect)');
model.result('pg11').run;
model.result('pg11').set('data', 'dset2solidrev');
model.result('pg11').label('Electric Potential, 3D (Inverse Effect)');
model.result('pg11').run;
model.result.dataset.duplicate('cln2', 'cln1');
model.result.dataset('cln2').set('data', 'dset2');
model.result('pg6').run;
model.result.duplicate('pg13', 'pg6');
model.result('pg13').run;
model.result('pg13').label('Radial Displacement, Cut (Inverse Effect)');
model.result('pg13').set('data', 'cln2');
model.result('pg13').run;
model.result('pg7').run;
model.result.duplicate('pg14', 'pg7');
model.result('pg14').run;
model.result('pg14').label('Voltage, Cut (Inverse Effect)');
model.result('pg14').set('data', 'cln2');
model.result('pg14').run;

model.title('Piezoceramic Tube');

model.description('This model performs a static 2D axisymmetric analysis of a piezoelectric actuator. A radially polarized piezoelectric tube is simulated, with two sets of boundary conditions. The first case illustrates the inverse piezoelectric effect, and the second case shows the direct piezoelectric effect. The model is based on a paper by S.M. Peelamedu and others.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('piezoceramic_tube.mph');

model.modelNode.label('Components');

out = model;
