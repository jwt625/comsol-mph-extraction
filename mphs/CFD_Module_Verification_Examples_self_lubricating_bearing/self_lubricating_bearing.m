function out = model
%
% self_lubricating_bearing.m
%
% Model exported on May 26 2025, 21:26 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/CFD_Module/Verification_Examples');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('tff', 'ThinFilmFlowShell', 'geom1');
model.physics('tff').model('comp1');
model.physics.create('dl', 'PorousMediaFlowDarcy', 'geom1');
model.physics('dl').model('comp1');

model.multiphysics.create('tfpf1', 'ThinFilmAndPorousMediaFlow', 'geom1', 2);
model.multiphysics('tfpf1').set('ThinFilmFluid_physics', 'tff');
model.multiphysics('tfpf1').set('PorousMedia_physics', 'dl');
model.multiphysics('tfpf1').selection.all;

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/tff', true);
model.study('std1').feature('stat').setSolveFor('/physics/dl', true);
model.study('std1').feature('stat').setSolveFor('/multiphysics/tfpf1', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('R', 'L', 'Journal radius');
model.param.set('L', 'H/0.2', 'Bearing bush length');
model.param.set('U', '1[m/s]', 'Journal tangential velocity');
model.param.set('H', 'Psi*C^3/Phi', 'Porous bush thickness');
model.param.set('C', '1e-5[m]/Psi', 'Concentric clearance');
model.param.set('ep', '0.9', 'Journal eccentricity');
model.param.set('alpha', '0.1', 'Slip coefficient');
model.param.set('s', '0.25', 'Slip parameter');
model.param.set('Phi', '(s*alpha*C)^2', 'Permeability of porous bush');
model.param.set('Psi', '0.001', 'Permeability parameter');
model.param.set('n_upper_lim', '10', 'Fourier series upper limit');
model.param.set('rho', '1[kg/m^3]', 'Fluid density');
model.param.set('mu', '1[Pa*s]', 'Fluid viscosity');

model.variable.create('var1');
model.variable('var1').model('comp1');

model.geom('geom1').run;

% To import content from file, use:
% model.variable('var1').loadFile('FILENAME');
model.variable('var1').set('theta', 'atan2(y,x)[rad]', 'Angle along circumference');
model.variable('var1').set('h_f', 'C*(1+ep*cos(theta))', 'Lubricant film thickness');
model.variable('var1').set('u_b', '-U*sin(theta)', 'X-component of journal velocity');
model.variable('var1').set('v_b', 'U*cos(theta)', 'Y-component of journal velocity');

model.func.create('an1', 'Analytic');
model.func('an1').model('comp1');
model.func('an1').set('funcname', 'beta_n');
model.func('an1').set('expr', '2*n-1');
model.func('an1').set('args', 'n');
model.func('an1').setIndex('plotargs', 'n_upper_lim', 0, 2);
model.func.create('an2', 'Analytic');
model.func('an2').model('comp1');
model.func('an2').set('funcname', 'g_n');
model.func('an2').set('expr', 'sin(theta)*(2*s^2+2*s*(1+ep*cos(theta))+(1+ep*cos(theta))^2)/((s+1+ep*cos(theta))*(((6*(alpha^2)*(s^2)+4*s*(1+ep*cos(theta))+(1+ep*cos(theta))^2)*(1+ep*cos(theta))^2)+(12*Psi*(s+1+ep*cos(theta))*tanh(pi*beta_n(n)*H/L)/(pi*beta_n(n)*H/L))))');
model.func('an2').set('args', 'ep, n, Psi, s, theta');
model.func('an2').setIndex('plotaxis', false, 1);
model.func('an2').setIndex('plotaxis', true, 3);
model.func.create('an3', 'Analytic');
model.func('an3').model('comp1');
model.func('an3').set('funcname', 'pbar_summand');
model.func('an3').set('expr', '(-1)^(n+1)*ep*g_n(ep,n,Psi,s,theta)*cos(pi*beta_n(n)*z/L)/(2*n-1)^3');
model.func('an3').set('args', 'ep, n, Psi, s, theta, z');
model.func('an3').setIndex('plotaxis', false, 1);
model.func('an3').setIndex('plotaxis', true, 3);

model.geom('geom1').create('cyl1', 'Cylinder');
model.geom('geom1').feature('cyl1').set('type', 'surface');
model.geom('geom1').feature('cyl1').set('r', 'R+H');
model.geom('geom1').feature('cyl1').set('h', 'L');
model.geom('geom1').feature('cyl1').set('pos', {'0' '0' '-L/2'});
model.geom('geom1').feature('cyl1').setIndex('layer', 'H', 0);
model.geom('geom1').run('fin');

model.physics('tff').selection.set([8 9 14 16]);
model.physics('tff').prop('ReferencePressure').set('pref', 0);
model.physics('tff').feature('ffp1').set('hw1', 'h_f');
model.physics('tff').feature('ffp1').set('TangentialBaseVelocity', 'userdef');
model.physics('tff').feature('ffp1').set('vb', {'u_b' 'v_b' '0'});
model.physics('tff').feature('ffp1').set('mure_mat', 'userdef');
model.physics('tff').feature('ffp1').set('mure', 'mu');
model.physics('tff').feature('ffp1').set('rho_mat', 'userdef');
model.physics('tff').feature('ffp1').set('rho', 'rho');
model.physics('dl').prop('PhysicalModelProperty').set('pref', 0);
model.physics('dl').feature('porous1').feature('fluid1').set('rho_mat', 'userdef');
model.physics('dl').feature('porous1').feature('fluid1').set('rho', 'rho');
model.physics('dl').feature('porous1').feature('fluid1').set('mu_mat', 'userdef');
model.physics('dl').feature('porous1').feature('fluid1').set('mu', 'mu');
model.physics('dl').feature('porous1').feature('pm1').set('kappa_mat', 'userdef');
model.physics('dl').feature('porous1').feature('pm1').set('kappa', {'Phi' '0' '0' '0' 'Phi' '0' '0' '0' 'Phi'});
model.physics('dl').feature('porous1').feature('pm1').set('epsilon_mat', 'userdef');
model.physics('dl').create('pr1', 'Pressure', 2);
model.physics('dl').feature('pr1').selection.set([4 5 6 7 12 13 17 18]);

model.multiphysics('tfpf1').set('couplingType', 'BeaversAndJoseph');
model.multiphysics('tfpf1').set('alphaBJw', 'alpha');
model.multiphysics('tfpf1').set('alphaBJb', 'alpha');

model.mesh('mesh1').automatic(false);
model.mesh('mesh1').create('edg1', 'Edge');
model.mesh('mesh1').feature('edg1').selection.set([3 4 9 10 15 19 23 27]);
model.mesh('mesh1').feature('edg1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('edg1').feature('dis1').set('numelem', 50);
model.mesh('mesh1').feature('edg1').feature('dis1').set('equidistant', true);
model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.set([4 5 12 17]);
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([2 14 22 30]);
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis1').set('numelem', 15);
model.mesh('mesh1').feature('ftet1').active(false);
model.mesh('mesh1').run;

model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl('intop1').set('axisym', true);
model.cpl('intop1').selection.geom('geom1', 2);
model.cpl('intop1').selection.set([9 16]);
model.cpl.create('intop2', 'Integration', 'geom1');
model.cpl('intop2').set('axisym', true);
model.cpl('intop2').selection.geom('geom1', 2);
model.cpl('intop2').selection.set([8 9 14 16]);

model.param.set('R', '20*L');

model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'R', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);
model.study('std1').feature('param').setIndex('pname', 'R', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);
model.study('std1').feature('param').setIndex('pname', 's', 0);
model.study('std1').feature('param').setIndex('plistarr', '0.25 0.5', 0);
model.study('std1').feature('param').setIndex('pname', 'R', 1);
model.study('std1').feature('param').setIndex('plistarr', '', 1);
model.study('std1').feature('param').setIndex('punit', 'm', 1);
model.study('std1').feature('param').setIndex('pname', 'R', 1);
model.study('std1').feature('param').setIndex('plistarr', '', 1);
model.study('std1').feature('param').setIndex('punit', 'm', 1);
model.study('std1').feature('param').setIndex('pname', 'Psi', 1);
model.study('std1').feature('param').setIndex('plistarr', '1 0.1 0.01 0.001', 1);
model.study('std1').feature('param').setIndex('pname', 'R', 2);
model.study('std1').feature('param').setIndex('plistarr', '', 2);
model.study('std1').feature('param').setIndex('punit', 'm', 2);
model.study('std1').feature('param').setIndex('pname', 'R', 2);
model.study('std1').feature('param').setIndex('plistarr', '', 2);
model.study('std1').feature('param').setIndex('punit', 'm', 2);
model.study('std1').feature('param').setIndex('pname', 'ep', 2);
model.study('std1').feature('param').setIndex('plistarr', '0.1 0.3 0.5 0.7 0.9', 2);
model.study('std1').feature('param').set('sweeptype', 'filled');
model.study('std1').setGenPlots(false);

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3 4]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, pressure (tff) (tfpf1) (Merged)');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').attach('std1');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'s' 'Psi' 'ep'});
model.batch('p1').set('plistarr', {'0.25 0.5' '1 0.1 0.01 0.001' '0.1 0.3 0.5 0.7 0.9'});
model.batch('p1').set('sweeptype', 'filled');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol.create('sol2');
model.sol('sol2').study('std1');
model.sol('sol2').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').run('compute');

model.param.set('R', 'L');

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/tff', true);
model.study('std2').feature('stat').setSolveFor('/physics/dl', true);
model.study('std2').feature('stat').setSolveFor('/multiphysics/tfpf1', true);

model.geom('geom1').run;

model.study('std2').setGenPlots(false);

model.sol.create('sol43');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3 4]);

model.sol('sol43').study('std2');
model.sol('sol43').create('st1', 'StudyStep');
model.sol('sol43').feature('st1').set('study', 'std2');
model.sol('sol43').feature('st1').set('studystep', 'stat');
model.sol('sol43').create('v1', 'Variables');
model.sol('sol43').feature('v1').set('control', 'stat');
model.sol('sol43').create('s1', 'Stationary');
model.sol('sol43').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol43').feature('s1').create('seDef', 'Segregated');
model.sol('sol43').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol43').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol43').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol43').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol43').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol43').feature('s1').create('d1', 'Direct');
model.sol('sol43').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol43').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol43').feature('s1').feature('d1').label('Direct, pressure (tff) (tfpf1) (Merged)');
model.sol('sol43').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol43').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol43').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol43').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol43').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol43').feature('s1').feature.remove('fcDef');
model.sol('sol43').feature('s1').feature.remove('seDef');
model.sol('sol43').attach('std2');
model.sol('sol43').runAll;

model.result.setOnlyPlotWhenRequested(true);
model.result.dataset.create('grid1', 'Grid1D');
model.result.dataset('grid1').set('source', 'function');
model.result.dataset('grid1').set('function', 'all');
model.result.dataset('grid1').set('par1', 'ep');
model.result.dataset.duplicate('grid2', 'grid1');
model.result.dataset('grid2').set('par1', 'Psi');
model.result.dataset('grid2').set('parmin1', 0.001);
model.result.numerical.create('gev1', 'EvalGlobal');
model.result.numerical('gev1').set('data', 'dset2');
model.result.numerical('gev1').setIndex('looplevelinput', 'manual', 2);
model.result.numerical('gev1').setIndex('looplevel', [1], 2);
model.result.numerical('gev1').setIndex('looplevelinput', 'manual', 1);
model.result.numerical('gev1').setIndex('looplevel', [1], 1);
model.result.numerical('gev1').setIndex('expr', '(C^2/(mu*U*L^3))*sqrt((intop1(pfilm*cos(theta)))^2+(intop1(pfilm*sin(theta)))^2)', 0);
model.result.numerical('gev1').setIndex('expr', 'atan(-(intop1(pfilm*sin(theta)))/(intop1(pfilm*cos(theta))))', 1);
model.result.numerical.duplicate('gev2', 'gev1');
model.result.numerical('gev2').setIndex('looplevel', [2], 1);
model.result.numerical.duplicate('gev3', 'gev2');
model.result.numerical('gev3').setIndex('looplevel', [3], 1);
model.result.numerical.duplicate('gev4', 'gev3');
model.result.numerical('gev4').setIndex('looplevel', [4], 1);
model.result.numerical.create('gev5', 'EvalGlobal');
model.result.numerical('gev5').set('data', 'dset2');
model.result.numerical('gev5').setIndex('looplevelinput', 'manual', 2);
model.result.numerical('gev5').setIndex('looplevel', [1], 2);
model.result.numerical('gev5').setIndex('looplevelinput', 'manual', 0);
model.result.numerical('gev5').setIndex('looplevel', [1], 0);
model.result.numerical('gev5').setIndex('expr', '(C^2/(mu*U*L^3))*sqrt((intop1(pfilm*cos(theta)))^2+(intop1(pfilm*sin(theta)))^2)', 0);
model.result.numerical.duplicate('gev6', 'gev5');
model.result.numerical('gev6').setIndex('looplevel', [2], 0);
model.result.numerical.duplicate('gev7', 'gev6');
model.result.numerical('gev7').setIndex('looplevel', [3], 0);
model.result.numerical.duplicate('gev8', 'gev7');
model.result.numerical('gev8').setIndex('looplevel', [4], 0);
model.result.numerical.duplicate('gev9', 'gev8');
model.result.numerical('gev9').setIndex('looplevel', [5], 0);
model.result.numerical.create('gev10', 'EvalGlobal');
model.result.numerical('gev10').set('data', 'dset2');
model.result.numerical('gev10').setIndex('looplevelinput', 'manual', 2);
model.result.numerical('gev10').setIndex('looplevel', [2], 2);
model.result.numerical('gev10').setIndex('looplevelinput', 'manual', 1);
model.result.numerical('gev10').setIndex('looplevel', [1], 1);
model.result.numerical('gev10').setIndex('expr', '(C^2/(mu*U*L^3))*sqrt((intop1(pfilm*cos(theta)))^2+(intop1(pfilm*sin(theta)))^2)', 0);
model.result.numerical.duplicate('gev11', 'gev10');
model.result.numerical('gev11').setIndex('looplevel', [2], 1);
model.result.numerical.duplicate('gev12', 'gev11');
model.result.numerical('gev12').setIndex('looplevel', [3], 1);
model.result.numerical.duplicate('gev13', 'gev12');
model.result.numerical('gev13').setIndex('looplevel', [4], 1);
model.result.numerical.create('gev14', 'EvalGlobal');
model.result.numerical('gev14').set('data', 'dset2');
model.result.numerical('gev14').setIndex('looplevelinput', 'manual', 2);
model.result.numerical('gev14').setIndex('looplevel', [2], 2);
model.result.numerical('gev14').setIndex('looplevelinput', 'manual', 0);
model.result.numerical('gev14').setIndex('looplevel', [1], 0);
model.result.numerical('gev14').setIndex('expr', '(C^2/(mu*U*L^3))*sqrt((intop1(pfilm*cos(theta)))^2+(intop1(pfilm*sin(theta)))^2)', 0);
model.result.numerical.duplicate('gev15', 'gev14');
model.result.numerical('gev15').setIndex('looplevel', [2], 0);
model.result.numerical.duplicate('gev16', 'gev15');
model.result.numerical('gev16').setIndex('looplevel', [3], 0);
model.result.numerical.duplicate('gev17', 'gev16');
model.result.numerical('gev17').setIndex('looplevel', [4], 0);
model.result.numerical.duplicate('gev18', 'gev17');
model.result.numerical('gev18').setIndex('looplevel', [5], 0);
model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').comments('Global Evaluation 1');
model.result.numerical('gev1').set('table', 'tbl1');
model.result.numerical('gev1').setResult;
model.result.table.create('tbl2', 'Table');
model.result.table('tbl2').comments('Global Evaluation 2');
model.result.numerical('gev2').set('table', 'tbl2');
model.result.numerical('gev2').setResult;
model.result.table.create('tbl3', 'Table');
model.result.table('tbl3').comments('Global Evaluation 3');
model.result.numerical('gev3').set('table', 'tbl3');
model.result.numerical('gev3').setResult;
model.result.table.create('tbl4', 'Table');
model.result.table('tbl4').comments('Global Evaluation 4');
model.result.numerical('gev4').set('table', 'tbl4');
model.result.numerical('gev4').setResult;
model.result.table.create('tbl5', 'Table');
model.result.table('tbl5').comments('Global Evaluation 5');
model.result.numerical('gev5').set('table', 'tbl5');
model.result.numerical('gev5').setResult;
model.result.table.create('tbl6', 'Table');
model.result.table('tbl6').comments('Global Evaluation 6');
model.result.numerical('gev6').set('table', 'tbl6');
model.result.numerical('gev6').setResult;
model.result.table.create('tbl7', 'Table');
model.result.table('tbl7').comments('Global Evaluation 7');
model.result.numerical('gev7').set('table', 'tbl7');
model.result.numerical('gev7').setResult;
model.result.table.create('tbl8', 'Table');
model.result.table('tbl8').comments('Global Evaluation 8');
model.result.numerical('gev8').set('table', 'tbl8');
model.result.numerical('gev8').setResult;
model.result.table.create('tbl9', 'Table');
model.result.table('tbl9').comments('Global Evaluation 9');
model.result.numerical('gev9').set('table', 'tbl9');
model.result.numerical('gev9').setResult;
model.result.table.create('tbl10', 'Table');
model.result.table('tbl10').comments('Global Evaluation 10');
model.result.numerical('gev10').set('table', 'tbl10');
model.result.numerical('gev10').setResult;
model.result.table.create('tbl11', 'Table');
model.result.table('tbl11').comments('Global Evaluation 11');
model.result.numerical('gev11').set('table', 'tbl11');
model.result.numerical('gev11').setResult;
model.result.table.create('tbl12', 'Table');
model.result.table('tbl12').comments('Global Evaluation 12');
model.result.numerical('gev12').set('table', 'tbl12');
model.result.numerical('gev12').setResult;
model.result.table.create('tbl13', 'Table');
model.result.table('tbl13').comments('Global Evaluation 13');
model.result.numerical('gev13').set('table', 'tbl13');
model.result.numerical('gev13').setResult;
model.result.table.create('tbl14', 'Table');
model.result.table('tbl14').comments('Global Evaluation 14');
model.result.numerical('gev14').set('table', 'tbl14');
model.result.numerical('gev14').setResult;
model.result.table.create('tbl15', 'Table');
model.result.table('tbl15').comments('Global Evaluation 15');
model.result.numerical('gev15').set('table', 'tbl15');
model.result.numerical('gev15').setResult;
model.result.table.create('tbl16', 'Table');
model.result.table('tbl16').comments('Global Evaluation 16');
model.result.numerical('gev16').set('table', 'tbl16');
model.result.numerical('gev16').setResult;
model.result.table.create('tbl17', 'Table');
model.result.table('tbl17').comments('Global Evaluation 17');
model.result.numerical('gev17').set('table', 'tbl17');
model.result.numerical('gev17').setResult;
model.result.table.create('tbl18', 'Table');
model.result.table('tbl18').comments('Global Evaluation 18');
model.result.numerical('gev18').set('table', 'tbl18');
model.result.numerical('gev18').setResult;
model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').label('Dimensionless Load vs. ep: s=0.25');
model.result('pg1').set('data', 'none');
model.result('pg1').set('titletype', 'manual');
model.result('pg1').set('title', 'Dimensionless load for various \Psi');
model.result('pg1').set('xlabelactive', true);
model.result('pg1').set('xlabel', '\epsilon');
model.result('pg1').set('ylabelactive', true);
model.result('pg1').set('ylabel', 'W_nd');
model.result('pg1').set('ylog', true);
model.result('pg1').set('legendpos', 'lowerright');
model.result('pg1').set('legendcolumncount', 2);
model.result('pg1').set('legendmaxwidthinside', 1);
model.result('pg1').create('fun1', 'Function');
model.result('pg1').feature('fun1').set('linewidth', 'preference');
model.result('pg1').feature('fun1').set('data', 'grid1');
model.result('pg1').feature('fun1').set('expr', 'sqrt((integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,1,0.25,theta,z),n,1,n_upper_lim)*cos(theta),theta,0,pi),z,-L/2,L/2))^2+(integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,1,0.25,theta,z),n,1,n_upper_lim)*sin(theta),theta,0,pi),z,-L/2,L/2))^2)/L');
model.result('pg1').feature('fun1').set('xdataexpr', 'ep');
model.result('pg1').feature('fun1').set('linecolor', 'cyclereset');
model.result('pg1').feature('fun1').set('legend', true);
model.result('pg1').feature('fun1').set('legendmethod', 'manual');
model.result('pg1').feature('fun1').setIndex('legends', 'Analytic, \Psi=1', 0);
model.result('pg1').feature.duplicate('fun2', 'fun1');
model.result('pg1').feature('fun2').set('expr', 'sqrt((integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,0.1,0.25,theta,z),n,1,n_upper_lim)*cos(theta),theta,0,pi),z,-L/2,L/2))^2+(integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,0.1,0.25,theta,z),n,1,n_upper_lim)*sin(theta),theta,0,pi),z,-L/2,L/2))^2)/L');
model.result('pg1').feature('fun2').set('linecolor', 'cycle');
model.result('pg1').feature('fun2').setIndex('legends', 'Analytic, \Psi=0.1', 0);
model.result('pg1').feature.duplicate('fun3', 'fun2');
model.result('pg1').feature('fun3').set('expr', 'sqrt((integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,0.01,0.25,theta,z),n,1,n_upper_lim)*cos(theta),theta,0,pi),z,-L/2,L/2))^2+(integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,0.01,0.25,theta,z),n,1,n_upper_lim)*sin(theta),theta,0,pi),z,-L/2,L/2))^2)/L');
model.result('pg1').feature('fun3').setIndex('legends', 'Analytic, \Psi=0.01', 0);
model.result('pg1').feature.duplicate('fun4', 'fun3');
model.result('pg1').feature('fun4').set('expr', 'sqrt((integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,0.001,0.25,theta,z),n,1,n_upper_lim)*cos(theta),theta,0,pi),z,-L/2,L/2))^2+(integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,0.001,0.25,theta,z),n,1,n_upper_lim)*sin(theta),theta,0,pi),z,-L/2,L/2))^2)/L');
model.result('pg1').feature('fun4').setIndex('legends', 'Analytic, \Psi=0.001', 0);
model.result('pg1').feature.duplicate('fun5', 'fun4');
model.result('pg1').feature('fun5').set('expr', 'sqrt((integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,1,0,theta,z),n,1,n_upper_lim)*cos(theta),theta,0,pi),z,-L/2,L/2))^2+(integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,1,0,theta,z),n,1,n_upper_lim)*sin(theta),theta,0,pi),z,-L/2,L/2))^2)/L');
model.result('pg1').feature('fun5').set('linestyle', 'dashed');
model.result('pg1').feature('fun5').set('linecolor', 'cyclereset');
model.result('pg1').feature('fun5').set('legend', false);
model.result('pg1').feature.duplicate('fun6', 'fun5');
model.result('pg1').feature('fun6').set('expr', 'sqrt((integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,0.1,0,theta,z),n,1,n_upper_lim)*cos(theta),theta,0,pi),z,-L/2,L/2))^2+(integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,0.1,0,theta,z),n,1,n_upper_lim)*sin(theta),theta,0,pi),z,-L/2,L/2))^2)/L');
model.result('pg1').feature('fun6').set('linecolor', 'cycle');
model.result('pg1').feature.duplicate('fun7', 'fun6');
model.result('pg1').feature('fun7').set('expr', 'sqrt((integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,0.01,0,theta,z),n,1,n_upper_lim)*cos(theta),theta,0,pi),z,-L/2,L/2))^2+(integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,0.01,0,theta,z),n,1,n_upper_lim)*sin(theta),theta,0,pi),z,-L/2,L/2))^2)/L');
model.result('pg1').feature.duplicate('fun8', 'fun7');
model.result('pg1').feature('fun8').set('expr', 'sqrt((integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,0.001,0,theta,z),n,1,n_upper_lim)*cos(theta),theta,0,pi),z,-L/2,L/2))^2+(integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,0.001,0,theta,z),n,1,n_upper_lim)*sin(theta),theta,0,pi),z,-L/2,L/2))^2)/L');
model.result('pg1').create('tblp1', 'Table');
model.result('pg1').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg1').feature('tblp1').set('linewidth', 'preference');
model.result('pg1').feature('tblp1').set('xaxisdata', 3);
model.result('pg1').feature('tblp1').set('plotcolumninput', 'manual');
model.result('pg1').feature('tblp1').set('plotcolumns', [4]);
model.result('pg1').feature('tblp1').set('linestyle', 'none');
model.result('pg1').feature('tblp1').set('linecolor', 'cyclereset');
model.result('pg1').feature('tblp1').set('linemarker', 'cyclereset');
model.result('pg1').feature('tblp1').set('legend', true);
model.result('pg1').feature('tblp1').set('legendmethod', 'manual');
model.result('pg1').feature('tblp1').setIndex('legends', 'Numeric, \Psi=1', 0);
model.result('pg1').feature.duplicate('tblp2', 'tblp1');
model.result('pg1').feature('tblp2').set('table', 'tbl2');
model.result('pg1').feature('tblp2').set('linecolor', 'cycle');
model.result('pg1').feature('tblp2').set('linemarker', 'cycle');
model.result('pg1').feature('tblp2').setIndex('legends', 'Numeric, \Psi=0.1', 0);
model.result('pg1').feature.duplicate('tblp3', 'tblp2');
model.result('pg1').feature('tblp3').set('table', 'tbl3');
model.result('pg1').feature('tblp3').setIndex('legends', 'Numeric, \Psi=0.01', 0);
model.result('pg1').feature.duplicate('tblp4', 'tblp3');
model.result('pg1').feature('tblp4').set('table', 'tbl4');
model.result('pg1').feature('tblp4').setIndex('legends', 'Numeric, \Psi=0.001', 0);
model.result('pg1').create('ann1', 'Annotation');
model.result('pg1').feature('ann1').set('data', 'dset1');
model.result('pg1').feature('ann1').set('text', 'Dashed line: s=0\\Solid line: s=0.25');
model.result('pg1').feature('ann1').set('latexmarkup', true);
model.result('pg1').feature('ann1').set('posxexpr', 0.1);
model.result('pg1').feature('ann1').set('posyexpr', 5);
model.result('pg1').feature('ann1').set('showpoint', false);
model.result('pg1').feature('ann1').set('showframe', true);
model.result('pg1').run;
model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').label('Dimensionless Load vs. Psi: s=0.25');
model.result('pg2').set('data', 'none');
model.result('pg2').set('titletype', 'manual');
model.result('pg2').set('title', 'Dimensionless load for various \epsilon');
model.result('pg2').set('xlabelactive', true);
model.result('pg2').set('xlabel', '\Psi');
model.result('pg2').set('ylabelactive', true);
model.result('pg2').set('ylabel', 'W_nd');
model.result('pg2').set('xlog', true);
model.result('pg2').set('ylog', true);
model.result('pg2').set('legendcolumncount', 2);
model.result('pg2').set('legendmaxwidthinside', 1);
model.result('pg2').create('fun1', 'Function');
model.result('pg2').feature('fun1').set('linewidth', 'preference');
model.result('pg2').feature('fun1').set('data', 'grid2');
model.result('pg2').feature('fun1').set('expr', 'sqrt((integrate(integrate((24/pi^3)*sum(pbar_summand(0.1,n,Psi,0.25,theta,z),n,1,n_upper_lim)*cos(theta),theta,0,pi),z,-L/2,L/2))^2+(integrate(integrate((24/pi^3)*sum(pbar_summand(0.1,n,Psi,0.25,theta,z),n,1,n_upper_lim)*sin(theta),theta,0,pi),z,-L/2,L/2))^2)/L');
model.result('pg2').feature('fun1').set('xdataexpr', 'Psi');
model.result('pg2').feature('fun1').set('lowerbound', 0.001);
model.result('pg2').feature('fun1').set('linecolor', 'cyclereset');
model.result('pg2').feature('fun1').set('legend', true);
model.result('pg2').feature('fun1').set('legendmethod', 'manual');
model.result('pg2').feature('fun1').setIndex('legends', 'Analytic, \epsilon=0.1', 0);
model.result('pg2').feature.duplicate('fun2', 'fun1');
model.result('pg2').feature('fun2').set('expr', 'sqrt((integrate(integrate((24/pi^3)*sum(pbar_summand(0.3,n,Psi,0.25,theta,z),n,1,n_upper_lim)*cos(theta),theta,0,pi),z,-L/2,L/2))^2+(integrate(integrate((24/pi^3)*sum(pbar_summand(0.3,n,Psi,0.25,theta,z),n,1,n_upper_lim)*sin(theta),theta,0,pi),z,-L/2,L/2))^2)/L');
model.result('pg2').feature('fun2').set('linecolor', 'cycle');
model.result('pg2').feature('fun2').setIndex('legends', 'Analytic, \epsilon=0.3', 0);
model.result('pg2').feature.duplicate('fun3', 'fun2');
model.result('pg2').feature('fun3').set('expr', 'sqrt((integrate(integrate((24/pi^3)*sum(pbar_summand(0.5,n,Psi,0.25,theta,z),n,1,n_upper_lim)*cos(theta),theta,0,pi),z,-L/2,L/2))^2+(integrate(integrate((24/pi^3)*sum(pbar_summand(0.5,n,Psi,0.25,theta,z),n,1,n_upper_lim)*sin(theta),theta,0,pi),z,-L/2,L/2))^2)/L');
model.result('pg2').feature('fun3').setIndex('legends', 'Analytic, \epsilon=0.5', 0);
model.result('pg2').feature.duplicate('fun4', 'fun3');
model.result('pg2').feature('fun4').set('expr', 'sqrt((integrate(integrate((24/pi^3)*sum(pbar_summand(0.7,n,Psi,0.25,theta,z),n,1,n_upper_lim)*cos(theta),theta,0,pi),z,-L/2,L/2))^2+(integrate(integrate((24/pi^3)*sum(pbar_summand(0.7,n,Psi,0.25,theta,z),n,1,n_upper_lim)*sin(theta),theta,0,pi),z,-L/2,L/2))^2)/L');
model.result('pg2').feature('fun4').setIndex('legends', 'Analytic, \epsilon=0.7', 0);
model.result('pg2').feature.duplicate('fun5', 'fun4');
model.result('pg2').feature('fun5').set('expr', 'sqrt((integrate(integrate((24/pi^3)*sum(pbar_summand(0.9,n,Psi,0.25,theta,z),n,1,n_upper_lim)*cos(theta),theta,0,pi),z,-L/2,L/2))^2+(integrate(integrate((24/pi^3)*sum(pbar_summand(0.9,n,Psi,0.25,theta,z),n,1,n_upper_lim)*sin(theta),theta,0,pi),z,-L/2,L/2))^2)/L');
model.result('pg2').feature('fun5').setIndex('legends', 'Analytic, \epsilon=0.9', 0);
model.result('pg2').create('fun6', 'Function');
model.result('pg2').feature('fun6').set('linewidth', 'preference');
model.result('pg2').feature('fun6').set('data', 'grid2');
model.result('pg2').feature('fun6').set('expr', 'sqrt((integrate(integrate((24/pi^3)*sum(pbar_summand(0.1,n,Psi,0,theta,z),n,1,n_upper_lim)*cos(theta),theta,0,pi),z,-L/2,L/2))^2+(integrate(integrate((24/pi^3)*sum(pbar_summand(0.1,n,Psi,0,theta,z),n,1,n_upper_lim)*sin(theta),theta,0,pi),z,-L/2,L/2))^2)/L');
model.result('pg2').feature('fun6').set('xdataexpr', 'Psi');
model.result('pg2').feature('fun6').set('lowerbound', 0.001);
model.result('pg2').feature('fun6').set('linestyle', 'dashed');
model.result('pg2').feature('fun6').set('linecolor', 'cyclereset');
model.result('pg2').feature.duplicate('fun7', 'fun6');
model.result('pg2').feature('fun7').set('expr', 'sqrt((integrate(integrate((24/pi^3)*sum(pbar_summand(0.3,n,Psi,0,theta,z),n,1,n_upper_lim)*cos(theta),theta,0,pi),z,-L/2,L/2))^2+(integrate(integrate((24/pi^3)*sum(pbar_summand(0.3,n,Psi,0,theta,z),n,1,n_upper_lim)*sin(theta),theta,0,pi),z,-L/2,L/2))^2)/L');
model.result('pg2').feature('fun7').set('linecolor', 'cycle');
model.result('pg2').feature.duplicate('fun8', 'fun7');
model.result('pg2').feature('fun8').set('expr', 'sqrt((integrate(integrate((24/pi^3)*sum(pbar_summand(0.5,n,Psi,0,theta,z),n,1,n_upper_lim)*cos(theta),theta,0,pi),z,-L/2,L/2))^2+(integrate(integrate((24/pi^3)*sum(pbar_summand(0.5,n,Psi,0,theta,z),n,1,n_upper_lim)*sin(theta),theta,0,pi),z,-L/2,L/2))^2)/L');
model.result('pg2').feature.duplicate('fun9', 'fun8');
model.result('pg2').feature('fun9').set('expr', 'sqrt((integrate(integrate((24/pi^3)*sum(pbar_summand(0.7,n,Psi,0,theta,z),n,1,n_upper_lim)*cos(theta),theta,0,pi),z,-L/2,L/2))^2+(integrate(integrate((24/pi^3)*sum(pbar_summand(0.7,n,Psi,0,theta,z),n,1,n_upper_lim)*sin(theta),theta,0,pi),z,-L/2,L/2))^2)/L');
model.result('pg2').feature.duplicate('fun10', 'fun9');
model.result('pg2').feature('fun10').set('expr', 'sqrt((integrate(integrate((24/pi^3)*sum(pbar_summand(0.9,n,Psi,0,theta,z),n,1,n_upper_lim)*cos(theta),theta,0,pi),z,-L/2,L/2))^2+(integrate(integrate((24/pi^3)*sum(pbar_summand(0.9,n,Psi,0,theta,z),n,1,n_upper_lim)*sin(theta),theta,0,pi),z,-L/2,L/2))^2)/L');
model.result('pg2').create('tblp1', 'Table');
model.result('pg2').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg2').feature('tblp1').set('linewidth', 'preference');
model.result('pg2').feature('tblp1').set('table', 'tbl5');
model.result('pg2').feature('tblp1').set('xaxisdata', 2);
model.result('pg2').feature('tblp1').set('plotcolumninput', 'manual');
model.result('pg2').feature('tblp1').set('plotcolumns', [4]);
model.result('pg2').feature('tblp1').set('linestyle', 'none');
model.result('pg2').feature('tblp1').set('linecolor', 'cyclereset');
model.result('pg2').feature('tblp1').set('linemarker', 'cyclereset');
model.result('pg2').feature('tblp1').set('legend', true);
model.result('pg2').feature('tblp1').set('legendmethod', 'manual');
model.result('pg2').feature('tblp1').setIndex('legends', 'Numeric, \epsilon=0.1', 0);
model.result('pg2').feature.duplicate('tblp2', 'tblp1');
model.result('pg2').feature('tblp2').set('table', 'tbl6');
model.result('pg2').feature('tblp2').set('linecolor', 'cycle');
model.result('pg2').feature('tblp2').set('linemarker', 'cycle');
model.result('pg2').feature('tblp2').setIndex('legends', 'Numeric, \epsilon=0.3', 0);
model.result('pg2').feature.duplicate('tblp3', 'tblp2');
model.result('pg2').feature('tblp3').set('table', 'tbl7');
model.result('pg2').feature('tblp3').setIndex('legends', 'Numeric, \epsilon=0.5', 0);
model.result('pg2').feature.duplicate('tblp4', 'tblp3');
model.result('pg2').feature('tblp4').set('table', 'tbl8');
model.result('pg2').feature('tblp4').setIndex('legends', 'Numeric, \epsilon=0.7', 0);
model.result('pg2').feature.duplicate('tblp5', 'tblp4');
model.result('pg2').feature('tblp5').set('table', 'tbl9');
model.result('pg2').feature('tblp5').setIndex('legends', 'Numeric, \epsilon=0.9', 0);
model.result('pg2').create('ann1', 'Annotation');
model.result('pg2').feature('ann1').set('data', 'dset1');
model.result('pg2').feature('ann1').set('text', 'Dashed line: s=0\\Solid line: s=0.25');
model.result('pg2').feature('ann1').set('latexmarkup', true);
model.result('pg2').feature('ann1').set('posxexpr', 0.002);
model.result('pg2').feature('ann1').set('posyexpr', 0.02);
model.result('pg2').feature('ann1').set('showpoint', false);
model.result('pg2').feature('ann1').set('showframe', true);
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').label('Dimensionless Load vs. ep: s=0.5');
model.result('pg3').set('data', 'none');
model.result('pg3').set('titletype', 'manual');
model.result('pg3').set('title', 'Dimensionless load for various \Psi');
model.result('pg3').set('xlabelactive', true);
model.result('pg3').set('xlabel', '\epsilon');
model.result('pg3').set('ylabelactive', true);
model.result('pg3').set('ylabel', 'W_nd');
model.result('pg3').set('ylog', true);
model.result('pg3').set('legendpos', 'lowerright');
model.result('pg3').set('legendcolumncount', 2);
model.result('pg3').set('legendmaxwidthinside', 1);
model.result('pg3').create('fun1', 'Function');
model.result('pg3').feature('fun1').set('linewidth', 'preference');
model.result('pg3').feature('fun1').set('data', 'grid1');
model.result('pg3').feature('fun1').set('expr', '(C^2/(mu*U*L^3))*sqrt((integrate(integrate(((mu*U*L^2)/(R*C^2))*(24/pi^3)*sum((-1)^(n+1)*ep*g_n(ep,n,1,0.5,theta)*cos(pi*beta_n(n)*z/L)/(2*n-1)^3,n,1,n_upper_lim)*cos(theta)*R,theta,0,pi),z,-L/2,L/2))^2+(integrate(integrate(((mu*U*L^2)/(R*C^2))*(24/pi^3)*sum((-1)^(n+1)*ep*g_n(ep,n,1,0.5,theta)*cos(pi*beta_n(n)*z/L)/(2*n-1)^3,n,1,n_upper_lim)*sin(theta)*R,theta,0,pi),z,-L/2,L/2))^2)');
model.result('pg3').feature('fun1').set('xdataexpr', 'ep');
model.result('pg3').feature('fun1').set('linecolor', 'cyclereset');
model.result('pg3').feature('fun1').set('legend', true);
model.result('pg3').feature('fun1').set('legendmethod', 'manual');
model.result('pg3').feature('fun1').setIndex('legends', 'Analytic, \Psi=1', 0);
model.result('pg3').feature.duplicate('fun2', 'fun1');
model.result('pg3').feature('fun2').set('expr', '(C^2/(mu*U*L^3))*sqrt((integrate(integrate(((mu*U*L^2)/(R*C^2))*(24/pi^3)*sum((-1)^(n+1)*ep*g_n(ep,n,0.1,0.5,theta)*cos(pi*beta_n(n)*z/L)/(2*n-1)^3,n,1,n_upper_lim)*cos(theta)*R,theta,0,pi),z,-L/2,L/2))^2+(integrate(integrate(((mu*U*L^2)/(R*C^2))*(24/pi^3)*sum((-1)^(n+1)*ep*g_n(ep,n,0.1,0.5,theta)*cos(pi*beta_n(n)*z/L)/(2*n-1)^3,n,1,n_upper_lim)*sin(theta)*R,theta,0,pi),z,-L/2,L/2))^2)');
model.result('pg3').feature('fun2').set('linecolor', 'cycle');
model.result('pg3').feature('fun2').setIndex('legends', 'Analytic, \Psi=0.1', 0);
model.result('pg3').feature.duplicate('fun3', 'fun2');
model.result('pg3').feature('fun3').set('expr', '(C^2/(mu*U*L^3))*sqrt((integrate(integrate(((mu*U*L^2)/(R*C^2))*(24/pi^3)*sum((-1)^(n+1)*ep*g_n(ep,n,0.01,0.5,theta)*cos(pi*beta_n(n)*z/L)/(2*n-1)^3,n,1,n_upper_lim)*cos(theta)*R,theta,0,pi),z,-L/2,L/2))^2+(integrate(integrate(((mu*U*L^2)/(R*C^2))*(24/pi^3)*sum((-1)^(n+1)*ep*g_n(ep,n,0.01,0.5,theta)*cos(pi*beta_n(n)*z/L)/(2*n-1)^3,n,1,n_upper_lim)*sin(theta)*R,theta,0,pi),z,-L/2,L/2))^2)');
model.result('pg3').feature('fun3').setIndex('legends', 'Analytic, \Psi=0.01', 0);
model.result('pg3').feature.duplicate('fun4', 'fun3');
model.result('pg3').feature('fun4').set('expr', '(C^2/(mu*U*L^3))*sqrt((integrate(integrate(((mu*U*L^2)/(R*C^2))*(24/pi^3)*sum((-1)^(n+1)*ep*g_n(ep,n,0.001,0.5,theta)*cos(pi*beta_n(n)*z/L)/(2*n-1)^3,n,1,n_upper_lim)*cos(theta)*R,theta,0,pi),z,-L/2,L/2))^2+(integrate(integrate(((mu*U*L^2)/(R*C^2))*(24/pi^3)*sum((-1)^(n+1)*ep*g_n(ep,n,0.001,0.5,theta)*cos(pi*beta_n(n)*z/L)/(2*n-1)^3,n,1,n_upper_lim)*sin(theta)*R,theta,0,pi),z,-L/2,L/2))^2)');
model.result('pg3').feature('fun4').setIndex('legends', 'Analytic, \Psi=0.001', 0);
model.result('pg3').feature.copy('fun5', 'pg1/fun5');
model.result('pg3').feature.copy('fun6', 'pg1/fun6');
model.result('pg3').feature.copy('fun7', 'pg1/fun7');
model.result('pg3').feature.copy('fun8', 'pg1/fun8');
model.result('pg3').feature.copy('tblp1', 'pg1/tblp1');
model.result('pg3').feature.copy('tblp2', 'pg1/tblp2');
model.result('pg3').feature.copy('tblp3', 'pg1/tblp3');
model.result('pg3').feature.copy('tblp4', 'pg1/tblp4');
model.result('pg3').feature.copy('ann1', 'pg1/ann1');
model.result('pg3').feature('tblp1').set('table', 'tbl10');
model.result('pg3').feature('tblp2').set('table', 'tbl11');
model.result('pg3').feature('tblp3').set('table', 'tbl12');
model.result('pg3').feature('tblp4').set('table', 'tbl13');
model.result('pg3').feature('ann1').set('text', 'Dashed line: s=0\\Solid line: s=0.5');
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').label('Dimensionless Load vs. Psi: s=0.5');
model.result('pg4').set('data', 'none');
model.result('pg4').set('titletype', 'manual');
model.result('pg4').set('title', 'Dimensionless load for various \epsilon');
model.result('pg4').set('xlabelactive', true);
model.result('pg4').set('xlabel', '\Psi');
model.result('pg4').set('ylabelactive', true);
model.result('pg4').set('ylabel', 'W_nd');
model.result('pg4').set('ylog', true);
model.result('pg4').set('xlog', true);
model.result('pg4').set('legendcolumncount', 2);
model.result('pg4').set('legendmaxwidthinside', 1);
model.result('pg4').create('fun1', 'Function');
model.result('pg4').feature('fun1').set('linewidth', 'preference');
model.result('pg4').feature('fun1').set('data', 'grid2');
model.result('pg4').feature('fun1').set('expr', '(C^2/(mu*U*L^3))*sqrt((integrate(integrate(((mu*U*L^2)/(R*C^2))*(24/pi^3)*sum((-1)^(n+1)*0.1*g_n(0.1,n,Psi,0.5,theta)*cos(pi*beta_n(n)*z/L)/(2*n-1)^3,n,1,n_upper_lim)*cos(theta)*R,theta,0,pi),z,-L/2,L/2))^2+(integrate(integrate(((mu*U*L^2)/(R*C^2))*(24/pi^3)*sum((-1)^(n+1)*0.1*g_n(0.1,n,Psi,0.5,theta)*cos(pi*beta_n(n)*z/L)/(2*n-1)^3,n,1,n_upper_lim)*sin(theta)*R,theta,0,pi),z,-L/2,L/2))^2)');
model.result('pg4').feature('fun1').set('xdataexpr', 'Psi');
model.result('pg4').feature('fun1').set('lowerbound', 0.001);
model.result('pg4').feature('fun1').set('linecolor', 'cyclereset');
model.result('pg4').feature('fun1').set('legend', true);
model.result('pg4').feature('fun1').set('legendmethod', 'manual');
model.result('pg4').feature('fun1').setIndex('legends', 'Analytic, \epsilon=0.1', 0);
model.result('pg4').feature.duplicate('fun2', 'fun1');
model.result('pg4').feature('fun2').set('expr', '(C^2/(mu*U*L^3))*sqrt((integrate(integrate(((mu*U*L^2)/(R*C^2))*(24/pi^3)*sum((-1)^(n+1)*0.3*g_n(0.3,n,Psi,0.5,theta)*cos(pi*beta_n(n)*z/L)/(2*n-1)^3,n,1,n_upper_lim)*cos(theta)*R,theta,0,pi),z,-L/2,L/2))^2+(integrate(integrate(((mu*U*L^2)/(R*C^2))*(24/pi^3)*sum((-1)^(n+1)*0.3*g_n(0.3,n,Psi,0.5,theta)*cos(pi*beta_n(n)*z/L)/(2*n-1)^3,n,1,n_upper_lim)*sin(theta)*R,theta,0,pi),z,-L/2,L/2))^2)');
model.result('pg4').feature('fun2').set('linecolor', 'cycle');
model.result('pg4').feature('fun2').setIndex('legends', 'Analytic, \epsilon=0.3', 0);
model.result('pg4').feature.duplicate('fun3', 'fun2');
model.result('pg4').feature('fun3').set('expr', '(C^2/(mu*U*L^3))*sqrt((integrate(integrate(((mu*U*L^2)/(R*C^2))*(24/pi^3)*sum((-1)^(n+1)*0.5*g_n(0.5,n,Psi,0.5,theta)*cos(pi*beta_n(n)*z/L)/(2*n-1)^3,n,1,n_upper_lim)*cos(theta)*R,theta,0,pi),z,-L/2,L/2))^2+(integrate(integrate(((mu*U*L^2)/(R*C^2))*(24/pi^3)*sum((-1)^(n+1)*0.5*g_n(0.5,n,Psi,0.5,theta)*cos(pi*beta_n(n)*z/L)/(2*n-1)^3,n,1,n_upper_lim)*sin(theta)*R,theta,0,pi),z,-L/2,L/2))^2)');
model.result('pg4').feature('fun3').setIndex('legends', 'Analytic, \epsilon=0.5', 0);
model.result('pg4').feature.duplicate('fun4', 'fun3');
model.result('pg4').feature('fun4').set('expr', '(C^2/(mu*U*L^3))*sqrt((integrate(integrate(((mu*U*L^2)/(R*C^2))*(24/pi^3)*sum((-1)^(n+1)*0.7*g_n(0.7,n,Psi,0.5,theta)*cos(pi*beta_n(n)*z/L)/(2*n-1)^3,n,1,n_upper_lim)*cos(theta)*R,theta,0,pi),z,-L/2,L/2))^2+(integrate(integrate(((mu*U*L^2)/(R*C^2))*(24/pi^3)*sum((-1)^(n+1)*0.7*g_n(0.7,n,Psi,0.5,theta)*cos(pi*beta_n(n)*z/L)/(2*n-1)^3,n,1,n_upper_lim)*sin(theta)*R,theta,0,pi),z,-L/2,L/2))^2)');
model.result('pg4').feature('fun4').setIndex('legends', 'Analytic, \epsilon=0.7', 0);
model.result('pg4').feature.duplicate('fun5', 'fun4');
model.result('pg4').feature('fun5').set('expr', '(C^2/(mu*U*L^3))*sqrt((integrate(integrate(((mu*U*L^2)/(R*C^2))*(24/pi^3)*sum((-1)^(n+1)*0.9*g_n(0.9,n,Psi,0.5,theta)*cos(pi*beta_n(n)*z/L)/(2*n-1)^3,n,1,n_upper_lim)*cos(theta)*R,theta,0,pi),z,-L/2,L/2))^2+(integrate(integrate(((mu*U*L^2)/(R*C^2))*(24/pi^3)*sum((-1)^(n+1)*0.9*g_n(0.9,n,Psi,0.5,theta)*cos(pi*beta_n(n)*z/L)/(2*n-1)^3,n,1,n_upper_lim)*sin(theta)*R,theta,0,pi),z,-L/2,L/2))^2)');
model.result('pg4').feature('fun5').setIndex('legends', 'Analytic, \epsilon=0.9', 0);
model.result('pg4').feature.copy('fun6', 'pg2/fun6');
model.result('pg4').feature.copy('fun7', 'pg2/fun7');
model.result('pg4').feature.copy('fun8', 'pg2/fun8');
model.result('pg4').feature.copy('fun9', 'pg2/fun9');
model.result('pg4').feature.copy('fun10', 'pg2/fun10');
model.result('pg4').feature.copy('tblp1', 'pg2/tblp1');
model.result('pg4').feature.copy('tblp2', 'pg2/tblp2');
model.result('pg4').feature.copy('tblp3', 'pg2/tblp3');
model.result('pg4').feature.copy('tblp4', 'pg2/tblp4');
model.result('pg4').feature.copy('tblp5', 'pg2/tblp5');
model.result('pg4').feature.copy('ann1', 'pg2/ann1');
model.result('pg4').feature('tblp1').set('table', 'tbl14');
model.result('pg4').feature('tblp2').set('table', 'tbl15');
model.result('pg4').feature('tblp3').set('table', 'tbl16');
model.result('pg4').feature('tblp4').set('table', 'tbl17');
model.result('pg4').feature('tblp5').set('table', 'tbl18');
model.result('pg4').feature('ann1').set('text', 'Dashed line: s=0\\Solid line: s=0.5');
model.result('pg4').run;
model.result.create('pg5', 'PolarGroup');
model.result('pg5').label('Attitude Angle vs. Psi');
model.result('pg5').set('data', 'none');
model.result('pg5').set('titletype', 'manual');
model.result('pg5').set('title', 'Attitude angle for various \Psi');
model.result('pg5').set('zeroangle', 'down');
model.result('pg5').set('rotdir', 'cw');
model.result('pg5').set('legendcolumncount', 2);
model.result('pg5').set('legendmaxwidthinside', 1);
model.result('pg5').label('Attitude Angle vs. ep: s=0.25');
model.result('pg5').create('lngr1', 'LineGraph');
model.result('pg5').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg5').feature('lngr1').set('linewidth', 'preference');
model.result('pg5').feature('lngr1').set('data', 'grid1');
model.result('pg5').feature('lngr1').set('expr', 'ep');
model.result('pg5').feature('lngr1').set('xdata', 'expr');
model.result('pg5').feature('lngr1').set('xdataexpr', 'atan(-(integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,1,0.25,theta,z),n,1,n_upper_lim)*sin(theta),theta,0,pi),z,-L/2,L/2))/(integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,1,0.25,theta,z),n,1,n_upper_lim)*cos(theta),theta,0,pi),z,-L/2,L/2)))');
model.result('pg5').feature('lngr1').set('linecolor', 'cyclereset');
model.result('pg5').feature('lngr1').set('legend', true);
model.result('pg5').feature('lngr1').set('legendmethod', 'manual');
model.result('pg5').feature('lngr1').setIndex('legends', 'Analytic, \Psi=1', 0);
model.result('pg5').feature.duplicate('lngr2', 'lngr1');
model.result('pg5').feature('lngr2').set('xdataexpr', 'atan(-(integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,0.1,0.25,theta,z),n,1,n_upper_lim)*sin(theta),theta,0,pi),z,-L/2,L/2))/(integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,0.1,0.25,theta,z),n,1,n_upper_lim)*cos(theta),theta,0,pi),z,-L/2,L/2)))');
model.result('pg5').feature('lngr2').set('linecolor', 'cycle');
model.result('pg5').feature('lngr2').setIndex('legends', 'Analytic, \Psi=0.1', 0);
model.result('pg5').feature.duplicate('lngr3', 'lngr2');
model.result('pg5').feature('lngr3').set('xdataexpr', 'atan(-(integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,0.01,0.25,theta,z),n,1,n_upper_lim)*sin(theta),theta,0,pi),z,-L/2,L/2))/(integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,0.01,0.25,theta,z),n,1,n_upper_lim)*cos(theta),theta,0,pi),z,-L/2,L/2)))');
model.result('pg5').feature('lngr3').setIndex('legends', 'Analytic, \Psi=0.01', 0);
model.result('pg5').feature.duplicate('lngr4', 'lngr3');
model.result('pg5').feature('lngr4').set('xdataexpr', 'atan(-(integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,0.001,0.25,theta,z),n,1,n_upper_lim)*sin(theta),theta,0,pi),z,-L/2,L/2))/(integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,0.001,0.25,theta,z),n,1,n_upper_lim)*cos(theta),theta,0,pi),z,-L/2,L/2)))');
model.result('pg5').feature('lngr4').setIndex('legends', 'Analytic, \Psi=0.001', 0);
model.result('pg5').create('lngr5', 'LineGraph');
model.result('pg5').feature('lngr5').set('markerpos', 'datapoints');
model.result('pg5').feature('lngr5').set('linewidth', 'preference');
model.result('pg5').feature('lngr5').set('data', 'grid1');
model.result('pg5').feature('lngr5').set('expr', 'ep');
model.result('pg5').feature('lngr5').set('xdata', 'expr');
model.result('pg5').feature('lngr5').set('xdataexpr', 'atan(-(integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,1,0,theta,z),n,1,n_upper_lim)*sin(theta),theta,0,pi),z,-L/2,L/2))/(integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,1,0,theta,z),n,1,n_upper_lim)*cos(theta),theta,0,pi),z,-L/2,L/2)))');
model.result('pg5').feature('lngr5').set('linestyle', 'dashed');
model.result('pg5').feature('lngr5').set('linecolor', 'cyclereset');
model.result('pg5').feature.duplicate('lngr6', 'lngr5');
model.result('pg5').feature('lngr6').set('linecolor', 'cycle');
model.result('pg5').feature('lngr6').set('xdataexpr', 'atan(-(integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,0.1,0,theta,z),n,1,n_upper_lim)*sin(theta),theta,0,pi),z,-L/2,L/2))/(integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,0.1,0,theta,z),n,1,n_upper_lim)*cos(theta),theta,0,pi),z,-L/2,L/2)))');
model.result('pg5').feature.duplicate('lngr7', 'lngr6');
model.result('pg5').feature('lngr7').set('xdataexpr', 'atan(-(integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,0.01,0,theta,z),n,1,n_upper_lim)*sin(theta),theta,0,pi),z,-L/2,L/2))/(integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,0.01,0,theta,z),n,1,n_upper_lim)*cos(theta),theta,0,pi),z,-L/2,L/2)))');
model.result('pg5').feature.duplicate('lngr8', 'lngr7');
model.result('pg5').feature('lngr8').set('xdataexpr', 'atan(-(integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,0.001,0,theta,z),n,1,n_upper_lim)*sin(theta),theta,0,pi),z,-L/2,L/2))/(integrate(integrate((24/pi^3)*sum(pbar_summand(ep,n,0.001,0,theta,z),n,1,n_upper_lim)*cos(theta),theta,0,pi),z,-L/2,L/2)))');
model.result('pg5').create('tblp1', 'Table');
model.result('pg5').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg5').feature('tblp1').set('linewidth', 'preference');
model.result('pg5').feature('tblp1').set('xaxisdata', 5);
model.result('pg5').feature('tblp1').set('plotcolumninput', 'manual');
model.result('pg5').feature('tblp1').set('plotcolumns', [3]);
model.result('pg5').feature('tblp1').set('linestyle', 'none');
model.result('pg5').feature('tblp1').set('linecolor', 'cyclereset');
model.result('pg5').feature('tblp1').set('linemarker', 'cyclereset');
model.result('pg5').feature('tblp1').set('legend', true);
model.result('pg5').feature('tblp1').set('legendmethod', 'manual');
model.result('pg5').feature('tblp1').setIndex('legends', 'Numeric, \Psi=1', 0);
model.result('pg5').feature.duplicate('tblp2', 'tblp1');
model.result('pg5').feature('tblp2').set('table', 'tbl2');
model.result('pg5').feature('tblp2').set('linecolor', 'cycle');
model.result('pg5').feature('tblp2').set('linemarker', 'cycle');
model.result('pg5').feature('tblp2').setIndex('legends', 'Numeric, \Psi=0.1', 0);
model.result('pg5').feature.duplicate('tblp3', 'tblp2');
model.result('pg5').feature('tblp3').set('table', 'tbl3');
model.result('pg5').feature('tblp3').setIndex('legends', 'Numeric, \Psi=0.01', 0);
model.result('pg5').feature.duplicate('tblp4', 'tblp3');
model.result('pg5').feature('tblp4').set('table', 'tbl4');
model.result('pg5').feature('tblp4').setIndex('legends', 'Numeric, \Psi=0.001', 0);
model.result('pg5').run;
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').set('data', 'dset3');
model.result('pg6').label('Darcy''s Velocity Streamlines, Film Pressure Contour and Film Thickness');
model.result('pg6').set('legendpos', 'rightdouble');
model.result('pg6').create('str1', 'Streamline');
model.result('pg6').feature('str1').setIndex('expr', 'dl.u', 0);
model.result('pg6').feature('str1').setIndex('expr', 'dl.v', 1);
model.result('pg6').feature('str1').set('expr', {'dl.u' 'dl.v' 'dl.w'});
model.result('pg6').feature('str1').set('posmethod', 'uniform');
model.result('pg6').feature('str1').set('pointtype', 'arrow');
model.result('pg6').feature('str1').set('color', 'black');
model.result('pg6').create('con1', 'Contour');
model.result('pg6').feature('con1').set('number', 50);
model.result('pg6').feature('con1').set('legendtype', 'filled');
model.result('pg6').feature('con1').create('sel1', 'Selection');
model.result('pg6').feature('con1').feature('sel1').selection.set([8 9 14 16]);
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', 'tff.h');
model.result('pg6').feature('surf1').set('colortable', 'JupiterAuroraBorealis');
model.result('pg6').feature('surf1').set('colortabletrans', 'reverse');
model.result('pg6').feature('surf1').create('sel1', 'Selection');
model.result('pg6').feature('surf1').feature('sel1').selection.set([8 9 14 16]);
model.result('pg6').feature('surf1').create('tran1', 'Transparency');
model.result('pg6').feature('surf1').feature('tran1').set('transparency', 0.1);
model.result('pg6').create('surf2', 'Surface');
model.result('pg6').feature('surf2').set('expr', '1');
model.result('pg6').feature('surf2').set('titletype', 'none');
model.result('pg6').feature('surf2').set('coloring', 'uniform');
model.result('pg6').feature('surf2').set('color', 'gray');
model.result('pg6').feature('surf2').create('sel1', 'Selection');
model.result('pg6').feature('surf2').feature('sel1').selection.set([2 3 4 5 6 7 11 12 13 17 18 19]);
model.result('pg6').feature('surf2').create('tran1', 'Transparency');
model.result('pg6').set('view', 'new');
model.result('pg6').run;

model.view('view2').camera.set('zoomanglefull', 14.514707565307617);
model.view('view2').camera.setIndex('position', -1.0261409282684326, 0);
model.view('view2').camera.setIndex('position', 0.48406895995140076, 1);
model.view('view2').camera.setIndex('position', 0.9598122239112854, 2);
model.view('view2').camera.setIndex('target', 0, 0);
model.view('view2').camera.set('target', [0 0 0]);
model.view('view2').camera.setIndex('up', 0.284920334815979, 0);
model.view('view2').camera.setIndex('up', 0.9431638121604919, 1);
model.view('view2').camera.setIndex('up', -0.17106245458126068, 2);
model.view('view2').camera.setIndex('viewoffset', -0.030209513381123543, 0);
model.view('view2').camera.setIndex('viewoffset', 0.023164859041571617, 1);

model.title('Self-Lubricating Journal Bearing');

model.description('This example describes how to simulate the self-lubricating phenomenon of a liquid lubricant in a journal bearing. A porous bushing is press-fitted to a bearing and saturated with a lubricant. It acts as a reservoir for the redistribution of the thin film of lubricant between regions of differing pressure values in the clearance between the bush and the journal.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;
model.sol('sol8').clearSolutionData;
model.sol('sol9').clearSolutionData;
model.sol('sol10').clearSolutionData;
model.sol('sol11').clearSolutionData;
model.sol('sol12').clearSolutionData;
model.sol('sol13').clearSolutionData;
model.sol('sol14').clearSolutionData;
model.sol('sol15').clearSolutionData;
model.sol('sol16').clearSolutionData;
model.sol('sol17').clearSolutionData;
model.sol('sol18').clearSolutionData;
model.sol('sol19').clearSolutionData;
model.sol('sol20').clearSolutionData;
model.sol('sol21').clearSolutionData;
model.sol('sol22').clearSolutionData;
model.sol('sol23').clearSolutionData;
model.sol('sol24').clearSolutionData;
model.sol('sol25').clearSolutionData;
model.sol('sol26').clearSolutionData;
model.sol('sol27').clearSolutionData;
model.sol('sol28').clearSolutionData;
model.sol('sol29').clearSolutionData;
model.sol('sol30').clearSolutionData;
model.sol('sol31').clearSolutionData;
model.sol('sol32').clearSolutionData;
model.sol('sol33').clearSolutionData;
model.sol('sol34').clearSolutionData;
model.sol('sol35').clearSolutionData;
model.sol('sol36').clearSolutionData;
model.sol('sol37').clearSolutionData;
model.sol('sol38').clearSolutionData;
model.sol('sol39').clearSolutionData;
model.sol('sol40').clearSolutionData;
model.sol('sol41').clearSolutionData;
model.sol('sol42').clearSolutionData;
model.sol('sol43').clearSolutionData;

model.label('self_lubricating_bearing.mph');

model.modelNode.label('Components');

out = model;
