function out = model
%
% ion_funnel.m
%
% Model exported on May 26 2025, 21:31 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Particle_Tracing_Module/Charged_Particle_Tracing');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('es', 'Electrostatics', 'geom1');
model.physics('es').model('comp1');
model.physics.create('ec', 'ConductiveMedia', 'geom1');
model.physics('ec').model('comp1');
model.physics.create('cpt', 'ChargedParticleTracing', 'geom1');
model.physics('cpt').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/es', true);
model.study('std1').feature('stat').setSolveFor('/physics/ec', true);
model.study('std1').feature('stat').setSolveFor('/physics/cpt', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('f0', '0.7[MHz]', 'RF frequency');
model.param.set('Vrf', '800[V]', 'RF voltage amplitude');
model.param.set('EDC', '-3e3[V/m]', 'Static axial E-field');
model.param.set('ND', '3.2956e22[1/m^3]', 'Background gas number density');
model.param.set('Nstraight', '15', 'Number of electrodes in straight section');
model.param.set('Ninclined', '21', 'Number of electrodes in inclined section');
model.param.set('Nelec', 'Nstraight+Ninclined', 'Number of electrodes');
model.param.set('welec', '20[mm]', 'Electrode width');
model.param.set('telec', '1[mm]', 'Electrode thickness');
model.param.set('tgap', '2.5[mm]', 'Spacing between electrodes');
model.param.set('hfunnel', '(Nelec-1)*tgap+Nelec*telec', 'Ion funnel height');
model.param.set('rmin', '3[mm]', 'Minimum inner radius');
model.param.set('rmax', '25[mm]', 'Maximum inner radius');

model.geom('geom1').lengthUnit('mm');
model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', {'welec' 'telec'});
model.geom('geom1').feature('r1').set('pos', {'rmax' '0'});
model.geom('geom1').run('r1');
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').set('size', {'welec' 'telec'});
model.geom('geom1').feature('r2').set('pos', {'rmax' 'telec+tgap'});
model.geom('geom1').run('r2');
model.geom('geom1').create('arr1', 'Array');
model.geom('geom1').feature('arr1').selection('input').set({'r1'});
model.geom('geom1').feature('arr1').set('type', 'linear');
model.geom('geom1').feature('arr1').set('linearsize', '(Nstraight+1)/2');
model.geom('geom1').feature('arr1').set('displ', {'0' '2*(telec+tgap)'});
model.geom('geom1').feature('arr1').set('selresult', true);
model.geom('geom1').feature('arr1').set('selresultshow', 'bnd');
model.geom('geom1').selection.create('csel1', 'CumulativeSelection');
model.geom('geom1').selection('csel1').label('Domains to Subtract');
model.geom('geom1').feature('arr1').set('contributeto', 'csel1');
model.geom('geom1').run('arr1');
model.geom('geom1').create('arr2', 'Array');
model.geom('geom1').feature('arr2').selection('input').set({'r2'});
model.geom('geom1').feature('arr2').set('type', 'linear');
model.geom('geom1').feature('arr2').set('linearsize', '(Nstraight-1)/2');
model.geom('geom1').feature('arr2').set('displ', {'0' '2*(telec+tgap)'});
model.geom('geom1').feature('arr2').set('selresult', true);
model.geom('geom1').feature('arr2').set('selresultshow', 'bnd');
model.geom('geom1').feature('arr2').set('contributeto', 'csel1');
model.geom('geom1').run('arr2');
model.geom('geom1').create('r3', 'Rectangle');
model.geom('geom1').feature('r3').set('size', {'welec' 'telec'});
model.geom('geom1').feature('r3').set('pos', {'rmin' 'hfunnel-telec'});
model.geom('geom1').run('r3');
model.geom('geom1').create('r4', 'Rectangle');
model.geom('geom1').feature('r4').set('size', {'welec' 'telec'});
model.geom('geom1').feature('r4').set('pos', {'rmin+(rmax-rmin)/Ninclined' '0'});
model.geom('geom1').feature('r4').setIndex('pos', 'hfunnel-(2*telec+tgap)', 1);
model.geom('geom1').run('r4');
model.geom('geom1').create('arr3', 'Array');
model.geom('geom1').feature('arr3').selection('input').set({'r3'});
model.geom('geom1').feature('arr3').set('type', 'linear');
model.geom('geom1').feature('arr3').set('linearsize', '(Ninclined+1)/2');
model.geom('geom1').feature('arr3').set('displ', {'2*(rmax-rmin)/Ninclined' '0'});
model.geom('geom1').feature('arr3').setIndex('displ', '-2*(telec+tgap)', 1);
model.geom('geom1').feature('arr3').set('selresult', true);
model.geom('geom1').feature('arr3').set('selresultshow', 'bnd');
model.geom('geom1').feature('arr3').set('contributeto', 'csel1');
model.geom('geom1').run('arr3');
model.geom('geom1').create('arr4', 'Array');
model.geom('geom1').feature('arr4').selection('input').set({'r4'});
model.geom('geom1').feature('arr4').set('type', 'linear');
model.geom('geom1').feature('arr4').set('linearsize', '(Ninclined-1)/2');
model.geom('geom1').feature('arr4').set('displ', {'2*(rmax-rmin)/Ninclined' '0'});
model.geom('geom1').feature('arr4').setIndex('displ', '-2*(telec+tgap)', 1);
model.geom('geom1').feature('arr4').set('selresult', true);
model.geom('geom1').feature('arr4').set('selresultshow', 'bnd');
model.geom('geom1').feature('arr4').set('contributeto', 'csel1');
model.geom('geom1').run('arr4');
model.geom('geom1').create('r5', 'Rectangle');
model.geom('geom1').feature('r5').set('size', {'rmax+welec+10[mm]' '1'});
model.geom('geom1').feature('r5').setIndex('size', 'hfunnel+20[mm]', 1);
model.geom('geom1').feature('r5').set('pos', {'0.2[mm]' '-10[mm]'});
model.geom('geom1').run('r5');
model.geom('geom1').create('dif1', 'Difference');
model.geom('geom1').feature('dif1').selection('input').set({'r5'});
model.geom('geom1').feature('dif1').selection('input2').named('csel1');
model.geom('geom1').runPre('fin');

model.selection.create('uni1', 'Union');
model.selection('uni1').model('comp1');

model.geom('geom1').run;

model.selection('uni1').label('Odd electrodes');
model.selection('uni1').set('entitydim', 1);
model.selection('uni1').set('input', {'geom1_arr1_bnd' 'geom1_arr4_bnd'});
model.selection.create('uni2', 'Union');
model.selection('uni2').model('comp1');
model.selection('uni2').label('Even electrodes');
model.selection('uni2').set('entitydim', 1);
model.selection('uni2').set('input', {'geom1_arr2_bnd' 'geom1_arr3_bnd'});
model.selection.create('uni3', 'Union');
model.selection('uni3').model('comp1');
model.selection('uni3').label('All electrodes');
model.selection('uni3').set('entitydim', 1);
model.selection('uni3').set('input', {'uni1' 'uni2'});
model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');
model.selection('sel1').label('Exterior boundaries');
model.selection('sel1').geom(1);
model.selection('sel1').set([2 3 148]);
model.selection.create('uni4', 'Union');
model.selection('uni4').model('comp1');
model.selection('uni4').label('All boundaries');
model.selection('uni4').set('entitydim', 1);
model.selection('uni4').set('input', {'uni3' 'sel1'});

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').label('Perfect vacuum');
model.material('mat1').propertyGroup('def').set('density', '');
model.material('mat1').propertyGroup('def').set('relpermeability', '');
model.material('mat1').propertyGroup('def').set('relpermittivity', '');
model.material('mat1').propertyGroup('def').set('electricconductivity', '');
model.material('mat1').propertyGroup('def').set('density', '0');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'0' '0' '0' '0' '0' '0' '0' '0' '0'});

model.physics('es').create('pot1', 'ElectricPotential', 1);
model.physics('es').feature('pot1').selection.named('uni4');
model.physics('es').feature('pot1').set('V0', 'EDC*z');
model.physics('ec').create('term1', 'Terminal', 1);
model.physics('ec').feature('term1').selection.named('uni1');
model.physics('ec').feature('term1').set('TerminalType', 'Voltage');
model.physics('ec').feature('term1').set('V0', 'Vrf');
model.physics('ec').create('term2', 'Terminal', 1);
model.physics('ec').feature('term2').selection.named('uni2');
model.physics('ec').feature('term2').set('TerminalType', 'Voltage');
model.physics('ec').feature('term2').set('V0', '-Vrf');
model.physics('cpt').prop('IncludeOutOfPlane').setIndex('IncludeOutOfPlane', 1, 0);
model.physics('cpt').feature('pp1').set('mp', '0.146[kg/mol]/N_A_const');
model.physics('cpt').feature('pp1').set('Z', 1);
model.physics('cpt').create('wall2', 'Wall', 1);
model.physics('cpt').feature('wall2').selection.set([1]);
model.physics('cpt').feature('wall2').set('WallCondition', 'Bounce');
model.physics('cpt').create('relg1', 'ReleaseGrid', -1);
model.physics('cpt').feature('relg1').setIndex('x0', 'range(2,1,20)', 0);
model.physics('cpt').feature('relg1').set('InitialVelocity', 'Maxwellian');
model.physics('cpt').feature('relg1').setIndex('M', 5, 0);
model.physics('cpt').create('ef1', 'ElectricForce', 2);
model.physics('cpt').feature('ef1').selection.all;
model.physics('cpt').feature('ef1').set('E_src', 'root.comp1.es.Er');
model.physics('cpt').feature('ef1').set('UsePPR', true);
model.physics('cpt').create('ef2', 'ElectricForce', 2);
model.physics('cpt').feature('ef2').selection.all;
model.physics('cpt').feature('ef2').set('E_src', 'root.comp1.ec.Er');
model.physics('cpt').feature('ef2').set('TimeDependenceOfField', 'TimeHarmonic');
model.physics('cpt').feature('ef2').set('UsePPR', true);

model.func.create('an1', 'Analytic');
model.func('an1').model('comp1');
model.func('an1').set('funcname', 'Qm');
model.func('an1').set('expr', '1.15e-18*x^(-0.1)*(1+0.015/x)^0.6');
model.func('an1').setIndex('argunit', 'eV', 0);
model.func('an1').set('fununit', 'm^2');
model.func.create('an2', 'Analytic');
model.func('an2').model('comp1');
model.func('an2').set('funcname', 'Qi');
model.func('an2').set('expr', '2e-19/(x^(0.5)*(1+x))+3e-19*x/(1+x/3)^(2.3)');
model.func('an2').setIndex('argunit', 'eV', 0);
model.func('an2').set('fununit', 'm^2');

model.physics('cpt').create('col1', 'Collisions', 2);
model.physics('cpt').feature('col1').selection.all;
model.physics('cpt').feature('col1').set('Nd', 'ND');
model.physics('cpt').feature('col1').set('CountAllCollisions', true);
model.physics('cpt').feature('col1').create('ela1', 'Elastic', 2);
model.physics('cpt').feature('col1').feature('ela1').set('xsec', 'Qi(cpt.Ep)');
model.physics('cpt').feature('col1').feature('ela1').set('CountCollisions', true);
model.physics('cpt').feature('col1').create('cex1', 'ResonantChargeExchange', 2);
model.physics('cpt').feature('col1').feature('cex1').set('xsec', '(Qm(cpt.Ep)-Qi(cpt.Ep))/2');
model.physics('cpt').feature('col1').feature('cex1').set('CountCollisions', true);

model.study('std1').feature('stat').setEntry('activate', 'ec', false);
model.study('std1').create('freq', 'Frequency');
model.study('std1').feature('freq').set('plist', 'f0');
model.study('std1').feature('freq').setEntry('activate', 'es', false);
model.study('std1').feature('freq').set('usesol', true);
model.study('std1').feature('freq').set('notsolmethod', 'sol');
model.study('std1').feature('freq').set('notstudy', 'std1');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'freq');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'freq');
model.sol('sol1').create('s2', 'Stationary');
model.sol('sol1').feature('s2').create('p1', 'Parametric');
model.sol('sol1').feature('s2').feature.remove('pDef');
model.sol('sol1').feature('s2').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s2').feature('p1').set('plistarr', {'f0'});
model.sol('sol1').feature('s2').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s2').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s2').feature('p1').set('preusesol', 'no');
model.sol('sol1').feature('s2').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s2').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s2').feature('p1').set('plotgroup', 'Default');
model.sol('sol1').feature('s2').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s2').feature('p1').set('probes', {});
model.sol('sol1').feature('s2').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s2').set('linpmethod', 'sol');
model.sol('sol1').feature('s2').set('linpsol', 'zero');
model.sol('sol1').feature('s2').set('control', 'freq');
model.sol('sol1').feature('s2').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s2').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s2').feature.remove('fcDef');
model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol1').feature('v2').set('solnum', 'auto');
model.sol('sol1').feature('v2').set('solvertype', 'solnum');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').label('Electric Potential (es)');
model.result('pg1').set('dataisaxisym', 'off');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').set('showlegendsmaxmin', true);
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 1, 0);
model.result('pg1').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom2/pdef1/pcond2/pcond2/pg1');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('solutionparams', 'parent');
model.result('pg1').feature('surf1').set('colortable', 'Dipole');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result('pg1').feature.create('str1', 'Streamline');
model.result('pg1').feature('str1').set('showsolutionparams', 'on');
model.result('pg1').feature('str1').set('solutionparams', 'parent');
model.result('pg1').feature('str1').set('titletype', 'none');
model.result('pg1').feature('str1').set('posmethod', 'uniform');
model.result('pg1').feature('str1').set('udist', 0.02);
model.result('pg1').feature('str1').set('maxlen', 0.4);
model.result('pg1').feature('str1').set('maxtime', Inf);
model.result('pg1').feature('str1').set('inheritcolor', false);
model.result('pg1').feature('str1').set('showsolutionparams', 'on');
model.result('pg1').feature('str1').set('maxtime', Inf);
model.result('pg1').feature('str1').set('showsolutionparams', 'on');
model.result('pg1').feature('str1').set('maxtime', Inf);
model.result('pg1').feature('str1').set('showsolutionparams', 'on');
model.result('pg1').feature('str1').set('maxtime', Inf);
model.result('pg1').feature('str1').set('showsolutionparams', 'on');
model.result('pg1').feature('str1').set('maxtime', Inf);
model.result('pg1').feature('str1').set('data', 'parent');
model.result('pg1').feature('str1').selection.geom('geom1', 1);
model.result('pg1').feature('str1').selection.set([1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148]);
model.result('pg1').feature('str1').set('inheritplot', 'surf1');
model.result('pg1').feature('str1').feature.create('col1', 'Color');
model.result('pg1').feature('str1').feature('col1').set('colortable', 'DipoleDark');
model.result('pg1').feature('str1').feature('col1').set('colorlegend', false);
model.result('pg1').feature('str1').feature.create('filt1', 'Filter');
model.result('pg1').feature('str1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result.dataset.create('rev1', 'Revolve2D');
model.result.dataset('rev1').set('data', 'none');
model.result.dataset('rev1').set('startangle', -90);
model.result.dataset('rev1').set('revangle', 225);
model.result.dataset('rev1').set('data', 'dset1');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Electric Potential, Revolved Geometry (es)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('showlegendsmaxmin', true);
model.result('pg2').set('data', 'rev1');
model.result('pg2').setIndex('looplevel', 1, 0);
model.result('pg2').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom2/pdef1/pcond2/pcond3/pcond1/pg1');
model.result('pg2').feature.create('vol1', 'Volume');
model.result('pg2').feature('vol1').set('showsolutionparams', 'on');
model.result('pg2').feature('vol1').set('solutionparams', 'parent');
model.result('pg2').feature('vol1').set('colortable', 'Dipole');
model.result('pg2').feature('vol1').set('showsolutionparams', 'on');
model.result('pg2').feature('vol1').set('data', 'parent');
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').label('Electric Field Norm (es)');
model.result('pg3').set('dataisaxisym', 'off');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').set('showlegendsmaxmin', true);
model.result('pg3').set('data', 'dset1');
model.result('pg3').setIndex('looplevel', 1, 0);
model.result('pg3').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom3/pdef1/pcond2/pcond2/pg1');
model.result('pg3').feature.create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('solutionparams', 'parent');
model.result('pg3').feature('surf1').set('expr', 'es.normE');
model.result('pg3').feature('surf1').set('colortable', 'Prism');
model.result('pg3').feature('surf1').set('colortabletrans', 'nonlinear');
model.result('pg3').feature('surf1').set('colorcalibration', -0.8);
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('data', 'parent');
model.result('pg3').feature.create('str1', 'Streamline');
model.result('pg3').feature('str1').set('showsolutionparams', 'on');
model.result('pg3').feature('str1').set('solutionparams', 'parent');
model.result('pg3').feature('str1').set('titletype', 'none');
model.result('pg3').feature('str1').set('posmethod', 'uniform');
model.result('pg3').feature('str1').set('udist', 0.02);
model.result('pg3').feature('str1').set('maxlen', 0.4);
model.result('pg3').feature('str1').set('maxtime', Inf);
model.result('pg3').feature('str1').set('inheritcolor', false);
model.result('pg3').feature('str1').set('showsolutionparams', 'on');
model.result('pg3').feature('str1').set('maxtime', Inf);
model.result('pg3').feature('str1').set('showsolutionparams', 'on');
model.result('pg3').feature('str1').set('maxtime', Inf);
model.result('pg3').feature('str1').set('showsolutionparams', 'on');
model.result('pg3').feature('str1').set('maxtime', Inf);
model.result('pg3').feature('str1').set('showsolutionparams', 'on');
model.result('pg3').feature('str1').set('maxtime', Inf);
model.result('pg3').feature('str1').set('data', 'parent');
model.result('pg3').feature('str1').selection.geom('geom1', 1);
model.result('pg3').feature('str1').selection.set([1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148]);
model.result('pg3').feature('str1').set('inheritplot', 'surf1');
model.result('pg3').feature('str1').feature.create('col1', 'Color');
model.result('pg3').feature('str1').feature('col1').set('expr', 'es.normE');
model.result('pg3').feature('str1').feature('col1').set('colortable', 'PrismDark');
model.result('pg3').feature('str1').feature('col1').set('colorlegend', false);
model.result('pg3').feature('str1').feature('col1').set('colortabletrans', 'nonlinear');
model.result('pg3').feature('str1').feature('col1').set('colorcalibration', -0.8);
model.result('pg3').feature('str1').feature.create('filt1', 'Filter');
model.result('pg3').feature('str1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').label('Electric Potential (ec)');
model.result('pg4').set('dataisaxisym', 'off');
model.result('pg4').set('frametype', 'spatial');
model.result('pg4').set('showlegendsmaxmin', true);
model.result('pg4').set('data', 'dset1');
model.result('pg4').setIndex('looplevel', 1, 0);
model.result('pg4').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom2/pdef1/pcond2/pcond2/pg1');
model.result('pg4').feature.create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('showsolutionparams', 'on');
model.result('pg4').feature('surf1').set('solutionparams', 'parent');
model.result('pg4').feature('surf1').set('expr', 'V2');
model.result('pg4').feature('surf1').set('colortable', 'Dipole');
model.result('pg4').feature('surf1').set('showsolutionparams', 'on');
model.result('pg4').feature('surf1').set('data', 'parent');
model.result('pg4').feature.create('str1', 'Streamline');
model.result('pg4').feature('str1').set('showsolutionparams', 'on');
model.result('pg4').feature('str1').set('solutionparams', 'parent');
model.result('pg4').feature('str1').set('expr', {'ec.Er' 'ec.Ez'});
model.result('pg4').feature('str1').set('titletype', 'none');
model.result('pg4').feature('str1').set('posmethod', 'uniform');
model.result('pg4').feature('str1').set('udist', 0.02);
model.result('pg4').feature('str1').set('maxlen', 0.4);
model.result('pg4').feature('str1').set('maxtime', Inf);
model.result('pg4').feature('str1').set('inheritcolor', false);
model.result('pg4').feature('str1').set('showsolutionparams', 'on');
model.result('pg4').feature('str1').set('maxtime', Inf);
model.result('pg4').feature('str1').set('showsolutionparams', 'on');
model.result('pg4').feature('str1').set('maxtime', Inf);
model.result('pg4').feature('str1').set('showsolutionparams', 'on');
model.result('pg4').feature('str1').set('maxtime', Inf);
model.result('pg4').feature('str1').set('showsolutionparams', 'on');
model.result('pg4').feature('str1').set('maxtime', Inf);
model.result('pg4').feature('str1').set('data', 'parent');
model.result('pg4').feature('str1').selection.geom('geom1', 1);
model.result('pg4').feature('str1').selection.set([1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148]);
model.result('pg4').feature('str1').set('inheritplot', 'surf1');
model.result('pg4').feature('str1').feature.create('col1', 'Color');
model.result('pg4').feature('str1').feature('col1').set('expr', 'V2');
model.result('pg4').feature('str1').feature('col1').set('colortable', 'DipoleDark');
model.result('pg4').feature('str1').feature('col1').set('colorlegend', false);
model.result('pg4').feature('str1').feature.create('filt1', 'Filter');
model.result('pg4').feature('str1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result.dataset('rev1').set('data', 'dset1');
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').label('Electric Potential, Revolved Geometry (ec)');
model.result('pg5').set('frametype', 'spatial');
model.result('pg5').set('showlegendsmaxmin', true);
model.result('pg5').set('data', 'rev1');
model.result('pg5').setIndex('looplevel', 1, 0);
model.result('pg5').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom2/pdef1/pcond2/pcond3/pcond1/pg1');
model.result('pg5').feature.create('vol1', 'Volume');
model.result('pg5').feature('vol1').set('showsolutionparams', 'on');
model.result('pg5').feature('vol1').set('solutionparams', 'parent');
model.result('pg5').feature('vol1').set('expr', 'V2');
model.result('pg5').feature('vol1').set('colortable', 'Dipole');
model.result('pg5').feature('vol1').set('showsolutionparams', 'on');
model.result('pg5').feature('vol1').set('data', 'parent');
model.result.create('pg6', 'PlotGroup2D');
model.result('pg6').label('Electric Field Norm (ec)');
model.result('pg6').set('dataisaxisym', 'off');
model.result('pg6').set('frametype', 'spatial');
model.result('pg6').set('showlegendsmaxmin', true);
model.result('pg6').set('data', 'dset1');
model.result('pg6').setIndex('looplevel', 1, 0);
model.result('pg6').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom3/pdef1/pcond2/pcond2/pg1');
model.result('pg6').feature.create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('showsolutionparams', 'on');
model.result('pg6').feature('surf1').set('solutionparams', 'parent');
model.result('pg6').feature('surf1').set('expr', 'ec.normE');
model.result('pg6').feature('surf1').set('colortable', 'Prism');
model.result('pg6').feature('surf1').set('colortabletrans', 'nonlinear');
model.result('pg6').feature('surf1').set('colorcalibration', -0.8);
model.result('pg6').feature('surf1').set('showsolutionparams', 'on');
model.result('pg6').feature('surf1').set('data', 'parent');
model.result('pg6').feature.create('str1', 'Streamline');
model.result('pg6').feature('str1').set('showsolutionparams', 'on');
model.result('pg6').feature('str1').set('solutionparams', 'parent');
model.result('pg6').feature('str1').set('expr', {'ec.Er' 'ec.Ez'});
model.result('pg6').feature('str1').set('titletype', 'none');
model.result('pg6').feature('str1').set('posmethod', 'uniform');
model.result('pg6').feature('str1').set('udist', 0.02);
model.result('pg6').feature('str1').set('maxlen', 0.4);
model.result('pg6').feature('str1').set('maxtime', Inf);
model.result('pg6').feature('str1').set('inheritcolor', false);
model.result('pg6').feature('str1').set('showsolutionparams', 'on');
model.result('pg6').feature('str1').set('maxtime', Inf);
model.result('pg6').feature('str1').set('showsolutionparams', 'on');
model.result('pg6').feature('str1').set('maxtime', Inf);
model.result('pg6').feature('str1').set('showsolutionparams', 'on');
model.result('pg6').feature('str1').set('maxtime', Inf);
model.result('pg6').feature('str1').set('showsolutionparams', 'on');
model.result('pg6').feature('str1').set('maxtime', Inf);
model.result('pg6').feature('str1').set('data', 'parent');
model.result('pg6').feature('str1').selection.geom('geom1', 1);
model.result('pg6').feature('str1').selection.set([1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148]);
model.result('pg6').feature('str1').set('inheritplot', 'surf1');
model.result('pg6').feature('str1').feature.create('col1', 'Color');
model.result('pg6').feature('str1').feature('col1').set('expr', 'ec.normE');
model.result('pg6').feature('str1').feature('col1').set('colortable', 'PrismDark');
model.result('pg6').feature('str1').feature('col1').set('colorlegend', false);
model.result('pg6').feature('str1').feature('col1').set('colortabletrans', 'nonlinear');
model.result('pg6').feature('str1').feature('col1').set('colorcalibration', -0.8);
model.result('pg6').feature('str1').feature.create('filt1', 'Filter');
model.result('pg6').feature('str1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result('pg1').run;
model.result.create('pg7', 'PlotGroup2D');
model.result('pg7').run;
model.result('pg7').label('Sum of AC and DC Potentials');
model.result('pg7').create('con1', 'Contour');
model.result('pg7').feature('con1').set('expr', 'V+V2');
model.result('pg7').feature('con1').set('number', 30);
model.result('pg7').feature('con1').set('contourtype', 'filled');
model.result('pg7').feature('con1').set('colorlegend', false);
model.result('pg7').run;

model.study.create('std2');
model.study('std2').create('time', 'Transient');
model.study('std2').feature('time').setSolveFor('/physics/es', false);
model.study('std2').feature('time').setSolveFor('/physics/ec', false);
model.study('std2').feature('time').setSolveFor('/physics/cpt', true);
model.study('std2').feature('time').set('tlist', 'range(0,1.0e-5,0.0015)');
model.study('std2').feature('time').set('usertol', true);
model.study('std2').feature('time').set('rtol', '1e-3');
model.study('std2').feature('time').set('usesol', true);
model.study('std2').feature('time').set('notsolmethod', 'sol');
model.study('std2').feature('time').set('notstudy', 'std1');

model.sol.create('sol3');
model.sol('sol3').study('std2');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std2');
model.sol('sol3').feature('st1').set('studystep', 'time');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').set('control', 'time');
model.sol('sol3').create('t1', 'Time');
model.sol('sol3').feature('t1').set('tlist', 'range(0,1.0e-5,0.0015)');
model.sol('sol3').feature('t1').set('plot', 'off');
model.sol('sol3').feature('t1').set('plotgroup', 'pg1');
model.sol('sol3').feature('t1').set('plotfreq', 'tout');
model.sol('sol3').feature('t1').set('probesel', 'all');
model.sol('sol3').feature('t1').set('probes', {});
model.sol('sol3').feature('t1').set('probefreq', 'tsteps');
model.sol('sol3').feature('t1').set('rtol', 1.0E-5);
model.sol('sol3').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol3').feature('t1').set('reacf', true);
model.sol('sol3').feature('t1').set('storeudot', true);
model.sol('sol3').feature('t1').set('tstepsgenalpha', 'strict');
model.sol('sol3').feature('t1').set('endtimeinterpolation', true);
model.sol('sol3').feature('t1').set('timemethod', 'genalpha');
model.sol('sol3').feature('t1').set('estrat', 'exclude');
model.sol('sol3').feature('t1').set('control', 'time');
model.sol('sol3').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('t1').feature('fc1').set('ntolfact', 0.1);
model.sol('sol3').feature('t1').create('i1', 'Iterative');
model.sol('sol3').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol3').feature('t1').feature('i1').create('ja1', 'Jacobi');
model.sol('sol3').feature('t1').feature('fc1').set('linsolver', 'i1');
model.sol('sol3').feature('t1').feature('fc1').set('ntolfact', 0.1);
model.sol('sol3').feature('t1').feature.remove('fcDef');
model.sol('sol3').attach('std2');
model.sol('sol3').feature('t1').set('atolglobalvaluemethod', 'manual');
model.sol('sol3').feature('t1').set('atolglobal', '1e-4');
model.sol('sol3').feature('t1').set('maxstepconstraintgenalpha', 'const');
model.sol('sol3').feature('t1').set('maxstepgenalpha', '1e-8');
model.sol('sol3').feature('t1').set('reacf', false);
model.sol('sol3').feature('t1').set('storeudot', false);
model.sol('sol3').feature('t1').feature('aDef').set('convinfo', false);
model.sol('sol3').runAll;

model.result.dataset.create('part1', 'Particle');
model.result.dataset('part1').set('solution', 'sol3');
model.result.dataset('part1').set('posdof', {'comp1.qr' 'comp1.qz'});
model.result.dataset('part1').set('geom', 'geom1');
model.result.dataset('part1').set('pgeom', 'pgeom_cpt');
model.result.dataset('part1').set('pgeomspec', 'fromphysics');
model.result.dataset('part1').set('physicsinterface', 'cpt');
model.result.create('pg8', 'PlotGroup2D');
model.result('pg8').set('data', 'part1');
model.result('pg8').setIndex('looplevel', 151, 0);
model.result('pg8').label('Particle Trajectories (cpt)');
model.result('pg8').create('traj1', 'ParticleTrajectories');
model.result('pg8').feature('traj1').set('pointtype', 'point');
model.result('pg8').feature('traj1').set('linetype', 'none');
model.result('pg8').feature('traj1').create('col1', 'Color');
model.result('pg8').feature('traj1').feature('col1').set('expr', 'cpt.V');
model.result('pg8').run;
model.result('pg8').run;
model.result('pg8').feature('traj1').set('linetype', 'line');
model.result('pg8').run;
model.result.create('pg9', 'PlotGroup2D');
model.result('pg9').run;
model.result('pg9').label('Transverse Particle Positions');
model.result('pg9').set('data', 'part1');
model.result('pg9').setIndex('looplevel', 151, 0);
model.result('pg9').set('edges', false);
model.result('pg9').create('phpo1', 'PhasePortrait');
model.result('pg9').feature('phpo1').set('xdata', 'manual');
model.result('pg9').feature('phpo1').set('xmanual', 'qr*cos(qphi)');
model.result('pg9').feature('phpo1').set('ydata', 'manual');
model.result('pg9').feature('phpo1').set('ymanual', 'qr*sin(qphi)');
model.result('pg9').feature('phpo1').create('col1', 'Color');
model.result('pg9').run;
model.result('pg9').feature('phpo1').feature('col1').set('expr', 'qz>120[mm]');
model.result('pg9').run;
model.result.export.create('anim1', 'Animation');
model.result.export('anim1').set('fontsize', '9');
model.result.export('anim1').set('colortheme', 'globaltheme');
model.result.export('anim1').set('customcolor', [1 1 1]);
model.result.export('anim1').set('background', 'color');
model.result.export('anim1').set('gltfincludelines', 'on');
model.result.export('anim1').set('title1d', 'on');
model.result.export('anim1').set('legend1d', 'on');
model.result.export('anim1').set('logo1d', 'on');
model.result.export('anim1').set('options1d', 'on');
model.result.export('anim1').set('title2d', 'on');
model.result.export('anim1').set('legend2d', 'on');
model.result.export('anim1').set('logo2d', 'on');
model.result.export('anim1').set('options2d', 'off');
model.result.export('anim1').set('title3d', 'on');
model.result.export('anim1').set('legend3d', 'on');
model.result.export('anim1').set('logo3d', 'on');
model.result.export('anim1').set('options3d', 'off');
model.result.export('anim1').set('axisorientation', 'on');
model.result.export('anim1').set('grid', 'on');
model.result.export('anim1').set('axes1d', 'on');
model.result.export('anim1').set('axes2d', 'on');
model.result.export('anim1').set('showgrid', 'on');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('plotgroup', 'pg9');
model.result.export('anim1').run;
model.result.create('pg10', 'PlotGroup1D');
model.result('pg10').run;
model.result('pg10').label('Average Radial Particle Position');
model.result('pg10').set('data', 'part1');
model.result('pg10').create('ptp1', 'Particle1D');
model.result('pg10').feature('ptp1').set('markerpos', 'datapoints');
model.result('pg10').feature('ptp1').set('linewidth', 'preference');
model.result('pg10').feature('ptp1').set('expr', 'qr');
model.result('pg10').feature('ptp1').set('descr', 'Particle position, r-component');
model.result('pg10').feature('ptp1').set('dataseries', 'average');
model.result('pg10').feature('ptp1').create('col1', 'Color');
model.result('pg10').run;
model.result('pg10').feature('ptp1').feature('col1').set('expr', 'cpt.Ftr');
model.result('pg10').feature('ptp1').feature('col1').set('descr', 'Total force, r-component');
model.result('pg10').run;

model.title('Ion Funnel');

model.description('This example investigates the focusing effect of an electrodynamic ion funnel. Because of their ability to operate at high background gas pressures, ion funnels are often used to couple devices such as ion mobility spectrometers and mass spectrometers, improving the sensitivity of these devices. The example uses the Collisions feature to model the interaction of ions with the neutral background gas.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;

model.label('ion_funnel.mph');

model.modelNode.label('Components');

out = model;
