function out = model
%
% vibration_control_with_amb.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Rotordynamics_Module/Tutorials');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');
model.physics.create('rotbm', 'BeamRotor', 'geom1');
model.physics('rotbm').model('comp1');

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/solid', true);
model.study('std1').feature('time').setSolveFor('/physics/rotbm', true);

model.geom('geom1').create('imp1', 'Import');
model.geom('geom1').feature('imp1').set('filename', 'vibration_control_with_amb.mphbin');
model.geom('geom1').feature('imp1').importData;

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('rhos', '7850[kg/m^3]', 'Shaft density');
model.param.set('Es', '211[GPa]', 'Young''s modulus');
model.param.set('nus', '0.3', 'Poisson''s ratio');
model.param.set('dR', '0.1[m]', 'Motor rotor diameter');
model.param.set('ds1', '0.02[m]', 'Shaft diameter, station 1-2');
model.param.set('ds2', '0.04[m]', 'Shaft diameter, station 2-3');
model.param.set('ds3', '0.03[m]', 'Shaft diameter, station 3-4');
model.param.set('ds4', 'ds2', 'Shaft diameter station 4-5');
model.param.set('ds5', 'ds1', 'shaft diameter station 5-6');
model.param.set('ds6', 'ds1', 'Shaft diameter station 6-7');
model.param.set('ds7', 'ds1', 'Shaft diameter station 7-8');
model.param.set('ds8', 'ds3', 'Shaft diameter station 8-9');
model.param.set('ds9', 'ds2', 'Shaft diameter station 9-10');
model.param.set('ds10', 'ds1', 'Shaft diameter station 10-11');
model.param.set('ds11', '0.015[m]', 'Shaft diameter station 11-12');
model.param.set('m', '3.9[kg]', 'Mass of the disk');
model.param.set('Id', '0.0057[kg*m^2]', 'Diametral moment of inertia of the disk');
model.param.set('Ip', '0.0113[kg*m^2]', 'Polar moment of inertia of the disk');
model.param.set('e1', '7.3e-5[m]', 'Eccentricity in disk 1');
model.param.set('e2', '22.2e-5[m]', 'Eccentricity in disk 2');
model.param.set('mf', '5[kg]', 'Mass of the fan');
model.param.set('Ipf', '0.0154[kg*m^2]', 'Polar moment of inertia of the fan');
model.param.set('Idf', '0.0079[kg*m^2]', 'Diametral moment of inertia of the fan');
model.param.label('Parameters: Rotor');
model.param.create('par2');

% To import content from file, use:
% model.param('par2').loadFile('FILENAME');
model.param('par2').set('kb', '3.57e8[N/m]', 'Bearing stiffness');
model.param('par2').set('cb', '1.3e5[N*s/m]', 'Bearing damping');
model.param('par2').set('gap', '3[mm]', 'Air gap');
model.param('par2').set('ibp', '1[A]', 'Bias current, positive axis');
model.param('par2').set('ibn', '1[A]', 'Bias current, negative axis');
model.param('par2').set('imax', '5[A]', 'Maximum current');
model.param('par2').set('Kp', '2*(ibp^2+ibn^2)/(gap*(ibp+ibn))', 'Proportional gain');
model.param('par2').set('Ki', 'Kp/0.005[s]', 'Integral gain');
model.param('par2').set('Kd', 'Kp*0.001[s]', 'Derivative gain');
model.param('par2').set('Fc', '20', 'Force constant');
model.param('par2').label('Parameters: Bearing');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');

model.geom('geom1').run;

model.selection('sel1').label('Motor Bearing 1');
model.selection('sel1').geom(2);
model.selection('sel1').set('groupcontang', true);
model.selection('sel1').add([85 86 89 91]);
model.selection.duplicate('sel2', 'sel1');
model.selection('sel2').label('Motor Bearing 2');
model.selection('sel2').remove([85 86 89 91]);
model.selection('sel2').add([485 486 490 493 505 506 510 513 524 525 529 532 541 542 546 549]);
model.selection.duplicate('sel3', 'sel2');
model.selection('sel3').remove([485 486 490 493 505 506 510 513 524 525 529 532 541 542 546 549]);
model.selection('sel3').add([565 566 567 568]);
model.selection('sel3').label('External Bearing 1');
model.selection.duplicate('sel4', 'sel3');
model.selection('sel4').label('External Bearing 2');
model.selection('sel4').remove([565 566 567 568]);
model.selection('sel4').add([586 587 588 589]);
model.selection.create('sel5', 'Explicit');
model.selection('sel5').model('comp1');
model.selection('sel5').geom(1);
model.selection('sel5').set([1341]);
model.selection('sel5').set('groupcontang', true);
model.selection('sel5').label('Rotor');

model.material.create('mat1', 'Common', '');
model.material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat1').propertyGroup('Enu').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup('Enu').func.create('int2', 'Interpolation');
model.material('mat1').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat1').propertyGroup.create('ElastoplasticModel', 'Elastoplastic material model');
model.material('mat1').propertyGroup('ElastoplasticModel').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('Ludwik', 'Ludwik');
model.material('mat1').propertyGroup('Ludwik').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('JohnsonCook', 'Johnson-Cook');
model.material('mat1').propertyGroup.create('Swift', 'Swift');
model.material('mat1').propertyGroup.create('Voce', 'Voce');
model.material('mat1').propertyGroup('Voce').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('HockettSherby', 'Hockett-Sherby');
model.material('mat1').propertyGroup('HockettSherby').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('ArmstrongFrederick', 'Armstrong-Frederick');
model.material('mat1').propertyGroup('ArmstrongFrederick').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('Norton', 'Norton');
model.material('mat1').propertyGroup.create('Garofalo', 'Garofalo (hyperbolic sine)');
model.material('mat1').propertyGroup.create('ChabocheViscoplasticity', 'Chaboche viscoplasticity');
model.material('mat1').label('Structural steel');
model.material('mat1').set('family', 'custom');
model.material('mat1').set('customspecular', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat1').set('customdiffuse', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat1').set('customambient', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat1').set('noise', true);
model.material('mat1').set('fresnel', 0.9);
model.material('mat1').set('roughness', 0.3);
model.material('mat1').set('metallic', 0);
model.material('mat1').set('pearl', 0);
model.material('mat1').set('diffusewrap', 0);
model.material('mat1').set('clearcoat', 0);
model.material('mat1').set('reflectance', 0);
model.material('mat1').propertyGroup('def').set('lossfactor', '0.02');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('heatcapacity', '475[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]'});
model.material('mat1').propertyGroup('def').set('density', '7850[kg/m^3]');
model.material('mat1').propertyGroup('Enu').func('int1').set('funcname', 'E');
model.material('mat1').propertyGroup('Enu').func('int1').set('table', {'293.15' '200e9'; '793.15' '166.6e9'});
model.material('mat1').propertyGroup('Enu').func('int1').set('extrap', 'linear');
model.material('mat1').propertyGroup('Enu').func('int1').set('fununit', {'Pa'});
model.material('mat1').propertyGroup('Enu').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Enu').func('int2').set('funcname', 'nu');
model.material('mat1').propertyGroup('Enu').func('int2').set('table', {'293.15' '0.30'; '793.15' '0.315'});
model.material('mat1').propertyGroup('Enu').func('int2').set('extrap', 'linear');
model.material('mat1').propertyGroup('Enu').func('int2').set('fununit', {'1'});
model.material('mat1').propertyGroup('Enu').func('int2').set('argunit', {'K'});
model.material('mat1').propertyGroup('Enu').set('E', 'E(T)');
model.material('mat1').propertyGroup('Enu').set('nu', 'nu(T)');
model.material('mat1').propertyGroup('Enu').addInput('temperature');
model.material('mat1').propertyGroup('Murnaghan').set('l', '-3.0e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('m', '-6.2e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('n', '-7.2e11[Pa]');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmags', '350[MPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('Et', '1.045[GPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('Ek', '1.045[GPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmagh', '1.050[GPa]*epe*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').addInput('temperature');
model.material('mat1').propertyGroup('ElastoplasticModel').addInput('effectiveplasticstrain');
model.material('mat1').propertyGroup('Ludwik').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('Ludwik').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('Ludwik').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('Ludwik').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Ludwik').set('k_lud', '560[MPa]*a(T)');
model.material('mat1').propertyGroup('Ludwik').set('n_lud', '0.61');
model.material('mat1').propertyGroup('Ludwik').addInput('temperature');
model.material('mat1').propertyGroup('JohnsonCook').set('k_jcook', '560[MPa]');
model.material('mat1').propertyGroup('JohnsonCook').set('n_jcook', '0.61');
model.material('mat1').propertyGroup('JohnsonCook').set('C_jcook', '0.12');
model.material('mat1').propertyGroup('JohnsonCook').set('epet0_jcook', '1[1/s]');
model.material('mat1').propertyGroup('JohnsonCook').set('m_jcook', '0.6');
model.material('mat1').propertyGroup('Swift').set('e0_swi', '0.021');
model.material('mat1').propertyGroup('Swift').set('n_swi', '0.2');
model.material('mat1').propertyGroup('Voce').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('Voce').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('Voce').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('Voce').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Voce').set('sigma_voc', '249[MPa]*a(T)');
model.material('mat1').propertyGroup('Voce').set('beta_voc', '9.3');
model.material('mat1').propertyGroup('Voce').addInput('temperature');
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('HockettSherby').set('sigma_hoc', '684[MPa]*a(T)');
model.material('mat1').propertyGroup('HockettSherby').set('m_hoc', '3.9');
model.material('mat1').propertyGroup('HockettSherby').set('n_hoc', '0.85');
model.material('mat1').propertyGroup('HockettSherby').addInput('temperature');
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('ArmstrongFrederick').set('Ck', '2.070[GPa]*a(T)');
model.material('mat1').propertyGroup('ArmstrongFrederick').set('gammak', '8.0');
model.material('mat1').propertyGroup('ArmstrongFrederick').addInput('temperature');
model.material('mat1').propertyGroup('Norton').set('A_nor', '1.2e-15[1/s]');
model.material('mat1').propertyGroup('Norton').set('sigRef_nor', '1[MPa]');
model.material('mat1').propertyGroup('Norton').set('n_nor', '4.5');
model.material('mat1').propertyGroup('Garofalo').set('A_gar', '1e-6[1/s]');
model.material('mat1').propertyGroup('Garofalo').set('sigRef_gar', '100[MPa]');
model.material('mat1').propertyGroup('Garofalo').set('n_gar', '4.6');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('A_cha', '1');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('sigRef_cha', '490[MPa]');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('n_cha', '9');
model.material.create('matlnk1', 'Link', 'comp1');
model.material.duplicate('matlnk2', 'matlnk1');
model.material('matlnk2').selection.geom('geom1', 1);
model.material('matlnk2').selection.named('sel5');

model.physics('solid').prop('ShapeProperty').set('order_displacement', 1);
model.physics('solid').create('fix1', 'Fixed', 2);
model.physics('solid').feature('fix1').selection.set([71 76 600 605]);
model.physics('solid').create('att1', 'Attachment', 2);
model.physics('solid').feature('att1').selection.named('sel1');
model.physics('solid').feature('att1').label('Attachment: Motor Bearing 1');
model.physics('solid').feature.duplicate('att2', 'att1');
model.physics('solid').feature('att2').selection.named('sel2');
model.physics('solid').feature('att2').label('Attachment: Motor Bearing 2');
model.physics('solid').feature.duplicate('att3', 'att2');
model.physics('solid').feature('att3').label('Attachment: External Bearing 1');
model.physics('solid').feature('att3').selection.named('sel3');
model.physics('solid').feature.duplicate('att4', 'att3');
model.physics('solid').feature('att4').label('Attachment: External Bearing 2');
model.physics('solid').feature('att4').selection.named('sel4');
model.physics('rotbm').selection.named('sel5');
model.physics('rotbm').prop('RotorProperties').set('rpt', '10000[rpm/s]*t');
model.physics('rotbm').feature('lemm1').create('dmp1', 'Damping', 1);
model.physics('rotbm').feature('lemm1').feature('dmp1').set('alpha_dM', 7);
model.physics('rotbm').feature('lemm1').feature('dmp1').set('beta_dK', '3.2e-5');
model.physics('rotbm').feature('rcs1').set('do_circ', 'ds1');
model.physics('rotbm').feature.duplicate('rcs2', 'rcs1');
model.physics('rotbm').feature('rcs2').selection.set([492]);
model.physics('rotbm').feature('rcs2').set('do_circ', 'dR');
model.physics('rotbm').feature.duplicate('rcs3', 'rcs2');
model.physics('rotbm').feature('rcs3').selection.set([1301 1316 1336 1337 1359 1374]);
model.physics('rotbm').feature('rcs3').set('do_circ', 'ds2');
model.physics('rotbm').feature.duplicate('rcs4', 'rcs3');
model.physics('rotbm').feature('rcs4').selection.set([1328 1341]);
model.physics('rotbm').feature('rcs4').set('do_circ', 'ds3');
model.physics('rotbm').feature.duplicate('rcs5', 'rcs4');
model.physics('rotbm').feature('rcs5').selection.set([1394]);
model.physics('rotbm').feature('rcs5').set('do_circ', 'ds11');
model.physics('rotbm').create('disk1', 'Disk', 0);
model.physics('rotbm').feature('disk1').selection.set([63]);
model.physics('rotbm').feature('disk1').label('Disk: Motor Fan');
model.physics('rotbm').feature('disk1').set('mass', 'mf');
model.physics('rotbm').feature('disk1').set('Ip', 'Ipf');
model.physics('rotbm').feature('disk1').set('Id', 'Idf');
model.physics('rotbm').create('disk2', 'Disk', 0);
model.physics('rotbm').feature('disk2').label('Disk 1: Rotor');
model.physics('rotbm').feature('disk2').selection.set([785]);
model.physics('rotbm').feature('disk2').set('COM', 'Relative');
model.physics('rotbm').feature('disk2').set('zr', 'e1');
model.physics('rotbm').feature('disk2').set('mass', 'm');
model.physics('rotbm').feature('disk2').set('Ip', 'Ip');
model.physics('rotbm').feature('disk2').set('Id', 'Id');
model.physics('rotbm').feature.duplicate('disk3', 'disk2');
model.physics('rotbm').feature('disk3').label('Disk 2: Rotor');
model.physics('rotbm').feature('disk3').selection.set([786]);
model.physics('rotbm').feature('disk3').set('zr', 'e2');
model.physics('rotbm').feature('disk3').set('phi', 'pi/2');
model.physics('rotbm').create('jrb1', 'JournalBearing', 0);
model.physics('rotbm').feature('jrb1').selection.set([88]);
model.physics('rotbm').feature('jrb1').label('Journal Bearing 1 (Motor)');
model.physics('rotbm').feature('jrb1').set('BearingModel', 'kTot');
model.physics('rotbm').feature('jrb1').set('k_u', {'kb' '0' '0' 'kb'});
model.physics('rotbm').feature('jrb1').set('c_u', {'cb' '0' '0' 'cb'});
model.physics('rotbm').feature('jrb1').set('Foundation', 'root.comp1.solid.att1');
model.physics('rotbm').feature.duplicate('jrb2', 'jrb1');
model.physics('rotbm').feature('jrb2').label('Journal Bearing 2 (Motor)');
model.physics('rotbm').feature('jrb2').selection.set([721]);
model.physics('rotbm').feature('jrb2').set('Foundation', 'root.comp1.solid.att2');
model.physics('rotbm').feature.duplicate('jrb3', 'jrb2');
model.physics('rotbm').feature('jrb3').label('Journal Bearing 3 (External)');
model.physics('rotbm').feature('jrb3').selection.set([765]);
model.physics('rotbm').feature('jrb3').set('Foundation', 'root.comp1.solid.att3');
model.physics('rotbm').feature.duplicate('jrb4', 'jrb3');
model.physics('rotbm').feature('jrb4').label('Journal Bearing 4 (External)');
model.physics('rotbm').feature('jrb4').selection.set([804]);
model.physics('rotbm').feature('jrb4').set('Foundation', 'root.comp1.solid.att4');

model.mesh('mesh1').autoMeshSize(7);

model.study('std1').feature('time').set('tlist', 'range(0,1e-3,1.2)');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_solid_att_rot').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u2').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_att_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_rotbm_phi').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_att_rot').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_att_disp').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_att_rot').set('scaleval', '0.1');
model.sol('sol1').feature('v1').feature('comp1_u2').set('scaleval', '1e-2*1.8596079122311657');
model.sol('sol1').feature('v1').feature('comp1_solid_att_disp').set('scaleval', '0.01859607912231166');
model.sol('sol1').feature('v1').feature('comp1_rotbm_phi').set('scaleval', '1e-2');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*1.8596079122311657');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,1e-3,1.2)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('atolglobalmethod', 'scaled');
model.sol('sol1').feature('t1').set('atolglobalfactor', 0.1);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('tstepsgenalpha', 'intermediate');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('timemethod', 'genalpha');
model.sol('sol1').feature('t1').set('rhoinf', 0.75);
model.sol('sol1').feature('t1').set('rescaleafterinitbw', false);
model.sol('sol1').feature('t1').set('bwinitstepfrac', '0.001');
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_u2' 'comp1_rotbm_phi'});
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Beam Rotor');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_u' 'comp1_solid_att_disp' 'comp1_solid_att_rot'});
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('t1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Solid Mechanics');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', true);
model.sol('sol1').feature('t1').feature('i1').label('Suggested Iterative Solver (GMRES with SA AMG) (solid)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');

model.study('std1').label('Study: Without AMB');

model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 1201, 0);
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('vol1', 'Volume');
model.result('pg1').feature('vol1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('vol1').set('threshold', 'manual');
model.result('pg1').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg1').feature('vol1').set('colortable', 'Rainbow');
model.result('pg1').feature('vol1').set('colortabletrans', 'none');
model.result('pg1').feature('vol1').set('colorscalemode', 'linear');
model.result('pg1').feature('vol1').set('resolution', 'custom');
model.result('pg1').feature('vol1').set('refine', 2);
model.result('pg1').feature('vol1').set('colortable', 'Prism');
model.result('pg1').feature('vol1').create('def', 'Deform');
model.result('pg1').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg1').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 1201, 0);
model.result('pg2').set('defaultPlotID', 'stress');
model.result('pg2').create('line1', 'Line');
model.result('pg2').feature('line1').set('expr', {'rotbm.mises'});
model.result('pg2').feature('line1').set('threshold', 'manual');
model.result('pg2').feature('line1').set('thresholdvalue', 0.2);
model.result('pg2').feature('line1').set('colortable', 'Rainbow');
model.result('pg2').feature('line1').set('colortabletrans', 'none');
model.result('pg2').feature('line1').set('colorscalemode', 'linear');
model.result('pg2').label('Stress (rotbm)');
model.result('pg2').feature('line1').set('colortable', 'Rainbow');
model.result('pg2').feature('line1').set('linetype', 'tube');
model.result('pg2').feature('line1').set('radiusexpr', 'rotbm.re');
model.result('pg2').feature('line1').set('tuberadiusscaleactive', true);
model.result('pg2').feature('line1').set('tuberadiusscale', 1);
model.result('pg2').feature('line1').set('tubeendcaps', false);
model.result('pg2').feature('line1').create('def', 'Deform');
model.result('pg2').feature('line1').feature('def').set('expr', {'u2' 'v2' 'w2'});
model.result('pg2').feature('line1').feature('def').set('descr', 'Displacement field');
model.result('pg2').create('line2', 'Line');
model.result('pg2').feature('line2').set('expr', {'1'});
model.result('pg2').feature('line2').set('linetype', 'tube');
model.result('pg2').feature('line2').set('radiusexpr', {'rotbm.re '});
model.result('pg2').feature('line2').set('tuberadiusscaleactive', true);
model.result('pg2').feature('line2').set('tuberadiusscale', 1);
model.result('pg2').feature('line2').set('tubeendcaps', false);
model.result('pg2').feature('line2').set('coloring', 'uniform');
model.result('pg2').feature('line2').set('color', 'custom');
model.result('pg2').feature('line2').set('customcolor', [0.9803921580314636 0.7843137383460999 0.7058823704719543]);
model.result('pg2').feature('line2').set('threshold', 'manual');
model.result('pg2').feature('line2').set('thresholdvalue', 0.2);
model.result('pg2').feature('line2').set('titletype', 'none');
model.result('pg2').feature('line2').label('Rotor');
model.result('pg2').feature('line2').create('def', 'Deform');
model.result('pg2').feature('line2').feature('def').set('scaleactive', true);
model.result('pg2').feature('line2').feature('def').set('scale', '1');
model.result('pg2').feature('line2').feature('def').set('expr', {'-rotbm.De_max*rotbm.e30x ' '-rotbm.De_max*rotbm.e30y ' '-rotbm.De_max*rotbm.e30z '});
model.result('pg2').create('pttraj1', 'PointTrajectories');
model.result('pg2').feature('pttraj1').set('plotdata', 'points');
model.result('pg2').feature('pttraj1').selection.geom('geom1', 0);
model.result('pg2').feature('pttraj1').selection.set([63]);
model.result('pg2').feature('pttraj1').selection.inherit(false);
model.result('pg2').feature('pttraj1').set('linetype', 'none');
model.result('pg2').feature('pttraj1').set('expr', {'X' 'Y' 'Z'});
model.result('pg2').feature('pttraj1').set('pointtype', 'ellipse');
model.result('pg2').feature('pttraj1').set('pointcolor', 'custom');
model.result('pg2').feature('pttraj1').set('custompointcolor', [0.8039215803146362 0.5215686559677124 0.24705882370471954]);
model.result('pg2').feature('pttraj1').set('semimajorexpr', {'0.5*rotbm.disk1.de*rotbm.e20x ' '0.5*rotbm.disk1.de*rotbm.e20y ' '0.5*rotbm.disk1.de*rotbm.e20z '});
model.result('pg2').feature('pttraj1').set('semiminorexpr', {'0.5*rotbm.disk1.de*rotbm.e30x ' '0.5*rotbm.disk1.de*rotbm.e30y ' '0.5*rotbm.disk1.de*rotbm.e30z '});
model.result('pg2').feature('pttraj1').set('ellipsecount', 1);
model.result('pg2').feature('pttraj1').set('ellipsearrowscaleactive', true);
model.result('pg2').feature('pttraj1').set('ellipsearrowtype', 'none');
model.result('pg2').feature('pttraj1').set('titletype', 'none');
model.result('pg2').feature('pttraj1').label('Disk: Motor Fan');
model.result('pg2').feature('pttraj1').create('def', 'Deform');
model.result('pg2').feature('pttraj1').feature('def').set('scaleactive', true);
model.result('pg2').feature('pttraj1').feature('def').set('scale', '1');
model.result('pg2').feature('pttraj1').feature('def').set('expr', {'-rotbm.De_max*rotbm.e30x ' '-rotbm.De_max*rotbm.e30y ' '-rotbm.De_max*rotbm.e30z '});
model.result('pg2').create('pttraj2', 'PointTrajectories');
model.result('pg2').feature('pttraj2').set('plotdata', 'points');
model.result('pg2').feature('pttraj2').selection.geom('geom1', 0);
model.result('pg2').feature('pttraj2').selection.set([785]);
model.result('pg2').feature('pttraj2').selection.inherit(false);
model.result('pg2').feature('pttraj2').set('linetype', 'none');
model.result('pg2').feature('pttraj2').set('expr', {'X' 'Y' 'Z'});
model.result('pg2').feature('pttraj2').set('pointtype', 'ellipse');
model.result('pg2').feature('pttraj2').set('pointcolor', 'custom');
model.result('pg2').feature('pttraj2').set('custompointcolor', [0.8039215803146362 0.5215686559677124 0.24705882370471954]);
model.result('pg2').feature('pttraj2').set('semimajorexpr', {'0.5*rotbm.disk2.de*rotbm.e20x ' '0.5*rotbm.disk2.de*rotbm.e20y ' '0.5*rotbm.disk2.de*rotbm.e20z '});
model.result('pg2').feature('pttraj2').set('semiminorexpr', {'0.5*rotbm.disk2.de*rotbm.e30x ' '0.5*rotbm.disk2.de*rotbm.e30y ' '0.5*rotbm.disk2.de*rotbm.e30z '});
model.result('pg2').feature('pttraj2').set('ellipsecount', 1);
model.result('pg2').feature('pttraj2').set('ellipsearrowscaleactive', true);
model.result('pg2').feature('pttraj2').set('ellipsearrowtype', 'none');
model.result('pg2').feature('pttraj2').set('titletype', 'none');
model.result('pg2').feature('pttraj2').label('Disk 1: Rotor');
model.result('pg2').feature('pttraj2').create('def', 'Deform');
model.result('pg2').feature('pttraj2').feature('def').set('scaleactive', true);
model.result('pg2').feature('pttraj2').feature('def').set('scale', '1');
model.result('pg2').feature('pttraj2').feature('def').set('expr', {'-rotbm.De_max*rotbm.e30x ' '-rotbm.De_max*rotbm.e30y ' '-rotbm.De_max*rotbm.e30z '});
model.result('pg2').create('pttraj3', 'PointTrajectories');
model.result('pg2').feature('pttraj3').set('plotdata', 'points');
model.result('pg2').feature('pttraj3').selection.geom('geom1', 0);
model.result('pg2').feature('pttraj3').selection.set([786]);
model.result('pg2').feature('pttraj3').selection.inherit(false);
model.result('pg2').feature('pttraj3').set('linetype', 'none');
model.result('pg2').feature('pttraj3').set('expr', {'X' 'Y' 'Z'});
model.result('pg2').feature('pttraj3').set('pointtype', 'ellipse');
model.result('pg2').feature('pttraj3').set('pointcolor', 'custom');
model.result('pg2').feature('pttraj3').set('custompointcolor', [0.8039215803146362 0.5215686559677124 0.24705882370471954]);
model.result('pg2').feature('pttraj3').set('semimajorexpr', {'0.5*rotbm.disk3.de*rotbm.e20x ' '0.5*rotbm.disk3.de*rotbm.e20y ' '0.5*rotbm.disk3.de*rotbm.e20z '});
model.result('pg2').feature('pttraj3').set('semiminorexpr', {'0.5*rotbm.disk3.de*rotbm.e30x ' '0.5*rotbm.disk3.de*rotbm.e30y ' '0.5*rotbm.disk3.de*rotbm.e30z '});
model.result('pg2').feature('pttraj3').set('ellipsecount', 1);
model.result('pg2').feature('pttraj3').set('ellipsearrowscaleactive', true);
model.result('pg2').feature('pttraj3').set('ellipsearrowtype', 'none');
model.result('pg2').feature('pttraj3').set('titletype', 'none');
model.result('pg2').feature('pttraj3').label('Disk 2: Rotor');
model.result('pg2').feature('pttraj3').create('def', 'Deform');
model.result('pg2').feature('pttraj3').feature('def').set('scaleactive', true);
model.result('pg2').feature('pttraj3').feature('def').set('scale', '1');
model.result('pg2').feature('pttraj3').feature('def').set('expr', {'-rotbm.De_max*rotbm.e30x ' '-rotbm.De_max*rotbm.e30y ' '-rotbm.De_max*rotbm.e30z '});
model.result('pg2').create('pttraj4', 'PointTrajectories');
model.result('pg2').feature('pttraj4').set('plotdata', 'points');
model.result('pg2').feature('pttraj4').selection.geom('geom1', 0);
model.result('pg2').feature('pttraj4').selection.set([88]);
model.result('pg2').feature('pttraj4').selection.inherit(false);
model.result('pg2').feature('pttraj4').set('linetype', 'none');
model.result('pg2').feature('pttraj4').set('pointtype', 'arrow');
model.result('pg2').feature('pttraj4').set('expr', {'X-1.0*rotbm.re*rotbm.jrb1.e3gx ' 'Y-1.0*rotbm.re*rotbm.jrb1.e3gy ' 'Z-1.0*rotbm.re*rotbm.jrb1.e3gz '});
model.result('pg2').feature('pttraj4').set('arrowexpr', {'rotbm.re*rotbm.jrb1.e3gx ' 'rotbm.re*rotbm.jrb1.e3gy ' 'rotbm.re*rotbm.jrb1.e3gz '});
model.result('pg2').feature('pttraj4').set('arrowtype', 'arrowhead');
model.result('pg2').feature('pttraj4').set('arrowbase', 'head');
model.result('pg2').feature('pttraj4').set('arrowscale', '10');
model.result('pg2').feature('pttraj4').set('arrowscaleactive', true);
model.result('pg2').feature('pttraj4').set('pointcolor', 'custom');
model.result('pg2').feature('pttraj4').set('custompointcolor', [0.5882353186607361 0.8627451062202454 0.5882353186607361]);
model.result('pg2').feature('pttraj4').set('titletype', 'none');
model.result('pg2').feature('pttraj4').label('Journal Bearing 1 (Motor)');
model.result('pg2').feature('pttraj4').create('def', 'Deform');
model.result('pg2').feature('pttraj4').feature('def').set('scaleactive', true);
model.result('pg2').feature('pttraj4').feature('def').set('scale', '1');
model.result('pg2').feature('pttraj4').feature('def').set('expr', {'-rotbm.De_max*rotbm.e30x ' '-rotbm.De_max*rotbm.e30y ' '-rotbm.De_max*rotbm.e30z '});
model.result('pg2').create('pttraj5', 'PointTrajectories');
model.result('pg2').feature('pttraj5').set('plotdata', 'points');
model.result('pg2').feature('pttraj5').selection.geom('geom1', 0);
model.result('pg2').feature('pttraj5').selection.set([721]);
model.result('pg2').feature('pttraj5').selection.inherit(false);
model.result('pg2').feature('pttraj5').set('linetype', 'none');
model.result('pg2').feature('pttraj5').set('pointtype', 'arrow');
model.result('pg2').feature('pttraj5').set('expr', {'X-1.0*rotbm.re*rotbm.jrb2.e3gx ' 'Y-1.0*rotbm.re*rotbm.jrb2.e3gy ' 'Z-1.0*rotbm.re*rotbm.jrb2.e3gz '});
model.result('pg2').feature('pttraj5').set('arrowexpr', {'rotbm.re*rotbm.jrb2.e3gx ' 'rotbm.re*rotbm.jrb2.e3gy ' 'rotbm.re*rotbm.jrb2.e3gz '});
model.result('pg2').feature('pttraj5').set('arrowtype', 'arrowhead');
model.result('pg2').feature('pttraj5').set('arrowbase', 'head');
model.result('pg2').feature('pttraj5').set('arrowscale', '10');
model.result('pg2').feature('pttraj5').set('arrowscaleactive', true);
model.result('pg2').feature('pttraj5').set('pointcolor', 'custom');
model.result('pg2').feature('pttraj5').set('custompointcolor', [0.5882353186607361 0.8627451062202454 0.5882353186607361]);
model.result('pg2').feature('pttraj5').set('titletype', 'none');
model.result('pg2').feature('pttraj5').label('Journal Bearing 2 (Motor)');
model.result('pg2').feature('pttraj5').create('def', 'Deform');
model.result('pg2').feature('pttraj5').feature('def').set('scaleactive', true);
model.result('pg2').feature('pttraj5').feature('def').set('scale', '1');
model.result('pg2').feature('pttraj5').feature('def').set('expr', {'-rotbm.De_max*rotbm.e30x ' '-rotbm.De_max*rotbm.e30y ' '-rotbm.De_max*rotbm.e30z '});
model.result('pg2').create('pttraj6', 'PointTrajectories');
model.result('pg2').feature('pttraj6').set('plotdata', 'points');
model.result('pg2').feature('pttraj6').selection.geom('geom1', 0);
model.result('pg2').feature('pttraj6').selection.set([765]);
model.result('pg2').feature('pttraj6').selection.inherit(false);
model.result('pg2').feature('pttraj6').set('linetype', 'none');
model.result('pg2').feature('pttraj6').set('pointtype', 'arrow');
model.result('pg2').feature('pttraj6').set('expr', {'X-1.0*rotbm.re*rotbm.jrb3.e3gx ' 'Y-1.0*rotbm.re*rotbm.jrb3.e3gy ' 'Z-1.0*rotbm.re*rotbm.jrb3.e3gz '});
model.result('pg2').feature('pttraj6').set('arrowexpr', {'rotbm.re*rotbm.jrb3.e3gx ' 'rotbm.re*rotbm.jrb3.e3gy ' 'rotbm.re*rotbm.jrb3.e3gz '});
model.result('pg2').feature('pttraj6').set('arrowtype', 'arrowhead');
model.result('pg2').feature('pttraj6').set('arrowbase', 'head');
model.result('pg2').feature('pttraj6').set('arrowscale', '10');
model.result('pg2').feature('pttraj6').set('arrowscaleactive', true);
model.result('pg2').feature('pttraj6').set('pointcolor', 'custom');
model.result('pg2').feature('pttraj6').set('custompointcolor', [0.5882353186607361 0.8627451062202454 0.5882353186607361]);
model.result('pg2').feature('pttraj6').set('titletype', 'none');
model.result('pg2').feature('pttraj6').label('Journal Bearing 3 (External)');
model.result('pg2').feature('pttraj6').create('def', 'Deform');
model.result('pg2').feature('pttraj6').feature('def').set('scaleactive', true);
model.result('pg2').feature('pttraj6').feature('def').set('scale', '1');
model.result('pg2').feature('pttraj6').feature('def').set('expr', {'-rotbm.De_max*rotbm.e30x ' '-rotbm.De_max*rotbm.e30y ' '-rotbm.De_max*rotbm.e30z '});
model.result('pg2').create('pttraj7', 'PointTrajectories');
model.result('pg2').feature('pttraj7').set('plotdata', 'points');
model.result('pg2').feature('pttraj7').selection.geom('geom1', 0);
model.result('pg2').feature('pttraj7').selection.set([804]);
model.result('pg2').feature('pttraj7').selection.inherit(false);
model.result('pg2').feature('pttraj7').set('linetype', 'none');
model.result('pg2').feature('pttraj7').set('pointtype', 'arrow');
model.result('pg2').feature('pttraj7').set('expr', {'X-1.0*rotbm.re*rotbm.jrb4.e3gx ' 'Y-1.0*rotbm.re*rotbm.jrb4.e3gy ' 'Z-1.0*rotbm.re*rotbm.jrb4.e3gz '});
model.result('pg2').feature('pttraj7').set('arrowexpr', {'rotbm.re*rotbm.jrb4.e3gx ' 'rotbm.re*rotbm.jrb4.e3gy ' 'rotbm.re*rotbm.jrb4.e3gz '});
model.result('pg2').feature('pttraj7').set('arrowtype', 'arrowhead');
model.result('pg2').feature('pttraj7').set('arrowbase', 'head');
model.result('pg2').feature('pttraj7').set('arrowscale', '10');
model.result('pg2').feature('pttraj7').set('arrowscaleactive', true);
model.result('pg2').feature('pttraj7').set('pointcolor', 'custom');
model.result('pg2').feature('pttraj7').set('custompointcolor', [0.5882353186607361 0.8627451062202454 0.5882353186607361]);
model.result('pg2').feature('pttraj7').set('titletype', 'none');
model.result('pg2').feature('pttraj7').label('Journal Bearing 4 (External)');
model.result('pg2').feature('pttraj7').create('def', 'Deform');
model.result('pg2').feature('pttraj7').feature('def').set('scaleactive', true);
model.result('pg2').feature('pttraj7').feature('def').set('scale', '1');
model.result('pg2').feature('pttraj7').feature('def').set('expr', {'-rotbm.De_max*rotbm.e30x ' '-rotbm.De_max*rotbm.e30y ' '-rotbm.De_max*rotbm.e30z '});
model.result('pg1').run;
model.result('pg2').run;
model.result('pg1').run;
model.result('pg1').feature.copy('line1', 'pg2/line1');
model.result('pg1').run;
model.result('pg1').feature('line1').set('colortable', 'AuroraAustralisDark');
model.result('pg1').run;
model.result('pg1').feature('line1').feature('def').set('scaleactive', true);
model.result('pg1').feature('line1').feature('def').set('scale', 10);
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('vol1').set('threshold', 'none');
model.result('pg1').run;
model.result('pg1').feature('vol1').feature('def').set('scaleactive', true);
model.result('pg1').feature('vol1').feature('def').set('scale', 150);
model.result('pg1').run;
model.result('pg1').set('legendpos', 'rightdouble');
model.result('pg1').setIndex('looplevel', 1001, 0);
model.result('pg1').run;
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('Vertical Displacement at Coupling');
model.result('pg3').set('titletype', 'label');
model.result('pg3').set('legendpos', 'upperleft');
model.result('pg3').create('ptgr1', 'PointGraph');
model.result('pg3').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg3').feature('ptgr1').set('linewidth', 'preference');
model.result('pg3').feature('ptgr1').selection.set([748]);
model.result('pg3').feature('ptgr1').set('expr', 'w2');
model.result('pg3').feature('ptgr1').set('legend', true);
model.result('pg3').feature('ptgr1').set('legendmethod', 'manual');
model.result('pg3').feature('ptgr1').setIndex('legends', 'Without AMB', 0);

model.func.create('step1', 'Step');
model.func('step1').model('comp1');
model.func('step1').set('location', '0.8[s]');

model.physics('rotbm').create('amb1', 'ActiveMagneticBearing', 0);
model.physics('rotbm').feature('amb1').selection.set([783]);
model.physics('rotbm').feature('amb1').set('h', {'gap' 'gap'});
model.physics('rotbm').feature('amb1').set('Kp', {'Kp' '0' '0' 'Kp'});
model.physics('rotbm').feature('amb1').set('Ki', {'Ki' '0' '0' 'Ki'});
model.physics('rotbm').feature('amb1').set('Kd', {'Kd' '0' '0' 'Kd'});
model.physics('rotbm').feature('amb1').set('Fc', {'Fc*step1(t)' '0' '0' 'Fc*step1(t)'});
model.physics('rotbm').feature('amb1').set('i_bp', {'ibp' '0' '0' 'ibp'});
model.physics('rotbm').feature('amb1').set('i_bn', {'ibn' '0' '0' 'ibn'});
model.physics('rotbm').feature('amb1').set('i_max', {'imax' '0' '0' 'imax'});

model.study.create('std2');
model.study('std2').create('time', 'Transient');
model.study('std2').feature('time').setSolveFor('/physics/solid', true);
model.study('std2').feature('time').setSolveFor('/physics/rotbm', true);
model.study('std2').feature('time').set('tlist', 'range(0,1e-3,1.2)');

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'time');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_solid_att_rot').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_u2').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_att_disp').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_rotbm_phi').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_att_rot').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_solid_att_disp').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_solid_att_rot').set('scaleval', '0.1');
model.sol('sol2').feature('v1').feature('comp1_u2').set('scaleval', '1e-2*1.8596079122311657');
model.sol('sol2').feature('v1').feature('comp1_solid_att_disp').set('scaleval', '0.01859607912231166');
model.sol('sol2').feature('v1').feature('comp1_rotbm_phi').set('scaleval', '1e-2');
model.sol('sol2').feature('v1').feature('comp1_u').set('scaleval', '1e-2*1.8596079122311657');
model.sol('sol2').feature('v1').set('control', 'time');
model.sol('sol2').create('t1', 'Time');
model.sol('sol2').feature('t1').set('tlist', 'range(0,1e-3,1.2)');
model.sol('sol2').feature('t1').set('plot', 'off');
model.sol('sol2').feature('t1').set('plotgroup', 'pg1');
model.sol('sol2').feature('t1').set('plotfreq', 'tout');
model.sol('sol2').feature('t1').set('probesel', 'all');
model.sol('sol2').feature('t1').set('probes', {});
model.sol('sol2').feature('t1').set('probefreq', 'tsteps');
model.sol('sol2').feature('t1').set('rtol', 0.001);
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol2').feature('t1').set('atolglobalmethod', 'scaled');
model.sol('sol2').feature('t1').set('atolglobalfactor', 0.1);
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol2').feature('t1').set('reacf', true);
model.sol('sol2').feature('t1').set('storeudot', true);
model.sol('sol2').feature('t1').set('tstepsgenalpha', 'intermediate');
model.sol('sol2').feature('t1').set('endtimeinterpolation', true);
model.sol('sol2').feature('t1').set('timemethod', 'genalpha');
model.sol('sol2').feature('t1').set('rhoinf', 0.75);
model.sol('sol2').feature('t1').set('rescaleafterinitbw', false);
model.sol('sol2').feature('t1').set('bwinitstepfrac', '0.001');
model.sol('sol2').feature('t1').set('control', 'time');
model.sol('sol2').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('t1').create('se1', 'Segregated');
model.sol('sol2').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol2').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol2').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_u2' 'comp1_rotbm_phi' 'comp1_rotbm_amb1_ic'});
model.sol('sol2').feature('t1').feature('se1').feature('ss1').set('linsolver', 'dDef');
model.sol('sol2').feature('t1').feature('se1').feature('ss1').label('Beam Rotor');
model.sol('sol2').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_u' 'comp1_solid_att_disp' 'comp1_solid_att_rot'});
model.sol('sol2').feature('t1').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol2').feature('t1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('linsolver', 'd1');
model.sol('sol2').feature('t1').feature('se1').feature('ss2').label('Solid Mechanics');
model.sol('sol2').feature('t1').create('i1', 'Iterative');
model.sol('sol2').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol2').feature('t1').feature('i1').set('nlinnormuse', true);
model.sol('sol2').feature('t1').feature('i1').label('Suggested Iterative Solver (GMRES with SA AMG) (solid)');
model.sol('sol2').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol2').feature('t1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').feature('v1').feature('comp1_rotbm_amb1_ic').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_rotbm_amb1_ic').set('scaleval', 10);
model.sol('sol2').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('t1').feature('fc1').set('dtech', 'auto');

model.study('std2').label('Study: With AMB');

model.sol('sol2').runAll;

model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').set('data', 'dset2');
model.result('pg4').setIndex('looplevel', 1201, 0);
model.result('pg4').set('defaultPlotID', 'stress');
model.result('pg4').label('Stress (solid) 1');
model.result('pg4').set('frametype', 'spatial');
model.result('pg4').create('vol1', 'Volume');
model.result('pg4').feature('vol1').set('expr', {'solid.misesGp'});
model.result('pg4').feature('vol1').set('threshold', 'manual');
model.result('pg4').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg4').feature('vol1').set('colortable', 'Rainbow');
model.result('pg4').feature('vol1').set('colortabletrans', 'none');
model.result('pg4').feature('vol1').set('colorscalemode', 'linear');
model.result('pg4').feature('vol1').set('resolution', 'custom');
model.result('pg4').feature('vol1').set('refine', 2);
model.result('pg4').feature('vol1').set('colortable', 'Prism');
model.result('pg4').feature('vol1').create('def', 'Deform');
model.result('pg4').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg4').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').set('data', 'dset2');
model.result('pg5').setIndex('looplevel', 1201, 0);
model.result('pg5').set('defaultPlotID', 'stress');
model.result('pg5').create('line1', 'Line');
model.result('pg5').feature('line1').set('expr', {'rotbm.mises'});
model.result('pg5').feature('line1').set('threshold', 'manual');
model.result('pg5').feature('line1').set('thresholdvalue', 0.2);
model.result('pg5').feature('line1').set('colortable', 'Rainbow');
model.result('pg5').feature('line1').set('colortabletrans', 'none');
model.result('pg5').feature('line1').set('colorscalemode', 'linear');
model.result('pg5').label('Stress (rotbm) 1');
model.result('pg5').feature('line1').set('colortable', 'Rainbow');
model.result('pg5').feature('line1').set('linetype', 'tube');
model.result('pg5').feature('line1').set('radiusexpr', 'rotbm.re');
model.result('pg5').feature('line1').set('tuberadiusscaleactive', true);
model.result('pg5').feature('line1').set('tuberadiusscale', 1);
model.result('pg5').feature('line1').set('tubeendcaps', false);
model.result('pg5').feature('line1').create('def', 'Deform');
model.result('pg5').feature('line1').feature('def').set('expr', {'u2' 'v2' 'w2'});
model.result('pg5').feature('line1').feature('def').set('descr', 'Displacement field');
model.result('pg5').create('line2', 'Line');
model.result('pg5').feature('line2').set('expr', {'1'});
model.result('pg5').feature('line2').set('linetype', 'tube');
model.result('pg5').feature('line2').set('radiusexpr', {'rotbm.re '});
model.result('pg5').feature('line2').set('tuberadiusscaleactive', true);
model.result('pg5').feature('line2').set('tuberadiusscale', 1);
model.result('pg5').feature('line2').set('tubeendcaps', false);
model.result('pg5').feature('line2').set('coloring', 'uniform');
model.result('pg5').feature('line2').set('color', 'custom');
model.result('pg5').feature('line2').set('customcolor', [0.9803921580314636 0.7843137383460999 0.7058823704719543]);
model.result('pg5').feature('line2').set('threshold', 'manual');
model.result('pg5').feature('line2').set('thresholdvalue', 0.2);
model.result('pg5').feature('line2').set('titletype', 'none');
model.result('pg5').feature('line2').label('Rotor');
model.result('pg5').feature('line2').create('def', 'Deform');
model.result('pg5').feature('line2').feature('def').set('scaleactive', true);
model.result('pg5').feature('line2').feature('def').set('scale', '1');
model.result('pg5').feature('line2').feature('def').set('expr', {'-rotbm.De_max*rotbm.e30x ' '-rotbm.De_max*rotbm.e30y ' '-rotbm.De_max*rotbm.e30z '});
model.result('pg5').create('pttraj1', 'PointTrajectories');
model.result('pg5').feature('pttraj1').set('plotdata', 'points');
model.result('pg5').feature('pttraj1').selection.geom('geom1', 0);
model.result('pg5').feature('pttraj1').selection.set([63]);
model.result('pg5').feature('pttraj1').selection.inherit(false);
model.result('pg5').feature('pttraj1').set('linetype', 'none');
model.result('pg5').feature('pttraj1').set('expr', {'X' 'Y' 'Z'});
model.result('pg5').feature('pttraj1').set('pointtype', 'ellipse');
model.result('pg5').feature('pttraj1').set('pointcolor', 'custom');
model.result('pg5').feature('pttraj1').set('custompointcolor', [0.8039215803146362 0.5215686559677124 0.24705882370471954]);
model.result('pg5').feature('pttraj1').set('semimajorexpr', {'0.5*rotbm.disk1.de*rotbm.e20x ' '0.5*rotbm.disk1.de*rotbm.e20y ' '0.5*rotbm.disk1.de*rotbm.e20z '});
model.result('pg5').feature('pttraj1').set('semiminorexpr', {'0.5*rotbm.disk1.de*rotbm.e30x ' '0.5*rotbm.disk1.de*rotbm.e30y ' '0.5*rotbm.disk1.de*rotbm.e30z '});
model.result('pg5').feature('pttraj1').set('ellipsecount', 1);
model.result('pg5').feature('pttraj1').set('ellipsearrowscaleactive', true);
model.result('pg5').feature('pttraj1').set('ellipsearrowtype', 'none');
model.result('pg5').feature('pttraj1').set('titletype', 'none');
model.result('pg5').feature('pttraj1').label('Disk: Motor Fan');
model.result('pg5').feature('pttraj1').create('def', 'Deform');
model.result('pg5').feature('pttraj1').feature('def').set('scaleactive', true);
model.result('pg5').feature('pttraj1').feature('def').set('scale', '1');
model.result('pg5').feature('pttraj1').feature('def').set('expr', {'-rotbm.De_max*rotbm.e30x ' '-rotbm.De_max*rotbm.e30y ' '-rotbm.De_max*rotbm.e30z '});
model.result('pg5').create('pttraj2', 'PointTrajectories');
model.result('pg5').feature('pttraj2').set('plotdata', 'points');
model.result('pg5').feature('pttraj2').selection.geom('geom1', 0);
model.result('pg5').feature('pttraj2').selection.set([785]);
model.result('pg5').feature('pttraj2').selection.inherit(false);
model.result('pg5').feature('pttraj2').set('linetype', 'none');
model.result('pg5').feature('pttraj2').set('expr', {'X' 'Y' 'Z'});
model.result('pg5').feature('pttraj2').set('pointtype', 'ellipse');
model.result('pg5').feature('pttraj2').set('pointcolor', 'custom');
model.result('pg5').feature('pttraj2').set('custompointcolor', [0.8039215803146362 0.5215686559677124 0.24705882370471954]);
model.result('pg5').feature('pttraj2').set('semimajorexpr', {'0.5*rotbm.disk2.de*rotbm.e20x ' '0.5*rotbm.disk2.de*rotbm.e20y ' '0.5*rotbm.disk2.de*rotbm.e20z '});
model.result('pg5').feature('pttraj2').set('semiminorexpr', {'0.5*rotbm.disk2.de*rotbm.e30x ' '0.5*rotbm.disk2.de*rotbm.e30y ' '0.5*rotbm.disk2.de*rotbm.e30z '});
model.result('pg5').feature('pttraj2').set('ellipsecount', 1);
model.result('pg5').feature('pttraj2').set('ellipsearrowscaleactive', true);
model.result('pg5').feature('pttraj2').set('ellipsearrowtype', 'none');
model.result('pg5').feature('pttraj2').set('titletype', 'none');
model.result('pg5').feature('pttraj2').label('Disk 1: Rotor');
model.result('pg5').feature('pttraj2').create('def', 'Deform');
model.result('pg5').feature('pttraj2').feature('def').set('scaleactive', true);
model.result('pg5').feature('pttraj2').feature('def').set('scale', '1');
model.result('pg5').feature('pttraj2').feature('def').set('expr', {'-rotbm.De_max*rotbm.e30x ' '-rotbm.De_max*rotbm.e30y ' '-rotbm.De_max*rotbm.e30z '});
model.result('pg5').create('pttraj3', 'PointTrajectories');
model.result('pg5').feature('pttraj3').set('plotdata', 'points');
model.result('pg5').feature('pttraj3').selection.geom('geom1', 0);
model.result('pg5').feature('pttraj3').selection.set([786]);
model.result('pg5').feature('pttraj3').selection.inherit(false);
model.result('pg5').feature('pttraj3').set('linetype', 'none');
model.result('pg5').feature('pttraj3').set('expr', {'X' 'Y' 'Z'});
model.result('pg5').feature('pttraj3').set('pointtype', 'ellipse');
model.result('pg5').feature('pttraj3').set('pointcolor', 'custom');
model.result('pg5').feature('pttraj3').set('custompointcolor', [0.8039215803146362 0.5215686559677124 0.24705882370471954]);
model.result('pg5').feature('pttraj3').set('semimajorexpr', {'0.5*rotbm.disk3.de*rotbm.e20x ' '0.5*rotbm.disk3.de*rotbm.e20y ' '0.5*rotbm.disk3.de*rotbm.e20z '});
model.result('pg5').feature('pttraj3').set('semiminorexpr', {'0.5*rotbm.disk3.de*rotbm.e30x ' '0.5*rotbm.disk3.de*rotbm.e30y ' '0.5*rotbm.disk3.de*rotbm.e30z '});
model.result('pg5').feature('pttraj3').set('ellipsecount', 1);
model.result('pg5').feature('pttraj3').set('ellipsearrowscaleactive', true);
model.result('pg5').feature('pttraj3').set('ellipsearrowtype', 'none');
model.result('pg5').feature('pttraj3').set('titletype', 'none');
model.result('pg5').feature('pttraj3').label('Disk 2: Rotor');
model.result('pg5').feature('pttraj3').create('def', 'Deform');
model.result('pg5').feature('pttraj3').feature('def').set('scaleactive', true);
model.result('pg5').feature('pttraj3').feature('def').set('scale', '1');
model.result('pg5').feature('pttraj3').feature('def').set('expr', {'-rotbm.De_max*rotbm.e30x ' '-rotbm.De_max*rotbm.e30y ' '-rotbm.De_max*rotbm.e30z '});
model.result('pg5').create('pttraj4', 'PointTrajectories');
model.result('pg5').feature('pttraj4').set('plotdata', 'points');
model.result('pg5').feature('pttraj4').selection.geom('geom1', 0);
model.result('pg5').feature('pttraj4').selection.set([88]);
model.result('pg5').feature('pttraj4').selection.inherit(false);
model.result('pg5').feature('pttraj4').set('linetype', 'none');
model.result('pg5').feature('pttraj4').set('pointtype', 'arrow');
model.result('pg5').feature('pttraj4').set('expr', {'X-1.0*rotbm.re*rotbm.jrb1.e3gx ' 'Y-1.0*rotbm.re*rotbm.jrb1.e3gy ' 'Z-1.0*rotbm.re*rotbm.jrb1.e3gz '});
model.result('pg5').feature('pttraj4').set('arrowexpr', {'rotbm.re*rotbm.jrb1.e3gx ' 'rotbm.re*rotbm.jrb1.e3gy ' 'rotbm.re*rotbm.jrb1.e3gz '});
model.result('pg5').feature('pttraj4').set('arrowtype', 'arrowhead');
model.result('pg5').feature('pttraj4').set('arrowbase', 'head');
model.result('pg5').feature('pttraj4').set('arrowscale', '10');
model.result('pg5').feature('pttraj4').set('arrowscaleactive', true);
model.result('pg5').feature('pttraj4').set('pointcolor', 'custom');
model.result('pg5').feature('pttraj4').set('custompointcolor', [0.5882353186607361 0.8627451062202454 0.5882353186607361]);
model.result('pg5').feature('pttraj4').set('titletype', 'none');
model.result('pg5').feature('pttraj4').label('Journal Bearing 1 (Motor)');
model.result('pg5').feature('pttraj4').create('def', 'Deform');
model.result('pg5').feature('pttraj4').feature('def').set('scaleactive', true);
model.result('pg5').feature('pttraj4').feature('def').set('scale', '1');
model.result('pg5').feature('pttraj4').feature('def').set('expr', {'-rotbm.De_max*rotbm.e30x ' '-rotbm.De_max*rotbm.e30y ' '-rotbm.De_max*rotbm.e30z '});
model.result('pg5').create('pttraj5', 'PointTrajectories');
model.result('pg5').feature('pttraj5').set('plotdata', 'points');
model.result('pg5').feature('pttraj5').selection.geom('geom1', 0);
model.result('pg5').feature('pttraj5').selection.set([721]);
model.result('pg5').feature('pttraj5').selection.inherit(false);
model.result('pg5').feature('pttraj5').set('linetype', 'none');
model.result('pg5').feature('pttraj5').set('pointtype', 'arrow');
model.result('pg5').feature('pttraj5').set('expr', {'X-1.0*rotbm.re*rotbm.jrb2.e3gx ' 'Y-1.0*rotbm.re*rotbm.jrb2.e3gy ' 'Z-1.0*rotbm.re*rotbm.jrb2.e3gz '});
model.result('pg5').feature('pttraj5').set('arrowexpr', {'rotbm.re*rotbm.jrb2.e3gx ' 'rotbm.re*rotbm.jrb2.e3gy ' 'rotbm.re*rotbm.jrb2.e3gz '});
model.result('pg5').feature('pttraj5').set('arrowtype', 'arrowhead');
model.result('pg5').feature('pttraj5').set('arrowbase', 'head');
model.result('pg5').feature('pttraj5').set('arrowscale', '10');
model.result('pg5').feature('pttraj5').set('arrowscaleactive', true);
model.result('pg5').feature('pttraj5').set('pointcolor', 'custom');
model.result('pg5').feature('pttraj5').set('custompointcolor', [0.5882353186607361 0.8627451062202454 0.5882353186607361]);
model.result('pg5').feature('pttraj5').set('titletype', 'none');
model.result('pg5').feature('pttraj5').label('Journal Bearing 2 (Motor)');
model.result('pg5').feature('pttraj5').create('def', 'Deform');
model.result('pg5').feature('pttraj5').feature('def').set('scaleactive', true);
model.result('pg5').feature('pttraj5').feature('def').set('scale', '1');
model.result('pg5').feature('pttraj5').feature('def').set('expr', {'-rotbm.De_max*rotbm.e30x ' '-rotbm.De_max*rotbm.e30y ' '-rotbm.De_max*rotbm.e30z '});
model.result('pg5').create('pttraj6', 'PointTrajectories');
model.result('pg5').feature('pttraj6').set('plotdata', 'points');
model.result('pg5').feature('pttraj6').selection.geom('geom1', 0);
model.result('pg5').feature('pttraj6').selection.set([765]);
model.result('pg5').feature('pttraj6').selection.inherit(false);
model.result('pg5').feature('pttraj6').set('linetype', 'none');
model.result('pg5').feature('pttraj6').set('pointtype', 'arrow');
model.result('pg5').feature('pttraj6').set('expr', {'X-1.0*rotbm.re*rotbm.jrb3.e3gx ' 'Y-1.0*rotbm.re*rotbm.jrb3.e3gy ' 'Z-1.0*rotbm.re*rotbm.jrb3.e3gz '});
model.result('pg5').feature('pttraj6').set('arrowexpr', {'rotbm.re*rotbm.jrb3.e3gx ' 'rotbm.re*rotbm.jrb3.e3gy ' 'rotbm.re*rotbm.jrb3.e3gz '});
model.result('pg5').feature('pttraj6').set('arrowtype', 'arrowhead');
model.result('pg5').feature('pttraj6').set('arrowbase', 'head');
model.result('pg5').feature('pttraj6').set('arrowscale', '10');
model.result('pg5').feature('pttraj6').set('arrowscaleactive', true);
model.result('pg5').feature('pttraj6').set('pointcolor', 'custom');
model.result('pg5').feature('pttraj6').set('custompointcolor', [0.5882353186607361 0.8627451062202454 0.5882353186607361]);
model.result('pg5').feature('pttraj6').set('titletype', 'none');
model.result('pg5').feature('pttraj6').label('Journal Bearing 3 (External)');
model.result('pg5').feature('pttraj6').create('def', 'Deform');
model.result('pg5').feature('pttraj6').feature('def').set('scaleactive', true);
model.result('pg5').feature('pttraj6').feature('def').set('scale', '1');
model.result('pg5').feature('pttraj6').feature('def').set('expr', {'-rotbm.De_max*rotbm.e30x ' '-rotbm.De_max*rotbm.e30y ' '-rotbm.De_max*rotbm.e30z '});
model.result('pg5').create('pttraj7', 'PointTrajectories');
model.result('pg5').feature('pttraj7').set('plotdata', 'points');
model.result('pg5').feature('pttraj7').selection.geom('geom1', 0);
model.result('pg5').feature('pttraj7').selection.set([804]);
model.result('pg5').feature('pttraj7').selection.inherit(false);
model.result('pg5').feature('pttraj7').set('linetype', 'none');
model.result('pg5').feature('pttraj7').set('pointtype', 'arrow');
model.result('pg5').feature('pttraj7').set('expr', {'X-1.0*rotbm.re*rotbm.jrb4.e3gx ' 'Y-1.0*rotbm.re*rotbm.jrb4.e3gy ' 'Z-1.0*rotbm.re*rotbm.jrb4.e3gz '});
model.result('pg5').feature('pttraj7').set('arrowexpr', {'rotbm.re*rotbm.jrb4.e3gx ' 'rotbm.re*rotbm.jrb4.e3gy ' 'rotbm.re*rotbm.jrb4.e3gz '});
model.result('pg5').feature('pttraj7').set('arrowtype', 'arrowhead');
model.result('pg5').feature('pttraj7').set('arrowbase', 'head');
model.result('pg5').feature('pttraj7').set('arrowscale', '10');
model.result('pg5').feature('pttraj7').set('arrowscaleactive', true);
model.result('pg5').feature('pttraj7').set('pointcolor', 'custom');
model.result('pg5').feature('pttraj7').set('custompointcolor', [0.5882353186607361 0.8627451062202454 0.5882353186607361]);
model.result('pg5').feature('pttraj7').set('titletype', 'none');
model.result('pg5').feature('pttraj7').label('Journal Bearing 4 (External)');
model.result('pg5').feature('pttraj7').create('def', 'Deform');
model.result('pg5').feature('pttraj7').feature('def').set('scaleactive', true);
model.result('pg5').feature('pttraj7').feature('def').set('scale', '1');
model.result('pg5').feature('pttraj7').feature('def').set('expr', {'-rotbm.De_max*rotbm.e30x ' '-rotbm.De_max*rotbm.e30y ' '-rotbm.De_max*rotbm.e30z '});
model.result('pg5').create('pttraj8', 'PointTrajectories');
model.result('pg5').feature('pttraj8').set('plotdata', 'points');
model.result('pg5').feature('pttraj8').selection.geom('geom1', 0);
model.result('pg5').feature('pttraj8').selection.set([783]);
model.result('pg5').feature('pttraj8').selection.inherit(false);
model.result('pg5').feature('pttraj8').set('linetype', 'none');
model.result('pg5').feature('pttraj8').set('pointtype', 'arrow');
model.result('pg5').feature('pttraj8').set('expr', {'X-1.0*rotbm.re*rotbm.amb1.e3gx ' 'Y-1.0*rotbm.re*rotbm.amb1.e3gy ' 'Z-1.0*rotbm.re*rotbm.amb1.e3gz '});
model.result('pg5').feature('pttraj8').set('arrowexpr', {'rotbm.re*rotbm.amb1.e3gx ' 'rotbm.re*rotbm.amb1.e3gy ' 'rotbm.re*rotbm.amb1.e3gz '});
model.result('pg5').feature('pttraj8').set('arrowtype', 'arrowhead');
model.result('pg5').feature('pttraj8').set('arrowbase', 'head');
model.result('pg5').feature('pttraj8').set('arrowscale', '10');
model.result('pg5').feature('pttraj8').set('arrowscaleactive', true);
model.result('pg5').feature('pttraj8').set('pointcolor', 'custom');
model.result('pg5').feature('pttraj8').set('custompointcolor', [0.5882353186607361 0.8627451062202454 0.5882353186607361]);
model.result('pg5').feature('pttraj8').set('titletype', 'none');
model.result('pg5').feature('pttraj8').label('Active Magnetic Bearing 1');
model.result('pg5').feature('pttraj8').create('def', 'Deform');
model.result('pg5').feature('pttraj8').feature('def').set('scaleactive', true);
model.result('pg5').feature('pttraj8').feature('def').set('scale', '1');
model.result('pg5').feature('pttraj8').feature('def').set('expr', {'-rotbm.De_max*rotbm.e30x ' '-rotbm.De_max*rotbm.e30y ' '-rotbm.De_max*rotbm.e30z '});
model.result('pg4').run;
model.result('pg5').run;
model.result('pg4').run;
model.result('pg4').feature.copy('line1', 'pg5/line1');
model.result('pg4').run;
model.result('pg4').feature('line1').set('colortable', 'AuroraAustralisDark');
model.result('pg4').run;
model.result('pg4').feature('line1').feature('def').set('scaleactive', true);
model.result('pg4').feature('line1').feature('def').set('scale', 10);
model.result('pg4').run;
model.result('pg4').feature('vol1').set('threshold', 'none');
model.result('pg4').run;
model.result('pg4').feature('vol1').feature('def').set('scaleactive', true);
model.result('pg4').feature('vol1').feature('def').set('scale', 150);
model.result('pg4').run;
model.result('pg4').set('legendpos', 'rightdouble');
model.result('pg4').setIndex('looplevel', 1001, 0);
model.result('pg4').run;
model.result('pg3').run;
model.result('pg3').feature.duplicate('ptgr2', 'ptgr1');
model.result('pg3').run;
model.result('pg3').feature('ptgr2').set('data', 'dset2');
model.result('pg3').feature('ptgr2').setIndex('legends', 'With AMB', 0);
model.result('pg3').run;
model.result('pg3').run;
model.result.duplicate('pg6', 'pg3');
model.result('pg6').run;
model.result('pg6').label('Vertical Displacement at AMB');
model.result('pg6').run;
model.result('pg6').feature('ptgr1').selection.set([783]);
model.result('pg6').run;
model.result('pg6').feature('ptgr2').selection.set([783]);
model.result('pg6').run;
model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').run;
model.result('pg7').set('data', 'dset2');
model.result('pg7').label('Control Currents');
model.result('pg7').set('titletype', 'label');
model.result('pg7').set('ylabelactive', true);
model.result('pg7').set('ylabel', 'Control current (A)');
model.result('pg7').create('ptgr1', 'PointGraph');
model.result('pg7').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg7').feature('ptgr1').set('linewidth', 'preference');
model.result('pg7').feature('ptgr1').selection.set([783]);
model.result('pg7').feature('ptgr1').set('expr', 'rotbm.amb1.ic1');
model.result('pg7').feature('ptgr1').set('legend', true);
model.result('pg7').feature('ptgr1').set('legendmethod', 'manual');
model.result('pg7').feature('ptgr1').setIndex('legends', 'Local y direction', 0);
model.result('pg7').feature.duplicate('ptgr2', 'ptgr1');
model.result('pg7').run;
model.result('pg7').feature('ptgr2').set('expr', 'rotbm.amb1.ic2');
model.result('pg7').feature('ptgr2').setIndex('legends', 'Local z direction', 0);
model.result('pg7').run;
model.result('pg7').run;
model.result.duplicate('pg8', 'pg7');
model.result('pg8').run;
model.result('pg8').label('Magnetic Bearing Force');
model.result('pg8').set('ylabel', 'Magnetic bearing force (N)');
model.result('pg8').set('legendpos', 'upperleft');
model.result('pg8').run;
model.result('pg8').feature('ptgr1').set('expr', 'rotbm.amb1.F2');
model.result('pg8').run;
model.result('pg8').feature('ptgr2').set('expr', 'rotbm.amb1.F3');
model.result('pg8').run;
model.result.export.create('anim1', 'Animation');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('fontsize', '9');
model.result.export('anim1').set('colortheme', 'globaltheme');
model.result.export('anim1').set('customcolor', [1 1 1]);
model.result.export('anim1').set('background', 'color');
model.result.export('anim1').set('gltfincludelines', 'on');
model.result.export('anim1').set('title1d', 'on');
model.result.export('anim1').set('legend1d', 'on');
model.result.export('anim1').set('logo1d', 'on');
model.result.export('anim1').set('options1d', 'on');
model.result.export('anim1').set('title2d', 'on');
model.result.export('anim1').set('legend2d', 'on');
model.result.export('anim1').set('logo2d', 'on');
model.result.export('anim1').set('options2d', 'off');
model.result.export('anim1').set('title3d', 'on');
model.result.export('anim1').set('legend3d', 'on');
model.result.export('anim1').set('logo3d', 'on');
model.result.export('anim1').set('options3d', 'off');
model.result.export('anim1').set('axisorientation', 'on');
model.result.export('anim1').set('grid', 'on');
model.result.export('anim1').set('axes1d', 'on');
model.result.export('anim1').set('axes2d', 'on');
model.result.export('anim1').set('showgrid', 'on');
model.result.export('anim1').showFrame;
model.result.export('anim1').set('plotgroup', 'pg4');
model.result.export('anim1').set('looplevelinput', 'manualindices');
model.result.export('anim1').set('looplevelindices', 'range(1100,1,1201)');
model.result.export('anim1').set('maxframes', 50);
model.result.export('anim1').run;

model.study('std1').feature('time').set('useadvanceddisable', true);
model.study('std1').feature('time').set('disabledphysics', {'rotbm/amb1'});

model.result('pg8').run;

model.title('Vibration Control in a Motor Drive Using an Active Magnetic Bearing');

model.description('Active magnetic bearings are often used for controlling the vibration level in mechanical systems. In this example, a motor-driven rotor system in which speed of the system is gradually increased is considered. The system vibrates due to existing imbalances. As the rotor speed crosses through the critical speeds of the system, high vibration levels are induced due to resonance. In the second study, an electromagnetic bearing is switched on at the instant when rotor is crossing over one of critical speeds with the objective of controlling the vibrations during the resonance. The vibration response of the system with electromagnetic bearing is compared with the one without electromagnetic bearing.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('vibration_control_with_amb.mph');

model.modelNode.label('Components');

out = model;
