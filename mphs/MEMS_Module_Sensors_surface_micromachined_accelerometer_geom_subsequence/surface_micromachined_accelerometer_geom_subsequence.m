function out = model
%
% surface_micromachined_accelerometer_geom_subsequence.m
%
% Model exported on May 26 2025, 21:30 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/MEMS_Module/Sensors');

model.geom.create('part1', 'Part', 3);
model.geom('part1').label('Proof mass with fingers');
model.geom('part1').inputParam.set('l_PM', '440[um]');
model.geom('part1').inputParam.descr('l_PM', 'Proof mass length');
model.geom('part1').inputParam.set('w_PM', '100[um]');
model.geom('part1').inputParam.descr('w_PM', 'Proof mass full width');
model.geom('part1').inputParam.set('t_PM', '2[um]');
model.geom('part1').inputParam.descr('t_PM', 'Proof mass thickness');
model.geom('part1').inputParam.set('l_f', '114[um]');
model.geom('part1').inputParam.descr('l_f', 'Length of finger');
model.geom('part1').inputParam.set('w_f', '4[um]');
model.geom('part1').inputParam.descr('w_f', 'Width of finger');
model.geom('part1').inputParam.set('n_st', '3');
model.geom('part1').inputParam.descr('n_st', 'Number of self test fingers');
model.geom('part1').inputParam.set('n_f', '7');
model.geom('part1').inputParam.descr('n_f', 'Number of sense fingers');
model.geom('part1').inputParam.set('g_f', '1[um]');
model.geom('part1').inputParam.descr('g_f', 'Gap between sense fingers');
model.geom('part1').inputParam.set('g_st', '3[um]');
model.geom('part1').inputParam.descr('g_st', 'Gap between self test fingers');
model.geom('part1').inputParam.set('x_st', '14[um]');
model.geom('part1').inputParam.descr('x_st', 'Starting position of self test fingers');
model.geom('part1').inputParam.set('x_f', '173[um]');
model.geom('part1').inputParam.descr('x_f', 'Starting position of sense fingers');
model.geom('part1').inputParam.set('w_eh', '2[um]');
model.geom('part1').inputParam.descr('w_eh', 'Etch hole size');
model.geom('part1').inputParam.set('p_eh', '20[um]');
model.geom('part1').inputParam.descr('p_eh', 'Etch hole period');
model.geom('part1').localParam.set('n_eh', 'floor((l_PM-4*w_eh)/p_eh)+1');
model.geom('part1').localParam.descr('n_eh', 'Number of etch holes along length');
model.geom('part1').localParam.set('m_eh', 'floor((w_PM-4*w_eh)/2/p_eh)+1');
model.geom('part1').localParam.descr('m_eh', 'Number of etch holes along half width');
model.geom('part1').localParam.set('x_eh', '(l_PM-(n_eh-1)*p_eh)/2');
model.geom('part1').localParam.descr('x_eh', 'Position of first etch hole');
model.geom('part1').create('wp1', 'WorkPlane');
model.geom('part1').feature('wp1').set('unite', true);
model.geom('part1').feature('wp1').geom.create('r1', 'Rectangle');
model.geom('part1').feature('wp1').geom.feature('r1').label('Proof Mass');
model.geom('part1').feature('wp1').geom.feature('r1').set('size', {'l_PM/2' 'w_PM/2'});
model.geom('part1').feature('wp1').geom.run('r1');
model.geom('part1').feature('wp1').geom.create('r2', 'Rectangle');
model.geom('part1').feature('wp1').geom.feature('r2').label('Self test finger');
model.geom('part1').feature('wp1').geom.feature('r2').set('size', {'w_f' 'l_f'});
model.geom('part1').feature('wp1').geom.feature('r2').set('pos', {'x_st' 'w_PM/2'});
model.geom('part1').feature('wp1').geom.run('r2');
model.geom('part1').feature('wp1').geom.create('arr1', 'Array');
model.geom('part1').feature('wp1').geom.feature('arr1').label('Self test finger array');
model.geom('part1').feature('wp1').geom.feature('arr1').selection('input').set({'r2'});
model.geom('part1').feature('wp1').geom.feature('arr1').set('type', 'linear');
model.geom('part1').feature('wp1').geom.feature('arr1').set('linearsize', 'n_st');
model.geom('part1').feature('wp1').geom.feature('arr1').set('displ', {'3*w_f+2*g_f+g_st' '0'});
model.geom('part1').feature('wp1').geom.run('arr1');
model.geom('part1').feature('wp1').geom.create('mir1', 'Mirror');
model.geom('part1').feature('wp1').geom.feature('mir1').selection('input').set({'arr1(1)' 'r1'});
model.geom('part1').feature('wp1').geom.feature('mir1').set('pos', {'l_PM/2' '0'});
model.geom('part1').feature('wp1').geom.run('mir1');
model.geom('part1').feature('wp1').geom.feature('mir1').set('keep', true);
model.geom('part1').feature('wp1').geom.run('mir1');
model.geom('part1').feature('wp1').geom.create('arr2', 'Array');
model.geom('part1').feature('wp1').geom.feature('arr2').selection('input').set({'mir1(1)'});
model.geom('part1').feature('wp1').geom.feature('arr2').set('type', 'linear');
model.geom('part1').feature('wp1').geom.feature('arr2').set('linearsize', 'n_st');
model.geom('part1').feature('wp1').geom.feature('arr2').set('displ', {'-(3*w_f+2*g_f+g_st)' '0'});
model.geom('part1').feature('wp1').geom.run('arr2');
model.geom('part1').feature('wp1').geom.create('r3', 'Rectangle');
model.geom('part1').feature('wp1').geom.feature('r3').label('Sense finger');
model.geom('part1').feature('wp1').geom.feature('r3').set('size', {'w_f' 'l_f'});
model.geom('part1').feature('wp1').geom.feature('r3').set('pos', {'x_f' 'w_PM/2'});
model.geom('part1').feature('wp1').geom.feature('arr1').label('Self test finger array 1');
model.geom('part1').feature('wp1').geom.feature('arr2').label('Self test finger array 2');
model.geom('part1').feature('wp1').geom.run('r3');
model.geom('part1').feature('wp1').geom.create('arr3', 'Array');
model.geom('part1').feature('wp1').geom.feature('arr3').label('Sense finger array');
model.geom('part1').feature('wp1').geom.feature('arr3').selection('input').set({'r3'});
model.geom('part1').feature('wp1').geom.feature('arr3').set('type', 'linear');
model.geom('part1').feature('wp1').geom.feature('arr3').set('linearsize', 'n_f');
model.geom('part1').feature('wp1').geom.feature('arr3').set('displ', {'3*(w_f+g_f)' '0'});
model.geom('part1').feature('wp1').geom.run('arr3');
model.geom('part1').feature('wp1').geom.create('uni1', 'Union');
model.geom('part1').feature('wp1').geom.feature('uni1').label('Join fingers');
model.geom('part1').feature('wp1').geom.feature('uni1').selection('input').set({'arr1' 'arr2' 'arr3' 'mir1(2)' 'r1'});
model.geom('part1').feature('wp1').geom.feature('uni1').set('intbnd', false);
model.geom('part1').feature('wp1').geom.run('uni1');
model.geom('part1').feature('wp1').geom.create('r4', 'Rectangle');
model.geom('part1').feature('wp1').geom.feature('r4').label('Etch hole');
model.geom('part1').feature('wp1').geom.feature('r4').set('size', {'w_eh' 'w_eh'});
model.geom('part1').feature('wp1').geom.feature('r4').set('pos', {'x_eh' '0'});
model.geom('part1').feature('wp1').geom.run('r4');
model.geom('part1').feature('wp1').geom.create('arr4', 'Array');
model.geom('part1').feature('wp1').geom.feature('arr4').selection('input').set({'r4'});
model.geom('part1').feature('wp1').geom.feature('arr4').set('fullsize', {'n_eh' 'm_eh'});
model.geom('part1').feature('wp1').geom.feature('arr4').set('displ', {'p_eh' 'p_eh'});
model.geom('part1').feature('wp1').geom.run('arr4');
model.geom('part1').feature('wp1').geom.feature('r4').set('base', 'center');
model.geom('part1').feature('wp1').geom.run('arr4');
model.geom('part1').feature('wp1').geom.create('dif1', 'Difference');
model.geom('part1').feature('wp1').geom.feature('dif1').selection('input').set({'uni1'});
model.geom('part1').feature('wp1').geom.feature('dif1').selection('input2').set({'arr4'});
model.geom('part1').feature('wp1').geom.run('dif1');
model.geom('part1').run('wp1');
model.geom('part1').feature.create('ext1', 'Extrude');
model.geom('part1').feature('ext1').label('Extrude Si');
model.geom('part1').feature('ext1').setIndex('distance', 't_PM', 0);
model.geom('part1').selection.create('csel1', 'CumulativeSelection');
model.geom('part1').selection('csel1').label('Proof Mass + Fingers Seq');
model.geom('part1').feature('ext1').set('contributeto', 'csel1');
model.geom('part1').run('ext1');
model.geom.create('part2', 'Part', 3);
model.geom('part2').label('Spring and anchor');
model.geom('part2').inputParam.set('mirror', '1');
model.geom('part2').inputParam.descr('mirror', '0: no mirror. 1: mirror');
model.geom('part2').inputParam.set('l_sp', '320[um]');
model.geom('part2').inputParam.descr('l_sp', 'Spring length');
model.geom('part2').inputParam.set('w_sp', '2.5[um]');
model.geom('part2').inputParam.descr('w_sp', 'Spring width');
model.geom('part2').inputParam.set('g_sp', '1.25[um]');
model.geom('part2').inputParam.descr('g_sp', 'Spring gap');
model.geom('part2').inputParam.set('w_sp_conn', '4[um]');
model.geom('part2').inputParam.descr('w_sp_conn', 'Spring connection width');
model.geom('part2').inputParam.set('w_f', '4[um]');
model.geom('part2').inputParam.descr('w_f', 'Guard finger width');
model.geom('part2').inputParam.set('l_anch_base', '17[um]');
model.geom('part2').inputParam.descr('l_anch_base', 'Anchor base length');
model.geom('part2').inputParam.set('w_anch_base', '17[um]');
model.geom('part2').inputParam.descr('w_anch_base', 'Anchor base width');
model.geom('part2').inputParam.set('r_anch', '3[um]');
model.geom('part2').inputParam.descr('r_anch', 'Anchor radius');
model.geom('part2').inputParam.set('x_anch', '12[um]');
model.geom('part2').inputParam.descr('x_anch', 'Anchor position');
model.geom('part2').inputParam.set('t_sp', '2[um]');
model.geom('part2').inputParam.descr('t_sp', 'Spring thickness');
model.geom('part2').inputParam.set('t_anch', '1.6[um]');
model.geom('part2').inputParam.descr('t_anch', 'Anchor thickness');
model.geom('part2').inputParam.set('x_sp', '0[um]');
model.geom('part2').inputParam.descr('x_sp', 'Position');
model.geom('part2').lengthUnit([native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']);
model.geom('part1').lengthUnit([native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']);
model.geom('part2').localParam.set('w_sp_anch', 'l_anch_base+2*(w_f+w_sp)+3*g_sp');
model.geom('part2').localParam.descr('w_sp_anch', 'Total width');
model.geom('part2').create('wp1', 'WorkPlane');
model.geom('part2').feature('wp1').set('unite', true);
model.geom('part2').feature('wp1').geom.create('r1', 'Rectangle');
model.geom('part2').feature('wp1').geom.feature('r1').label('Overall outline');
model.geom('part2').feature('wp1').geom.feature('r1').set('size', {'w_sp_anch' 'l_sp/2'});
model.geom('part2').feature('wp1').geom.feature('r1').set('pos', {'-mirror*w_sp_anch' '0'});
model.geom('part2').feature('wp1').geom.run('r1');
model.geom('part2').feature('wp1').geom.create('r2', 'Rectangle');
model.geom('part2').feature('wp1').geom.feature('r2').label('Rectangle to remove');
model.geom('part2').feature('wp1').geom.feature('r2').set('size', {'l_anch_base' '1'});
model.geom('part2').feature('wp1').geom.feature('r2').setIndex('size', 'l_sp/2-w_anch_base/2', 1);
model.geom('part2').feature('wp1').geom.feature('r2').set('pos', {'-mirror*l_anch_base' '0'});
model.geom('part2').feature('wp1').geom.feature('r2').setIndex('pos', 'w_anch_base/2', 1);
model.geom('part2').feature('wp1').geom.run('r2');
model.geom('part2').feature('wp1').geom.create('r3', 'Rectangle');
model.geom('part2').feature('wp1').geom.feature('r3').label('Rectangle to remove 1');
model.geom('part2').feature('wp1').geom.feature('r3').set('size', {'g_sp' 'l_sp/2-w_anch_base/2'});
model.geom('part2').feature('wp1').geom.feature('r3').set('pos', {'l_anch_base+w_f-mirror*(2*(l_anch_base+w_f)+g_sp)' '0'});
model.geom('part2').feature('wp1').geom.feature('r3').setIndex('pos', 'w_anch_base/2', 1);
model.geom('part2').feature('wp1').geom.run('r3');
model.geom('part2').feature('wp1').geom.create('r4', 'Rectangle');
model.geom('part2').feature('wp1').geom.feature('r4').label('Rectangle to remove 2');
model.geom('part2').feature('wp1').geom.feature('r4').set('size', {'g_sp' 'l_sp/2-w_anch_base/2'});
model.geom('part2').feature('wp1').geom.feature('r4').set('pos', {'l_anch_base+w_f+2*(w_sp+g_sp)-mirror*((l_anch_base+w_f+2*(w_sp+g_sp))*2+g_sp)' '0'});
model.geom('part2').feature('wp1').geom.feature('r4').setIndex('pos', 'w_anch_base/2', 1);
model.geom('part2').feature('wp1').geom.run('r4');
model.geom('part2').feature('wp1').geom.create('r5', 'Rectangle');
model.geom('part2').feature('wp1').geom.feature('r5').label('Rectangle to remove 3');
model.geom('part2').feature('wp1').geom.feature('r5').set('size', {'g_sp' 'l_sp/2-w_sp_conn'});
model.geom('part2').feature('wp1').geom.feature('r5').set('pos', {'l_anch_base+w_f+g_sp+w_sp-mirror*(2*(l_anch_base+w_f+g_sp+w_sp)+g_sp)' '0'});
model.geom('part2').feature('wp1').geom.run('r5');
model.geom('part2').feature('wp1').geom.create('dif1', 'Difference');
model.geom('part2').feature('wp1').geom.feature('dif1').selection('input').set({'r1'});
model.geom('part2').feature('wp1').geom.feature('dif1').selection('input2').set({'r2' 'r3' 'r4' 'r5'});
model.geom('part2').run('wp1');
model.geom('part2').feature.create('ext1', 'Extrude');
model.geom('part2').feature('ext1').set('workplane', 'wp1');
model.geom('part2').feature('ext1').selection('input').set({'wp1'});
model.geom('part2').feature('ext1').label('Extrude spring');
model.geom('part2').feature('ext1').setIndex('distance', 't_sp', 0);
model.geom('part2').run('ext1');
model.geom('part2').create('wp2', 'WorkPlane');
model.geom('part2').feature('wp2').set('unite', true);
model.geom('part2').feature('wp2').label('Work Plane for Anchor');
model.geom('part2').feature('wp2').geom.create('c1', 'Circle');
model.geom('part2').feature('wp2').geom.feature('c1').set('r', 'r_anch');
model.geom('part2').feature('wp2').geom.feature('c1').set('angle', 180);
model.geom('part2').feature('wp2').geom.feature('c1').set('pos', {'x_anch-mirror*2*x_anch' '0'});
model.geom('part2').feature('wp2').geom.run('c1');
model.geom('part2').run('wp2');
model.geom('part2').feature.create('ext2', 'Extrude');
model.geom('part2').feature('ext2').set('workplane', 'wp1');
model.geom('part2').feature('ext2').selection('input').set({});
model.geom('part2').feature('ext2').set('workplane', 'wp2');
model.geom('part2').feature('ext2').selection('input').set({'wp2'});
model.geom('part2').feature('ext2').label('Extrude Anchor');
model.geom('part2').feature('ext2').setIndex('distance', '-t_anch', 0);
model.geom('part2').run('ext2');
model.geom('part2').create('uni1', 'Union');
model.geom('part2').feature('uni1').label('Spring plus anchor');
model.geom('part2').feature('uni1').selection('input').set({'ext1' 'ext2'});
model.geom('part2').run('uni1');
model.geom('part2').create('mov1', 'Move');
model.geom('part2').feature('mov1').selection('input').set({'uni1'});
model.geom('part2').feature('mov1').set('displx', '-w_sp_anch+mirror*w_sp_anch*2+x_sp');
model.geom('part2').run('mov1');
model.geom('part2').selection.create('csel1', 'CumulativeSelection');
model.geom('part2').selection('csel1').label('Spring + anchor');
model.geom('part2').feature('mov1').set('contributeto', 'csel1');
model.geom.create('part3', 'Part', 3);
model.geom('part3').label('Electrode array');
model.geom('part3').inputParam.set('LH', '1');
model.geom('part3').inputParam.descr('LH', '0: RH, 1: LH');
model.geom('part3').inputParam.set('l_e', '120[um]');
model.geom('part3').inputParam.descr('l_e', 'Electrode length');
model.geom('part3').inputParam.set('w_e', '4[um]');
model.geom('part3').inputParam.descr('w_e', 'Electrode width');
model.geom('part3').inputParam.set('l_p', '16[um]');
model.geom('part3').inputParam.descr('l_p', 'Pad length');
model.geom('part3').inputParam.set('w_p', '8[um]');
model.geom('part3').inputParam.descr('w_p', 'Pad width');
model.geom('part3').inputParam.set('r_an', '2[um]');
model.geom('part3').inputParam.descr('r_an', 'Anchor radius');
model.geom('part3').inputParam.set('t_e', '2[um]');
model.geom('part3').inputParam.descr('t_e', 'Electrode thickness');
model.geom('part3').inputParam.set('t_an', '1.6[um]');
model.geom('part3').inputParam.descr('t_an', 'Anchor thickness');
model.geom('part3').inputParam.set('n_e', '3');
model.geom('part3').inputParam.descr('n_e', 'Number of electrodes');
model.geom('part3').inputParam.set('p_e', '15[um]');
model.geom('part3').inputParam.descr('p_e', 'Periodicity');
model.geom('part3').inputParam.set('x_e', '0[um]');
model.geom('part3').inputParam.descr('x_e', 'x position');
model.geom('part3').inputParam.set('y_e', '0[um]');
model.geom('part3').inputParam.descr('y_e', 'y position');
model.geom('part3').lengthUnit([native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']);
model.geom('part3').create('wp1', 'WorkPlane');
model.geom('part3').feature('wp1').set('unite', true);
model.geom('part3').feature('wp1').geom.create('r1', 'Rectangle');
model.geom('part3').feature('wp1').geom.feature('r1').set('size', {'w_e' 'l_e'});
model.geom('part3').feature('wp1').geom.run('r1');
model.geom('part3').feature('wp1').geom.create('r2', 'Rectangle');
model.geom('part3').feature('wp1').geom.feature('r2').set('size', {'w_p' 'l_p'});
model.geom('part3').feature('wp1').geom.feature('r2').set('pos', {'LH*(-w_p+w_e)' '0'});
model.geom('part3').feature('wp1').geom.feature('r2').setIndex('pos', 'l_e', 1);
model.geom('part3').feature('wp1').geom.run('r2');
model.geom('part3').feature('wp1').geom.create('uni1', 'Union');
model.geom('part3').feature('wp1').geom.feature('uni1').selection('input').set({'r1' 'r2'});
model.geom('part3').feature('wp1').geom.feature('uni1').set('intbnd', false);
model.geom('part3').feature('wp1').geom.feature('r1').label('Electrode');
model.geom('part3').feature('wp1').geom.feature('r2').label('Pad');
model.geom('part3').feature('wp1').geom.run('r2');
model.geom('part3').feature('wp1').geom.run('uni1');
model.geom('part3').run('wp1');
model.geom('part3').feature.create('ext1', 'Extrude');
model.geom('part3').feature('ext1').setIndex('distance', 't_e', 0);
model.geom('part3').run('ext1');
model.geom('part3').create('wp2', 'WorkPlane');
model.geom('part3').feature('wp2').set('unite', true);
model.geom('part3').feature('wp2').geom.create('c1', 'Circle');
model.geom('part3').feature('wp2').geom.run('c1');
model.geom('part3').feature('wp2').geom.feature('c1').set('r', 'r_an');
model.geom('part3').feature('wp2').geom.feature('c1').set('pos', {'w_p/2+LH*(-w_p+w_e)' '0'});
model.geom('part3').feature('wp2').geom.feature('c1').setIndex('pos', 'l_e+l_p/2', 1);
model.geom('part3').feature('wp2').geom.run('c1');
model.geom('part3').run('wp2');
model.geom('part3').feature.create('ext2', 'Extrude');
model.geom('part3').feature('ext2').setIndex('distance', '-t_an', 0);
model.geom('part3').run('ext2');
model.geom('part3').feature('ext2').label('Extrude anchor');
model.geom('part3').feature('ext1').label('Extrude electrode');
model.geom('part3').create('uni1', 'Union');
model.geom('part3').feature('uni1').selection('input').set({'ext1' 'ext2'});
model.geom('part3').run('uni1');
model.geom('part3').feature('uni1').label('Electrode + anchor');
model.geom('part3').create('mov1', 'Move');
model.geom('part3').feature('mov1').selection('input').set({'uni1'});
model.geom('part3').feature('mov1').set('displx', 'x_e');
model.geom('part3').feature('mov1').set('disply', 'y_e');
model.geom('part3').run('mov1');
model.geom('part3').create('arr1', 'Array');
model.geom('part3').feature('arr1').selection('input').set({'mov1'});
model.geom('part3').feature('arr1').set('type', 'linear');
model.geom('part3').feature('arr1').set('linearsize', 'n_e');
model.geom('part3').feature('arr1').set('displ', {'p_e' '0' '0'});
model.geom('part3').selection.create('csel1', 'CumulativeSelection');
model.geom('part3').selection('csel1').label('Electrode array');
model.geom('part3').feature('arr1').set('contributeto', 'csel1');
model.geom('part3').run('arr1');

model.title([]);

model.description('');

model.label('surface_micromachined_accelerometer_geom_subsequence.mph');

model.modelNode.label('Components');

out = model;
