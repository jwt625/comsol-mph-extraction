function out = model
%
% squeezed_plate_response.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Structural_Mechanics_Module/Contact_and_Friction');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.study.create('std1');
model.study('std1').create('eig', 'Eigenfrequency');
model.study('std1').feature('eig').set('chkeigregion', true);
model.study('std1').feature('eig').set('conrad', '1');
model.study('std1').feature('eig').set('conradynhm', '1');
model.study('std1').feature('eig').set('storefact', false);
model.study('std1').feature('eig').set('solnum', 'auto');
model.study('std1').feature('eig').set('notsolnum', 'auto');
model.study('std1').feature('eig').set('outputmap', {});
model.study('std1').feature('eig').set('ngenAUX', '1');
model.study('std1').feature('eig').set('goalngenAUX', '1');
model.study('std1').feature('eig').set('ngenAUX', '1');
model.study('std1').feature('eig').set('goalngenAUX', '1');
model.study('std1').feature('eig').setSolveFor('/physics/solid', true);

model.common.create('mpf1', 'ParticipationFactors', 'comp1');

model.param.set('F', '1[kN/m^2]');
model.param.descr('F', 'Applied harmonic load');
model.param.set('ro', '1[m]');
model.param.descr('ro', 'Plate radius');
model.param.set('ri', '0.2[m]');
model.param.descr('ri', 'Plate holder radius');
model.param.set('th', '0.02[m]');
model.param.descr('th', 'Plate thickness');

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', {'ro' 'th'});
model.geom('geom1').feature('r1').setIndex('layername', 'Layer 1', 0);
model.geom('geom1').feature('r1').setIndex('layer', 'ri', 0);
model.geom('geom1').feature('r1').set('layerleft', true);
model.geom('geom1').feature('r1').set('layerbottom', false);
model.geom('geom1').run('r1');
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').set('size', {'ri' '2*th'});
model.geom('geom1').feature('r2').set('pos', {'0' 'th'});
model.geom('geom1').feature.duplicate('r3', 'r2');
model.geom('geom1').feature('r3').set('pos', {'0' '-2*th'});
model.geom('geom1').feature('fin').set('action', 'assembly');
model.geom('geom1').feature('fin').set('createpairs', false);
model.geom('geom1').run('fin');

model.pair.create('p1', 'Contact', 'geom1');
model.pair('p1').source.set([3 13]);
model.pair('p1').destination.set([6 7]);
model.pair('p1').mapping('initial');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat1').propertyGroup('Enu').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup('Enu').func.create('int2', 'Interpolation');
model.material('mat1').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat1').propertyGroup.create('ElastoplasticModel', 'Elastoplastic material model');
model.material('mat1').propertyGroup('ElastoplasticModel').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('Ludwik', 'Ludwik');
model.material('mat1').propertyGroup('Ludwik').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('JohnsonCook', 'Johnson-Cook');
model.material('mat1').propertyGroup.create('Swift', 'Swift');
model.material('mat1').propertyGroup.create('Voce', 'Voce');
model.material('mat1').propertyGroup('Voce').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('HockettSherby', 'Hockett-Sherby');
model.material('mat1').propertyGroup('HockettSherby').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('ArmstrongFrederick', 'Armstrong-Frederick');
model.material('mat1').propertyGroup('ArmstrongFrederick').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('Norton', 'Norton');
model.material('mat1').propertyGroup.create('Garofalo', 'Garofalo (hyperbolic sine)');
model.material('mat1').propertyGroup.create('ChabocheViscoplasticity', 'Chaboche viscoplasticity');
model.material('mat1').label('Structural steel');
model.material('mat1').set('family', 'custom');
model.material('mat1').set('customspecular', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat1').set('customdiffuse', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat1').set('customambient', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat1').set('noise', true);
model.material('mat1').set('fresnel', 0.9);
model.material('mat1').set('roughness', 0.3);
model.material('mat1').set('metallic', 0);
model.material('mat1').set('pearl', 0);
model.material('mat1').set('diffusewrap', 0);
model.material('mat1').set('clearcoat', 0);
model.material('mat1').set('reflectance', 0);
model.material('mat1').propertyGroup('def').set('lossfactor', '0.02');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('heatcapacity', '475[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]'});
model.material('mat1').propertyGroup('def').set('density', '7850[kg/m^3]');
model.material('mat1').propertyGroup('Enu').func('int1').set('funcname', 'E');
model.material('mat1').propertyGroup('Enu').func('int1').set('table', {'293.15' '200e9'; '793.15' '166.6e9'});
model.material('mat1').propertyGroup('Enu').func('int1').set('extrap', 'linear');
model.material('mat1').propertyGroup('Enu').func('int1').set('fununit', {'Pa'});
model.material('mat1').propertyGroup('Enu').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Enu').func('int2').set('funcname', 'nu');
model.material('mat1').propertyGroup('Enu').func('int2').set('table', {'293.15' '0.30'; '793.15' '0.315'});
model.material('mat1').propertyGroup('Enu').func('int2').set('extrap', 'linear');
model.material('mat1').propertyGroup('Enu').func('int2').set('fununit', {'1'});
model.material('mat1').propertyGroup('Enu').func('int2').set('argunit', {'K'});
model.material('mat1').propertyGroup('Enu').set('E', 'E(T)');
model.material('mat1').propertyGroup('Enu').set('nu', 'nu(T)');
model.material('mat1').propertyGroup('Enu').addInput('temperature');
model.material('mat1').propertyGroup('Murnaghan').set('l', '-3.0e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('m', '-6.2e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('n', '-7.2e11[Pa]');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmags', '350[MPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('Et', '1.045[GPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('Ek', '1.045[GPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmagh', '1.050[GPa]*epe*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').addInput('temperature');
model.material('mat1').propertyGroup('ElastoplasticModel').addInput('effectiveplasticstrain');
model.material('mat1').propertyGroup('Ludwik').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('Ludwik').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('Ludwik').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('Ludwik').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Ludwik').set('k_lud', '560[MPa]*a(T)');
model.material('mat1').propertyGroup('Ludwik').set('n_lud', '0.61');
model.material('mat1').propertyGroup('Ludwik').addInput('temperature');
model.material('mat1').propertyGroup('JohnsonCook').set('k_jcook', '560[MPa]');
model.material('mat1').propertyGroup('JohnsonCook').set('n_jcook', '0.61');
model.material('mat1').propertyGroup('JohnsonCook').set('C_jcook', '0.12');
model.material('mat1').propertyGroup('JohnsonCook').set('epet0_jcook', '1[1/s]');
model.material('mat1').propertyGroup('JohnsonCook').set('m_jcook', '0.6');
model.material('mat1').propertyGroup('Swift').set('e0_swi', '0.021');
model.material('mat1').propertyGroup('Swift').set('n_swi', '0.2');
model.material('mat1').propertyGroup('Voce').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('Voce').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('Voce').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('Voce').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Voce').set('sigma_voc', '249[MPa]*a(T)');
model.material('mat1').propertyGroup('Voce').set('beta_voc', '9.3');
model.material('mat1').propertyGroup('Voce').addInput('temperature');
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('HockettSherby').set('sigma_hoc', '684[MPa]*a(T)');
model.material('mat1').propertyGroup('HockettSherby').set('m_hoc', '3.9');
model.material('mat1').propertyGroup('HockettSherby').set('n_hoc', '0.85');
model.material('mat1').propertyGroup('HockettSherby').addInput('temperature');
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('ArmstrongFrederick').set('Ck', '2.070[GPa]*a(T)');
model.material('mat1').propertyGroup('ArmstrongFrederick').set('gammak', '8.0');
model.material('mat1').propertyGroup('ArmstrongFrederick').addInput('temperature');
model.material('mat1').propertyGroup('Norton').set('A_nor', '1.2e-15[1/s]');
model.material('mat1').propertyGroup('Norton').set('sigRef_nor', '1[MPa]');
model.material('mat1').propertyGroup('Norton').set('n_nor', '4.5');
model.material('mat1').propertyGroup('Garofalo').set('A_gar', '1e-6[1/s]');
model.material('mat1').propertyGroup('Garofalo').set('sigRef_gar', '100[MPa]');
model.material('mat1').propertyGroup('Garofalo').set('n_gar', '4.6');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('A_cha', '1');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('sigRef_cha', '490[MPa]');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('n_cha', '9');

model.physics('solid').feature('dcnt1').set('ContactMethodCtrl', 'AugmentedLagrange');
model.physics('solid').feature('dcnt1').set('tunedFor', 'Speed');
model.physics('solid').create('roll1', 'Roller', 1);
model.physics('solid').feature('roll1').selection.set([2]);
model.physics('solid').create('disp1', 'Displacement1', 1);
model.physics('solid').feature('disp1').selection.set([14]);
model.physics('solid').feature('disp1').setIndex('Direction', 'prescribed', 2);
model.physics('solid').feature('disp1').setIndex('U0', '-1[um]', 2);
model.physics('solid').feature('lemm1').create('dmp1', 'Damping', 2);
model.physics('solid').feature('lemm1').feature('dmp1').set('DampingType', 'IsotropicLossFactor');

model.material('mat1').propertyGroup('def').set('lossfactor', {'0.02'});

model.physics('solid').create('fix1', 'Fixed', 2);
model.physics('solid').feature('fix1').selection.set([1 2 4]);

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([5]);
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 4);
model.mesh('mesh1').feature('map1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis2').selection.set([2 6 13 14]);
model.mesh('mesh1').feature('map1').feature('dis2').set('numelem', 24);
model.mesh('mesh1').feature('size').set('hauto', 1);
model.mesh('mesh1').run;

model.study('std1').setGenPlots(false);
model.study('std1').feature('eig').set('neigsactive', true);
model.study('std1').feature('eig').set('neigs', 1);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'eig');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_solid_Tn_p1').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_Tn_p1').set('scaleval', '100000000');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*1.004987562112089');
model.sol('sol1').feature('v1').set('control', 'eig');
model.sol('sol1').create('e1', 'Eigenvalue');
model.sol('sol1').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol1').feature('e1').set('eigvfunscaleparam', '1.0E-6');
model.sol('sol1').feature('e1').set('storelinpoint', true);
model.sol('sol1').feature('e1').set('control', 'eig');
model.sol('sol1').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.dataset.create('dset1solidrev', 'Revolve2D');
model.result.dataset('dset1solidrev').set('data', 'dset1');
model.result.dataset('dset1solidrev').set('revangle', 225);
model.result.dataset('dset1solidrev').set('startangle', -90);
model.result.dataset('dset1solidrev').set('modenumber', 'solid.mk');
model.result.dataset('dset1solidrev').set('hasspacevars', true);
model.result.dataset('dset1solidrev').set('defaultPlotIDs', {'modeShape3D|solid'});
model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'dset1solidrev');
model.result('pg1').setIndex('looplevel', 1, 0);
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').set('defaultPlotID', 'modeShape3D');
model.result('pg1').label('Mode Shape, 3D (solid)');
model.result('pg1').set('showlegends', false);
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'solid.disp'});
model.result('pg1').feature('surf1').set('threshold', 'manual');
model.result('pg1').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg1').feature('surf1').set('colortable', 'AuroraBorealis');
model.result('pg1').feature('surf1').set('colortabletrans', 'none');
model.result('pg1').feature('surf1').set('colorscalemode', 'linear');
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg1').feature('surf1').feature('def').set('revcoordsys', 'cylindrical');
model.result('pg1').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg1').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg1').feature('surf1').feature('def').set('descractive', true);
model.result('pg1').label('Mode Shape, 3D (solid)');
model.result('pg1').run;
model.result('pg1').label('Mode Shape, Fixed');

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').set('plotgroup', 'Default');
model.study('std2').feature('stat').set('outputmap', {});
model.study('std2').feature('stat').set('ngenAUX', '1');
model.study('std2').feature('stat').set('goalngenAUX', '1');
model.study('std2').feature('stat').set('ngenAUX', '1');
model.study('std2').feature('stat').set('goalngenAUX', '1');
model.study('std2').feature('stat').setSolveFor('/physics/solid', true);
model.study('std2').create('eig', 'Eigenfrequency');
model.study('std2').feature('eig').set('plotgroup', 'Default');
model.study('std2').feature('eig').set('chkeigregion', true);
model.study('std2').feature('eig').set('conrad', '1');
model.study('std2').feature('eig').set('conradynhm', '1');
model.study('std2').feature('eig').set('storefact', false);
model.study('std2').feature('eig').set('outputmap', {});
model.study('std2').feature('eig').set('ngenAUX', '1');
model.study('std2').feature('eig').set('goalngenAUX', '1');
model.study('std2').feature('eig').set('ngenAUX', '1');
model.study('std2').feature('eig').set('goalngenAUX', '1');
model.study('std2').feature('eig').setSolveFor('/physics/solid', true);
model.study('std2').feature('stat').set('useadvanceddisable', true);
model.study('std2').feature('stat').set('disabledphysics', {'solid/fix1'});
model.study('std2').feature('eig').set('neigsactive', true);
model.study('std2').feature('eig').set('neigs', 1);
model.study('std2').feature('eig').set('useadvanceddisable', true);
model.study('std2').feature('eig').set('disabledphysics', {'solid/fix1'});
model.study('std2').setGenPlots(false);

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_solid_Tn_p1').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_Tn_p1').set('scaleval', '100000000');
model.sol('sol2').feature('v1').feature('comp1_u').set('scaleval', '1e-2*1.004987562112089');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('se1', 'Segregated');
model.sol('sol2').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol2').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_u'});
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('subdtech', 'ddog');
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('subtermauto', 'itertol');
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('subiter', 7);
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('subntolfact', 1);
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('linsolver', 'dDef');
model.sol('sol2').feature('s1').feature('se1').feature('ss1').label('Solid Mechanics');
model.sol('sol2').feature('s1').feature('se1').create('ls1', 'LumpedStep');
model.sol('sol2').feature('s1').feature('se1').feature('ls1').set('segvar', {'comp1_solid_Tn_p1'});
model.sol('sol2').feature('s1').feature('se1').set('maxsegiter', 15);
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').create('su1', 'StoreSolution');
model.sol('sol2').create('st2', 'StudyStep');
model.sol('sol2').feature('st2').set('study', 'std2');
model.sol('sol2').feature('st2').set('studystep', 'eig');
model.sol('sol2').create('v2', 'Variables');
model.sol('sol2').feature('v2').feature('comp1_solid_Tn_p1').set('scalemethod', 'manual');
model.sol('sol2').feature('v2').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol2').feature('v2').feature('comp1_solid_Tn_p1').set('scaleval', '100000000');
model.sol('sol2').feature('v2').feature('comp1_u').set('scaleval', '1e-2*1.004987562112089');
model.sol('sol2').feature('v2').set('initmethod', 'sol');
model.sol('sol2').feature('v2').set('initsol', 'sol2');
model.sol('sol2').feature('v2').set('initsoluse', 'sol3');
model.sol('sol2').feature('v2').set('notsolmethod', 'sol');
model.sol('sol2').feature('v2').set('notsol', 'sol2');
model.sol('sol2').feature('v2').set('control', 'eig');
model.sol('sol2').create('e1', 'Eigenvalue');
model.sol('sol2').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol2').feature('e1').set('eigvfunscaleparam', '1.0E-6');
model.sol('sol2').feature('e1').set('storelinpoint', true);
model.sol('sol2').feature('e1').set('control', 'eig');
model.sol('sol2').feature('e1').set('linpmethod', 'sol');
model.sol('sol2').feature('e1').set('linpsol', 'sol2');
model.sol('sol2').feature('e1').set('linpsoluse', 'sol3');
model.sol('sol2').feature('e1').set('control', 'eig');
model.sol('sol2').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('v2').set('notsolnum', 'auto');
model.sol('sol2').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result.dataset.create('dset2solidrev', 'Revolve2D');
model.result.dataset('dset2solidrev').set('data', 'dset2');
model.result.dataset('dset2solidrev').set('revangle', 225);
model.result.dataset('dset2solidrev').set('startangle', -90);
model.result.dataset('dset2solidrev').set('modenumber', 'solid.mk');
model.result.dataset('dset2solidrev').set('hasspacevars', true);
model.result.dataset('dset2solidrev').set('defaultPlotIDs', {'modeShape3D|solid'});
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'dset2solidrev');
model.result('pg2').setIndex('looplevel', 1, 0);
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('defaultPlotID', 'modeShape3D');
model.result('pg2').label('Mode Shape, 3D (solid)');
model.result('pg2').set('showlegends', false);
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'solid.disp'});
model.result('pg2').feature('surf1').set('threshold', 'manual');
model.result('pg2').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg2').feature('surf1').set('colortable', 'AuroraBorealis');
model.result('pg2').feature('surf1').set('colortabletrans', 'none');
model.result('pg2').feature('surf1').set('colorscalemode', 'linear');
model.result('pg2').feature('surf1').create('def', 'Deform');
model.result('pg2').feature('surf1').feature('def').set('revcoordsys', 'cylindrical');
model.result('pg2').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg2').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg2').feature('surf1').feature('def').set('descractive', true);
model.result('pg2').label('Mode Shape, 3D (solid)');
model.result('pg2').run;
model.result('pg2').label('Mode Shape, Prestressed');

model.physics('solid').create('bndl1', 'BoundaryLoad', 1);
model.physics('solid').feature('bndl1').selection.set([11]);
model.physics('solid').feature('bndl1').set('FperArea', {'0' '0' '-F'});
model.physics('solid').feature('bndl1').set('harmonicPerturbation', true);

model.param.set('freq_ref', '24.3[Hz]');
model.param.descr('freq_ref', 'Reference frequency');

model.study.create('std3');
model.study('std3').create('stat', 'Stationary');
model.study('std3').feature('stat').set('plotgroup', 'Default');
model.study('std3').feature('stat').set('outputmap', {});
model.study('std3').feature('stat').set('ngenAUX', '1');
model.study('std3').feature('stat').set('goalngenAUX', '1');
model.study('std3').feature('stat').set('ngenAUX', '1');
model.study('std3').feature('stat').set('goalngenAUX', '1');
model.study('std3').feature('stat').setSolveFor('/physics/solid', true);
model.study('std3').create('frlin', 'Frequencylinearized');
model.study('std3').feature('frlin').set('plotgroup', 'Default');
model.study('std3').feature('frlin').set('outputmap', {});
model.study('std3').feature('frlin').set('ngenAUX', '1');
model.study('std3').feature('frlin').set('goalngenAUX', '1');
model.study('std3').feature('frlin').set('ngenAUX', '1');
model.study('std3').feature('frlin').set('goalngenAUX', '1');
model.study('std3').feature('frlin').setSolveFor('/physics/solid', true);
model.study('std3').feature('stat').set('useadvanceddisable', true);
model.study('std3').feature('stat').set('disabledphysics', {'solid/fix1'});
model.study('std3').feature('frlin').set('plist', 'freq_ref*range(0.95,5e-3,1.05)');
model.study('std3').feature('frlin').set('useadvanceddisable', true);
model.study('std3').feature('frlin').set('disabledphysics', {'solid/fix1'});
model.study('std3').setGenPlots(false);

model.sol.create('sol4');
model.sol('sol4').study('std3');
model.sol('sol4').create('st1', 'StudyStep');
model.sol('sol4').feature('st1').set('study', 'std3');
model.sol('sol4').feature('st1').set('studystep', 'stat');
model.sol('sol4').create('v1', 'Variables');
model.sol('sol4').feature('v1').feature('comp1_solid_Tn_p1').set('scalemethod', 'manual');
model.sol('sol4').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol4').feature('v1').feature('comp1_solid_Tn_p1').set('scaleval', '100000000');
model.sol('sol4').feature('v1').feature('comp1_u').set('scaleval', '1e-2*1.004987562112089');
model.sol('sol4').feature('v1').set('control', 'stat');
model.sol('sol4').create('s1', 'Stationary');
model.sol('sol4').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol4').feature('s1').create('se1', 'Segregated');
model.sol('sol4').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol4').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol4').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_u'});
model.sol('sol4').feature('s1').feature('se1').feature('ss1').set('subdtech', 'ddog');
model.sol('sol4').feature('s1').feature('se1').feature('ss1').set('subtermauto', 'itertol');
model.sol('sol4').feature('s1').feature('se1').feature('ss1').set('subiter', 7);
model.sol('sol4').feature('s1').feature('se1').feature('ss1').set('subntolfact', 1);
model.sol('sol4').feature('s1').feature('se1').feature('ss1').set('linsolver', 'dDef');
model.sol('sol4').feature('s1').feature('se1').feature('ss1').label('Solid Mechanics');
model.sol('sol4').feature('s1').feature('se1').create('ls1', 'LumpedStep');
model.sol('sol4').feature('s1').feature('se1').feature('ls1').set('segvar', {'comp1_solid_Tn_p1'});
model.sol('sol4').feature('s1').feature('se1').set('maxsegiter', 15);
model.sol('sol4').feature('s1').feature.remove('fcDef');
model.sol('sol4').create('su1', 'StoreSolution');
model.sol('sol4').create('st2', 'StudyStep');
model.sol('sol4').feature('st2').set('study', 'std3');
model.sol('sol4').feature('st2').set('studystep', 'frlin');
model.sol('sol4').create('v2', 'Variables');
model.sol('sol4').feature('v2').feature('comp1_solid_Tn_p1').set('scalemethod', 'manual');
model.sol('sol4').feature('v2').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol4').feature('v2').feature('comp1_solid_Tn_p1').set('scaleval', '100000000');
model.sol('sol4').feature('v2').feature('comp1_u').set('scaleval', '1e-2*1.004987562112089');
model.sol('sol4').feature('v2').set('initmethod', 'sol');
model.sol('sol4').feature('v2').set('initsol', 'sol4');
model.sol('sol4').feature('v2').set('initsoluse', 'sol5');
model.sol('sol4').feature('v2').set('notsolmethod', 'sol');
model.sol('sol4').feature('v2').set('notsol', 'sol4');
model.sol('sol4').feature('v2').set('control', 'frlin');
model.sol('sol4').create('s2', 'Stationary');
model.sol('sol4').feature('s2').create('p1', 'Parametric');
model.sol('sol4').feature('s2').feature.remove('pDef');
model.sol('sol4').feature('s2').feature('p1').set('pname', {'freq'});
model.sol('sol4').feature('s2').feature('p1').set('plistarr', {'freq_ref*range(0.95,5e-3,1.05)'});
model.sol('sol4').feature('s2').feature('p1').set('punit', {'Hz'});
model.sol('sol4').feature('s2').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol4').feature('s2').feature('p1').set('preusesol', 'no');
model.sol('sol4').feature('s2').feature('p1').set('pdistrib', 'off');
model.sol('sol4').feature('s2').feature('p1').set('plot', 'off');
model.sol('sol4').feature('s2').feature('p1').set('plotgroup', 'Default');
model.sol('sol4').feature('s2').feature('p1').set('probesel', 'all');
model.sol('sol4').feature('s2').feature('p1').set('probes', {});
model.sol('sol4').feature('s2').feature('p1').set('control', 'frlin');
model.sol('sol4').feature('s2').set('nonlin', 'linper');
model.sol('sol4').feature('s2').set('storelinpoint', true);
model.sol('sol4').feature('s2').set('linpsolnum', 'all');
model.sol('sol4').feature('s2').set('control', 'frlin');
model.sol('sol4').feature('s2').set('linpmethod', 'sol');
model.sol('sol4').feature('s2').set('linpsol', 'sol4');
model.sol('sol4').feature('s2').set('linpsoluse', 'sol5');
model.sol('sol4').feature('s2').set('control', 'frlin');
model.sol('sol4').feature('s2').feature('aDef').set('cachepattern', true);
model.sol('sol4').feature('s2').create('fc1', 'FullyCoupled');
model.sol('sol4').feature('s2').feature('fc1').set('linsolver', 'dDef');
model.sol('sol4').feature('s2').feature.remove('fcDef');
model.sol('sol4').feature('v2').set('notsolnum', 'auto');
model.sol('sol4').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol4').attach('std3');
model.sol('sol4').runAll;

model.result.dataset.create('dset4solidrev', 'Revolve2D');
model.result.dataset('dset4solidrev').set('data', 'dset4');
model.result.dataset('dset4solidrev').set('revangle', 225);
model.result.dataset('dset4solidrev').set('startangle', -90);
model.result.dataset('dset4solidrev').set('modenumber', 'solid.mk');
model.result.dataset('dset4solidrev').set('hasspacevars', true);
model.result.dataset('dset4solidrev').set('defaultPlotIDs', {'stress3D|solid' 'boundaryLoads|solid'});
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').set('data', 'dset4solidrev');
model.result('pg3').setIndex('looplevel', 21, 0);
model.result('pg3').set('defaultPlotID', 'stress3D');
model.result('pg3').label('Stress, 3D (solid)');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', {'solid.misesGp_peak'});
model.result('pg3').feature('surf1').set('threshold', 'manual');
model.result('pg3').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg3').feature('surf1').set('differential', true);
model.result('pg3').feature('surf1').set('colortable', 'Prism');
model.result('pg3').feature('surf1').set('colortabletrans', 'none');
model.result('pg3').feature('surf1').set('colorscalemode', 'linear');
model.result('pg3').feature('surf1').create('def', 'Deform');
model.result('pg3').feature('surf1').feature('def').set('differential', true);
model.result('pg3').feature('surf1').feature('def').set('revcoordsys', 'cylindrical');
model.result('pg3').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg3').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg3').feature('surf1').feature('def').set('descractive', true);
model.result('pg3').label('Stress, 3D (solid)');
model.result('pg3').run;
model.result('pg3').label('Displacement, Frequency Response');
model.result('pg3').setIndex('looplevel', 11, 0);
model.result('pg3').run;
model.result('pg3').feature('surf1').set('expr', 'solid.disp');
model.result('pg3').feature('surf1').set('colortable', 'AuroraBorealis');
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').set('showlegends', false);
model.result('pg3').run;
model.result('pg3').set('showlegends', true);
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').set('data', 'dset3');
model.result('pg4').set('defaultPlotID', 'contactForces');
model.result('pg4').label('Contact Forces (solid)');
model.result('pg4').set('showlegends', true);
model.result('pg4').set('titletype', 'label');
model.result('pg4').set('frametype', 'spatial');
model.result('pg4').set('showlegendsunit', true);
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', {'1'});
model.result('pg4').feature('surf1').label('Gray Surfaces');
model.result('pg4').feature('surf1').set('coloring', 'uniform');
model.result('pg4').feature('surf1').set('color', 'gray');
model.result('pg4').feature('surf1').create('def', 'Deform');
model.result('pg4').feature('surf1').feature('def').set('expr', {'u' 'w'});
model.result('pg4').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg4').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg4').feature('surf1').feature('def').set('scale', 1);
model.result('pg4').feature('surf1').create('sel1', 'Selection');
model.result('pg4').feature('surf1').feature('sel1').selection.geom('geom1', 2);
model.result('pg4').feature('surf1').feature('sel1').selection.set([1 2 3 4]);
model.result('pg4').create('arwl1', 'ArrowLine');
model.result('pg4').feature('arwl1').set('arrowbase', 'head');
model.result('pg4').feature('arwl1').set('expr', {'solid.dcnt1.Tnr' 'solid.dcnt1.Tnz'});
model.result('pg4').feature('arwl1').set('placement', 'gausspoints');
model.result('pg4').feature('arwl1').set('gporder', 4);
model.result('pg4').feature('arwl1').label('Contact 1, Pressure');
model.result('pg4').feature('arwl1').set('inheritplot', 'none');
model.result('pg4').feature('arwl1').set('color', 'green');
model.result('pg4').feature('arwl1').create('col', 'Color');
model.result('pg4').feature('arwl1').feature('col').set('colortable', 'Rainbow');
model.result('pg4').feature('arwl1').feature('col').set('colortabletrans', 'none');
model.result('pg4').feature('arwl1').feature('col').set('colorscalemode', 'linear');
model.result('pg4').feature('arwl1').feature('col').set('colordata', 'arrowlength');
model.result('pg4').feature('arwl1').feature('col').set('coloring', 'gradient');
model.result('pg4').feature('arwl1').feature('col').set('topcolor', 'green');
model.result('pg4').feature('arwl1').feature('col').set('bottomcolor', 'custom');
model.result('pg4').feature('arwl1').feature('col').set('custombottomcolor', [0.509804 0.54902 0.509804]);
model.result('pg4').feature('arwl1').create('def', 'Deform');
model.result('pg4').feature('arwl1').feature('def').set('expr', {'u' 'w'});
model.result('pg4').feature('arwl1').feature('def').set('descr', 'Displacement field');
model.result('pg4').feature('arwl1').feature('def').set('scaleactive', true);
model.result('pg4').feature('arwl1').feature('def').set('scale', 1);
model.result('pg4').feature.move('surf1', 1);
model.result('pg4').label('Contact Forces (solid)');
model.result('pg4').run;
model.result('pg4').run;
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').label('Displacement Amplitude');
model.result('pg5').set('data', 'dset4');
model.result('pg5').set('xlabelactive', true);
model.result('pg5').set('xlabel', 'Frequency (Hz)');
model.result('pg5').set('ylabelactive', true);
model.result('pg5').set('ylabel', 'Displacement amplitude (mm)');
model.result('pg5').create('ptgr1', 'PointGraph');
model.result('pg5').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg5').feature('ptgr1').set('linewidth', 'preference');
model.result('pg5').feature('ptgr1').selection.set([10]);
model.result('pg5').feature('ptgr1').set('expr', 'solid.uAmpZ');
model.result('pg5').feature('ptgr1').set('descr', 'Displacement amplitude, Z-component');
model.result('pg5').feature('ptgr1').set('unit', 'mm');
model.result('pg5').feature('ptgr1').create('gmrk1', 'GraphMarker');
model.result('pg5').feature('ptgr1').feature('gmrk1').set('linewidth', 'preference');
model.result('pg5').run;
model.result('pg5').feature('ptgr1').feature('gmrk1').set('display', 'max');
model.result('pg5').feature('ptgr1').feature('gmrk1').set('inclxcoord', true);
model.result('pg5').feature('ptgr1').feature('gmrk1').set('includeunit', true);
model.result('pg5').feature('ptgr1').feature('gmrk1').set('precision', 3);
model.result('pg5').run;

model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'F', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'N/m^2', 0);
model.study('std1').feature('param').setIndex('pname', 'F', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'N/m^2', 0);
model.study('std1').feature('param').setIndex('pname', 'ri', 0);
model.study('std1').feature('param').setIndex('plistarr', 'range(0.2,0.2,0.8)', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);

model.sol('sol1').study('std1');
model.sol('sol1').feature.remove('e1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'eig');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_solid_Tn_p1').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_Tn_p1').set('scaleval', '100000000');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*1.004987562112089');
model.sol('sol1').feature('v1').set('control', 'eig');
model.sol('sol1').create('e1', 'Eigenvalue');
model.sol('sol1').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol1').feature('e1').set('eigvfunscaleparam', '1.0E-6');
model.sol('sol1').feature('e1').set('storelinpoint', true);
model.sol('sol1').feature('e1').set('control', 'eig');
model.sol('sol1').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol1').attach('std1');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'ri'});
model.batch('p1').set('plistarr', {'range(0.2,0.2,0.8)'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol.create('sol6');
model.sol('sol6').study('std1');
model.sol('sol6').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol6');
model.batch('p1').run('compute');

model.result('pg1').run;
model.result.evaluationGroup.create('eg1', 'EvaluationGroup');
model.result.evaluationGroup('eg1').label('Eigenfrequencies, Fixed');
model.result.evaluationGroup('eg1').set('data', 'dset6');
model.result.evaluationGroup('eg1').set('includeparameters', false);
model.result.evaluationGroup('eg1').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'ri', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'm', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Plate holder radius', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'real(freq)', 1);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'Hz', 1);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Frequency', 1);
model.result.evaluationGroup('eg1').run;

model.study('std2').create('param', 'Parametric');
model.study('std2').feature('param').setIndex('pname', 'F', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', 'N/m^2', 0);
model.study('std2').feature('param').setIndex('pname', 'F', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', 'N/m^2', 0);
model.study('std2').feature('param').setIndex('pname', 'ri', 0);
model.study('std2').feature('param').setIndex('plistarr', 'range(0.2,0.2,0.8)', 0);
model.study('std2').feature('param').setIndex('punit', 'm', 0);

model.sol('sol2').study('std2');

model.study('std2').feature('eig').set('notsolnum', 'auto');
model.study('std2').feature('eig').set('notsolvertype', 'solnum');
model.study('std2').feature('eig').set('notsolnumhide', 'off');
model.study('std2').feature('eig').set('notstudyhide', 'off');
model.study('std2').feature('eig').set('notsolhide', 'off');

model.sol('sol3').copySolution('sol11');

model.study('std2').feature('eig').set('notlistsolnum', 1);
model.study('std2').feature('eig').set('notsolnum', 'auto');
model.study('std2').feature('eig').set('listsolnum', 1);
model.study('std2').feature('eig').set('solnum', 'auto');
model.study('std2').feature('eig').set('linplistsolnum', {'1'});
model.study('std2').feature('eig').set('linpsolnum', 'auto');
model.study('std2').feature('eig').set('notlistsolnum', 1);
model.study('std2').feature('eig').set('notsolnum', 'auto');
model.study('std2').feature('eig').set('listsolnum', 1);
model.study('std2').feature('eig').set('solnum', 'auto');
model.study('std2').feature('eig').set('linplistsolnum', {'1'});
model.study('std2').feature('eig').set('linpsolnum', 'auto');

model.result.dataset('dset3').set('solution', 'none');

model.sol('sol2').feature.remove('e1');
model.sol('sol2').feature.remove('v2');
model.sol('sol2').feature.remove('st2');
model.sol('sol2').feature.remove('su1');
model.sol('sol2').feature.remove('s1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('st1');
model.sol('sol11').copySolution('sol3');
model.sol.remove('sol11');
model.sol('sol3').label('Solution Store 1');

model.result.dataset.remove('dset8');

model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_solid_Tn_p1').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_Tn_p1').set('scaleval', '100000000');
model.sol('sol2').feature('v1').feature('comp1_u').set('scaleval', '1e-2*1.004987562112089');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('se1', 'Segregated');
model.sol('sol2').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol2').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_u'});
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('subdtech', 'ddog');
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('subtermauto', 'itertol');
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('subiter', 7);
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('subntolfact', 1);
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('linsolver', 'dDef');
model.sol('sol2').feature('s1').feature('se1').feature('ss1').label('Solid Mechanics');
model.sol('sol2').feature('s1').feature('se1').create('ls1', 'LumpedStep');
model.sol('sol2').feature('s1').feature('se1').feature('ls1').set('segvar', {'comp1_solid_Tn_p1'});
model.sol('sol2').feature('s1').feature('se1').set('maxsegiter', 15);
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').create('su1', 'StoreSolution');
model.sol('sol2').feature('su1').set('sol', 'sol3');
model.sol('sol2').feature('su1').label('Solution Store 1');
model.sol('sol2').create('st2', 'StudyStep');
model.sol('sol2').feature('st2').set('study', 'std2');
model.sol('sol2').feature('st2').set('studystep', 'eig');

model.study('std2').feature('eig').set('initsoluse', 'sol3');
model.study('std2').feature('eig').set('linpsoluse', 'sol3');

model.sol('sol2').create('v2', 'Variables');
model.sol('sol2').feature('v2').feature('comp1_solid_Tn_p1').set('scalemethod', 'manual');
model.sol('sol2').feature('v2').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol2').feature('v2').feature('comp1_solid_Tn_p1').set('scaleval', '100000000');
model.sol('sol2').feature('v2').feature('comp1_u').set('scaleval', '1e-2*1.004987562112089');
model.sol('sol2').feature('v2').set('initmethod', 'sol');
model.sol('sol2').feature('v2').set('initsol', 'sol2');
model.sol('sol2').feature('v2').set('initsoluse', 'sol3');
model.sol('sol2').feature('v2').set('notsolmethod', 'sol');
model.sol('sol2').feature('v2').set('notsol', 'sol2');
model.sol('sol2').feature('v2').set('control', 'eig');
model.sol('sol2').create('e1', 'Eigenvalue');
model.sol('sol2').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol2').feature('e1').set('eigvfunscaleparam', '1.0E-6');
model.sol('sol2').feature('e1').set('storelinpoint', true);
model.sol('sol2').feature('e1').set('control', 'eig');
model.sol('sol2').feature('e1').set('linpmethod', 'sol');
model.sol('sol2').feature('e1').set('linpsol', 'sol2');
model.sol('sol2').feature('e1').set('linpsoluse', 'sol3');
model.sol('sol2').feature('e1').set('control', 'eig');
model.sol('sol2').feature('e1').feature('aDef').set('cachepattern', true);

model.result.dataset('dset3').set('solution', 'sol3');

model.sol('sol2').feature('v2').set('notsolnum', 'auto');
model.sol('sol2').feature('v2').set('notsolvertype', 'solnum');

model.study('std2').feature('eig').set('notsolnum', 'auto');
model.study('std2').feature('eig').set('notsolvertype', 'solnum');
model.study('std2').feature('eig').set('notsolnumhide', 'off');
model.study('std2').feature('eig').set('notstudyhide', 'off');
model.study('std2').feature('eig').set('notsolhide', 'off');

model.sol('sol2').attach('std2');

model.batch.create('p2', 'Parametric');
model.batch('p2').study('std2');
model.batch('p2').create('so1', 'Solutionseq');
model.batch('p2').feature('so1').set('seq', 'sol2');
model.batch('p2').feature('so1').set('store', 'on');
model.batch('p2').feature('so1').set('clear', 'on');
model.batch('p2').feature('so1').set('psol', 'none');
model.batch('p2').set('pname', {'ri'});
model.batch('p2').set('plistarr', {'range(0.2,0.2,0.8)'});
model.batch('p2').set('sweeptype', 'sparse');
model.batch('p2').set('probesel', 'all');
model.batch('p2').set('probes', {});
model.batch('p2').set('plot', 'off');
model.batch('p2').set('err', 'on');
model.batch('p2').attach('std2');
model.batch('p2').set('control', 'param');

model.sol.create('sol11');
model.sol('sol11').study('std2');
model.sol('sol11').label('Parametric Solutions 2');

model.batch('p2').feature('so1').set('psol', 'sol11');
model.batch('p2').run('compute');

model.result('pg2').run;
model.result.evaluationGroup.duplicate('eg2', 'eg1');
model.result.evaluationGroup('eg2').label('Eigenfrequencies, Prestressed');
model.result.evaluationGroup('eg2').set('data', 'dset7');
model.result.evaluationGroup('eg2').run;

model.func.create('int1', 'Interpolation');
model.func('int1').set('source', 'resultTable');
model.func('int1').set('resultTable', 'evalGroup:eg2');
model.func('int1').setIndex('funcs', 'freq_ref', 0, 0);
model.func('int1').setIndex('funcs', 1, 0, 1);
model.func('int1').set('interp', 'neighbor');
model.func('int1').setIndex('fununit', 'Hz', 0);
model.func('int1').setIndex('argunit', 'm', 0);

model.param.set('freq_ref', '24.3[Hz]', 'Reference frequency');
model.param.set('freq_ref', 'freq_ref(ri)');
model.param.descr('freq_ref', 'Reference frequency');

model.study('std3').create('param', 'Parametric');
model.study('std3').feature('param').setIndex('pname', 'F', 0);
model.study('std3').feature('param').setIndex('plistarr', '', 0);
model.study('std3').feature('param').setIndex('punit', 'N/m^2', 0);
model.study('std3').feature('param').setIndex('pname', 'F', 0);
model.study('std3').feature('param').setIndex('plistarr', '', 0);
model.study('std3').feature('param').setIndex('punit', 'N/m^2', 0);
model.study('std3').feature('param').setIndex('pname', 'ri', 0);
model.study('std3').feature('param').setIndex('plistarr', 'range(0.2,0.2,0.8)', 0);
model.study('std3').feature('param').setIndex('punit', 'm', 0);

model.batch.create('p3', 'Parametric');
model.batch('p3').study('std3');
model.batch('p3').create('so1', 'Solutionseq');
model.batch('p3').feature('so1').set('seq', 'sol4');
model.batch('p3').feature('so1').set('store', 'on');
model.batch('p3').feature('so1').set('clear', 'on');
model.batch('p3').feature('so1').set('psol', 'none');
model.batch('p3').set('pname', {'ri'});
model.batch('p3').set('plistarr', {'range(0.2,0.2,0.8)'});
model.batch('p3').set('sweeptype', 'sparse');
model.batch('p3').set('probesel', 'all');
model.batch('p3').set('probes', {});
model.batch('p3').set('plot', 'off');
model.batch('p3').set('err', 'on');
model.batch('p3').attach('std3');
model.batch('p3').set('control', 'param');

model.sol.create('sol16');
model.sol('sol16').study('std3');
model.sol('sol16').label('Parametric Solutions 3');

model.batch('p3').feature('so1').set('psol', 'sol16');
model.batch('p3').run('compute');

model.result('pg3').run;
model.result('pg5').run;
model.result('pg5').set('data', 'dset8');
model.result('pg5').run;
model.result('pg5').feature('ptgr1').set('legend', true);
model.result('pg5').feature('ptgr1').set('autopoint', false);
model.result('pg5').run;
model.result.evaluationGroup.create('eg3', 'EvaluationGroup');
model.result.evaluationGroup('eg3').label('Eigenfrequencies, Frequency Response');
model.result.evaluationGroup('eg3').set('data', 'dset8');
model.result.evaluationGroup('eg3').set('includeparameters', false);
model.result.evaluationGroup('eg3').set('concatenation', 'vertical');
model.result.evaluationGroup('eg3').create('pev1', 'EvalPoint');
model.result.evaluationGroup('eg3').feature('pev1').set('data', 'dset8');
model.result.evaluationGroup('eg3').feature('pev1').setIndex('looplevelinput', 'manual', 1);
model.result.evaluationGroup('eg3').feature('pev1').setIndex('looplevel', [1], 1);
model.result.evaluationGroup('eg3').feature('pev1').selection.set([10]);
model.result.evaluationGroup('eg3').feature('pev1').setIndex('expr', 'solid.uAmpZ', 0);
model.result.evaluationGroup('eg3').feature('pev1').setIndex('unit', 'mm', 0);
model.result.evaluationGroup('eg3').feature('pev1').set('dataseries', 'maximum');
model.result.evaluationGroup('eg3').feature('pev1').set('includeparam', true);
model.result.evaluationGroup('eg3').run;
model.result.evaluationGroup('eg3').feature.duplicate('pev2', 'pev1');
model.result.evaluationGroup('eg3').feature('pev2').setIndex('looplevel', [2], 1);
model.result.evaluationGroup('eg3').feature.duplicate('pev3', 'pev2');
model.result.evaluationGroup('eg3').feature('pev3').setIndex('looplevel', [3], 1);
model.result.evaluationGroup('eg3').feature.duplicate('pev4', 'pev3');
model.result.evaluationGroup('eg3').feature('pev4').setIndex('looplevel', [4], 1);
model.result.evaluationGroup('eg3').run;
model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').run;
model.result('pg6').label('Natural Frequencies');
model.result('pg6').set('data', 'none');
model.result('pg6').set('legendpos', 'upperleft');
model.result('pg6').create('tblp1', 'Table');
model.result('pg6').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg6').feature('tblp1').set('linewidth', 'preference');
model.result('pg6').feature('tblp1').set('source', 'evaluationgroup');
model.result('pg6').feature('tblp1').label('Eigenfrequencies, Fixed');
model.result('pg6').feature('tblp1').set('legend', true);
model.result('pg6').feature('tblp1').set('legendmethod', 'manual');
model.result('pg6').feature('tblp1').setIndex('legends', 'Fixed', 0);
model.result('pg6').feature.duplicate('tblp2', 'tblp1');
model.result('pg6').run;
model.result('pg6').feature('tblp2').label('Eigenfrequencies, Prestressed');
model.result('pg6').feature('tblp2').set('evaluationgroup', 'eg2');
model.result('pg6').feature('tblp2').setIndex('legends', 'Prestressed, eigenfrequency', 0);
model.result('pg6').feature.duplicate('tblp3', 'tblp2');
model.result('pg6').run;
model.result('pg6').feature('tblp3').label('Eigenfrequencies, Frequency Response');
model.result('pg6').feature('tblp3').set('xaxisdata', 1);
model.result('pg6').feature('tblp3').set('plotcolumninput', 'manual');
model.result('pg6').feature('tblp3').set('plotcolumns', [2]);
model.result('pg6').feature('tblp3').set('linestyle', 'none');
model.result('pg6').feature('tblp3').set('linemarker', 'point');
model.result('pg6').feature('tblp3').setIndex('legends', 'Prestressed, frequency response', 0);
model.result('pg6').run;
model.result.dataset('dset1solidrev').set('data', 'dset6');
model.result.dataset('dset2solidrev').set('data', 'dset7');
model.result.dataset('dset4solidrev').set('data', 'dset8');
model.result('pg1').run;
model.result('pg1').set('looplevel', [1 1]);
model.result('pg1').run;
model.result('pg2').run;
model.result('pg2').set('looplevel', [1 1]);
model.result('pg2').run;
model.result('pg3').run;
model.result('pg3').set('looplevel', [11 1]);
model.result('pg3').run;

model.title('Vibration of a Squeezed Plate');

model.description('This model illustrates how to perform eigenfrequency and frequency response analysis in a contact problem. A thin circular plate is squeezed between two smaller circular plates. The amplitude peak in a frequency response analysis is compared with the natural frequency computed from the contact state. It is also compared with the natural frequency of an ideal case, that is an annular plate clamped at the inner radius.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;
model.sol('sol8').clearSolutionData;
model.sol('sol9').clearSolutionData;
model.sol('sol10').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol11').clearSolutionData;
model.sol('sol12').clearSolutionData;
model.sol('sol13').clearSolutionData;
model.sol('sol14').clearSolutionData;
model.sol('sol15').clearSolutionData;
model.sol('sol16').clearSolutionData;
model.sol('sol17').clearSolutionData;
model.sol('sol18').clearSolutionData;
model.sol('sol19').clearSolutionData;
model.sol('sol20').clearSolutionData;

model.label('squeezed_plate_response.mph');

model.modelNode.label('Components');

out = model;
