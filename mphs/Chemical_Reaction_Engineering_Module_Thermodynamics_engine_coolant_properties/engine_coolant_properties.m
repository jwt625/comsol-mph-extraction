function out = model
%
% engine_coolant_properties.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Chemical_Reaction_Engineering_Module/Thermodynamics');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('spf', 'TurbulentFlowkeps', 'geom1');
model.physics('spf').model('comp1');
model.physics('spf').prop('AdvancedSettingProperty').set('UsePseudoTime', '1');
model.physics('spf').prop('PhysicalModelProperty').set('Compressibility', 'WeaklyCompressible');
model.physics.create('ht', 'HeatTransferInFluids', 'geom1');
model.physics('ht').model('comp1');
model.physics('ht').prop('ShapeProperty').set('order_temperature', '1');

model.multiphysics.create('nitf1', 'NonIsothermalFlow', 'geom1', 2);
model.multiphysics('nitf1').set('Fluid_physics', 'spf');
model.multiphysics('nitf1').set('Heat_physics', 'ht');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/spf', true);
model.study('std1').feature('stat').setSolveFor('/physics/ht', true);
model.study('std1').feature('stat').setSolveFor('/multiphysics/nitf1', true);

model.thermodynamics.feature.create('pp1', 'BuiltinPropertyPackage');
model.thermodynamics.feature('pp1').set('compoundlist', {'ethylene glycol' '107-21-1' 'C2H6O2' 'COMSOL'; 'water' '7732-18-5' 'H2O' 'COMSOL'});
model.thermodynamics.feature('pp1').set('phase_list', {'Vapor' 'Vapor'; 'Liquid' 'Liquid'});
model.thermodynamics.feature('pp1').label('Vapor-Liquid System 1');
model.thermodynamics.feature('pp1').set('manager_id', 'COMSOL');
model.thermodynamics.feature('pp1').set('manager_version', '1.0');
model.thermodynamics.feature('pp1').set('packagename', 'pp1');
model.thermodynamics.feature('pp1').set('package_desc', 'Built-in property package');
model.thermodynamics.feature('pp1').set('managerindex', '0');
model.thermodynamics.feature('pp1').set('packageid', 'COMSOL1');
model.thermodynamics.feature('pp1').set('ThermodynamicModel', 'UNIFAC');
model.thermodynamics.feature('pp1').set('EOS', 'IdealGas');
model.thermodynamics.feature('pp1').set('LiquidPhaseModel', 'UNIFAC');
model.thermodynamics.feature('pp1').set('LiquidCard', 'LiquidPhaseModel');
model.thermodynamics.feature('pp1').set('EOSModel', 'IdealGas');
model.thermodynamics.feature('pp1').set('GasPhaseModel', 'IdealGas');
model.thermodynamics.feature('pp1').set('GasEOSCard', 'GasPhaseModel');
model.thermodynamics.feature('pp1').set('EOS', 'IdealGas');
model.thermodynamics.feature('pp1').set('VapDiffusivity', 'Automatic');
model.thermodynamics.feature('pp1').set('VLSurfaceTension', 'Ideal');
model.thermodynamics.feature('pp1').set('VapThermalConductivity', 'KineticTheory');
model.thermodynamics.feature('pp1').set('VapViscosity', 'Brokaw');
model.thermodynamics.feature('pp1').set('LiqDiffusivity', 'WesselinghKrishna');
model.thermodynamics.feature('pp1').set('LiqDiffusivityAtInfDilution', 'Automatic');
model.thermodynamics.feature('pp1').set('LLSurfaceTension', 'None');
model.thermodynamics.feature('pp1').set('LiqThermalConductivity', 'Ideal');
model.thermodynamics.feature('pp1').set('LiqViscosity', 'LogarithmicMassMixing');
model.thermodynamics.feature('pp1').set('LiqVolume', 'IdealMixing');
model.thermodynamics.feature('pp1').set('PoyntingFactor', 'off');
model.thermodynamics.feature('pp1').set('property', {'Automatic' 'Ideal' 'KineticTheory' 'Brokaw' 'WesselinghKrishna' 'Automatic' 'None' 'Ideal' 'LogarithmicMassMixing' 'IdealMixing'  ...
'off'});
model.thermodynamics.feature('pp1').storePersistenceData;
model.thermodynamics.feature('pp1').set('WarningState', false);
model.thermodynamics.feature('pp1').set('Warning', {''});
model.thermodynamics.feature('pp1').feature.create('singlephase1', 'OnePhaseProperty');
model.thermodynamics.feature('pp1').feature('singlephase1').label('Density 1');
model.thermodynamics.feature('pp1').feature('singlephase1').set('funcname', 'Density_ethylene_glycol_water_Liquid11');
model.thermodynamics.feature('pp1').feature('singlephase1').set('property', 'Density');
model.thermodynamics.feature('pp1').feature('singlephase1').set('propertydescr', 'Density');
model.thermodynamics.feature('pp1').feature('singlephase1').set('unit', 'kg/m^3');
model.thermodynamics.feature('pp1').feature('singlephase1').set('prop_basis', 'mass');
model.thermodynamics.feature('pp1').feature('singlephase1').set('compounds', {'ethylene glycol' 'water'});
model.thermodynamics.feature('pp1').feature('singlephase1').set('args', {'temperature' 'K' 'Temperature';  ...
'pressure' 'Pa' 'Pressure';  ...
'massfraction_ethylene_glycol' '1' 'Mass fraction ethylene glycol';  ...
'massfraction_water' '1' 'Mass fraction water'});
model.thermodynamics.feature('pp1').feature('singlephase1').set('plotargs', {'temperature' '298.15' '373.15';  ...
'pressure' '101325' '101325';  ...
'massfraction_ethylene_glycol' '0.5' '0.5';  ...
'massfraction_water' '0.5' '0.5'});
model.thermodynamics.feature('pp1').feature('singlephase1').set('derivatives', {'Density_ethylene_glycol_water_Liquid11_Dtemperature' 'Density_ethylene_glycol_water_Liquid11_Dpressure' 'Density_ethylene_glycol_water_Liquid11_Dmassfraction_ethylene_glycol' 'Density_ethylene_glycol_water_Liquid11_Dmassfraction_water'});
model.thermodynamics.feature('pp1').feature('singlephase1').set('SecondDerivatives', {'Density_ethylene_glycol_water_Liquid11_Dtemperature_Dtemperature' 'Density_ethylene_glycol_water_Liquid11_Dtemperature_Dpressure' 'Density_ethylene_glycol_water_Liquid11_Dpressure_Dpressure'});
model.thermodynamics.feature('pp1').feature('singlephase1').set('SecondDerivativeIndices', {'0' '0' '0' '0' '1' '1' '1' '1' '2'});
model.thermodynamics.feature('pp1').feature('singlephase1').set('phase', 'Liquid');
model.thermodynamics.feature('pp1').feature('singlephase1').set('comp_basis', 'mass');
model.thermodynamics.feature('pp1').feature('singlephase1').set('include_derivatives', 'yes');
model.thermodynamics.feature('pp1').feature.create('singlephase2', 'OnePhaseProperty');
model.thermodynamics.feature('pp1').feature('singlephase2').label('Heat capacity (Cp) 1');
model.thermodynamics.feature('pp1').feature('singlephase2').set('funcname', 'HeatCapacityCp_ethylene_glycol_water_Liquid12');
model.thermodynamics.feature('pp1').feature('singlephase2').set('property', 'HeatCapacityCp');
model.thermodynamics.feature('pp1').feature('singlephase2').set('propertydescr', 'Heat capacity (Cp)');
model.thermodynamics.feature('pp1').feature('singlephase2').set('unit', 'J/kg/K');
model.thermodynamics.feature('pp1').feature('singlephase2').set('prop_basis', 'mass');
model.thermodynamics.feature('pp1').feature('singlephase2').set('compounds', {'ethylene glycol' 'water'});
model.thermodynamics.feature('pp1').feature('singlephase2').set('args', {'temperature' 'K' 'Temperature';  ...
'pressure' 'Pa' 'Pressure';  ...
'massfraction_ethylene_glycol' '1' 'Mass fraction ethylene glycol';  ...
'massfraction_water' '1' 'Mass fraction water'});
model.thermodynamics.feature('pp1').feature('singlephase2').set('plotargs', {'temperature' '298.15' '373.15';  ...
'pressure' '101325' '101325';  ...
'massfraction_ethylene_glycol' '0.5' '0.5';  ...
'massfraction_water' '0.5' '0.5'});
model.thermodynamics.feature('pp1').feature('singlephase2').set('derivatives', {'HeatCapacityCp_ethylene_glycol_water_Liquid12_Dtemperature' 'HeatCapacityCp_ethylene_glycol_water_Liquid12_Dpressure' 'HeatCapacityCp_ethylene_glycol_water_Liquid12_Dmassfraction_ethylene_glycol' 'HeatCapacityCp_ethylene_glycol_water_Liquid12_Dmassfraction_water'});
model.thermodynamics.feature('pp1').feature('singlephase2').set('SecondDerivatives', {});
model.thermodynamics.feature('pp1').feature('singlephase2').set('SecondDerivativeIndices', {});
model.thermodynamics.feature('pp1').feature('singlephase2').set('phase', 'Liquid');
model.thermodynamics.feature('pp1').feature('singlephase2').set('comp_basis', 'mass');
model.thermodynamics.feature('pp1').feature('singlephase2').set('include_derivatives', 'yes');
model.thermodynamics.feature('pp1').feature.create('singlephase3', 'OnePhaseProperty');
model.thermodynamics.feature('pp1').feature('singlephase3').label('Thermal conductivity 1');
model.thermodynamics.feature('pp1').feature('singlephase3').set('funcname', 'ThermalConductivity_ethylene_glycol_water_Liquid13');
model.thermodynamics.feature('pp1').feature('singlephase3').set('property', 'ThermalConductivity');
model.thermodynamics.feature('pp1').feature('singlephase3').set('propertydescr', 'Thermal conductivity');
model.thermodynamics.feature('pp1').feature('singlephase3').set('unit', 'W/m/K');
model.thermodynamics.feature('pp1').feature('singlephase3').set('prop_basis', 'mass');
model.thermodynamics.feature('pp1').feature('singlephase3').set('compounds', {'ethylene glycol' 'water'});
model.thermodynamics.feature('pp1').feature('singlephase3').set('args', {'temperature' 'K' 'Temperature';  ...
'pressure' 'Pa' 'Pressure';  ...
'massfraction_ethylene_glycol' '1' 'Mass fraction ethylene glycol';  ...
'massfraction_water' '1' 'Mass fraction water'});
model.thermodynamics.feature('pp1').feature('singlephase3').set('plotargs', {'temperature' '298.15' '373.15';  ...
'pressure' '101325' '101325';  ...
'massfraction_ethylene_glycol' '0.5' '0.5';  ...
'massfraction_water' '0.5' '0.5'});
model.thermodynamics.feature('pp1').feature('singlephase3').set('derivatives', {'ThermalConductivity_ethylene_glycol_water_Liquid13_Dtemperature' 'ThermalConductivity_ethylene_glycol_water_Liquid13_Dpressure' 'ThermalConductivity_ethylene_glycol_water_Liquid13_Dmassfraction_ethylene_glycol' 'ThermalConductivity_ethylene_glycol_water_Liquid13_Dmassfraction_water'});
model.thermodynamics.feature('pp1').feature('singlephase3').set('SecondDerivatives', {});
model.thermodynamics.feature('pp1').feature('singlephase3').set('SecondDerivativeIndices', {});
model.thermodynamics.feature('pp1').feature('singlephase3').set('phase', 'Liquid');
model.thermodynamics.feature('pp1').feature('singlephase3').set('comp_basis', 'mass');
model.thermodynamics.feature('pp1').feature('singlephase3').set('include_derivatives', 'yes');
model.thermodynamics.feature('pp1').feature.create('singlephase4', 'OnePhaseProperty');
model.thermodynamics.feature('pp1').feature('singlephase4').label('Viscosity 1');
model.thermodynamics.feature('pp1').feature('singlephase4').set('funcname', 'Viscosity_ethylene_glycol_water_Liquid14');
model.thermodynamics.feature('pp1').feature('singlephase4').set('property', 'Viscosity');
model.thermodynamics.feature('pp1').feature('singlephase4').set('propertydescr', 'Viscosity');
model.thermodynamics.feature('pp1').feature('singlephase4').set('unit', 'Pa*s');
model.thermodynamics.feature('pp1').feature('singlephase4').set('prop_basis', 'mass');
model.thermodynamics.feature('pp1').feature('singlephase4').set('compounds', {'ethylene glycol' 'water'});
model.thermodynamics.feature('pp1').feature('singlephase4').set('args', {'temperature' 'K' 'Temperature';  ...
'pressure' 'Pa' 'Pressure';  ...
'massfraction_ethylene_glycol' '1' 'Mass fraction ethylene glycol';  ...
'massfraction_water' '1' 'Mass fraction water'});
model.thermodynamics.feature('pp1').feature('singlephase4').set('plotargs', {'temperature' '298.15' '373.15';  ...
'pressure' '101325' '101325';  ...
'massfraction_ethylene_glycol' '0.5' '0.5';  ...
'massfraction_water' '0.5' '0.5'});
model.thermodynamics.feature('pp1').feature('singlephase4').set('derivatives', {'Viscosity_ethylene_glycol_water_Liquid14_Dtemperature' 'Viscosity_ethylene_glycol_water_Liquid14_Dpressure' 'Viscosity_ethylene_glycol_water_Liquid14_Dmassfraction_ethylene_glycol' 'Viscosity_ethylene_glycol_water_Liquid14_Dmassfraction_water'});
model.thermodynamics.feature('pp1').feature('singlephase4').set('SecondDerivatives', {});
model.thermodynamics.feature('pp1').feature('singlephase4').set('SecondDerivativeIndices', {});
model.thermodynamics.feature('pp1').feature('singlephase4').set('phase', 'Liquid');
model.thermodynamics.feature('pp1').feature('singlephase4').set('comp_basis', 'mass');
model.thermodynamics.feature('pp1').feature('singlephase4').set('include_derivatives', 'yes');
model.thermodynamics.feature('pp1').feature('singlephase1').tag('mat_singlephase1');
model.thermodynamics.feature('pp1').feature('mat_singlephase1').set('funcname', 'Densitypp1');
model.thermodynamics.feature('pp1').feature('singlephase2').tag('mat_singlephase2');
model.thermodynamics.feature('pp1').feature('mat_singlephase2').set('funcname', 'HeatCapacityCppp1');
model.thermodynamics.feature('pp1').feature('singlephase3').tag('mat_singlephase3');
model.thermodynamics.feature('pp1').feature('mat_singlephase3').set('funcname', 'ThermalConductivitypp1');
model.thermodynamics.feature('pp1').feature('singlephase4').tag('mat_singlephase4');
model.thermodynamics.feature('pp1').feature('mat_singlephase4').set('funcname', 'Viscositypp1');
model.thermodynamics.createMaterial('comp1', 'pp1', 'Liquid', {'ethylene glycol' 'water'}, {'0.5' '0.5'}, {}, {'density' 'Densitypp1'; 'heatcapacitycp' 'HeatCapacityCppp1'; 'thermalconductivity' 'ThermalConductivitypp1'; 'viscosity' 'Viscositypp1'}, 'Thermodynamics', {'8' '273' '373' '20' '101325' '201325' '15';  ...
'72' '273' '373' '20' '101325' '201325' '15';  ...
'60' '273' '373' '20' '101325' '201325' '15';  ...
'64' '273' '373' '20' '101325' '201325' '15'}, {'mass' 'mass'});

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('w_EG', '0.527', 'Mass fraction, ethylene glycol');
model.param.set('w_W', '1-w_EG', 'Mass fraction, water');
model.param.set('Vel', '1.0[m/s]', 'Pipe inlet velocity');
model.param.set('r_p', '1.5[cm]', 'Pipe radius');
model.param.set('l_p', '20[cm]', 'Pipe length');
model.param.set('r_c', '10[cm]', 'Chamber radius');
model.param.set('l_c', '10[cm]', 'Chamber length');
model.param.set('zpos_c', 'l_p/4', 'Chamber position along the pipe');
model.param.set('r_s1', '3[cm]', 'Solid part 1, radius');
model.param.set('l_s1', '0.5[cm]', 'Solid part 1, length');
model.param.set('r_s2', '0.35[cm]', 'Solid part 2, radius');
model.param.set('l_s2', 'l_p-zpos_s', 'Solid part 2, length');
model.param.set('zpos_s', 'zpos_c+0.3*l_c', 'Solid parts position along the pipe');
model.param.set('Tc', '353.15[K]', 'Coolant temperature');
model.param.set('pRef', '2[atm]', 'Coolant pressure');
model.param.set('n', '0', 'Phase fraction');
model.param.set('P0', '50[kW]', 'Combustion heat flux');

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', {'r_p' 'l_p'});
model.geom('geom1').run('r1');
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').set('size', {'r_c' 'l_c'});
model.geom('geom1').feature('r2').set('pos', {'0' 'zpos_c'});
model.geom('geom1').run('r2');
model.geom('geom1').create('r3', 'Rectangle');
model.geom('geom1').feature('r3').set('size', {'r_s1' 'l_s1'});
model.geom('geom1').feature('r3').set('pos', {'0' 'zpos_s'});
model.geom('geom1').run('r3');
model.geom('geom1').create('r4', 'Rectangle');
model.geom('geom1').feature('r4').set('size', {'r_s2' 'l_s2'});
model.geom('geom1').feature('r4').set('pos', {'0' 'zpos_s'});
model.geom('geom1').run('r4');
model.geom('geom1').create('uni1', 'Union');
model.geom('geom1').feature('uni1').selection('input').set({'r3' 'r4'});
model.geom('geom1').feature('uni1').set('intbnd', false);
model.geom('geom1').run('uni1');
model.geom('geom1').create('uni2', 'Union');
model.geom('geom1').feature('uni2').selection('input').set({'r1' 'r2'});
model.geom('geom1').feature('uni2').set('intbnd', false);
model.geom('geom1').run('uni2');
model.geom('geom1').create('fil1', 'Fillet');
model.geom('geom1').feature('fil1').selection('point').set('uni1', 5);
model.geom('geom1').feature('fil1').selection('point').set('uni2', [6 7 9 10]);
model.geom('geom1').feature('fil1').set('radius', '0.3[cm]');
model.geom('geom1').runPre('fin');

model.study('std1').label('Study 1: Mixture properties parameterization');
model.study('std1').setGenPlots(false);

model.geom('geom1').run;

model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 'w_EG', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', '', 0);
model.study('std1').feature('stat').setIndex('pname', 'w_EG', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', '', 0);
model.study('std1').feature('stat').setIndex('pname', 'w_W', 1);
model.study('std1').feature('stat').setIndex('plistarr', '', 1);
model.study('std1').feature('stat').setIndex('punit', '', 1);
model.study('std1').feature('stat').setIndex('pname', 'w_W', 1);
model.study('std1').feature('stat').setIndex('plistarr', '', 1);
model.study('std1').feature('stat').setIndex('punit', '', 1);
model.study('std1').feature('stat').setIndex('plistarr', '0 0.527 1', 0);
model.study('std1').feature('stat').setIndex('pname', 'Tc', 1);
model.study('std1').feature('stat').setIndex('plistarr', 'range(273,10,473)', 1);
model.study('std1').feature('stat').set('sweeptype', 'filled');
model.study('std1').feature('stat').setEntry('activate', 'spf', false);
model.study('std1').feature('stat').setEntry('activate', 'ht', false);
model.study('std1').feature('stat').setEntry('activateCoupling', 'nitf1', false);

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1 2]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s1').set('control', 'stat');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').run;
model.result('pg1').label('Density');
model.result('pg1').set('titletype', 'none');
model.result('pg1').create('glob1', 'Global');
model.result('pg1').feature('glob1').set('markerpos', 'datapoints');
model.result('pg1').feature('glob1').set('linewidth', 'preference');
model.result('pg1').feature('glob1').set('expr', {'Densitypp1(temperature, pressure, massfraction_ethylene_glycol, massfraction_water)'});
model.result('pg1').feature('glob1').set('descr', {'Density 1'});
model.result('pg1').feature('glob1').set('unit', {''});
model.result('pg1').feature('glob1').setIndex('expr', 'Densitypp1(Tc,pRef,w_EG,w_W)', 0);
model.result('pg1').feature('glob1').setIndex('unit', '', 0);
model.result('pg1').feature('glob1').setIndex('descr', '', 0);
model.result('pg1').feature('glob1').set('autodescr', false);
model.result('pg1').run;
model.result('pg1').set('xlabelactive', true);
model.result('pg1').set('ylabelactive', true);
model.result('pg1').set('xlabel', 'Temperature (K)');
model.result('pg1').set('ylabel', 'Density (kg/m<sup>3</sup>)');
model.result('pg1').run;
model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').run;
model.result('pg2').label('Viscosity');
model.result('pg2').set('titletype', 'none');
model.result('pg2').create('glob1', 'Global');
model.result('pg2').feature('glob1').set('markerpos', 'datapoints');
model.result('pg2').feature('glob1').set('linewidth', 'preference');
model.result('pg2').feature('glob1').set('expr', {'Viscositypp1(temperature, pressure, massfraction_ethylene_glycol, massfraction_water)'});
model.result('pg2').feature('glob1').set('descr', {'Viscosity 1'});
model.result('pg2').feature('glob1').set('unit', {''});
model.result('pg2').feature('glob1').setIndex('expr', 'Viscositypp1(Tc,pRef,w_EG,w_W)', 0);
model.result('pg2').feature('glob1').setIndex('unit', '', 0);
model.result('pg2').feature('glob1').setIndex('descr', '', 0);
model.result('pg2').feature('glob1').set('autodescr', false);
model.result('pg2').run;
model.result('pg2').set('xlabelactive', true);
model.result('pg2').set('ylabelactive', true);
model.result('pg2').set('xlabel', 'Temperature (K)');
model.result('pg2').set('ylabel', 'Viscosity (Pa*s)');
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('Thermal Conductivity');
model.result('pg3').set('titletype', 'none');
model.result('pg3').create('glob1', 'Global');
model.result('pg3').feature('glob1').set('markerpos', 'datapoints');
model.result('pg3').feature('glob1').set('linewidth', 'preference');
model.result('pg3').feature('glob1').set('expr', {'ThermalConductivitypp1(temperature, pressure, massfraction_ethylene_glycol, massfraction_water)'});
model.result('pg3').feature('glob1').set('descr', {'Thermal conductivity 1'});
model.result('pg3').feature('glob1').set('unit', {''});
model.result('pg3').feature('glob1').setIndex('expr', 'ThermalConductivitypp1(Tc,pRef,w_EG,w_W)', 0);
model.result('pg3').feature('glob1').setIndex('unit', '', 0);
model.result('pg3').feature('glob1').setIndex('descr', '', 0);
model.result('pg3').feature('glob1').set('autodescr', false);
model.result('pg3').run;
model.result('pg3').set('xlabelactive', true);
model.result('pg3').set('xlabel', 'Temperature (K)');
model.result('pg3').set('ylabelactive', true);
model.result('pg3').set('ylabel', 'Thermal conductivity (W/(m*K))');
model.result('pg3').set('legendpos', 'middleright');
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Heat Capacity');
model.result('pg4').set('titletype', 'none');
model.result('pg4').create('glob1', 'Global');
model.result('pg4').feature('glob1').set('markerpos', 'datapoints');
model.result('pg4').feature('glob1').set('linewidth', 'preference');
model.result('pg4').feature('glob1').set('expr', {'HeatCapacityCppp1(temperature, pressure, massfraction_ethylene_glycol, massfraction_water)'});
model.result('pg4').feature('glob1').set('descr', {'Heat capacity (Cp) 1'});
model.result('pg4').feature('glob1').set('unit', {''});
model.result('pg4').feature('glob1').setIndex('expr', 'HeatCapacityCppp1(Tc,pRef,w_EG,w_W)', 0);
model.result('pg4').feature('glob1').setIndex('unit', '', 0);
model.result('pg4').feature('glob1').setIndex('descr', '', 0);
model.result('pg4').feature('glob1').set('autodescr', false);
model.result('pg4').run;
model.result('pg4').set('xlabelactive', true);
model.result('pg4').set('xlabel', 'Temperature (K)');
model.result('pg4').set('ylabelactive', true);
model.result('pg4').set('ylabel', 'Heat capacity (J/(kg*K))');
model.result('pg4').set('legendpos', 'upperleft');
model.result('pg4').run;

model.thermodynamics.feature('pp1').feature.create('flashcalc1', 'FlashCalculationProperty');
model.thermodynamics.feature('pp1').feature.remove('flashcalc1');
model.thermodynamics.feature('pp1').feature.create('flashcalc1', 'FlashCalculationProperty');
model.thermodynamics.feature('pp1').feature('flashcalc1').set('funcname', 'flashcalc1');
model.thermodynamics.feature('pp1').feature('flashcalc1').set('property', 'FlashCalculationProperty');
model.thermodynamics.feature('pp1').feature('flashcalc1').set('propertydescr', 'Equilibrium calculation');
model.thermodynamics.feature('pp1').feature('flashcalc1').set('dvars', {'0' '0' '0' '0'});
model.thermodynamics.feature('pp1').feature('flashcalc1').set('compounds', {'ethylene glycol' 'water'});
model.thermodynamics.feature('pp1').feature('flashcalc1').set('functions', {'Flash1_1_PhaseExist_Vapor' '1' 'Presence of Vapor phase';  ...
'Flash1_1_PhaseExist_Liquid' '1' 'Presence of Liquid phase';  ...
'Flash1_1_Temperature' 'K' 'Temperature';  ...
'Flash1_1_PhaseAmount_Vapor' 'mol' 'Amount in Vapor phase';  ...
'Flash1_1_PhaseAmount_Liquid' 'mol' 'Amount in Liquid phase';  ...
'Flash1_1_PhaseComposition_Vapor_ethylene_glycol' 'mol/mol' 'Fraction of ethylene glycol in Vapor phase';  ...
'Flash1_1_PhaseComposition_Vapor_water' 'mol/mol' 'Fraction of water in Vapor phase';  ...
'Flash1_1_PhaseComposition_Liquid_ethylene_glycol' 'mol/mol' 'Fraction of ethylene glycol in Liquid phase';  ...
'Flash1_1_PhaseComposition_Liquid_water' 'mol/mol' 'Fraction of water in Liquid phase'});
model.thermodynamics.feature('pp1').feature('flashcalc1').set('cond1', {'pressure'});
model.thermodynamics.feature('pp1').feature('flashcalc1').set('cond2', {'phasefraction' 'mole' 'Vapor'});
model.thermodynamics.feature('pp1').feature('flashcalc1').set('prop_basis', 'mole');
model.thermodynamics.feature('pp1').feature('flashcalc1').set('inphase', 'Flash1_1_PhaseExist');
model.thermodynamics.feature('pp1').feature('flashcalc1').set('temperature', 'Flash1_1_Temperature');
model.thermodynamics.feature('pp1').feature('flashcalc1').set('pressure', 'Flash1_1_Pressure');
model.thermodynamics.feature('pp1').feature('flashcalc1').set('amounts', 'Flash1_1_PhaseAmount');
model.thermodynamics.feature('pp1').feature('flashcalc1').set('composition', 'Flash1_1_PhaseComposition');
model.thermodynamics.feature('pp1').feature('flashcalc1').set('soltype', 'undefined');
model.thermodynamics.feature('pp1').feature('flashcalc1').set('unit', '1');
model.thermodynamics.feature('pp1').feature('flashcalc1').set('phases', {'Vapor' 'Liquid'});
model.thermodynamics.feature('pp1').feature('flashcalc1').set('args', {'pressure' 'Pa' 'Pressure';  ...
'phasefraction' 'mol/mol' 'Vapor Mole fraction';  ...
'ethylene_glycol' 'mol' 'Amount ethylene glycol';  ...
'water' 'mol' 'Amount water'});
model.thermodynamics.feature('pp1').feature('flashcalc1').set('plotargs', {'pressure' '101325' '101325';  ...
'phasefraction' '0.5' '0.5';  ...
'ethylene_glycol' '1' '1';  ...
'water' '1' '1'});
model.thermodynamics.feature('pp1').feature('flashcalc1').set('derivatives', '');
model.thermodynamics.feature('pp1').feature('flashcalc1').set('SecondDerivatives', '');
model.thermodynamics.feature('pp1').feature('flashcalc1').set('SecondDerivativeIndices', '');
model.thermodynamics.feature('pp1').feature('flashcalc1').set('plotfunction', 'Flash1_1_PhaseExist_Vapor');
model.thermodynamics.feature('pp1').set('WarningState', false);
model.thermodynamics.feature('pp1').set('Warning', {''});

model.func.create('an1', 'Analytic');
model.func('an1').label('Phase envelope');
model.func('an1').set('funcname', 'T_x_y');
model.func('an1').set('expr', 'Flash1_1_Temperature(p,n,w_EG,w_W)');
model.func('an1').set('args', 'p, n, w_EG, w_W');
model.func('an1').setIndex('argunit', 'Pa', 0);
model.func('an1').setIndex('argunit', 1, 1);
model.func('an1').setIndex('argunit', 'mol/mol', 2);
model.func('an1').setIndex('argunit', 'mol/mol', 3);
model.func('an1').set('fununit', 'K');

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/spf', true);
model.study('std2').feature('stat').setSolveFor('/physics/ht', true);
model.study('std2').feature('stat').setSolveFor('/multiphysics/nitf1', true);
model.study('std2').feature('stat').set('useparam', true);
model.study('std2').feature('stat').setIndex('pname', 'w_EG', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', '', 0);
model.study('std2').feature('stat').setIndex('pname', 'w_EG', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', '', 0);
model.study('std2').feature('stat').setIndex('pname', 'w_W', 1);
model.study('std2').feature('stat').setIndex('plistarr', '', 1);
model.study('std2').feature('stat').setIndex('punit', '', 1);
model.study('std2').feature('stat').setIndex('pname', 'w_W', 1);
model.study('std2').feature('stat').setIndex('plistarr', '', 1);
model.study('std2').feature('stat').setIndex('punit', '', 1);
model.study('std2').feature('stat').setIndex('pname', 'Vel', 2);
model.study('std2').feature('stat').setIndex('plistarr', '', 2);
model.study('std2').feature('stat').setIndex('punit', 'm/s', 2);
model.study('std2').feature('stat').setIndex('pname', 'Vel', 2);
model.study('std2').feature('stat').setIndex('plistarr', '', 2);
model.study('std2').feature('stat').setIndex('punit', 'm/s', 2);
model.study('std2').feature('stat').setIndex('plistarr', 'range(0,0.01,1)', 0);
model.study('std2').feature('stat').setIndex('pname', 'n', 1);
model.study('std2').feature('stat').setIndex('plistarr', '0 1', 1);
model.study('std2').feature('stat').setIndex('pname', 'pRef', 2);
model.study('std2').feature('stat').setIndex('plistarr', '1[atm] 2[atm]', 2);
model.study('std2').feature('stat').setIndex('punit', 'Pa', 2);
model.study('std2').feature('stat').set('sweeptype', 'filled');
model.study('std2').label('Study 2: Phase envelope parameterization');
model.study('std2').setGenPlots(false);
model.study('std2').feature('stat').setEntry('activate', 'spf', false);
model.study('std2').feature('stat').setEntry('activate', 'ht', false);
model.study('std2').feature('stat').setEntry('activateCoupling', 'nitf1', false);

model.sol.create('sol2');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1 2]);

model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('p1', 'Parametric');
model.sol('sol2').feature('s1').feature.remove('pDef');
model.sol('sol2').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol2').feature('s1').set('control', 'stat');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').set('data', 'dset2');
model.result('pg5').set('titletype', 'none');
model.result('pg5').set('xlabelactive', true);
model.result('pg5').set('xlabel', 'Mole fraction ethylene glycol');
model.result('pg5').set('ylabelactive', true);
model.result('pg5').set('ylabel', 'Temperature (K)');
model.result('pg5').create('glob1', 'Global');
model.result('pg5').feature('glob1').set('markerpos', 'datapoints');
model.result('pg5').feature('glob1').set('linewidth', 'preference');
model.result('pg5').feature('glob1').setIndex('expr', 'T_x_y(pRef, n, w_EG, w_W)', 0);
model.result('pg5').feature('glob1').setIndex('unit', '', 0);
model.result('pg5').feature('glob1').setIndex('descr', '', 0);
model.result('pg5').feature('glob1').set('xdatasolnumtype', 'level3');
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').set('legendpos', 'upperleft');
model.result('pg5').label('Phase Envelope');

model.material('pp1mat1').selection.set([1]);
model.material('pp1mat1').propertyGroup('def').set('xw1', {'w_EG'});
model.material('pp1mat1').propertyGroup('def').set('xw2', {'w_W'});

model.physics('spf').selection.set([1]);
model.physics('spf').create('inl1', 'InletBoundary', 1);
model.physics('spf').feature('inl1').selection.set([2]);
model.physics('spf').feature('inl1').set('U0in', 'Vel');
model.physics('spf').create('out1', 'OutletBoundary', 1);
model.physics('spf').feature('out1').selection.set([11]);
model.physics('ht').create('ifl1', 'Inflow', 1);
model.physics('ht').feature('ifl1').selection.set([2]);
model.physics('ht').feature('ifl1').set('Tustr', 'Tc');
model.physics('ht').feature('ifl1').set('specifyUpstreamAbsolutePressure', true);
model.physics('ht').feature('ifl1').set('pustr', 'pRef');
model.physics('ht').create('ofl1', 'ConvectiveOutflow', 1);
model.physics('ht').feature('ofl1').selection.set([11]);
model.physics('ht').create('hf1', 'HeatFluxBoundary', 1);
model.physics('ht').feature('hf1').selection.set([18]);
model.physics('ht').feature('hf1').set('HeatFluxType', 'HeatRate');
model.physics('ht').feature('hf1').set('P0', 'P0');
model.physics('ht').create('solid1', 'SolidHeatTransferModel', 2);
model.physics('ht').feature('solid1').selection.set([2]);

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat1').propertyGroup('Enu').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup('Enu').func.create('int2', 'Interpolation');
model.material('mat1').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat1').propertyGroup.create('ElastoplasticModel', 'Elastoplastic material model');
model.material('mat1').propertyGroup('ElastoplasticModel').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('Ludwik', 'Ludwik');
model.material('mat1').propertyGroup('Ludwik').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('JohnsonCook', 'Johnson-Cook');
model.material('mat1').propertyGroup.create('Swift', 'Swift');
model.material('mat1').propertyGroup.create('Voce', 'Voce');
model.material('mat1').propertyGroup('Voce').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('HockettSherby', 'Hockett-Sherby');
model.material('mat1').propertyGroup('HockettSherby').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('ArmstrongFrederick', 'Armstrong-Frederick');
model.material('mat1').propertyGroup('ArmstrongFrederick').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('Norton', 'Norton');
model.material('mat1').propertyGroup.create('Garofalo', 'Garofalo (hyperbolic sine)');
model.material('mat1').propertyGroup.create('ChabocheViscoplasticity', 'Chaboche viscoplasticity');
model.material('mat1').label('Structural steel');
model.material('mat1').set('family', 'custom');
model.material('mat1').set('customspecular', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat1').set('customdiffuse', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat1').set('customambient', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat1').set('noise', true);
model.material('mat1').set('fresnel', 0.9);
model.material('mat1').set('roughness', 0.3);
model.material('mat1').set('metallic', 0);
model.material('mat1').set('pearl', 0);
model.material('mat1').set('diffusewrap', 0);
model.material('mat1').set('clearcoat', 0);
model.material('mat1').set('reflectance', 0);
model.material('mat1').propertyGroup('def').set('lossfactor', '0.02');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('heatcapacity', '475[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]'});
model.material('mat1').propertyGroup('def').set('density', '7850[kg/m^3]');
model.material('mat1').propertyGroup('Enu').func('int1').set('funcname', 'E');
model.material('mat1').propertyGroup('Enu').func('int1').set('table', {'293.15' '200e9'; '793.15' '166.6e9'});
model.material('mat1').propertyGroup('Enu').func('int1').set('extrap', 'linear');
model.material('mat1').propertyGroup('Enu').func('int1').set('fununit', {'Pa'});
model.material('mat1').propertyGroup('Enu').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Enu').func('int2').set('funcname', 'nu');
model.material('mat1').propertyGroup('Enu').func('int2').set('table', {'293.15' '0.30'; '793.15' '0.315'});
model.material('mat1').propertyGroup('Enu').func('int2').set('extrap', 'linear');
model.material('mat1').propertyGroup('Enu').func('int2').set('fununit', {'1'});
model.material('mat1').propertyGroup('Enu').func('int2').set('argunit', {'K'});
model.material('mat1').propertyGroup('Enu').set('E', 'E(T)');
model.material('mat1').propertyGroup('Enu').set('nu', 'nu(T)');
model.material('mat1').propertyGroup('Enu').addInput('temperature');
model.material('mat1').propertyGroup('Murnaghan').set('l', '-3.0e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('m', '-6.2e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('n', '-7.2e11[Pa]');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmags', '350[MPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('Et', '1.045[GPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('Ek', '1.045[GPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmagh', '1.050[GPa]*epe*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').addInput('temperature');
model.material('mat1').propertyGroup('ElastoplasticModel').addInput('effectiveplasticstrain');
model.material('mat1').propertyGroup('Ludwik').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('Ludwik').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('Ludwik').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('Ludwik').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Ludwik').set('k_lud', '560[MPa]*a(T)');
model.material('mat1').propertyGroup('Ludwik').set('n_lud', '0.61');
model.material('mat1').propertyGroup('Ludwik').addInput('temperature');
model.material('mat1').propertyGroup('JohnsonCook').set('k_jcook', '560[MPa]');
model.material('mat1').propertyGroup('JohnsonCook').set('n_jcook', '0.61');
model.material('mat1').propertyGroup('JohnsonCook').set('C_jcook', '0.12');
model.material('mat1').propertyGroup('JohnsonCook').set('epet0_jcook', '1[1/s]');
model.material('mat1').propertyGroup('JohnsonCook').set('m_jcook', '0.6');
model.material('mat1').propertyGroup('Swift').set('e0_swi', '0.021');
model.material('mat1').propertyGroup('Swift').set('n_swi', '0.2');
model.material('mat1').propertyGroup('Voce').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('Voce').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('Voce').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('Voce').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Voce').set('sigma_voc', '249[MPa]*a(T)');
model.material('mat1').propertyGroup('Voce').set('beta_voc', '9.3');
model.material('mat1').propertyGroup('Voce').addInput('temperature');
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('HockettSherby').set('sigma_hoc', '684[MPa]*a(T)');
model.material('mat1').propertyGroup('HockettSherby').set('m_hoc', '3.9');
model.material('mat1').propertyGroup('HockettSherby').set('n_hoc', '0.85');
model.material('mat1').propertyGroup('HockettSherby').addInput('temperature');
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('ArmstrongFrederick').set('Ck', '2.070[GPa]*a(T)');
model.material('mat1').propertyGroup('ArmstrongFrederick').set('gammak', '8.0');
model.material('mat1').propertyGroup('ArmstrongFrederick').addInput('temperature');
model.material('mat1').propertyGroup('Norton').set('A_nor', '1.2e-15[1/s]');
model.material('mat1').propertyGroup('Norton').set('sigRef_nor', '1[MPa]');
model.material('mat1').propertyGroup('Norton').set('n_nor', '4.5');
model.material('mat1').propertyGroup('Garofalo').set('A_gar', '1e-6[1/s]');
model.material('mat1').propertyGroup('Garofalo').set('sigRef_gar', '100[MPa]');
model.material('mat1').propertyGroup('Garofalo').set('n_gar', '4.6');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('A_cha', '1');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('sigRef_cha', '490[MPa]');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('n_cha', '9');
model.material('mat1').selection.set([2]);

model.study.create('std3');
model.study('std3').create('stat', 'Stationary');
model.study('std3').feature('stat').setSolveFor('/physics/spf', true);
model.study('std3').feature('stat').setSolveFor('/physics/ht', false);
model.study('std3').feature('stat').setSolveFor('/multiphysics/nitf1', true);
model.study('std3').feature('stat').set('useparam', true);
model.study('std3').feature('stat').setIndex('pname', 'w_EG', 0);
model.study('std3').feature('stat').setIndex('plistarr', '', 0);
model.study('std3').feature('stat').setIndex('punit', '', 0);
model.study('std3').feature('stat').setIndex('pname', 'w_EG', 0);
model.study('std3').feature('stat').setIndex('plistarr', '', 0);
model.study('std3').feature('stat').setIndex('punit', '', 0);
model.study('std3').feature('stat').setIndex('pname', 'w_EG', 0);
model.study('std3').feature('stat').setIndex('plistarr', 0, 0);
model.study('std3').label('Study 3: Water');
model.study('std3').create('stat2', 'Stationary');
model.study('std3').feature('stat2').set('useparam', true);
model.study('std3').feature('stat2').setIndex('pname', 'w_EG', 0);
model.study('std3').feature('stat2').setIndex('plistarr', '', 0);
model.study('std3').feature('stat2').setIndex('punit', '', 0);
model.study('std3').feature('stat2').setIndex('pname', 'w_EG', 0);
model.study('std3').feature('stat2').setIndex('plistarr', '', 0);
model.study('std3').feature('stat2').setIndex('punit', '', 0);
model.study('std3').feature('stat2').setIndex('pname', 'w_EG', 0);
model.study('std3').feature('stat2').setIndex('plistarr', 0, 0);

model.sol.create('sol3');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol3').study('std3');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std3');
model.sol('sol3').feature('st1').set('studystep', 'stat');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').set('control', 'stat');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').create('p1', 'Parametric');
model.sol('sol3').feature('s1').feature.remove('pDef');
model.sol('sol3').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol3').feature('s1').set('control', 'stat');
model.sol('sol3').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('s1').create('seDef', 'Segregated');
model.sol('sol3').feature('s1').create('se1', 'Segregated');
model.sol('sol3').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol3').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_nitf1_TWall_d' 'comp1_nitf1_TWall_u' 'comp1_p' 'comp1_u'});
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('subdamp', 0.5);
model.sol('sol3').feature('s1').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('d1').label('Direct (Merged)');
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol3').feature('s1').feature('se1').feature('ss1').label('Merged Variables');
model.sol('sol3').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol3').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_k' 'comp1_ep'});
model.sol('sol3').feature('s1').feature('se1').feature('ss2').set('subdamp', 0.45);
model.sol('sol3').feature('s1').feature('se1').feature('ss2').set('subiter', 3);
model.sol('sol3').feature('s1').feature('se1').feature('ss2').set('subtermconst', 'itertol');
model.sol('sol3').feature('s1').feature('se1').feature('ss2').set('subntolfact', 1);
model.sol('sol3').feature('s1').create('d2', 'Direct');
model.sol('sol3').feature('s1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s1').feature('d2').label('Direct, turbulence variables (spf)');
model.sol('sol3').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol3').feature('s1').feature('se1').feature('ss2').label('Turbulence Variables');
model.sol('sol3').feature('s1').feature('se1').set('maxsegiter', 300);
model.sol('sol3').feature('s1').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol3').feature('s1').feature('se1').set('subinitcfl', 3);
model.sol('sol3').feature('s1').feature('se1').set('subkppid', 0.65);
model.sol('sol3').feature('s1').feature('se1').set('subkdpid', 0.05);
model.sol('sol3').feature('s1').feature('se1').set('subkipid', 0.05);
model.sol('sol3').feature('s1').feature('se1').set('subcfltol', 0.1);
model.sol('sol3').feature('s1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol3').feature('s1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.k 0 comp1.ep 0 ');
model.sol('sol3').feature('s1').create('i1', 'Iterative');
model.sol('sol3').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol3').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol3').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol3').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol3').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol3').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol3').feature('s1').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol3').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s1').create('i2', 'Iterative');
model.sol('sol3').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol3').feature('s1').feature('i2').set('prefuntype', 'left');
model.sol('sol3').feature('s1').feature('i2').set('itrestart', 50);
model.sol('sol3').feature('s1').feature('i2').set('rhob', 20);
model.sol('sol3').feature('s1').feature('i2').set('maxlinit', 1000);
model.sol('sol3').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol3').feature('s1').feature('i2').label('AMG, turbulence variables (spf)');
model.sol('sol3').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('iter', 0);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol('sol3').feature('s1').feature.remove('seDef');
model.sol('sol3').create('su1', 'StoreSolution');
model.sol('sol3').create('st2', 'StudyStep');
model.sol('sol3').feature('st2').set('study', 'std3');
model.sol('sol3').feature('st2').set('studystep', 'stat2');
model.sol('sol3').create('v2', 'Variables');
model.sol('sol3').feature('v2').set('initmethod', 'sol');
model.sol('sol3').feature('v2').set('initsol', 'sol3');
model.sol('sol3').feature('v2').set('initsoluse', 'sol4');
model.sol('sol3').feature('v2').set('notsolmethod', 'sol');
model.sol('sol3').feature('v2').set('notsol', 'sol3');
model.sol('sol3').feature('v2').set('control', 'stat2');
model.sol('sol3').create('s2', 'Stationary');
model.sol('sol3').feature('s2').create('p1', 'Parametric');
model.sol('sol3').feature('s2').feature.remove('pDef');
model.sol('sol3').feature('s2').feature('p1').set('control', 'stat2');
model.sol('sol3').feature('s2').set('control', 'stat2');
model.sol('sol3').feature('s2').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('s2').create('seDef', 'Segregated');
model.sol('sol3').feature('s2').create('se1', 'Segregated');
model.sol('sol3').feature('s2').feature('se1').feature.remove('ssDef');
model.sol('sol3').feature('s2').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol3').feature('s2').feature('se1').feature('ss1').set('segvar', {'comp1_p' 'comp1_u'});
model.sol('sol3').feature('s2').feature('se1').feature('ss1').set('subdamp', 0.5);
model.sol('sol3').feature('s2').create('d1', 'Direct');
model.sol('sol3').feature('s2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s2').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s2').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol3').feature('s2').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol3').feature('s2').feature('se1').feature('ss1').label('Velocity u, Pressure p');
model.sol('sol3').feature('s2').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol3').feature('s2').feature('se1').feature('ss2').set('segvar', {'comp1_T' 'comp1_nitf1_TWall_d' 'comp1_nitf1_TWall_u'});
model.sol('sol3').feature('s2').feature('se1').feature('ss2').set('subdamp', 0.5);
model.sol('sol3').feature('s2').create('d2', 'Direct');
model.sol('sol3').feature('s2').feature('d2').set('linsolver', 'pardiso');
model.sol('sol3').feature('s2').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s2').feature('d2').label('Direct, heat transfer variables (ht)');
model.sol('sol3').feature('s2').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol3').feature('s2').feature('se1').feature('ss2').label('Temperature');
model.sol('sol3').feature('s2').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol3').feature('s2').feature('se1').feature('ss3').set('segvar', {'comp1_k' 'comp1_ep'});
model.sol('sol3').feature('s2').feature('se1').feature('ss3').set('subdamp', 0.45);
model.sol('sol3').feature('s2').feature('se1').feature('ss3').set('subiter', 3);
model.sol('sol3').feature('s2').feature('se1').feature('ss3').set('subtermconst', 'itertol');
model.sol('sol3').feature('s2').feature('se1').feature('ss3').set('subntolfact', 1);
model.sol('sol3').feature('s2').create('d3', 'Direct');
model.sol('sol3').feature('s2').feature('d3').set('linsolver', 'pardiso');
model.sol('sol3').feature('s2').feature('d3').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s2').feature('d3').label('Direct, turbulence variables (spf)');
model.sol('sol3').feature('s2').feature('se1').feature('ss3').set('linsolver', 'd3');
model.sol('sol3').feature('s2').feature('se1').feature('ss3').label('Turbulence Variables');
model.sol('sol3').feature('s2').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol3').feature('s2').feature('se1').set('subinitcfl', 3);
model.sol('sol3').feature('s2').feature('se1').set('submincfl', 10000);
model.sol('sol3').feature('s2').feature('se1').set('subkppid', 0.65);
model.sol('sol3').feature('s2').feature('se1').set('subkdpid', 0.15);
model.sol('sol3').feature('s2').feature('se1').set('subkipid', 0.15);
model.sol('sol3').feature('s2').feature('se1').set('subcfltol', 0.1);
model.sol('sol3').feature('s2').feature('se1').set('segcflaa', true);
model.sol('sol3').feature('s2').feature('se1').set('segcflaacfl', 9000);
model.sol('sol3').feature('s2').feature('se1').set('segcflaafact', 1);
model.sol('sol3').feature('s2').feature('se1').set('maxsegiter', 300);
model.sol('sol3').feature('s2').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol3').feature('s2').feature('se1').feature('ll1').set('lowerlimit', 'comp1.k 0 comp1.ep 0 comp1.T 0 ');
model.sol('sol3').feature('s2').create('i1', 'Iterative');
model.sol('sol3').feature('s2').feature('i1').set('linsolver', 'gmres');
model.sol('sol3').feature('s2').feature('i1').set('prefuntype', 'left');
model.sol('sol3').feature('s2').feature('i1').set('itrestart', 50);
model.sol('sol3').feature('s2').feature('i1').set('rhob', 20);
model.sol('sol3').feature('s2').feature('i1').set('maxlinit', 1000);
model.sol('sol3').feature('s2').feature('i1').set('nlinnormuse', 'on');
model.sol('sol3').feature('s2').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol3').feature('s2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol3').feature('s2').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol3').feature('s2').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol3').feature('s2').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol3').feature('s2').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s2').create('i2', 'Iterative');
model.sol('sol3').feature('s2').feature('i2').set('linsolver', 'gmres');
model.sol('sol3').feature('s2').feature('i2').set('prefuntype', 'left');
model.sol('sol3').feature('s2').feature('i2').set('itrestart', 50);
model.sol('sol3').feature('s2').feature('i2').set('rhob', 20);
model.sol('sol3').feature('s2').feature('i2').set('maxlinit', 10000);
model.sol('sol3').feature('s2').feature('i2').set('nlinnormuse', 'on');
model.sol('sol3').feature('s2').feature('i2').label('AMG, heat transfer variables (ht)');
model.sol('sol3').feature('s2').feature('i2').create('mg1', 'Multigrid');
model.sol('sol3').feature('s2').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol3').feature('s2').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol3').feature('s2').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol3').feature('s2').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol3').feature('s2').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol3').feature('s2').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol3').feature('s2').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol3').feature('s2').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol3').feature('s2').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol3').feature('s2').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol3').feature('s2').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol3').feature('s2').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol3').feature('s2').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol3').feature('s2').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol3').feature('s2').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol3').feature('s2').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol3').feature('s2').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s2').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s2').create('i3', 'Iterative');
model.sol('sol3').feature('s2').feature('i3').set('linsolver', 'gmres');
model.sol('sol3').feature('s2').feature('i3').set('prefuntype', 'left');
model.sol('sol3').feature('s2').feature('i3').set('itrestart', 50);
model.sol('sol3').feature('s2').feature('i3').set('rhob', 20);
model.sol('sol3').feature('s2').feature('i3').set('maxlinit', 1000);
model.sol('sol3').feature('s2').feature('i3').set('nlinnormuse', 'on');
model.sol('sol3').feature('s2').feature('i3').label('AMG, turbulence variables (spf)');
model.sol('sol3').feature('s2').feature('i3').create('mg1', 'Multigrid');
model.sol('sol3').feature('s2').feature('i3').feature('mg1').set('prefun', 'saamg');
model.sol('sol3').feature('s2').feature('i3').feature('mg1').set('mgcycle', 'v');
model.sol('sol3').feature('s2').feature('i3').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol3').feature('s2').feature('i3').feature('mg1').set('strconn', 0.01);
model.sol('sol3').feature('s2').feature('i3').feature('mg1').set('nullspace', 'constant');
model.sol('sol3').feature('s2').feature('i3').feature('mg1').set('usesmooth', false);
model.sol('sol3').feature('s2').feature('i3').feature('mg1').set('saamgcompwise', true);
model.sol('sol3').feature('s2').feature('i3').feature('mg1').set('loweramg', true);
model.sol('sol3').feature('s2').feature('i3').feature('mg1').set('compactaggregation', false);
model.sol('sol3').feature('s2').feature('i3').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol3').feature('s2').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol3').feature('s2').feature('i3').feature('mg1').feature('pr').feature('sl1').set('iter', 0);
model.sol('sol3').feature('s2').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol3').feature('s2').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol3').feature('s2').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol3').feature('s2').feature('i3').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol3').feature('s2').feature('i3').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol3').feature('s2').feature('i3').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol3').feature('s2').feature('i3').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol3').feature('s2').feature('i3').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol3').feature('s2').feature('i3').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol3').feature('s2').feature('i3').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol3').feature('s2').feature('i3').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol3').feature('s2').feature('i3').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol3').feature('s2').feature('i3').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol3').feature('s2').feature('i3').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol3').feature('s2').feature('i3').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s2').feature('i3').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s2').feature.remove('fcDef');
model.sol('sol3').feature('s2').feature.remove('seDef');
model.sol('sol3').feature('v2').set('notsolnum', 'auto');
model.sol('sol3').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol3').attach('std3');
model.sol('sol3').feature('s2').feature('se1').set('segstabacc', 'segaacc');
model.sol('sol3').runAll;

model.result.dataset('dset3').set('geom', 'geom1');
model.result.create('pg6', 'PlotGroup2D');
model.result('pg6').label('Velocity (spf)');
model.result('pg6').set('data', 'dset3');
model.result('pg6').setIndex('looplevel', 1, 0);
model.result('pg6').set('dataisaxisym', 'off');
model.result('pg6').set('frametype', 'spatial');
model.result('pg6').set('data', 'dset3');
model.result('pg6').setIndex('looplevel', 1, 0);
model.result('pg6').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg1');
model.result('pg6').feature.create('surf1', 'Surface');
model.result('pg6').feature('surf1').label('Surface');
model.result('pg6').feature('surf1').set('showsolutionparams', 'on');
model.result('pg6').feature('surf1').set('smooth', 'internal');
model.result('pg6').feature('surf1').set('showsolutionparams', 'on');
model.result('pg6').feature('surf1').set('data', 'parent');
model.result.create('pg7', 'PlotGroup2D');
model.result('pg7').label('Pressure (spf)');
model.result('pg7').set('data', 'dset3');
model.result('pg7').setIndex('looplevel', 1, 0);
model.result('pg7').set('dataisaxisym', 'off');
model.result('pg7').set('frametype', 'spatial');
model.result('pg7').set('data', 'dset3');
model.result('pg7').setIndex('looplevel', 1, 0);
model.result('pg7').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg2');
model.result('pg7').feature.create('con1', 'Contour');
model.result('pg7').feature('con1').label('Contour');
model.result('pg7').feature('con1').set('showsolutionparams', 'on');
model.result('pg7').feature('con1').set('expr', 'p');
model.result('pg7').feature('con1').set('number', 40);
model.result('pg7').feature('con1').set('levelrounding', false);
model.result('pg7').feature('con1').set('smooth', 'internal');
model.result('pg7').feature('con1').set('showsolutionparams', 'on');
model.result('pg7').feature('con1').set('data', 'parent');
model.result.dataset.create('rev1', 'Revolve2D');
model.result.dataset('rev1').label('Revolution 2D');
model.result.dataset('rev1').set('data', 'none');
model.result.dataset('rev1').set('startangle', -90);
model.result.dataset('rev1').set('revangle', 225);
model.result.dataset('rev1').set('data', 'dset3');
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').label('Velocity, 3D (spf)');
model.result('pg8').set('frametype', 'spatial');
model.result('pg8').set('data', 'rev1');
model.result('pg8').setIndex('looplevel', 1, 0);
model.result('pg8').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pcond1/pg1');
model.result('pg8').feature.create('surf1', 'Surface');
model.result('pg8').feature('surf1').label('Surface');
model.result('pg8').feature('surf1').set('showsolutionparams', 'on');
model.result('pg8').feature('surf1').set('smooth', 'internal');
model.result('pg8').feature('surf1').set('showsolutionparams', 'on');
model.result('pg8').feature('surf1').set('data', 'parent');
model.result.dataset.create('edg1', 'Edge2D');
model.result.dataset('edg1').label('Exterior Walls');
model.result.dataset('edg1').set('data', 'dset3');
model.result.dataset('edg1').selection.geom('geom1', 1);
model.result.dataset('edg1').selection.set([5 9 10 12 13 14 15 16 17 18 19 20 21 22 23]);
model.result.create('pg9', 'PlotGroup2D');
model.result('pg9').label('Wall Resolution (spf)');
model.result('pg9').set('data', 'dset3');
model.result('pg9').setIndex('looplevel', 1, 0);
model.result('pg9').set('dataisaxisym', 'off');
model.result('pg9').set('frametype', 'spatial');
model.result('pg9').set('data', 'dset3');
model.result('pg9').setIndex('looplevel', 1, 0);
model.result('pg9').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pcond2/pcond4/pg2');
model.result('pg9').feature.create('line1', 'Line');
model.result('pg9').feature('line1').label('Wall Resolution');
model.result('pg9').feature('line1').set('showsolutionparams', 'on');
model.result('pg9').feature('line1').set('expr', 'spf.Delta_wPlus');
model.result('pg9').feature('line1').set('linetype', 'tube');
model.result('pg9').feature('line1').set('smooth', 'internal');
model.result('pg9').feature('line1').set('showsolutionparams', 'on');
model.result('pg9').feature('line1').set('data', 'parent');
model.result('pg9').feature('line1').feature.create('hght1', 'Height');
model.result('pg9').feature('line1').feature('hght1').label('Height Expression');
model.result('pg9').feature('line1').feature('hght1').set('heightdata', 'expr');
model.result('pg9').feature('line1').feature('hght1').set('expr', 'spf.WRHeightExpr');
model.result.create('pg10', 'PlotGroup2D');
model.result('pg10').label('Temperature (ht)');
model.result('pg10').set('data', 'dset3');
model.result('pg10').setIndex('looplevel', 1, 0);
model.result('pg10').set('dataisaxisym', 'off');
model.result('pg10').set('data', 'dset3');
model.result('pg10').setIndex('looplevel', 1, 0);
model.result('pg10').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pg2');
model.result('pg10').feature.create('surf1', 'Surface');
model.result('pg10').feature('surf1').set('showsolutionparams', 'on');
model.result('pg10').feature('surf1').set('solutionparams', 'parent');
model.result('pg10').feature('surf1').set('expr', 'T');
model.result('pg10').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg10').feature('surf1').set('showsolutionparams', 'on');
model.result('pg10').feature('surf1').set('data', 'parent');
model.result.create('pg11', 'PlotGroup2D');
model.result('pg11').label('Temperature and Fluid Flow (nitf1)');
model.result('pg11').set('data', 'dset3');
model.result('pg11').setIndex('looplevel', 1, 0);
model.result('pg11').set('dataisaxisym', 'off');
model.result('pg11').set('showlegendsunit', true);
model.result('pg11').set('data', 'dset3');
model.result('pg11').setIndex('looplevel', 1, 0);
model.result('pg11').set('defaultPlotID', 'MultiphysicsNonIsothermalFlow/cfcom1/pdef1/pcond4/pcond4/pcond4/pcond1/pg2');
model.result('pg11').feature.create('surf1', 'Surface');
model.result('pg11').feature('surf1').label('Fluid Temperature');
model.result('pg11').feature('surf1').set('showsolutionparams', 'on');
model.result('pg11').feature('surf1').set('solutionparams', 'parent');
model.result('pg11').feature('surf1').set('expr', 'nitf1.T');
model.result('pg11').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg11').feature('surf1').set('smooth', 'internal');
model.result('pg11').feature('surf1').set('showsolutionparams', 'on');
model.result('pg11').feature('surf1').set('data', 'parent');
model.result('pg11').feature('surf1').feature.create('sel1', 'Selection');
model.result('pg11').feature('surf1').feature('sel1').selection.geom('geom1', 2);
model.result('pg11').feature('surf1').feature('sel1').selection.set([1]);
model.result('pg11').feature.create('surf2', 'Surface');
model.result('pg11').feature('surf2').label('Solid Temperature');
model.result('pg11').feature('surf2').set('showsolutionparams', 'on');
model.result('pg11').feature('surf2').set('solutionparams', 'parent');
model.result('pg11').feature('surf2').set('expr', 'nitf1.T');
model.result('pg11').feature('surf2').set('smooth', 'internal');
model.result('pg11').feature('surf2').set('showsolutionparams', 'on');
model.result('pg11').feature('surf2').set('data', 'parent');
model.result('pg11').feature('surf2').feature.create('sel1', 'Selection');
model.result('pg11').feature('surf2').feature('sel1').selection.geom('geom1', 2);
model.result('pg11').feature('surf2').feature('sel1').selection.set([2]);
model.result('pg11').feature('surf2').set('inheritplot', 'surf1');
model.result('pg11').feature.create('arws1', 'ArrowSurface');
model.result('pg11').feature('arws1').label('Fluid Flow');
model.result('pg11').feature('arws1').set('showsolutionparams', 'on');
model.result('pg11').feature('arws1').set('solutionparams', 'parent');
model.result('pg11').feature('arws1').set('expr', {'nitf1.ur' 'nitf1.uz'});
model.result('pg11').feature('arws1').set('xnumber', 30);
model.result('pg11').feature('arws1').set('ynumber', 30);
model.result('pg11').feature('arws1').set('arrowtype', 'cone');
model.result('pg11').feature('arws1').set('arrowlength', 'logarithmic');
model.result('pg11').feature('arws1').set('showsolutionparams', 'on');
model.result('pg11').feature('arws1').set('data', 'parent');
model.result('pg11').feature('arws1').feature.create('col1', 'Color');
model.result('pg11').feature('arws1').feature('col1').set('showcolordata', 'off');
model.result('pg11').feature('arws1').feature.create('filt1', 'Filter');
model.result('pg11').feature('arws1').feature('filt1').set('expr', 'spf.U>nitf1.Uave');
model.result('pg6').run;
model.result('pg8').run;
model.result('pg6').run;
model.result.remove('pg6');
model.result.remove('pg7');
model.result.remove('pg10');
model.result.remove('pg11');
model.result('pg8').run;
model.result.create('pg10', 'PlotGroup2D');
model.result('pg10').run;
model.result('pg10').set('data', 'dset3');
model.result('pg10').create('surf1', 'Surface');
model.result('pg10').feature('surf1').set('expr', 'T');
model.result('pg10').run;
model.result('pg10').feature('surf1').set('rangecoloractive', true);
model.result('pg10').feature('surf1').set('rangecolormax', 400);
model.result('pg10').run;
model.result('pg10').run;
model.result('pg10').label('Temperature');
model.result('pg10').set('titletype', 'manual');
model.result('pg10').set('title', 'Temperature (K)');
model.result('pg10').set('xlabelactive', true);
model.result('pg10').set('xlabel', 'r (m)');
model.result('pg10').set('ylabelactive', true);
model.result('pg10').set('ylabel', 'Temperature (K)');

model.study.create('std4');
model.study('std4').create('stat', 'Stationary');
model.study('std4').feature('stat').setSolveFor('/physics/spf', true);
model.study('std4').feature('stat').setSolveFor('/physics/ht', true);
model.study('std4').feature('stat').setSolveFor('/multiphysics/nitf1', true);
model.study('std4').feature('stat').set('useparam', true);
model.study('std4').feature('stat').setIndex('pname', 'w_EG', 0);
model.study('std4').feature('stat').setIndex('plistarr', '', 0);
model.study('std4').feature('stat').setIndex('punit', '', 0);
model.study('std4').feature('stat').setIndex('pname', 'w_EG', 0);
model.study('std4').feature('stat').setIndex('plistarr', '', 0);
model.study('std4').feature('stat').setIndex('punit', '', 0);
model.study('std4').feature('stat').setIndex('pname', 'w_W', 1);
model.study('std4').feature('stat').setIndex('plistarr', '', 1);
model.study('std4').feature('stat').setIndex('punit', '', 1);
model.study('std4').feature('stat').setIndex('pname', 'w_W', 1);
model.study('std4').feature('stat').setIndex('plistarr', '', 1);
model.study('std4').feature('stat').setIndex('punit', '', 1);
model.study('std4').feature('stat').setIndex('pname', 'w_EG', 0);
model.study('std4').feature('stat').setIndex('plistarr', 0.527, 0);
model.study('std4').feature('stat').setIndex('pname', 'Vel', 1);
model.study('std4').feature('stat').setIndex('plistarr', 1, 1);
model.study('std4').feature.duplicate('stat1', 'stat');
model.study('std4').feature('stat1').setIndex('plistarr', 1.15, 1);
model.study('std4').feature('stat').set('useinitsol', true);
model.study('std4').feature('stat').set('initmethod', 'sol');
model.study('std4').feature('stat').set('initstudy', 'std3');

model.sol.create('sol5');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol5').study('std4');
model.sol('sol5').create('st1', 'StudyStep');
model.sol('sol5').feature('st1').set('study', 'std4');
model.sol('sol5').feature('st1').set('studystep', 'stat');
model.sol('sol5').create('v1', 'Variables');
model.sol('sol5').feature('v1').set('control', 'stat');
model.sol('sol5').create('s1', 'Stationary');
model.sol('sol5').feature('s1').create('p1', 'Parametric');
model.sol('sol5').feature('s1').feature.remove('pDef');
model.sol('sol5').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol5').feature('s1').set('control', 'stat');
model.sol('sol5').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol5').feature('s1').create('seDef', 'Segregated');
model.sol('sol5').feature('s1').create('se1', 'Segregated');
model.sol('sol5').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol5').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol5').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_p' 'comp1_u'});
model.sol('sol5').feature('s1').feature('se1').feature('ss1').set('subdamp', 0.5);
model.sol('sol5').feature('s1').create('d1', 'Direct');
model.sol('sol5').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s1').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol5').feature('s1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol5').feature('s1').feature('se1').feature('ss1').label('Velocity u, Pressure p');
model.sol('sol5').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol5').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_T' 'comp1_nitf1_TWall_d' 'comp1_nitf1_TWall_u'});
model.sol('sol5').feature('s1').feature('se1').feature('ss2').set('subdamp', 0.5);
model.sol('sol5').feature('s1').create('d2', 'Direct');
model.sol('sol5').feature('s1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol5').feature('s1').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s1').feature('d2').label('Direct, heat transfer variables (ht)');
model.sol('sol5').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol5').feature('s1').feature('se1').feature('ss2').label('Temperature');
model.sol('sol5').feature('s1').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol5').feature('s1').feature('se1').feature('ss3').set('segvar', {'comp1_k' 'comp1_ep'});
model.sol('sol5').feature('s1').feature('se1').feature('ss3').set('subdamp', 0.45);
model.sol('sol5').feature('s1').feature('se1').feature('ss3').set('subiter', 3);
model.sol('sol5').feature('s1').feature('se1').feature('ss3').set('subtermconst', 'itertol');
model.sol('sol5').feature('s1').feature('se1').feature('ss3').set('subntolfact', 1);
model.sol('sol5').feature('s1').create('d3', 'Direct');
model.sol('sol5').feature('s1').feature('d3').set('linsolver', 'pardiso');
model.sol('sol5').feature('s1').feature('d3').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s1').feature('d3').label('Direct, turbulence variables (spf)');
model.sol('sol5').feature('s1').feature('se1').feature('ss3').set('linsolver', 'd3');
model.sol('sol5').feature('s1').feature('se1').feature('ss3').label('Turbulence Variables');
model.sol('sol5').feature('s1').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol5').feature('s1').feature('se1').set('subinitcfl', 3);
model.sol('sol5').feature('s1').feature('se1').set('submincfl', 10000);
model.sol('sol5').feature('s1').feature('se1').set('subkppid', 0.65);
model.sol('sol5').feature('s1').feature('se1').set('subkdpid', 0.15);
model.sol('sol5').feature('s1').feature('se1').set('subkipid', 0.15);
model.sol('sol5').feature('s1').feature('se1').set('subcfltol', 0.1);
model.sol('sol5').feature('s1').feature('se1').set('segcflaa', true);
model.sol('sol5').feature('s1').feature('se1').set('segcflaacfl', 9000);
model.sol('sol5').feature('s1').feature('se1').set('segcflaafact', 1);
model.sol('sol5').feature('s1').feature('se1').set('maxsegiter', 300);
model.sol('sol5').feature('s1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol5').feature('s1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.k 0 comp1.ep 0 comp1.T 0 ');
model.sol('sol5').feature('s1').create('i1', 'Iterative');
model.sol('sol5').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol5').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol5').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol5').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol5').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol5').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol5').feature('s1').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol5').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s1').create('i2', 'Iterative');
model.sol('sol5').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol5').feature('s1').feature('i2').set('prefuntype', 'left');
model.sol('sol5').feature('s1').feature('i2').set('itrestart', 50);
model.sol('sol5').feature('s1').feature('i2').set('rhob', 20);
model.sol('sol5').feature('s1').feature('i2').set('maxlinit', 10000);
model.sol('sol5').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol5').feature('s1').feature('i2').label('AMG, heat transfer variables (ht)');
model.sol('sol5').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol5').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol5').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol5').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol5').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s1').create('i3', 'Iterative');
model.sol('sol5').feature('s1').feature('i3').set('linsolver', 'gmres');
model.sol('sol5').feature('s1').feature('i3').set('prefuntype', 'left');
model.sol('sol5').feature('s1').feature('i3').set('itrestart', 50);
model.sol('sol5').feature('s1').feature('i3').set('rhob', 20);
model.sol('sol5').feature('s1').feature('i3').set('maxlinit', 1000);
model.sol('sol5').feature('s1').feature('i3').set('nlinnormuse', 'on');
model.sol('sol5').feature('s1').feature('i3').label('AMG, turbulence variables (spf)');
model.sol('sol5').feature('s1').feature('i3').create('mg1', 'Multigrid');
model.sol('sol5').feature('s1').feature('i3').feature('mg1').set('prefun', 'saamg');
model.sol('sol5').feature('s1').feature('i3').feature('mg1').set('mgcycle', 'v');
model.sol('sol5').feature('s1').feature('i3').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol5').feature('s1').feature('i3').feature('mg1').set('strconn', 0.01);
model.sol('sol5').feature('s1').feature('i3').feature('mg1').set('nullspace', 'constant');
model.sol('sol5').feature('s1').feature('i3').feature('mg1').set('usesmooth', false);
model.sol('sol5').feature('s1').feature('i3').feature('mg1').set('saamgcompwise', true);
model.sol('sol5').feature('s1').feature('i3').feature('mg1').set('loweramg', true);
model.sol('sol5').feature('s1').feature('i3').feature('mg1').set('compactaggregation', false);
model.sol('sol5').feature('s1').feature('i3').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol5').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol5').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('iter', 0);
model.sol('sol5').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol5').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol5').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol5').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol5').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol5').feature('s1').feature('i3').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol5').feature('s1').feature('i3').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol5').feature('s1').feature('i3').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol5').feature('s1').feature('i3').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol5').feature('s1').feature('i3').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol5').feature('s1').feature('i3').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol5').feature('s1').feature('i3').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol5').feature('s1').feature('i3').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol5').feature('s1').feature('i3').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol5').feature('s1').feature('i3').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s1').feature('i3').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s1').feature.remove('fcDef');
model.sol('sol5').feature('s1').feature.remove('seDef');
model.sol('sol5').create('su1', 'StoreSolution');
model.sol('sol5').create('st2', 'StudyStep');
model.sol('sol5').feature('st2').set('study', 'std4');
model.sol('sol5').feature('st2').set('studystep', 'stat1');
model.sol('sol5').create('v2', 'Variables');
model.sol('sol5').feature('v2').set('initmethod', 'sol');
model.sol('sol5').feature('v2').set('initsol', 'sol5');
model.sol('sol5').feature('v2').set('initsoluse', 'sol6');
model.sol('sol5').feature('v2').set('notsolmethod', 'sol');
model.sol('sol5').feature('v2').set('notsol', 'sol5');
model.sol('sol5').feature('v2').set('control', 'stat1');
model.sol('sol5').create('s2', 'Stationary');
model.sol('sol5').feature('s2').create('p1', 'Parametric');
model.sol('sol5').feature('s2').feature.remove('pDef');
model.sol('sol5').feature('s2').feature('p1').set('control', 'stat1');
model.sol('sol5').feature('s2').set('control', 'stat1');
model.sol('sol5').feature('s2').feature('aDef').set('cachepattern', true);
model.sol('sol5').feature('s2').create('seDef', 'Segregated');
model.sol('sol5').feature('s2').create('se1', 'Segregated');
model.sol('sol5').feature('s2').feature('se1').feature.remove('ssDef');
model.sol('sol5').feature('s2').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol5').feature('s2').feature('se1').feature('ss1').set('segvar', {'comp1_p' 'comp1_u'});
model.sol('sol5').feature('s2').feature('se1').feature('ss1').set('subdamp', 0.5);
model.sol('sol5').feature('s2').create('d1', 'Direct');
model.sol('sol5').feature('s2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s2').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s2').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol5').feature('s2').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol5').feature('s2').feature('se1').feature('ss1').label('Velocity u, Pressure p');
model.sol('sol5').feature('s2').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol5').feature('s2').feature('se1').feature('ss2').set('segvar', {'comp1_T' 'comp1_nitf1_TWall_d' 'comp1_nitf1_TWall_u'});
model.sol('sol5').feature('s2').feature('se1').feature('ss2').set('subdamp', 0.5);
model.sol('sol5').feature('s2').create('d2', 'Direct');
model.sol('sol5').feature('s2').feature('d2').set('linsolver', 'pardiso');
model.sol('sol5').feature('s2').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s2').feature('d2').label('Direct, heat transfer variables (ht)');
model.sol('sol5').feature('s2').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol5').feature('s2').feature('se1').feature('ss2').label('Temperature');
model.sol('sol5').feature('s2').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol5').feature('s2').feature('se1').feature('ss3').set('segvar', {'comp1_k' 'comp1_ep'});
model.sol('sol5').feature('s2').feature('se1').feature('ss3').set('subdamp', 0.45);
model.sol('sol5').feature('s2').feature('se1').feature('ss3').set('subiter', 3);
model.sol('sol5').feature('s2').feature('se1').feature('ss3').set('subtermconst', 'itertol');
model.sol('sol5').feature('s2').feature('se1').feature('ss3').set('subntolfact', 1);
model.sol('sol5').feature('s2').create('d3', 'Direct');
model.sol('sol5').feature('s2').feature('d3').set('linsolver', 'pardiso');
model.sol('sol5').feature('s2').feature('d3').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s2').feature('d3').label('Direct, turbulence variables (spf)');
model.sol('sol5').feature('s2').feature('se1').feature('ss3').set('linsolver', 'd3');
model.sol('sol5').feature('s2').feature('se1').feature('ss3').label('Turbulence Variables');
model.sol('sol5').feature('s2').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol5').feature('s2').feature('se1').set('subinitcfl', 3);
model.sol('sol5').feature('s2').feature('se1').set('submincfl', 10000);
model.sol('sol5').feature('s2').feature('se1').set('subkppid', 0.65);
model.sol('sol5').feature('s2').feature('se1').set('subkdpid', 0.15);
model.sol('sol5').feature('s2').feature('se1').set('subkipid', 0.15);
model.sol('sol5').feature('s2').feature('se1').set('subcfltol', 0.1);
model.sol('sol5').feature('s2').feature('se1').set('segcflaa', true);
model.sol('sol5').feature('s2').feature('se1').set('segcflaacfl', 9000);
model.sol('sol5').feature('s2').feature('se1').set('segcflaafact', 1);
model.sol('sol5').feature('s2').feature('se1').set('maxsegiter', 300);
model.sol('sol5').feature('s2').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol5').feature('s2').feature('se1').feature('ll1').set('lowerlimit', 'comp1.k 0 comp1.ep 0 comp1.T 0 ');
model.sol('sol5').feature('s2').create('i1', 'Iterative');
model.sol('sol5').feature('s2').feature('i1').set('linsolver', 'gmres');
model.sol('sol5').feature('s2').feature('i1').set('prefuntype', 'left');
model.sol('sol5').feature('s2').feature('i1').set('itrestart', 50);
model.sol('sol5').feature('s2').feature('i1').set('rhob', 20);
model.sol('sol5').feature('s2').feature('i1').set('maxlinit', 1000);
model.sol('sol5').feature('s2').feature('i1').set('nlinnormuse', 'on');
model.sol('sol5').feature('s2').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol5').feature('s2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s2').create('i2', 'Iterative');
model.sol('sol5').feature('s2').feature('i2').set('linsolver', 'gmres');
model.sol('sol5').feature('s2').feature('i2').set('prefuntype', 'left');
model.sol('sol5').feature('s2').feature('i2').set('itrestart', 50);
model.sol('sol5').feature('s2').feature('i2').set('rhob', 20);
model.sol('sol5').feature('s2').feature('i2').set('maxlinit', 10000);
model.sol('sol5').feature('s2').feature('i2').set('nlinnormuse', 'on');
model.sol('sol5').feature('s2').feature('i2').label('AMG, heat transfer variables (ht)');
model.sol('sol5').feature('s2').feature('i2').create('mg1', 'Multigrid');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s2').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s2').create('i3', 'Iterative');
model.sol('sol5').feature('s2').feature('i3').set('linsolver', 'gmres');
model.sol('sol5').feature('s2').feature('i3').set('prefuntype', 'left');
model.sol('sol5').feature('s2').feature('i3').set('itrestart', 50);
model.sol('sol5').feature('s2').feature('i3').set('rhob', 20);
model.sol('sol5').feature('s2').feature('i3').set('maxlinit', 1000);
model.sol('sol5').feature('s2').feature('i3').set('nlinnormuse', 'on');
model.sol('sol5').feature('s2').feature('i3').label('AMG, turbulence variables (spf)');
model.sol('sol5').feature('s2').feature('i3').create('mg1', 'Multigrid');
model.sol('sol5').feature('s2').feature('i3').feature('mg1').set('prefun', 'saamg');
model.sol('sol5').feature('s2').feature('i3').feature('mg1').set('mgcycle', 'v');
model.sol('sol5').feature('s2').feature('i3').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol5').feature('s2').feature('i3').feature('mg1').set('strconn', 0.01);
model.sol('sol5').feature('s2').feature('i3').feature('mg1').set('nullspace', 'constant');
model.sol('sol5').feature('s2').feature('i3').feature('mg1').set('usesmooth', false);
model.sol('sol5').feature('s2').feature('i3').feature('mg1').set('saamgcompwise', true);
model.sol('sol5').feature('s2').feature('i3').feature('mg1').set('loweramg', true);
model.sol('sol5').feature('s2').feature('i3').feature('mg1').set('compactaggregation', false);
model.sol('sol5').feature('s2').feature('i3').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol5').feature('s2').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol5').feature('s2').feature('i3').feature('mg1').feature('pr').feature('sl1').set('iter', 0);
model.sol('sol5').feature('s2').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol5').feature('s2').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol5').feature('s2').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol5').feature('s2').feature('i3').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol5').feature('s2').feature('i3').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol5').feature('s2').feature('i3').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol5').feature('s2').feature('i3').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol5').feature('s2').feature('i3').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol5').feature('s2').feature('i3').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol5').feature('s2').feature('i3').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol5').feature('s2').feature('i3').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol5').feature('s2').feature('i3').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol5').feature('s2').feature('i3').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol5').feature('s2').feature('i3').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol5').feature('s2').feature('i3').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s2').feature('i3').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s2').feature.remove('fcDef');
model.sol('sol5').feature('s2').feature.remove('seDef');
model.sol('sol5').feature('v2').set('notsolnum', 'auto');
model.sol('sol5').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol5').attach('std4');
model.sol('sol5').feature('s1').feature('se1').set('segstabacc', 'segaacc');
model.sol('sol5').feature('s2').feature('se1').set('segstabacc', 'segaacc');

model.study('std4').label('Study 4: Glycol and Water');
model.study('std4').setGenPlots(false);

model.sol('sol5').runAll;
model.sol('sol5').feature('su1').label('Vel = 1.0 m/s');
model.sol('sol5').label('Vel = 1.15 m/s');

model.result('pg10').run;
model.result('pg10').set('data', 'dset6');
model.result('pg10').run;
model.result('pg10').set('data', 'dset5');
model.result('pg10').run;
model.result.dataset.create('cln1', 'CutLine2D');
model.result.dataset('cln1').setIndex('genpoints', 'r_c*0.5', 0, 0);
model.result.dataset('cln1').setIndex('genpoints', 'r_c*0.5', 1, 0);
model.result.dataset('cln1').setIndex('genpoints', 1, 1, 1);
model.result.dataset('cln1').set('data', 'dset3');
model.result.dataset.duplicate('cln2', 'cln1');
model.result.dataset('cln2').set('data', 'dset6');
model.result.dataset.duplicate('cln3', 'cln2');
model.result.dataset('cln3').set('data', 'dset5');
model.result.create('pg11', 'PlotGroup1D');
model.result('pg11').run;
model.result('pg11').create('lngr1', 'LineGraph');
model.result('pg11').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg11').feature('lngr1').set('linewidth', 'preference');
model.result('pg11').feature('lngr1').set('data', 'cln1');
model.result('pg11').feature('lngr1').set('expr', 'ht.Cp');
model.result('pg11').run;
model.result('pg11').feature('lngr1').set('legend', true);
model.result('pg11').feature('lngr1').set('legendmethod', 'manual');
model.result('pg11').feature('lngr1').setIndex('legends', 'Water', 0);
model.result('pg11').run;
model.result('pg11').feature.duplicate('lngr2', 'lngr1');
model.result('pg11').run;
model.result('pg11').feature('lngr2').set('data', 'cln2');
model.result('pg11').feature('lngr2').setIndex('legends', 'Glycol/Water', 0);
model.result('pg11').run;
model.result('pg11').feature.duplicate('lngr3', 'lngr2');
model.result('pg11').run;
model.result('pg11').feature('lngr3').set('data', 'cln3');
model.result('pg11').feature('lngr3').setIndex('legends', 'Glycol/Water, Vel = 1.15 m/s', 0);
model.result('pg11').run;
model.result('pg11').run;
model.result('pg11').set('legendpos', 'middleright');
model.result('pg11').set('titletype', 'none');
model.result('pg11').label('Heat Capacity, Chamber Cut Line');
model.result.numerical.create('av1', 'AvSurface');
model.result.numerical('av1').set('intvolume', true);
model.result.numerical('av1').set('data', 'dset6');
model.result.numerical('av1').selection.set([1]);
model.result.numerical('av1').setIndex('expr', 'ht.rho', 0);
model.result.numerical('av1').setIndex('unit', 'kg/m^3', 0);
model.result.numerical('av1').setIndex('descr', 'Density', 0);
model.result.numerical('av1').setIndex('expr', 'ht.Cp', 1);
model.result.numerical('av1').setIndex('unit', 'J/(kg*K)', 1);
model.result.numerical('av1').setIndex('descr', 'Heat capacity at constant pressure', 1);
model.result.numerical('av1').setIndex('expr', 'ht.krr', 2);
model.result.numerical('av1').setIndex('unit', 'W/(m*K)', 2);
model.result.numerical('av1').setIndex('descr', 'Thermal conductivity, rr component', 2);
model.result.numerical('av1').setIndex('expr', 'spf.mu', 3);
model.result.numerical('av1').setIndex('unit', 'Pa*s', 3);
model.result.numerical('av1').setIndex('descr', 'Dynamic viscosity', 3);
model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').comments('Surface Average 1');
model.result.numerical('av1').set('table', 'tbl1');
model.result.numerical('av1').setResult;

model.param.set('rhoC', '1010[kg/m^3]');
model.param.descr('rhoC', 'Average constant density');
model.param.set('CpC', '3486[J/kg/K]');
model.param.descr('CpC', 'Average constant heat capacity');
model.param.set('kC', '0.574[W/m/K]');
model.param.descr('kC', 'Average constant conductivity');
model.param.set('muC', '9.07e-4[Pa*s]');
model.param.descr('muC', 'Average constant viscosity');

model.physics('ht').feature('fluid1').set('k_mat', 'userdef');
model.physics('ht').feature('fluid1').set('k', {'kC' '0' '0' '0' 'kC' '0' '0' '0' 'kC'});
model.physics('ht').feature('fluid1').set('fluidType', 'gasLiquid');
model.physics('ht').feature('fluid1').set('rho_mat', 'userdef');
model.physics('ht').feature('fluid1').set('rho', 'rhoC');
model.physics('ht').feature('fluid1').set('Cp_mat', 'userdef');
model.physics('ht').feature('fluid1').set('Cp', 'CpC');
model.physics('spf').feature('fp1').set('mu_mat', 'userdef');
model.physics('spf').feature('fp1').set('mu', 'muC');

model.study.create('std5');
model.study('std5').create('stat', 'Stationary');
model.study('std5').feature('stat').setSolveFor('/physics/spf', true);
model.study('std5').feature('stat').setSolveFor('/physics/ht', true);
model.study('std5').feature('stat').setSolveFor('/multiphysics/nitf1', true);
model.study('std5').feature('stat').set('useinitsol', true);
model.study('std5').feature('stat').set('initmethod', 'sol');
model.study('std5').feature('stat').set('initstudy', 'std3');
model.study('std5').label('Study 5: Glycol and Water, Constant Properties');
model.study('std5').setGenPlots(false);

model.sol.create('sol7');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol7').study('std5');
model.sol('sol7').create('st1', 'StudyStep');
model.sol('sol7').feature('st1').set('study', 'std5');
model.sol('sol7').feature('st1').set('studystep', 'stat');
model.sol('sol7').create('v1', 'Variables');
model.sol('sol7').feature('v1').set('control', 'stat');
model.sol('sol7').create('s1', 'Stationary');
model.sol('sol7').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol7').feature('s1').create('seDef', 'Segregated');
model.sol('sol7').feature('s1').create('se1', 'Segregated');
model.sol('sol7').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol7').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol7').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_p' 'comp1_u'});
model.sol('sol7').feature('s1').feature('se1').feature('ss1').set('subdamp', 0.5);
model.sol('sol7').feature('s1').create('d1', 'Direct');
model.sol('sol7').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol7').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol7').feature('s1').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol7').feature('s1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol7').feature('s1').feature('se1').feature('ss1').label('Velocity u, Pressure p');
model.sol('sol7').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol7').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_T' 'comp1_nitf1_TWall_d' 'comp1_nitf1_TWall_u'});
model.sol('sol7').feature('s1').feature('se1').feature('ss2').set('subdamp', 0.5);
model.sol('sol7').feature('s1').create('d2', 'Direct');
model.sol('sol7').feature('s1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol7').feature('s1').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol7').feature('s1').feature('d2').label('Direct, heat transfer variables (ht)');
model.sol('sol7').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol7').feature('s1').feature('se1').feature('ss2').label('Temperature');
model.sol('sol7').feature('s1').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol7').feature('s1').feature('se1').feature('ss3').set('segvar', {'comp1_k' 'comp1_ep'});
model.sol('sol7').feature('s1').feature('se1').feature('ss3').set('subdamp', 0.45);
model.sol('sol7').feature('s1').feature('se1').feature('ss3').set('subiter', 3);
model.sol('sol7').feature('s1').feature('se1').feature('ss3').set('subtermconst', 'itertol');
model.sol('sol7').feature('s1').feature('se1').feature('ss3').set('subntolfact', 1);
model.sol('sol7').feature('s1').create('d3', 'Direct');
model.sol('sol7').feature('s1').feature('d3').set('linsolver', 'pardiso');
model.sol('sol7').feature('s1').feature('d3').set('pivotperturb', 1.0E-13);
model.sol('sol7').feature('s1').feature('d3').label('Direct, turbulence variables (spf)');
model.sol('sol7').feature('s1').feature('se1').feature('ss3').set('linsolver', 'd3');
model.sol('sol7').feature('s1').feature('se1').feature('ss3').label('Turbulence Variables');
model.sol('sol7').feature('s1').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol7').feature('s1').feature('se1').set('subinitcfl', 3);
model.sol('sol7').feature('s1').feature('se1').set('submincfl', 10000);
model.sol('sol7').feature('s1').feature('se1').set('subkppid', 0.65);
model.sol('sol7').feature('s1').feature('se1').set('subkdpid', 0.15);
model.sol('sol7').feature('s1').feature('se1').set('subkipid', 0.15);
model.sol('sol7').feature('s1').feature('se1').set('subcfltol', 0.1);
model.sol('sol7').feature('s1').feature('se1').set('segcflaa', true);
model.sol('sol7').feature('s1').feature('se1').set('segcflaacfl', 9000);
model.sol('sol7').feature('s1').feature('se1').set('segcflaafact', 1);
model.sol('sol7').feature('s1').feature('se1').set('maxsegiter', 300);
model.sol('sol7').feature('s1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol7').feature('s1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.k 0 comp1.ep 0 comp1.T 0 ');
model.sol('sol7').feature('s1').create('i1', 'Iterative');
model.sol('sol7').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol7').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol7').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol7').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol7').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol7').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol7').feature('s1').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol7').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol7').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol7').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol7').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol7').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol7').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol7').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol7').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol7').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol7').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol7').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol7').feature('s1').create('i2', 'Iterative');
model.sol('sol7').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol7').feature('s1').feature('i2').set('prefuntype', 'left');
model.sol('sol7').feature('s1').feature('i2').set('itrestart', 50);
model.sol('sol7').feature('s1').feature('i2').set('rhob', 20);
model.sol('sol7').feature('s1').feature('i2').set('maxlinit', 10000);
model.sol('sol7').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol7').feature('s1').feature('i2').label('AMG, heat transfer variables (ht)');
model.sol('sol7').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol7').feature('s1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol7').feature('s1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol7').feature('s1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol7').feature('s1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol7').feature('s1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol7').feature('s1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol7').feature('s1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol7').feature('s1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol7').feature('s1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol7').feature('s1').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol7').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol7').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol7').feature('s1').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol7').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol7').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol7').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol7').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol7').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol7').feature('s1').create('i3', 'Iterative');
model.sol('sol7').feature('s1').feature('i3').set('linsolver', 'gmres');
model.sol('sol7').feature('s1').feature('i3').set('prefuntype', 'left');
model.sol('sol7').feature('s1').feature('i3').set('itrestart', 50);
model.sol('sol7').feature('s1').feature('i3').set('rhob', 20);
model.sol('sol7').feature('s1').feature('i3').set('maxlinit', 1000);
model.sol('sol7').feature('s1').feature('i3').set('nlinnormuse', 'on');
model.sol('sol7').feature('s1').feature('i3').label('AMG, turbulence variables (spf)');
model.sol('sol7').feature('s1').feature('i3').create('mg1', 'Multigrid');
model.sol('sol7').feature('s1').feature('i3').feature('mg1').set('prefun', 'saamg');
model.sol('sol7').feature('s1').feature('i3').feature('mg1').set('mgcycle', 'v');
model.sol('sol7').feature('s1').feature('i3').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol7').feature('s1').feature('i3').feature('mg1').set('strconn', 0.01);
model.sol('sol7').feature('s1').feature('i3').feature('mg1').set('nullspace', 'constant');
model.sol('sol7').feature('s1').feature('i3').feature('mg1').set('usesmooth', false);
model.sol('sol7').feature('s1').feature('i3').feature('mg1').set('saamgcompwise', true);
model.sol('sol7').feature('s1').feature('i3').feature('mg1').set('loweramg', true);
model.sol('sol7').feature('s1').feature('i3').feature('mg1').set('compactaggregation', false);
model.sol('sol7').feature('s1').feature('i3').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol7').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol7').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('iter', 0);
model.sol('sol7').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol7').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol7').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol7').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol7').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol7').feature('s1').feature('i3').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol7').feature('s1').feature('i3').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol7').feature('s1').feature('i3').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol7').feature('s1').feature('i3').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol7').feature('s1').feature('i3').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol7').feature('s1').feature('i3').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol7').feature('s1').feature('i3').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol7').feature('s1').feature('i3').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol7').feature('s1').feature('i3').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol7').feature('s1').feature('i3').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol7').feature('s1').feature('i3').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol7').feature('s1').feature.remove('fcDef');
model.sol('sol7').feature('s1').feature.remove('seDef');
model.sol('sol7').attach('std5');
model.sol('sol7').runAll;

model.result('pg10').run;
model.result('pg10').set('data', 'dset7');
model.result('pg10').run;
model.result.numerical.create('pev1', 'EvalPoint');
model.result.numerical('pev1').selection.set([6]);
model.result.numerical('pev1').setIndex('expr', 'T', 0);
model.result.numerical('pev1').setIndex('unit', '', 0);
model.result.numerical('pev1').setIndex('descr', '', 0);
model.result.numerical('pev1').set('data', 'dset3');
model.result.table.create('tbl2', 'Table');
model.result.table('tbl2').comments('Point Evaluation 1');
model.result.numerical('pev1').set('table', 'tbl2');
model.result.numerical('pev1').setResult;
model.result.numerical('pev1').set('data', 'dset6');
model.result.table.create('tbl3', 'Table');
model.result.table('tbl3').comments('Point Evaluation 1');
model.result.numerical('pev1').set('table', 'tbl3');
model.result.numerical('pev1').setResult;
model.result.numerical('pev1').set('data', 'dset5');
model.result.table.create('tbl4', 'Table');
model.result.table('tbl4').comments('Point Evaluation 1');
model.result.numerical('pev1').set('table', 'tbl4');
model.result.numerical('pev1').setResult;
model.result.numerical('pev1').set('data', 'dset7');
model.result.table.create('tbl5', 'Table');
model.result.table('tbl5').comments('Point Evaluation 1');
model.result.numerical('pev1').set('table', 'tbl5');
model.result.numerical('pev1').setResult;
model.result.numerical.create('av2', 'AvLine');
model.result.numerical('av2').set('intsurface', true);
model.result.numerical('av2').selection.set([2]);
model.result.numerical('av2').setIndex('expr', 'p', 0);
model.result.numerical('av2').setIndex('unit', '', 0);
model.result.numerical('av2').setIndex('descr', '', 0);
model.result.numerical('av2').set('data', 'dset3');
model.result.numerical('av2').set('table', 'tbl2');
model.result.numerical('av2').appendResult;
model.result.numerical('av2').set('data', 'dset6');
model.result.numerical('av2').set('table', 'tbl3');
model.result.numerical('av2').appendResult;
model.result.numerical('av2').set('data', 'dset5');
model.result.numerical('av2').set('table', 'tbl4');
model.result.numerical('av2').appendResult;
model.result.numerical('av2').set('data', 'dset7');
model.result.numerical('av2').set('table', 'tbl5');
model.result.numerical('av2').appendResult;
model.result.numerical.create('av3', 'AvLine');
model.result.numerical('av3').set('intsurface', true);
model.result.numerical('av3').selection.set([11]);
model.result.numerical('av3').setIndex('expr', 'ht.rho', 0);
model.result.numerical('av3').setIndex('unit', '', 0);
model.result.numerical('av3').setIndex('descr', '', 0);
model.result.numerical('av3').set('data', 'dset3');
model.result.numerical('av3').set('table', 'tbl2');
model.result.numerical('av3').appendResult;
model.result.numerical('av3').set('data', 'dset6');
model.result.numerical('av3').set('table', 'tbl3');
model.result.numerical('av3').appendResult;
model.result.numerical('av3').set('data', 'dset5');
model.result.numerical('av3').set('table', 'tbl4');
model.result.numerical('av3').appendResult;
model.result.numerical('av3').set('data', 'dset7');
model.result.numerical('av3').set('table', 'tbl5');
model.result.numerical('av3').appendResult;

model.physics('spf').feature('fp1').set('mu_mat', 'from_mat');
model.physics('ht').feature('fluid1').set('k_mat', 'from_mat');
model.physics('ht').feature('fluid1').set('rho_mat', 'from_mat');
model.physics('ht').feature('fluid1').set('Cp_mat', 'from_mat');

model.result('pg10').run;
model.result('pg10').set('data', 'dset6');
model.result('pg10').run;

model.title('Engine Coolant Properties');

model.description('The engine block of a car includes a cooling jacket to remove excess heat from combustion. The cooling jacket consists of open spaces in the cylinder block and the cylinder head. When the engine is running, a coolant fluid is pumped through the jacket to keep the engine from overheating. Optimizing the heat removal is important to minimize coolant boiling, prevent engine failure, and, more recently, improve overall efficiency through waste heat recovery. This example demonstrates how the Thermodynamics feature can be used to evaluate the performance of different engine coolants.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;

model.label('engine_coolant_properties.mph');

model.modelNode.label('Components');

out = model;
