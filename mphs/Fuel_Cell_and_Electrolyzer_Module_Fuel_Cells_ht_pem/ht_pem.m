function out = model
%
% ht_pem.m
%
% Model exported on May 26 2025, 21:28 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Fuel_Cell_and_Electrolyzer_Module/Fuel_Cells');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('fc', 'HydrogenFuelCell', 'geom1');
model.physics('fc').model('comp1');
model.physics('fc').prop('H2GasMixture').set('H2O', '1');
model.physics('fc').prop('H2GasMixture').set('GasPhaseDiffusion', '1');
model.physics('fc').prop('O2GasMixture').set('H2O', '1');
model.physics('fc').prop('O2GasMixture').set('N2', '1');
model.physics('fc').prop('O2GasMixture').set('GasPhaseDiffusion', '1');
model.physics('fc').prop('DefaultElectrodeReactionSettings').set('ElectrolyteType', 'ProtonExchange');
model.physics('fc').prop('DefaultElectrodeReactionSettings').set('OperationMode', 'FuelCell');
model.physics('fc').prop('DefaultElectrodeReactionSettings').set('TRHE', '50[degC]');
model.physics.create('fp', 'FreeAndPorousMediaFlow', 'geom1');
model.physics('fp').model('comp1');
model.physics('fp').field('velocity').field('ua');
model.physics('fp').field('velocity').component({'ua' 'va' 'wa'});
model.physics('fp').field('pressure').field('pa');
model.physics.create('fp2', 'FreeAndPorousMediaFlow', 'geom1');
model.physics('fp2').model('comp1');
model.physics('fp2').field('velocity').field('uc');
model.physics('fp2').field('velocity').component({'uc' 'vc' 'wc'});
model.physics('fp2').field('pressure').field('pc');

model.study.create('std1');
model.study('std1').create('cdi', 'CurrentDistributionInitialization');
model.study('std1').feature('cdi').set('solnum', 'auto');
model.study('std1').feature('cdi').set('notsolnum', 'auto');
model.study('std1').feature('cdi').set('outputmap', {});
model.study('std1').feature('cdi').set('ngenAUX', '1');
model.study('std1').feature('cdi').set('goalngenAUX', '1');
model.study('std1').feature('cdi').set('ngenAUX', '1');
model.study('std1').feature('cdi').set('goalngenAUX', '1');
model.study('std1').feature('cdi').setSolveFor('/physics/fc', true);
model.study('std1').feature('cdi').setSolveFor('/physics/fp', true);
model.study('std1').feature('cdi').setSolveFor('/physics/fp2', true);
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').set('solnum', 'auto');
model.study('std1').feature('stat').set('notsolnum', 'auto');
model.study('std1').feature('stat').set('outputmap', {});
model.study('std1').feature('stat').set('ngenAUX', '1');
model.study('std1').feature('stat').set('goalngenAUX', '1');
model.study('std1').feature('stat').set('ngenAUX', '1');
model.study('std1').feature('stat').set('goalngenAUX', '1');
model.study('std1').feature('stat').setSolveFor('/physics/fc', true);
model.study('std1').feature('stat').setSolveFor('/physics/fp', true);
model.study('std1').feature('stat').setSolveFor('/physics/fp2', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('L', '0.02[m]', 'Cell length');
model.param.set('H_ch', '1e-3[m]', 'Channel height');
model.param.set('W_ch', '0.7874e-3[m]', 'Channel width');
model.param.set('W_rib', '0.90932e-3[m]', 'Rib width');
model.param.set('H_gdl', '380e-6[m]', 'GDL width');
model.param.set('H_electrode', '50e-6[m]', 'Porous electrode thickness');
model.param.set('H_membrane', '100e-6[m]', 'Membrane thickness');
model.param.set('eps_gas_gdl', '0.4', 'GDL gas pore volume fraction (porosity)');
model.param.set('eps_l_cl', '0.3', 'Catalyst layer electrolyte (ionomer) volume fraction');
model.param.set('eps_gas_cl', '0.3', 'Catalyst layer gas pore volume fraction');
model.param.set('kappa_gdl', '1.18e-11[m^2]', 'GDL permeability');
model.param.set('kappa_cl', 'kappa_gdl/5', 'Catalyst layer permeability');
model.param.set('sigma_gdl', '222[S/m]', 'GDL electric conductivity');
model.param.set('sigma_m', '9.825[S/m]', 'Membrane conductivity');
model.param.set('T', '180+273.15[K]', 'Cell temperature');
model.param.set('p_ref', '1[atm]', 'Reference pressure');
model.param.set('V_cell', '0.95[V]', 'Cell voltage');
model.param.set('i0_ref_c', '1e-3[A/m^2]', 'Reference exchange current density, cathode');
model.param.set('i0_ref_a', '1e2[A/m^2]', 'Reference exchange current density, anode');
model.param.set('alpha_c', '1', 'Transfer coefficient, cathode');
model.param.set('Av', '1e7[m^2/m^3]', 'Specific surface area');
model.param.set('T_hum', '28[degC]', 'Humidification temperature');
model.param.set('p_vapor', '0.61121*exp((18.678-(T_hum-0[degC])/234.5[K])*((T_hum-0[degC])/(257.14+T_hum-0[degC])))[kPa]', 'Water partial pressure');
model.param.set('x_H2O_in', 'p_vapor/p_ref', 'Inlet water molar fraction');
model.param.set('x_H2_in', '1-x_H2O_in', 'Inlet hydrogen molar fraction');
model.param.set('x_O2_in', '0.21*(1-x_H2O_in)', 'Inlet oxygen molar fraction');
model.param.set('I_stoich', '1[A/cm^2]*L*(W_rib+W_ch)', 'Operating current for gas flow calculations');
model.param.set('lambda_anode', '1.2', 'Anode stoichiometry');
model.param.set('lambda_cathode', '2', 'Cathode stoichiometry');
model.param.set('U_in_anode', 'lambda_anode*I_stoich/(2*F_const)*(R_const*T)/p_ref/x_H2_in/(H_ch*W_ch)', 'Inlet velocity, anode');
model.param.set('U_in_cathode', 'lambda_cathode*I_stoich/(4*F_const)*(R_const*T)/p_ref/x_O2_in/(H_ch*W_ch)', 'Inlet velocity, cathode');

model.geom('geom1').create('blk1', 'Block');
model.geom('geom1').feature('blk1').label('Anode Channel');
model.geom('geom1').feature('blk1').set('size', {'W_ch' 'L' 'H_ch'});
model.geom('geom1').feature('blk1').set('pos', {'W_rib/2' '0' '0'});
model.geom('geom1').feature('blk1').set('selresult', true);
model.geom('geom1').run('blk1');
model.geom('geom1').feature.duplicate('blk2', 'blk1');
model.geom('geom1').feature('blk2').label('Anode GDL');
model.geom('geom1').feature('blk2').set('size', {'(W_ch+W_rib)' 'L' 'H_ch'});
model.geom('geom1').feature('blk2').setIndex('size', 'H_gdl', 2);
model.geom('geom1').feature('blk2').set('pos', {'0' '0' 'H_ch'});
model.geom('geom1').run('blk2');
model.geom('geom1').feature.duplicate('blk3', 'blk2');
model.geom('geom1').feature('blk3').label('Anode GDE');
model.geom('geom1').feature('blk3').setIndex('size', 'H_electrode', 2);
model.geom('geom1').feature('blk3').set('pos', {'0' '0' 'H_ch+H_gdl'});
model.geom('geom1').run('blk3');
model.geom('geom1').feature.duplicate('blk4', 'blk3');
model.geom('geom1').feature('blk4').label('Membrane');
model.geom('geom1').feature('blk4').setIndex('size', 'H_membrane', 2);
model.geom('geom1').feature('blk4').set('pos', {'0' '0' 'H_ch+H_gdl+H_electrode'});
model.geom('geom1').run('blk4');
model.geom('geom1').feature.duplicate('blk5', 'blk4');
model.geom('geom1').feature('blk5').label('Cathode GDE');
model.geom('geom1').feature('blk5').setIndex('size', 'W_ch+W_rib', 0);
model.geom('geom1').feature('blk5').setIndex('size', 'H_electrode', 2);
model.geom('geom1').feature('blk5').set('pos', {'0' '0' 'H_ch+H_gdl+H_electrode+H_membrane'});
model.geom('geom1').run('blk5');
model.geom('geom1').feature.duplicate('blk6', 'blk5');
model.geom('geom1').feature('blk6').label('Cathode GDL');
model.geom('geom1').feature('blk6').setIndex('size', 'H_gdl', 2);
model.geom('geom1').feature('blk6').set('pos', {'0' '0' 'H_ch+H_gdl+H_electrode+H_membrane+H_electrode'});
model.geom('geom1').run('blk6');
model.geom('geom1').feature.duplicate('blk7', 'blk6');
model.geom('geom1').feature('blk7').label('Cathode Channel');
model.geom('geom1').feature('blk7').set('size', {'W_ch' 'L' 'H_ch'});
model.geom('geom1').feature('blk7').setIndex('pos', 'W_rib/2', 0);
model.geom('geom1').feature('blk7').set('pos', {'W_rib/2' '0' 'H_ch+H_gdl+H_electrode+H_membrane+H_electrode+H_gdl'});
model.geom('geom1').runPre('fin');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');

model.geom('geom1').run;

model.selection('sel1').label('Anode Inlet');
model.selection('sel1').geom(2);
model.selection('sel1').set([23]);
model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').label('Cathode Inlet');
model.selection('sel2').geom(2);
model.selection('sel2').set([27]);
model.selection.create('sel3', 'Explicit');
model.selection('sel3').model('comp1');
model.selection('sel3').label('Anode Outlet');
model.selection('sel3').geom(2);
model.selection('sel3').set([30]);
model.selection.create('sel4', 'Explicit');
model.selection('sel4').model('comp1');
model.selection('sel4').label('Cathode Outlet');
model.selection('sel4').geom(2);
model.selection('sel4').set([31]);
model.selection.create('uni1', 'Union');
model.selection('uni1').model('comp1');
model.selection('uni1').label('Anode Compartment');
model.selection('uni1').set('input', {'geom1_blk1_dom' 'geom1_blk2_dom' 'geom1_blk3_dom'});
model.selection.create('uni2', 'Union');
model.selection('uni2').model('comp1');
model.selection('uni2').label('Cathode Compartment');
model.selection('uni2').set('input', {'geom1_blk5_dom' 'geom1_blk6_dom' 'geom1_blk7_dom'});

model.physics('fp').label('Free and Porous Media Flow- Anode');
model.physics('fp').selection.named('uni1');
model.physics('fp2').label('Free and Porous Media Flow - Cathode');
model.physics('fp2').selection.named('uni2');

model.multiphysics.create('rfh1', 'ReactingFlowH2GasPhase', 'geom1', 3);
model.multiphysics.create('rfo1', 'ReactingFlowO2GasPhase', 'geom1', 3);
model.multiphysics('rfo1').set('Fluid_physics', 'fp2');

model.physics('fc').create('mem1', 'Membrane', 3);
model.physics('fc').feature('mem1').selection.named('geom1_blk4_dom');
model.physics('fc').create('h2gde1', 'H2GasDiffusionElectrode', 3);
model.physics('fc').feature('h2gde1').selection.named('geom1_blk3_dom');
model.physics('fc').create('h2gdl1', 'H2GasDiffusionLayer', 3);
model.physics('fc').feature('h2gdl1').selection.named('geom1_blk2_dom');
model.physics('fc').create('h2fch1', 'H2FlowChannel', 3);
model.physics('fc').feature('h2fch1').selection.named('geom1_blk1_dom');
model.physics('fc').create('o2gde1', 'O2GasDiffusionElectrode', 3);
model.physics('fc').feature('o2gde1').selection.named('geom1_blk5_dom');
model.physics('fc').create('o2gdl1', 'O2GasDiffusionLayer', 3);
model.physics('fc').feature('o2gdl1').selection.named('geom1_blk6_dom');
model.physics('fc').create('o2fch1', 'O2FlowChannel', 3);
model.physics('fc').feature('o2fch1').selection.named('geom1_blk7_dom');
model.physics('fc').feature('icph1').set('sigmal_mat', 'userdef');
model.physics('fc').feature('icph1').set('sigmal', {'sigma_m' '0' '0' '0' 'sigma_m' '0' '0' '0' 'sigma_m'});
model.physics('fc').feature('h2gde1').set('sigmas', {'sigma_gdl' '0' '0' '0' 'sigma_gdl' '0' '0' '0' 'sigma_gdl'});
model.physics('fc').feature('h2gde1').set('epsl', 'eps_l_cl');
model.physics('fc').feature('h2gde1').set('epsg', 'eps_gas_cl');
model.physics('fc').feature('h2gde1').feature('h2gder1').set('i0_ref', 'i0_ref_a');
model.physics('fc').feature('h2gde1').feature('h2gder1').set('Av', 'Av');
model.physics('fc').feature('h2gdl1').set('sigmas', {'sigma_gdl' '0' '0' '0' 'sigma_gdl' '0' '0' '0' 'sigma_gdl'});
model.physics('fc').feature('h2gdl1').set('epsg', 'eps_gas_gdl');
model.physics('fc').feature('o2gde1').set('sigmas', {'sigma_gdl' '0' '0' '0' 'sigma_gdl' '0' '0' '0' 'sigma_gdl'});
model.physics('fc').feature('o2gde1').set('epsl', 'eps_l_cl');
model.physics('fc').feature('o2gde1').set('epsg', 'eps_gas_cl');
model.physics('fc').feature('o2gde1').feature('o2gder1').set('i0_ref', 'i0_ref_c');
model.physics('fc').feature('o2gde1').feature('o2gder1').set('alphaa', '4-alpha_c');
model.physics('fc').feature('o2gde1').feature('o2gder1').set('Av', 'Av');
model.physics('fc').feature('o2gdl1').set('sigmas', {'sigma_gdl' '0' '0' '0' 'sigma_gdl' '0' '0' '0' 'sigma_gdl'});
model.physics('fc').feature('o2gdl1').set('epsg', 'eps_gas_gdl');
model.physics('fc').feature('ecph1').create('egnd1', 'ElectricGround', 2);
model.physics('fc').feature('ecph1').feature('egnd1').selection.set([3 33]);
model.physics('fc').feature('ecph1').create('pot1', 'ElectricPotential', 2);
model.physics('fc').feature('ecph1').feature('pot1').selection.set([16 35]);
model.physics('fc').feature('ecph1').feature('pot1').set('phisbnd', 'V_cell');
model.physics('fc').feature('h2gasph1').feature('init1').set('MixtureSpecification', 'HumidifiedMixture');
model.physics('fc').feature('h2gasph1').feature('init1').set('T_hum', 'T_hum');
model.physics('fc').feature('h2gasph1').create('h2in1', 'H2Inlet', 2);
model.physics('fc').feature('h2gasph1').feature('h2in1').selection.named('sel1');
model.physics('fc').feature('h2gasph1').create('h2out1', 'H2Outlet', 2);
model.physics('fc').feature('h2gasph1').feature('h2out1').selection.named('sel3');
model.physics('fc').feature('o2gasph1').feature('init1').set('MixtureSpecification', 'HumidifiedAir');
model.physics('fc').feature('o2gasph1').feature('init1').set('T_hum', 'T_hum');
model.physics('fc').feature('o2gasph1').create('o2in1', 'O2Inlet', 2);
model.physics('fc').feature('o2gasph1').feature('o2in1').selection.named('sel2');
model.physics('fc').feature('o2gasph1').create('o2out1', 'O2Outlet', 2);
model.physics('fc').feature('o2gasph1').feature('o2out1').selection.named('sel4');
model.physics('fp').prop('PhysicalModelProperty').set('Compressibility', 'CompressibleMALT03');
model.physics('fp').prop('PhysicalModelProperty').set('pref', 'p_ref');
model.physics('fp').create('porous1', 'PorousMedium', 3);
model.physics('fp').feature('porous1').selection.named('geom1_blk2_dom');
model.physics('fp').feature('porous1').feature('pm1').set('epsilon_p_mat', 'userdef');
model.physics('fp').feature('porous1').feature('pm1').set('epsilon_p', 'eps_gas_gdl');
model.physics('fp').feature('porous1').feature('pm1').set('kappa_mat', 'userdef');
model.physics('fp').feature('porous1').feature('pm1').set('kappa', {'kappa_gdl' '0' '0' '0' 'kappa_gdl' '0' '0' '0' 'kappa_gdl'});
model.physics('fp').create('porous2', 'PorousMedium', 3);
model.physics('fp').feature('porous2').selection.named('geom1_blk3_dom');
model.physics('fp').feature('porous2').feature('pm1').set('epsilon_p_mat', 'userdef');
model.physics('fp').feature('porous2').feature('pm1').set('epsilon_p', 'eps_gas_cl');
model.physics('fp').feature('porous2').feature('pm1').set('kappa_mat', 'userdef');
model.physics('fp').feature('porous2').feature('pm1').set('kappa', {'kappa_cl' '0' '0' '0' 'kappa_cl' '0' '0' '0' 'kappa_cl'});
model.physics('fp').feature('wallbc1').set('constraintType', 'symmetricConstraint');
model.physics('fp').create('inl1', 'InletBoundary', 2);
model.physics('fp').feature('inl1').selection.named('sel1');
model.physics('fp').feature('inl1').set('BoundaryCondition', 'FullyDevelopedFlow');
model.physics('fp').feature('inl1').set('Uavfdf', 'U_in_anode');
model.physics('fp').create('out1', 'OutletBoundary', 2);
model.physics('fp').feature('out1').selection.named('sel3');
model.physics('fp').feature('out1').set('NormalFlow', true);
model.physics('fp').create('sym1', 'Symmetry', 2);
model.physics('fp').feature('sym1').selection.set([1 4 36 37]);
model.physics('fp2').prop('PhysicalModelProperty').set('Compressibility', 'CompressibleMALT03');
model.physics('fp2').prop('PhysicalModelProperty').set('pref', 'p_ref');
model.physics('fp2').create('porous1', 'PorousMedium', 3);
model.physics('fp2').feature('porous1').selection.named('geom1_blk6_dom');
model.physics('fp2').feature('porous1').feature('pm1').set('epsilon_p_mat', 'userdef');
model.physics('fp2').feature('porous1').feature('pm1').set('epsilon_p', 'eps_gas_gdl');
model.physics('fp2').feature('porous1').feature('pm1').set('kappa_mat', 'userdef');
model.physics('fp2').feature('porous1').feature('pm1').set('kappa', {'kappa_gdl' '0' '0' '0' 'kappa_gdl' '0' '0' '0' 'kappa_gdl'});
model.physics('fp2').create('porous2', 'PorousMedium', 3);
model.physics('fp2').feature('porous2').selection.named('geom1_blk5_dom');
model.physics('fp2').feature('porous2').feature('pm1').set('epsilon_p_mat', 'userdef');
model.physics('fp2').feature('porous2').feature('pm1').set('epsilon_p', 'eps_gas_cl');
model.physics('fp2').feature('porous2').feature('pm1').set('kappa_mat', 'userdef');
model.physics('fp2').feature('porous2').feature('pm1').set('kappa', {'kappa_cl' '0' '0' '0' 'kappa_cl' '0' '0' '0' 'kappa_cl'});
model.physics('fp2').feature('wallbc1').set('constraintType', 'symmetricConstraint');
model.physics('fp2').create('sym1', 'Symmetry', 2);
model.physics('fp2').feature('sym1').selection.set([10 13 39 40]);
model.physics('fp2').create('inl1', 'InletBoundary', 2);
model.physics('fp2').feature('inl1').selection.named('sel2');
model.physics('fp2').feature('inl1').set('BoundaryCondition', 'FullyDevelopedFlow');
model.physics('fp2').feature('inl1').set('Uavfdf', 'U_in_cathode');
model.physics('fp2').create('out1', 'OutletBoundary', 2);
model.physics('fp2').feature('out1').selection.named('sel4');
model.physics('fp2').feature('out1').set('NormalFlow', true);

model.common('cminpt').set('modified', {'temperature' 'T'});

model.mesh('mesh1').create('edg1', 'Edge');
model.mesh('mesh1').feature('edg1').selection.set([3 17 33 36 48 51]);
model.mesh('mesh1').feature('edg1').create('size1', 'Size');
model.mesh('mesh1').feature('edg1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('edg1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('edg1').feature('size1').set('hmax', 'W_ch/8');
model.mesh('mesh1').create('edg2', 'Edge');
model.mesh('mesh1').feature('edg2').selection.set([13 65]);
model.mesh('mesh1').feature('edg2').create('dis1', 'Distribution');
model.mesh('mesh1').feature('edg2').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('edg2').feature('dis1').set('elemcount', 8);
model.mesh('mesh1').feature('edg2').feature('dis1').set('elemratio', 4);
model.mesh('mesh1').feature.duplicate('edg3', 'edg2');
model.mesh('mesh1').feature('edg3').selection.set([1 57]);
model.mesh('mesh1').feature('edg3').feature('dis1').set('reverse', true);
model.mesh('mesh1').create('edg4', 'Edge');
model.mesh('mesh1').feature('edg4').selection.set([4 59]);
model.mesh('mesh1').feature('edg4').create('dis1', 'Distribution');
model.mesh('mesh1').feature('edg4').feature('dis1').set('numelem', 6);
model.mesh('mesh1').create('edg5', 'Edge');
model.mesh('mesh1').feature('edg5').selection.set([10 63]);
model.mesh('mesh1').feature('edg5').create('dis1', 'Distribution');
model.mesh('mesh1').feature('edg5').feature('dis1').set('numelem', 10);
model.mesh('mesh1').create('edg6', 'Edge');
model.mesh('mesh1').feature('edg6').selection.set([7 61]);
model.mesh('mesh1').feature('edg6').create('dis1', 'Distribution');
model.mesh('mesh1').feature('edg6').feature('dis1').set('numelem', 3);
model.mesh('mesh1').create('edg7', 'Edge');
model.mesh('mesh1').feature('edg7').selection.set([29 34 45 49]);
model.mesh('mesh1').feature('edg7').create('dis1', 'Distribution');
model.mesh('mesh1').feature('edg7').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('edg7').feature('dis1').set('elemcount', 8);
model.mesh('mesh1').feature('edg7').feature('dis1').set('elemratio', 2);
model.mesh('mesh1').feature('edg7').feature('dis1').set('symmetric', true);
model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.set([2 5 8 11 14 23 27]);
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').create('size1', 'Size');
model.mesh('mesh1').feature('swe1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('swe1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('swe1').feature('size1').set('hmax', 'W_ch');
model.mesh('mesh1').run('swe1');

model.probe.create('dom1', 'Domain');
model.probe('dom1').model('comp1');
model.probe('dom1').set('intsurface', true);
model.probe('dom1').set('intvolume', true);
model.probe('dom1').set('type', 'integral');
model.probe('dom1').selection.named('geom1_blk3_dom');
model.probe('dom1').set('expr', 'fc.iv_h2gder1/((W_ch+W_rib)*L)/1e4');

model.study('std1').feature('cdi').setEntry('activateCoupling', 'rfh1', false);
model.study('std1').feature('cdi').setEntry('activateCoupling', 'rfo1', false);
model.study('std1').create('cdi2', 'CurrentDistributionInitialization');
model.study('std1').feature.move('cdi2', 1);
model.study('std1').feature('cdi2').set('initType', 'secondary');
model.study('std1').feature('cdi2').setEntry('activateCoupling', 'rfh1', false);
model.study('std1').feature('cdi2').setEntry('activateCoupling', 'rfo1', false);
model.study('std1').feature('stat').setEntry('activate', 'fc', false);
model.study('std1').feature('stat').setEntry('activate', 'fp2', false);
model.study('std1').feature('stat').setEntry('activateCoupling', 'rfh1', false);
model.study('std1').feature('stat').setEntry('activateCoupling', 'rfo1', false);
model.study('std1').create('stat2', 'Stationary');
model.study('std1').feature('stat2').setEntry('activate', 'fc', false);
model.study('std1').feature('stat2').setEntry('activate', 'fp', false);
model.study('std1').feature('stat2').setEntry('activateCoupling', 'rfh1', false);
model.study('std1').feature('stat2').setEntry('activateCoupling', 'rfo1', false);
model.study('std1').create('stat3', 'Stationary');
model.study('std1').feature('stat3').set('useparam', true);
model.study('std1').feature('stat3').setIndex('pname', 'L', 0);
model.study('std1').feature('stat3').setIndex('plistarr', '', 0);
model.study('std1').feature('stat3').setIndex('punit', 'm', 0);
model.study('std1').feature('stat3').setIndex('pname', 'L', 0);
model.study('std1').feature('stat3').setIndex('plistarr', '', 0);
model.study('std1').feature('stat3').setIndex('punit', 'm', 0);
model.study('std1').feature('stat3').setIndex('pname', 'V_cell', 0);
model.study('std1').feature('stat3').setIndex('plistarr', 'range(0.95,-0.05,0.85) range(0.8,-0.1,0.4)', 0);

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 4 5]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([2 3 4]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 6]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([4 5 7]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 4 5]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([2 3 4]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 6]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([4 5 7]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 6]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([4 5 7]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 6]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([4 5 7]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 4 5]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([2 3 4]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 6]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([4 5 7]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 6]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([4 5 7]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'cdi');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_fc_phis').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_fc_phil').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_fc_phis').set('scaleval', '1');
model.sol('sol1').feature('v1').feature('comp1_fc_phil').set('scaleval', '1');
model.sol('sol1').feature('v1').set('control', 'cdi');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 1.0E-4);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').label('Direct (fc)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('Algebraic Multigrid (fc)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').create('i2', 'Iterative');
model.sol('sol1').feature('s1').feature('i2').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i2').label('Geometric Multigrid (fc)');
model.sol('sol1').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'cdi2');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').feature('comp1_fc_phis').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_fc_phil').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_fc_phis').set('scaleval', '1');
model.sol('sol1').feature('v2').feature('comp1_fc_phil').set('scaleval', '1');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('initsoluse', 'sol2');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'cdi2');
model.sol('sol1').create('s2', 'Stationary');
model.sol('sol1').feature('s2').set('stol', 1.0E-4);
model.sol('sol1').feature('s2').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s2').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s2').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('d1').label('Direct (fc)');
model.sol('sol1').feature('s2').create('i1', 'Iterative');
model.sol('sol1').feature('s2').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s2').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s2').feature('i1').label('Algebraic Multigrid (fc)');
model.sol('sol1').feature('s2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('compactaggregation', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').create('i2', 'Iterative');
model.sol('sol1').feature('s2').feature('i2').set('maxlinit', 1000);
model.sol('sol1').feature('s2').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('s2').feature('i2').label('Geometric Multigrid (fc)');
model.sol('sol1').feature('s2').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s2').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s2').feature.remove('fcDef');
model.sol('sol1').create('su2', 'StoreSolution');
model.sol('sol1').create('st3', 'StudyStep');
model.sol('sol1').feature('st3').set('study', 'std1');
model.sol('sol1').feature('st3').set('studystep', 'stat');
model.sol('sol1').create('v3', 'Variables');
model.sol('sol1').feature('v3').set('initmethod', 'sol');
model.sol('sol1').feature('v3').set('initsol', 'sol1');
model.sol('sol1').feature('v3').set('notsolmethod', 'sol');
model.sol('sol1').feature('v3').set('notsol', 'sol1');
model.sol('sol1').feature('v3').set('control', 'stat');
model.sol('sol1').create('s3', 'Stationary');
model.sol('sol1').feature('s3').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s3').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s3').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s3').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s3').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s3').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s3').create('d1', 'Direct');
model.sol('sol1').feature('s3').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s3').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s3').feature('d1').label('Direct, fluid flow variables (fp)');
model.sol('sol1').feature('s3').create('i1', 'Iterative');
model.sol('sol1').feature('s3').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s3').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s3').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s3').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s3').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s3').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s3').feature('i1').label('AMG, fluid flow variables (fp)');
model.sol('sol1').feature('s3').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_fp_inl1_Pinlfdf'});
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_fp_inl1_Pinlfdf'});
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s3').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s3').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s3').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s3').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s3').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s3').feature.remove('fcDef');
model.sol('sol1').create('su3', 'StoreSolution');
model.sol('sol1').create('st4', 'StudyStep');
model.sol('sol1').feature('st4').set('study', 'std1');
model.sol('sol1').feature('st4').set('studystep', 'stat2');
model.sol('sol1').create('v4', 'Variables');
model.sol('sol1').feature('v4').set('initmethod', 'sol');
model.sol('sol1').feature('v4').set('initsol', 'sol1');
model.sol('sol1').feature('v4').set('notsolmethod', 'sol');
model.sol('sol1').feature('v4').set('notsol', 'sol1');
model.sol('sol1').feature('v4').set('control', 'stat2');
model.sol('sol1').create('s4', 'Stationary');
model.sol('sol1').feature('s4').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s4').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s4').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s4').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s4').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s4').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s4').create('d1', 'Direct');
model.sol('sol1').feature('s4').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s4').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s4').feature('d1').label('Direct, fluid flow variables (fp2)');
model.sol('sol1').feature('s4').create('i1', 'Iterative');
model.sol('sol1').feature('s4').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s4').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s4').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s4').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s4').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s4').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s4').feature('i1').label('AMG, fluid flow variables (fp2)');
model.sol('sol1').feature('s4').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s4').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s4').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s4').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('s4').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('s4').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s4').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s4').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s4').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s4').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s4').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s4').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s4').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('s4').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s4').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s4').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s4').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s4').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s4').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_fp2_inl1_Pinlfdf'});
model.sol('sol1').feature('s4').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s4').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s4').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s4').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s4').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s4').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s4').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s4').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s4').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s4').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s4').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s4').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_fp2_inl1_Pinlfdf'});
model.sol('sol1').feature('s4').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s4').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s4').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s4').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s4').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s4').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s4').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s4').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s4').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s4').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s4').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s4').feature.remove('fcDef');
model.sol('sol1').create('su4', 'StoreSolution');
model.sol('sol1').create('st5', 'StudyStep');
model.sol('sol1').feature('st5').set('study', 'std1');
model.sol('sol1').feature('st5').set('studystep', 'stat3');
model.sol('sol1').create('v5', 'Variables');
model.sol('sol1').feature('v5').feature('comp1_fc_phis').set('scalemethod', 'manual');
model.sol('sol1').feature('v5').feature('comp1_fc_wH2O_O2').set('scalemethod', 'manual');
model.sol('sol1').feature('v5').feature('comp1_fc_wN2_O2').set('scalemethod', 'manual');
model.sol('sol1').feature('v5').feature('comp1_fc_phil').set('scalemethod', 'manual');
model.sol('sol1').feature('v5').feature('comp1_fc_wH2O_H2').set('scalemethod', 'manual');
model.sol('sol1').feature('v5').feature('comp1_fc_phis').set('scaleval', '1');
model.sol('sol1').feature('v5').feature('comp1_fc_wH2O_O2').set('scaleval', '1');
model.sol('sol1').feature('v5').feature('comp1_fc_wN2_O2').set('scaleval', '1');
model.sol('sol1').feature('v5').feature('comp1_fc_phil').set('scaleval', '1');
model.sol('sol1').feature('v5').feature('comp1_fc_wH2O_H2').set('scaleval', '1');
model.sol('sol1').feature('v5').set('initmethod', 'sol');
model.sol('sol1').feature('v5').set('initsol', 'sol1');
model.sol('sol1').feature('v5').set('initsoluse', 'sol5');
model.sol('sol1').feature('v5').set('notsolmethod', 'sol');
model.sol('sol1').feature('v5').set('notsol', 'sol1');
model.sol('sol1').feature('v5').set('control', 'stat3');
model.sol('sol1').create('s5', 'Stationary');
model.sol('sol1').feature('s5').set('stol', 1.0E-4);
model.sol('sol1').feature('s5').create('p1', 'Parametric');
model.sol('sol1').feature('s5').feature.remove('pDef');
model.sol('sol1').feature('s5').feature('p1').set('porder', 'constant');
model.sol('sol1').feature('s5').feature('p1').set('control', 'stat3');
model.sol('sol1').feature('s5').set('control', 'stat3');
model.sol('sol1').feature('s5').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s5').create('se1', 'Segregated');
model.sol('sol1').feature('s5').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s5').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s5').feature('se1').feature('ss1').set('segvar', {'comp1_fc_phil' 'comp1_fc_phis' 'comp1_fc_wH2O_H2' 'comp1_fc_wH2O_O2' 'comp1_fc_wN2_O2'});
model.sol('sol1').feature('s5').feature('se1').feature('ss1').set('subjtech', 'onevery');
model.sol('sol1').feature('s5').create('d1', 'Direct');
model.sol('sol1').feature('s5').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s5').feature('d1').label('Direct (fc)');
model.sol('sol1').feature('s5').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol1').feature('s5').feature('se1').feature('ss1').label('Hydrogen Fuel Cell');
model.sol('sol1').feature('s5').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s5').feature('se1').feature('ss2').set('segvar', {'comp1_pa' 'comp1_ua' 'comp1_fp_inl1_Pinlfdf'});
model.sol('sol1').feature('s5').feature('se1').feature('ss2').set('subdamp', 0.5);
model.sol('sol1').feature('s5').create('d2', 'Direct');
model.sol('sol1').feature('s5').feature('d2').set('linsolver', 'pardiso');
model.sol('sol1').feature('s5').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s5').feature('d2').label('Direct, fluid flow variables (fp)');
model.sol('sol1').feature('s5').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol1').feature('s5').feature('se1').feature('ss2').label('Velocity Ua, Pressure Pa');
model.sol('sol1').feature('s5').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol1').feature('s5').feature('se1').feature('ss3').set('segvar', {'comp1_pc' 'comp1_uc' 'comp1_fp2_inl1_Pinlfdf'});
model.sol('sol1').feature('s5').feature('se1').feature('ss3').set('subdamp', 0.5);
model.sol('sol1').feature('s5').create('d3', 'Direct');
model.sol('sol1').feature('s5').feature('d3').set('linsolver', 'pardiso');
model.sol('sol1').feature('s5').feature('d3').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s5').feature('d3').label('Direct, fluid flow variables (fp2)');
model.sol('sol1').feature('s5').feature('se1').feature('ss3').set('linsolver', 'd3');
model.sol('sol1').feature('s5').feature('se1').feature('ss3').label('Velocity Uc, Pressure Pc');
model.sol('sol1').feature('s5').feature('se1').set('maxsegiter', 200);
model.sol('sol1').feature('s5').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol1').feature('s5').feature('se1').set('subinitcfl', 5);
model.sol('sol1').feature('s5').feature('se1').set('subkppid', 0.65);
model.sol('sol1').feature('s5').feature('se1').set('subkdpid', 0.05);
model.sol('sol1').feature('s5').feature('se1').set('subkipid', 0.05);
model.sol('sol1').feature('s5').feature('se1').set('subcfltol', 0.1);
model.sol('sol1').feature('s5').create('i1', 'Iterative');
model.sol('sol1').feature('s5').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s5').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s5').feature('i1').label('Algebraic Multigrid (fc)');
model.sol('sol1').feature('s5').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s5').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s5').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s5').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s5').feature('i1').feature('mg1').set('compactaggregation', true);
model.sol('sol1').feature('s5').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s5').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s5').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s5').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s5').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s5').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s5').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s5').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s5').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s5').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s5').create('i2', 'Iterative');
model.sol('sol1').feature('s5').feature('i2').set('maxlinit', 1000);
model.sol('sol1').feature('s5').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('s5').feature('i2').label('Geometric Multigrid (fc)');
model.sol('sol1').feature('s5').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s5').feature('i2').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s5').feature('i2').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s5').feature('i2').feature('mg1').feature('pr').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s5').feature('i2').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s5').feature('i2').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s5').feature('i2').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s5').feature('i2').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s5').feature('i2').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s5').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s5').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s5').create('i3', 'Iterative');
model.sol('sol1').feature('s5').feature('i3').set('linsolver', 'gmres');
model.sol('sol1').feature('s5').feature('i3').set('prefuntype', 'left');
model.sol('sol1').feature('s5').feature('i3').set('itrestart', 50);
model.sol('sol1').feature('s5').feature('i3').set('rhob', 20);
model.sol('sol1').feature('s5').feature('i3').set('maxlinit', 1000);
model.sol('sol1').feature('s5').feature('i3').set('nlinnormuse', 'on');
model.sol('sol1').feature('s5').feature('i3').label('AMG, fluid flow variables (fp)');
model.sol('sol1').feature('s5').feature('i3').create('mg1', 'Multigrid');
model.sol('sol1').feature('s5').feature('i3').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s5').feature('i3').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s5').feature('i3').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('s5').feature('i3').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('s5').feature('i3').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s5').feature('i3').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s5').feature('i3').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s5').feature('i3').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s5').feature('i3').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s5').feature('i3').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s5').feature('i3').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s5').feature('i3').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('s5').feature('i3').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s5').feature('i3').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s5').feature('i3').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s5').feature('i3').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s5').feature('i3').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s5').feature('i3').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_fp_inl1_Pinlfdf'});
model.sol('sol1').feature('s5').feature('i3').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s5').feature('i3').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s5').feature('i3').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s5').feature('i3').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s5').feature('i3').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s5').feature('i3').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s5').feature('i3').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s5').feature('i3').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s5').feature('i3').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s5').feature('i3').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s5').feature('i3').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s5').feature('i3').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_fp_inl1_Pinlfdf'});
model.sol('sol1').feature('s5').feature('i3').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s5').feature('i3').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s5').feature('i3').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s5').feature('i3').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s5').feature('i3').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s5').feature('i3').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s5').create('i4', 'Iterative');
model.sol('sol1').feature('s5').feature('i4').set('linsolver', 'gmres');
model.sol('sol1').feature('s5').feature('i4').set('prefuntype', 'left');
model.sol('sol1').feature('s5').feature('i4').set('itrestart', 50);
model.sol('sol1').feature('s5').feature('i4').set('rhob', 20);
model.sol('sol1').feature('s5').feature('i4').set('maxlinit', 1000);
model.sol('sol1').feature('s5').feature('i4').set('nlinnormuse', 'on');
model.sol('sol1').feature('s5').feature('i4').label('AMG, fluid flow variables (fp2)');
model.sol('sol1').feature('s5').feature('i4').create('mg1', 'Multigrid');
model.sol('sol1').feature('s5').feature('i4').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s5').feature('i4').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s5').feature('i4').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('s5').feature('i4').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('s5').feature('i4').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s5').feature('i4').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s5').feature('i4').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s5').feature('i4').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s5').feature('i4').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s5').feature('i4').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s5').feature('i4').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s5').feature('i4').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('s5').feature('i4').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s5').feature('i4').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s5').feature('i4').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s5').feature('i4').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s5').feature('i4').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s5').feature('i4').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_fp2_inl1_Pinlfdf'});
model.sol('sol1').feature('s5').feature('i4').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s5').feature('i4').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s5').feature('i4').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s5').feature('i4').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s5').feature('i4').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s5').feature('i4').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s5').feature('i4').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s5').feature('i4').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s5').feature('i4').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s5').feature('i4').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s5').feature('i4').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s5').feature('i4').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_fp2_inl1_Pinlfdf'});
model.sol('sol1').feature('s5').feature('i4').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s5').feature('i4').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s5').feature('i4').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s5').feature('i4').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s5').feature('i4').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s5').feature('i4').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s5').feature.remove('fcDef');
model.sol('sol1').feature('v5').set('notsolnum', 'auto');
model.sol('sol1').feature('v5').set('notsolvertype', 'solnum');
model.sol('sol1').feature('v4').set('notsolnum', 'auto');
model.sol('sol1').feature('v4').set('notsolvertype', 'solnum');
model.sol('sol1').feature('v4').set('solnum', 'auto');
model.sol('sol1').feature('v4').set('solvertype', 'solnum');
model.sol('sol1').feature('v3').set('notsolnum', 'auto');
model.sol('sol1').feature('v3').set('notsolvertype', 'solnum');
model.sol('sol1').feature('v3').set('solnum', 'auto');
model.sol('sol1').feature('v3').set('solvertype', 'solnum');
model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol1').attach('std1');

model.probe('dom1').genResult('none');

model.sol('sol1').runAll;

model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 8, 0);
model.result('pg2').label('Electrode Potential with Respect to Ground (fc)');
model.result('pg2').create('mslc1', 'Multislice');
model.result('pg2').feature('mslc1').set('expr', {'fc.phis'});
model.result('pg2').create('arwv1', 'ArrowVolume');
model.result('pg2').feature('arwv1').set('expr', {'fc.Isx' 'fc.Isy' 'fc.Isz'});
model.result('pg2').feature('arwv1').set('arrowbase', 'center');
model.result('pg2').feature('arwv1').set('color', 'gray');
model.result('pg2').feature('arwv1').create('filt1', 'Filter');
model.result('pg2').feature('arwv1').feature('filt1').set('expr', 'isdefined(root.comp1.fc.phis)');
model.result('pg2').feature('arwv1').feature('filt1').set('nodespec', 'all');
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').set('data', 'dset1');
model.result('pg3').setIndex('looplevel', 8, 0);
model.result('pg3').label('Electrolyte Potential (fc)');
model.result('pg3').create('mslc1', 'Multislice');
model.result('pg3').feature('mslc1').set('expr', {'fc.phil'});
model.result('pg3').create('arwv1', 'ArrowVolume');
model.result('pg3').feature('arwv1').set('expr', {'fc.Ilx' 'fc.Ily' 'fc.Ilz'});
model.result('pg3').feature('arwv1').set('arrowbase', 'center');
model.result('pg3').feature('arwv1').set('color', 'gray');
model.result('pg3').feature('arwv1').create('filt1', 'Filter');
model.result('pg3').feature('arwv1').feature('filt1').set('expr', 'isdefined(fc.phil)');
model.result('pg3').feature('arwv1').feature('filt1').set('nodespec', 'all');
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').set('data', 'dset1');
model.result('pg4').setIndex('looplevel', 8, 0);
model.result('pg4').label('Mole Fraction, H2, Streamline (fc)');
model.result('pg4').set('titletype', 'custom');
model.result('pg4').set('typeintitle', true);
model.result('pg4').set('prefixintitle', 'Species H2:');
model.result('pg4').create('str1', 'Streamline');
model.result('pg4').feature('str1').set('expr', {'fc.tfluxH2x' 'fc.tfluxH2y' 'fc.tfluxH2z'});
model.result('pg4').feature('str1').set('posmethod', 'start');
model.result('pg4').feature('str1').set('pointtype', 'arrow');
model.result('pg4').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg4').feature('str1').set('color', 'gray');
model.result('pg4').feature('str1').create('col', 'Color');
model.result('pg4').feature('str1').feature('col').set('expr', 'fc.xH2');
model.result('pg4').feature('str1').feature('col').set('titletype', 'custom');
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').set('data', 'dset1');
model.result('pg5').setIndex('looplevel', 8, 0);
model.result('pg5').label('Mole Fraction, H2, Surface (fc)');
model.result('pg5').set('titletype', 'custom');
model.result('pg5').set('prefixintitle', 'Species H2:');
model.result('pg5').set('expressionintitle', false);
model.result('pg5').set('typeintitle', false);
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', {'fc.xH2'});
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').set('data', 'dset1');
model.result('pg6').setIndex('looplevel', 8, 0);
model.result('pg6').label('Mole Fraction, O2, Streamline (fc)');
model.result('pg6').set('titletype', 'custom');
model.result('pg6').set('typeintitle', true);
model.result('pg6').set('prefixintitle', 'Species O2:');
model.result('pg6').create('str1', 'Streamline');
model.result('pg6').feature('str1').set('expr', {'fc.tfluxO2x' 'fc.tfluxO2y' 'fc.tfluxO2z'});
model.result('pg6').feature('str1').set('posmethod', 'start');
model.result('pg6').feature('str1').set('pointtype', 'arrow');
model.result('pg6').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg6').feature('str1').set('color', 'gray');
model.result('pg6').feature('str1').create('col', 'Color');
model.result('pg6').feature('str1').feature('col').set('expr', 'fc.xO2');
model.result('pg6').feature('str1').feature('col').set('titletype', 'custom');
model.result.create('pg7', 'PlotGroup3D');
model.result('pg7').set('data', 'dset1');
model.result('pg7').setIndex('looplevel', 8, 0);
model.result('pg7').label('Mole Fraction, O2, Surface (fc)');
model.result('pg7').set('titletype', 'custom');
model.result('pg7').set('prefixintitle', 'Species O2:');
model.result('pg7').set('expressionintitle', false);
model.result('pg7').set('typeintitle', false);
model.result('pg7').create('surf1', 'Surface');
model.result('pg7').feature('surf1').set('expr', {'fc.xO2'});
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').set('data', 'dset1');
model.result('pg8').setIndex('looplevel', 8, 0);
model.result('pg8').label('Mole Fraction, H2O, Streamline (fc)');
model.result('pg8').set('titletype', 'custom');
model.result('pg8').set('typeintitle', true);
model.result('pg8').set('prefixintitle', 'Species H2O:');
model.result('pg8').create('str1', 'Streamline');
model.result('pg8').feature('str1').set('expr', {'fc.tfluxH2Ox' 'fc.tfluxH2Oy' 'fc.tfluxH2Oz'});
model.result('pg8').feature('str1').set('posmethod', 'start');
model.result('pg8').feature('str1').set('pointtype', 'arrow');
model.result('pg8').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg8').feature('str1').set('color', 'gray');
model.result('pg8').feature('str1').create('col', 'Color');
model.result('pg8').feature('str1').feature('col').set('expr', 'fc.xH2O');
model.result('pg8').feature('str1').feature('col').set('titletype', 'custom');
model.result.create('pg9', 'PlotGroup3D');
model.result('pg9').set('data', 'dset1');
model.result('pg9').setIndex('looplevel', 8, 0);
model.result('pg9').label('Mole Fraction, H2O, Surface (fc)');
model.result('pg9').set('titletype', 'custom');
model.result('pg9').set('prefixintitle', 'Species H2O:');
model.result('pg9').set('expressionintitle', false);
model.result('pg9').set('typeintitle', false);
model.result('pg9').create('surf1', 'Surface');
model.result('pg9').feature('surf1').set('expr', {'fc.xH2O'});
model.result.create('pg10', 'PlotGroup3D');
model.result('pg10').set('data', 'dset1');
model.result('pg10').setIndex('looplevel', 8, 0);
model.result('pg10').label('Mole Fraction, N2, Streamline (fc)');
model.result('pg10').set('titletype', 'custom');
model.result('pg10').set('typeintitle', true);
model.result('pg10').set('prefixintitle', 'Species N2:');
model.result('pg10').create('str1', 'Streamline');
model.result('pg10').feature('str1').set('expr', {'fc.tfluxN2x' 'fc.tfluxN2y' 'fc.tfluxN2z'});
model.result('pg10').feature('str1').set('posmethod', 'start');
model.result('pg10').feature('str1').set('pointtype', 'arrow');
model.result('pg10').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg10').feature('str1').set('color', 'gray');
model.result('pg10').feature('str1').create('col', 'Color');
model.result('pg10').feature('str1').feature('col').set('expr', 'fc.xN2');
model.result('pg10').feature('str1').feature('col').set('titletype', 'custom');
model.result.create('pg11', 'PlotGroup3D');
model.result('pg11').set('data', 'dset1');
model.result('pg11').setIndex('looplevel', 8, 0);
model.result('pg11').label('Mole Fraction, N2, Surface (fc)');
model.result('pg11').set('titletype', 'custom');
model.result('pg11').set('prefixintitle', 'Species N2:');
model.result('pg11').set('expressionintitle', false);
model.result('pg11').set('typeintitle', false);
model.result('pg11').create('surf1', 'Surface');
model.result('pg11').feature('surf1').set('expr', {'fc.xN2'});
model.result.dataset('dset1').set('geom', 'geom1');
model.result.create('pg12', 'PlotGroup3D');
model.result('pg12').label('Velocity (fp)');
model.result('pg12').set('frametype', 'spatial');
model.result('pg12').set('data', 'dset1');
model.result('pg12').setIndex('looplevel', 8, 0);
model.result('pg12').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pg1');
model.result('pg12').feature.create('slc1', 'Slice');
model.result('pg12').feature('slc1').label('Slice');
model.result('pg12').feature('slc1').set('showsolutionparams', 'on');
model.result('pg12').feature('slc1').set('expr', 'fp.U');
model.result('pg12').feature('slc1').set('smooth', 'internal');
model.result('pg12').feature('slc1').set('showsolutionparams', 'on');
model.result('pg12').feature('slc1').set('data', 'parent');
model.result.dataset.create('surf1', 'Surface');
model.result.dataset('surf1').label('Exterior Walls');
model.result.dataset('surf1').set('data', 'dset1');
model.result.dataset('surf1').selection.geom('geom1', 2);
model.result.dataset('surf1').selection.set([2 3 5 9 17 18 22 24 32 33]);
model.result.create('pg13', 'PlotGroup3D');
model.result('pg13').label('Pressure (fp)');
model.result('pg13').set('data', 'surf1');
model.result('pg13').setIndex('looplevel', 8, 0);
model.result('pg13').set('frametype', 'spatial');
model.result('pg13').set('data', 'surf1');
model.result('pg13').setIndex('looplevel', 8, 0);
model.result('pg13').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pcond2/pcond1/pg4');
model.result('pg13').feature.create('surf1', 'Surface');
model.result('pg13').feature('surf1').label('Surface');
model.result('pg13').feature('surf1').set('showsolutionparams', 'on');
model.result('pg13').feature('surf1').set('expr', 'pa');
model.result('pg13').feature('surf1').set('colortable', 'Dipole');
model.result('pg13').feature('surf1').set('smooth', 'internal');
model.result('pg13').feature('surf1').set('showsolutionparams', 'on');
model.result('pg13').feature('surf1').set('data', 'parent');
model.result('pg13').feature('surf1').feature.create('tran1', 'Transparency');
model.result.dataset('dset1').set('geom', 'geom1');
model.result.create('pg14', 'PlotGroup3D');
model.result('pg14').label('Velocity (fp2)');
model.result('pg14').set('frametype', 'spatial');
model.result('pg14').set('data', 'dset1');
model.result('pg14').setIndex('looplevel', 8, 0);
model.result('pg14').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pg1');
model.result('pg14').feature.create('slc1', 'Slice');
model.result('pg14').feature('slc1').label('Slice');
model.result('pg14').feature('slc1').set('showsolutionparams', 'on');
model.result('pg14').feature('slc1').set('expr', 'fp2.U');
model.result('pg14').feature('slc1').set('smooth', 'internal');
model.result('pg14').feature('slc1').set('showsolutionparams', 'on');
model.result('pg14').feature('slc1').set('data', 'parent');
model.result.dataset.create('surf2', 'Surface');
model.result.dataset('surf2').label('Exterior Walls 1');
model.result.dataset('surf2').set('data', 'dset1');
model.result.dataset('surf2').selection.geom('geom1', 2);
model.result.dataset('surf2').selection.set([11 12 14 16 20 21 26 29 34 35]);
model.result.create('pg15', 'PlotGroup3D');
model.result('pg15').label('Pressure (fp2)');
model.result('pg15').set('data', 'surf2');
model.result('pg15').setIndex('looplevel', 8, 0);
model.result('pg15').set('frametype', 'spatial');
model.result('pg15').set('data', 'surf2');
model.result('pg15').setIndex('looplevel', 8, 0);
model.result('pg15').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pcond2/pcond1/pg4');
model.result('pg15').feature.create('surf1', 'Surface');
model.result('pg15').feature('surf1').label('Surface');
model.result('pg15').feature('surf1').set('showsolutionparams', 'on');
model.result('pg15').feature('surf1').set('expr', 'pc');
model.result('pg15').feature('surf1').set('colortable', 'Dipole');
model.result('pg15').feature('surf1').set('smooth', 'internal');
model.result('pg15').feature('surf1').set('showsolutionparams', 'on');
model.result('pg15').feature('surf1').set('data', 'parent');
model.result('pg15').feature('surf1').feature.create('tran1', 'Transparency');
model.result('pg2').run;
model.result('pg5').run;
model.result('pg7').run;
model.result('pg9').run;
model.result('pg1').set('window', 'window1');
model.result('pg1').run;
model.result('pg1').label('Polarization Plot');
model.result('pg1').set('titletype', 'label');
model.result('pg1').set('xlabelactive', true);
model.result('pg1').set('xlabel', 'Cell average current density (A/cm<sup>2</sup>)');
model.result('pg1').set('ylabelactive', true);
model.result('pg1').set('ylabel', 'Cell voltage (V)');
model.result('pg1').set('switchxy', true);
model.result('pg1').set('showlegends', false);
model.result('pg1').set('window', 'window1');
model.result('pg1').run;
model.result.dataset.create('cpl1', 'CutPlane');
model.result.dataset('cpl1').set('quickplane', 'xy');
model.result.dataset('cpl1').set('quickz', 'H_ch+H_gdl+H_electrode+H_membrane/2');
model.result.create('pg16', 'PlotGroup2D');
model.result('pg16').run;
model.result('pg16').set('data', 'cpl1');
model.result('pg16').create('con1', 'Contour');
model.result('pg16').feature('con1').set('expr', 'fc.Ilz');
model.result('pg16').feature('con1').set('descr', 'Electrolyte current density vector, z-component');
model.result('pg16').feature('con1').set('number', 10);
model.result('pg16').run;
model.result('pg16').run;
model.result('pg16').label('Membrane Current Density');

model.title('Mass Transport Analysis of a High Temperature PEM Fuel Cell');

model.description('This example investigates the transport of reactants and water in a high temperature PEMFC. The model includes mass and momentum transport phenomena in the flow channels, gas diffusion layers (GDLs), and porous electrodes, as well as electrochemical currents in the GDLs, the porous electrodes, and the polymer membrane.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;

model.label('ht_pem.mph');

model.modelNode.label('Components');

out = model;
