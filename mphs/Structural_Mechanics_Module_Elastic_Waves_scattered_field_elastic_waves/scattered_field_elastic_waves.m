function out = model
%
% scattered_field_elastic_waves.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Structural_Mechanics_Module/Elastic_Waves');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.study.create('std1');
model.study('std1').create('freq', 'Frequency');
model.study('std1').feature('freq').setSolveFor('/physics/solid', true);

model.param.label('Material Parameters');
model.param.set('rho', '1[kg/m^3]');
model.param.descr('rho', 'Density of background material');
model.param.set('muLame', '1[Pa]');
model.param.descr('muLame', 'Shear modulus of background material');
model.param.set('lambLame', '2.3[Pa]');
model.param.descr('lambLame', ['First Lam' native2unicode(hex2dec({'00' 'e9'}), 'unicode') ' parameter of background material']);
model.param.set('rho_o', '2[kg/m^3]');
model.param.descr('rho_o', 'Density of elastic obstacle');
model.param.set('muLame_o', '1.1[Pa]');
model.param.descr('muLame_o', 'Shear modulus of elastic obstacle');
model.param.set('lambLame_o', '2.5[Pa]');
model.param.descr('lambLame_o', ['First Lam' native2unicode(hex2dec({'00' 'e9'}), 'unicode') ' parameter elastic obstacle']);
model.param.create('par2');
model.param('par2').label('P Wave Parameters');
model.param('par2').set('cP', 'sqrt((lambLame+2*muLame)/rho)');
model.param('par2').descr('cP', 'Speed of P waves');
model.param('par2').set('wlengthP', '1[m]');
model.param('par2').descr('wlengthP', 'Wavelength');
model.param('par2').set('kP', '2*pi[rad]/wlengthP');
model.param('par2').descr('kP', 'Wave number');
model.param('par2').set('omega', 'kP*cP');
model.param('par2').descr('omega', 'Angular frequency');
model.param.create('par3');
model.param('par3').label('S Wave Parameters');
model.param('par3').set('cS', 'sqrt(muLame/rho)');
model.param('par3').descr('cS', 'Speed of S waves');
model.param('par3').set('kS', 'omega/cS');
model.param('par3').descr('kS', 'Wave number');
model.param('par3').set('wlengthS', '2*pi/kS');
model.param('par3').descr('wlengthS', 'Wavelength');
model.param.create('par4');
model.param('par4').label('Geometrical Parameters');
model.param('par4').set('R', '5[m]');
model.param('par4').descr('R', 'Radius of computational domain');
model.param('par4').set('r_o', '1[m]');
model.param('par4').descr('r_o', 'Radius of inclusion');
model.param('par4').set('r_layer', '1[m]');
model.param('par4').descr('r_layer', 'Thickness of PML');

model.geom('geom1').create('c1', 'Circle');
model.geom('geom1').feature('c1').set('r', 'R');
model.geom('geom1').feature('c1').setIndex('layer', 'r_layer', 0);
model.geom('geom1').feature('c1').setIndex('layer', 'R-r_layer-r_o', 1);
model.geom('geom1').run('c1');
model.geom('geom1').create('arr1', 'Array');
model.geom('geom1').feature('arr1').selection('input').set({'c1'});
model.geom('geom1').feature('arr1').set('type', 'linear');
model.geom('geom1').feature('arr1').set('linearsize', 3);
model.geom('geom1').feature('arr1').set('displ', {'2*(R+r_o)' '0'});
model.geom('geom1').run('arr1');
model.geom('geom1').create('del1', 'Delete');
model.geom('geom1').feature('del1').selection('input').init(2);
model.geom('geom1').feature('del1').selection('input').set('arr1(1)', 9);
model.geom('geom1').feature('del1').selection('input').set('arr1(2)', 9);
model.geom('geom1').runPre('fin');

model.coordSystem.create('pml1', 'geom1', 'PML');

model.geom('geom1').run;

model.coordSystem('pml1').selection.set([1 2 5 8]);
model.coordSystem('pml1').set('ScalingType', 'Cylindrical');
model.coordSystem.create('pml2', 'geom1', 'PML');
model.coordSystem('pml2').selection.set([9 10 13 16]);
model.coordSystem('pml2').set('ScalingType', 'Cylindrical');
model.coordSystem.create('pml3', 'geom1', 'PML');
model.coordSystem('pml3').selection.set([17 18 21 24]);
model.coordSystem('pml3').set('ScalingType', 'Cylindrical');

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').label('Incident P Wave');
model.variable('var1').set('uP', 'exp(-1i*kP*x-1i*pi/2+1i*phase)[m]');
model.variable('var1').descr('uP', 'Incident wave: u field');
model.variable('var1').set('vP', '0[m]');
model.variable('var1').descr('vP', 'Incident wave: v field');
model.variable('var1').set('eps11P', 'd(uP,x)');
model.variable('var1').descr('eps11P', 'Incident wave: strain tensor, 11 component');
model.variable('var1').set('eps22P', 'd(vP,y)');
model.variable('var1').descr('eps22P', 'Incident wave: strain tensor, 22 component');
model.variable('var1').set('eps12P', '0.5*(d(uP,y)+d(vP,x))');
model.variable('var1').descr('eps12P', 'Incident wave: strain tensor, 12 component');
model.variable('var1').set('s11P', '(lambLame+2*muLame)*eps11P+lambLame*eps22P');
model.variable('var1').descr('s11P', 'Incident wave: stress tensor, 11 component');
model.variable('var1').set('s22P', 'lambLame*eps11P+(lambLame+2*muLame)*eps22P');
model.variable('var1').descr('s22P', 'Incident wave: stress tensor, 22 component');
model.variable('var1').set('s12P', '2*muLame*eps12P');
model.variable('var1').descr('s12P', 'Incident wave: stress tensor, 12 component');

model.physics('solid').feature('lemm1').label('Background Material');
model.physics('solid').feature('lemm1').set('IsotropicOption', 'CpCs');
model.physics('solid').feature('lemm1').set('cp_mat', 'userdef');
model.physics('solid').feature('lemm1').set('cp', 'cP');
model.physics('solid').feature('lemm1').set('cs_mat', 'userdef');
model.physics('solid').feature('lemm1').set('cs', 'cS');
model.physics('solid').feature('lemm1').set('rho_mat', 'userdef');
model.physics('solid').feature('lemm1').set('rho', 'rho');
model.physics('solid').create('bndl1', 'BoundaryLoad', 1);
model.physics('solid').feature('bndl1').label('Cavity Inclusion, P Wave');
model.physics('solid').feature('bndl1').selection.set([29 30 33 34]);
model.physics('solid').feature('bndl1').set('FperArea', {'-(s11P*solid.nx+s12P*solid.ny)' '-(s12P*solid.nx+s22P*solid.ny)' '0'});
model.physics('solid').create('disp1', 'Displacement1', 1);
model.physics('solid').feature('disp1').label('Infinitely Rigid Inclusion, P Wave');
model.physics('solid').feature('disp1').selection.set([41 42 45 46]);
model.physics('solid').feature('disp1').setIndex('Direction', 'prescribed', 0);
model.physics('solid').feature('disp1').setIndex('U0', '-uP', 0);
model.physics('solid').feature('disp1').setIndex('Direction', 'prescribed', 1);
model.physics('solid').feature('disp1').setIndex('U0', '-vP', 1);
model.physics('solid').create('lemm2', 'LinearElasticModel', 2);
model.physics('solid').feature('lemm2').label('Elastic Inclusion, P Wave');
model.physics('solid').feature('lemm2').selection.set([25]);
model.physics('solid').feature('lemm2').set('IsotropicOption', 'Lame');
model.physics('solid').feature('lemm2').set('lambLame_mat', 'userdef');
model.physics('solid').feature('lemm2').set('lambLame', 'lambLame_o');
model.physics('solid').feature('lemm2').set('muLame_mat', 'userdef');
model.physics('solid').feature('lemm2').set('muLame', 'muLame_o');
model.physics('solid').feature('lemm2').set('rho_mat', 'userdef');
model.physics('solid').feature('lemm2').set('rho', 'rho_o');
model.physics('solid').feature('lemm2').create('iss1', 'InitialStressandStrain', 2);
model.physics('solid').feature('lemm2').feature('iss1').set('Sil', {'-s11P' '-s12P' '0' '-s12P' '-s22P' '0' '0' '0' '0'});
model.physics('solid').feature('lemm2').feature('iss1').set('eil', {'-eps11P' '-eps12P' '0' '-eps12P' '-eps22P' '0' '0' '0' '0'});
model.physics('solid').create('bl1', 'BodyLoad', 2);
model.physics('solid').feature('bl1').label('Body Load (Elastic Inclusion), P Wave');
model.physics('solid').feature('bl1').selection.set([25]);
model.physics('solid').feature('bl1').set('FperVol', {'(rho-rho_o)*(-omega^2)*uP' '(rho-rho_o)*(-omega^2)*vP' '0'});

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('map1').selection.set([1 2 5 8 9 10 13 16 17 18 21 24]);
model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('size').set('custom', true);
model.mesh('mesh1').feature('size').set('hmax', 'wlengthS/6');
model.mesh('mesh1').feature('size').set('hmin', 'wlengthS/8');
model.mesh('mesh1').run;

model.study('std1').label('P Wave');
model.study('std1').setGenPlots(false);
model.study('std1').feature('freq').set('plist', 'omega/2/pi[rad]');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'omega/2/pi[rad]'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'Default');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').run;
model.result('pg1').label('Scattered u Field');
model.result('pg1').set('titletype', 'manual');
model.result('pg1').set('title', 'Displacement Field, X-component');
model.result('pg1').set('paramindicator', '');
model.result('pg1').set('edges', false);
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', 'u');
model.result('pg1').feature('surf1').set('colorscalemode', 'linearsymmetric');
model.result('pg1').feature('surf1').create('sel1', 'Selection');
model.result('pg1').feature('surf1').feature('sel1').selection.set([3 4 6 7 11 12 14 15 19 20 22 23 25]);
model.result('pg1').run;
model.result('pg1').create('tlan1', 'TableAnnotation');
model.result('pg1').feature('tlan1').set('source', 'localtable');
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 0, 0, 0);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 5, 0, 1);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 'Cavity', 0, 2);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 12, 1, 0);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 5, 1, 1);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 'Rigid', 1, 2);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 24, 2, 0);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 5, 2, 1);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 'Elastic', 2, 2);
model.result('pg1').run;
model.result('pg1').feature('tlan1').set('anchorpoint', 'center');
model.result('pg1').feature('tlan1').set('showpoint', false);
model.result('pg1').run;
model.result('pg1').run;
model.result.duplicate('pg2', 'pg1');
model.result('pg2').run;
model.result('pg2').label('Scattered v Field');
model.result('pg2').set('title', 'Displacement Field, Y-component');
model.result('pg2').run;
model.result('pg2').feature('surf1').set('expr', 'v');
model.result('pg2').run;
model.result('pg2').run;
model.result.duplicate('pg3', 'pg2');
model.result('pg3').run;
model.result('pg3').label('Scattered Displacement Field Magnitude');
model.result('pg3').set('title', 'Displacement Magnitude');
model.result('pg3').run;
model.result('pg3').feature('surf1').set('expr', 'solid.disp');
model.result('pg3').run;
model.result('pg3').feature('surf1').set('colorscalemode', 'linear');
model.result('pg3').feature('surf1').set('colortable', 'SpectrumLight');
model.result('pg3').run;
model.result.duplicate('pg4', 'pg3');
model.result('pg4').run;
model.result('pg4').label('Scattered P Wave');
model.result('pg4').set('title', 'Scattered P Wave');
model.result('pg4').run;
model.result('pg4').feature('surf1').set('expr', 'd(u,x)+d(v,y)');
model.result('pg4').run;
model.result('pg4').feature('surf1').set('colortable', 'Wave');
model.result('pg4').feature('surf1').set('colorscalemode', 'linearsymmetric');
model.result('pg4').run;
model.result('pg4').run;
model.result.duplicate('pg5', 'pg4');
model.result('pg5').run;
model.result('pg5').label('Scattered S Wave');
model.result('pg5').set('title', 'Scattered S Wave');
model.result('pg5').run;
model.result('pg5').feature('surf1').set('expr', 'solid.curlUZ');
model.result('pg5').feature('surf1').set('descr', 'Curl of displacement, Z-component');
model.result('pg5').run;
model.result('pg3').run;
model.result.duplicate('pg6', 'pg3');
model.result('pg6').run;
model.result('pg6').label('Total Displacement Field Magnitude');
model.result('pg6').set('title', 'Total Displacement Magnitude');
model.result('pg6').run;
model.result('pg6').feature('surf1').set('expr', 'sqrt((real(u+uP))^2+(real(v+vP))^2)');
model.result('pg6').run;
model.result('pg4').run;
model.result.duplicate('pg7', 'pg4');
model.result('pg7').run;
model.result('pg7').label('Total P Wave');
model.result('pg7').set('title', 'Total P Wave');
model.result('pg7').run;
model.result('pg7').feature('surf1').set('expr', 'd(u+uP,x)+d(v+vP,y)');
model.result('pg5').run;
model.result.duplicate('pg8', 'pg5');
model.result('pg8').run;
model.result('pg8').label('Total S Wave');
model.result('pg8').set('title', 'Total S Wave');
model.result('pg8').run;
model.result('pg8').feature('surf1').set('expr', 'd(v+vP,x)-d(u+uP,y)');
model.result('pg8').run;

model.variable.duplicate('var2', 'var1');
model.variable('var2').label('Incident S Wave');
model.variable('var2').rename('uP', 'uS');
model.variable('var2').set('uS', '0[m]');
model.variable('var2').rename('vP', 'vS');
model.variable('var2').set('vS', 'exp(-1i*kS*x-1i*pi/2+1i*phase)[m]');
model.variable('var2').rename('eps11P', 'eps11S');
model.variable('var2').set('eps11S', 'd(uS,x)');
model.variable('var2').rename('eps22P', 'eps22S');
model.variable('var2').set('eps22S', 'd(vS,y)');
model.variable('var2').rename('eps12P', 'eps12S');
model.variable('var2').set('eps12S', '0.5*(d(uS,y)+d(vS,x))');
model.variable('var2').rename('s11P', 's11S');
model.variable('var2').set('s11S', '(lambLame+2*muLame)*eps11S+lambLame*eps22S');
model.variable('var2').rename('s22P', 's22S');
model.variable('var2').set('s22S', 'lambLame*eps11S+(lambLame+2*muLame)*eps22S');
model.variable('var2').rename('s12P', 's12S');
model.variable('var2').set('s12S', '2*muLame*eps12S');

model.nodeGroup.create('grp1', 'Physics', 'solid');
model.nodeGroup('grp1').placeAfter('dcont1');
model.nodeGroup('grp1').add('bndl1');
model.nodeGroup('grp1').add('disp1');
model.nodeGroup('grp1').add('lemm2');
model.nodeGroup('grp1').add('bl1');
model.nodeGroup('grp1').label('P Wave');
model.nodeGroup.duplicate('grp2', 'grp1');
model.nodeGroup('grp2').label('S Wave');

model.physics('solid').feature('bndl2').label('Cavity Inclusion, S Wave');
model.physics('solid').feature('bndl2').set('FperArea', {'-(s11S*solid.nx+s12S*solid.ny)' '-(s12S*solid.nx+s22S*solid.ny)' '0'});
model.physics('solid').feature('disp2').label('Infinitely Rigid Inclusion, S Wave');
model.physics('solid').feature('disp2').setIndex('U0', '-uS', 0);
model.physics('solid').feature('disp2').setIndex('U0', '-vS', 1);
model.physics('solid').feature('lemm3').label('Elastic Inclusion, S Wave');
model.physics('solid').feature('lemm3').feature('iss1').label('Initial Stress and Strain');
model.physics('solid').feature('lemm3').feature('iss1').set('Sil', {'-s11S' '-s12S' '0' '-s12S' '-s22S' '0' '0' '0' '0'});
model.physics('solid').feature('lemm3').feature('iss1').set('eil', {'-eps11S' '-eps12S' '0' '-eps12S' '-eps22S' '0' '0' '0' '0'});
model.physics('solid').feature('bl2').label('Body Load (Elastic Inclusion), S Wave');
model.physics('solid').feature('bl2').set('FperVol', {'(rho-rho_o)*(-omega^2)*uS' '(rho-rho_o)*(-omega^2)*vS' '0'});

model.study('std1').feature('freq').set('useadvanceddisable', true);
model.study('std1').feature('freq').set('disabledphysics', {'solid/bndl2' 'solid/disp2' 'solid/lemm3' 'solid/bl2'});
model.study.create('std2');
model.study('std2').create('freq', 'Frequency');
model.study('std2').feature('freq').setSolveFor('/physics/solid', true);
model.study('std2').label('S Wave');
model.study('std2').setGenPlots(false);
model.study('std2').feature('freq').set('plist', 'omega/2/pi[rad]');
model.study('std2').feature('freq').set('useadvanceddisable', true);
model.study('std2').feature('freq').set('disabledphysics', {'solid/bndl1' 'solid/disp1' 'solid/lemm2' 'solid/bl1'});

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'freq');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'freq');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('p1', 'Parametric');
model.sol('sol2').feature('s1').feature.remove('pDef');
model.sol('sol2').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol2').feature('s1').feature('p1').set('plistarr', {'omega/2/pi[rad]'});
model.sol('sol2').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol2').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol2').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol2').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol2').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol2').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol2').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol2').feature('s1').feature('p1').set('probes', {});
model.sol('sol2').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol2').feature('s1').set('linpmethod', 'sol');
model.sol('sol2').feature('s1').set('linpsol', 'zero');
model.sol('sol2').feature('s1').set('control', 'freq');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result('pg1').run;
model.result('pg1').set('plotarrayenable', true);
model.result('pg1').set('arrayaxis', 'y');
model.result('pg1').feature('surf1').set('arraydim', '1');
model.result('pg1').run;
model.result('pg1').feature('surf1').label('Incident P Wave');
model.result('pg1').feature.duplicate('surf2', 'surf1');
model.result('pg1').feature('surf2').set('arraydim', '1');
model.result('pg1').run;
model.result('pg1').feature('surf2').label('Incident S Wave');
model.result('pg1').feature('surf2').set('data', 'dset2');
model.result('pg1').run;
model.result('pg1').feature('tlan1').set('arraydim', '1');
model.result('pg1').run;
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 0, 3, 0);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 15.5, 3, 1);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 'Cavity', 3, 2);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 12, 4, 0);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 15.5, 4, 1);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 'Rigid', 4, 2);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 24, 5, 0);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 15.5, 5, 1);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 'Elastic', 5, 2);
model.result('pg1').run;
model.result('pg1').create('tlan2', 'TableAnnotation');
model.result('pg1').feature('tlan2').set('arraydim', '1');
model.result('pg1').feature('tlan2').set('source', 'localtable');
model.result('pg1').feature('tlan2').setIndex('localtablematrix', -9, 0, 0);
model.result('pg1').feature('tlan2').setIndex('localtablematrix', 0, 0, 1);
model.result('pg1').feature('tlan2').setIndex('localtablematrix', 'P Wave', 0, 2);
model.result('pg1').feature('tlan2').setIndex('localtablematrix', -9, 1, 0);
model.result('pg1').feature('tlan2').setIndex('localtablematrix', 10.5, 1, 1);
model.result('pg1').feature('tlan2').setIndex('localtablematrix', 'S Wave', 1, 2);
model.result('pg1').feature('tlan2').set('anchorpoint', 'middleleft');
model.result('pg1').feature('tlan2').set('showpoint', false);
model.result('pg1').run;
model.result('pg1').feature('surf1').set('arraydim', '1');
model.result('pg1').run;
model.result('pg1').feature('surf1').set('rangecoloractive', true);
model.result('pg1').feature('surf1').set('rangecolormin', -1.5);
model.result('pg1').feature('surf1').set('rangecolormax', 1.5);
model.result('pg1').feature('surf2').set('arraydim', '1');
model.result('pg1').run;
model.result('pg1').feature('surf2').set('inheritplot', 'surf1');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').set('view', 'new');
model.result('pg1').run;
model.result('pg2').run;
model.result('pg2').set('plotarrayenable', true);
model.result('pg2').set('arrayaxis', 'y');
model.result('pg2').feature('surf1').set('arraydim', '1');
model.result('pg2').run;
model.result('pg2').feature('surf1').label('Incident P Wave');
model.result('pg2').feature.duplicate('surf2', 'surf1');
model.result('pg2').feature('surf2').set('arraydim', '1');
model.result('pg2').run;
model.result('pg2').feature('surf2').label('Incident S Wave');
model.result('pg2').feature('surf2').set('data', 'dset2');
model.result('pg2').feature('surf1').set('arraydim', '1');
model.result('pg2').run;
model.result('pg2').feature('surf1').set('rangecoloractive', true);
model.result('pg2').feature('surf1').set('rangecolormin', -1.5);
model.result('pg2').feature('surf1').set('rangecolormax', 1.5);
model.result('pg2').feature('surf2').set('arraydim', '1');
model.result('pg2').run;
model.result('pg2').feature('surf2').set('inheritplot', 'surf1');
model.result('pg2').feature('tlan1').set('arraydim', '1');
model.result('pg2').run;
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 0, 3, 0);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 15.5, 3, 1);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 'Cavity', 3, 2);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 12, 4, 0);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 15.5, 4, 1);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 'Rigid', 4, 2);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 24, 5, 0);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 15.5, 5, 1);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 'Elastic', 5, 2);
model.result('pg2').run;
model.result('pg2').create('tlan2', 'TableAnnotation');
model.result('pg2').feature('tlan2').set('arraydim', '1');
model.result('pg2').feature('tlan2').set('source', 'localtable');
model.result('pg2').feature('tlan2').setIndex('localtablematrix', -9, 0, 0);
model.result('pg2').feature('tlan2').setIndex('localtablematrix', 0, 0, 1);
model.result('pg2').feature('tlan2').setIndex('localtablematrix', 'P Wave', 0, 2);
model.result('pg2').feature('tlan2').setIndex('localtablematrix', -9, 1, 0);
model.result('pg2').feature('tlan2').setIndex('localtablematrix', 10.5, 1, 1);
model.result('pg2').feature('tlan2').setIndex('localtablematrix', 'S Wave', 1, 2);
model.result('pg2').feature('tlan2').set('anchorpoint', 'middleleft');
model.result('pg2').feature('tlan2').set('showpoint', false);
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').set('view', 'view2');
model.result('pg3').run;
model.result('pg3').set('plotarrayenable', true);
model.result('pg3').set('arrayaxis', 'y');
model.result('pg3').feature('surf1').set('arraydim', '1');
model.result('pg3').run;
model.result('pg3').feature('surf1').label('Incident P Wave');
model.result('pg3').feature.duplicate('surf2', 'surf1');
model.result('pg3').feature('surf2').set('arraydim', '1');
model.result('pg3').run;
model.result('pg3').feature('surf2').label('Incident S Wave');
model.result('pg3').feature('surf2').set('data', 'dset2');
model.result('pg3').feature('surf1').set('arraydim', '1');
model.result('pg3').run;
model.result('pg3').feature('surf1').set('rangecoloractive', true);
model.result('pg3').feature('surf1').set('rangecolormin', 0);
model.result('pg3').feature('surf1').set('rangecolormax', 2.5);
model.result('pg3').feature('surf2').set('arraydim', '1');
model.result('pg3').run;
model.result('pg3').feature('surf2').set('inheritplot', 'surf1');
model.result('pg3').feature('tlan1').set('arraydim', '1');
model.result('pg3').run;
model.result('pg3').feature('tlan1').setIndex('localtablematrix', 0, 3, 0);
model.result('pg3').feature('tlan1').setIndex('localtablematrix', 15.5, 3, 1);
model.result('pg3').feature('tlan1').setIndex('localtablematrix', 'Cavity', 3, 2);
model.result('pg3').feature('tlan1').setIndex('localtablematrix', 12, 4, 0);
model.result('pg3').feature('tlan1').setIndex('localtablematrix', 15.5, 4, 1);
model.result('pg3').feature('tlan1').setIndex('localtablematrix', 'Rigid', 4, 2);
model.result('pg3').feature('tlan1').setIndex('localtablematrix', 24, 5, 0);
model.result('pg3').feature('tlan1').setIndex('localtablematrix', 15.5, 5, 1);
model.result('pg3').feature('tlan1').setIndex('localtablematrix', 'Elastic', 5, 2);
model.result('pg3').run;
model.result('pg3').create('tlan2', 'TableAnnotation');
model.result('pg3').feature('tlan2').set('arraydim', '1');
model.result('pg3').feature('tlan2').set('source', 'localtable');
model.result('pg3').feature('tlan2').setIndex('localtablematrix', -9, 0, 0);
model.result('pg3').feature('tlan2').setIndex('localtablematrix', 0, 0, 1);
model.result('pg3').feature('tlan2').setIndex('localtablematrix', 'P Wave', 0, 2);
model.result('pg3').feature('tlan2').setIndex('localtablematrix', -9, 1, 0);
model.result('pg3').feature('tlan2').setIndex('localtablematrix', 10.5, 1, 1);
model.result('pg3').feature('tlan2').setIndex('localtablematrix', 'S Wave', 1, 2);
model.result('pg3').feature('tlan2').set('anchorpoint', 'middleleft');
model.result('pg3').feature('tlan2').set('showpoint', false);
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').set('view', 'view2');
model.result('pg4').run;
model.result('pg4').set('plotarrayenable', true);
model.result('pg4').set('arrayaxis', 'y');
model.result('pg4').feature('surf1').set('arraydim', '1');
model.result('pg4').run;
model.result('pg4').feature('surf1').label('Incident P Wave');
model.result('pg4').feature.duplicate('surf2', 'surf1');
model.result('pg4').feature('surf2').set('arraydim', '1');
model.result('pg4').run;
model.result('pg4').feature('surf2').label('Incident S Wave');
model.result('pg4').feature('surf2').set('data', 'dset2');
model.result('pg4').feature('tlan1').set('arraydim', '1');
model.result('pg4').run;
model.result('pg4').feature('tlan1').setIndex('localtablematrix', 0, 3, 0);
model.result('pg4').feature('tlan1').setIndex('localtablematrix', 15.5, 3, 1);
model.result('pg4').feature('tlan1').setIndex('localtablematrix', 'Cavity', 3, 2);
model.result('pg4').feature('tlan1').setIndex('localtablematrix', 12, 4, 0);
model.result('pg4').feature('tlan1').setIndex('localtablematrix', 15.5, 4, 1);
model.result('pg4').feature('tlan1').setIndex('localtablematrix', 'Rigid', 4, 2);
model.result('pg4').feature('tlan1').setIndex('localtablematrix', 24, 5, 0);
model.result('pg4').feature('tlan1').setIndex('localtablematrix', 15.5, 5, 1);
model.result('pg4').feature('tlan1').setIndex('localtablematrix', 'Elastic', 5, 2);
model.result('pg4').run;
model.result('pg4').create('tlan2', 'TableAnnotation');
model.result('pg4').feature('tlan2').set('arraydim', '1');
model.result('pg4').feature('tlan2').set('source', 'localtable');
model.result('pg4').feature('tlan2').setIndex('localtablematrix', -9, 0, 0);
model.result('pg4').feature('tlan2').setIndex('localtablematrix', 0, 0, 1);
model.result('pg4').feature('tlan2').setIndex('localtablematrix', 'P Wave', 0, 2);
model.result('pg4').feature('tlan2').setIndex('localtablematrix', -9, 1, 0);
model.result('pg4').feature('tlan2').setIndex('localtablematrix', 10.5, 1, 1);
model.result('pg4').feature('tlan2').setIndex('localtablematrix', 'S Wave', 1, 2);
model.result('pg4').feature('tlan2').set('anchorpoint', 'middleleft');
model.result('pg4').feature('tlan2').set('showpoint', false);
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').set('view', 'view2');
model.result('pg5').run;
model.result('pg5').set('plotarrayenable', true);
model.result('pg5').set('arrayaxis', 'y');
model.result('pg5').feature('surf1').set('arraydim', '1');
model.result('pg5').run;
model.result('pg5').feature('surf1').label('Incident P Wave');
model.result('pg5').feature.duplicate('surf2', 'surf1');
model.result('pg5').feature('surf2').set('arraydim', '1');
model.result('pg5').run;
model.result('pg5').feature('surf2').label('Incident S Wave');
model.result('pg5').feature('surf2').set('data', 'dset2');
model.result('pg5').run;
model.result('pg5').feature('tlan1').set('arraydim', '1');
model.result('pg5').run;
model.result('pg5').feature('tlan1').setIndex('localtablematrix', 0, 3, 0);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', 15.5, 3, 1);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', 'Cavity', 3, 2);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', 12, 4, 0);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', 15.5, 4, 1);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', 'Rigid', 4, 2);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', 24, 5, 0);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', 15.5, 5, 1);
model.result('pg5').feature('tlan1').setIndex('localtablematrix', 'Elastic', 5, 2);
model.result('pg5').run;
model.result('pg5').create('tlan2', 'TableAnnotation');
model.result('pg5').feature('tlan2').set('arraydim', '1');
model.result('pg5').feature('tlan2').set('source', 'localtable');
model.result('pg5').feature('tlan2').setIndex('localtablematrix', -9, 0, 0);
model.result('pg5').feature('tlan2').setIndex('localtablematrix', 0, 0, 1);
model.result('pg5').feature('tlan2').setIndex('localtablematrix', 'P Wave', 0, 2);
model.result('pg5').feature('tlan2').setIndex('localtablematrix', -9, 1, 0);
model.result('pg5').feature('tlan2').setIndex('localtablematrix', 10.5, 1, 1);
model.result('pg5').feature('tlan2').setIndex('localtablematrix', 'S Wave', 1, 2);
model.result('pg5').feature('tlan2').set('anchorpoint', 'middleleft');
model.result('pg5').feature('tlan2').set('showpoint', false);
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').set('view', 'view2');
model.result('pg6').run;
model.result('pg6').set('plotarrayenable', true);
model.result('pg6').set('arrayaxis', 'y');
model.result('pg6').feature('surf1').set('arraydim', '1');
model.result('pg6').run;
model.result('pg6').feature('surf1').label('Incident P Wave');
model.result('pg6').feature.duplicate('surf2', 'surf1');
model.result('pg6').feature('surf2').set('arraydim', '1');
model.result('pg6').run;
model.result('pg6').feature('surf2').label('Incident S Wave');
model.result('pg6').feature('surf2').set('data', 'dset2');
model.result('pg6').feature('surf2').set('expr', 'sqrt((real(u+uS))^2+(real(v+vS))^2)');
model.result('pg6').feature('tlan1').set('arraydim', '1');
model.result('pg6').run;
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 0, 3, 0);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 15.5, 3, 1);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 'Cavity', 3, 2);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 12, 4, 0);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 15.5, 4, 1);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 'Rigid', 4, 2);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 24, 5, 0);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 15.5, 5, 1);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 'Elastic', 5, 2);
model.result('pg6').run;
model.result('pg6').create('tlan2', 'TableAnnotation');
model.result('pg6').feature('tlan2').set('arraydim', '1');
model.result('pg6').feature('tlan2').set('source', 'localtable');
model.result('pg6').feature('tlan2').setIndex('localtablematrix', -9, 0, 0);
model.result('pg6').feature('tlan2').setIndex('localtablematrix', 0, 0, 1);
model.result('pg6').feature('tlan2').setIndex('localtablematrix', 'P Wave', 0, 2);
model.result('pg6').feature('tlan2').setIndex('localtablematrix', -9, 1, 0);
model.result('pg6').feature('tlan2').setIndex('localtablematrix', 10.5, 1, 1);
model.result('pg6').feature('tlan2').setIndex('localtablematrix', 'S Wave', 1, 2);
model.result('pg6').feature('tlan2').set('anchorpoint', 'middleleft');
model.result('pg6').feature('tlan2').set('showpoint', false);
model.result('pg6').run;
model.result('pg6').run;
model.result('pg6').set('view', 'view2');
model.result('pg7').run;
model.result('pg7').set('plotarrayenable', true);
model.result('pg7').set('arrayaxis', 'y');
model.result('pg7').feature('surf1').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('surf1').label('Incident P Wave');
model.result('pg7').feature.duplicate('surf2', 'surf1');
model.result('pg7').feature('surf2').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('surf2').label('Incident S Wave');
model.result('pg7').feature('surf2').set('data', 'dset2');
model.result('pg7').feature('surf2').set('expr', 'd(u+uS,x)+d(v+vS,y)');
model.result('pg7').run;
model.result('pg7').feature('tlan1').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 0, 3, 0);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 15.5, 3, 1);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 'Cavity', 3, 2);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 12, 4, 0);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 15.5, 4, 1);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 'Rigid', 4, 2);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 24, 5, 0);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 15.5, 5, 1);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 'Elastic', 5, 2);
model.result('pg7').run;
model.result('pg7').create('tlan2', 'TableAnnotation');
model.result('pg7').feature('tlan2').set('arraydim', '1');
model.result('pg7').feature('tlan2').set('source', 'localtable');
model.result('pg7').feature('tlan2').setIndex('localtablematrix', -9, 0, 0);
model.result('pg7').feature('tlan2').setIndex('localtablematrix', 0, 0, 1);
model.result('pg7').feature('tlan2').setIndex('localtablematrix', 'P Wave', 0, 2);
model.result('pg7').feature('tlan2').setIndex('localtablematrix', -9, 1, 0);
model.result('pg7').feature('tlan2').setIndex('localtablematrix', 10.5, 1, 1);
model.result('pg7').feature('tlan2').setIndex('localtablematrix', 'S Wave', 1, 2);
model.result('pg7').feature('tlan2').set('anchorpoint', 'middleleft');
model.result('pg7').feature('tlan2').set('showpoint', false);
model.result('pg7').run;
model.result('pg7').run;
model.result('pg7').set('view', 'view2');
model.result('pg8').run;
model.result('pg8').set('plotarrayenable', true);
model.result('pg8').set('arrayaxis', 'y');
model.result('pg8').feature('surf1').set('arraydim', '1');
model.result('pg8').run;
model.result('pg8').feature('surf1').label('Incident P Wave');
model.result('pg8').feature.duplicate('surf2', 'surf1');
model.result('pg8').feature('surf2').set('arraydim', '1');
model.result('pg8').run;
model.result('pg8').feature('surf2').label('Incident S Wave');
model.result('pg8').feature('surf2').set('data', 'dset2');
model.result('pg8').feature('surf2').set('expr', 'd(v+vS,x)-d(u+uS,y)');
model.result('pg8').feature('tlan1').set('arraydim', '1');
model.result('pg8').run;
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 0, 3, 0);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 15.5, 3, 1);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 'Cavity', 3, 2);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 12, 4, 0);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 15.5, 4, 1);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 'Rigid', 4, 2);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 24, 5, 0);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 15.5, 5, 1);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 'Elastic', 5, 2);
model.result('pg8').run;
model.result('pg8').create('tlan2', 'TableAnnotation');
model.result('pg8').feature('tlan2').set('arraydim', '1');
model.result('pg8').feature('tlan2').set('source', 'localtable');
model.result('pg8').feature('tlan2').setIndex('localtablematrix', -9, 0, 0);
model.result('pg8').feature('tlan2').setIndex('localtablematrix', 0, 0, 1);
model.result('pg8').feature('tlan2').setIndex('localtablematrix', 'P Wave', 0, 2);
model.result('pg8').feature('tlan2').setIndex('localtablematrix', -9, 1, 0);
model.result('pg8').feature('tlan2').setIndex('localtablematrix', 10.5, 1, 1);
model.result('pg8').feature('tlan2').setIndex('localtablematrix', 'S Wave', 1, 2);
model.result('pg8').feature('tlan2').set('anchorpoint', 'middleleft');
model.result('pg8').feature('tlan2').set('showpoint', false);
model.result('pg8').run;
model.result('pg8').run;
model.result('pg8').set('view', 'view2');
model.result('pg1').run;

model.nodeGroup.create('grp3', 'Results');
model.nodeGroup('grp3').set('type', 'plotgroup');
model.nodeGroup('grp3').add('plotgroup', 'pg1');
model.nodeGroup('grp3').add('plotgroup', 'pg2');
model.nodeGroup('grp3').add('plotgroup', 'pg3');
model.nodeGroup('grp3').add('plotgroup', 'pg4');
model.nodeGroup('grp3').add('plotgroup', 'pg5');
model.nodeGroup('grp3').add('plotgroup', 'pg6');
model.nodeGroup('grp3').add('plotgroup', 'pg7');
model.nodeGroup('grp3').add('plotgroup', 'pg8');
model.nodeGroup('grp3').label('Plane Wave');

model.geom('geom1').create('pt1', 'Point');
model.geom('geom1').feature('pt1').setIndex('p', '-((R-r_layer-r_o)/2+r_o)*cos(pi/4)', 0);
model.geom('geom1').feature('pt1').setIndex('p', '((R-r_layer-r_o)/2+r_o)*sin(pi/4)', 1);
model.geom('geom1').run('pt1');
model.geom('geom1').feature.move('pt1', 1);
model.geom('geom1').run('pt1');
model.geom('geom1').feature('arr1').selection('input').set({'c1' 'pt1'});
model.geom('geom1').runPre('fin');
model.geom('geom1').run;

model.physics('solid').create('pl1', 'PointLoad', 0);
model.physics('solid').feature('pl1').selection.set([29]);
model.physics('solid').feature('pl1').set('Fp', [1 0 0]);

model.study.create('std3');
model.study('std3').create('freq', 'Frequency');
model.study('std3').feature('freq').setSolveFor('/physics/solid', true);
model.study('std3').setGenPlots(false);
model.study('std3').label('Point Source Incident Field');
model.study('std1').feature('freq').set('disabledphysics', {'solid/bndl2' 'solid/disp2' 'solid/lemm3' 'solid/bl2' 'solid/pl1'});
model.study('std2').feature('freq').set('disabledphysics', {'solid/bndl1' 'solid/disp1' 'solid/lemm2' 'solid/bl1' 'solid/pl1'});
model.study('std3').feature('freq').set('plist', 'omega/2/pi[rad]');
model.study('std3').feature('freq').set('useadvanceddisable', true);
model.study('std3').feature('freq').set('disabledphysics', {'solid/bndl1' 'solid/disp1' 'solid/lemm2' 'solid/bl1' 'solid/bndl2' 'solid/disp2' 'solid/lemm3' 'solid/bl2'});

model.sol.create('sol3');
model.sol('sol3').study('std3');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std3');
model.sol('sol3').feature('st1').set('studystep', 'freq');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').set('control', 'freq');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').create('p1', 'Parametric');
model.sol('sol3').feature('s1').feature.remove('pDef');
model.sol('sol3').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol3').feature('s1').feature('p1').set('plistarr', {'omega/2/pi[rad]'});
model.sol('sol3').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol3').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol3').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol3').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol3').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol3').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol3').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol3').feature('s1').feature('p1').set('probes', {});
model.sol('sol3').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol3').feature('s1').set('linpmethod', 'sol');
model.sol('sol3').feature('s1').set('linpsol', 'zero');
model.sol('sol3').feature('s1').set('control', 'freq');
model.sol('sol3').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol('sol3').attach('std3');
model.sol('sol3').runAll;

model.result.create('pg9', 'PlotGroup2D');
model.result('pg9').run;
model.result('pg9').label('Point Source Background Fields');
model.result('pg9').set('data', 'dset3');
model.result('pg9').set('edges', false);
model.result('pg9').set('plotarrayenable', true);
model.result('pg9').create('surf1', 'Surface');
model.result('pg9').feature('surf1').set('arraydim', '1');
model.result('pg9').feature('surf1').label('Displacement Magnitude');
model.result('pg9').feature('surf1').set('colortable', 'SpectrumLight');
model.result('pg9').feature('surf1').create('sel1', 'Selection');
model.result('pg9').feature('surf1').feature('sel1').selection.set([19 20 22 23 25]);
model.result('pg9').run;
model.result('pg9').feature('surf1').set('arraydim', '1');
model.result('pg9').run;
model.result('pg9').feature('surf1').set('rangecoloractive', true);
model.result('pg9').feature('surf1').set('rangecolormin', 0);
model.result('pg9').feature('surf1').set('rangecolormax', 0.15);
model.result('pg9').run;
model.result('pg9').feature.duplicate('surf2', 'surf1');
model.result('pg9').feature('surf2').set('arraydim', '1');
model.result('pg9').run;
model.result('pg9').feature('surf2').label('P Wave');
model.result('pg9').feature('surf2').set('expr', 'd(u,x)+d(v,y)');
model.result('pg9').feature('surf2').set('rangecoloractive', false);
model.result('pg9').feature('surf2').set('colortable', 'Wave');
model.result('pg9').feature('surf2').set('rangecoloractive', true);
model.result('pg9').feature('surf2').set('rangecolormin', -0.8);
model.result('pg9').feature('surf2').set('rangecolormax', 0.8);
model.result('pg9').run;
model.result('pg9').feature.duplicate('surf3', 'surf2');
model.result('pg9').feature('surf3').set('arraydim', '1');
model.result('pg9').run;
model.result('pg9').feature('surf3').label('S Wave');
model.result('pg9').feature('surf3').set('expr', 'd(v,x)-d(u,y)');
model.result('pg9').run;
model.result('pg9').feature('surf3').set('rangecolormin', -4);
model.result('pg9').feature('surf3').set('rangecolormax', 4);
model.result('pg9').run;
model.result('pg9').run;
model.result('pg9').create('tlan1', 'TableAnnotation');
model.result('pg9').feature('tlan1').set('arraydim', '1');
model.result('pg9').feature('tlan1').set('source', 'localtable');
model.result('pg9').feature('tlan1').setIndex('localtablematrix', 24, 0, 0);
model.result('pg9').feature('tlan1').setIndex('localtablematrix', 5, 0, 1);
model.result('pg9').feature('tlan1').setIndex('localtablematrix', 'Displacement', 0, 2);
model.result('pg9').feature('tlan1').setIndex('localtablematrix', 34.4, 1, 0);
model.result('pg9').feature('tlan1').setIndex('localtablematrix', 5, 1, 1);
model.result('pg9').feature('tlan1').setIndex('localtablematrix', 'P Wave', 1, 2);
model.result('pg9').feature('tlan1').setIndex('localtablematrix', 44.6, 2, 0);
model.result('pg9').feature('tlan1').setIndex('localtablematrix', 5, 2, 1);
model.result('pg9').feature('tlan1').setIndex('localtablematrix', 'S Wave', 2, 2);
model.result('pg9').feature('tlan1').set('showpoint', false);
model.result('pg9').feature('tlan1').set('anchorpoint', 'center');
model.result('pg9').run;
model.result('pg9').run;
model.result('pg9').set('titletype', 'manual');
model.result('pg9').set('title', 'Point Source Background Fields');
model.result('pg9').set('paramindicator', '');

model.view.create('view3', 2);

model.result('pg9').run;
model.result('pg9').set('view', 'view3');

model.variable.duplicate('var3', 'var2');
model.variable('var3').label('Point Source');
model.variable('var3').rename('uS', 'uPS');
model.variable('var3').set('uPS', 'withsol(''sol3'',u)*exp(1i*phase)');
model.variable('var3').rename('vS', 'vPS');
model.variable('var3').set('vPS', 'withsol(''sol3'',v)*exp(1i*phase)');
model.variable('var3').rename('eps11S', 'eps11PS');
model.variable('var3').set('eps11PS', 'withsol(''sol3'',solid.el11)*exp(1i*phase)');
model.variable('var3').rename('eps22S', 'eps22PS');
model.variable('var3').set('eps22PS', 'withsol(''sol3'',solid.el22)*exp(1i*phase)');
model.variable('var3').rename('eps12S', 'eps12PS');
model.variable('var3').set('eps12PS', 'withsol(''sol3'',solid.el12)*exp(1i*phase)');
model.variable('var3').rename('s11S', 's11PS');
model.variable('var3').set('s11PS', 'withsol(''sol3'',solid.sl11)*exp(1i*phase)');
model.variable('var3').rename('s22S', 's22PS');
model.variable('var3').set('s22PS', 'withsol(''sol3'',solid.sl22)*exp(1i*phase)');
model.variable('var3').rename('s12S', 's12PS');
model.variable('var3').set('s12PS', 'withsol(''sol3'',solid.sl12)*exp(1i*phase)');

model.cpl.create('genext1', 'GeneralExtrusion', 'geom1');
model.cpl('genext1').selection.set([17 18 19 20 21 22 23 24 25]);
model.cpl('genext1').set('dstmap', {'x+24' 'y'});
model.cpl.duplicate('genext2', 'genext1');
model.cpl('genext2').set('dstmap', {'x+12' 'y'});

model.nodeGroup.duplicate('grp4', 'grp2');
model.nodeGroup('grp4').label('Point Source');

model.physics('solid').feature('bndl3').label('Cavity Inclusion, Point Source');
model.physics('solid').feature('bndl3').set('FperArea', {'-(genext1(s11PS)*solid.nx+genext1(s12PS)*solid.ny)' '-(genext1(s12PS)*solid.nx+genext1(s22PS)*solid.ny)' '0'});
model.physics('solid').feature('disp3').label('Infinitely Rigid Inclusion, Point Source');
model.physics('solid').feature('disp3').setIndex('U0', '-genext2(uPS)', 0);
model.physics('solid').feature('disp3').setIndex('U0', '-genext2(vPS)', 1);
model.physics('solid').feature('lemm4').label('Elastic Inclusion, Point Source');
model.physics('solid').feature('lemm4').feature('iss1').set('Sil', {'-s11PS' '-s12PS' '0' '-s12PS' '-s22PS' '0' '0' '0' '0'});
model.physics('solid').feature('lemm4').feature('iss1').set('eil', {'-eps11PS' '-eps12PS' '0' '-eps12PS' '-eps22PS' '0' '0' '0' '0'});
model.physics('solid').feature('bl3').label('Body load (Elastic Inclusion), Point Source');
model.physics('solid').feature('bl3').set('FperVol', {'(rho-rho_o)*(-omega^2)*uPS' '(rho-rho_o)*(-omega^2)*vPS' '0'});

model.study.create('std4');
model.study('std4').create('freq', 'Frequency');
model.study('std4').feature('freq').setSolveFor('/physics/solid', true);
model.study('std4').label('Point Source Scattered Field');
model.study('std4').setGenPlots(false);
model.study('std1').feature('freq').set('disabledphysics', {'solid/bndl2' 'solid/disp2' 'solid/lemm3' 'solid/bl2' 'solid/pl1' 'solid/bndl3' 'solid/disp3' 'solid/lemm4' 'solid/bl3'});
model.study('std2').feature('freq').set('disabledphysics', {'solid/bndl1' 'solid/disp1' 'solid/lemm2' 'solid/bl1' 'solid/pl1' 'solid/bndl3' 'solid/disp3' 'solid/lemm4' 'solid/bl3'});
model.study('std3').feature('freq').set('disabledphysics', {'solid/bndl1' 'solid/disp1' 'solid/lemm2' 'solid/bl1' 'solid/bndl2' 'solid/disp2' 'solid/lemm3' 'solid/bl2' 'solid/bndl3' 'solid/disp3'  ...
'solid/lemm4' 'solid/bl3'});
model.study('std4').feature('freq').set('plist', 'omega/2/pi[rad]');
model.study('std4').feature('freq').set('useadvanceddisable', true);
model.study('std4').feature('freq').set('disabledphysics', {'solid/bndl1' 'solid/disp1' 'solid/lemm2' 'solid/bl1' 'solid/bndl2' 'solid/disp2' 'solid/lemm3' 'solid/bl2' 'solid/pl1'});

model.sol.create('sol4');
model.sol('sol4').study('std4');
model.sol('sol4').create('st1', 'StudyStep');
model.sol('sol4').feature('st1').set('study', 'std4');
model.sol('sol4').feature('st1').set('studystep', 'freq');
model.sol('sol4').create('v1', 'Variables');
model.sol('sol4').feature('v1').set('control', 'freq');
model.sol('sol4').create('s1', 'Stationary');
model.sol('sol4').feature('s1').create('p1', 'Parametric');
model.sol('sol4').feature('s1').feature.remove('pDef');
model.sol('sol4').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol4').feature('s1').feature('p1').set('plistarr', {'omega/2/pi[rad]'});
model.sol('sol4').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol4').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol4').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol4').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol4').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol4').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol4').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol4').feature('s1').feature('p1').set('probes', {});
model.sol('sol4').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol4').feature('s1').set('linpmethod', 'sol');
model.sol('sol4').feature('s1').set('linpsol', 'zero');
model.sol('sol4').feature('s1').set('control', 'freq');
model.sol('sol4').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol4').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol4').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol4').feature('s1').feature.remove('fcDef');
model.sol('sol4').attach('std4');
model.sol('sol4').runAll;

model.result.create('pg10', 'PlotGroup2D');
model.result('pg10').run;
model.result('pg10').label('Point Source Scattered Displacement Field Magnitude');
model.result('pg10').set('titletype', 'manual');
model.result('pg10').set('title', 'Displacement Magnitude');
model.result('pg10').set('paramindicator', '');
model.result('pg10').set('data', 'dset4');
model.result('pg10').create('surf1', 'Surface');
model.result('pg10').feature('surf1').create('sel1', 'Selection');
model.result('pg10').feature('surf1').feature('sel1').selection.set([3 4 6 7 11 12 14 15 19 20 22 23 25]);
model.result('pg10').run;
model.result('pg10').feature('surf1').set('colortable', 'SpectrumLight');
model.result('pg10').run;
model.result('pg10').set('edges', false);
model.result('pg10').create('tlan1', 'TableAnnotation');
model.result('pg10').feature('tlan1').set('source', 'localtable');
model.result('pg10').feature('tlan1').setIndex('localtablematrix', 0, 0, 0);
model.result('pg10').feature('tlan1').setIndex('localtablematrix', 5, 0, 1);
model.result('pg10').feature('tlan1').setIndex('localtablematrix', 'Cavity', 0, 2);
model.result('pg10').feature('tlan1').setIndex('localtablematrix', 12, 1, 0);
model.result('pg10').feature('tlan1').setIndex('localtablematrix', 5, 1, 1);
model.result('pg10').feature('tlan1').setIndex('localtablematrix', 'Rigid', 1, 2);
model.result('pg10').feature('tlan1').setIndex('localtablematrix', 24, 2, 0);
model.result('pg10').feature('tlan1').setIndex('localtablematrix', 5, 2, 1);
model.result('pg10').feature('tlan1').setIndex('localtablematrix', 'Elastic', 2, 2);
model.result('pg10').feature('tlan1').set('showpoint', false);
model.result('pg10').feature('tlan1').set('anchorpoint', 'center');

model.view.create('view4', 2);

model.result('pg10').run;
model.result('pg10').set('view', 'view4');
model.result.duplicate('pg11', 'pg10');
model.result('pg11').run;
model.result('pg11').label('Point Source Total Displacement Field Magnitude');
model.result('pg11').run;
model.result('pg11').feature('surf1').label('Scattered Field Formulation');
model.result('pg11').feature('surf1').set('expr', 'if(x>20,sqrt((real(u+uPS))^2+(real(v+vPS))^2),if(x<5,sqrt((real(u+genext1(uPS)))^2+(real(v+genext1(vPS)))^2),sqrt((real(u+genext2(uPS)))^2+(real(v+genext2(vPS)))^2)))');
model.result('pg11').feature('surf1').set('rangecoloractive', true);
model.result('pg11').feature('surf1').set('rangecolormin', 0);
model.result('pg11').feature('surf1').set('rangecolormax', 0.15);
model.result('pg11').run;
model.result('pg11').run;
model.result('pg11').set('title', 'Total Displacement Field Magnitude');

model.physics('solid').feature('pl1').selection.set([3 16 29]);
model.physics('solid').create('fix1', 'Fixed', 1);
model.physics('solid').feature('fix1').selection.set([41 42 45 46]);

model.study.create('std5');
model.study('std5').create('freq', 'Frequency');
model.study('std5').feature('freq').setSolveFor('/physics/solid', true);
model.study('std5').label('Point Source Total Field (NO Scattered Field Formulation)');
model.study('std5').setGenPlots(false);
model.study('std1').feature('freq').set('disabledphysics', {'solid/bndl2' 'solid/disp2' 'solid/lemm3' 'solid/bl2' 'solid/pl1' 'solid/bndl3' 'solid/disp3' 'solid/lemm4' 'solid/bl3' 'solid/fix1'});
model.study('std2').feature('freq').set('disabledphysics', {'solid/bndl1' 'solid/disp1' 'solid/lemm2' 'solid/bl1' 'solid/pl1' 'solid/bndl3' 'solid/disp3' 'solid/lemm4' 'solid/bl3' 'solid/fix1'});
model.study('std3').feature('freq').set('disabledphysics', {'solid/bndl1' 'solid/disp1' 'solid/lemm2' 'solid/bl1' 'solid/bndl2' 'solid/disp2' 'solid/lemm3' 'solid/bl2' 'solid/bndl3' 'solid/disp3'  ...
'solid/lemm4' 'solid/bl3' 'solid/fix1'});
model.study('std4').feature('freq').set('disabledphysics', {'solid/bndl1' 'solid/disp1' 'solid/lemm2' 'solid/bl1' 'solid/bndl2' 'solid/disp2' 'solid/lemm3' 'solid/bl2' 'solid/pl1' 'solid/fix1'});
model.study('std5').feature('freq').set('plist', 'omega/2/pi[rad]');
model.study('std5').feature('freq').set('useadvanceddisable', true);
model.study('std5').feature('freq').set('disabledphysics', {'solid/bndl1' 'solid/disp1' 'solid/lemm2' 'solid/bl1' 'solid/bndl2' 'solid/disp2' 'solid/lemm3' 'solid/bl2' 'solid/bndl3' 'solid/disp3'  ...
'solid/lemm4/iss1' 'solid/bl3'});

model.sol.create('sol5');
model.sol('sol5').study('std5');
model.sol('sol5').create('st1', 'StudyStep');
model.sol('sol5').feature('st1').set('study', 'std5');
model.sol('sol5').feature('st1').set('studystep', 'freq');
model.sol('sol5').create('v1', 'Variables');
model.sol('sol5').feature('v1').set('control', 'freq');
model.sol('sol5').create('s1', 'Stationary');
model.sol('sol5').feature('s1').create('p1', 'Parametric');
model.sol('sol5').feature('s1').feature.remove('pDef');
model.sol('sol5').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol5').feature('s1').feature('p1').set('plistarr', {'omega/2/pi[rad]'});
model.sol('sol5').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol5').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol5').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol5').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol5').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol5').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol5').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol5').feature('s1').feature('p1').set('probes', {});
model.sol('sol5').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol5').feature('s1').set('linpmethod', 'sol');
model.sol('sol5').feature('s1').set('linpsol', 'zero');
model.sol('sol5').feature('s1').set('control', 'freq');
model.sol('sol5').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol5').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol5').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol5').feature('s1').feature.remove('fcDef');
model.sol('sol5').attach('std5');
model.sol('sol5').runAll;

model.result('pg11').run;
model.result('pg11').set('plotarrayenable', true);
model.result('pg11').set('arrayaxis', 'y');
model.result('pg11').feature('surf1').set('arraydim', '1');
model.result('pg11').run;
model.result('pg11').feature.duplicate('surf2', 'surf1');
model.result('pg11').feature('surf2').set('arraydim', '1');
model.result('pg11').run;
model.result('pg11').feature('surf2').set('data', 'dset5');
model.result('pg11').feature('surf2').set('expr', 'solid.disp');
model.result('pg11').run;
model.result('pg11').feature('surf2').set('inheritplot', 'surf1');
model.result('pg11').feature('surf2').label('NO Scattered Field Formulation');
model.result('pg11').feature('tlan1').set('arraydim', '1');
model.result('pg11').run;
model.result('pg11').feature('tlan1').setIndex('localtablematrix', 0, 3, 0);
model.result('pg11').feature('tlan1').setIndex('localtablematrix', 15.5, 3, 1);
model.result('pg11').feature('tlan1').setIndex('localtablematrix', 'Cavity', 3, 2);
model.result('pg11').feature('tlan1').setIndex('localtablematrix', 12, 4, 0);
model.result('pg11').feature('tlan1').setIndex('localtablematrix', 15.5, 4, 1);
model.result('pg11').feature('tlan1').setIndex('localtablematrix', 'Rigid', 4, 2);
model.result('pg11').feature('tlan1').setIndex('localtablematrix', 24, 5, 0);
model.result('pg11').feature('tlan1').setIndex('localtablematrix', 15.5, 5, 1);
model.result('pg11').feature('tlan1').setIndex('localtablematrix', 'Elastic', 5, 2);
model.result('pg11').run;
model.result('pg11').create('tlan2', 'TableAnnotation');
model.result('pg11').feature('tlan2').set('arraydim', '1');
model.result('pg11').feature('tlan2').set('source', 'localtable');
model.result('pg11').feature('tlan2').setIndex('localtablematrix', -9, 0, 0);
model.result('pg11').feature('tlan2').setIndex('localtablematrix', 0, 0, 1);
model.result('pg11').feature('tlan2').setIndex('localtablematrix', 'SFF', 0, 2);
model.result('pg11').feature('tlan2').setIndex('localtablematrix', -9, 1, 0);
model.result('pg11').feature('tlan2').setIndex('localtablematrix', 10.5, 1, 1);
model.result('pg11').feature('tlan2').setIndex('localtablematrix', 'NO SFF', 1, 2);
model.result('pg11').feature('tlan2').set('anchorpoint', 'middleleft');
model.result('pg11').feature('tlan2').set('showpoint', false);
model.result('pg11').run;
model.result('pg11').run;
model.result('pg11').set('view', 'new');
model.result('pg11').run;
model.result.duplicate('pg12', 'pg11');
model.result('pg12').run;
model.result('pg12').label('Point Source Total P Wave');
model.result('pg12').feature('surf1').set('arraydim', '1');
model.result('pg12').run;
model.result('pg12').feature('surf1').set('expr', 'if(x>20,d(u+uPS,x)+d(v+vPS,y),if(x<5,d(u+genext1(uPS),x)+d(v+genext1(vPS),y),d(u+genext2(uPS),x)+d(v+genext2(vPS),y)))');
model.result('pg12').run;
model.result('pg12').feature('surf1').set('colortable', 'Wave');
model.result('pg12').feature('surf1').set('rangecolormin', -0.5);
model.result('pg12').feature('surf1').set('rangecolormax', 0.5);
model.result('pg12').run;
model.result('pg12').feature('surf2').set('arraydim', '1');
model.result('pg12').run;
model.result('pg12').feature('surf2').set('expr', 'd(u,x)+d(v,y)');
model.result('pg12').run;
model.result('pg12').run;
model.result.duplicate('pg13', 'pg12');
model.result('pg13').run;
model.result('pg13').label('Point Source Total S Wave');
model.result('pg13').feature('surf1').set('arraydim', '1');
model.result('pg13').run;
model.result('pg13').feature('surf1').set('expr', 'if(x>20,-d(u+uPS,y)+d(v+vPS,x),if(x<5,-d(u+genext1(uPS),y)+d(v+genext1(vPS),x),-d(u+genext2(uPS),y)+d(v+genext2(vPS),x)))');
model.result('pg13').feature('surf1').set('rangecolormin', -1);
model.result('pg13').feature('surf1').set('rangecolormax', 1);
model.result('pg13').run;
model.result('pg13').feature('surf2').set('arraydim', '1');
model.result('pg13').run;
model.result('pg13').feature('surf2').set('expr', '-d(u,y)+d(v,x)');
model.result('pg13').run;
model.result('pg12').feature('surf1').set('arraydim', '1');
model.result('pg12').run;
model.result('pg12').run;
model.result('pg9').run;

model.nodeGroup.create('grp5', 'Results');
model.nodeGroup('grp5').set('type', 'plotgroup');
model.nodeGroup.move('grp5', 3);
model.nodeGroup('grp5').add('plotgroup', 'pg9');
model.nodeGroup('grp5').add('plotgroup', 'pg10');
model.nodeGroup('grp5').add('plotgroup', 'pg11');
model.nodeGroup('grp5').add('plotgroup', 'pg12');
model.nodeGroup('grp5').add('plotgroup', 'pg13');
model.nodeGroup('grp5').label('Point Source');

model.result('pg6').run;

model.title('Scattered-Field Formulation for Elastic Waves');

model.description('This model showcases how to solve for the scattered field when knowing the incident field for three different types of scatterer, i.e. an infinitely rigid one, a cavity and an elastic inclusion. This formulation can be useful when the scatterer is in the far-field of the source, such that the probing wave resembles a plane wave. In this case, including the source would require an unnecessarily huge computational domain to be meshed. Both P and S plane waves are thus used as incident fields in the model. Moreover, the model shows how to compute numerically the field emitted by a point source, and then use such solution as the known incident field for a subsequent study where the scattering problem is solved.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;

model.label('scattered_field_elastic_waves.mph');

model.modelNode.label('Components');

out = model;
