function out = model
%
% fda_benchmark_blood_pump.m
%
% Model exported on May 26 2025, 21:26 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/CFD_Module/Verification_Examples');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('spf', 'TurbulentFlowkeps', 'geom1');
model.physics('spf').model('comp1');

model.study.create('std1');

model.param.set('TIME', '0[s]');
model.param.set('rho_f', '1035[kg/m^3]');
model.param.descr('rho_f', 'Blood density');
model.param.set('mu_f', '0.0035[Pa*s]');
model.param.descr('mu_f', 'Blood viscosity');
model.param.set('Qb', '6.0[L/min]');
model.param.descr('Qb', 'Inlet flow rate');
model.param.set('rp', '3500[rpm]');
model.param.descr('rp', 'Impeller rpm');

model.geom('geom1').geomRep('cadps');
model.geom('geom1').insertFile('fda_benchmark_blood_pump_geom_sequence.mph', 'geom1');
model.geom('geom1').run('cmf11');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').label('Blood');
model.material('mat1').propertyGroup('def').set('density', {'rho_f'});
model.material('mat1').propertyGroup('def').set('dynamicviscosity', {'mu_f'});

model.common.create('rot1', 'RotatingDomain', 'comp1');
model.common('rot1').selection.all;
model.common('rot1').selection.set([2]);
model.common('rot1').set('rotationType', 'rotationalVelocity');
model.common('rot1').set('rotationalVelocityExpression', 'constantRevolutionsPerTime');
model.common('rot1').set('revolutionsPerTime', 'rp');

model.physics('spf').label(['Turbulent Flow, k-' native2unicode(hex2dec({'03' 'b5'}), 'unicode') ' - Prelim']);
model.physics('spf').create('wallbc2', 'WallBC', 2);
model.physics('spf').feature('wallbc2').set('TranslationalVelocityOption', 'ZeroFixedWall');
model.physics('spf').feature('wallbc2').selection.set([7]);
model.physics('spf').create('inl1', 'InletBoundary', 2);
model.physics('spf').feature('inl1').selection.set([54]);
model.physics('spf').feature('inl1').set('BoundaryCondition', 'FullyDevelopedFlow');
model.physics('spf').feature('inl1').set('FullyDevelopedFlowOption', 'V0');
model.physics('spf').feature('inl1').set('V0fdf', 'Qb');
model.physics('spf').create('out1', 'OutletBoundary', 2);
model.physics('spf').feature('out1').selection.set([55]);

model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('size').set('hauto', 4);
model.mesh('mesh1').feature('size').set('hmin', '0.000004');
model.mesh('mesh1').feature.remove('size1');
model.mesh('mesh1').feature.remove('cr1');
model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.set([9 10 11 12 13 28 29 30 31 32 33]);
model.mesh('mesh1').feature.move('ftri1', 2);
model.mesh('mesh1').feature.move('ftri1', 1);
model.mesh('mesh1').feature('ftri1').create('size1', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size1').set('table', 'cfd');
model.mesh('mesh1').feature('ftri1').feature('size1').set('hauto', 3);
model.mesh('mesh1').feature('ftri1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('ftri1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('ftri1').feature('size1').set('hmax', '1e-3');
model.mesh('mesh1').feature('ftri1').feature('size1').set('hminactive', true);
model.mesh('mesh1').feature('ftri1').feature('size1').set('hmin', '4e-4');
model.mesh('mesh1').run('ftri1');
model.mesh('mesh1').create('ftri2', 'FreeTri');
model.mesh('mesh1').feature('ftri2').selection.set([40]);
model.mesh('mesh1').feature('ftri2').create('dis1', 'Distribution');
model.mesh('mesh1').feature('ftri2').feature('dis1').selection.set([70 72]);
model.mesh('mesh1').feature('ftri2').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('ftri2').feature('dis1').set('elemcount', 800);
model.mesh('mesh1').feature('ftri2').feature('dis1').set('elemratio', 4);
model.mesh('mesh1').feature('ftri2').feature('dis1').set('reverse', true);
model.mesh('mesh1').feature('ftri2').create('dis2', 'Distribution');
model.mesh('mesh1').feature('ftri2').feature('dis2').selection.set([69 71]);
model.mesh('mesh1').feature('ftri2').feature('dis2').set('type', 'predefined');
model.mesh('mesh1').feature('ftri2').feature('dis2').set('elemcount', 800);
model.mesh('mesh1').feature('ftri2').feature('dis2').set('elemratio', 4);
model.mesh('mesh1').feature('ftet1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('ftet1').selection.set([1 2]);
model.mesh('mesh1').feature('ftet1').create('size1', 'Size');
model.mesh('mesh1').feature('ftet1').feature('size1').selection.set([2]);
model.mesh('mesh1').feature('ftet1').feature('size1').set('table', 'cfd');
model.mesh('mesh1').feature('ftet1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('ftet1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('ftet1').feature('size1').set('hmax', '1e-3');
model.mesh('mesh1').feature('ftet1').feature('size1').set('hminactive', true);
model.mesh('mesh1').feature('ftet1').feature('size1').set('hmin', '4e-4');
model.mesh('mesh1').feature('ftet1').create('size2', 'Size');
model.mesh('mesh1').feature('ftet1').feature('size2').selection.set([1]);
model.mesh('mesh1').feature('ftet1').feature('size2').set('table', 'cfd');
model.mesh('mesh1').feature('ftet1').feature('size2').set('custom', true);
model.mesh('mesh1').feature('ftet1').feature('size2').set('hmaxactive', true);
model.mesh('mesh1').feature('ftet1').feature('size2').set('hmax', '1e-3');
model.mesh('mesh1').feature('ftet1').feature('size2').set('hminactive', true);
model.mesh('mesh1').feature('ftet1').feature('size2').set('hmin', '1e-7');
model.mesh('mesh1').feature('ftet1').feature('size2').set('hgradactive', true);
model.mesh('mesh1').feature('ftet1').feature('size2').set('hgrad', 1.4);
model.mesh('mesh1').feature('ftet1').feature('size2').set('hcurveactive', true);
model.mesh('mesh1').feature('ftet1').feature('size2').set('hnarrowactive', true);
model.mesh('mesh1').run('ftet1');
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe1').selection.set([3 4 5 6]);
model.mesh('mesh1').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis1').selection.set([3]);
model.mesh('mesh1').feature('swe1').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('swe1').feature('dis1').set('elemcount', 60);
model.mesh('mesh1').feature('swe1').feature('dis1').set('elemratio', 3);
model.mesh('mesh1').feature('swe1').feature('dis1').set('symmetric', true);
model.mesh('mesh1').feature('swe1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis2').selection.set([4]);
model.mesh('mesh1').feature('swe1').feature('dis2').set('type', 'predefined');
model.mesh('mesh1').feature('swe1').feature('dis2').set('elemcount', 70);
model.mesh('mesh1').feature('swe1').create('dis3', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis3').selection.set([5]);
model.mesh('mesh1').feature('swe1').feature('dis3').set('type', 'predefined');
model.mesh('mesh1').feature('swe1').feature('dis3').set('elemcount', 100);
model.mesh('mesh1').feature('swe1').feature('dis3').set('elemratio', 2);
model.mesh('mesh1').feature('swe1').create('dis4', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis4').selection.set([6]);
model.mesh('mesh1').feature('swe1').feature('dis4').set('type', 'predefined');
model.mesh('mesh1').feature('swe1').feature('dis4').set('elemcount', 30);
model.mesh('mesh1').feature('swe1').feature('dis4').set('elemratio', 2);
model.mesh('mesh1').feature('bl1').selection.geom('geom1');
model.mesh('mesh1').feature('bl1').set('sharpcorners', 'split');
model.mesh('mesh1').feature('bl1').set('method', 'legacy60');
model.mesh('mesh1').feature('bl1').feature('blp1').set('blnlayers', 8);
model.mesh('mesh1').feature('bl1').feature('blp1').set('blhminfact', 1.1);
model.mesh('mesh1').run;

model.study('std1').create('frrot', 'FrozenRotor');
model.study('std1').setGenPlots(false);
model.study('std1').label('Study 1 - k-epsilon');

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3 4 5 6]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3 4 5 6]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'frrot');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'frrot');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('se1', 'Segregated');
model.sol('sol1').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_p' 'comp1_u' 'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subdamp', 0.5);
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, fluid flow variables ()');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').label('Velocity u, Pressure p');
model.sol('sol1').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_k' 'comp1_ep'});
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subdamp', 0.45);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subiter', 3);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subtermconst', 'itertol');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subntolfact', 1);
model.sol('sol1').feature('s1').create('i2', 'Iterative');
model.sol('sol1').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i2').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i2').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i2').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i2').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i2').label('AMG, turbulence variables (spf)');
model.sol('sol1').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('iter', 0);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('linsolver', 'i2');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').label('Turbulence Variables');
model.sol('sol1').feature('s1').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol1').feature('s1').feature('se1').set('subinitcfl', 3);
model.sol('sol1').feature('s1').feature('se1').set('submincfl', 10000);
model.sol('sol1').feature('s1').feature('se1').set('subkppid', 0.65);
model.sol('sol1').feature('s1').feature('se1').set('subkdpid', 0.15);
model.sol('sol1').feature('s1').feature('se1').set('subkipid', 0.15);
model.sol('sol1').feature('s1').feature('se1').set('subcfltol', 0.1);
model.sol('sol1').feature('s1').feature('se1').set('segcflaa', true);
model.sol('sol1').feature('s1').feature('se1').set('segcflaacfl', 9000);
model.sol('sol1').feature('s1').feature('se1').set('segcflaafact', 1);
model.sol('sol1').feature('s1').feature('se1').set('maxsegiter', 400);
model.sol('sol1').feature('s1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol1').feature('s1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.k 0 comp1.ep 0 ');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, fluid flow variables ()');
model.sol('sol1').feature('s1').create('d2', 'Direct');
model.sol('sol1').feature('s1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d2').label('Direct, turbulence variables (spf)');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3 4 5 6]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3 4 5 6]);

model.sol('sol1').study('std1');
model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'frrot');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'frrot');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('se1', 'Segregated');
model.sol('sol1').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_p' 'comp1_u' 'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subdamp', 0.5);
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, fluid flow variables ()');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').label('Velocity u, Pressure p');
model.sol('sol1').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_k' 'comp1_ep'});
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subdamp', 0.45);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subiter', 3);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subtermconst', 'itertol');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subntolfact', 1);
model.sol('sol1').feature('s1').create('i2', 'Iterative');
model.sol('sol1').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i2').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i2').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i2').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i2').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i2').label('AMG, turbulence variables (spf)');
model.sol('sol1').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('iter', 0);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('linsolver', 'i2');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').label('Turbulence Variables');
model.sol('sol1').feature('s1').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol1').feature('s1').feature('se1').set('subinitcfl', 3);
model.sol('sol1').feature('s1').feature('se1').set('submincfl', 10000);
model.sol('sol1').feature('s1').feature('se1').set('subkppid', 0.65);
model.sol('sol1').feature('s1').feature('se1').set('subkdpid', 0.15);
model.sol('sol1').feature('s1').feature('se1').set('subkipid', 0.15);
model.sol('sol1').feature('s1').feature('se1').set('subcfltol', 0.1);
model.sol('sol1').feature('s1').feature('se1').set('segcflaa', true);
model.sol('sol1').feature('s1').feature('se1').set('segcflaacfl', 9000);
model.sol('sol1').feature('s1').feature('se1').set('segcflaafact', 1);
model.sol('sol1').feature('s1').feature('se1').set('maxsegiter', 400);
model.sol('sol1').feature('s1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol1').feature('s1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.k 0 comp1.ep 0 ');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, fluid flow variables ()');
model.sol('sol1').feature('s1').create('d2', 'Direct');
model.sol('sol1').feature('s1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d2').label('Direct, turbulence variables (spf)');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');
model.selection('sel1').label('Wall Boundaries');
model.selection('sel1').geom(2);
model.selection('sel1').set([1 2 3 4 7 9 10 11 12 13 14 15 16 17 18 19 22 23 28 29 30 31 32 33 40 41 42 43 44 45 46 47 48 49 50 51]);

model.probe.create('bnd1', 'Boundary');
model.probe('bnd1').model('comp1');
model.probe('bnd1').set('intsurface', true);
model.probe('bnd1').selection.set([54]);
model.probe('bnd1').label('Inlet Pressure');
model.probe('bnd1').set('probename', 'p_in');
model.probe('bnd1').set('expr', 'spf2.pA');
model.probe('bnd1').set('unit', 'Pa');
model.probe.create('bnd2', 'Boundary');
model.probe('bnd2').model('comp1');
model.probe('bnd2').set('intsurface', true);
model.probe('bnd2').label('Outlet Pressure');
model.probe('bnd2').set('probename', 'p_out');
model.probe('bnd2').selection.set([55]);
model.probe('bnd2').set('expr', 'spf2.pA');
model.probe('bnd2').set('unit', 'Pa');
model.probe('bnd2').set('window', 'window1');
model.probe('bnd2').set('windowtitle', 'Probe Plot 1');
model.probe.create('bnd3', 'Boundary');
model.probe('bnd3').model('comp1');
model.probe('bnd3').set('intsurface', true);
model.probe('bnd3').label('Maximum Wall Shear Stress - Housing Rim');
model.probe('bnd3').set('probename', 'tau_housing_max');
model.probe('bnd3').set('type', 'maximum');
model.probe('bnd3').selection.set([1]);
model.probe('bnd3').set('expr', 'sqrt(spf2.K_stressx^2+spf2.K_stressy^2+spf2.K_stressz^2)');
model.probe('bnd3').set('unit', 'N/m^2');
model.probe('bnd3').set('window', 'window2');
model.probe('bnd3').set('windowtitle', 'Probe Plot 2');
model.probe.create('bnd4', 'Boundary');
model.probe('bnd4').model('comp1');
model.probe('bnd4').set('intsurface', true);
model.probe('bnd4').label('Maximum Wall Shear Stress - Fillet');
model.probe('bnd4').set('probename', 'tau_fillet_max');
model.probe('bnd4').set('type', 'maximum');
model.probe('bnd4').selection.set([40]);
model.probe('bnd4').set('expr', 'spf2.K_stressx*nx+spf2.K_stressy*ny+spf2.K_stressz*nz');
model.probe('bnd4').set('window', 'window3');
model.probe('bnd4').set('windowtitle', 'Probe Plot 3');
model.probe.create('bnd5', 'Boundary');
model.probe('bnd5').model('comp1');
model.probe('bnd5').set('intsurface', true);
model.probe('bnd5').label('Shaft Torque');
model.probe('bnd5').set('probename', 'shaft_torque');
model.probe('bnd5').set('type', 'integral');
model.probe('bnd5').selection.set([28 29 30 31]);
model.probe('bnd5').set('expr', 'x*spf2.T_stressy-y*spf2.T_stressx');
model.probe('bnd5').set('unit', 'nN*m');
model.probe('bnd5').set('window', 'window4');
model.probe('bnd5').set('windowtitle', 'Probe Plot 4');

model.cpl.create('aveop1', 'Average', 'geom1');
model.cpl('aveop1').set('axisym', true);
model.cpl('aveop1').selection.geom('geom1', 2);
model.cpl('aveop1').selection.set([21]);
model.cpl.create('aveop2', 'Average', 'geom1');
model.cpl('aveop2').set('axisym', true);
model.cpl('aveop2').selection.geom('geom1', 2);
model.cpl('aveop2').selection.set([55]);

model.physics('spf').create('nturb1', 'NewTurbulenceModel', -1);
model.physics('spf').feature('nturb1').set('TurbulenceModelInterface', 'TurbulentFlowSST');
model.physics.create('spf2', 'TurbulentFlowSST', 'geom1');
model.physics('spf2').model('comp1');
model.physics('spf2').selection.geom('geom1', 3);
model.physics('spf2').selection.set([1 2 3 4 5 6]);
model.physics('spf2').selection.inherit(false);

model.disableUpdates(true);

model.physics('spf2').prop('ShapeProperty').set('order_fluid', {'1'});
model.physics('spf2').prop('ShapeProperty').set('frame', {'spatial'});
model.physics('spf2').prop('EquationForm').set('form', {'Automatic'});
model.physics('spf2').prop('EquationForm').set('showAllModelInputs', {'0'});
model.physics('spf2').prop('PhysicalModelProperty').set('Compressibility', {'Incompressible'});
model.physics('spf2').prop('PhysicalModelProperty').set('textCompressibilityMixtureModel', {'The Mixture Model multiphysics coupling is restricted to incompressible flow'});
model.physics('spf2').prop('PhysicalModelProperty').set('EnablePorousMediaDomains', {'0'});
model.physics('spf2').prop('PhysicalModelProperty').set('IncludeGravity', {'0'});
model.physics('spf2').prop('PhysicalModelProperty').set('ViscoelasticFlow', {'0'});
model.physics('spf2').prop('PhysicalModelProperty').set('BackCompState', {'3'});
model.physics('spf2').prop('PhysicalModelProperty').set('isBrinkman', {'0'});
model.physics('spf2').prop('PhysicalModelProperty').set('Tref_src', {'userdef'});
model.physics('spf2').prop('PhysicalModelProperty').set('Tref', {'293.15[K]'});
model.physics('spf2').prop('PhysicalModelProperty').set('pref', {'1[atm]'});
model.physics('spf2').prop('TurbulenceModelProperty').set('editTurbulenceModelParameters', {'0'});
model.physics('spf2').prop('ConsistentStabilization').set('StreamlineDiffusionOldForm', {'0'});
model.physics('spf2').prop('ConsistentStabilization').set('StreamlineDiffusion', {'1'});
model.physics('spf2').prop('ConsistentStabilization').set('CrosswindDiffusion', {'1'});
model.physics('spf2').prop('ConsistentStabilization').set('RANSStreamlineDiffusion', {'1'});
model.physics('spf2').prop('ConsistentStabilization').set('RANSCrosswindDiffusion', {'1'});
model.physics('spf2').prop('ConsistentStabilization').set('CrosswindDiffusionOldFormNS', {'0'});
model.physics('spf2').prop('ConsistentStabilization').set('CrosswindDiffusionOldFormRANS', {'0'});
model.physics('spf2').prop('ConsistentStabilization').set('useDynamicSubgridTimescale', {'1'});
model.physics('spf2').prop('ConsistentStabilization').set('limitTimeStepInStabilization', {'0'});
model.physics('spf2').prop('InconsistentStabilization').set('IsotropicDiffusion', {'0'});
model.physics('spf2').prop('InconsistentStabilization').set('RANSIsotropicDiffusion', {'0'});
model.physics('spf2').prop('AdvancedSettingProperty').set('PseudoTimeSetting', {'Automatic'});
model.physics('spf2').prop('AdvancedSettingProperty').set('CFLNumbExpr', {'Automatic'});
model.physics('spf2').prop('AdvancedSettingProperty').set('UScale', {'1[m/s]'});
model.physics('spf2').prop('AdvancedSettingProperty').set('lScaleFact', {'0.035'});
model.physics('spf2').prop('AdvancedSettingProperty').set('useBNS', {'0'});
model.physics('spf2').prop('PropertyEnablerProp').set('allowOutOfPlaneProp', {'0'});
model.physics('spf2').prop('PropertyEnablerProp').set('allowRadiationProp', {'1'});
model.physics('spf2').prop('PropertyEnablerProp').set('allowStokesProp', {'0'});
model.physics('spf2').prop('PropertyEnablerProp').set('allowTurbProp', {'1'});
model.physics('spf2').prop('PropertyEnablerProp').set('allowMaxwellStefan', {'1'});
model.physics('spf2').prop('StudyStep').set('StudyStep', {'std1/frrot'});

model.study('std1').feature('frrot').setSolveFor('/physics/spf2', false);
model.study.create('std2');
model.study('std2').create('wdi', 'WallDistanceInitialization');
model.study('std2').feature('wdi').setSolveFor('/physics/spf', false);
model.study('std2').feature('wdi').setSolveFor('/physics/spf2', false);
model.study('std2').feature('wdi').setSolveFor('/physics/spf2', true);
model.study('std2').create('frrot', 'FrozenRotor');
model.study('std2').feature('frrot').setSolveFor('/physics/spf', false);
model.study('std2').feature('frrot').setSolveFor('/physics/spf2', false);
model.study('std2').feature('frrot').setSolveFor('/physics/spf2', true);
model.study('std2').feature('wdi').set('usesol', true);
model.study('std2').feature('wdi').set('initstudy', 'std1');
model.study('std2').feature('wdi').set('notstudy', 'std1');
model.study('std2').feature('wdi').set('notsolnum', 'last');

model.physics('spf2').feature.copy('wallbc2', 'spf/wallbc2');
model.physics('spf2').feature.copy('inl1', 'spf/inl1');
model.physics('spf2').feature.copy('out1', 'spf/out1');
model.physics('spf2').feature('fp1').set('MixingLengthLimit', {'Automatic'});
model.physics('spf2').feature('fp1').set('rho_mat', {'from_mat'});
model.physics('spf2').feature('fp1').set('minput_temperature_src', {'fromCommonDef'});
model.physics('spf2').feature('fp1').set('editModelInputs', {'0'});
model.physics('spf2').feature('fp1').set('Constitutiverelation', {'Newtonian'});
model.physics('spf2').feature('fp1').set('mu_mat', {'from_mat'});
model.physics('spf2').feature('fp1').set('streamlinens', {'0'});
model.physics('spf2').feature('fp1').set('crosswindns', {'0'});
model.physics('spf2').feature('fp1').set('StudyStep', {'std1/frrot'});
model.physics('spf2').feature('init1').set('u_init', {'u' 'v' 'w'});
model.physics('spf2').feature('init1').set('p_init', 'p');
model.physics('spf2').feature('init1').set('k_init', 'k');
model.physics('spf2').feature('init1').set('om_init', '1/max(sqrt(eps),spf.muT)*spf.rho*k');
model.physics('spf2').feature('wallbc1').set('BoundaryCondition', {'NoSlip'});
model.physics('spf2').feature('wallbc1').set('SlidingWall', {'0'});
model.physics('spf2').feature('wallbc1').set('TranslationalVelocityOption', {'AutomaticFromFrame'});
model.physics('spf2').feature('wallbc1').set('constraintOptions', {'auto'});
model.physics('spf2').feature('wallbc1').set('constraintType', {'unidirectionalConstraint'});
model.physics('spf2').feature('wallbc1').set('constraintMethod', {'elemental'});
model.physics('spf2').feature('wallbc1').set('ApplyWallRoughness', {'0'});
model.physics('spf2').feature('wallbc1').set('StudyStep', {'std1/frrot'});
model.physics('spf2').feature('grav1').set('g', {'0'; '0'; '-g_const'});
model.physics('spf2').feature('grav1').set('buoyancyInducedTurbulence', {'0'});
model.physics('spf2').feature('grav1').set('StudyStep', {'std1/frrot'});
model.physics('spf2').feature('dcont1').set('constraintOptions', {'nitscheConstraints'});
model.physics('spf2').feature('dcont1').set('pairs', {});
model.physics('spf2').feature('dcont1').set('pairDisconnect', {'0'});
model.physics('spf2').feature('dcont1').set('StudyStep', {'std1/frrot'});
model.physics('spf2').feature('wallbc2').set('BoundaryCondition', {'NoSlip'});
model.physics('spf2').feature('wallbc2').set('SlidingWall', {'0'});
model.physics('spf2').feature('wallbc2').set('TranslationalVelocityOption', {'ZeroFixedWall'});
model.physics('spf2').feature('wallbc2').set('constraintOptions', {'auto'});
model.physics('spf2').feature('wallbc2').set('constraintType', {'unidirectionalConstraint'});
model.physics('spf2').feature('wallbc2').set('constraintMethod', {'elemental'});
model.physics('spf2').feature('wallbc2').set('ApplyWallRoughness', {'0'});
model.physics('spf2').feature('wallbc2').set('StudyStep', {'0'});
model.physics('spf2').feature('out1').set('BoundaryCondition', {'Pressure'});
model.physics('spf2').feature('out1').set('p0', {'0'});
model.physics('spf2').feature('out1').set('NormalFlow', {'0'});
model.physics('spf2').feature('out1').set('SuppressBackflow', {'1'});
model.physics('spf2').feature('out1').set('PressureType', {'StaticPressure'});
model.physics('spf2').feature('out1').set('LaminarOutflowOption', {'Uav'});
model.physics('spf2').feature('out1').set('Uav', {'0'});
model.physics('spf2').feature('out1').set('ConstrainEndPointsToZero', {'0'});
model.physics('spf2').feature('out1').set('FullyDevelopedFlowOption', {'p0av'});
model.physics('spf2').feature('out1').set('p0avfdf', {'0'});
model.physics('spf2').feature('out1').set('constraintOptions', {'pointwiseConstraints'});
model.physics('spf2').feature('out1').set('constraintType', {'unidirectionalConstraint'});
model.physics('spf2').feature('out1').set('constraintMethod', {'elemental'});
model.physics('spf2').feature('out1').set('StudyStep', {'0'});

model.disableUpdates(false);

model.study('std2').label('Study 2 - SST');
model.study('std2').setGenPlots(false);

model.sol.create('sol2');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3 4 5 6]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3 4 5 6]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3 4 5 6]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3 4 5 6]);

model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'wdi');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'wdi');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').set('stol', 1.0E-6);
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol2').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol2').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol2').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol2').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol2').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol2').feature('s1').feature('i1').label('AMG, wall distance ()');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s1').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s1').feature('d1').label('Direct, wall distance ()');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol2').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol2').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol2').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').create('su1', 'StoreSolution');
model.sol('sol2').create('st2', 'StudyStep');
model.sol('sol2').feature('st2').set('study', 'std2');
model.sol('sol2').feature('st2').set('studystep', 'frrot');
model.sol('sol2').create('v2', 'Variables');
model.sol('sol2').feature('v2').set('initmethod', 'sol');
model.sol('sol2').feature('v2').set('initsol', 'sol2');
model.sol('sol2').feature('v2').set('notsolmethod', 'sol');
model.sol('sol2').feature('v2').set('notsol', 'sol2');
model.sol('sol2').feature('v2').set('control', 'frrot');
model.sol('sol2').create('s2', 'Stationary');
model.sol('sol2').feature('s2').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s2').create('se1', 'Segregated');
model.sol('sol2').feature('s2').feature('se1').feature.remove('ssDef');
model.sol('sol2').feature('s2').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol2').feature('s2').feature('se1').feature('ss1').set('segvar', {'comp1_p2' 'comp1_u2' 'comp1_spf2_inl1_Pinlfdf'});
model.sol('sol2').feature('s2').feature('se1').feature('ss1').set('subdamp', 0.5);
model.sol('sol2').feature('s2').create('i1', 'Iterative');
model.sol('sol2').feature('s2').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('s2').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('s2').feature('i1').set('itrestart', 50);
model.sol('sol2').feature('s2').feature('i1').set('rhob', 20);
model.sol('sol2').feature('s2').feature('i1').set('maxlinit', 1000);
model.sol('sol2').feature('s2').feature('i1').set('nlinnormuse', 'on');
model.sol('sol2').feature('s2').feature('i1').label('AMG, fluid flow variables ()');
model.sol('sol2').feature('s2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf2_inl1_Pinlfdf'});
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf2_inl1_Pinlfdf'});
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s2').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol2').feature('s2').feature('se1').feature('ss1').label('Velocity U2, Pressure P2');
model.sol('sol2').feature('s2').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol2').feature('s2').feature('se1').feature('ss2').set('segvar', {'comp1_k2' 'comp1_om2'});
model.sol('sol2').feature('s2').feature('se1').feature('ss2').set('subdamp', 0.45);
model.sol('sol2').feature('s2').feature('se1').feature('ss2').set('subiter', 3);
model.sol('sol2').feature('s2').feature('se1').feature('ss2').set('subtermconst', 'itertol');
model.sol('sol2').feature('s2').feature('se1').feature('ss2').set('subntolfact', 1);
model.sol('sol2').feature('s2').create('i2', 'Iterative');
model.sol('sol2').feature('s2').feature('i2').set('linsolver', 'gmres');
model.sol('sol2').feature('s2').feature('i2').set('prefuntype', 'left');
model.sol('sol2').feature('s2').feature('i2').set('itrestart', 50);
model.sol('sol2').feature('s2').feature('i2').set('rhob', 20);
model.sol('sol2').feature('s2').feature('i2').set('maxlinit', 1000);
model.sol('sol2').feature('s2').feature('i2').set('nlinnormuse', 'on');
model.sol('sol2').feature('s2').feature('i2').label('AMG, turbulence variables (spf2)');
model.sol('sol2').feature('s2').feature('i2').create('mg1', 'Multigrid');
model.sol('sol2').feature('s2').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('s2').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('s2').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol2').feature('s2').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol2').feature('s2').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('s2').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('s2').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('s2').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('s2').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('s2').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol2').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('iter', 0);
model.sol('sol2').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol2').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol2').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol2').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('s2').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol2').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol2').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol2').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol2').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol2').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('s2').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('s2').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s2').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s2').feature('se1').feature('ss2').set('linsolver', 'i2');
model.sol('sol2').feature('s2').feature('se1').feature('ss2').label('Turbulence Variables');
model.sol('sol2').feature('s2').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol2').feature('s2').feature('se1').set('subinitcfl', 2);
model.sol('sol2').feature('s2').feature('se1').set('submincfl', 10000);
model.sol('sol2').feature('s2').feature('se1').set('subkppid', 0.65);
model.sol('sol2').feature('s2').feature('se1').set('subkdpid', 0.05);
model.sol('sol2').feature('s2').feature('se1').set('subkipid', 0.05);
model.sol('sol2').feature('s2').feature('se1').set('subcfltol', 0.1);
model.sol('sol2').feature('s2').feature('se1').set('segcflaa', true);
model.sol('sol2').feature('s2').feature('se1').set('segcflaacfl', 9000);
model.sol('sol2').feature('s2').feature('se1').set('segcflaafact', 1);
model.sol('sol2').feature('s2').feature('se1').set('maxsegiter', 400);
model.sol('sol2').feature('s2').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol2').feature('s2').feature('se1').feature('ll1').set('lowerlimit', 'comp1.om2 0 comp1.k2 0 ');
model.sol('sol2').feature('s2').create('d1', 'Direct');
model.sol('sol2').feature('s2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s2').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s2').feature('d1').label('Direct, fluid flow variables ()');
model.sol('sol2').feature('s2').feature.remove('fcDef');
model.sol('sol2').feature('v2').set('notsolnum', 'auto');
model.sol('sol2').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol2').feature('v2').set('solnum', 'auto');
model.sol('sol2').feature('v2').set('solvertype', 'solnum');
model.sol('sol2').attach('std2');

model.probe('bnd1').genResult('none');
model.probe('bnd2').genResult('none');
model.probe('bnd3').genResult('none');
model.probe('bnd4').genResult('none');
model.probe('bnd5').genResult('none');

model.sol('sol2').runAll;

model.study.create('std3');
model.study('std3').create('frrot', 'FrozenRotor');
model.study('std3').feature('frrot').setEntry('activate', 'spf', false);
model.study('std3').label('Study 3 - SST - Qb Sweep');
model.study('std3').feature('frrot').set('useinitsol', true);
model.study('std3').feature('frrot').set('initmethod', 'sol');
model.study('std3').feature('frrot').set('initstudy', 'std2');
model.study('std3').feature('frrot').set('usesol', true);
model.study('std3').feature('frrot').set('notstudy', 'std2');
model.study('std3').feature('frrot').set('notsolmethod', 'sol');
model.study('std3').feature('frrot').set('useparam', true);
model.study('std3').feature('frrot').setIndex('pname', 'TIME', 0);
model.study('std3').feature('frrot').setIndex('plistarr', '', 0);
model.study('std3').feature('frrot').setIndex('punit', 's', 0);
model.study('std3').feature('frrot').setIndex('pname', 'TIME', 0);
model.study('std3').feature('frrot').setIndex('plistarr', '', 0);
model.study('std3').feature('frrot').setIndex('punit', 's', 0);
model.study('std3').feature('frrot').setIndex('pname', 'Qb', 0);
model.study('std3').feature('frrot').setIndex('plistarr', '7 4.5 2.5', 0);
model.study('std3').feature('frrot').setIndex('punit', 'L/min', 0);

model.sol.create('sol4');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3 4 5 6]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3 4 5 6]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3 4 5 6]);

model.sol('sol4').study('std3');
model.sol('sol4').create('st1', 'StudyStep');
model.sol('sol4').feature('st1').set('study', 'std3');
model.sol('sol4').feature('st1').set('studystep', 'frrot');
model.sol('sol4').create('v1', 'Variables');
model.sol('sol4').feature('v1').set('control', 'frrot');
model.sol('sol4').create('s1', 'Stationary');
model.sol('sol4').feature('s1').create('p1', 'Parametric');
model.sol('sol4').feature('s1').feature.remove('pDef');
model.sol('sol4').feature('s1').feature('p1').set('control', 'frrot');
model.sol('sol4').feature('s1').set('control', 'frrot');
model.sol('sol4').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol4').feature('s1').create('se1', 'Segregated');
model.sol('sol4').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol4').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol4').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_p2' 'comp1_u2' 'comp1_spf2_inl1_Pinlfdf'});
model.sol('sol4').feature('s1').feature('se1').feature('ss1').set('subdamp', 0.5);
model.sol('sol4').feature('s1').create('i1', 'Iterative');
model.sol('sol4').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol4').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol4').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol4').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol4').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol4').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol4').feature('s1').feature('i1').label('AMG, fluid flow variables ()');
model.sol('sol4').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf2_inl1_Pinlfdf'});
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf2_inl1_Pinlfdf'});
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('s1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol4').feature('s1').feature('se1').feature('ss1').label('Velocity U2, Pressure P2');
model.sol('sol4').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol4').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_k2' 'comp1_om2'});
model.sol('sol4').feature('s1').feature('se1').feature('ss2').set('subdamp', 0.45);
model.sol('sol4').feature('s1').feature('se1').feature('ss2').set('subiter', 3);
model.sol('sol4').feature('s1').feature('se1').feature('ss2').set('subtermconst', 'itertol');
model.sol('sol4').feature('s1').feature('se1').feature('ss2').set('subntolfact', 1);
model.sol('sol4').feature('s1').create('i2', 'Iterative');
model.sol('sol4').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol4').feature('s1').feature('i2').set('prefuntype', 'left');
model.sol('sol4').feature('s1').feature('i2').set('itrestart', 50);
model.sol('sol4').feature('s1').feature('i2').set('rhob', 20);
model.sol('sol4').feature('s1').feature('i2').set('maxlinit', 1000);
model.sol('sol4').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol4').feature('s1').feature('i2').label('AMG, turbulence variables (spf2)');
model.sol('sol4').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('iter', 0);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('s1').feature('se1').feature('ss2').set('linsolver', 'i2');
model.sol('sol4').feature('s1').feature('se1').feature('ss2').label('Turbulence Variables');
model.sol('sol4').feature('s1').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol4').feature('s1').feature('se1').set('subinitcfl', 2);
model.sol('sol4').feature('s1').feature('se1').set('submincfl', 10000);
model.sol('sol4').feature('s1').feature('se1').set('subkppid', 0.65);
model.sol('sol4').feature('s1').feature('se1').set('subkdpid', 0.05);
model.sol('sol4').feature('s1').feature('se1').set('subkipid', 0.05);
model.sol('sol4').feature('s1').feature('se1').set('subcfltol', 0.1);
model.sol('sol4').feature('s1').feature('se1').set('segcflaa', true);
model.sol('sol4').feature('s1').feature('se1').set('segcflaacfl', 9000);
model.sol('sol4').feature('s1').feature('se1').set('segcflaafact', 1);
model.sol('sol4').feature('s1').feature('se1').set('maxsegiter', 400);
model.sol('sol4').feature('s1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol4').feature('s1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.om2 0 comp1.k2 0 ');
model.sol('sol4').feature('s1').create('d1', 'Direct');
model.sol('sol4').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('s1').feature('d1').label('Direct, fluid flow variables ()');
model.sol('sol4').feature('s1').feature.remove('fcDef');
model.sol('sol4').attach('std3');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3 4 5 6]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3 4 5 6]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3 4 5 6]);

model.sol('sol4').study('std3');
model.sol('sol4').feature.remove('s1');
model.sol('sol4').feature.remove('v1');
model.sol('sol4').feature.remove('st1');
model.sol('sol4').create('st1', 'StudyStep');
model.sol('sol4').feature('st1').set('study', 'std3');
model.sol('sol4').feature('st1').set('studystep', 'frrot');
model.sol('sol4').create('v1', 'Variables');
model.sol('sol4').feature('v1').set('control', 'frrot');
model.sol('sol4').create('s1', 'Stationary');
model.sol('sol4').feature('s1').create('p1', 'Parametric');
model.sol('sol4').feature('s1').feature.remove('pDef');
model.sol('sol4').feature('s1').feature('p1').set('control', 'frrot');
model.sol('sol4').feature('s1').set('control', 'frrot');
model.sol('sol4').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol4').feature('s1').create('se1', 'Segregated');
model.sol('sol4').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol4').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol4').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_p2' 'comp1_u2' 'comp1_spf2_inl1_Pinlfdf'});
model.sol('sol4').feature('s1').feature('se1').feature('ss1').set('subdamp', 0.5);
model.sol('sol4').feature('s1').create('i1', 'Iterative');
model.sol('sol4').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol4').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol4').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol4').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol4').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol4').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol4').feature('s1').feature('i1').label('AMG, fluid flow variables ()');
model.sol('sol4').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf2_inl1_Pinlfdf'});
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf2_inl1_Pinlfdf'});
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('s1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol4').feature('s1').feature('se1').feature('ss1').label('Velocity U2, Pressure P2');
model.sol('sol4').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol4').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_k2' 'comp1_om2'});
model.sol('sol4').feature('s1').feature('se1').feature('ss2').set('subdamp', 0.45);
model.sol('sol4').feature('s1').feature('se1').feature('ss2').set('subiter', 3);
model.sol('sol4').feature('s1').feature('se1').feature('ss2').set('subtermconst', 'itertol');
model.sol('sol4').feature('s1').feature('se1').feature('ss2').set('subntolfact', 1);
model.sol('sol4').feature('s1').create('i2', 'Iterative');
model.sol('sol4').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol4').feature('s1').feature('i2').set('prefuntype', 'left');
model.sol('sol4').feature('s1').feature('i2').set('itrestart', 50);
model.sol('sol4').feature('s1').feature('i2').set('rhob', 20);
model.sol('sol4').feature('s1').feature('i2').set('maxlinit', 1000);
model.sol('sol4').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol4').feature('s1').feature('i2').label('AMG, turbulence variables (spf2)');
model.sol('sol4').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('iter', 0);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('s1').feature('se1').feature('ss2').set('linsolver', 'i2');
model.sol('sol4').feature('s1').feature('se1').feature('ss2').label('Turbulence Variables');
model.sol('sol4').feature('s1').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol4').feature('s1').feature('se1').set('subinitcfl', 2);
model.sol('sol4').feature('s1').feature('se1').set('submincfl', 10000);
model.sol('sol4').feature('s1').feature('se1').set('subkppid', 0.65);
model.sol('sol4').feature('s1').feature('se1').set('subkdpid', 0.05);
model.sol('sol4').feature('s1').feature('se1').set('subkipid', 0.05);
model.sol('sol4').feature('s1').feature('se1').set('subcfltol', 0.1);
model.sol('sol4').feature('s1').feature('se1').set('segcflaa', true);
model.sol('sol4').feature('s1').feature('se1').set('segcflaacfl', 9000);
model.sol('sol4').feature('s1').feature('se1').set('segcflaafact', 1);
model.sol('sol4').feature('s1').feature('se1').set('maxsegiter', 400);
model.sol('sol4').feature('s1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol4').feature('s1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.om2 0 comp1.k2 0 ');
model.sol('sol4').feature('s1').create('d1', 'Direct');
model.sol('sol4').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('s1').feature('d1').label('Direct, fluid flow variables ()');
model.sol('sol4').feature('s1').feature.remove('fcDef');
model.sol('sol4').attach('std3');

model.probe('bnd1').genResult('none');
model.probe('bnd2').genResult('none');
model.probe('bnd3').genResult('none');
model.probe('bnd4').genResult('none');
model.probe('bnd5').genResult('none');

model.sol('sol4').runAll;

model.result.dataset('dset5').set('geom', 'geom1');
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').label('Velocity (spf2)');
model.result('pg6').set('data', 'dset5');
model.result('pg6').setIndex('looplevel', 3, 0);
model.result('pg6').set('frametype', 'spatial');
model.result('pg6').set('data', 'dset5');
model.result('pg6').setIndex('looplevel', 3, 0);
model.result('pg6').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pg1');
model.result('pg6').feature.create('slc1', 'Slice');
model.result('pg6').feature('slc1').label('Slice');
model.result('pg6').feature('slc1').set('showsolutionparams', 'on');
model.result('pg6').feature('slc1').set('expr', 'spf2.U');
model.result('pg6').feature('slc1').set('smooth', 'internal');
model.result('pg6').feature('slc1').set('showsolutionparams', 'on');
model.result('pg6').feature('slc1').set('data', 'parent');
model.result.dataset.create('surf1', 'Surface');
model.result.dataset('surf1').label('Exterior Walls');
model.result.dataset('surf1').set('data', 'dset5');
model.result.dataset('surf1').selection.geom('geom1', 2);
model.result.dataset('surf1').selection.set([1 2 3 4 7 9 10 11 12 13 14 15 16 17 18 19 22 23 28 29 30 31 32 33 40 41 42 43 44 45 46 47 49 50 52 53]);
model.result.create('pg7', 'PlotGroup3D');
model.result('pg7').label('Pressure (spf2)');
model.result('pg7').set('data', 'surf1');
model.result('pg7').setIndex('looplevel', 3, 0);
model.result('pg7').set('frametype', 'spatial');
model.result('pg7').set('data', 'surf1');
model.result('pg7').setIndex('looplevel', 3, 0);
model.result('pg7').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pcond1/pcond1/pg4');
model.result('pg7').feature.create('surf1', 'Surface');
model.result('pg7').feature('surf1').label('Surface');
model.result('pg7').feature('surf1').set('showsolutionparams', 'on');
model.result('pg7').feature('surf1').set('expr', 'p2');
model.result('pg7').feature('surf1').set('colortable', 'Dipole');
model.result('pg7').feature('surf1').set('smooth', 'internal');
model.result('pg7').feature('surf1').set('showsolutionparams', 'on');
model.result('pg7').feature('surf1').set('data', 'parent');
model.result('pg7').feature('surf1').feature.create('tran1', 'Transparency');
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').label('Wall Resolution (spf2)');
model.result('pg8').set('data', 'surf1');
model.result('pg8').setIndex('looplevel', 3, 0);
model.result('pg8').set('frametype', 'spatial');
model.result('pg8').set('data', 'surf1');
model.result('pg8').setIndex('looplevel', 3, 0);
model.result('pg8').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pcond1/pcond1/pg3');
model.result('pg8').feature.create('surf1', 'Surface');
model.result('pg8').feature('surf1').label('Wall Resolution');
model.result('pg8').feature('surf1').set('showsolutionparams', 'on');
model.result('pg8').feature('surf1').set('expr', 'spf2.Delta_wPlus');
model.result('pg8').feature('surf1').set('smooth', 'internal');
model.result('pg8').feature('surf1').set('showsolutionparams', 'on');
model.result('pg8').feature('surf1').set('data', 'parent');
model.result('pg6').run;
model.result.dataset('surf1').label('Exterior Walls, Study 3 - SST - Qb Sweep/Solution 4');
model.result.dataset('surf1').selection.named('sel1');
model.result.dataset.duplicate('surf2', 'surf1');
model.result.dataset('surf2').label('Exterior Walls, Study 2 - SST/Solution 2');
model.result.dataset('surf2').set('data', 'dset2');
model.result.dataset.create('cpl1', 'CutPlane');
model.result.dataset('cpl1').label('Blade Passage Plane');
model.result.dataset('cpl1').set('data', 'dset2');
model.result.dataset('cpl1').set('quickplane', 'xy');
model.result.dataset('cpl1').set('quickz', 0.006562);
model.result.dataset.create('cpl2', 'CutPlane');
model.result.dataset('cpl2').label('Lower Gap Plane');
model.result.dataset('cpl2').set('data', 'dset2');
model.result.dataset('cpl2').set('quickplane', 'xy');
model.result.dataset('cpl2').set('quickz', '0.0005');
model.result.dataset.create('cpl3', 'CutPlane');
model.result.dataset('cpl3').label('zx Outlet Plane');
model.result.dataset('cpl3').set('data', 'dset2');
model.result.dataset('cpl3').set('quickplane', 'zx');
model.result.dataset('cpl3').set('quicky', -0.027805);
model.result.dataset.create('cpl4', 'CutPlane');
model.result.dataset('cpl4').label('Upper Gap Plane');
model.result.dataset('cpl4').set('data', 'dset2');
model.result.dataset('cpl4').set('quickplane', 'xy');
model.result.dataset('cpl4').set('quickz', 0.0085);
model.result.dataset.create('cpl5', 'CutPlane');
model.result.dataset('cpl5').label('zx Inlet Plane');
model.result.dataset('cpl5').set('data', 'dset2');
model.result.dataset('cpl5').set('quickplane', 'zx');
model.result.dataset.create('cpl6', 'CutPlane');
model.result.dataset('cpl6').label('yz Inlet Plane');
model.result.dataset('cpl6').set('data', 'dset2');
model.result.dataset.create('cpl7', 'CutPlane');
model.result.dataset('cpl7').label('Upper Blade Plane');
model.result.dataset('cpl7').set('data', 'dset2');
model.result.dataset('cpl7').set('quickplane', 'xy');
model.result.dataset('cpl7').set('quickz', '8[mm]-1.2[mm]');
model.result.dataset.create('cln1', 'CutLine2D');
model.result.dataset('cln1').label('Radial Cut Line 2D');
model.result.dataset('cln1').set('data', 'cpl7');
model.result.dataset('cln1').setIndex('genpoints', '0.03*cos(45[deg])', 1, 0);
model.result.dataset('cln1').setIndex('genpoints', '-0.03*cos(45[deg])', 1, 1);
model.result.dataset.create('cln2', 'CutLine2D');
model.result.dataset('cln2').label('Diffuser Cut Line 2D');
model.result.dataset('cln2').set('data', 'cpl7');
model.result.dataset('cln2').setIndex('genpoints', 0.0367, 0, 0);
model.result.dataset('cln2').setIndex('genpoints', 0.0367, 1, 0);
model.result.dataset('cln2').setIndex('genpoints', -0.04, 1, 1);
model.result.table.create('tbl2', 'Table');
model.result.table('tbl2').label('Imported Experimental Results - Radial Cut Line 1');
model.result.table('tbl2').importData('fda_benchmark_blood_pump_uxy_1_lab1.txt');
model.result.table('tbl2').setIndex('headers', 'r [m]', 0, 1);
model.result.table('tbl2').setIndex('headers', '|U_xy| [m/s]', 1, 1);
model.result.table.create('tbl3', 'Table');
model.result.table('tbl3').label('Imported Experimental Results - Radial Cut Line 2');
model.result.table('tbl3').importData('fda_benchmark_blood_pump_uxy_1_lab2.txt');
model.result.table('tbl3').setIndex('headers', 'r [m]', 0, 1);
model.result.table('tbl3').setIndex('headers', '|U_xy| [m/s]', 1, 1);
model.result.table.create('tbl4', 'Table');
model.result.table('tbl4').label('Imported Experimental Results - Radial Cut Line 3');
model.result.table('tbl4').importData('fda_benchmark_blood_pump_uxy_1_lab3a.txt');
model.result.table('tbl4').setIndex('headers', 'r [m]', 0, 1);
model.result.table('tbl4').setIndex('headers', '|U_xy| [m/s]', 1, 1);
model.result.table.create('tbl5', 'Table');
model.result.table('tbl5').label('Imported Experimental Results -Diffuser Cut Line 1');
model.result.table('tbl5').importData('fda_benchmark_blood_pump_uxy_2_lab1.txt');
model.result.table('tbl5').setIndex('headers', 'd [m]', 0, 1);
model.result.table('tbl5').setIndex('headers', '|U_xy| [m/s]', 1, 1);
model.result.table.create('tbl6', 'Table');
model.result.table('tbl6').label('Imported Experimental Results -Diffuser Cut Line 2');
model.result.table('tbl6').importData('fda_benchmark_blood_pump_uxy_2_lab2.txt');
model.result.table('tbl6').setIndex('headers', 'd [m]', 0, 1);
model.result.table('tbl6').setIndex('headers', '|U_xy| [m/s]', 1, 1);
model.result.table.create('tbl7', 'Table');
model.result.table('tbl7').label('Imported Experimental Results -Diffuser Cut Line 3');
model.result.table('tbl7').importData('fda_benchmark_blood_pump_uxy_2_lab3a.txt');
model.result.table('tbl7').setIndex('headers', 'd [m]', 0, 1);
model.result.table('tbl7').setIndex('headers', '|U_xy| [m/s]', 1, 1);
model.result.table.create('tbl8', 'Table');
model.result.table('tbl8').label('Imported - Experimental Results - Pressure Head');
model.result.table('tbl8').importData('fda_benchmark_blood_pump_pressure_head_exp.txt');
model.result.numerical.create('gev1', 'EvalGlobal');
model.result.numerical('gev1').label('Pressure Head - Study 3');
model.result.numerical('gev1').set('data', 'dset5');
model.result.numerical('gev1').setIndex('expr', 'abs(aveop1(p2)-aveop2(p2))', 0);
model.result.numerical('gev1').setIndex('unit', 'mmHg', 0);
model.result.table.create('tbl9', 'Table');
model.result.table('tbl9').comments('Pressure Head - Study 3');
model.result.numerical('gev1').set('table', 'tbl9');
model.result.numerical('gev1').setResult;
model.result.table('tbl9').label('Pressure Head - Study 3');
model.result.numerical.create('gev2', 'EvalGlobal');
model.result.numerical('gev2').label('Pressure Head - Study 2');
model.result.numerical('gev2').set('data', 'dset2');
model.result.numerical('gev2').setIndex('expr', 'Qb', 0);
model.result.numerical('gev2').setIndex('unit', 'L/min', 0);
model.result.numerical('gev2').setIndex('expr', 'abs(aveop1(p2)-aveop2(p2))', 1);
model.result.numerical('gev2').setIndex('unit', 'mmHg', 1);
model.result.table.create('tbl10', 'Table');
model.result.table('tbl10').comments('Pressure Head - Study 2');
model.result.numerical('gev2').set('table', 'tbl10');
model.result.numerical('gev2').setResult;
model.result.table('tbl10').label('Pressure Head - Study 2');
model.result.numerical.create('int1', 'IntSurface');
model.result.numerical('int1').set('intvolume', true);
model.result.numerical('int1').label('Surface Integration 1 - Inflow');
model.result.numerical('int1').selection.set([52]);
model.result.numerical('int1').set('data', 'dset2');
model.result.numerical('int1').setIndex('expr', 'spf2.rho*(u2*nx+v2*ny+w2*nz)', 0);
model.result.numerical.create('int2', 'IntSurface');
model.result.numerical('int2').set('intvolume', true);
model.result.numerical('int2').label('Surface Integration 1 - Outflow');
model.result.numerical('int2').selection.set([53]);
model.result.numerical('int2').set('data', 'dset2');
model.result.numerical('int2').setIndex('expr', 'spf2.rho*(u2*nx+v2*ny+w2*nz)', 0);
model.result('pg1').set('window', 'window5');
model.result('pg1').set('windowtitle', 'Probe Plot 5');
model.result('pg1').run;
model.result('pg1').set('showlegends', false);
model.result('pg1').set('ylabelactive', true);
model.result('pg1').set('ylabel', 'Absolute pressure (Pa)');
model.result('pg1').set('titletype', 'manual');
model.result('pg1').set('title', 'Inlet Pressure');
model.result('pg2').set('window', 'window1');
model.result('pg2').run;
model.result('pg2').set('showlegends', false);
model.result('pg2').set('ylabelactive', true);
model.result('pg2').set('ylabel', 'Absolute pressure (Pa)');
model.result('pg2').set('titletype', 'manual');
model.result('pg2').set('title', 'Outlet Pressure');
model.result('pg3').set('window', 'window2');
model.result('pg3').set('windowtitle', 'Probe Plot 2');
model.result('pg3').run;
model.result('pg3').set('showlegends', false);
model.result('pg3').set('ylabelactive', true);
model.result('pg3').set('ylabel', 'Maximum Wall Shear Stress (N/m^2)');
model.result('pg3').set('titletype', 'manual');
model.result('pg3').set('title', 'Maximum Wall Shear Stress on Housing Rim');
model.result('pg4').set('window', 'window3');
model.result('pg4').set('windowtitle', 'Probe Plot 3');
model.result('pg4').run;
model.result('pg4').set('showlegends', false);
model.result('pg4').set('ylabelactive', true);
model.result('pg4').set('ylabel', 'Maximum Wall Shear Stress');
model.result('pg4').set('titletype', 'manual');
model.result('pg4').set('title', 'Maximum Wall Shear Stress on Fillet');
model.result('pg4').set('window', 'window3');
model.result('pg4').set('windowtitle', 'Probe Plot 3');
model.result('pg4').run;
model.result('pg5').set('window', 'window4');
model.result('pg5').set('windowtitle', 'Probe Plot 4');
model.result('pg5').run;
model.result('pg5').set('showlegends', false);
model.result('pg5').set('ylabelactive', true);
model.result('pg5').set('ylabel', 'Shaft Torque (nN*m)');

model.view.create('view8', 'geom1');
model.view('view8').model('comp1');
model.view('view8').set('showgrid', false);
model.view('view8').hideObjects.create('hide1');
model.view('view8').hideObjects('hide1').init(2);
model.view('view8').hideObjects('hide1').set('cmf11', [4 5 6 8 14 16 18 20 21 22 24 25 26 27 34 35 36 37 39 42 45 47 48 50 51 52 54 55]);

model.result('pg6').run;
model.result('pg6').set('titletype', 'none');
model.result('pg6').set('edges', false);
model.result('pg6').set('view', 'view8');
model.result('pg6').set('data', 'dset2');
model.result('pg6').run;
model.result('pg6').feature('slc1').active(false);
model.result('pg6').run;
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('data', 'cpl1');
model.result('pg6').feature('surf1').set('expr', 'spf2.U');
model.result('pg6').feature('surf1').create('tran1', 'Transparency');
model.result('pg6').run;
model.result('pg6').run;
model.result('pg6').create('surf2', 'Surface');
model.result('pg6').feature('surf2').set('data', 'cpl3');
model.result('pg6').feature('surf2').set('expr', 'spf2.U');
model.result('pg6').feature('surf2').set('colorlegend', false);
model.result('pg6').feature('surf2').create('tran1', 'Transparency');
model.result('pg6').run;
model.result('pg6').run;
model.result('pg6').create('surf3', 'Surface');
model.result('pg6').feature('surf3').set('data', 'cpl5');
model.result('pg6').feature('surf3').set('expr', 'spf2.U');
model.result('pg6').feature('surf3').set('colorlegend', false);
model.result('pg6').feature('surf3').create('tran1', 'Transparency');
model.result('pg6').run;
model.result('pg6').create('surf4', 'Surface');
model.result('pg6').feature('surf4').set('data', 'dset2');
model.result('pg6').feature('surf4').set('coloring', 'uniform');
model.result('pg6').feature('surf4').set('color', 'gray');
model.result('pg6').run;
model.result('pg7').run;
model.result('pg7').set('data', 'surf2');
model.result('pg7').run;
model.result('pg7').feature('surf1').set('data', 'cpl1');
model.result('pg7').create('surf2', 'Surface');
model.result('pg7').feature('surf2').set('data', 'cpl3');
model.result('pg7').feature('surf2').set('expr', 'p2');
model.result('pg7').run;
model.result('pg8').run;
model.result('pg8').set('data', 'dset2');
model.result.create('pg9', 'PlotGroup3D');
model.result('pg9').run;
model.result('pg9').label('Turbulent Viscosity');
model.result('pg9').set('data', 'dset2');
model.result('pg9').create('surf1', 'Surface');
model.result('pg9').feature('surf1').set('data', 'cpl1');
model.result('pg9').feature('surf1').set('expr', 'spf2.muT');
model.result('pg9').run;
model.result('pg9').create('surf2', 'Surface');
model.result('pg9').feature('surf2').set('data', 'cpl3');
model.result('pg9').feature('surf2').set('expr', 'spf2.muT');
model.result('pg9').feature('surf2').set('colorlegend', false);
model.result('pg9').run;
model.result('pg9').run;
model.result.create('pg10', 'PlotGroup1D');
model.result('pg10').run;
model.result('pg10').set('xlabelactive', true);
model.result('pg10').set('ylabelactive', true);
model.result('pg10').set('xlabel', 'r [m]');
model.result('pg10').set('ylabel', '|U_xy| [m/s]');
model.result('pg10').set('titletype', 'manual');
model.result('pg10').set('title', 'Velocity magnitude s along the radial cut line compared with experimental results.');
model.result('pg10').label('Magnitude of Uxy - Radial');
model.result('pg10').set('data', 'cln1');
model.result('pg10').set('axislimits', true);
model.result('pg10').set('xmin', 0);
model.result('pg10').set('xmax', 0.027);
model.result('pg10').set('ymin', 0);
model.result('pg10').set('ymax', 9);
model.result('pg10').set('legendpos', 'upperleft');
model.result('pg10').create('lngr1', 'LineGraph');
model.result('pg10').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg10').feature('lngr1').set('linewidth', 'preference');
model.result('pg10').feature('lngr1').set('expr', 'sqrt(u2^2+v2^2)');
model.result('pg10').feature('lngr1').set('xdata', 'expr');
model.result('pg10').feature('lngr1').set('xdataexpr', 'sqrt(x^2+y^2)');
model.result('pg10').feature('lngr1').set('legend', true);
model.result('pg10').feature('lngr1').set('legendmethod', 'manual');
model.result('pg10').feature('lngr1').setIndex('legends', 'COMSOL', 0);
model.result('pg10').run;
model.result('pg10').run;
model.result('pg10').create('tblp1', 'Table');
model.result('pg10').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg10').feature('tblp1').set('linewidth', 'preference');
model.result('pg10').feature('tblp1').set('table', 'tbl2');
model.result('pg10').feature('tblp1').set('xaxisdata', 1);
model.result('pg10').feature('tblp1').set('linestyle', 'none');
model.result('pg10').feature('tblp1').set('linecolor', 'blue');
model.result('pg10').feature('tblp1').set('linemarker', 'diamond');
model.result('pg10').feature('tblp1').set('legend', true);
model.result('pg10').feature('tblp1').set('legendmethod', 'manual');
model.result('pg10').feature('tblp1').setIndex('legends', '"Lab - 1 Exp. results"', 0);
model.result('pg10').run;
model.result('pg10').run;
model.result('pg10').create('tblp2', 'Table');
model.result('pg10').feature('tblp2').set('markerpos', 'datapoints');
model.result('pg10').feature('tblp2').set('linewidth', 'preference');
model.result('pg10').feature('tblp2').set('table', 'tbl3');
model.result('pg10').feature('tblp2').set('xaxisdata', 1);
model.result('pg10').feature('tblp2').set('linestyle', 'none');
model.result('pg10').feature('tblp2').set('linecolor', 'red');
model.result('pg10').feature('tblp2').set('linemarker', 'square');
model.result('pg10').feature('tblp2').set('legend', true);
model.result('pg10').feature('tblp2').set('legendmethod', 'manual');
model.result('pg10').feature('tblp2').setIndex('legends', '"Lab - 2 Exp. results"', 0);
model.result('pg10').run;
model.result('pg10').run;
model.result('pg10').create('tblp3', 'Table');
model.result('pg10').feature('tblp3').set('markerpos', 'datapoints');
model.result('pg10').feature('tblp3').set('linewidth', 'preference');
model.result('pg10').feature('tblp3').set('table', 'tbl4');
model.result('pg10').feature('tblp3').set('xaxisdata', 1);
model.result('pg10').feature('tblp3').set('linestyle', 'none');
model.result('pg10').feature('tblp3').set('linecolor', 'black');
model.result('pg10').feature('tblp3').set('linemarker', 'triangle');
model.result('pg10').feature('tblp3').set('legend', true);
model.result('pg10').feature('tblp3').set('legendmethod', 'manual');
model.result('pg10').feature('tblp3').setIndex('legends', '"Lab - 3 Exp. results"', 0);
model.result('pg10').run;
model.result.create('pg11', 'PlotGroup1D');
model.result('pg11').run;
model.result('pg11').label('Magnitude of Uxy - Diffuser');
model.result('pg11').set('data', 'cln2');
model.result('pg11').set('xlabelactive', true);
model.result('pg11').set('ylabelactive', true);
model.result('pg11').set('xlabel', 'd [m]');
model.result('pg11').set('ylabel', '|U_xy|');
model.result('pg11').set('titletype', 'manual');
model.result('pg11').set('title', 'Velocity magnitude along the diffuser cut line compared with experimental results. ');
model.result('pg11').set('axislimits', true);
model.result('pg11').set('xmin', 0);
model.result('pg11').set('xmax', 0.01);
model.result('pg11').set('ymin', 0);
model.result('pg11').set('ymax', 7);
model.result('pg11').set('legendpos', 'upperleft');
model.result('pg11').create('lngr1', 'LineGraph');
model.result('pg11').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg11').feature('lngr1').set('linewidth', 'preference');
model.result('pg11').feature('lngr1').set('expr', 'sqrt(u2^2+v2^2)');
model.result('pg11').feature('lngr1').set('legend', true);
model.result('pg11').feature('lngr1').set('legendmethod', 'manual');
model.result('pg11').feature('lngr1').setIndex('legends', 'COMSOL', 0);
model.result('pg11').run;
model.result('pg11').run;
model.result('pg11').create('tblp1', 'Table');
model.result('pg11').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg11').feature('tblp1').set('linewidth', 'preference');
model.result('pg11').feature('tblp1').set('table', 'tbl5');
model.result('pg11').feature('tblp1').set('xaxisdata', 1);
model.result('pg11').feature('tblp1').set('linestyle', 'none');
model.result('pg11').feature('tblp1').set('linecolor', 'blue');
model.result('pg11').feature('tblp1').set('linemarker', 'diamond');
model.result('pg11').feature('tblp1').set('legend', true);
model.result('pg11').feature('tblp1').set('legendmethod', 'manual');
model.result('pg11').feature('tblp1').setIndex('legends', '"Lab - 1 Exp. results"', 0);
model.result('pg11').run;
model.result('pg11').run;
model.result('pg11').create('tblp2', 'Table');
model.result('pg11').feature('tblp2').set('markerpos', 'datapoints');
model.result('pg11').feature('tblp2').set('linewidth', 'preference');
model.result('pg11').feature('tblp2').set('table', 'tbl6');
model.result('pg11').feature('tblp2').set('xaxisdata', 1);
model.result('pg11').feature('tblp2').set('linestyle', 'none');
model.result('pg11').feature('tblp2').set('linecolor', 'red');
model.result('pg11').feature('tblp2').set('linemarker', 'square');
model.result('pg11').feature('tblp2').set('legend', true);
model.result('pg11').feature('tblp2').set('legendmethod', 'manual');
model.result('pg11').feature('tblp2').setIndex('legends', '"Lab - 2 Exp. results"', 0);
model.result('pg11').run;
model.result('pg11').run;
model.result('pg11').create('tblp3', 'Table');
model.result('pg11').feature('tblp3').set('markerpos', 'datapoints');
model.result('pg11').feature('tblp3').set('linewidth', 'preference');
model.result('pg11').feature('tblp3').set('table', 'tbl7');
model.result('pg11').feature('tblp3').set('xaxisdata', 1);
model.result('pg11').feature('tblp3').set('linestyle', 'none');
model.result('pg11').feature('tblp3').set('linecolor', 'black');
model.result('pg11').feature('tblp3').set('linemarker', 'triangle');
model.result('pg11').feature('tblp3').set('legend', true);
model.result('pg11').feature('tblp3').set('legendmethod', 'manual');
model.result('pg11').feature('tblp3').setIndex('legends', '"Lab - 3 Exp. results"', 0);
model.result('pg11').run;
model.result.create('pg12', 'PlotGroup1D');
model.result('pg12').run;
model.result('pg12').label('Pressure Head - Exp. Comparison');
model.result('pg12').set('titletype', 'manual');
model.result('pg12').set('title', ['Pressure head at different inlet flow rates for the centrifugal pump.' newline ]);
model.result('pg12').set('xlabelactive', true);
model.result('pg12').set('xlabel', 'Flow rate (L/min)');
model.result('pg12').set('ylabelactive', true);
model.result('pg12').set('ylabel', 'Pressure head (mmHg)');
model.result('pg12').create('tblp1', 'Table');
model.result('pg12').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg12').feature('tblp1').set('linewidth', 'preference');
model.result('pg12').feature('tblp1').set('table', 'tbl8');
model.result('pg12').feature('tblp1').set('xaxisdata', 1);
model.result('pg12').feature('tblp1').set('linestyle', 'none');
model.result('pg12').feature('tblp1').set('linecolor', 'black');
model.result('pg12').feature('tblp1').set('linewidth', 6);
model.result('pg12').feature('tblp1').set('linemarker', 'circle');
model.result('pg12').feature('tblp1').set('legendmethod', 'manual');
model.result('pg12').feature('tblp1').set('legend', true);
model.result('pg12').feature('tblp1').setIndex('legends', 'Experiments (Malinauskas et al. ASAIO Journal 2017)', 0);
model.result('pg12').run;
model.result('pg12').create('tblp2', 'Table');
model.result('pg12').feature('tblp2').set('markerpos', 'datapoints');
model.result('pg12').feature('tblp2').set('linewidth', 'preference');
model.result('pg12').feature('tblp2').set('table', 'tbl9');
model.result('pg12').feature('tblp2').set('linestyle', 'none');
model.result('pg12').feature('tblp2').set('linecolor', 'blue');
model.result('pg12').feature('tblp2').set('linewidth', 6);
model.result('pg12').feature('tblp2').set('linemarker', 'diamond');
model.result('pg12').feature('tblp2').set('legend', true);
model.result('pg12').feature('tblp2').set('legendmethod', 'manual');
model.result('pg12').feature('tblp2').setIndex('legends', 'COMSOL', 0);
model.result('pg12').run;
model.result('pg12').create('tblp3', 'Table');
model.result('pg12').feature('tblp3').set('markerpos', 'datapoints');
model.result('pg12').feature('tblp3').set('linewidth', 'preference');
model.result('pg12').feature('tblp3').set('table', 'tbl10');
model.result('pg12').feature('tblp3').set('xaxisdata', 1);
model.result('pg12').feature('tblp3').set('linecolor', 'blue');
model.result('pg12').feature('tblp3').set('linewidth', 6);
model.result('pg12').feature('tblp3').set('linemarker', 'diamond');
model.result('pg12').run;
model.result.create('pg13', 'PlotGroup3D');
model.result('pg13').run;
model.result('pg13').set('data', 'cpl1');
model.result('pg13').set('titletype', 'manual');
model.result('pg13').set('title', 'Velocity magnitude at the blade passage plane under operating condition of 3500 [rpm] and an inlet flow rate of 6 [L/min].');
model.result('pg13').label('Velocity magnitude at the blade passage plane');
model.result('pg13').set('title', 'Velocity magnitude at the blade passage plane');
model.result('pg13').set('paramindicator', 'Qb(2)=6 L/min');
model.result('pg13').set('edges', false);
model.result('pg13').set('view', 'new');
model.result('pg13').create('surf1', 'Surface');
model.result('pg13').feature('surf1').set('expr', 'spf2.U');
model.result('pg13').feature('surf1').create('filt1', 'Filter');
model.result('pg13').run;
model.result('pg13').feature('surf1').feature('filt1').set('expr', 'x>-0.005  && x<0.04 && y<0.005');
model.result('pg13').run;

model.title('FDA Benchmark Blood Pump');

model.description('This benchmark model computes the turbulent flow field in a centrifugal blood pump. The computed wall shear stress can be used to predict damage that might occur to the blood passing through the pump under various load conditions. The model geometry is taken from FDA''s Computational Round Robin and was used for several simulations under the given flow rates and pump speeds. The 2D profiles of the velocity magnitude and pressure head are in good agreement with experimental data.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;

model.label('fda_benchmark_blood_pump.mph');

model.modelNode.label('Components');

out = model;
