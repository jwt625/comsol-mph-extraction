function out = model
%
% orbit_thermal_loads.m
%
% Model exported on May 26 2025, 21:29 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Heat_Transfer_Module/Orbital_Thermal_Loads');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('otl', 'OrbitalThermalLoadsEvents', 'geom1');
model.physics('otl').model('comp1');

model.study.create('std1');
model.study('std1').create('otl', 'OrbitThermalLoads');
model.study('std1').feature('otl').set('solnum', 'auto');
model.study('std1').feature('otl').set('notsolnum', 'auto');
model.study('std1').feature('otl').set('outputmap', {});
model.study('std1').feature('otl').setSolveFor('/physics/otl', true);

model.geom('geom1').create('blk1', 'Block');
model.geom('geom1').feature('blk1').set('size', {'10[cm]' '10[cm]' '1'});
model.geom('geom1').feature('blk1').setIndex('size', '10[cm]', 2);
model.geom('geom1').feature('blk1').set('base', 'center');

model.func.create('im1', 'Image');
model.func('im1').model('comp1');
model.func('im1').label('Image Data of Solar Band Albedo');
model.func('im1').set('filename', '/hymer/build/main/daily/test/tapplications/Heat_Transfer_Module/Orbital_Thermal_Loads/solarBandAlbedoData.png');
model.func('im1').importData;
model.func('im1').set('funcname', 'imageData');
model.func('im1').set('xmin', '-pi');
model.func('im1').set('xmax', 'pi');
model.func('im1').set('ymin', '-pi/2');
model.func('im1').set('ymax', 'pi/2');
model.func('im1').set('argunit', 'rad');
model.func('im1').set('fununit', '1');
model.func.create('an1', 'Analytic');
model.func('an1').model('comp1');
model.func('an1').label('Image-Based Albedo, Solar Band');
model.func('an1').set('funcname', 'ImageBasedAlbedoSolarBand');
model.func('an1').set('expr', 'imageData(Longitude,Latitude)');
model.func('an1').set('args', 'Latitude, Longitude');
model.func('an1').setIndex('argunit', 'rad', 0);
model.func('an1').setIndex('argunit', 'rad', 1);
model.func('an1').setIndex('plotargs', '-pi/2', 0, 1);
model.func('an1').setIndex('plotargs', 'pi/2', 0, 2);
model.func('an1').setIndex('plotargs', '-pi', 1, 1);
model.func('an1').setIndex('plotargs', 'pi', 1, 2);
model.func.create('an2', 'Analytic');
model.func('an2').model('comp1');
model.func('an2').label('Constant Albedo, IR Band');
model.func('an2').set('funcname', 'ConstantAlbedo_IR_Band');
model.func('an2').set('expr', '0.3');
model.func('an2').set('args', 'Latitude, Longitude');
model.func.create('int1', 'Interpolation');
model.func('int1').model('comp1');
model.func('int1').setIndex('table', 85, 0, 0);
model.func('int1').setIndex('table', 195, 0, 1);
model.func('int1').setIndex('table', 75, 1, 0);
model.func('int1').setIndex('table', 200, 1, 1);
model.func('int1').setIndex('table', 65, 2, 0);
model.func('int1').setIndex('table', 205, 2, 1);
model.func('int1').setIndex('table', 55, 3, 0);
model.func('int1').setIndex('table', 215, 3, 1);
model.func('int1').setIndex('table', 45, 4, 0);
model.func('int1').setIndex('table', 225, 4, 1);
model.func('int1').setIndex('table', 35, 5, 0);
model.func('int1').setIndex('table', 245, 5, 1);
model.func('int1').setIndex('table', 25, 6, 0);
model.func('int1').setIndex('table', 265, 6, 1);
model.func('int1').setIndex('table', 15, 7, 0);
model.func('int1').setIndex('table', 260, 7, 1);
model.func('int1').setIndex('table', 5, 8, 0);
model.func('int1').setIndex('table', 245, 8, 1);
model.func('int1').setIndex('table', -5, 9, 0);
model.func('int1').setIndex('table', 255, 9, 1);
model.func('int1').setIndex('table', -15, 10, 0);
model.func('int1').setIndex('table', 265, 10, 1);
model.func('int1').setIndex('table', -25, 11, 0);
model.func('int1').setIndex('table', 265, 11, 1);
model.func('int1').setIndex('table', -35, 12, 0);
model.func('int1').setIndex('table', 245, 12, 1);
model.func('int1').setIndex('table', -45, 13, 0);
model.func('int1').setIndex('table', 225, 13, 1);
model.func('int1').setIndex('table', -55, 14, 0);
model.func('int1').setIndex('table', 210, 14, 1);
model.func('int1').setIndex('table', -65, 15, 0);
model.func('int1').setIndex('table', 195, 15, 1);
model.func('int1').setIndex('table', -75, 16, 0);
model.func('int1').setIndex('table', 165, 16, 1);
model.func('int1').setIndex('table', -85, 17, 0);
model.func('int1').setIndex('table', 155, 17, 1);
model.func('int1').label('IR Flux w.r.t. Latitude');
model.func('int1').setIndex('fununit', 'W/m^2', 0);
model.func('int1').setIndex('argunit', 1, 0);
model.func.create('an3', 'Analytic');
model.func('an3').model('comp1');
model.func('an3').label('Planetary Flux, IR Band');
model.func('an3').set('funcname', 'PlanetaryFlux_IR_Band');
model.func('an3').set('expr', 'int1(Latitude*90/pi)');
model.func('an3').set('args', 'Latitude, Longitude');
model.func('an3').setIndex('argunit', 1, 0);
model.func('an3').setIndex('argunit', 1, 1);

model.cpl.create('intop1', 'Integration', 'geom1');

model.geom('geom1').run;

model.cpl('intop1').set('axisym', true);
model.cpl('intop1').set('opname', 'intopAll');
model.cpl('intop1').selection.geom('geom1', 2);
model.cpl('intop1').selection.all;

model.physics('otl').feature('sup1').set('sunDirection', 'summerSol');
model.physics('otl').feature('plp1').set('longType', 'spacecraft');
model.physics('otl').feature('plp1').set('geographicPositionDependence', 'latLong');
model.physics('otl').feature('plp1').set('planetAlbedoFunctionSolAmb', 'userdefband');
model.physics('otl').feature('plp1').setIndex('planetAlbedoFunctionEachBandSolAmb', 'an1', 0, 0);
model.physics('otl').feature('plp1').setIndex('planetAlbedoFunctionEachBandSolAmb', 'an2', 1, 0);
model.physics('otl').feature('plp1').set('planetRadiativeFluxFunctionSolAmb', 'userdefband');
model.physics('otl').feature('plp1').setIndex('planetRadiativeFluxFunctionEachBandSolAmb', 'an3', 1, 0);
model.physics('otl').feature('op1').set('orbitType', 'circular');
model.physics('otl').feature('op1').set('R_orbit', 'otl.R_planet+400[km]');
model.physics('otl').feature('op1').set('i_orbit', '50[deg]');
model.physics('otl').feature('op1').set('omegaType', 'ltan');
model.physics('otl').feature('op1').set('omegaTime_orbit', '15[h]');
model.physics('otl').feature('so1').set('primaryRotation', 'rate');
model.physics('otl').feature('so1').set('primaryAngularRate', '2*360[deg]/otl.T_orbit');
model.physics('otl').feature('dsurf1').set('epsilon_radSolAmb_mat', 'userdefBand');
model.physics('otl').feature('dsurf1').setIndex('epsilon_rad_bandSolAmb', 0.3, 0, 0);
model.physics('otl').feature('dsurf1').setIndex('epsilon_rad_bandSolAmb', 0.85, 1, 0);
model.physics('otl').create('dsurf2', 'DiffuseSurface', 2);
model.physics('otl').feature('dsurf2').selection.set([1 2 5 6]);
model.physics('otl').feature('dsurf2').set('epsilon_radSolAmb_mat', 'userdef');
model.physics('otl').feature('dsurf2').set('epsilon_radSolAmb', 0.95);

model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('size').set('custom', true);
model.mesh('mesh1').feature('size').set('hmax', 0.1);
model.mesh('mesh1').run;

model.study('std1').feature('otl').set('orbitlist', 'range(0,0.01,5)');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'otl');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'otl');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.1,1)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('eventout', true);
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', false);
model.sol('sol1').feature('t1').set('tstepsbdf', 'intermediate');
model.sol('sol1').feature('t1').set('endtimeinterpolation', false);
model.sol('sol1').feature('t1').set('estrat', 'exclude');
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('control', 'otl');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 5);
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d1').label('Direct, radiation variables (otl)');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('t1').feature('i1').label('AMG, radiation variables (otl)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').create('i2', 'Iterative');
model.sol('sol1').feature('t1').feature('i2').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i2').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i2').set('rhob', 20);
model.sol('sol1').feature('t1').feature('i2').label('GMG, radiation variables (otl)');
model.sol('sol1').feature('t1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('prefun', 'gmg');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('mcasegen', 'any');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 5);
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.dataset.create('ps1', 'ParSurface');
model.result.dataset('ps1').label('Planet');
model.result.dataset('ps1').set('data', 'none');
model.result.dataset('ps1').set('par1', 'Longitude');
model.result.dataset('ps1').set('parmin1', '-pi');
model.result.dataset('ps1').set('parmax1', 'pi');
model.result.dataset('ps1').set('par2', 'Latitude');
model.result.dataset('ps1').set('parmin2', '-0.5*pi');
model.result.dataset('ps1').set('parmax2', '0.5*pi');
model.result.dataset('ps1').set('exprx', 'comp1.otl.x_planet(comp1.otl.R_planet,comp1.otl.rot_planet,comp1.otl.A_off,Latitude,Longitude)');
model.result.dataset('ps1').set('expry', 'comp1.otl.y_planet(comp1.otl.R_planet,comp1.otl.rot_planet,comp1.otl.A_off,Latitude,Longitude)');
model.result.dataset('ps1').set('exprz', 'comp1.otl.z_planet(comp1.otl.R_planet,comp1.otl.rot_planet,Latitude,Longitude)');
model.result.dataset('ps1').set('global', true);
model.result.dataset('ps1').set('res1', 360);
model.result.dataset('ps1').set('res2', 180);
model.result.dataset('ps1').set('data', 'none');
model.result.dataset.create('tran1', 'Transformation3D');
model.result.dataset('tran1').label('Spacecraft Orbit');
model.result.dataset('tran1').set('data', 'none');
model.result.dataset('tran1').set('transtype', 'general');
model.result.dataset('tran1').set('transmatrix', {'comp1.otl.Tviz11' 'comp1.otl.Tviz12' 'comp1.otl.Tviz13'; 'comp1.otl.Tviz21' 'comp1.otl.Tviz22' 'comp1.otl.Tviz23'; 'comp1.otl.Tviz31' 'comp1.otl.Tviz32' 'comp1.otl.Tviz33'});
model.result.dataset('tran1').set('translation', {'comp1.otl.X_viz' 'comp1.otl.Y_viz' 'comp1.otl.Z_viz'});
model.result.dataset('tran1').set('data', 'dset1');
model.result.dataset('ps1').set('data', 'dset1');
model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').label('Orbit Visualization (otl)');
model.result('pg1').set('data', 'ps1');
model.result('pg1').setIndex('looplevel', 521, 0);
model.result('pg1').set('data', 'ps1');
model.result('pg1').setIndex('looplevel', 521, 0);
model.result('pg1').set('defaultPlotID', 'otl/OTL_PhysicsInterfaces/icom2/pdef1/pcond5/pg1');
model.result('pg1').feature.create('img1', 'Image');
model.result('pg1').feature('img1').label('Planet');
model.result('pg1').feature('img1').set('showsolutionparams', 'on');
model.result('pg1').feature('img1').set('solutionparams', 'parent');
model.result('pg1').feature('img1').set('filename', 'data:///physics/images/earth.jpg');
model.result('pg1').feature('img1').set('mapping', 'manual');
model.result('pg1').feature('img1').set('uexpr', '0.5*(Longitude-pi)/pi');
model.result('pg1').feature('img1').set('vexpr', '(Latitude+0.5*pi)/pi');
model.result('pg1').feature('img1').set('resolution', 'norefine');
model.result('pg1').feature('img1').set('showsolutionparams', 'on');
model.result('pg1').feature('img1').set('data', 'parent');
model.result('pg1').feature.create('pttraj1', 'PointTrajectories');
model.result('pg1').feature('pttraj1').label('Spacecraft Orbit');
model.result('pg1').feature('pttraj1').set('showsolutionparams', 'on');
model.result('pg1').feature('pttraj1').set('solutionparams', 'parent');
model.result('pg1').feature('pttraj1').set('expr', {'otl.X_ECSViz' 'otl.Y_ECSViz' 'otl.Z_ECSViz'});
model.result('pg1').feature('pttraj1').set('titletype', 'none');
model.result('pg1').feature('pttraj1').set('linetype', 'tube');
model.result('pg1').feature('pttraj1').set('interpolation', 'uniform');
model.result('pg1').feature('pttraj1').set('interpcount', 500);
model.result('pg1').feature('pttraj1').set('radiusexpr', '0.01*otl.R_planet');
model.result('pg1').feature('pttraj1').set('tuberadiusscaleactive', true);
model.result('pg1').feature('pttraj1').set('showsolutionparams', 'on');
model.result('pg1').feature('pttraj1').set('data', 'parent');
model.result('pg1').feature('pttraj1').feature.create('col1', 'Color');
model.result('pg1').feature('pttraj1').feature('col1').set('expr', 'otl.isIlluminated');
model.result('pg1').feature('pttraj1').feature('col1').set('rangecoloractive', 'on');
model.result('pg1').feature('pttraj1').feature('col1').set('rangecolormax', 1);
model.result('pg1').feature('pttraj1').feature('col1').set('coloring', 'gradient');
model.result('pg1').feature('pttraj1').feature('col1').set('colorlegend', false);
model.result('pg1').feature('pttraj1').feature('col1').set('topcolor', 'yellow');
model.result('pg1').feature.create('pttraj2', 'PointTrajectories');
model.result('pg1').feature('pttraj2').label('Sun Vector');
model.result('pg1').feature('pttraj2').set('showsolutionparams', 'on');
model.result('pg1').feature('pttraj2').set('solutionparams', 'parent');
model.result('pg1').feature('pttraj2').set('expr', {'-1.5*otl.R_planet*otl.SVX_ECS' '-1.5*otl.R_planet*otl.SVY_ECS' '-1.5*otl.R_planet*otl.SVZ_ECS'});
model.result('pg1').feature('pttraj2').set('titletype', 'none');
model.result('pg1').feature('pttraj2').set('linetype', 'tube');
model.result('pg1').feature('pttraj2').set('radiusexpr', '0.01*otl.R_planet');
model.result('pg1').feature('pttraj2').set('tuberadiusscaleactive', true);
model.result('pg1').feature('pttraj2').set('pointtype', 'arrow');
model.result('pg1').feature('pttraj2').set('pointcolor', 'yellow');
model.result('pg1').feature('pttraj2').set('arrowexpr', {'0.5*otl.SVX_ECS*otl.R_planet' '0.5*otl.SVY_ECS*otl.R_planet' '0.5*otl.SVZ_ECS*otl.R_planet'});
model.result('pg1').feature('pttraj2').set('arrowbase', 'head');
model.result('pg1').feature('pttraj2').set('arrowscaleactive', true);
model.result('pg1').feature('pttraj2').set('showsolutionparams', 'on');
model.result('pg1').feature('pttraj2').set('data', 'parent');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').label('Eclipse');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('solutionparams', 'parent');
model.result('pg1').feature('surf1').set('expr', '1');
model.result('pg1').feature('surf1').set('titletype', 'none');
model.result('pg1').feature('surf1').set('coloring', 'uniform');
model.result('pg1').feature('surf1').set('color', 'black');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result('pg1').feature('surf1').feature.create('filt1', 'Filter');
model.result('pg1').feature('surf1').feature('filt1').set('expr', 'otl.SVX_ECS*x+otl.SVY_ECS*y+otl.SVZ_ECS*z>0');
model.result('pg1').feature('surf1').feature('filt1').set('shownodespec', 'on');
model.result('pg1').feature('surf1').feature.create('tran1', 'Transparency');
model.result('pg1').feature('surf1').feature('tran1').set('transparency', 0.7);
model.result('pg1').feature('surf1').feature.create('def1', 'Deform');
model.result('pg1').feature('surf1').feature('def1').set('expr', {'(-1+otl.scale_eclipse/otl.R_planet)*x' '(-1+otl.scale_eclipse/otl.R_planet)*y' '(-1+otl.scale_eclipse/otl.R_planet)*z'});
model.result('pg1').feature('surf1').feature('def1').set('scaleactive', true);
model.result('pg1').feature.create('con1', 'Contour');
model.result('pg1').feature('con1').label('Equator');
model.result('pg1').feature('con1').set('showsolutionparams', 'on');
model.result('pg1').feature('con1').set('solutionparams', 'parent');
model.result('pg1').feature('con1').set('expr', 'Latitude');
model.result('pg1').feature('con1').set('titletype', 'none');
model.result('pg1').feature('con1').set('levelmethod', 'levels');
model.result('pg1').feature('con1').set('coloring', 'uniform');
model.result('pg1').feature('con1').set('colorlegend', false);
model.result('pg1').feature('con1').set('color', 'black');
model.result('pg1').feature('con1').set('showsolutionparams', 'on');
model.result('pg1').feature('con1').set('data', 'parent');
model.result('pg1').feature.create('con2', 'Contour');
model.result('pg1').feature('con2').label('Prime Meridian');
model.result('pg1').feature('con2').set('showsolutionparams', 'on');
model.result('pg1').feature('con2').set('solutionparams', 'parent');
model.result('pg1').feature('con2').set('expr', 'Longitude');
model.result('pg1').feature('con2').set('titletype', 'none');
model.result('pg1').feature('con2').set('levelmethod', 'levels');
model.result('pg1').feature('con2').set('coloring', 'uniform');
model.result('pg1').feature('con2').set('colorlegend', false);
model.result('pg1').feature('con2').set('color', 'black');
model.result('pg1').feature('con2').set('showsolutionparams', 'on');
model.result('pg1').feature('con2').set('data', 'parent');
model.result('pg1').feature.create('surf2', 'Surface');
model.result('pg1').feature('surf2').label('Spacecraft');
model.result('pg1').feature('surf2').set('data', 'tran1');
model.result('pg1').feature('surf2').setIndex('looplevel', 521, 0);
model.result('pg1').feature('surf2').set('solutionparams', 'parent');
model.result('pg1').feature('surf2').set('descractive', true);
model.result('pg1').feature('surf2').set('expr', 'otl.Gext1+otl.Gext2');
model.result('pg1').feature('surf2').set('descr', 'External irradiation');
model.result('pg1').feature('surf2').set('resolution', 'norefine');
model.result('pg1').feature('surf2').set('data', 'tran1');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('External Irradiation (otl)');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 521, 0);
model.result('pg2').set('defaultPlotID', 'otl/OTL_PhysicsInterfaces/icom2/pdef1/pcond3/pg2');
model.result('pg2').feature.create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('descractive', true);
model.result('pg2').feature('surf1').set('expr', 'otl.Gext1+otl.Gext2');
model.result('pg2').feature('surf1').set('descr', 'External irradiation');
model.result('pg2').feature('surf1').set('resolution', 'norefine');
model.result('pg2').feature('surf1').set('smooth', 'internal');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('data', 'parent');
model.result('pg2').feature.create('pttraj1', 'PointTrajectories');
model.result('pg2').feature('pttraj1').label('Sun Vector');
model.result('pg2').feature('pttraj1').set('showsolutionparams', 'on');
model.result('pg2').feature('pttraj1').set('solutionparams', 'parent');
model.result('pg2').feature('pttraj1').set('expr', {'-2*otl.L_geom*otl.SVX_Viz' '-2*otl.L_geom*otl.SVY_Viz' '-2*otl.L_geom*otl.SVZ_Viz'});
model.result('pg2').feature('pttraj1').set('titletype', 'none');
model.result('pg2').feature('pttraj1').set('linetype', 'none');
model.result('pg2').feature('pttraj1').set('pointtype', 'arrow');
model.result('pg2').feature('pttraj1').set('pointcolor', 'yellow');
model.result('pg2').feature('pttraj1').set('arrowexpr', {'otl.L_geom*otl.SVX_Viz' 'otl.L_geom*otl.SVY_Viz' 'otl.L_geom*otl.SVZ_Viz'});
model.result('pg2').feature('pttraj1').set('arrowbase', 'head');
model.result('pg2').feature('pttraj1').set('arrowscaleactive', true);
model.result('pg2').feature('pttraj1').set('showsolutionparams', 'on');
model.result('pg2').feature('pttraj1').set('data', 'parent');
model.result('pg2').feature('pttraj1').selection.geom('geom1', 0);
model.result('pg2').feature('pttraj1').selection.set([1 2 3 4 5 6 7 8]);
model.result('pg2').feature('pttraj1').feature.create('col1', 'Color');
model.result('pg2').feature('pttraj1').feature('col1').set('showcolordata', 'off');
model.result('pg2').feature('pttraj1').feature('col1').set('expr', 'otl.isIlluminated');
model.result('pg2').feature('pttraj1').feature('col1').set('rangecoloractive', 'on');
model.result('pg2').feature('pttraj1').feature('col1').set('rangecolormax', 1);
model.result('pg2').feature('pttraj1').feature('col1').set('coloring', 'gradient');
model.result('pg2').feature('pttraj1').feature('col1').set('colorlegend', false);
model.result('pg2').feature('pttraj1').feature('col1').set('topcolor', 'yellow');
model.result('pg2').feature.create('pttraj2', 'PointTrajectories');
model.result('pg2').feature('pttraj2').label('Nadir Vector');
model.result('pg2').feature('pttraj2').set('showsolutionparams', 'on');
model.result('pg2').feature('pttraj2').set('solutionparams', 'parent');
model.result('pg2').feature('pttraj2').set('expr', {'-2*otl.L_geom*otl.ZDX_Viz' '-2*otl.L_geom*otl.ZDY_Viz' '-2*otl.L_geom*otl.ZDZ_Viz'});
model.result('pg2').feature('pttraj2').set('titletype', 'none');
model.result('pg2').feature('pttraj2').set('linetype', 'none');
model.result('pg2').feature('pttraj2').set('pointtype', 'arrow');
model.result('pg2').feature('pttraj2').set('pointcolor', 'blue');
model.result('pg2').feature('pttraj2').set('arrowexpr', {'-otl.L_geom*otl.ZDX_Viz' '-otl.L_geom*otl.ZDY_Viz' '-otl.L_geom*otl.ZDZ_Viz'});
model.result('pg2').feature('pttraj2').set('arrowscaleactive', true);
model.result('pg2').feature('pttraj2').set('showsolutionparams', 'on');
model.result('pg2').feature('pttraj2').set('data', 'parent');
model.result('pg2').feature('pttraj2').selection.geom('geom1', 0);
model.result('pg2').feature('pttraj2').selection.set([1 2 3 4 5 6 7 8]);
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('surf1').set('color', 'custom');
model.result('pg1').feature('surf1').set('customcolor', [0 0 0.250980406999588]);
model.result('pg1').run;
model.result('pg1').feature('surf1').feature('tran1').set('transparency', 0.2);
model.result('pg1').run;
model.result('pg1').create('surf3', 'Surface');
model.result('pg1').feature('surf3').label('Albedo Flux');
model.result('pg1').feature('surf3').set('expr', '-ImageBasedAlbedoSolarBand(Latitude, Longitude)*otl.sup1.q0s*(x*otl.SVX_ECS+y*otl.SVY_ECS+z*otl.SVZ_ECS)');
model.result('pg1').feature('surf3').set('colortable', 'RainbowDark');
model.result('pg1').feature('surf3').create('filt1', 'Filter');
model.result('pg1').run;
model.result('pg1').feature('surf3').feature('filt1').set('expr', 'x*otl.SVX_ECS+y*otl.SVY_ECS+z*otl.SVZ_ECS<0');
model.result('pg1').run;
model.result('pg1').feature('surf3').create('tran1', 'Transparency');
model.result('pg1').run;
model.result('pg1').feature('surf3').feature('tran1').set('transparency', 0.2);

model.view('view2').camera.setIndex('position', 88775776, 0);
model.view('view2').camera.setIndex('position', 85244096, 1);
model.view('view2').camera.setIndex('position', 19422452, 2);
model.view('view2').camera.setIndex('target', -3976, 0);
model.view('view2').camera.set('target', [-3976 1196440 -3188]);
model.view('view2').camera.setIndex('target', -3340, 2);
model.view('view2').camera.setIndex('up', 0, 0);
model.view('view2').camera.setIndex('up', 0, 1);
model.view('view2').camera.set('up', [0 0 1]);
model.view('view2').camera.setIndex('viewoffset', 0, 0);
model.view('view2').camera.set('viewoffset', [0 0]);
model.view('view2').camera.set('zoomanglefull', 16.222896575927734);

model.result('pg1').run;
model.result('pg1').run;
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('Total and Per Band Irradiation Over Time');
model.result('pg3').set('ylabelactive', true);
model.result('pg3').set('ylabel', 'Irradiation (W)');
model.result('pg3').set('titletype', 'label');
model.result('pg3').create('glob1', 'Global');
model.result('pg3').feature('glob1').set('markerpos', 'datapoints');
model.result('pg3').feature('glob1').set('linewidth', 'preference');
model.result('pg3').feature('glob1').setIndex('expr', 'intopAll(otl.Gext1+otl.Gext2)', 0);
model.result('pg3').feature('glob1').setIndex('unit', 'W', 0);
model.result('pg3').feature('glob1').setIndex('descr', 'Total Irradiation', 0);
model.result('pg3').feature('glob1').setIndex('expr', 'intopAll(otl.Gext1)', 1);
model.result('pg3').feature('glob1').setIndex('unit', 'W', 1);
model.result('pg3').feature('glob1').setIndex('descr', 'Solar Band Irradiation', 1);
model.result('pg3').feature('glob1').setIndex('expr', 'intopAll(otl.Gext2)', 2);
model.result('pg3').feature('glob1').setIndex('unit', 'W', 2);
model.result('pg3').feature('glob1').setIndex('descr', 'Ambient Band Irradiation', 2);
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Total Irradiation, Periodic Comparison');
model.result('pg4').set('xlabelactive', true);
model.result('pg4').set('xlabel', 'Orbit Period (s)');
model.result('pg4').set('titletype', 'label');
model.result('pg4').create('glob1', 'Global');
model.result('pg4').feature('glob1').set('markerpos', 'datapoints');
model.result('pg4').feature('glob1').set('linewidth', 'preference');
model.result('pg4').feature('glob1').setIndex('expr', 'intopAll(otl.Gext1+otl.Gext2)', 0);
model.result('pg4').feature('glob1').setIndex('unit', 'W', 0);
model.result('pg4').feature('glob1').setIndex('descr', 'Total Irradiation', 0);
model.result('pg4').feature('glob1').set('xdata', 'expr');
model.result('pg4').feature('glob1').set('xdataexpr', 'mod(t,otl.T_orbit)');
model.result('pg4').feature('glob1').create('filt1', 'GlobalFilter');
model.result('pg4').run;
model.result('pg4').feature('glob1').feature('filt1').set('xdec', false);
model.result('pg4').run;
model.result('pg4').feature('glob1').create('col1', 'Color');
model.result('pg4').run;
model.result('pg4').feature('glob1').feature('col1').set('expr', 'ceil(t/otl.T_orbit)');
model.result('pg4').feature('glob1').feature('col1').set('descractive', true);
model.result('pg4').feature('glob1').feature('col1').set('descr', 'Orbit Number');
model.result('pg4').feature('glob1').feature('col1').set('colorlegend', false);
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').set('showlegends', false);
model.result.evaluationGroup.create('eg1', 'EvaluationGroup');
model.result.evaluationGroup('eg1').label('Average of Total Irradiation Over Time');
model.result.evaluationGroup('eg1').setIndex('looplevelinput', 'first', 0);
model.result.evaluationGroup('eg1').set('transpose', true);
model.result.evaluationGroup('eg1').set('includeparameters', false);
model.result.evaluationGroup('eg1').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'timeavg(0, at(''last'',t),intopAll(otl.Gext1+otl.Gext2), ''nointerp'')', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'W', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Time-averaged total irradiation', 0);
model.result.evaluationGroup('eg1').run;
model.result('pg1').run;

model.title('Orbit Thermal Loads');

model.description('A satellite in orbit experiences Solar, Albedo, and Planetary Radiative loads, where Albedo and Planetary IR can vary with latitude and also with longitude. This model demonstrates how to define Earth properties that are spatially varying. It shows how to read in spreadsheet and image data and how to define and use different functions. The total irradiation and flux onto the satellite are evaluated over several orbits and the Albedo flux is plotted over the surface of the Earth.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;

model.label('orbit_thermal_loads.mph');

model.modelNode.label('Components');

out = model;
