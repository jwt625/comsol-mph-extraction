function out = model
%
% trench_gate_igbt_2d.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Semiconductor_Module/Transistors');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('semi', 'Semiconductor', 'geom1');
model.physics('semi').model('comp1');

model.study.create('std1');
model.study('std1').create('semie', 'SemiconductorEquilibrium');
model.study('std1').feature('semie').set('solnum', 'auto');
model.study('std1').feature('semie').set('notsolnum', 'auto');
model.study('std1').feature('semie').set('outputmap', {});
model.study('std1').feature('semie').set('ngenAUX', '1');
model.study('std1').feature('semie').set('goalngenAUX', '1');
model.study('std1').feature('semie').set('ngenAUX', '1');
model.study('std1').feature('semie').set('goalngenAUX', '1');
model.study('std1').feature('semie').setSolveFor('/physics/semi', true);

model.geom('geom1').lengthUnit([native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']);

model.param.set('W', '16[um]');
model.param.descr('W', 'Device width');
model.param.set('S', '1[um]');
model.param.descr('S', 'Mesa width');
model.param.set('DT', '2[um]');
model.param.descr('DT', 'Trench depth');
model.param.set('WT', '0.33[um]');
model.param.descr('WT', 'Trench width');
model.param.set('Wewin', '0.16[um]');
model.param.descr('Wewin', 'Emitter contact window');
model.param.set('Dp', '1.4[um]');
model.param.descr('Dp', 'p-base depth');
model.param.set('Dn', '0.13[um]');
model.param.descr('Dn', 'n+ emitter depth');
model.param.set('tOX', '33[nm]');
model.param.descr('tOX', 'Oxide thickness');
model.param.set('Dnb', '120[um]');
model.param.descr('Dnb', 'n-base depth');
model.param.set('Ln', '1.5[um]');
model.param.descr('Ln', 'n+ emitter length');
model.param.set('Lp', '1.5[um]');
model.param.descr('Lp', 'p+ emitter length');
model.param.set('Nab', '3.8e17[cm^-3]');
model.param.descr('Nab', 'p-base peak doping');
model.param.set('Ndb', '8.5e13[cm^-3]');
model.param.descr('Ndb', 'n-base doping');
model.param.set('Ndbf', '9e15[cm^-3]');
model.param.descr('Ndbf', 'n-buffer doping');
model.param.set('Nac', '3.7e18[cm^-3]');
model.param.descr('Nac', 'p+ collector doping');
model.param.set('Nae', '1e20[cm^-3]');
model.param.descr('Nae', 'p+ emitter doping');
model.param.set('Nde', '1e20[cm^-3]');
model.param.descr('Nde', 'n+ emitter doping');
model.param.set('tau0', '10[us]');
model.param.descr('tau0', 'Carrier lifetime');
model.param.set('tnbf', '5[um]');
model.param.descr('tnbf', 'n-buffer thickness');
model.param.set('Dsub', '10[um]');
model.param.descr('Dsub', 'p+ collector thickness');
model.param.set('t0', 'Dp+Dnb+tnbf+Dsub');
model.param.descr('t0', 'Device thickness');
model.param.set('d0', '(Ln+Lp)/2');
model.param.descr('d0', 'Out-of-plan thickness');
model.param.set('rhoCC', '1.6e-4[ohm*cm^2]');
model.param.descr('rhoCC', 'p+ substrate equivalent resistivity');
model.param.set('rhoCE', '4.7e-6[ohm*cm^2]');
model.param.descr('rhoCE', 'Emitter contact resistivity');
model.param.set('T0', '300[K]');
model.param.descr('T0', 'Lattice temperature');
model.param.set('Eg0', '1.1743[V]');
model.param.descr('Eg0', 'Band gap Shigyo');
model.param.set('Nv_', '(T0/300[K])^(3/2)*1.04e19[1/cm^3]');
model.param.descr('Nv_', 'Valence band DOS COMSOL');
model.param.set('Nc_', '(T0/300[K])^(3/2)*2.8e19[1/cm^3]');
model.param.descr('Nc_', 'Conduction band DOS COMSOL');
model.param.set('ni0', '1e10[cm^-3]');
model.param.descr('ni0', 'Intrinsic carrier concentration');
model.param.set('Nvcfac', 'sqrt(ni0^2/Nv_/Nc_/exp(-Eg0*e_const/T0/k_B_const))');
model.param.descr('Nvcfac', 'DOS factor to match ni');
model.param.set('Nv0', 'Nvcfac*Nv_');
model.param.descr('Nv0', 'Valence band DOS Shigyo');
model.param.set('Nc0', 'Nvcfac*Nc_');
model.param.descr('Nc0', 'Conduction band DOS Shigyo');
model.param.set('Nref0', '6.5e16[cm^-3]');
model.param.descr('Nref0', 'Band gap narrowing reference concentration Shigyo');
model.param('default').setShowInParamSel(false);
model.param.create('par2');
model.param('par2').set('Vc', '0[V]');
model.param('par2').descr('Vc', 'Collector voltage');
model.param('par2').set('Vg', '5[V]');
model.param('par2').descr('Vg', 'Gate voltage');

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').label('Rectangle 1 - Device outline (half cell)');
model.geom('geom1').feature('r1').set('size', {'W/2' 't0'});
model.geom('geom1').feature('r1').set('pos', {'0' '-t0'});
model.geom('geom1').feature('r1').setIndex('layername', 'Layer 1', 0);
model.geom('geom1').feature('r1').setIndex('layer', 'Dsub', 0);
model.geom('geom1').feature('r1').setIndex('layername', 'Layer 2', 1);
model.geom('geom1').feature('r1').setIndex('layer', 'tnbf', 1);
model.geom('geom1').run('r1');
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').label('Rectangle 2 - Trench');
model.geom('geom1').feature('r2').set('size', {'WT' 'DT-WT/2'});
model.geom('geom1').feature('r2').set('pos', {'S/2' '-(DT-WT/2)'});
model.geom('geom1').run('r2');
model.geom('geom1').create('c1', 'Circle');
model.geom('geom1').feature('c1').label('Circle 1 - Trench');
model.geom('geom1').feature('c1').set('r', 'WT/2');
model.geom('geom1').feature('c1').set('pos', {'S/2+WT/2' '-(DT-WT/2)'});
model.geom('geom1').run('c1');
model.geom('geom1').create('dif1', 'Difference');
model.geom('geom1').feature('dif1').label('Difference 1 - Device outline minus trench');
model.geom('geom1').feature('dif1').selection('input').set({'r1'});
model.geom('geom1').feature('dif1').selection('input2').set({'c1' 'r2'});
model.geom('geom1').run('dif1');
model.geom('geom1').create('pt1', 'Point');
model.geom('geom1').feature('pt1').label('Point 1 - Emitter contact & doping boundary');
model.geom('geom1').feature('pt1').setIndex('p', 'S/4-Wewin/1.5 S/4 S/4+Wewin/1.5', 0);
model.geom('geom1').feature('pt1').setIndex('p', '0 0 0', 1);
model.geom('geom1').run('pt1');
model.geom('geom1').create('r3', 'Rectangle');
model.geom('geom1').feature('r3').label('Rectangle 3 - Mesh help lines');
model.geom('geom1').feature('r3').set('size', {'S/2' 'Dn'});
model.geom('geom1').feature('r3').set('pos', {'0' '-Dn'});
model.geom('geom1').run('r3');
model.geom('geom1').create('r4', 'Rectangle');
model.geom('geom1').feature('r4').label('Rectangle 4 - Mesh help lines');
model.geom('geom1').feature('r4').set('size', {'30[nm]' 'DT-WT/2'});
model.geom('geom1').feature('r4').set('pos', {'S/2-30[nm]' '-(DT-WT/2)'});
model.geom('geom1').feature.duplicate('r5', 'r4');
model.geom('geom1').feature('r5').label('Rectangle 5- Mesh help lines');
model.geom('geom1').feature('r5').set('pos', {'S/2+WT' '-(DT-WT/2)'});
model.geom('geom1').feature.duplicate('c2', 'c1');
model.geom('geom1').feature('c2').label('Circle 2 - Mesh help curves');
model.geom('geom1').feature('c2').set('type', 'curve');
model.geom('geom1').feature('c2').set('r', 'WT/2+30[nm]');
model.geom('geom1').feature('c2').set('angle', 180);
model.geom('geom1').feature('c2').set('rot', 180);
model.geom('geom1').run('c2');
model.geom('geom1').create('del1', 'Delete');
model.geom('geom1').feature('del1').selection('input').set('c2', [3 4]);
model.geom('geom1').run('del1');
model.geom('geom1').create('ls1', 'LineSegment');
model.geom('geom1').feature('ls1').label('Line Segment 1 - Mesh help line');
model.geom('geom1').feature('ls1').set('specify1', 'coord');
model.geom('geom1').feature('ls1').set('coord1', {'0' '-DT*8'});
model.geom('geom1').feature('ls1').set('specify2', 'coord');
model.geom('geom1').feature('ls1').set('coord2', {'W/2' '-DT*8'});
model.geom('geom1').run('fin');
model.geom('geom1').create('mce1', 'MeshControlEdges');
model.geom('geom1').feature('mce1').selection('input').set('fin', [8 10 15 16 17 18 23 25 31 33]);
model.geom('geom1').run('mce1');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('AroraMobilityModel', 'Arora mobility model');
model.material('mat1').propertyGroup.create('PowerLawMobilityModel', 'Power law mobility model');
model.material('mat1').propertyGroup.create('Auger', 'Auger recombination');
model.material('mat1').propertyGroup.create('Direct', 'Direct recombination');
model.material('mat1').propertyGroup.create('SRH', ['Shockley' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Read' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Hall recombination']);
model.material('mat1').propertyGroup.create('FletcherMobilityModel', 'Fletcher mobility model');
model.material('mat1').propertyGroup.create('CaugheyThomasMobilityModel', ['Caughey' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Thomas mobility model']);
model.material('mat1').propertyGroup.create('SemicondMaterial', 'Semiconductor material');
model.material('mat1').propertyGroup.create('LombardiSurfaceMobilityModel', 'Lombardi surface mobility model');
model.material('mat1').propertyGroup.create('ImpactIonization', 'Impact ionization');
model.material('mat1').propertyGroup.create('SlotboomModel', 'Slotboom model');
model.material('mat1').propertyGroup.create('JainRoulstonModel', ['Jain' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Roulston model']);
model.material('mat1').propertyGroup.create('KlaassenUnifiedMobilityModel', 'Klaassen unified mobility model');
model.material('mat1').label('Si - Silicon');
model.material('mat1').propertyGroup('def').set('relpermittivity', {'11.7' '0' '0' '0' '11.7' '0' '0' '0' '11.7'});
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'131[W/(m*K)]' '0' '0' '0' '131[W/(m*K)]' '0' '0' '0' '131[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('density', '2329[kg/m^3]');
model.material('mat1').propertyGroup('def').set('heatcapacity', '700[J/(kg*K)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mun0_ref_arora', '1252[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mup0_ref_arora', '407[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mun_min_ref_arora', '88[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mup_min_ref_arora', '54.3[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('Nn0_ref_arora', '1.26e17[1/cm^3]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('Np0_ref_arora', '2.35e17[1/cm^3]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('alpha0_arora', '0.88');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta1_arora', '-0.57');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta2_arora', '-2.33');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta3_arora', '-2.33');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta4_arora', '-0.146');
model.material('mat1').propertyGroup('AroraMobilityModel').set('Tref_arora', '300[K]');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('mun0_pl', '1448[cm^2/(V*s)]');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('mup0_pl', '473[cm^2/(V*s)]');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('alphan_pl', '2.33');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('alphap_pl', '2.23');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('Tref_pl', '300[K]');
model.material('mat1').propertyGroup('Auger').set('Cn', '2.8e-31[cm^6/s]');
model.material('mat1').propertyGroup('Auger').set('Cp', '9.9e-32[cm^6/s]');
model.material('mat1').propertyGroup('Direct').set('C', '0[cm^3/s]');
model.material('mat1').propertyGroup('SRH').set('taun', '10[us]');
model.material('mat1').propertyGroup('SRH').set('taup', '10[us]');
model.material('mat1').propertyGroup('FletcherMobilityModel').set('F1_fl', '1.04e21[1/(cm^1*V*s)]');
model.material('mat1').propertyGroup('FletcherMobilityModel').set('F2_fl', '7.45e13[1/cm^2]');
model.material('mat1').propertyGroup('FletcherMobilityModel').set('Tref_fl', '300[K]');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').label(['Caughey' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Thomas mobility model']);
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('alphan0_ct', '1.11');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('alphap0_ct', '1.21');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('vn0_ct', '1e7[cm/s]');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('vp0_ct', '8.37e6[cm/s]');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betan1_ct', '0.66');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betap1_ct', '0.17');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betan2_ct', '-0.87');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betap2_ct', '-0.52');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('Tref_ct', '300[K]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Eg0', '1.12[V]');
model.material('mat1').propertyGroup('SemicondMaterial').set('chi0', '4.05[V]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Nv', '(T/300[K])^(3/2)*1.04e19[1/cm^3]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Nc', '(T/300[K])^(3/2)*2.8e19[1/cm^3]');
model.material('mat1').propertyGroup('SemicondMaterial').set('mun', '1450[cm^2/(V*s)]');
model.material('mat1').propertyGroup('SemicondMaterial').set('mup', '500[cm^2/(V*s)]');
model.material('mat1').propertyGroup('SemicondMaterial').addInput('temperature');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('deltan_ls', '5.82e14[V/s]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('deltap_ls', '2.05e14[V/s]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mun1_ls', '4.75e7[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mup1_ls', '9.93e7[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mun2_ls', '1.74e5[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mup2_ls', '8.84e5[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('alphan_ls', '0.125');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('alphap_ls', '0.0317');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('Tref_ls', '1[K]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('Eref_ls', '1[V/cm]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('Nref_ls', '1[1/cm^3]');
model.material('mat1').propertyGroup('ImpactIonization').set('an', '0.426');
model.material('mat1').propertyGroup('ImpactIonization').set('ap', '0.243');
model.material('mat1').propertyGroup('ImpactIonization').set('bn', '4.81E5[V/cm]');
model.material('mat1').propertyGroup('ImpactIonization').set('bp', '6.53E5[V/cm]');
model.material('mat1').propertyGroup('ImpactIonization').set('cnii', '3.05E-4');
model.material('mat1').propertyGroup('ImpactIonization').set('cpii', '5.35E-4');
model.material('mat1').propertyGroup('ImpactIonization').set('dn', '6.86E-4');
model.material('mat1').propertyGroup('ImpactIonization').set('dp', '5.67E-4');
model.material('mat1').propertyGroup('SlotboomModel').set('Eref_sb', '0.00692[V]');
model.material('mat1').propertyGroup('SlotboomModel').set('Nref_sb', '1.3e17[1/cm^3]');
model.material('mat1').propertyGroup('SlotboomModel').set('alpha_sb', '0.5');
model.material('mat1').propertyGroup('JainRoulstonModel').set('An_jr', '3.5e-8[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Bn_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Cn_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Ap_jr', '3.5e-8[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Bp_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Cp_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Nref_jr', '1[1/cm^3]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('alpha_jr', '0.5');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('T_ref_kl', '300[K]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_e_max_kl', '1414.0[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_h_max_kl', '470.5[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_e_min_kl', '68.5[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_h_min_kl', '44.9[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('theta_e_kl', '2.285');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('theta_h_kl', '2.247');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('alpha_e_1_kl', '0.711');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('alpha_h_1_kl', '0.719');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_e_1_kl', '9.20e16[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_h_1_kl', '2.23e17[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('c_D_kl', '0.21');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('c_A_kl', '0.50');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_D_kl', '4.0e20[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_A_kl', '7.2e20[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('f_BH_kl', '3.828');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('f_CW_kl', '2.459');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_BH_kl', '1.36e20[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('P_CW_kl', '3.97e13');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_1_kl', '0.89233');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_2_kl', '0.41372');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_3_kl', '0.19778');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_4_kl', '0.28227');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_5_kl', '0.005978');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_6_kl', '1.80618');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_7_kl', '0.72169');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_1_kl', '0.7643');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_2_kl', '2.2999');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_3_kl', '6.5502');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_4_kl', '2.3670');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_5_kl', '-0.01552');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_6_kl', '0.6478');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('m_e_kl', 'me_const');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('m_h_kl', '1.258*me_const');

model.physics('semi').prop('d').set('d', 'd0');
model.physics('semi').prop('ModelProperties').set('CarrierStatistics', 'FermiDirac');
model.physics('semi').feature('smm1').create('mmkl1', 'KlaassenUnifiedMobilityModel', 2);
model.physics('semi').feature('smm1').create('mmct1', 'CaugheyThomasMobilityModel', 2);
model.physics('semi').feature('smm1').feature('mmct1').set('mun_in_src', 'root.comp1.semi.mun_kl');
model.physics('semi').feature('smm1').feature('mmct1').set('mup_in_src', 'root.comp1.semi.mup_kl');
model.physics('semi').feature('smm1').set('minput_temperature', 'T0');
model.physics('semi').feature('smm1').set('Eg0_mat', 'userdef');
model.physics('semi').feature('smm1').set('Eg0', 'Eg0');
model.physics('semi').feature('smm1').set('Nv_mat', 'userdef');
model.physics('semi').feature('smm1').set('Nv', 'Nv0');
model.physics('semi').feature('smm1').set('Nc_mat', 'userdef');
model.physics('semi').feature('smm1').set('Nc', 'Nc0');
model.physics('semi').feature('smm1').set('mun_mat', 'root.comp1.semi.mun_ct');
model.physics('semi').feature('smm1').set('mup_mat', 'root.comp1.semi.mup_ct');
model.physics('semi').feature('smm1').set('BandGapNarrowing', 'slotboom');
model.physics('semi').feature('smm1').set('Nref_sb_mat', 'userdef');
model.physics('semi').feature('smm1').set('Nref_sb', 'Nref0');
model.physics('semi').create('adm1', 'AnalyticDopingModel', 2);
model.physics('semi').feature('adm1').label('Analytic Doping Model - n-base');
model.physics('semi').feature('adm1').selection.set([3]);
model.physics('semi').feature('adm1').set('impurityType', 'donor');
model.physics('semi').feature('adm1').set('NDc', 'Ndb');
model.physics('semi').create('adm2', 'AnalyticDopingModel', 2);
model.physics('semi').feature('adm2').label('Analytic Doping Model - n-buffer');
model.physics('semi').feature('adm2').selection.set([2]);
model.physics('semi').feature('adm2').set('impurityType', 'donor');
model.physics('semi').feature('adm2').set('NDc', 'Ndbf');
model.physics('semi').create('adm3', 'AnalyticDopingModel', 2);
model.physics('semi').feature('adm3').label('Analytic Doping Model - p+ collector');
model.physics('semi').feature('adm3').selection.set([1]);
model.physics('semi').feature('adm3').set('NAc', 'Nac');
model.physics('semi').create('gdm1', 'GeometricDopingModel', 2);
model.physics('semi').feature('gdm1').label('Geometric Doping Model - p-base');
model.physics('semi').feature('gdm1').selection.set([3]);
model.physics('semi').feature('gdm1').set('NAgen', 'Nab');
model.physics('semi').feature('gdm1').set('jd_gen', 'Dp');
model.physics('semi').feature('gdm1').set('Nb_gen', 'Ndb');
model.physics('semi').feature('gdm1').feature('gdmbs1').selection.set([7 8 9 10 13]);
model.physics('semi').create('gdm2', 'GeometricDopingModel', 2);
model.physics('semi').feature('gdm2').label('Geometric Doping Model - p+ emitter');
model.physics('semi').feature('gdm2').selection.set([3]);
model.physics('semi').feature('gdm2').set('NAgen', 'Nae');
model.physics('semi').feature('gdm2').set('jd_gen', 'Dn');
model.physics('semi').feature('gdm2').set('Nb_gen', 'Ndb');
model.physics('semi').feature('gdm2').feature('gdmbs1').selection.set([7 8]);
model.physics('semi').create('gdm3', 'GeometricDopingModel', 2);
model.physics('semi').feature('gdm3').label('Geometric Doping Model - n+ emitter');
model.physics('semi').feature('gdm3').selection.set([3]);
model.physics('semi').feature('gdm3').set('impurityType', 'donor');
model.physics('semi').feature('gdm3').set('NDgen', 'Nde');
model.physics('semi').feature('gdm3').set('jd_gen', 'Dn');
model.physics('semi').feature('gdm3').set('Nb_gen', 'Ndb');
model.physics('semi').feature('gdm3').feature('gdmbs1').selection.set([9 10]);
model.physics('semi').create('tar1', 'TrapAssistedRecombination', 2);
model.physics('semi').feature('tar1').selection.all;
model.physics('semi').feature('tar1').set('taun_mat', 'userdef');
model.physics('semi').feature('tar1').set('taun', 'tau0');
model.physics('semi').feature('tar1').set('taup_mat', 'userdef');
model.physics('semi').feature('tar1').set('taup', 'tau0');
model.physics('semi').create('mc1', 'MetalContact', 1);
model.physics('semi').feature('mc1').label('Metal Contact - Emitter');
model.physics('semi').feature('mc1').selection.set([8 9]);
model.physics('semi').feature('mc1').set('TerminalName', 'E');
model.physics('semi').feature('mc1').set('ContactResistance', true);
model.physics('semi').feature('mc1').set('rho_c', 'rhoCE');
model.physics('semi').create('mc2', 'MetalContact', 1);
model.physics('semi').feature('mc2').label('Metal Contact - Collector');
model.physics('semi').feature('mc2').selection.set([2]);
model.physics('semi').feature('mc2').set('TerminalName', 'C');
model.physics('semi').feature('mc2').set('V0', 'Vc');
model.physics('semi').feature('mc2').set('ContactResistance', true);
model.physics('semi').feature('mc2').set('rho_c', 'rhoCC');
model.physics('semi').create('gc1', 'GateContact', 1);
model.physics('semi').feature('gc1').selection.set([11 12]);
model.physics('semi').feature('gc1').set('TerminalName', 'G');
model.physics('semi').feature('gc1').set('V0', 'Vg');
model.physics('semi').feature('gc1').set('epsilon_ins', 3.9);
model.physics('semi').feature('gc1').set('d_ins', 'tOX');

model.mesh('mesh1').create('edg1', 'Edge');
model.mesh('mesh1').feature('edg1').label('Edge 1 - Metal contact');
model.mesh('mesh1').feature('edg1').selection.set([8 9]);
model.mesh('mesh1').feature('edg1').set('smoothcontrol', false);
model.mesh('mesh1').feature('edg1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('edg1').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('edg1').feature('dis1').set('elemcount', 4);
model.mesh('mesh1').feature('edg1').feature('dis1').set('elemratio', 4);
model.mesh('mesh1').feature('edg1').feature('dis1').set('symmetric', true);
model.mesh('mesh1').feature('size').set('custom', true);
model.mesh('mesh1').feature('size').set('hmax', 9.1);
model.mesh('mesh1').feature('size').set('hmin', 0.04);
model.mesh('mesh1').feature('size').set('hgrad', 1.25);
model.mesh('mesh1').feature('size').set('hcurve', 0.35);
model.mesh('mesh1').feature('size').set('hnarrow', 1.1);
model.mesh('mesh1').create('edg2', 'Edge');
model.mesh('mesh1').feature('edg2').label('Edge 2 - Emitter surface');
model.mesh('mesh1').feature('edg2').selection.set([7]);
model.mesh('mesh1').feature('edg2').set('smoothcontrol', false);
model.mesh('mesh1').feature('edg2').create('dis1', 'Distribution');
model.mesh('mesh1').feature('edg2').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('edg2').feature('dis1').set('elemcount', 3);
model.mesh('mesh1').feature('edg2').feature('dis1').set('elemratio', 6);
model.mesh('mesh1').feature('edg2').feature('dis1').set('reverse', true);
model.mesh('mesh1').create('edg3', 'Edge');
model.mesh('mesh1').feature('edg3').label('Edge 3 - Emitter surface');
model.mesh('mesh1').feature('edg3').selection.set([10]);
model.mesh('mesh1').feature('edg3').set('smoothcontrol', false);
model.mesh('mesh1').feature('edg3').create('dis1', 'Distribution');
model.mesh('mesh1').feature('edg3').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('edg3').feature('dis1').set('elemratio', 3);
model.mesh('mesh1').feature('edg3').feature('dis1').set('symmetric', true);
model.mesh('mesh1').create('cpe1', 'CopyEdge');
model.mesh('mesh1').feature('cpe1').selection('source').geom(1);
model.mesh('mesh1').feature('cpe1').selection('destination').geom(1);
model.mesh('mesh1').feature('cpe1').selection('source').set([7 8 9 10]);
model.mesh('mesh1').feature('cpe1').selection('destination').set([26]);
model.mesh('mesh1').feature('cpe1').set('smoothcontrol', false);
model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').label('Mapped 1 - Emitter depth');
model.mesh('mesh1').feature('map1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('map1').selection.set([9]);
model.mesh('mesh1').feature('map1').set('smoothcontrol', false);
model.mesh('mesh1').feature('map1').set('adjustedgdistr', true);
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([18 29]);
model.mesh('mesh1').feature('map1').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis1').set('elemratio', 3);
model.mesh('mesh1').feature('map1').feature('dis1').set('reverse', true);
model.mesh('mesh1').run('map1');
model.mesh('mesh1').create('map2', 'Map');
model.mesh('mesh1').feature('map2').label('Mapped 2 - Gate depth');
model.mesh('mesh1').feature('map2').selection.geom('geom1', 2);
model.mesh('mesh1').feature('map2').selection.set([5 6 7 8]);
model.mesh('mesh1').feature('map2').set('smoothcontrol', false);
model.mesh('mesh1').feature('map2').set('adjustedgdistr', true);
model.mesh('mesh1').feature('map2').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map2').feature('dis1').label('Distribution 1 - Left depth');
model.mesh('mesh1').feature('map2').feature('dis1').selection.set([19 28 30]);
model.mesh('mesh1').feature('map2').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('map2').feature('dis1').set('elemratio', 10);
model.mesh('mesh1').feature('map2').feature('dis1').set('reverse', true);
model.mesh('mesh1').feature('map2').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map2').feature('dis2').label('Distribution 2 - Right depth');
model.mesh('mesh1').feature('map2').feature('dis2').selection.set([13 31]);
model.mesh('mesh1').feature('map2').feature('dis2').set('type', 'predefined');
model.mesh('mesh1').feature('map2').feature('dis2').set('elemratio', 10);
model.mesh('mesh1').feature('map2').create('dis3', 'Distribution');
model.mesh('mesh1').feature('map2').feature('dis3').label('Distribution 3 - Left surface');
model.mesh('mesh1').feature('map2').feature('dis3').selection.set([20 27]);
model.mesh('mesh1').feature('map2').feature('dis3').set('type', 'predefined');
model.mesh('mesh1').feature('map2').feature('dis3').set('elemcount', 20);
model.mesh('mesh1').feature('map2').feature('dis3').set('elemratio', 3);
model.mesh('mesh1').feature('map2').feature('dis3').set('symmetric', true);
model.mesh('mesh1').feature('map2').create('dis4', 'Distribution');
model.mesh('mesh1').feature('map2').feature('dis4').label('Distribution 4 - Right surface');
model.mesh('mesh1').feature('map2').feature('dis4').selection.set([22 32]);
model.mesh('mesh1').feature('map2').feature('dis4').set('type', 'predefined');
model.mesh('mesh1').feature('map2').feature('dis4').set('elemcount', 6);
model.mesh('mesh1').feature('map2').feature('dis4').set('elemratio', 4);
model.mesh('mesh1').feature('map2').create('dis5', 'Distribution');
model.mesh('mesh1').feature('map2').feature('dis5').label('Distribution 5 - Bottom surface');
model.mesh('mesh1').feature('map2').feature('dis5').selection.set([12 21 33 34]);
model.mesh('mesh1').feature('map2').feature('dis5').set('type', 'predefined');
model.mesh('mesh1').feature('map2').feature('dis5').set('elemcount', 8);
model.mesh('mesh1').run('map2');
model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('ftri1').selection.set([4]);
model.mesh('mesh1').feature('ftri1').set('smoothcontrol', false);
model.mesh('mesh1').run('ftri1');
model.mesh('mesh1').create('cpe2', 'CopyEdge');
model.mesh('mesh1').feature('cpe2').selection('source').set([25]);
model.mesh('mesh1').feature('cpe2').selection('destination').set([2 4 6]);
model.mesh('mesh1').feature('cpe2').set('smoothcontrol', false);
model.mesh('mesh1').create('map3', 'Map');
model.mesh('mesh1').feature('map3').set('smoothcontrol', false);
model.mesh('mesh1').feature('map3').set('adjustedgdistr', true);
model.mesh('mesh1').feature('map3').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map3').feature('dis1').label('Distribution 1 - n-base');
model.mesh('mesh1').feature('map3').feature('dis1').selection.set([5 24]);
model.mesh('mesh1').feature('map3').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('map3').feature('dis1').set('elemcount', 10);
model.mesh('mesh1').feature('map3').feature('dis1').set('elemratio', 5);
model.mesh('mesh1').feature('map3').feature('dis1').set('symmetric', true);
model.mesh('mesh1').feature('map3').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map3').feature('dis2').label('Distribution 2 - n-buffer');
model.mesh('mesh1').feature('map3').feature('dis2').selection.set([3 15]);
model.mesh('mesh1').feature('map3').feature('dis2').set('type', 'predefined');
model.mesh('mesh1').feature('map3').feature('dis2').set('elemratio', 10);
model.mesh('mesh1').feature('map3').create('dis3', 'Distribution');
model.mesh('mesh1').feature('map3').feature('dis3').label('Distribution 3 - p+ collector');
model.mesh('mesh1').feature('map3').feature('dis3').selection.set([1 14]);
model.mesh('mesh1').feature('map3').feature('dis3').set('type', 'predefined');
model.mesh('mesh1').feature('map3').feature('dis3').set('elemcount', 3);
model.mesh('mesh1').feature('map3').feature('dis3').set('elemratio', 30);
model.mesh('mesh1').feature('map3').feature('dis3').set('reverse', true);
model.mesh('mesh1').run;

model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 'Vc', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'V', 0);
model.study('std1').feature('stat').setIndex('pname', 'Vc', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'V', 0);
model.study('std1').feature('stat').setIndex('plistarr', 'range(0,0.1,1.2) range(1.5,0.5,5)', 0);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'semie');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'semie');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 1.0E-6);
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', false);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').feature('aDef').set('assemtol', 0);
model.sol('sol1').feature('s1').create('se1', 'Segregated');
model.sol('sol1').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_V' 'comp1_Ne' 'comp1_Ph' 'comp1_semi_V_dae'});
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('usesubminsteprecovery', 'auto');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subtermauto', 'tol');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subdtech', 'auto');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subrstep', 10);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subntolfact', 1);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subinitstep', 1);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subminstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('segvarspec', 'all');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subminsteprecovery', 0.75);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('maxsubiter', 50);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol1').feature('s1').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol1').feature('s1').feature('d1').set('ooc', 'off');
model.sol('sol1').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_semi_smm1_mmct1_Epn' 'comp1_semi_smm1_mmct1_Epp'});
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subtermconst', 'iter');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subdamp', 1);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subjtech', 'onevery');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subdtech', 'const');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subiter', 1);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('segvarspec', 'all');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('se1').set('segterm', 'iter');
model.sol('sol1').feature('s1').feature('se1').set('segiter', 3);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'stat');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('initsoluse', 'sol2');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'stat');
model.sol('sol1').create('s2', 'Stationary');
model.sol('sol1').feature('s2').set('stol', 1.0E-6);
model.sol('sol1').feature('s2').create('p1', 'Parametric');
model.sol('sol1').feature('s2').feature.remove('pDef');
model.sol('sol1').feature('s2').feature('p1').set('porder', 'constant');
model.sol('sol1').feature('s2').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s2').set('control', 'stat');
model.sol('sol1').feature('s2').feature('aDef').set('complexfun', false);
model.sol('sol1').feature('s2').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s2').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s2').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s2').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s2').feature('aDef').set('assemtol', 0);
model.sol('sol1').feature('s2').create('se1', 'Segregated');
model.sol('sol1').feature('s2').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s2').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('segvar', {'comp1_V' 'comp1_Ne' 'comp1_Ph' 'comp1_semi_n_bnd' 'comp1_semi_p_bnd' 'comp1_semi_V_dae'});
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('usesubminsteprecovery', 'auto');
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('subtermauto', 'tol');
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('subdtech', 'auto');
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('subrstep', 10);
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('subntolfact', 1);
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('subinitstep', 1);
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('subminstep', 1.0E-4);
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('segvarspec', 'all');
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('subminsteprecovery', 0.75);
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('maxsubiter', 50);
model.sol('sol1').feature('s2').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('d1').set('linsolver', 'mumps');
model.sol('sol1').feature('s2').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol1').feature('s2').feature('d1').set('ooc', 'off');
model.sol('sol1').feature('s2').feature('d1').set('errorchk', 'off');
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol1').feature('s2').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('segvar', {'comp1_semi_smm1_mmct1_Epn' 'comp1_semi_smm1_mmct1_Epp'});
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('subtermconst', 'iter');
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('subdamp', 1);
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('subjtech', 'onevery');
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('subdtech', 'const');
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('subiter', 1);
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('segvarspec', 'all');
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('linsolver', 'd1');
model.sol('sol1').feature('s2').feature('se1').set('segterm', 'iter');
model.sol('sol1').feature('s2').feature('se1').set('segiter', 3);
model.sol('sol1').feature('s2').feature.remove('fcDef');
model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol1').attach('std1');
model.sol('sol1').runFromTo('st1', 'v1');

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').label('Electron Concentration (semi)');
model.result('pg1').set('showlegendsmaxmin', true);
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 1, 0);
model.result('pg1').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond2/pg1');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('expr', 'semi.N');
model.result('pg1').feature('surf1').set('unit', '1/cm^3');
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').feature('surf1').set('colorscalemode', 'logarithmic');
model.result('pg1').feature('surf1').set('resolution', 'norefine');
model.result('pg1').feature('surf1').set('smooth', 'internal');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').label('Hole Concentration (semi)');
model.result('pg2').set('showlegendsmaxmin', true);
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 1, 0);
model.result('pg2').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond2/pg2');
model.result('pg2').feature.create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('expr', 'semi.P');
model.result('pg2').feature('surf1').set('unit', '1/cm^3');
model.result('pg2').feature('surf1').set('colortable', 'Prism');
model.result('pg2').feature('surf1').set('colorscalemode', 'logarithmic');
model.result('pg2').feature('surf1').set('resolution', 'norefine');
model.result('pg2').feature('surf1').set('smooth', 'internal');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('data', 'parent');
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').label('Electric Potential (semi)');
model.result('pg3').set('data', 'dset1');
model.result('pg3').setIndex('looplevel', 1, 0);
model.result('pg3').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond2/pg3');
model.result('pg3').feature.create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('expr', 'V');
model.result('pg3').feature('surf1').set('resolution', 'norefine');
model.result('pg3').feature('surf1').set('smooth', 'internal');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('data', 'parent');
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').set('data', 'dset1');
model.result('pg4').create('surf2', 'Surface');
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf2').set('expr', 'semi.Nnetdop');
model.result('pg4').feature('surf2').set('unit', '1/cm^3');
model.result('pg4').feature('surf2').set('coloring', 'gradient');
model.result('pg4').feature('surf2').set('colorscalemode', 'logarithmic');
model.result('pg4').feature('surf2').set('topcolor', 'red');
model.result('pg4').feature('surf2').set('bottomcolor', 'custom');
model.result('pg4').feature('surf2').set('custombottomcolor', [1 0.8 0.8]);
model.result('pg4').feature('surf2').set('smooth', 'internal');
model.result('pg4').feature('surf2').set('showsolutionparams', 'on');
model.result('pg4').feature('surf2').set('data', 'parent');
model.result('pg4').feature('surf2').set('titletype', 'none');
model.result('pg4').feature('surf2').feature.create('filt1', 'Filter');
model.result('pg4').feature('surf2').feature('filt1').set('expr', 'semi.Na-semi.Nd > 1[1/cm^3]');
model.result('pg4').feature('surf2').feature('filt1').set('useder', true);
model.result('pg4').feature('surf1').set('expr', 'semi.Nnetdop');
model.result('pg4').feature('surf1').set('unit', '1/cm^3');
model.result('pg4').feature('surf1').set('coloring', 'gradient');
model.result('pg4').feature('surf1').set('colorscalemode', 'logarithmic');
model.result('pg4').feature('surf1').set('topcolor', 'blue');
model.result('pg4').feature('surf1').set('bottomcolor', 'custom');
model.result('pg4').feature('surf1').set('custombottomcolor', [0.8 0.8 1]);
model.result('pg4').feature('surf1').set('smooth', 'internal');
model.result('pg4').feature('surf1').set('showsolutionparams', 'on');
model.result('pg4').feature('surf1').set('data', 'parent');
model.result('pg4').feature('surf1').set('titletype', 'none');
model.result('pg4').feature('surf1').feature.create('filt1', 'Filter');
model.result('pg4').feature('surf1').feature('filt1').set('expr', 'semi.Nd-semi.Na > 1[1/cm^3]');
model.result('pg4').feature('surf1').feature('filt1').set('useder', true);
model.result('pg4').set('titletype', 'manual');
model.result('pg4').set('title', 'Net Dopant Concentration \vert N<sub>d</sub> - N<sub>a</sub>\vert: P-type (Red), N-type (Blue)');
model.result('pg4').set('showlegendsmaxmin', true);
model.result('pg4').set('showlegendsunit', true);
model.result('pg4').set('legendpos', 'alternating');
model.result('pg4').feature('surf2').label('P-type');
model.result('pg4').feature('surf1').label('N-type');
model.result('pg4').label('Net Dopant Concentration (semi)');
model.result('pg1').run;

model.sol('sol1').feature('v2').set('scalemethod', 'init');
model.sol('sol1').feature('v2').feature('comp1_semi_V_dae').set('scalemethod', 'manual');
model.sol('sol1').runAll;

model.result('pg1').run;
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').label('J-V (log) - Fig.4(a)');
model.result('pg5').set('axislimits', true);
model.result('pg5').set('xmin', 0);
model.result('pg5').set('xmax', 5);
model.result('pg5').set('ymin', 10);
model.result('pg5').set('ymax', 3000);
model.result('pg5').set('ylog', true);
model.result('pg5').set('legendpos', 'lowerright');
model.result('pg5').create('glob1', 'Global');
model.result('pg5').feature('glob1').set('markerpos', 'datapoints');
model.result('pg5').feature('glob1').set('linewidth', 'preference');
model.result('pg5').feature('glob1').label('Global 1 - 2D');
model.result('pg5').feature('glob1').setIndex('expr', 'semi.J0_C', 0);
model.result('pg5').feature('glob1').setIndex('unit', 'A/cm^2', 0);
model.result('pg5').feature('glob1').setIndex('descr', '2D', 0);
model.result('pg5').run;
model.result('pg5').run;
model.result.duplicate('pg6', 'pg5');
model.result('pg6').run;
model.result('pg6').label('J-V (linear) - Fig.4(b)');
model.result('pg6').set('xmax', 3);
model.result('pg6').set('ymin', -20);
model.result('pg6').set('ymax', 700);
model.result('pg6').set('ylog', false);
model.result('pg6').run;
model.result('pg1').run;
model.result('pg1').label('Electron Concentration & Current Streamlines');

model.view('view1').axis.set('xmin', -0.1);
model.view('view1').axis.set('xmax', 0.6);
model.view('view1').axis.set('ymin', -0.8);
model.view('view1').axis.set('ymax', 0.05);

model.result('pg1').run;
model.result('pg1').create('str1', 'Streamline');
model.result('pg1').feature('str1').label('Streamline 1 - Electron current');
model.result('pg1').feature('str1').set('expr', {'semi.JnX' 'semi.JnY'});
model.result('pg1').feature('str1').set('descr', 'Electron current density');
model.result('pg1').feature('str1').set('selnumber', 10);
model.result('pg1').feature('str1').selection.set([9]);
model.result('pg1').run;
model.result('pg1').create('str2', 'Streamline');
model.result('pg1').feature('str2').label('Streamline 2 - Hole current');
model.result('pg1').feature('str2').set('expr', {'semi.JpX' 'semi.JpY'});
model.result('pg1').feature('str2').set('descr', 'Hole current density');
model.result('pg1').feature('str2').set('selnumber', 10);
model.result('pg1').feature('str2').selection.set([8]);
model.result('pg1').feature('str2').set('color', 'white');
model.result('pg1').run;

model.title('Trench-Gate IGBT 2D');

model.description(['In this first half of a two-part example, a 2D model of a trench-gate IGBT is built, which will be extended to 3D in the second half. In general, it is the most efficient to start with a 2D model to make sure everything works as expected, before extending it to 3D. The Caughey' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Thomas mobility model is combined with the Klaassen unified mobility model to account for velocity saturation and phonon, impurity, and carrier-carrier scattering. The contact resistance option of metal contact boundary conditions is used to implement the mixed-mode simulation with parasitic resistance at the collector and emitter as mentioned in the reference paper. The computed collector current density as a function of the collector voltage agrees reasonably well with the published result.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('trench_gate_igbt_2d.mph');

model.modelNode.label('Components');

out = model;
