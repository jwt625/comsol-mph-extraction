function out = model
%
% argon_gec_icp.m
%
% Model exported on May 26 2025, 21:31 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Plasma_Module/Inductively_Coupled_Plasmas');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('plas', 'ColdPlasma', 'geom1');
model.physics('plas').model('comp1');
model.physics.create('mf', 'InductionCurrents', 'geom1');
model.physics('mf').model('comp1');
model.physics('mf').prop('ShapeProperty').set('order_magneticvectorpotential', '1');
model.physics('mf').create('alf1', 'AmperesLawFluid');
model.physics('mf').feature('alf1').selection.all;

model.multiphysics.create('pcc1', 'PlasmaConductivityMultiphysicsCoupling', 'geom1', 2);
model.multiphysics('pcc1').set('elm_physics', 'mf');
model.multiphysics('pcc1').set('plas_physics', 'plas');
model.multiphysics.create('ehs1', 'ElectronHeatSourceMultiphysicsCoupling', 'geom1', 2);
model.multiphysics('ehs1').set('elm_physics', 'mf');
model.multiphysics('ehs1').set('plas_physics', 'plas');

model.study.create('std1');
model.study('std1').create('ftrans', 'FrequencyTransient');
model.study('std1').feature('ftrans').set('initialtime', '0');
model.study('std1').feature('ftrans').set('freq', '1000');
model.study('std1').feature('ftrans').set('solnum', 'auto');
model.study('std1').feature('ftrans').set('notsolnum', 'auto');
model.study('std1').feature('ftrans').set('outputmap', {});
model.study('std1').feature('ftrans').setSolveFor('/physics/plas', true);
model.study('std1').feature('ftrans').setSolveFor('/physics/mf', true);
model.study('std1').feature('ftrans').setSolveFor('/multiphysics/pcc1', true);
model.study('std1').feature('ftrans').setSolveFor('/multiphysics/ehs1', true);

model.geom('geom1').insertFile('argon_gec_icp_geom_sequence.mph', 'geom1');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');

model.geom('geom1').run;

model.selection('sel1').label('Walls');
model.selection('sel1').geom(1);
model.selection('sel1').set([6 8 35 36 37 38 44 45 51 52 53 54 55 56]);
model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').label('Coils');
model.selection('sel2').set([6 8 9 10 11]);
model.selection.create('sel3', 'Explicit');
model.selection('sel3').model('comp1');
model.selection('sel3').label('Coil Boundaries');
model.selection('sel3').set([6 8 9 10 11]);
model.selection('sel3').geom('geom1', 2, 1, {'exterior'});
model.selection('sel3').set([6 8 9 10 11]);

model.param.set('Psp', '1500[W]');
model.param.descr('Psp', 'Power input');
model.param.set('mueN', '4E24[1/(m*V*s)]');
model.param.descr('mueN', 'Reduced electron mobility');
model.param.set('T0', '300[K]');
model.param.descr('T0', 'Gas temperature');
model.param.set('p0', '0.02[torr]');
model.param.descr('p0', 'Gas pressure');

model.physics('plas').selection.set([3]);
model.physics('plas').create('xsec1', 'CrossSectionImport', -1);
model.physics('plas').feature('xsec1').set('Filepath', 'Ar_xsecs.txt');
model.physics('plas').feature('xsec1').runCommand('importData');
model.physics('plas').prop('ElectronProperties').set('ReducedProps', true);
model.physics('plas').create('rxn1', 'Reaction', 2);
model.physics('plas').feature('rxn1').set('formula', 'Ars+Ars=>e+Ar+Ar+');
model.physics('plas').feature('rxn1').set('kf', '3.734E8');
model.physics('plas').create('rxn2', 'Reaction', 2);
model.physics('plas').feature('rxn2').set('formula', 'Ars+Ar=>Ar+Ar');
model.physics('plas').feature('rxn2').set('kf', 1807);
model.physics('plas').feature('Ar').set('FromMassConstraint', true);
model.physics('plas').feature('Ar_1p').set('InitIon', true);
model.physics('plas').feature('init1').set('neinit', '1E15');
model.physics('plas').feature('init1').set('ebarinit', 5);
model.physics('mf').selection.set([3 4 5 6 8 9 10 11 12]);
model.physics('mf').create('coil1', 'Coil', 2);
model.physics('mf').feature('coil1').selection.named('sel2');
model.physics('mf').feature('coil1').set('CoilExcitation', 'Power');
model.physics('mf').feature('coil1').set('coilGroup', true);
model.physics('mf').feature('coil1').set('PCoil', 'Psp');
model.physics('plas').feature('pes1').set('T', 'T0');
model.physics('plas').feature('pes1').set('pA', 'p0');
model.physics('plas').feature('pes1').set('muN', {'mueN' '0' '0' '0' 'mueN' '0' '0' '0' 'mueN'});

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').selection.named('sel2');
model.material('mat1').propertyGroup('def').set('electricconductivity', {'6e7'});
model.material('mat1').propertyGroup('def').set('relpermeability', {'1'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1'});
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').selection.set([5]);
model.material('mat2').propertyGroup('def').set('relpermeability', {'1'});
model.material('mat2').propertyGroup('def').set('electricconductivity', {'0'});
model.material('mat2').propertyGroup('def').set('relpermittivity', {'1'});
model.material.create('mat3', 'Common', 'comp1');
model.material('mat3').selection.set([4 12]);
model.material('mat3').propertyGroup('def').set('relpermeability', {'1'});
model.material('mat3').propertyGroup('def').set('electricconductivity', {'0'});
model.material('mat3').propertyGroup('def').set('relpermittivity', {'4.2'});

model.physics('plas').create('sr1', 'SurfaceReaction', 1);
model.physics('plas').feature('sr1').set('formula', 'Ars=>Ar');
model.physics('plas').feature('sr1').selection.named('sel1');
model.physics('plas').create('sr2', 'SurfaceReaction', 1);
model.physics('plas').feature('sr2').set('formula', 'Ar+=>Ar');
model.physics('plas').feature('sr2').selection.named('sel1');
model.physics('plas').create('wall1', 'WallDriftDiffusion', 1);
model.physics('plas').feature('wall1').set('re', 0.2);
model.physics('plas').feature('wall1').selection.named('sel1');
model.physics('plas').create('gnd1', 'Ground', 1);
model.physics('plas').feature('gnd1').selection.named('sel1');

model.mesh('mesh1').autoMeshSize(3);
model.mesh('mesh1').create('edg1', 'Edge');
model.mesh('mesh1').feature('edg1').selection.set([6 8 44 45 54]);
model.mesh('mesh1').feature('edg1').create('size1', 'Size');
model.mesh('mesh1').feature('edg1').feature('size1').selection.geom('geom1');
model.mesh('mesh1').feature('edg1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('edg1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('edg1').feature('size1').set('hmax', '1E-3');
model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('ftri1').selection.set([3]);
model.mesh('mesh1').feature('ftri1').create('size1', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size1').set('hauto', 2);
model.mesh('mesh1').create('bl1', 'BndLayer');
model.mesh('mesh1').feature('bl1').create('blp', 'BndLayerProp');
model.mesh('mesh1').feature('bl1').selection.geom(2);
model.mesh('mesh1').feature('bl1').selection.set([]);
model.mesh('mesh1').feature('bl1').selection.allGeom;
model.mesh('mesh1').feature('bl1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('bl1').selection.set([3]);
model.mesh('mesh1').feature('bl1').feature('blp').selection.named('sel1');
model.mesh('mesh1').feature('bl1').feature('blp').set('blnlayers', 5);
model.mesh('mesh1').feature('bl1').feature('blp').set('blstretch', 1.4);
model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('map1').selection.named('sel2');
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.named('sel3');
model.mesh('mesh1').feature('map1').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis1').set('elemcount', 25);
model.mesh('mesh1').feature('map1').feature('dis1').set('elemratio', 20);
model.mesh('mesh1').feature('map1').feature('dis1').set('growthrate', 'exponential');
model.mesh('mesh1').feature('map1').feature('dis1').set('symmetric', true);
model.mesh('mesh1').create('ftri2', 'FreeTri');
model.mesh('mesh1').run;

model.study('std1').feature('ftrans').set('tlist', '0 10^{range(-8,5/20,-3)}');
model.study('std1').feature('ftrans').set('freq', '13.56E6');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'ftrans');
model.sol('sol1').feature('st1').set('splitcomplex', 'on');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'ftrans');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', '0 10^{range(-8,5/20,-3)}');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'manual');
model.sol('sol1').feature('t1').set('atolglobalmethod', 'unscaled');
model.sol('sol1').feature('t1').set('atolglobal', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'manual');
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('estrat', 'exclude');
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('initialstepbdfactive', true);
model.sol('sol1').feature('t1').set('initialstepbdf', '(1.0E-13)[s]');
model.sol('sol1').feature('t1').set('control', 'ftrans');
model.sol('sol1').feature('t1').feature('aDef').set('matherr', false);
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'onevery');
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'onevery');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 22, 0);
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'plas.ne'});
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 22, 0);
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'plas.Te'});
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').set('data', 'dset1');
model.result('pg3').setIndex('looplevel', 22, 0);
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', {'V'});
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg2').feature('surf1').set('colortable', 'Prism');
model.result('pg3').feature('surf1').set('colortable', 'Dipole');
model.result('pg1').label('Electron Density (plas)');
model.result('pg2').label('Electron Temperature (plas)');
model.result('pg3').label('Electric Potential (plas)');
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').label('Magnetic Flux Density Norm (mf)');
model.result('pg4').set('dataisaxisym', 'off');
model.result('pg4').set('frametype', 'spatial');
model.result('pg4').set('showlegendsmaxmin', true);
model.result('pg4').set('data', 'dset1');
model.result('pg4').setIndex('looplevel', 22, 0);
model.result('pg4').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom6/pdef1/pcond2/pcond2/pg1');
model.result('pg4').feature.create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('showsolutionparams', 'on');
model.result('pg4').feature('surf1').set('solutionparams', 'parent');
model.result('pg4').feature('surf1').set('expr', 'mf.normB');
model.result('pg4').feature('surf1').set('colortabletrans', 'nonlinear');
model.result('pg4').feature('surf1').set('colorcalibration', -0.8);
model.result('pg4').feature('surf1').set('showsolutionparams', 'on');
model.result('pg4').feature('surf1').set('data', 'parent');
model.result('pg4').feature.create('str1', 'Streamline');
model.result('pg4').feature('str1').set('showsolutionparams', 'on');
model.result('pg4').feature('str1').set('solutionparams', 'parent');
model.result('pg4').feature('str1').set('expr', {'mf.Br' 'mf.Bz'});
model.result('pg4').feature('str1').set('titletype', 'none');
model.result('pg4').feature('str1').set('posmethod', 'uniform');
model.result('pg4').feature('str1').set('udist', 0.03);
model.result('pg4').feature('str1').set('maxlen', 0.4);
model.result('pg4').feature('str1').set('maxtime', Inf);
model.result('pg4').feature('str1').set('inheritcolor', false);
model.result('pg4').feature('str1').set('showsolutionparams', 'on');
model.result('pg4').feature('str1').set('maxtime', Inf);
model.result('pg4').feature('str1').set('showsolutionparams', 'on');
model.result('pg4').feature('str1').set('maxtime', Inf);
model.result('pg4').feature('str1').set('showsolutionparams', 'on');
model.result('pg4').feature('str1').set('maxtime', Inf);
model.result('pg4').feature('str1').set('showsolutionparams', 'on');
model.result('pg4').feature('str1').set('maxtime', Inf);
model.result('pg4').feature('str1').set('data', 'parent');
model.result('pg4').feature('str1').selection.geom('geom1', 1);
model.result('pg4').feature('str1').selection.set([5 6 7 8 9 10 11 12 13 14 15 16 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56]);
model.result('pg4').feature('str1').set('inheritplot', 'surf1');
model.result('pg4').feature('str1').feature.create('col1', 'Color');
model.result('pg4').feature('str1').feature('col1').set('expr', 'mf.normB');
model.result('pg4').feature('str1').feature('col1').set('colortable', 'PrismDark');
model.result('pg4').feature('str1').feature('col1').set('colorlegend', false);
model.result('pg4').feature('str1').feature('col1').set('colortabletrans', 'nonlinear');
model.result('pg4').feature('str1').feature('col1').set('colorcalibration', -0.8);
model.result('pg4').feature('str1').feature.create('filt1', 'Filter');
model.result('pg4').feature('str1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result('pg4').feature.create('con1', 'Contour');
model.result('pg4').feature('con1').set('showsolutionparams', 'on');
model.result('pg4').feature('con1').set('solutionparams', 'parent');
model.result('pg4').feature('con1').set('expr', 'r*mf.Aphi');
model.result('pg4').feature('con1').set('titletype', 'none');
model.result('pg4').feature('con1').set('number', 10);
model.result('pg4').feature('con1').set('levelrounding', false);
model.result('pg4').feature('con1').set('coloring', 'uniform');
model.result('pg4').feature('con1').set('colorlegend', false);
model.result('pg4').feature('con1').set('color', 'custom');
model.result('pg4').feature('con1').set('customcolor', [0.3764705955982208 0.3764705955982208 0.3764705955982208]);
model.result('pg4').feature('con1').set('resolution', 'fine');
model.result('pg4').feature('con1').set('inheritcolor', false);
model.result('pg4').feature('con1').set('showsolutionparams', 'on');
model.result('pg4').feature('con1').set('data', 'parent');
model.result('pg4').feature('con1').set('inheritplot', 'surf1');
model.result('pg4').feature('con1').feature.create('filt1', 'Filter');
model.result('pg4').feature('con1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result.dataset.create('rev1', 'Revolve2D');
model.result.dataset('rev1').set('data', 'none');
model.result.dataset('rev1').set('startangle', -90);
model.result.dataset('rev1').set('revangle', 225);
model.result.dataset('rev1').set('data', 'dset1');
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').label('Magnetic Flux Density Norm, Revolved Geometry (mf)');
model.result('pg5').set('frametype', 'spatial');
model.result('pg5').set('showlegendsmaxmin', true);
model.result('pg5').set('data', 'rev1');
model.result('pg5').setIndex('looplevel', 22, 0);
model.result('pg5').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom6/pdef1/pcond2/pcond3/pg1');
model.result('pg5').feature.create('vol1', 'Volume');
model.result('pg5').feature('vol1').set('showsolutionparams', 'on');
model.result('pg5').feature('vol1').set('solutionparams', 'parent');
model.result('pg5').feature('vol1').set('expr', 'mf.normB');
model.result('pg5').feature('vol1').set('colortabletrans', 'nonlinear');
model.result('pg5').feature('vol1').set('colorcalibration', -0.8);
model.result('pg5').feature('vol1').set('showsolutionparams', 'on');
model.result('pg5').feature('vol1').set('data', 'parent');
model.result('pg5').feature.create('con1', 'Contour');
model.result('pg5').feature('con1').set('showsolutionparams', 'on');
model.result('pg5').feature('con1').set('solutionparams', 'parent');
model.result('pg5').feature('con1').set('expr', 'r*mf.Aphi');
model.result('pg5').feature('con1').set('titletype', 'none');
model.result('pg5').feature('con1').set('number', 10);
model.result('pg5').feature('con1').set('levelrounding', false);
model.result('pg5').feature('con1').set('coloring', 'uniform');
model.result('pg5').feature('con1').set('colorlegend', false);
model.result('pg5').feature('con1').set('color', 'custom');
model.result('pg5').feature('con1').set('customcolor', [0.3764705955982208 0.3764705955982208 0.3764705955982208]);
model.result('pg5').feature('con1').set('resolution', 'fine');
model.result('pg5').feature('con1').set('inheritcolor', false);
model.result('pg5').feature('con1').set('showsolutionparams', 'on');
model.result('pg5').feature('con1').set('data', 'parent');
model.result('pg5').feature('con1').set('inheritplot', 'vol1');
model.result('pg5').feature('con1').feature.create('filt1', 'Filter');
model.result('pg5').feature('con1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result('pg5').feature('con1').feature('filt1').set('shownodespec', 'on');
model.result('pg1').run;
model.result('pg2').run;
model.result('pg3').run;
model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').run;
model.result('pg6').label('Coil Resistance');
model.result('pg6').set('xlabelactive', true);
model.result('pg6').set('xlabel', 'Time (s)');
model.result('pg6').set('ylabelactive', true);
model.result('pg6').set('ylabel', 'Coil resistance (Ohm)');
model.result('pg6').create('glob1', 'Global');
model.result('pg6').feature('glob1').set('markerpos', 'datapoints');
model.result('pg6').feature('glob1').set('linewidth', 'preference');
model.result('pg6').feature('glob1').setIndex('expr', 'mf.RCoil_1', 0);
model.result('pg6').feature('glob1').setIndex('unit', ['ohm' ], 0);
model.result('pg6').feature('glob1').setIndex('descr', 'Coil resistance', 0);
model.result('pg6').set('xlog', true);
model.result('pg6').run;
model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').run;
model.result('pg7').label('Coil Power');
model.result('pg7').set('xlabelactive', true);
model.result('pg7').set('xlabel', 'Time (s)');
model.result('pg7').set('ylabelactive', true);
model.result('pg7').set('ylabel', 'Power (W)');
model.result('pg7').create('glob1', 'Global');
model.result('pg7').feature('glob1').set('markerpos', 'datapoints');
model.result('pg7').feature('glob1').set('linewidth', 'preference');
model.result('pg7').feature('glob1').setIndex('expr', 'mf.PCoil_1', 0);
model.result('pg7').feature('glob1').setIndex('unit', 'W', 0);
model.result('pg7').feature('glob1').setIndex('descr', 'Coil power', 0);
model.result('pg7').set('xlog', true);
model.result('pg7').run;
model.result.create('pg8', 'PlotGroup2D');
model.result('pg8').run;
model.result('pg8').label('Ion Number Density');
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').feature('surf1').set('expr', 'plas.n_wAr_1p');
model.result('pg8').feature('surf1').set('descr', 'Number density');
model.result('pg8').run;
model.result('pg8').run;
model.result.duplicate('pg9', 'pg8');
model.result('pg9').run;
model.result('pg9').label('High Frequency Electric Field');
model.result('pg9').run;
model.result('pg9').feature('surf1').set('expr', 'mf.normE');
model.result('pg9').feature('surf1').set('descr', 'Electric field norm');
model.result('pg9').run;
model.result('pg9').run;
model.result.duplicate('pg10', 'pg9');
model.result('pg10').run;
model.result('pg10').label('Excited Argon Number Density');
model.result('pg10').run;
model.result('pg10').feature('surf1').set('expr', 'plas.n_wArs');
model.result('pg10').feature('surf1').set('descr', 'Number density');
model.result('pg10').run;
model.result.create('pg11', 'PlotGroup2D');
model.result('pg11').run;
model.result('pg11').label('Power Deposition');
model.result('pg11').create('surf1', 'Surface');
model.result('pg11').feature('surf1').set('expr', 'mf.Qrh');
model.result('pg11').feature('surf1').set('descr', 'Volumetric loss density, electric');
model.result('pg11').feature('surf1').set('colortable', 'ThermalWave');
model.result('pg11').feature('surf1').create('sel1', 'Selection');
model.result('pg11').feature('surf1').feature('sel1').selection.set([3]);
model.result('pg11').run;
model.result('pg11').run;

model.title('GEC ICP Reactor, Argon Chemistry');

model.description('This example investigates the electrical characteristics of the GEC reference cell for argon chemistry.');

model.label('argon_gec_icp.mph');

model.modelNode.label('Components');

out = model;
