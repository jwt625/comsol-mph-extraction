function out = model
%
% helical_static_mixer.m
%
% Model exported on May 26 2025, 21:26 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/COMSOL_Multiphysics/Applications');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('spf', 'LaminarFlow', 'geom1');
model.physics('spf').model('comp1');
model.physics.create('tds', 'DilutedSpecies', 'geom1', {'c'});

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/spf', true);
model.study('std1').feature('stat').setSolveFor('/physics/tds', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('th_bl_i', '1.0[mm]', 'Blade thickness');
model.param.set('l_bl_i', '24[mm]', 'Blade length');
model.param.set('r_mx_i', '5.0[mm]', 'Mixer radius');
model.param.set('n_bl', '5', 'Number of blades');
model.param.set('il_mx', '12[mm]', 'Mixer inlet length');
model.param.set('ol_mx', '18[mm]', 'Mixer outlet length');
model.param.set('l_mx', 'n_bl*l_bl_i+il_mx+ol_mx', 'Mixer length');
model.param.set('rho_l', '1.0e3[kg/m^3]', 'Liquid density');
model.param.set('visc_l', '1.0e-2[Pa*s]', 'Liquid viscosity');
model.param.set('u_av', '5.0[cm/s]', 'Average velocity');
model.param.set('c_in', '1.0[mole/m^3]', 'Inlet concentration');
model.param.set('D1', '1.0e-10[m^2/s]', 'Diffusivity');

model.func.create('step1', 'Step');
model.func('step1').set('smooth', 'r_mx_i/100');

model.geom.create('part1', 'Part', 3);
model.geom('part1').label('Blade');
model.geom('part1').inputParam.set('th_bl', '1[mm]');
model.geom('part1').inputParam.descr('th_bl', 'Blade thickness');
model.geom('part1').inputParam.set('l_bl', '24[mm]');
model.geom('part1').inputParam.descr('l_bl', 'Blade length');
model.geom('part1').inputParam.set('r_mx', '5[mm]');
model.geom('part1').inputParam.descr('r_mx', 'Mixer radius');
model.geom('part1').inputParam.set('nr_bl', '1');
model.geom('part1').inputParam.descr('nr_bl', 'Blade number (Note: not number of blades!)');
model.geom('part1').repairTolType('relative');
model.geom('part1').localParam.set('w_bl', '2.5*r_mx');
model.geom('part1').localParam.set('sl_bl', 'l_bl/6');
model.geom('part1').localParam.set('an_bl', '30[deg]');
model.geom('part1').create('wp1', 'WorkPlane');
model.geom('part1').feature('wp1').set('unite', true);
model.geom('part1').feature('wp1').geom.create('r1', 'Rectangle');
model.geom('part1').feature('wp1').geom.feature('r1').set('size', {'w_bl' 'th_bl'});
model.geom('part1').feature('wp1').geom.feature('r1').set('base', 'center');
model.geom('part1').feature('wp1').geom.run('r1');
model.geom('part1').run('wp1');
model.geom('part1').feature.create('ext1', 'Extrude');
model.geom('part1').feature('ext1').setIndex('distance', 'sl_bl', 0);
model.geom('part1').feature('ext1').set('crossfaces', false);
model.geom('part1').feature('ext1').setIndex('twist', 'an_bl', 0);
model.geom('part1').run('ext1');
model.geom('part1').create('boxsel1', 'BoxSelection');
model.geom('part1').feature('boxsel1').label('Sweeping Surface 1');
model.geom('part1').feature('boxsel1').set('entitydim', 2);
model.geom('part1').feature('boxsel1').set('zmin', 'il_mx+sl_bl-sl_bl/50');
model.geom('part1').feature('boxsel1').set('zmax', 'il_mx+sl_bl+sl_bl/50');
model.geom('part1').feature('boxsel1').set('condition', 'inside');
model.geom('part1').feature('boxsel1').set('selkeep', false);
model.geom('part1').run('boxsel1');
model.geom('part1').feature.create('ext2', 'Extrude');
model.geom('part1').feature('ext2').set('extrudefrom', 'faces');
model.geom('part1').feature('ext2').selection('inputface').set('ext1', 5);
model.geom('part1').feature('ext2').setIndex('distance', 'sl_bl', 0);
model.geom('part1').feature('ext2').setIndex('twist', 'an_bl', 0);
model.geom('part1').run('ext2');
model.geom('part1').create('boxsel2', 'BoxSelection');
model.geom('part1').feature('boxsel2').label('Sweeping Surface 2');
model.geom('part1').feature('boxsel2').set('entitydim', 2);
model.geom('part1').feature('boxsel2').set('zmin', 'il_mx+2*sl_bl-sl_bl/50');
model.geom('part1').feature('boxsel2').set('zmax', 'il_mx+2*sl_bl+sl_bl/50');
model.geom('part1').feature('boxsel2').set('condition', 'inside');
model.geom('part1').feature('boxsel2').set('selkeep', false);
model.geom('part1').run('boxsel2');
model.geom('part1').feature.create('ext3', 'Extrude');
model.geom('part1').feature('ext3').set('extrudefrom', 'faces');
model.geom('part1').feature('ext3').selection('inputface').set('ext2', 9);
model.geom('part1').feature('ext3').setIndex('distance', 'sl_bl', 0);
model.geom('part1').feature('ext3').setIndex('twist', 'an_bl', 0);
model.geom('part1').run('ext3');
model.geom('part1').create('copy1', 'Copy');
model.geom('part1').feature('copy1').selection('input').set({'ext3'});
model.geom('part1').feature('copy1').set('displz', '3*sl_bl');
model.geom('part1').run('copy1');
model.geom('part1').create('rot1', 'Rotate');
model.geom('part1').feature('rot1').selection('input').set({'copy1'});
model.geom('part1').feature('rot1').set('rot', '3*an_bl');
model.geom('part1').run('rot1');
model.geom('part1').create('uni1', 'Union');
model.geom('part1').feature('uni1').selection('input').set({'ext3' 'rot1'});
model.geom('part1').feature('uni1').set('intbnd', false);
model.geom('part1').selection.create('csel1', 'CumulativeSelection');
model.geom('part1').selection('csel1').label('Blade');
model.geom('part1').feature('uni1').set('contributeto', 'csel1');
model.geom('part1').run('uni1');
model.geom('part1').create('if1', 'If');
model.geom('part1').feature.createAfter('endif1', 'EndIf', 'if1');
model.geom('part1').feature('if1').set('condition', 'floor(nr_bl/2+1e-3) == round(nr_bl/2)');
model.geom('part1').run('if1');
model.geom('part1').create('mir1', 'Mirror');
model.geom('part1').feature('mir1').selection('input').set({'uni1'});
model.geom('part1').feature('mir1').selection('input').named('csel1');
model.geom('part1').feature('mir1').set('axis', [1 0 0]);
model.geom('part1').feature('mir1').set('contributeto', 'csel1');
model.geom('part1').run('mir1');
model.geom('part1').create('rot2', 'Rotate');
model.geom('part1').feature('rot2').selection('input').named('csel1');
model.geom('part1').feature('rot2').set('rot', '3*an_bl');
model.geom('part1').feature('rot2').set('contributeto', 'csel1');
model.geom('part1').run('rot2');
model.geom('part1').run('endif1');
model.geom('part1').run('endif1');

model.variable.create('var1');
model.variable('var1').model('comp1');

model.geom('geom1').run;

model.variable('var1').set('r', 'sqrt(x^2+y^2)/r_mx_i');
model.variable('var1').descr('r', 'Dimensionless radius');

model.geom('geom1').repairTolType('relative');
model.geom('geom1').create('pi1', 'PartInstance');
model.geom('geom1').feature('pi1').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi1').set('part', 'part1');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'th_bl', 'th_bl_i');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'l_bl', 'l_bl_i');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'r_mx', 'r_mx_i');
model.geom('geom1').feature('pi1').set('displ', {'0' '0' 'il_mx'});
model.geom('geom1').selection.create('csel1', 'CumulativeSelection');
model.geom('geom1').selection('csel1').label('Blade');
model.geom('geom1').feature('pi1').setEntry('selkeepobj', 'pi1_csel1', false);
model.geom('geom1').feature('pi1').setEntry('selcontributetoobj', 'pi1_csel1', 'csel1');
model.geom('geom1').selection.create('csel2', 'CumulativeSelection');
model.geom('geom1').selection('csel2').label('Blade Walls');
model.geom('geom1').feature('pi1').setEntry('selkeepbnd', 'pi1_csel1.bnd', false);
model.geom('geom1').feature('pi1').setEntry('selcontributetobnd', 'pi1_csel1.bnd', 'csel2');
model.geom('geom1').run('pi1');
model.geom('geom1').create('if1', 'If');
model.geom('geom1').feature.createAfter('endif1', 'EndIf', 'if1');
model.geom('geom1').feature('if1').set('condition', 'n_bl>1');
model.geom('geom1').create('pi2', 'PartInstance');
model.geom('geom1').feature('pi2').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi2').set('part', 'part1');
model.geom('geom1').feature('pi2').setEntry('inputexpr', 'th_bl', 'th_bl_i');
model.geom('geom1').feature('pi2').setEntry('inputexpr', 'l_bl', 'l_bl_i');
model.geom('geom1').feature('pi2').setEntry('inputexpr', 'r_mx', 'r_mx_i');
model.geom('geom1').feature('pi2').setEntry('inputexpr', 'nr_bl', 2);
model.geom('geom1').feature('pi2').set('displ', {'0' '0' 'il_mx+l_bl_i'});
model.geom('geom1').feature('pi2').setEntry('selkeepobj', 'pi2_csel1', false);
model.geom('geom1').feature('pi2').setEntry('selcontributetoobj', 'pi2_csel1', 'csel1');
model.geom('geom1').feature('pi2').setEntry('selkeepbnd', 'pi2_csel1.bnd', false);
model.geom('geom1').feature('pi2').setEntry('selcontributetobnd', 'pi2_csel1.bnd', 'csel2');
model.geom('geom1').run('endif1');
model.geom('geom1').create('if2', 'If');
model.geom('geom1').feature.createAfter('endif2', 'EndIf', 'if2');
model.geom('geom1').feature('if2').set('condition', 'n_bl>2');
model.geom('geom1').create('pi3', 'PartInstance');
model.geom('geom1').feature('pi3').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi3').set('part', 'part1');
model.geom('geom1').feature('pi3').setEntry('inputexpr', 'th_bl', 'th_bl_i');
model.geom('geom1').feature('pi3').setEntry('inputexpr', 'l_bl', 'l_bl_i');
model.geom('geom1').feature('pi3').setEntry('inputexpr', 'r_mx', 'r_mx_i');
model.geom('geom1').feature('pi3').setEntry('inputexpr', 'nr_bl', 3);
model.geom('geom1').feature('pi3').set('displ', {'0' '0' 'il_mx+l_bl_i*2'});
model.geom('geom1').feature('pi3').setEntry('selkeepobj', 'pi3_csel1', false);
model.geom('geom1').feature('pi3').setEntry('selcontributetoobj', 'pi3_csel1', 'csel1');
model.geom('geom1').feature('pi3').setEntry('selkeepbnd', 'pi3_csel1.bnd', false);
model.geom('geom1').feature('pi3').setEntry('selcontributetobnd', 'pi3_csel1.bnd', 'csel2');
model.geom('geom1').run('endif2');
model.geom('geom1').create('if3', 'If');
model.geom('geom1').feature.createAfter('endif3', 'EndIf', 'if3');
model.geom('geom1').feature('if3').set('condition', 'n_bl>3');
model.geom('geom1').create('pi4', 'PartInstance');
model.geom('geom1').feature('pi4').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi4').set('part', 'part1');
model.geom('geom1').feature('pi4').setEntry('inputexpr', 'th_bl', 'th_bl_i');
model.geom('geom1').feature('pi4').setEntry('inputexpr', 'l_bl', 'l_bl_i');
model.geom('geom1').feature('pi4').setEntry('inputexpr', 'r_mx', 'r_mx_i');
model.geom('geom1').feature('pi4').setEntry('inputexpr', 'nr_bl', 4);
model.geom('geom1').feature('pi4').set('displ', {'0' '0' 'il_mx+l_bl_i*3'});
model.geom('geom1').feature('pi4').setEntry('selkeepobj', 'pi4_csel1', false);
model.geom('geom1').feature('pi4').setEntry('selcontributetoobj', 'pi4_csel1', 'csel1');
model.geom('geom1').feature('pi4').setEntry('selkeepbnd', 'pi4_csel1.bnd', false);
model.geom('geom1').feature('pi4').setEntry('selcontributetobnd', 'pi4_csel1.bnd', 'csel2');
model.geom('geom1').run('endif3');
model.geom('geom1').create('if4', 'If');
model.geom('geom1').feature.createAfter('endif4', 'EndIf', 'if4');
model.geom('geom1').feature('if4').set('condition', 'n_bl>4');
model.geom('geom1').create('pi5', 'PartInstance');
model.geom('geom1').feature('pi5').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi5').set('part', 'part1');
model.geom('geom1').feature('pi5').setEntry('inputexpr', 'th_bl', 'th_bl_i');
model.geom('geom1').feature('pi5').setEntry('inputexpr', 'l_bl', 'l_bl_i');
model.geom('geom1').feature('pi5').setEntry('inputexpr', 'r_mx', 'r_mx_i');
model.geom('geom1').feature('pi5').setEntry('inputexpr', 'nr_bl', 5);
model.geom('geom1').feature('pi5').set('displ', {'0' '0' 'il_mx+l_bl_i*4'});
model.geom('geom1').feature('pi5').setEntry('selkeepobj', 'pi5_csel1', false);
model.geom('geom1').feature('pi5').setEntry('selcontributetoobj', 'pi5_csel1', 'csel1');
model.geom('geom1').feature('pi5').setEntry('selkeepbnd', 'pi5_csel1.bnd', false);
model.geom('geom1').feature('pi5').setEntry('selcontributetobnd', 'pi5_csel1.bnd', 'csel2');
model.geom('geom1').run('endif4');
model.geom('geom1').create('cyl1', 'Cylinder');
model.geom('geom1').feature('cyl1').set('r', 'r_mx_i');
model.geom('geom1').feature('cyl1').set('h', 'l_mx');
model.geom('geom1').selection.create('csel3', 'CumulativeSelection');
model.geom('geom1').selection('csel3').label('Pipe');
model.geom('geom1').feature('cyl1').set('contributeto', 'csel3');
model.geom('geom1').run('cyl1');
model.geom('geom1').create('sel1', 'ExplicitSelection');
model.geom('geom1').feature('sel1').label('Edges to Neglect');
model.geom('geom1').feature('sel1').selection('selection').init(1);
model.geom('geom1').feature('sel1').selection('selection').set('cyl1', [1 6 9 12]);
model.geom('geom1').feature('sel1').set('selshow', false);
model.geom('geom1').run('sel1');
model.geom('geom1').create('sel2', 'ExplicitSelection');
model.geom('geom1').feature('sel2').label('Inlet');
model.geom('geom1').feature('sel2').selection('selection').init(2);
model.geom('geom1').feature('sel2').selection('selection').set('cyl1', 3);
model.geom('geom1').run('sel2');
model.geom('geom1').create('sel3', 'ExplicitSelection');
model.geom('geom1').feature('sel3').label('Outlet');
model.geom('geom1').feature('sel3').selection('selection').init(2);
model.geom('geom1').feature('sel3').selection('selection').set('cyl1', 4);
model.geom('geom1').run('sel3');
model.geom('geom1').create('dif1', 'Difference');
model.geom('geom1').feature('dif1').selection('input').named('csel3');
model.geom('geom1').feature('dif1').selection('input2').named('csel1');
model.geom('geom1').feature('dif1').set('contributeto', 'csel3');
model.geom('geom1').run('dif1');
model.geom('geom1').create('copy1', 'Copy');
model.geom('geom1').feature('copy1').selection('input').set({'dif1'});
model.geom('geom1').run('copy1');
model.geom('geom1').create('cyl2', 'Cylinder');
model.geom('geom1').feature('cyl2').set('r', 'r_mx_i');
model.geom('geom1').feature('cyl2').set('h', 'l_mx');
model.geom('geom1').run('cyl2');
model.geom('geom1').create('dif2', 'Difference');
model.geom('geom1').feature('dif2').selection('input').set({'cyl2'});
model.geom('geom1').feature('dif2').selection('input2').set({'copy1'});
model.geom('geom1').selection.create('csel4', 'CumulativeSelection');
model.geom('geom1').selection('csel4').label('Blades');
model.geom('geom1').feature('dif2').set('contributeto', 'csel4');
model.geom('geom1').run('dif2');
model.geom('geom1').create('pol1', 'Polygon');
model.geom('geom1').feature('pol1').set('source', 'table');
model.geom('geom1').feature('pol1').setIndex('table', 0, 0, 0);
model.geom('geom1').feature('pol1').setIndex('table', '-r_mx_i', 0, 1);
model.geom('geom1').feature('pol1').setIndex('table', 0, 0, 2);
model.geom('geom1').feature('pol1').setIndex('table', 0, 1, 0);
model.geom('geom1').feature('pol1').setIndex('table', 'r_mx_i', 1, 1);
model.geom('geom1').feature('pol1').setIndex('table', 0, 1, 2);
model.geom('geom1').feature('fin').set('repairtoltype', 'relative');
model.geom('geom1').run('fin');
model.geom('geom1').create('boxsel1', 'BoxSelection');
model.geom('geom1').feature('boxsel1').label('Left');
model.geom('geom1').feature('boxsel1').set('entitydim', 2);
model.geom('geom1').feature('boxsel1').set('xmin', '-r_mx_i/100');
model.geom('geom1').feature('boxsel1').set('xmax', '1.01*r_mx_i');
model.geom('geom1').feature('boxsel1').set('zmin', '-l_mx/100');
model.geom('geom1').feature('boxsel1').set('zmax', 'l_mx/100');
model.geom('geom1').feature('boxsel1').set('condition', 'inside');
model.geom('geom1').run('boxsel1');
model.geom('geom1').create('boxsel2', 'BoxSelection');
model.geom('geom1').feature('boxsel2').label('Right');
model.geom('geom1').feature('boxsel2').set('entitydim', 2);
model.geom('geom1').feature('boxsel2').set('xmin', '-1.01*r_mx_i');
model.geom('geom1').feature('boxsel2').set('xmax', 'r_mx_i/100');
model.geom('geom1').feature('boxsel2').set('zmin', '-l_mx/100');
model.geom('geom1').feature('boxsel2').set('zmax', 'l_mx/100');
model.geom('geom1').feature('boxsel2').set('condition', 'inside');
model.geom('geom1').run('boxsel2');

model.selection.create('cyl1', 'Cylinder');
model.selection('cyl1').model('comp1');
model.selection('cyl1').label('showTubeWalls');
model.selection('cyl1').set('entitydim', 2);
model.selection('cyl1').set('r', '1.01*r_mx_i');
model.selection('cyl1').set('rin', '0.99*r_mx_i');
model.selection('cyl1').set('condition', 'inside');
model.selection('cyl1').set('angle1', -90);
model.selection('cyl1').set('angle2', 90);
model.selection.create('dif1', 'Difference');
model.selection('dif1').model('comp1');
model.selection('dif1').label('show');
model.selection('dif1').set('entitydim', 2);
model.selection('dif1').set('add', {'cyl1' 'geom1_sel2' 'geom1_sel3'});
model.selection('dif1').set('subtract', {'geom1_csel4_bnd'});
model.selection.create('cyl2', 'Cylinder');
model.selection('cyl2').model('comp1');
model.selection('cyl2').label('hideTubeWalls');
model.selection('cyl2').set('entitydim', 2);
model.selection('cyl2').set('r', '1.01*r_mx_i');
model.selection('cyl2').set('rin', '0.99*r_mx_i');
model.selection('cyl2').set('condition', 'inside');
model.selection('cyl2').set('angle1', 90);
model.selection('cyl2').set('angle2', 270);
model.selection.create('dif2', 'Difference');
model.selection('dif2').model('comp1');
model.selection('dif2').label('hide');
model.selection('dif2').set('entitydim', 2);
model.selection('dif2').set('add', {'cyl2'});
model.selection('dif2').set('subtract', {'geom1_csel4_bnd'});
model.selection.create('box1', 'Box');
model.selection('box1').model('comp1');
model.selection('box1').label('allEdges');
model.selection('box1').set('entitydim', 1);

model.view('view1').camera.set('zoomanglefull', 6.754086494445801);
model.view('view1').camera.setIndex('position', -0.2843332588672638, 0);
model.view('view1').camera.setIndex('position', 0.3860815465450287, 1);
model.view('view1').camera.setIndex('position', -0.5924251675605774, 2);
model.view('view1').camera.setIndex('up', 0.33860355615615845, 0);
model.view('view1').camera.setIndex('up', 0.8703272938728333, 1);
model.view('view1').camera.setIndex('up', 0.3575958013534546, 2);
model.view('view1').camera.setIndex('viewoffset', 0.030466817319393158, 0);
model.view('view1').camera.setIndex('viewoffset', 0.03629671037197113, 1);
model.view('view1').set('showgrid', false);
model.view('view1').set('showmaterial', true);
model.view('view1').set('environmentmap', 'envmap_machineshop2');
model.view('view1').set('skyrotation', 'skyrotationtwohundredseventy');
model.view('view1').hideEntities.create('hide1');
model.view('view1').hideEntities('hide1').geom('geom1', 2);
model.view('view1').hideEntities('hide1').named('dif2');
model.view('view1').hideEntities.create('hide2');
model.view('view1').hideEntities('hide2').geom('geom1', 1);
model.view('view1').hideEntities('hide2').named('box1');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup('def').set('density', {'rho_l'});
model.material('mat1').propertyGroup('def').set('dynamicviscosity', {'visc_l'});
model.material('mat1').set('family', 'custom');
model.material('mat1').set('customdiffuse', [0.21176470816135406 0.5490196347236633 0.7960784435272217]);
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').selection.named('geom1_csel4_dom');
model.material('mat2').set('family', 'steel');

model.physics('spf').selection.named('geom1_csel3_dom');
model.physics('spf').prop('ShapeProperty').set('order_fluid', 2);
model.physics('spf').create('inl1', 'InletBoundary', 2);
model.physics('spf').feature('inl1').selection.named('geom1_sel2');
model.physics('spf').feature('inl1').set('U0in', '2*u_av*(1-r^2)');
model.physics('spf').create('out1', 'OutletBoundary', 2);
model.physics('spf').feature('out1').selection.named('geom1_sel3');
model.physics('tds').selection.named('geom1_csel3_dom');
model.physics('tds').prop('ShapeProperty').set('order_concentration', 2);
model.physics('tds').prop('MassInconsistentStabilization').set('massIsotropicDiffusion', true);
model.physics('tds').prop('MassInconsistentStabilization').set('delid_mass', 0.01);
model.physics('tds').feature('cdm1').set('u_src', 'root.comp1.u');
model.physics('tds').feature('cdm1').set('D_c', {'D1' '0' '0' '0' 'D1' '0' '0' '0' 'D1'});
model.physics('tds').create('in1', 'Inflow', 2);
model.physics('tds').feature('in1').selection.named('geom1_sel2');
model.physics('tds').feature('in1').setIndex('c0', 'c_in*step1(x)', 0);
model.physics('tds').create('out1', 'Outflow', 2);
model.physics('tds').feature('out1').selection.named('geom1_sel3');

model.mesh('mesh1').autoMeshSize(7);
model.mesh('mesh1').automatic(false);
model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.remaining;
model.mesh('mesh1').run;

model.study('std1').feature('stat').setEntry('activate', 'tds', false);
model.study('std1').create('stat2', 'Stationary');
model.study('std1').feature('stat2').setEntry('activate', 'spf', false);
model.study('std1').feature('stat2').set('usesol', true);
model.study('std1').feature('stat2').set('notsolmethod', 'sol');
model.study('std1').feature('stat2').set('notstudy', 'std1');

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'stat2');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'stat2');
model.sol('sol1').create('s2', 'Stationary');
model.sol('sol1').feature('s2').set('stol', 0.001);
model.sol('sol1').feature('s2').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s2').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s2').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s2').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s2').create('i1', 'Iterative');
model.sol('sol1').feature('s2').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s2').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s2').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s2').feature('i1').set('rhob', 400);
model.sol('sol1').feature('s2').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s2').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s2').feature('i1').label('AMG, concentrations (tds)');
model.sol('sol1').feature('s2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').feature('d1').label('Direct, concentrations (tds)');
model.sol('sol1').feature('s2').feature('fc1').set('linsolver', 'i1');
model.sol('sol1').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s2').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s2').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s2').feature.remove('fcDef');
model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol1').feature('v2').set('solnum', 'auto');
model.sol('sol1').feature('v2').set('solvertype', 'solnum');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.dataset('dset1').set('geom', 'geom1');
model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').label('Velocity (spf)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').set('data', 'dset1');
model.result('pg1').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pg1');
model.result('pg1').feature.create('slc1', 'Slice');
model.result('pg1').feature('slc1').label('Slice');
model.result('pg1').feature('slc1').set('showsolutionparams', 'on');
model.result('pg1').feature('slc1').set('smooth', 'internal');
model.result('pg1').feature('slc1').set('showsolutionparams', 'on');
model.result('pg1').feature('slc1').set('data', 'parent');
model.result.dataset.create('surf1', 'Surface');
model.result.dataset('surf1').label('Exterior Walls');
model.result.dataset('surf1').set('data', 'dset1');
model.result.dataset('surf1').selection.geom('geom1', 2);
model.result.dataset('surf1').selection.set([1 2 6 7 8 11 12 13 16 17 18 19 22 23 24 27 28 29 32 33 34 35 38 39 40 43 44 45 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 99 100 102 103 104 105 106 109 112 114 117 119 122 123 125 128 130 133 135 136 137 138 139]);
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Pressure (spf)');
model.result('pg2').set('data', 'surf1');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('data', 'surf1');
model.result('pg2').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pcond2/pcond1/pg4');
model.result('pg2').feature.create('surf1', 'Surface');
model.result('pg2').feature('surf1').label('Surface');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('expr', 'p');
model.result('pg2').feature('surf1').set('colortable', 'Dipole');
model.result('pg2').feature('surf1').set('smooth', 'internal');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('data', 'parent');
model.result('pg2').feature('surf1').feature.create('tran1', 'Transparency');
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').set('data', 'dset1');
model.result('pg3').label('Concentration, Streamline (tds)');
model.result('pg3').set('titletype', 'custom');
model.result('pg3').set('typeintitle', true);
model.result('pg3').set('prefixintitle', '');
model.result('pg3').create('str1', 'Streamline');
model.result('pg3').feature('str1').set('expr', {'tds.tflux_cx' 'tds.tflux_cy' 'tds.tflux_cz'});
model.result('pg3').feature('str1').set('posmethod', 'start');
model.result('pg3').feature('str1').set('pointtype', 'arrow');
model.result('pg3').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg3').feature('str1').set('color', 'gray');
model.result('pg3').feature('str1').create('col', 'Color');
model.result('pg3').feature('str1').feature('col').set('expr', 'c');
model.result('pg3').feature('str1').feature('col').set('titletype', 'custom');
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').set('data', 'dset1');
model.result('pg4').label('Concentration, Surface (tds)');
model.result('pg4').set('titletype', 'custom');
model.result('pg4').set('prefixintitle', '');
model.result('pg4').set('expressionintitle', false);
model.result('pg4').set('typeintitle', false);
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', {'c'});
model.result('pg1').run;
model.result.dataset.create('cpt1', 'CutPoint3D');
model.result.dataset('cpt1').set('pointx', 0);
model.result.dataset('cpt1').set('pointy', 'r_mx_i/2');
model.result.dataset('cpt1').set('pointz', 'il_mx');
model.result.dataset.create('cpt2', 'CutPoint3D');
model.result.dataset('cpt2').set('pointx', 0);
model.result.dataset('cpt2').set('pointy', 'r_mx_i/2');
model.result.dataset('cpt2').set('pointz', 'il_mx+l_bl_i*n_bl');
model.result.dataset.create('cln1', 'CutLine3D');
model.result.dataset('cln1').setIndex('genpoints', 'r_mx_i/2', 0, 1);
model.result.dataset('cln1').setIndex('genpoints', 'il_mx', 0, 2);
model.result.dataset('cln1').setIndex('genpoints', 0, 1, 0);
model.result.dataset('cln1').setIndex('genpoints', 'r_mx_i/2', 1, 1);
model.result.dataset('cln1').setIndex('genpoints', 'il_mx+l_bl_i*n_bl', 1, 2);
model.result.dataset.create('cln2', 'CutLine3D');
model.result.dataset('cln2').setIndex('genpoints', '-r_mx_i', 0, 0);
model.result.dataset('cln2').setIndex('genpoints', 'il_mx', 0, 2);
model.result.dataset('cln2').setIndex('genpoints', 'r_mx_i', 1, 0);
model.result.dataset('cln2').setIndex('genpoints', 'il_mx', 1, 2);
model.result.dataset('cln2').set('genparaactive', true);
model.result.dataset('cln2').set('genparadist', 'range(l_bl_i*n_bl/5,l_bl_i*n_bl/5,l_bl_i*n_bl)');
model.result.dataset('cln2').set('orthvec', [0 0 1]);
model.result.dataset.create('cln3', 'CutLine3D');
model.result.dataset('cln3').setIndex('genpoints', '-r_mx_i', 0, 1);
model.result.dataset('cln3').setIndex('genpoints', 'il_mx', 0, 2);
model.result.dataset('cln3').setIndex('genpoints', 0, 1, 0);
model.result.dataset('cln3').setIndex('genpoints', 'r_mx_i', 1, 1);
model.result.dataset('cln3').setIndex('genpoints', 'il_mx', 1, 2);
model.result.dataset('cln3').set('genparaactive', true);
model.result.dataset('cln3').set('genparadist', 'range(l_bl_i*n_bl/5,l_bl_i*n_bl/5,l_bl_i*n_bl)');
model.result.dataset('cln3').set('orthvec', [0 0 1]);
model.result.dataset('cln3').set('spacevars', {'cln2x'});
model.result.dataset.create('cpl1', 'CutPlane');
model.result.dataset('cpl1').set('quickplane', 'xy');
model.result.dataset('cpl1').set('quickz', 'il_mx+(n_bl*l_bl_i)');
model.result.dataset.create('surf2', 'Surface');
model.result.dataset('surf2').label('Blade Walls');
model.result.dataset('surf2').selection.named('geom1_csel2_bnd');
model.result.dataset.create('mesh1', 'Mesh');
model.result.numerical.create('pev1', 'EvalPoint');
model.result.numerical('pev1').label('First Blade');
model.result.numerical('pev1').set('data', 'cpt1');
model.result.numerical('pev1').setIndex('expr', 'p', 0);
model.result.numerical('pev1').setIndex('unit', 'Pa', 0);
model.result.numerical('pev1').setIndex('descr', 'Pressure, first blade', 0);
model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').comments('First Blade');
model.result.numerical('pev1').set('table', 'tbl1');
model.result.numerical('pev1').setResult;
model.result.numerical.create('pev2', 'EvalPoint');
model.result.numerical('pev2').label('Last Blade');
model.result.numerical('pev2').set('data', 'cpt2');
model.result.numerical('pev2').setIndex('expr', 'p', 0);
model.result.numerical('pev2').setIndex('unit', 'Pa', 0);
model.result.numerical('pev2').setIndex('descr', 'Pressure, last blade', 0);
model.result.numerical('pev2').set('table', 'tbl1');
model.result.numerical('pev2').appendResult;
model.result.numerical.create('av1', 'AvSurface');
model.result.numerical('av1').set('intvolume', true);
model.result.numerical('av1').label('Contact Probability');
model.result.numerical('av1').set('data', 'cpl1');
model.result.numerical('av1').setIndex('expr', 'c*(1-c)/0.25[mol2^2/m^6]', 0);
model.result.numerical('av1').setIndex('unit', '', 0);
model.result.numerical('av1').setIndex('descr', 'c*(1-c)/0.25[mol2^2/m^6]', 0);
model.result.table.create('tbl2', 'Table');
model.result.table('tbl2').comments('Contact Probability');
model.result.numerical('av1').set('table', 'tbl2');
model.result.numerical('av1').setResult;
model.result.numerical.create('max1', 'MaxSurface');
model.result.numerical('max1').label('Maximum Concentration');
model.result.numerical('max1').set('data', 'cpl1');
model.result.numerical('max1').setIndex('expr', 'c/c_in', 0);
model.result.numerical('max1').setIndex('unit', 1, 0);
model.result.numerical('max1').setIndex('descr', 'Maximum Concentration', 0);
model.result.table.create('tbl3', 'Table');
model.result.table('tbl3').comments('Maximum Concentration');
model.result.numerical('max1').set('table', 'tbl3');
model.result.numerical('max1').setResult;
model.result.numerical.create('min1', 'MinSurface');
model.result.numerical('min1').set('data', 'cpl1');
model.result.numerical('min1').setIndex('expr', 'c/c_in', 0);
model.result.numerical('min1').setIndex('unit', 1, 0);
model.result.numerical('min1').setIndex('descr', 'Minimum Concentration', 0);
model.result.numerical('min1').set('table', 'tbl3');
model.result.numerical('min1').appendResult;
model.result.table('tbl1').label('Pressure');
model.result.table('tbl2').label('Contact Probability After Last Blade');
model.result.table('tbl3').label('Concentration After Last Blade');
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').run;
model.result('pg5').label('Streamlines (spf)');
model.result('pg5').set('edgecolor', 'custom');
model.result('pg5').set('customedgecolor', [0.47843137383461 0.47843137383461 0.47843137383461]);
model.result('pg5').set('frametype', 'spatial');
model.result('pg5').set('titletype', 'manual');
model.result('pg5').set('title', 'Streamline: Velocity field');
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('data', 'mesh1');
model.result('pg5').feature('surf1').set('expr', '1');
model.result('pg5').feature('surf1').create('mtrl1', 'MaterialAppearance');
model.result('pg5').run;
model.result('pg5').feature('surf1').feature('mtrl1').set('material', 'mat2');
model.result('pg5').run;
model.result('pg5').create('str1', 'Streamline');
model.result('pg5').feature('str1').set('selnumber', 30);
model.result('pg5').feature('str1').selection.set([2]);
model.result('pg5').run;
model.result('pg5').feature('str1').set('linetype', 'ribbon');
model.result('pg5').feature('str1').set('widthscaleactive', true);
model.result('pg5').feature('str1').set('widthscale', '1E-4');
model.result('pg5').feature('str1').set('color', 'custom');
model.result('pg5').feature('str1').set('customcolor', [0.21176470816135406 0.5490196347236633 0.7960784435272217]);
model.result('pg5').feature('str1').set('resolution', 'fine');
model.result('pg5').feature('str1').set('smooth', 'internal');
model.result('pg5').feature('str1').selection.named('geom1_boxsel1');
model.result('pg5').run;
model.result('pg5').create('str2', 'Streamline');
model.result('pg5').feature('str2').set('selnumber', 30);
model.result('pg5').feature('str2').selection.set([78]);
model.result('pg5').run;
model.result('pg5').feature('str2').set('linetype', 'ribbon');
model.result('pg5').feature('str2').set('widthscaleactive', true);
model.result('pg5').feature('str2').set('widthscale', '1E-4');
model.result('pg5').feature('str2').set('color', 'custom');
model.result('pg5').feature('str2').set('customcolor', [0.9411764740943909 0.9019607901573181 0.5490196347236633]);
model.result('pg5').feature('str2').set('resolution', 'fine');
model.result('pg5').feature('str2').set('smooth', 'internal');
model.result('pg5').feature('str2').selection.named('geom1_boxsel2');
model.result('pg1').run;
model.result('pg1').set('edgecolor', 'custom');
model.result('pg1').set('customedgecolor', [0.47843137383461 0.47843137383461 0.47843137383461]);
model.result('pg1').run;
model.result('pg1').feature('slc1').set('quickxnumber', 1);
model.result('pg1').feature('slc1').set('resolution', 'fine');
model.result('pg1').run;
model.result('pg1').create('slc2', 'Slice');
model.result('pg1').feature('slc2').set('quickplane', 'zx');
model.result('pg1').feature('slc2').set('quickynumber', 1);
model.result('pg1').feature('slc2').set('inheritplot', 'slc1');
model.result('pg1').run;
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('data', 'mesh1');
model.result('pg1').feature('surf1').set('expr', '1');
model.result('pg1').feature('surf1').create('mtrl1', 'MaterialAppearance');
model.result('pg1').run;
model.result('pg1').feature('surf1').feature('mtrl1').set('material', 'mat2');
model.result('pg2').run;
model.result('pg2').feature('surf1').set('data', 'surf2');
model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').run;
model.result('pg6').label('Pressure Cut Line');
model.result('pg6').set('data', 'cln1');
model.result('pg6').create('lngr1', 'LineGraph');
model.result('pg6').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg6').feature('lngr1').set('linewidth', 'preference');
model.result('pg6').feature('lngr1').set('expr', 'p');
model.result('pg6').feature('lngr1').set('smooth', 'none');
model.result('pg6').run;
model.result('pg6').set('xlabelactive', true);
model.result('pg6').set('xlabel', 'Distance from the edge of the first mixer blade (m)');
model.result('pg4').run;
model.result.remove('pg4');
model.result('pg5').run;
model.result('pg3').run;
model.result.remove('pg3');
model.result('pg5').run;
model.result.create('pg7', 'PlotGroup3D');
model.result('pg7').run;
model.result('pg7').label('Dimensionless Concentration (tds)');
model.result('pg7').set('titletype', 'manual');
model.result('pg7').set('title', 'Slices: Dimensionless Concentration');
model.result('pg7').create('slc1', 'Slice');
model.result('pg7').feature('slc1').set('expr', 'c/c_in');
model.result('pg7').feature('slc1').set('quickplane', 'xy');
model.result('pg7').feature('slc1').set('quickzmethod', 'coord');
model.result('pg7').feature('slc1').set('quickz', 'range(il_mx,l_bl_i*n_bl/10,il_mx+10*l_bl_i*n_bl/10)');
model.result('pg7').feature('slc1').set('resolution', 'fine');
model.result('pg7').feature('slc1').set('smooth', 'none');
model.result('pg7').run;
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').run;
model.result('pg8').label('Scaled Dimensionless Concentration (tds)');
model.result('pg8').create('slc1', 'Slice');
model.result('pg8').feature('slc1').set('expr', 'c/c_in');
model.result('pg8').feature('slc1').set('quickplane', 'xy');
model.result('pg8').feature('slc1').set('quickzmethod', 'coord');
model.result('pg8').feature('slc1').set('quickz', 'il_mx');
model.result('pg8').feature('slc1').set('colorlegend', false);
model.result('pg8').feature('slc1').set('resolution', 'fine');
model.result('pg8').feature('slc1').set('smooth', 'internal');
model.result('pg8').feature.duplicate('slc2', 'slc1');
model.result('pg8').run;
model.result('pg8').feature('slc2').set('quickz', 'il_mx+(l_bl_i*n_bl/10)');
model.result('pg8').feature.duplicate('slc3', 'slc2');
model.result('pg8').run;
model.result('pg8').feature('slc3').set('quickz', 'il_mx+(2*l_bl_i*n_bl/10)');
model.result('pg8').feature.duplicate('slc4', 'slc3');
model.result('pg8').run;
model.result('pg8').feature('slc4').set('quickz', 'il_mx+(3*l_bl_i*n_bl/10)');
model.result('pg8').feature.duplicate('slc5', 'slc4');
model.result('pg8').run;
model.result('pg8').feature('slc5').set('quickz', 'il_mx+(4*l_bl_i*n_bl/10)');
model.result('pg8').feature.duplicate('slc6', 'slc5');
model.result('pg8').run;
model.result('pg8').feature('slc6').set('quickz', 'il_mx+(5*l_bl_i*n_bl/10)');
model.result('pg8').feature.duplicate('slc7', 'slc6');
model.result('pg8').run;
model.result('pg8').feature('slc7').set('quickz', 'il_mx+(6*l_bl_i*n_bl/10)');
model.result('pg8').feature.duplicate('slc8', 'slc7');
model.result('pg8').run;
model.result('pg8').feature('slc8').set('quickz', 'il_mx+(7*l_bl_i*n_bl/10)');
model.result('pg8').feature.duplicate('slc9', 'slc8');
model.result('pg8').run;
model.result('pg8').feature('slc9').set('quickz', 'il_mx+(8*l_bl_i*n_bl/10)');
model.result('pg8').feature.duplicate('slc10', 'slc9');
model.result('pg8').run;
model.result('pg8').feature('slc10').set('quickz', 'il_mx+(9*l_bl_i*n_bl/10)');
model.result('pg8').feature.duplicate('slc11', 'slc10');
model.result('pg8').run;
model.result('pg8').feature('slc11').set('quickz', 'il_mx+(10*l_bl_i*n_bl/10)');
model.result('pg8').run;
model.result('pg8').run;
model.result('pg8').set('titletype', 'manual');
model.result('pg8').set('title', 'Slices: Locally Scaled Dimensionless Concentration');
model.result('pg8').run;
model.result.create('pg9', 'PlotGroup1D');
model.result('pg9').run;
model.result('pg9').label('Concentration Cut Lines');
model.result('pg9').create('lngr1', 'LineGraph');
model.result('pg9').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg9').feature('lngr1').set('linewidth', 'preference');
model.result('pg9').feature('lngr1').label('Lines Along x-Axis');
model.result('pg9').feature('lngr1').set('data', 'cln2');
model.result('pg9').feature('lngr1').set('expr', 'c');
model.result('pg9').feature('lngr1').set('xdata', 'expr');
model.result('pg9').feature('lngr1').set('xdataexpr', 'x');
model.result('pg9').feature('lngr1').set('resolution', 'norefine');
model.result('pg9').feature('lngr1').set('smooth', 'none');
model.result('pg9').run;
model.result('pg9').run;
model.result('pg9').set('xlabelactive', true);
model.result('pg9').set('xlabel', 'Position along the x-axis at y = 0 (m)');
model.result('pg9').set('ylabelactive', true);
model.result('pg9').set('ylabel', 'Concentration of c (mol/m<sup>3</sup>)');
model.result('pg9').set('titletype', 'manual');
model.result('pg9').set('title', 'Line Graphs Along Radial Cut Lines (x = 0; -R < y < R) Positioned Evenly Spaced From First to Last Blade');
model.result('pg9').run;
model.result('pg9').run;
model.result('pg9').feature('lngr1').set('legend', true);
model.result.create('pg10', 'PlotGroup3D');
model.result('pg10').run;
model.result('pg10').label('Contact Probability (tds)');
model.result('pg10').create('slc1', 'Slice');
model.result('pg10').feature('slc1').set('expr', 'c*(1-c)/(c_in^2)/0.25[1]');
model.result('pg10').feature('slc1').set('quickplane', 'xy');
model.result('pg10').feature('slc1').set('quickzmethod', 'coord');
model.result('pg10').feature('slc1').set('quickz', 'range(il_mx,l_bl_i*n_bl/10,il_mx+10*l_bl_i*n_bl/10)');
model.result('pg10').feature('slc1').set('resolution', 'fine');
model.result('pg10').feature('slc1').set('smooth', 'none');
model.result('pg10').run;
model.result('pg10').set('titletype', 'manual');
model.result('pg10').set('title', 'Slices: Contact Probability');
model.result('pg10').run;
model.result.create('pg11', 'PlotGroup3D');
model.result('pg11').run;
model.result('pg11').label('Scaled Contact Probability (tds)');
model.result('pg11').create('slc1', 'Slice');
model.result('pg11').feature('slc1').set('expr', 'c*(1-c)/(c_in^2)');
model.result('pg11').feature('slc1').set('quickplane', 'xy');
model.result('pg11').feature('slc1').set('quickzmethod', 'coord');
model.result('pg11').feature('slc1').set('quickz', 'il_mx');
model.result('pg11').feature('slc1').set('colorlegend', false);
model.result('pg11').feature('slc1').set('resolution', 'fine');
model.result('pg11').feature('slc1').set('smooth', 'internal');
model.result('pg11').run;
model.result('pg11').feature.duplicate('slc2', 'slc1');
model.result('pg11').run;
model.result('pg11').feature('slc2').set('quickz', 'il_mx+(l_bl_i*n_bl/10)');
model.result('pg11').feature.duplicate('slc3', 'slc2');
model.result('pg11').run;
model.result('pg11').feature('slc3').set('quickz', 'il_mx+(2*l_bl_i*n_bl/10)');
model.result('pg11').feature.duplicate('slc4', 'slc3');
model.result('pg11').run;
model.result('pg11').feature('slc4').set('quickz', 'il_mx+(3*l_bl_i*n_bl/10)');
model.result('pg11').feature.duplicate('slc5', 'slc4');
model.result('pg11').run;
model.result('pg11').feature('slc5').set('quickz', 'il_mx+(4*l_bl_i*n_bl/10)');
model.result('pg11').feature.duplicate('slc6', 'slc5');
model.result('pg11').run;
model.result('pg11').feature('slc6').set('quickz', 'il_mx+(5*l_bl_i*n_bl/10)');
model.result('pg11').feature.duplicate('slc7', 'slc6');
model.result('pg11').run;
model.result('pg11').feature('slc7').set('quickz', 'il_mx+(6*l_bl_i*n_bl/10)');
model.result('pg11').feature.duplicate('slc8', 'slc7');
model.result('pg11').run;
model.result('pg11').feature('slc8').set('quickz', 'il_mx+(7*l_bl_i*n_bl/10)');
model.result('pg11').feature.duplicate('slc9', 'slc8');
model.result('pg11').run;
model.result('pg11').feature('slc9').set('quickz', 'il_mx+(8*l_bl_i*n_bl/10)');
model.result('pg11').feature.duplicate('slc10', 'slc9');
model.result('pg11').run;
model.result('pg11').feature('slc10').set('quickz', 'il_mx+(9*l_bl_i*n_bl/10)');
model.result('pg11').feature.duplicate('slc11', 'slc10');
model.result('pg11').run;
model.result('pg11').feature('slc11').set('quickz', 'il_mx+(10*l_bl_i*n_bl/10)');
model.result('pg11').run;
model.result('pg11').set('titletype', 'manual');
model.result('pg11').set('title', 'Slices: Locally Scaled Contact Probability');
model.result('pg11').run;
model.result('pg5').run;

model.title('Helical Static Mixer');

model.description(['This app demonstrates the following:' newline  newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Geometry parts and parameterized geometries' newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Dark theme' newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Material appearance visualization with environment reflections' newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Report generation for both Microsoft' native2unicode(hex2dec({'00' 'ae'}), 'unicode') ' Word and Microsoft' native2unicode(hex2dec({'00' 'ae'}), 'unicode') ' PowerPoint' newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Options for setting different mesh sizes' newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Improved graphics visualization by showing/hiding different geometry objects' newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Enabling and disabling ribbon items based on the solution state.' newline  newline 'Helical static mixers are often used to mix monomers and initiators which then react during a polymerization process. The concentration field is included in the analysis in order to compute the extent of mixing between two streams injected into the static mixer through semicircle-shaped inlets.' newline  newline 'The app can be used to estimate the degree of mixing in a system including one to five helical blades whose dimensions can also be varied. The monomers'' liquid properties and inlet velocity can also be varied.']);

model.label('helical_static_mixer.mph');

model.result('pg5').run;

model.setExpectedComputationTime('8 minutes');

model.view('view1').set('showaxisorientation', false);

model.result('pg1').run;
model.result('pg1').set('legendpos', 'bottom');
model.result('pg1').run;
model.result('pg1').feature('slc2').set('titletype', 'none');
model.result('pg1').run;
model.result('pg1').feature('surf1').set('titletype', 'none');
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').feature('surf1').set('titletype', 'none');
model.result('pg5').run;
model.result('pg5').feature('str2').set('titletype', 'none');
model.result('pg7').run;
model.result('pg7').set('legendpos', 'bottom');
model.result('pg7').run;
model.result('pg7').feature('slc1').set('titletype', 'manual');
model.result('pg7').feature('slc1').set('title', 'Dimensionless Concentration');
model.result('pg10').run;
model.result('pg10').set('legendpos', 'bottom');
model.result.report.create('rpt1', 'Report');
model.result.report('rpt1').set('format', 'docx');
model.result.report('rpt1').feature.create('tp1', 'TitlePage');
model.result.report('rpt1').feature('tp1').set('frontmatterlayout', 'headings');
model.result.report('rpt1').feature('tp1').set('summary', '');
model.result.report('rpt1').feature('tp1').set('author', '');
model.result.report('rpt1').feature('tp1').set('company', 'COMSOL');
model.result.report('rpt1').feature.create('sec1', 'Section');
model.result.report('rpt1').feature('sec1').label('Input & Study');
model.result.report('rpt1').feature('sec1').feature.create('root1', 'Model');
model.result.report('rpt1').feature('sec1').feature.create('param1', 'Parameter');
model.result.report('rpt1').feature('sec1').feature.create('std1', 'Study');
model.result.report('rpt1').feature.create('sec2', 'Section');
model.result.report('rpt1').feature('sec2').label('Geometry & Mesh');
model.result.report('rpt1').feature('sec2').feature.create('geom1', 'Geometry');
model.result.report('rpt1').feature('sec2').feature('geom1').set('includestats', false);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 0, 1);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 1, 1);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 2, 1);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 3, 1);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 4, 1);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 5, 1);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 6, 1);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 7, 1);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 8, 1);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 9, 1);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 10, 1);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 11, 1);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 12, 1);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 13, 1);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 14, 1);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 15, 1);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 16, 1);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 17, 1);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 18, 1);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 19, 1);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 20, 1);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 21, 1);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 22, 1);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 23, 1);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 24, 1);
model.result.report('rpt1').feature('sec2').feature.create('mesh1', 'Mesh');
model.result.report('rpt1').feature('sec2').feature('mesh1').setIndex('children', false, 0, 1);
model.result.report('rpt1').feature('sec2').feature('mesh1').setIndex('children', false, 1, 1);
model.result.report('rpt1').feature('sec2').feature('mesh1').setIndex('children', false, 2, 1);
model.result.report('rpt1').feature('sec2').feature('mesh1').setIndex('children', false, 3, 1);
model.result.report('rpt1').feature('sec2').feature('mesh1').setIndex('children', false, 4, 1);
model.result.report('rpt1').feature.create('sec3', 'Section');
model.result.report('rpt1').feature('sec3').label('Plot Groups');
model.result.report('rpt1').feature('sec3').feature.create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec3').feature('pg1').label('Streamlines');
model.result.report('rpt1').feature('sec3').feature('pg1').set('noderef', 'pg5');
model.result.report('rpt1').feature('sec3').feature.create('pg2', 'PlotGroup');
model.result.report('rpt1').feature('sec3').feature('pg2').label('Velocity');
model.result.report('rpt1').feature('sec3').feature.create('pg3', 'PlotGroup');
model.result.report('rpt1').feature('sec3').feature('pg3').label('Pressure Profile, Axial Direction');
model.result.report('rpt1').feature('sec3').feature('pg3').set('noderef', 'pg6');
model.result.report('rpt1').feature('sec3').feature.create('pg4', 'PlotGroup');
model.result.report('rpt1').feature('sec3').feature('pg4').label('Dimensionless Concentration');
model.result.report('rpt1').feature('sec3').feature('pg4').set('noderef', 'pg7');
model.result.report('rpt1').feature('sec3').feature.create('pg5', 'PlotGroup');
model.result.report('rpt1').feature('sec3').feature('pg5').label('Localy Scaled Dimensionless Concentration');
model.result.report('rpt1').feature('sec3').feature('pg5').set('noderef', 'pg8');
model.result.report('rpt1').feature('sec3').feature('pg5').label('Locally Scaled Dimensionless Concentration');
model.result.report('rpt1').feature('sec3').feature.create('pg6', 'PlotGroup');
model.result.report('rpt1').feature('sec3').feature('pg6').label('Contact Probability');
model.result.report('rpt1').feature('sec3').feature('pg6').set('noderef', 'pg10');
model.result.report('rpt1').feature('sec3').feature.create('pg7', 'PlotGroup');
model.result.report('rpt1').feature('sec3').feature('pg7').label('Locally Scaled Contact Probability');
model.result.report('rpt1').feature('sec3').feature('pg7').set('noderef', 'pg11');
model.result.report('rpt1').feature.create('sec4', 'Section');
model.result.report('rpt1').feature('sec4').label('Tables');
model.result.report('rpt1').feature('sec4').feature.create('mtbl1', 'Table');
model.result.report('rpt1').feature('sec4').feature('mtbl1').label('Pressure');
model.result.report('rpt1').feature('sec4').feature.create('mtbl2', 'Table');
model.result.report('rpt1').feature('sec4').feature('mtbl2').label('Contact Probability');
model.result.report('rpt1').feature('sec4').feature('mtbl2').set('noderef', 'tbl2');
model.result.report('rpt1').feature('sec4').feature.create('mtbl3', 'Table');
model.result.report('rpt1').feature('sec4').feature('mtbl3').label('Concentration');
model.result.report('rpt1').feature('sec4').feature('mtbl3').set('noderef', 'tbl3');
model.result.report('rpt1').feature('sec3').feature('pg3').active(false);
model.result.report.create('pres1', 'Presentation');
model.result.report('pres1').set('imagesize', 'xlarge');
model.result.report('pres1').set('colortheme', 'Default');
model.result.report('pres1').feature.create('sec1', 'SectionSlide');
model.result.report('pres1').feature('sec1').label('Software & Hardware');
model.result.report('pres1').feature('sec1').feature.create('root1', 'Model');
model.result.report('pres1').feature.create('sec2', 'SectionSlide');
model.result.report('pres1').feature('sec2').label('Input Parameters');
model.result.report('pres1').feature('sec2').feature.create('param1', 'Parameter');
model.result.report('pres1').feature.create('sec3', 'SectionSlide');
model.result.report('pres1').feature('sec3').label('Geometry');
model.result.report('pres1').feature('sec3').feature.create('geom1', 'Geometry');
model.result.report('pres1').feature('sec3').feature('geom1').set('includestats', false);
model.result.report('pres1').feature.create('sec4', 'SectionSlide');
model.result.report('pres1').feature('sec4').label('Mesh');
model.result.report('pres1').feature('sec4').feature.create('mesh1', 'Mesh');
model.result.report('pres1').feature.create('sec5', 'SectionSlide');
model.result.report('pres1').feature('sec5').label('Study');
model.result.report('pres1').feature('sec5').feature.create('std1', 'Study');
model.result.report('pres1').feature('sec5').feature('std1').setIndex('children', false, 0, 1);
model.result.report('pres1').feature('sec5').feature('std1').setIndex('children', false, 1, 1);
model.result.report('pres1').set('template', 'custom');
model.result.report('pres1').set('templatefile', 'embedded:///cs_template.potx');
model.result.report('pres1').feature.create('tsld1', 'TitleSlide');
model.result.report('pres1').feature('tsld1').set('author', '');
model.result.report('pres1').feature('tsld1').set('company', 'COMSOL');
model.result.report('pres1').feature.create('sec6', 'SectionSlide');
model.result.report('pres1').feature('sec6').label('Results');
model.result.report('pres1').feature('sec6').set('includesectionslide', 'include');
model.result.report('pres1').feature('sec6').feature.create('pg1', 'PlotGroup');
model.result.report('pres1').feature('sec6').feature('pg1').set('noderef', 'pg5');
model.result.report('pres1').feature('sec6').feature('pg1').label('Streamlines');
model.result.report('pres1').feature('sec6').feature.create('pg2', 'PlotGroup');
model.result.report('pres1').feature('sec6').feature('pg2').label('Velocity');
model.result.report('pres1').feature('sec6').feature.create('pg3', 'PlotGroup');
model.result.report('pres1').feature('sec6').feature('pg3').label('Dimensionless Concentration');
model.result.report('pres1').feature('sec6').feature('pg3').set('noderef', 'pg7');
model.result.report('pres1').feature('sec6').feature.create('pg4', 'PlotGroup');
model.result.report('pres1').feature('sec6').feature('pg4').label('Scaled Dimensionless Concentration');
model.result.report('pres1').feature('sec6').feature('pg4').set('noderef', 'pg8');
model.result.report('pres1').feature('sec6').feature.create('pg5', 'PlotGroup');
model.result.report('pres1').feature('sec6').feature('pg5').label('Contact Probability');
model.result.report('pres1').feature('sec6').feature('pg5').set('noderef', 'pg10');
model.result.report('pres1').feature('sec6').feature.create('pg6', 'PlotGroup');
model.result.report('pres1').feature('sec6').feature('pg6').label('Scaled Contact Probability');
model.result.report('pres1').feature('sec6').feature('pg6').set('noderef', 'pg11');
model.result.report('pres1').feature.create('sec7', 'SectionSlide');
model.result.report('pres1').feature('sec7').label('Pressure');
model.result.report('pres1').feature('sec7').feature.create('mtbl1', 'Table');
model.result.report('pres1').feature('sec7').feature('mtbl1').label('Pressure');
model.result.report('pres1').feature('sec7').feature('mtbl1').set('commentssource', 'none');
model.result.report('pres1').feature.create('sec8', 'SectionSlide');
model.result.report('pres1').feature('sec8').label('Contact Probability');
model.result.report('pres1').feature('sec8').feature.create('mtbl1', 'Table');
model.result.report('pres1').feature('sec8').feature('mtbl1').set('commentssource', 'none');
model.result.report('pres1').feature('sec8').feature('mtbl1').set('noderef', 'tbl2');
model.result.report('pres1').feature('sec8').feature('mtbl1').label('Contact Probability');
model.result.report('pres1').feature.create('sec9', 'SectionSlide');
model.result.report('pres1').feature('sec9').label('Concentration');
model.result.report('pres1').feature('sec9').feature.create('mtbl1', 'Table');
model.result.report('pres1').feature('sec9').feature('mtbl1').label('Concentration');
model.result.report('pres1').feature('sec9').feature('mtbl1').set('commentssource', 'none');
model.result.report('pres1').feature('sec9').feature('mtbl1').set('noderef', 'tbl3');

model.title('Helical Static Mixer');

model.description(['This app demonstrates the following:' newline  newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Geometry parts and parameterized geometries' newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Dark theme' newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Material appearance visualization with environment reflections' newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Report generation for both Microsoft' native2unicode(hex2dec({'00' 'ae'}), 'unicode') ' Word and Microsoft' native2unicode(hex2dec({'00' 'ae'}), 'unicode') ' PowerPoint' newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Options for setting different mesh sizes' newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Improved graphics visualization by showing/hiding different geometry objects' newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Enabling and disabling ribbon items based on the solution state.' newline  newline 'Helical static mixers are often used to mix monomers and initiators which then react during a polymerization process. The concentration field is included in the analysis in order to compute the extent of mixing between two streams injected into the static mixer through semicircle-shaped inlets.' newline  newline 'The app can be used to estimate the degree of mixing in a system including one to five helical blades whose dimensions can also be varied. The monomers'' liquid properties and inlet velocity can also be varied.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('helical_static_mixer.mph');

model.modelNode.label('Components');

out = model;
