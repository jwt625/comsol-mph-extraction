function out = model
%
% ring_impact.m
%
% Model exported on May 26 2025, 21:34 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Structural_Mechanics_Module/Verification_Examples');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/solid', true);

model.param.set('radius', '10[m]');
model.param.descr('radius', 'Ring radius');
model.param.set('thickness', '0.3[m]');
model.param.descr('thickness', 'Ring thickness');

model.geom('geom1').create('c1', 'Circle');
model.geom('geom1').feature('c1').set('r', 'radius');
model.geom('geom1').feature('c1').setIndex('layername', 'Layer 1', 0);
model.geom('geom1').feature('c1').setIndex('layer', 'thickness', 0);
model.geom('geom1').feature('c1').label('Ring 1');
model.geom('geom1').feature('c1').set('selresult', true);
model.geom('geom1').feature('c1').set('color', '4');
model.geom('geom1').runPre('fin');
model.geom('geom1').feature.duplicate('c2', 'c1');
model.geom('geom1').feature('c2').set('pos', [10 -20]);
model.geom('geom1').feature('c2').label('Ring 2');
model.geom('geom1').feature('c2').set('color', '12');
model.geom('geom1').run('c2');
model.geom('geom1').create('del1', 'Delete');
model.geom('geom1').feature('del1').selection('input').init(2);
model.geom('geom1').feature('del1').selection('input').set('c1', 5);
model.geom('geom1').feature('del1').selection('input').set('c2', 5);
model.geom('geom1').run('fin');

model.pair.create('p1', 'Contact', 'geom1');
model.pair('p1').source.set([14 19 21 24]);
model.pair('p1').destination.set([9 10 15 18]);

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat1').propertyGroup('Enu').set('E', {'20[MPa]'});
model.material('mat1').propertyGroup('Enu').set('nu', {'1/6'});
model.material('mat1').propertyGroup('def').set('density', {'1000'});

model.physics('solid').create('init2', 'init', 2);
model.physics('solid').feature('init2').selection.named('geom1_c1_dom');
model.physics('solid').feature('init2').set('ut', [0 -4 0]);
model.physics('solid').feature('dcnt1').set('ContactMethodCtrl', 'PenaltyDynamic');
model.physics('solid').feature('dcnt1').set('penaltyCtrlPenalty', 'ViscousOnly');
model.physics('solid').feature('dcnt1').set('taun_penalty', '.1[ms]');
model.physics('solid').feature('dcnt1').set('storeContactEnergy', true);
model.physics('solid').feature.duplicate('dcnt2', 'dcnt1');
model.physics('solid').feature('dcnt2').set('pairs', {'p1'});
model.physics('solid').feature('dcnt2').set('ContactMethodCtrl', 'AugmentedLagrangeDynamic');
model.physics('solid').feature('dcnt2').set('taun', '.01[ms]');

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([3 7]);
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 3);
model.mesh('mesh1').feature('map1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis2').selection.set([9 10 13 14 15 18 21 24]);
model.mesh('mesh1').feature('map1').feature('dis2').set('numelem', 20);
model.mesh('mesh1').run;

model.study('std1').label('Study 1: Penalty');
model.study('std1').feature('time').set('tlist', 'range(0,0.1,20)');
model.study('std1').feature('time').set('useadvanceddisable', true);
model.study('std1').feature('time').set('disabledphysics', {'solid/dcnt2'});

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_solid_Wcntv_p1').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_Wcntv_p1').set('scaleval', '1e-5*50.0*100000000');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*50.0');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.1,20)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('timemethod', 'genalpha');
model.sol('sol1').feature('t1').set('predictor', 'constant');
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature('fc1').set('minstep', 0.5);
model.sol('sol1').feature('t1').feature('fc1').set('useminsteprecovery', 'on');
model.sol('sol1').feature('t1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 4);
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature('fc1').set('minstep', 0.5);
model.sol('sol1').feature('t1').feature('fc1').set('useminsteprecovery', 'on');
model.sol('sol1').feature('t1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 4);
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('t1').set('tstepsgenalpha', 'manual');
model.sol('sol1').feature('t1').set('timestepgenalpha', '0.05');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 201, 0);
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('surf1').set('threshold', 'manual');
model.result('pg1').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg1').feature('surf1').set('colortable', 'Rainbow');
model.result('pg1').feature('surf1').set('colortabletrans', 'none');
model.result('pg1').feature('surf1').set('colorscalemode', 'linear');
model.result('pg1').feature('surf1').set('resolution', 'normal');
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg1').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg1').feature('surf1').feature('def').set('scale', '1');
model.result('pg1').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg1').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg1').run;
model.result('pg1').label('Deformation (Penalty)');
model.result('pg1').run;
model.result('pg1').feature('surf1').set('expr', '1');
model.result('pg1').feature('surf1').set('titletype', 'none');
model.result('pg1').feature('surf1').set('coloring', 'uniform');
model.result('pg1').feature('surf1').set('color', 'yellow');
model.result('pg1').feature('surf1').create('sel1', 'Selection');
model.result('pg1').feature('surf1').feature('sel1').selection.named('geom1_c1_dom');
model.result('pg1').run;
model.result('pg1').feature.duplicate('surf2', 'surf1');
model.result('pg1').run;
model.result('pg1').feature('surf2').set('color', 'red');
model.result('pg1').run;
model.result('pg1').feature('surf2').feature('sel1').selection.named('geom1_c2_dom');
model.result('pg1').run;
model.result('pg1').run;
model.result.export.create('anim1', 'Animation');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('plotgroup', 'pg1');
model.result.export('anim1').run;
model.result.export('anim1').set('maxframes', 100);
model.result.export('anim1').run;

model.study.create('std2');
model.study('std2').create('time', 'Transient');
model.study('std2').feature('time').setSolveFor('/physics/solid', true);
model.study('std2').label('Study 2: Augmented Lagrangian');
model.study('std2').feature('time').set('tlist', 'range(0,0.1,20)');

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'time');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_solid_Tn_p1').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_Wcntv_p1').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_Tn_p1').set('scaleval', '100000000');
model.sol('sol2').feature('v1').feature('comp1_solid_Wcntv_p1').set('scaleval', '1e-5*50.0*100000000');
model.sol('sol2').feature('v1').feature('comp1_u').set('scaleval', '1e-2*50.0');
model.sol('sol2').feature('v1').set('control', 'time');
model.sol('sol2').create('t1', 'Time');
model.sol('sol2').feature('t1').set('tlist', 'range(0,0.1,20)');
model.sol('sol2').feature('t1').set('plot', 'off');
model.sol('sol2').feature('t1').set('plotgroup', 'pg1');
model.sol('sol2').feature('t1').set('plotfreq', 'tout');
model.sol('sol2').feature('t1').set('probesel', 'all');
model.sol('sol2').feature('t1').set('probes', {});
model.sol('sol2').feature('t1').set('probefreq', 'tsteps');
model.sol('sol2').feature('t1').set('rtol', 0.001);
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol2').feature('t1').set('reacf', true);
model.sol('sol2').feature('t1').set('storeudot', true);
model.sol('sol2').feature('t1').set('endtimeinterpolation', true);
model.sol('sol2').feature('t1').set('timemethod', 'genalpha');
model.sol('sol2').feature('t1').set('predictor', 'constant');
model.sol('sol2').feature('t1').set('control', 'time');
model.sol('sol2').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('t1').create('se1', 'Segregated');
model.sol('sol2').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol2').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol2').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_u'});
model.sol('sol2').feature('t1').feature('se1').feature('ss1').set('subdtech', 'auto');
model.sol('sol2').feature('t1').feature('se1').feature('ss1').set('subminstep', 0.5);
model.sol('sol2').feature('t1').feature('se1').feature('ss1').set('usesubminsteprecovery', 'on');
model.sol('sol2').feature('t1').feature('se1').feature('ss1').set('subtermauto', 'itertol');
model.sol('sol2').feature('t1').feature('se1').feature('ss1').set('subiter', 7);
model.sol('sol2').feature('t1').feature('se1').feature('ss1').set('subntolfact', 1);
model.sol('sol2').feature('t1').feature('se1').feature('ss1').set('linsolver', 'dDef');
model.sol('sol2').feature('t1').feature('se1').feature('ss1').label('Solid Mechanics');
model.sol('sol2').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_solid_Wcntv_p1'});
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol2').feature('t1').feature('se1').create('ls1', 'LumpedStep');
model.sol('sol2').feature('t1').feature('se1').feature('ls1').set('segvar', {'comp1_solid_Tn_p1'});
model.sol('sol2').feature('t1').feature('se1').set('maxsegiter', 15);
model.sol('sol2').feature('t1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').feature('t1').set('tstepsgenalpha', 'manual');
model.sol('sol2').feature('t1').set('timestepgenalpha', '0.05');
model.sol('sol2').feature('t1').feature('se1').set('maxsegiter', 50);
model.sol('sol2').runAll;

model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').set('data', 'dset2');
model.result('pg2').setIndex('looplevel', 201, 0);
model.result('pg2').set('defaultPlotID', 'stress');
model.result('pg2').label('Stress (solid)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg2').feature('surf1').set('threshold', 'manual');
model.result('pg2').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg2').feature('surf1').set('colortable', 'Rainbow');
model.result('pg2').feature('surf1').set('colortabletrans', 'none');
model.result('pg2').feature('surf1').set('colorscalemode', 'linear');
model.result('pg2').feature('surf1').set('resolution', 'normal');
model.result('pg2').feature('surf1').set('colortable', 'Prism');
model.result('pg2').feature('surf1').create('def', 'Deform');
model.result('pg2').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg2').feature('surf1').feature('def').set('scale', '1');
model.result('pg2').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg2').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg2').run;
model.result('pg2').label('Deformation (AugLag)');
model.result('pg2').run;
model.result('pg2').feature('surf1').set('expr', '1');
model.result('pg2').feature('surf1').set('titletype', 'none');
model.result('pg2').feature('surf1').set('coloring', 'uniform');
model.result('pg2').feature('surf1').set('color', 'yellow');
model.result('pg2').feature('surf1').create('sel1', 'Selection');
model.result('pg2').feature('surf1').feature('sel1').selection.named('geom1_c1_dom');
model.result('pg2').run;
model.result('pg2').feature.duplicate('surf2', 'surf1');
model.result('pg2').run;
model.result('pg2').feature('surf2').set('color', 'red');
model.result('pg2').run;
model.result('pg2').feature('surf2').feature('sel1').selection.named('geom1_c2_dom');
model.result('pg2').run;
model.result('pg2').run;
model.result.export.create('anim2', 'Animation');
model.result.export('anim2').set('target', 'player');
model.result.export('anim2').set('plotgroup', 'pg2');
model.result.export('anim2').run;
model.result.export('anim2').set('maxframes', 100);
model.result.export('anim2').run;
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('Energy Balance');
model.result('pg3').set('titletype', 'label');
model.result('pg3').create('glob1', 'Global');
model.result('pg3').feature('glob1').set('markerpos', 'datapoints');
model.result('pg3').feature('glob1').set('linewidth', 'preference');
model.result('pg3').feature('glob1').set('expr', {'solid.Wk_tot'});
model.result('pg3').feature('glob1').set('descr', {'Total kinetic energy'});
model.result('pg3').feature('glob1').set('unit', {'J'});
model.result('pg3').feature('glob1').set('expr', {'solid.Wk_tot' 'solid.Wh_tot'});
model.result('pg3').feature('glob1').set('descr', {'Total kinetic energy' 'Total stored energy'});
model.result('pg3').feature('glob1').set('expr', {'solid.Wk_tot' 'solid.Wh_tot' 'solid.Wd_tot'});
model.result('pg3').feature('glob1').set('descr', {'Total kinetic energy' 'Total stored energy' 'Total energy dissipation'});
model.result('pg3').run;
model.result('pg3').feature('glob1').setIndex('unit', 'kJ', 0);
model.result('pg3').feature('glob1').setIndex('unit', 'kJ', 1);
model.result('pg3').feature('glob1').setIndex('unit', 'kJ', 2);
model.result('pg3').feature('glob1').setIndex('expr', 'solid.Wk_tot+solid.Wh_tot+solid.Wd_tot', 3);
model.result('pg3').feature('glob1').setIndex('unit', 'kJ', 3);
model.result('pg3').feature('glob1').setIndex('descr', 'Total energy', 3);
model.result('pg3').feature('glob1').set('linewidth', 2);
model.result('pg3').feature.duplicate('glob2', 'glob1');
model.result('pg3').run;
model.result('pg3').feature('glob2').set('data', 'dset2');
model.result('pg3').feature('glob2').set('linestyle', 'dashed');
model.result('pg3').feature('glob2').set('linecolor', 'cyclereset');
model.result('pg3').feature('glob2').set('legend', false);
model.result('pg3').run;
model.result('pg3').set('ylabelactive', true);
model.result('pg3').set('ylabel', 'Energy (kJ)');
model.result('pg3').set('legendpos', 'middleright');
model.result('pg3').run;
model.result.evaluationGroup.create('eg1', 'EvaluationGroup');
model.result.evaluationGroup('eg1').label('Linear Momentum, x (Penalty)');
model.result.evaluationGroup('eg1').create('int1', 'IntSurface');
model.result.evaluationGroup('eg1').feature('int1').set('intvolume', true);
model.result.evaluationGroup('eg1').feature('int1').selection.named('geom1_c1_dom');
model.result.evaluationGroup('eg1').feature('int1').setIndex('expr', 'solid.rho*ut*solid.d', 0);
model.result.evaluationGroup('eg1').feature('int1').setIndex('unit', 'kg*m/s', 0);
model.result.evaluationGroup('eg1').feature('int1').setIndex('descr', 'Ring 1', 0);
model.result.evaluationGroup('eg1').feature.duplicate('int2', 'int1');
model.result.evaluationGroup('eg1').feature('int2').selection.named('geom1_c2_dom');
model.result.evaluationGroup('eg1').feature('int2').setIndex('unit', 'kg*m/s', 0);
model.result.evaluationGroup('eg1').feature('int2').setIndex('descr', 'Ring 2', 0);
model.result.evaluationGroup('eg1').feature.duplicate('int3', 'int2');
model.result.evaluationGroup('eg1').feature('int3').selection.all;
model.result.evaluationGroup('eg1').feature('int3').setIndex('unit', 'kg*m/s', 0);
model.result.evaluationGroup('eg1').feature('int3').setIndex('descr', 'Total', 0);
model.result.evaluationGroup('eg1').run;
model.result.evaluationGroup.duplicate('eg2', 'eg1');
model.result.evaluationGroup('eg2').label('Linear Momentum, x (AugLag)');
model.result.evaluationGroup('eg2').set('data', 'dset2');
model.result.evaluationGroup('eg2').run;
model.result.evaluationGroup.duplicate('eg3', 'eg1');
model.result.evaluationGroup('eg3').label('Linear Momentum, y  (Penalty)');
model.result.evaluationGroup('eg3').feature('int1').setIndex('expr', 'solid.rho*vt*solid.d', 0);
model.result.evaluationGroup('eg3').feature('int2').setIndex('expr', 'solid.rho*vt*solid.d', 0);
model.result.evaluationGroup('eg3').feature('int3').setIndex('expr', 'solid.rho*vt*solid.d', 0);
model.result.evaluationGroup('eg3').run;
model.result.evaluationGroup.duplicate('eg4', 'eg3');
model.result.evaluationGroup('eg4').label('Linear Momentum, y (AugLag)');
model.result.evaluationGroup('eg4').set('data', 'dset2');
model.result.evaluationGroup('eg4').run;
model.result.evaluationGroup.duplicate('eg5', 'eg1');
model.result.evaluationGroup('eg5').label('Angular Momentum (Penalty)');
model.result.evaluationGroup('eg5').feature('int1').setIndex('expr', 'solid.rho*(x*vt-y*ut)*solid.d', 0);
model.result.evaluationGroup('eg5').feature('int1').setIndex('unit', 'kg*m^2/s', 0);
model.result.evaluationGroup('eg5').feature('int1').setIndex('descr', 'Ring 1', 0);
model.result.evaluationGroup('eg5').feature('int2').setIndex('expr', 'solid.rho*(x*vt-y*ut)*solid.d', 0);
model.result.evaluationGroup('eg5').feature('int2').setIndex('unit', 'kg*m^2/s', 0);
model.result.evaluationGroup('eg5').feature('int2').setIndex('descr', 'Ring 2', 0);
model.result.evaluationGroup('eg5').feature('int3').setIndex('expr', 'solid.rho*(x*vt-y*ut)*solid.d', 0);
model.result.evaluationGroup('eg5').feature('int3').setIndex('unit', 'kg*m^2/s', 0);
model.result.evaluationGroup('eg5').feature('int3').setIndex('descr', 'Total', 0);
model.result.evaluationGroup('eg5').run;
model.result.evaluationGroup.duplicate('eg6', 'eg5');
model.result.evaluationGroup('eg6').label('Angular Momentum (AugLag)');
model.result.evaluationGroup('eg6').set('data', 'dset2');
model.result.evaluationGroup('eg6').run;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Linear Momentum, x');
model.result('pg4').set('titletype', 'label');
model.result('pg4').set('ylabelactive', true);
model.result('pg4').set('ylabel', 'Linear momentum (kg*m/s)');
model.result('pg4').create('tblp1', 'Table');
model.result('pg4').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg4').feature('tblp1').set('linewidth', 'preference');
model.result('pg4').feature('tblp1').set('source', 'evaluationgroup');
model.result('pg4').feature('tblp1').set('linewidth', 2);
model.result('pg4').feature('tblp1').set('legend', true);
model.result('pg4').feature.duplicate('tblp2', 'tblp1');
model.result('pg4').run;
model.result('pg4').feature('tblp2').set('evaluationgroup', 'eg2');
model.result('pg4').feature('tblp2').set('linestyle', 'dashed');
model.result('pg4').feature('tblp2').set('linecolor', 'cyclereset');
model.result('pg4').feature('tblp2').set('legend', false);
model.result('pg4').run;
model.result('pg4').run;
model.result.duplicate('pg5', 'pg4');
model.result('pg5').run;
model.result('pg5').label('Linear Momentum, y');
model.result('pg5').run;
model.result('pg5').feature('tblp1').set('evaluationgroup', 'eg3');
model.result('pg5').run;
model.result('pg5').feature('tblp2').set('evaluationgroup', 'eg4');
model.result('pg5').run;
model.result('pg5').run;
model.result.duplicate('pg6', 'pg5');
model.result('pg6').run;
model.result('pg6').label('Angular Momentum');
model.result('pg6').set('ylabel', 'Angular momentum (kg*m^2/s)');
model.result('pg6').run;
model.result('pg6').feature('tblp1').set('evaluationgroup', 'eg5');
model.result('pg6').run;
model.result('pg6').feature('tblp2').set('evaluationgroup', 'eg6');
model.result('pg6').run;
model.result('pg1').run;
model.result.duplicate('pg7', 'pg1');
model.result('pg7').run;
model.result('pg7').set('titletype', 'none');
model.result('pg7').set('edges', false);
model.result('pg7').setIndex('looplevel', 1, 0);
model.result('pg7').create('line1', 'Line');
model.result('pg7').feature('line1').set('expr', '1');
model.result('pg7').feature('line1').set('coloring', 'uniform');
model.result('pg7').feature('line1').set('color', 'black');
model.result('pg7').feature('line1').set('inheritplot', 'surf1');
model.result('pg7').feature('line1').set('inheritcolor', false);
model.result('pg7').feature('line1').set('inheritrange', false);
model.result('pg7').feature('line1').set('inheritheightscale', false);
model.result('pg7').feature('line1').set('inherittubescale', false);
model.result('pg7').feature('line1').create('def1', 'Deform');
model.result('pg7').run;
model.result('pg7').run;
model.result('pg7').feature.duplicate('surf3', 'surf1');
model.result('pg7').feature.duplicate('surf4', 'surf2');
model.result('pg7').feature.duplicate('line2', 'line1');
model.result('pg7').run;
model.result('pg7').feature('surf3').set('data', 'dset1');
model.result('pg7').feature('surf3').setIndex('looplevel', 51, 0);
model.result('pg7').run;
model.result('pg7').feature('surf4').set('data', 'dset1');
model.result('pg7').feature('surf4').setIndex('looplevel', 51, 0);
model.result('pg7').run;
model.result('pg7').feature('line2').set('data', 'dset1');
model.result('pg7').feature('line2').setIndex('looplevel', 51, 0);
model.result('pg7').run;
model.result('pg7').feature.duplicate('surf5', 'surf3');
model.result('pg7').feature.duplicate('surf6', 'surf4');
model.result('pg7').feature.duplicate('line3', 'line2');
model.result('pg7').run;
model.result('pg7').feature('surf5').setIndex('looplevel', 101, 0);
model.result('pg7').run;
model.result('pg7').feature('surf6').setIndex('looplevel', 101, 0);
model.result('pg7').run;
model.result('pg7').feature('line3').setIndex('looplevel', 101, 0);
model.result('pg7').run;
model.result('pg7').feature.duplicate('surf7', 'surf5');
model.result('pg7').feature.duplicate('surf8', 'surf6');
model.result('pg7').feature.duplicate('line4', 'line3');
model.result('pg7').run;
model.result('pg7').feature('surf7').setIndex('looplevel', 151, 0);
model.result('pg7').run;
model.result('pg7').feature('surf8').setIndex('looplevel', 151, 0);
model.result('pg7').run;
model.result('pg7').feature('line4').setIndex('looplevel', 151, 0);
model.result('pg7').run;
model.result('pg7').feature.duplicate('surf9', 'surf7');
model.result('pg7').feature.duplicate('surf10', 'surf8');
model.result('pg7').feature.duplicate('line5', 'line4');
model.result('pg7').run;
model.result('pg7').feature('surf9').setIndex('looplevel', 201, 0);
model.result('pg7').run;
model.result('pg7').feature('surf10').setIndex('looplevel', 201, 0);
model.result('pg7').run;
model.result('pg7').feature('line5').setIndex('looplevel', 201, 0);
model.result('pg7').run;
model.result('pg7').run;
model.result.remove('pg7');
model.result('pg1').run;
model.result('pg1').setIndex('looplevel', 61, 0);
model.result('pg1').run;

model.title('Impact Between Two Soft Rings');

model.description('In this conceptual example, the soft impact between two elastic rings is modeled using the Solid Mechanics interface. One of the rings is given an initial velocity to initiate the impact event. Both rings are unconstrained and not subjected to any external forces. Contact is modeled using a viscous formulation with both the penalty and augmented Lagrangian techniques. The conservation of linear and angular momentum as well as energy is verified.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('ring_impact.mph');

model.modelNode.label('Components');

out = model;
