function out = model
%
% beam_solid_connection.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Structural_Mechanics_Module/Beams_and_Shells');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');
model.physics.create('beam', 'HermitianBeam', 'geom1');
model.physics('beam').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/solid', true);
model.study('std1').feature('stat').setSolveFor('/physics/beam', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('L', '1 [m]', 'Length of the beam');
model.param.set('W', '0.2 [m]', 'Width');
model.param.set('H', '0.1 [m]', 'Height');
model.param.set('R', '0.015 [m]', 'Radius of circle');
model.param.set('A', '7.64E-04 [m^2]', 'Cross-section area of the beam');
model.param.set('Izz', '8.01377E-07 [m^4]', 'Moment of inertia about local z axis');
model.param.set('ez', '0 [m]', 'Distance to shear center in local z direction');
model.param.set('Iyy', '8.48903E-08 [m^4]', 'Moment of inertia about local y axis');
model.param.set('ey', '0 [m]', 'Distance to shear center in local y direction');
model.param.set('J', '6.72659E-09 [m^4]', 'Torsional constant');
model.param.set('hy', '0.08 [m]', 'Section height in local y direction');
model.param.set('hz', '0.046 [m]', 'Section height in local z direction');
model.param.set('Wt', '8.34675E-07 [m^3]', 'Torsional section modulus');
model.param.set('muy', '2.913993626 [1]', 'Maximum shear stress factor in local y direction');
model.param.set('muz', '2.438020494 [1]', 'Maximum shear stress factor in local z direction');

model.group.create('lg1', 'LoadGroup');
model.group('lg1').label('Load Group Mx');
model.group('lg1').paramName('lgMx');
model.group.create('lg2', 'LoadGroup');
model.group('lg2').label('Load Group My');
model.group('lg2').paramName('lgMy');
model.group.create('lg3', 'LoadGroup');
model.group('lg3').label('Load Group Mz');
model.group('lg3').paramName('lgMz');
model.group.create('lg4', 'LoadGroup');
model.group('lg4').label('Load Group Fx');
model.group('lg4').paramName('lgFx');
model.group.create('lg5', 'LoadGroup');
model.group('lg5').label('Load Group Fy');
model.group('lg5').paramName('lgFy');
model.group.create('lg6', 'LoadGroup');
model.group('lg6').label('Load Group Fz');
model.group('lg6').paramName('lgFz');

model.geom('geom1').create('pol1', 'Polygon');
model.geom('geom1').feature('pol1').set('source', 'vectors');
model.geom('geom1').feature('pol1').set('x', 'L 2*L');
model.geom('geom1').feature('pol1').set('y', '0 0');
model.geom('geom1').feature('pol1').set('z', '0 0');
model.geom('geom1').run('pol1');
model.geom('geom1').create('wp1', 'WorkPlane');
model.geom('geom1').feature('wp1').set('unite', true);
model.geom('geom1').feature('wp1').set('quickplane', 'zy');
model.geom('geom1').run('wp1');
model.geom.load({'part1'}, 'Structural_Mechanics_Module/Beams/European_Standard/IPE_beam.mph', {'part1'});
model.geom('geom1').feature('wp1').geom.create('pi1', 'PartInstance');
model.geom('geom1').feature('wp1').geom.feature('pi1').set('selkeepnoncontr', false);
model.geom('geom1').feature('wp1').geom.feature('pi1').set('part', 'part1');
model.geom('geom1').feature('wp1').geom.run('pi1');
model.geom('geom1').run('wp1');
model.geom('geom1').feature.create('ext1', 'Extrude');
model.geom('geom1').feature('ext1').setIndex('distance', 'L', 0);
model.geom('geom1').feature('ext1').set('reverse', true);
model.geom('geom1').run('ext1');
model.geom('geom1').create('cyl1', 'Cylinder');
model.geom('geom1').feature('cyl1').set('r', 'R');
model.geom('geom1').feature('cyl1').set('h', 'L');
model.geom('geom1').feature('cyl1').set('pos', {'L/2' '0' '-L/2'});
model.geom('geom1').run('cyl1');
model.geom('geom1').create('dif1', 'Difference');
model.geom('geom1').feature('dif1').selection('input').set({'ext1'});
model.geom('geom1').feature('dif1').selection('input2').set({'cyl1'});
model.geom('geom1').run('dif1');
model.geom('geom1').create('copy1', 'Copy');
model.geom('geom1').feature('copy1').selection('input').set({'dif1' 'pol1'});
model.geom('geom1').feature('copy1').set('disply', '0.3*L');
model.geom('geom1').run('copy1');
model.geom('geom1').create('wp2', 'WorkPlane');
model.geom('geom1').feature('wp2').set('unite', true);
model.geom('geom1').feature('wp2').set('quickplane', 'zy');
model.geom('geom1').feature('wp2').set('quickx', '0.45*L');
model.geom('geom1').run('wp2');
model.geom('geom1').feature.duplicate('wp3', 'wp2');
model.geom('geom1').feature('wp3').set('quickx', '0.55*L');
model.geom('geom1').run('wp3');
model.geom('geom1').create('par1', 'Partition');
model.geom('geom1').feature('par1').selection('input').set({'copy1(1)' 'dif1'});
model.geom('geom1').feature('par1').set('partitionwith', 'workplane');
model.geom('geom1').feature('par1').set('workplane', 'wp2');
model.geom('geom1').run('par1');
model.geom('geom1').feature.duplicate('par2', 'par1');
model.geom('geom1').feature('par2').selection('input').set({'par1'});
model.geom('geom1').feature('par2').set('workplane', 'wp3');
model.geom('geom1').run('par2');
model.geom('geom1').create('uni1', 'Union');
model.geom('geom1').feature('uni1').selection('input').set({'par2(2)'});
model.geom('geom1').run('uni1');
model.geom('geom1').create('uni2', 'Union');
model.geom('geom1').feature('uni2').selection('input').set({'par2(1)'});
model.geom('geom1').run('uni2');
model.geom('geom1').feature('fin').set('action', 'assembly');
model.geom('geom1').run('fin');
model.geom('geom1').create('sel1', 'ExplicitSelection');
model.geom('geom1').feature('sel1').label('Fixed End');
model.geom('geom1').feature('sel1').selection('selection').init(2);
model.geom('geom1').feature('sel1').selection('selection').set('fin', [1 69]);
model.geom('geom1').run('sel1');
model.geom('geom1').create('sel2', 'ExplicitSelection');
model.geom('geom1').feature('sel2').label('Solid Beam Interface');
model.geom('geom1').feature('sel2').selection('selection').init(2);
model.geom('geom1').feature('sel2').selection('selection').set('fin', [68 136]);
model.geom('geom1').run('sel2');
model.geom('geom1').create('sel3', 'ExplicitSelection');
model.geom('geom1').feature('sel3').label('Free End');
model.geom('geom1').feature('sel3').selection('selection').init(0);
model.geom('geom1').feature('sel3').selection('selection').set('fin', [178 180]);

model.cpl.create('genext1', 'GeneralExtrusion', 'geom1');

model.geom('geom1').run;

model.cpl('genext1').selection.set([4 5 6]);
model.cpl('genext1').set('dstmap', {'X' 'Y+0.3*L' 'Z'});
model.cpl('genext1').set('srcframe', 'material');

model.material.create('mat1', 'Common', '');
model.material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat1').propertyGroup('Enu').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup('Enu').func.create('int2', 'Interpolation');
model.material('mat1').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat1').propertyGroup.create('ElastoplasticModel', 'Elastoplastic material model');
model.material('mat1').propertyGroup('ElastoplasticModel').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('Ludwik', 'Ludwik');
model.material('mat1').propertyGroup('Ludwik').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('JohnsonCook', 'Johnson-Cook');
model.material('mat1').propertyGroup.create('Swift', 'Swift');
model.material('mat1').propertyGroup.create('Voce', 'Voce');
model.material('mat1').propertyGroup('Voce').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('HockettSherby', 'Hockett-Sherby');
model.material('mat1').propertyGroup('HockettSherby').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('ArmstrongFrederick', 'Armstrong-Frederick');
model.material('mat1').propertyGroup('ArmstrongFrederick').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('Norton', 'Norton');
model.material('mat1').propertyGroup.create('Garofalo', 'Garofalo (hyperbolic sine)');
model.material('mat1').propertyGroup.create('ChabocheViscoplasticity', 'Chaboche viscoplasticity');
model.material('mat1').label('Structural steel');
model.material('mat1').set('family', 'custom');
model.material('mat1').set('customspecular', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat1').set('customdiffuse', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat1').set('customambient', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat1').set('noise', true);
model.material('mat1').set('fresnel', 0.9);
model.material('mat1').set('roughness', 0.3);
model.material('mat1').set('metallic', 0);
model.material('mat1').set('pearl', 0);
model.material('mat1').set('diffusewrap', 0);
model.material('mat1').set('clearcoat', 0);
model.material('mat1').set('reflectance', 0);
model.material('mat1').propertyGroup('def').set('lossfactor', '0.02');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('heatcapacity', '475[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]'});
model.material('mat1').propertyGroup('def').set('density', '7850[kg/m^3]');
model.material('mat1').propertyGroup('Enu').func('int1').set('funcname', 'E');
model.material('mat1').propertyGroup('Enu').func('int1').set('table', {'293.15' '200e9'; '793.15' '166.6e9'});
model.material('mat1').propertyGroup('Enu').func('int1').set('extrap', 'linear');
model.material('mat1').propertyGroup('Enu').func('int1').set('fununit', {'Pa'});
model.material('mat1').propertyGroup('Enu').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Enu').func('int2').set('funcname', 'nu');
model.material('mat1').propertyGroup('Enu').func('int2').set('table', {'293.15' '0.30'; '793.15' '0.315'});
model.material('mat1').propertyGroup('Enu').func('int2').set('extrap', 'linear');
model.material('mat1').propertyGroup('Enu').func('int2').set('fununit', {'1'});
model.material('mat1').propertyGroup('Enu').func('int2').set('argunit', {'K'});
model.material('mat1').propertyGroup('Enu').set('E', 'E(T)');
model.material('mat1').propertyGroup('Enu').set('nu', 'nu(T)');
model.material('mat1').propertyGroup('Enu').addInput('temperature');
model.material('mat1').propertyGroup('Murnaghan').set('l', '-3.0e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('m', '-6.2e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('n', '-7.2e11[Pa]');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmags', '350[MPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('Et', '1.045[GPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('Ek', '1.045[GPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmagh', '1.050[GPa]*epe*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').addInput('temperature');
model.material('mat1').propertyGroup('ElastoplasticModel').addInput('effectiveplasticstrain');
model.material('mat1').propertyGroup('Ludwik').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('Ludwik').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('Ludwik').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('Ludwik').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Ludwik').set('k_lud', '560[MPa]*a(T)');
model.material('mat1').propertyGroup('Ludwik').set('n_lud', '0.61');
model.material('mat1').propertyGroup('Ludwik').addInput('temperature');
model.material('mat1').propertyGroup('JohnsonCook').set('k_jcook', '560[MPa]');
model.material('mat1').propertyGroup('JohnsonCook').set('n_jcook', '0.61');
model.material('mat1').propertyGroup('JohnsonCook').set('C_jcook', '0.12');
model.material('mat1').propertyGroup('JohnsonCook').set('epet0_jcook', '1[1/s]');
model.material('mat1').propertyGroup('JohnsonCook').set('m_jcook', '0.6');
model.material('mat1').propertyGroup('Swift').set('e0_swi', '0.021');
model.material('mat1').propertyGroup('Swift').set('n_swi', '0.2');
model.material('mat1').propertyGroup('Voce').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('Voce').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('Voce').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('Voce').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Voce').set('sigma_voc', '249[MPa]*a(T)');
model.material('mat1').propertyGroup('Voce').set('beta_voc', '9.3');
model.material('mat1').propertyGroup('Voce').addInput('temperature');
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('HockettSherby').set('sigma_hoc', '684[MPa]*a(T)');
model.material('mat1').propertyGroup('HockettSherby').set('m_hoc', '3.9');
model.material('mat1').propertyGroup('HockettSherby').set('n_hoc', '0.85');
model.material('mat1').propertyGroup('HockettSherby').addInput('temperature');
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('ArmstrongFrederick').set('Ck', '2.070[GPa]*a(T)');
model.material('mat1').propertyGroup('ArmstrongFrederick').set('gammak', '8.0');
model.material('mat1').propertyGroup('ArmstrongFrederick').addInput('temperature');
model.material('mat1').propertyGroup('Norton').set('A_nor', '1.2e-15[1/s]');
model.material('mat1').propertyGroup('Norton').set('sigRef_nor', '1[MPa]');
model.material('mat1').propertyGroup('Norton').set('n_nor', '4.5');
model.material('mat1').propertyGroup('Garofalo').set('A_gar', '1e-6[1/s]');
model.material('mat1').propertyGroup('Garofalo').set('sigRef_gar', '100[MPa]');
model.material('mat1').propertyGroup('Garofalo').set('n_gar', '4.6');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('A_cha', '1');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('sigRef_cha', '490[MPa]');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('n_cha', '9');
model.material.create('matlnk1', 'Link', 'comp1');
model.material.create('matlnk2', 'Link', 'comp1');
model.material('matlnk2').selection.geom('geom1', 1);
model.material('matlnk2').selection.set([309 310]);

model.physics('solid').prop('ShapeProperty').set('order_displacement', 1);
model.physics('solid').create('fix1', 'Fixed', 2);
model.physics('solid').feature('fix1').selection.named('geom1_sel1');
model.physics('beam').selection.set([309 310]);
model.physics('beam').feature('csd1').set('area', 'A');
model.physics('beam').feature('csd1').set('Izz', 'Izz');
model.physics('beam').feature('csd1').set('ez', 'ez');
model.physics('beam').feature('csd1').set('Iyy', 'Iyy');
model.physics('beam').feature('csd1').set('ey', 'ey');
model.physics('beam').feature('csd1').set('J_beam', 'J');
model.physics('beam').feature('csd1').set('hy', 'hy');
model.physics('beam').feature('csd1').set('hz', 'hz');
model.physics('beam').feature('csd1').set('Wt', 'Wt');
model.physics('beam').feature('csd1').set('muy', 'muy');
model.physics('beam').feature('csd1').set('muz', 'muz');
model.physics('beam').feature('csd1').feature('so1').set('OrientationMethod', 'vector_beam');
model.physics('beam').feature('csd1').feature('so1').set('vector_beam', [0 1 0]);
model.physics('beam').create('pl1', 'PointLoad', 0);
model.physics('beam').feature('pl1').label('Point Load, Mx');
model.physics('beam').feature('pl1').selection.named('geom1_sel3');
model.physics('beam').feature('pl1').set('Mp', [1 0 0]);
model.physics('beam').feature('pl1').set('loadGroup', 'lg1');
model.physics('beam').create('pl2', 'PointLoad', 0);
model.physics('beam').feature('pl2').label('Point Load, My');
model.physics('beam').feature('pl2').selection.named('geom1_sel3');
model.physics('beam').feature('pl2').set('Mp', [0 1 0]);
model.physics('beam').feature('pl2').set('loadGroup', 'lg2');
model.physics('beam').create('pl3', 'PointLoad', 0);
model.physics('beam').feature('pl3').selection.named('geom1_sel3');
model.physics('beam').feature('pl3').label('Point Load, Mz');
model.physics('beam').feature('pl3').set('Mp', [0 0 1]);
model.physics('beam').feature('pl3').set('loadGroup', 'lg3');
model.physics('beam').create('pl4', 'PointLoad', 0);
model.physics('beam').feature('pl4').label('Point Load, Fx');
model.physics('beam').feature('pl4').selection.named('geom1_sel3');
model.physics('beam').feature('pl4').set('Fp', [1 0 0]);
model.physics('beam').feature('pl4').set('loadGroup', 'lg4');
model.physics('beam').create('pl5', 'PointLoad', 0);
model.physics('beam').feature('pl5').label('Point Load, Fy');
model.physics('beam').feature('pl5').selection.named('geom1_sel3');
model.physics('beam').feature('pl5').set('Fp', [0 1 0]);
model.physics('beam').feature('pl5').set('loadGroup', 'lg5');
model.physics('beam').create('pl6', 'PointLoad', 0);
model.physics('beam').feature('pl6').label('Point Load, Fz');
model.physics('beam').feature('pl6').selection.named('geom1_sel3');
model.physics('beam').feature('pl6').set('Fp', [0 0 1]);
model.physics('beam').feature('pl6').set('loadGroup', 'lg6');

model.multiphysics.create('sbc1', 'SolidBeamConnection3D', 'geom1', -1);
model.multiphysics('sbc1').label('Solid-Beam Connection Transition');
model.multiphysics('sbc1').set('connectionSettings', 'BeamPointsTransition');
model.multiphysics('sbc1').set('selectionControl', true);
model.multiphysics('sbc1').selection('bndPointSolidSelectionTran').set([136]);
model.multiphysics('sbc1').selection('bndPointBeamSelectionTran').set([179]);
model.multiphysics.create('sbc2', 'SolidBeamConnection3D', 'geom1', -1);
model.multiphysics('sbc2').label('Solid-Beam Connection General');
model.multiphysics('sbc2').set('selectionControl', true);
model.multiphysics('sbc2').selection('bndPointSolidSelection').set([68]);
model.multiphysics('sbc2').selection('bndPointBeamSelection').set([177]);

model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.set([1 68 69 136]);
model.mesh('mesh1').feature('ftri1').create('size1', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('ftri1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 0.002);
model.mesh('mesh1').run('ftri1');
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe1').selection.set([1 3 4 6]);
model.mesh('mesh1').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis1').selection.set([1 4]);
model.mesh('mesh1').feature('swe1').feature('dis1').set('type', 'explicit');
model.mesh('mesh1').feature('swe1').feature('dis1').set('explicit', 'range(0,0.015,1)');
model.mesh('mesh1').run('swe1');
model.mesh('mesh1').feature('swe1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis2').selection.set([3 6]);
model.mesh('mesh1').feature('swe1').feature('dis2').set('type', 'explicit');
model.mesh('mesh1').feature('swe1').feature('dis2').set('explicit', 'range(0,0.015,0.92) range(0.92,0.005,1)');
model.mesh('mesh1').feature('swe1').feature('dis2').set('reverse', true);
model.mesh('mesh1').run('swe1');
model.mesh('mesh1').create('ftet1', 'FreeTet');
model.mesh('mesh1').feature('ftet1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('ftet1').selection.set([2 5]);
model.mesh('mesh1').feature('ftet1').create('size1', 'Size');
model.mesh('mesh1').feature('ftet1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('ftet1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('ftet1').feature('size1').set('hmax', 0.002);
model.mesh('mesh1').run('ftet1');
model.mesh('mesh1').create('edg1', 'Edge');
model.mesh('mesh1').feature('edg1').selection.set([309 310]);
model.mesh('mesh1').feature('edg1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('edg1').feature('dis1').set('numelem', 10);
model.mesh('mesh1').run;

model.study('std1').feature('stat').setEntry('activate', 'solid', false);
model.study('std1').feature('stat').setEntry('activate', 'beam', false);
model.study('std1').feature('stat').setEntry('activateCoupling', 'sbc2', false);
model.study('std1').feature('stat').set('useinitsol', true);
model.study('std1').create('stat2', 'Stationary');
model.study('std1').feature('stat2').set('useloadcase', true);
model.study('std1').feature('stat2').setIndex('loadcase', 'Load case 1', 0);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 0, 0);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 0, 0);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 0, 1);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 0, 1);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 0, 2);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 0, 2);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 0, 3);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 0, 3);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 0, 4);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 0, 4);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 0, 5);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 0, 5);
model.study('std1').feature('stat2').setIndex('loadcase', 'Load case 1', 0);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 0, 0);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 0, 0);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 0, 1);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 0, 1);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 0, 2);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 0, 2);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 0, 3);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 0, 3);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 0, 4);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 0, 4);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 0, 5);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 0, 5);
model.study('std1').feature('stat2').setIndex('loadcase', 'Twisting Moment', 0);
model.study('std1').feature('stat2').setIndex('loadgroup', true, 0, 0);
model.study('std1').feature('stat2').setIndex('loadcase', 'Load case 1', 1);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 1, 0);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 1, 0);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 1, 1);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 1, 1);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 1, 2);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 1, 2);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 1, 3);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 1, 3);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 1, 4);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 1, 4);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 1, 5);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 1, 5);
model.study('std1').feature('stat2').setIndex('loadcase', 'Load case 1', 1);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 1, 0);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 1, 0);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 1, 1);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 1, 1);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 1, 2);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 1, 2);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 1, 3);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 1, 3);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 1, 4);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 1, 4);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 1, 5);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 1, 5);
model.study('std1').feature('stat2').setIndex('loadcase', 'Bending Moment Y', 1);
model.study('std1').feature('stat2').setIndex('loadgroup', true, 1, 1);
model.study('std1').feature('stat2').setIndex('loadcase', 'Load case 1', 2);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 2, 0);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 2, 0);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 2, 1);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 2, 1);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 2, 2);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 2, 2);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 2, 3);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 2, 3);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 2, 4);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 2, 4);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 2, 5);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 2, 5);
model.study('std1').feature('stat2').setIndex('loadcase', 'Load case 1', 2);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 2, 0);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 2, 0);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 2, 1);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 2, 1);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 2, 2);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 2, 2);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 2, 3);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 2, 3);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 2, 4);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 2, 4);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 2, 5);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 2, 5);
model.study('std1').feature('stat2').setIndex('loadcase', 'Bending Moment Z', 2);
model.study('std1').feature('stat2').setIndex('loadgroup', true, 2, 2);
model.study('std1').feature('stat2').setIndex('loadcase', 'Load case 1', 3);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 3, 0);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 3, 0);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 3, 1);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 3, 1);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 3, 2);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 3, 2);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 3, 3);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 3, 3);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 3, 4);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 3, 4);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 3, 5);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 3, 5);
model.study('std1').feature('stat2').setIndex('loadcase', 'Load case 1', 3);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 3, 0);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 3, 0);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 3, 1);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 3, 1);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 3, 2);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 3, 2);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 3, 3);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 3, 3);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 3, 4);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 3, 4);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 3, 5);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 3, 5);
model.study('std1').feature('stat2').setIndex('loadcase', 'Axial Force', 3);
model.study('std1').feature('stat2').setIndex('loadgroup', true, 3, 3);
model.study('std1').feature('stat2').setIndex('loadcase', 'Load case 1', 4);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 4, 0);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 4, 0);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 4, 1);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 4, 1);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 4, 2);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 4, 2);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 4, 3);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 4, 3);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 4, 4);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 4, 4);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 4, 5);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 4, 5);
model.study('std1').feature('stat2').setIndex('loadcase', 'Load case 1', 4);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 4, 0);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 4, 0);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 4, 1);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 4, 1);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 4, 2);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 4, 2);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 4, 3);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 4, 3);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 4, 4);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 4, 4);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 4, 5);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 4, 5);
model.study('std1').feature('stat2').setIndex('loadcase', 'Transverse Force Y', 4);
model.study('std1').feature('stat2').setIndex('loadgroup', true, 4, 4);
model.study('std1').feature('stat2').setIndex('loadcase', 'Load case 1', 5);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 5, 0);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 5, 0);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 5, 1);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 5, 1);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 5, 2);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 5, 2);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 5, 3);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 5, 3);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 5, 4);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 5, 4);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 5, 5);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 5, 5);
model.study('std1').feature('stat2').setIndex('loadcase', 'Load case 1', 5);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 5, 0);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 5, 0);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 5, 1);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 5, 1);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 5, 2);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 5, 2);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 5, 3);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 5, 3);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 5, 4);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 5, 4);
model.study('std1').feature('stat2').setIndex('loadgroup', false, 5, 5);
model.study('std1').feature('stat2').setIndex('loadgroupweight', '1.0', 5, 5);
model.study('std1').feature('stat2').setIndex('loadcase', 'Transverse Force Z', 5);
model.study('std1').feature('stat2').setIndex('loadgroup', true, 5, 5);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'stat2');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('initsoluse', 'sol2');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'stat2');
model.sol('sol1').create('s2', 'Stationary');
model.sol('sol1').feature('s2').create('p1', 'Parametric');
model.sol('sol1').feature('s2').feature.remove('pDef');
model.sol('sol1').feature('s2').feature('p1').set('control', 'stat2');
model.sol('sol1').feature('s2').set('control', 'stat2');
model.sol('sol1').feature('s2').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s2').create('seDef', 'Segregated');
model.sol('sol1').feature('s2').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s2').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s2').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s2').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s2').feature.remove('fcDef');
model.sol('sol1').feature('s2').feature.remove('seDef');
model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('v1').set('control', 'user');
model.sol('sol1').feature('v2').set('control', 'user');
model.sol('sol1').feature('v2').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_u').set('scaleval', '1.0e-10');
model.sol('sol1').feature('v2').feature('comp1_u2').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_u2').set('scaleval', '1.0e-10');
model.sol('sol1').feature('v2').feature('comp1_sbc1_ww').set('solvefor', false);
model.sol('sol1').feature('v2').feature('comp1_sbc1_C0').set('solvefor', false);
model.sol('sol1').feature('v2').feature('comp1_sbc1_C1').set('solvefor', false);
model.sol('sol1').feature('v2').feature('comp1_sbc1_C2').set('solvefor', false);
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 6, 0);
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('vol1', 'Volume');
model.result('pg1').feature('vol1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('vol1').set('threshold', 'manual');
model.result('pg1').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg1').feature('vol1').set('colortable', 'Rainbow');
model.result('pg1').feature('vol1').set('colortabletrans', 'none');
model.result('pg1').feature('vol1').set('colorscalemode', 'linear');
model.result('pg1').feature('vol1').set('resolution', 'custom');
model.result('pg1').feature('vol1').set('refine', 2);
model.result('pg1').feature('vol1').set('colortable', 'Prism');
model.result('pg1').feature('vol1').create('def', 'Deform');
model.result('pg1').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg1').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 6, 0);
model.result('pg2').set('defaultPlotID', 'stress');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').create('line1', 'Line');
model.result('pg2').feature('line1').set('expr', {'beam.mises'});
model.result('pg2').feature('line1').set('threshold', 'manual');
model.result('pg2').feature('line1').set('thresholdvalue', 0.2);
model.result('pg2').feature('line1').set('colortable', 'Rainbow');
model.result('pg2').feature('line1').set('colortabletrans', 'none');
model.result('pg2').feature('line1').set('colorscalemode', 'linear');
model.result('pg2').label('Stress (beam)');
model.result('pg2').feature('line1').set('colortable', 'Rainbow');
model.result('pg2').feature('line1').set('linetype', 'tube');
model.result('pg2').feature('line1').set('radiusexpr', 'beam.re');
model.result('pg2').feature('line1').set('tuberadiusscaleactive', true);
model.result('pg2').feature('line1').set('tuberadiusscale', 1);
model.result('pg2').feature('line1').set('tubeendcaps', false);
model.result('pg2').feature('line1').create('def', 'Deform');
model.result('pg2').feature('line1').feature('def').set('expr', {'u2' 'v2' 'w2'});
model.result('pg2').feature('line1').feature('def').set('descr', 'Displacement field');
model.result('pg1').run;

model.view('view1').set('showgrid', false);

model.result('pg1').run;
model.result('pg1').label('Stress, Solid and Beam');
model.result('pg1').setIndex('looplevel', 1, 0);
model.result('pg1').set('edges', false);
model.result('pg2').run;
model.result('pg2').run;
model.result('pg1').run;
model.result('pg1').feature.copy('line1', 'pg2/line1');
model.result('pg1').run;
model.result('pg1').feature('line1').set('expr', 'if(group.lgMx,beam.ttmax*sqrt(3),beam.mises)');
model.result('pg1').feature('line1').set('inheritplot', 'vol1');
model.result('pg1').run;
model.result('pg2').run;
model.result('pg2').label('Stress, Beam');
model.result('pg2').selection.geom('geom1', 1);
model.result('pg2').selection.geom('geom1', 1);
model.result('pg2').selection.set([309 310]);
model.result('pg2').set('applyselectiontodatasetedges', true);
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').set('applyselectiontodatasetedges', false);
model.result('pg3').run;
model.result('pg3').label('Stress Comparison, Solid');
model.result('pg3').setIndex('looplevel', 3, 0);
model.result('pg3').set('edges', false);
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', '(solid.mises-genext1(solid.mises))');
model.result('pg3').feature('surf1').set('colortable', 'Wave');
model.result('pg3').feature('surf1').set('colorscalemode', 'linearsymmetric');
model.result('pg3').run;
model.result('pg3').create('surf2', 'Surface');
model.result('pg3').feature('surf2').set('expr', 'solid.mises');
model.result('pg3').feature('surf2').set('inheritplot', 'surf1');
model.result('pg3').feature('surf2').create('sel1', 'Selection');
model.result('pg3').feature('surf2').feature('sel1').selection.set([69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136]);
model.result('pg3').run;
model.result.dataset.create('dset3', 'Solution');
model.result.dataset('dset3').selection.geom('geom1', 2);
model.result.dataset('dset3').selection.named('geom1_sel2');
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').run;
model.result('pg4').label('Traction');
model.result('pg4').set('data', 'dset3');
model.result('pg4').setIndex('looplevel', 1, 0);
model.result('pg4').set('edges', false);
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', 'solid.mises');
model.result('pg4').run;
model.result('pg4').create('arws1', 'ArrowSurface');
model.result('pg4').feature('arws1').set('expr', {'solid.Tax' 'solid.Tay' 'solid.Taz'});
model.result('pg4').feature('arws1').set('descr', 'Traction (force/area) (spatial frame)');
model.result('pg4').feature('arws1').set('arrowcount', 1000);
model.result('pg4').feature('arws1').set('inheritplot', 'surf1');
model.result('pg4').run;
model.result('pg4').set('view', 'new');
model.result('pg4').run;
model.result('pg4').setIndex('looplevel', 3, 0);
model.result('pg4').run;
model.result('pg4').feature('arws1').set('arrowcount', 120);
model.result('pg4').run;
model.result('pg1').run;
model.result('pg1').run;

model.title('Connecting Beams and Solids');

model.description(['This example demonstrates the use of the Solid' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Beam Connection multiphysics coupling to create transitions between the Solid Mechanics and Beam interfaces. Two different connection types are discussed, and a comparison of the stress distributions at the transition is made.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('beam_solid_connection.mph');

model.modelNode.label('Components');

out = model;
