function out = model
%
% parameter_estimation_polymer_viscoplasticity.m
%
% Model exported on May 26 2025, 21:31 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Nonlinear_Structural_Materials_Module/Viscoplasticity');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/solid', true);

model.baseSystem('mpa');

model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').label('Compression, 0.001 1/s, T=293 K');
model.result.table('tbl1').importData('parameter_estimation_polymer_viscoplasticity_compression_1e-3_T293K.txt');
model.result.table.duplicate('tbl2', 'tbl1');
model.result.table('tbl2').label('Compression, 0.1 1/s, T=293 K');
model.result.table('tbl2').importData('parameter_estimation_polymer_viscoplasticity_compression_1e-1_T293K.txt');
model.result.table.duplicate('tbl3', 'tbl2');
model.result.table('tbl3').label('Tension, 0.001 1/s, T=293 K');
model.result.table('tbl3').importData('parameter_estimation_polymer_viscoplasticity_tension_1e-3_T293K.txt');
model.result.table.duplicate('tbl4', 'tbl3');
model.result.table('tbl4').label('Tension, 0.1 1/s, T=293 K');
model.result.table('tbl4').importData('parameter_estimation_polymer_viscoplasticity_tension_1e-1_T293K.txt');
model.result.table.duplicate('tbl5', 'tbl4');
model.result.table('tbl5').label('Tension, 0.1 1/s, T=310 K');
model.result.table('tbl5').importData('parameter_estimation_polymer_viscoplasticity_tension_1e-1_T310K.txt');
model.result.table.duplicate('tbl6', 'tbl5');
model.result.table('tbl6').label('Tension, 0.1 1/s, T=323 K');
model.result.table('tbl6').importData('parameter_estimation_polymer_viscoplasticity_tension_1e-1_T323K.txt');
model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').run;
model.result('pg1').label(['Stress' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Strain Data']);
model.result('pg1').set('titletype', 'label');
model.result('pg1').set('xlabelactive', true);
model.result('pg1').set('xlabel', 'Logarithmic strain (1)');
model.result('pg1').set('ylabelactive', true);
model.result('pg1').set('ylabel', 'Cauchy stress (MPa)');
model.result('pg1').set('legendpos', 'upperleft');
model.result('pg1').create('tblp1', 'Table');
model.result('pg1').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg1').feature('tblp1').set('linewidth', 'preference');
model.result('pg1').feature('tblp1').label('Compression, 0.001 1/s, T=293 K');
model.result('pg1').feature('tblp1').set('xaxisdata', 2);
model.result('pg1').feature('tblp1').set('plotcolumninput', 'manual');
model.result('pg1').feature('tblp1').set('plotcolumns', [3]);
model.result('pg1').feature('tblp1').set('linestyle', 'dotted');
model.result('pg1').feature('tblp1').set('linemarker', 'point');
model.result('pg1').feature('tblp1').set('legend', true);
model.result('pg1').feature('tblp1').set('autoheaders', false);
model.result('pg1').feature('tblp1').set('autoplotlabel', true);
model.result('pg1').feature.duplicate('tblp2', 'tblp1');
model.result('pg1').run;
model.result('pg1').feature('tblp2').label('Compression, 0.1 1/s, T=293 K');
model.result('pg1').feature('tblp2').set('table', 'tbl2');
model.result('pg1').feature.duplicate('tblp3', 'tblp2');
model.result('pg1').run;
model.result('pg1').feature('tblp3').label('Tension, 0.001 1/s, T=293 K');
model.result('pg1').feature('tblp3').set('table', 'tbl3');
model.result('pg1').feature.duplicate('tblp4', 'tblp3');
model.result('pg1').run;
model.result('pg1').feature('tblp4').label('Tension, 0.1 1/s, T=293 K');
model.result('pg1').feature('tblp4').set('table', 'tbl4');
model.result('pg1').run;

model.param.label('Material Parameters');
model.param.set('mu0_eq', '2[MPa]');
model.param.descr('mu0_eq', 'Shear modulus, equilibrium network');
model.param.set('Nsegm', '10');
model.param.descr('Nsegm', 'Number of chain segments');
model.param.set('K', '1[GPa]');
model.param.descr('K', 'Bulk modulus');
model.param.set('beta', '1');
model.param.descr('beta', 'Energy factor');
model.param.set('A', '1[s^-1]');
model.param.descr('A', 'Viscoplastic rate coefficient');
model.param.set('c', '-0.5');
model.param.descr('c', 'Strain hardening exponent');
model.param.set('n', '5');
model.param.descr('n', 'Stress hardening exponent');
model.param.set('m', '10');
model.param.descr('m', 'Temperature hardening exponent');
model.param.set('sig_res', 'sqrt(3)[MPa]');
model.param.descr('sig_res', 'Flow resistance');
model.param.create('par2');
model.param('par2').label('Load Parameters');
model.param('par2').set('strain_rate', '1e-3[s^-1]');
model.param('par2').descr('strain_rate', 'Nominal strain rate');
model.param('par2').set('t_end', '1/strain_rate');
model.param('par2').descr('t_end', 'Loading duration');
model.param('par2').set('emax_ten', '0.6');
model.param('par2').descr('emax_ten', 'Nominal strain, tension load case');
model.param('par2').set('emax_comp', '-0.3');
model.param('par2').descr('emax_comp', 'Nominal strain, compression load case');
model.param('par2').set('Tref', '293.15[K]');
model.param('par2').descr('Tref', 'Reference temperature');
model.param('par2').set('T', '293.15[K]');
model.param('par2').descr('T', 'Temperature');

model.func.create('tri1', 'Triangle');
model.func('tri1').label('Load Cycle');
model.func('tri1').set('lower', 0);
model.func('tri1').set('upper', 2);
model.func('tri1').set('smoothactive', false);

model.geom('geom1').lengthUnit('mm');
model.geom('geom1').create('blk1', 'Block');
model.geom('geom1').run('blk1');
model.geom('geom1').create('arr1', 'Array');
model.geom('geom1').feature('arr1').selection('input').set({'blk1'});
model.geom('geom1').feature('arr1').set('fullsize', [1 2 1]);
model.geom('geom1').feature('arr1').set('displ', [0 2 0]);
model.geom('geom1').run('fin');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').label(['Bergstrom' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Boyce Material']);
model.material('mat1').propertyGroup('def').set('density', {'1[g/cm^3]'});
model.material('mat1').propertyGroup.create('ArrudaBoyce', 'Arruda-Boyce');
model.material('mat1').propertyGroup.create('BergstromBoyce', 'Bergstrom-Boyce_viscoplasticity');
model.material('mat1').propertyGroup('ArrudaBoyce').set('Nseg', {'Nsegm'});
model.material('mat1').propertyGroup('ArrudaBoyce').set('mu0', {'mu0_eq*(1+(T-Tref)/Tref)'});
model.material('mat1').propertyGroup('BergstromBoyce').set('A_BB', {'A'});
model.material('mat1').propertyGroup('BergstromBoyce').set('sigRes_BB', {'sig_res'});
model.material('mat1').propertyGroup('BergstromBoyce').set('n_BB', {'n'});
model.material('mat1').propertyGroup('BergstromBoyce').set('c_BB', {'c'});
model.material('mat1').propertyGroup('BergstromBoyce').set('sigmaco_BB', {'0[MPa]'});

model.physics('solid').prop('StructuralTransientBehavior').set('StructuralTransientBehavior', 'Quasistatic');
model.physics('solid').prop('ShapeProperty').set('order_displacement', 1);
model.physics('solid').create('hmm1', 'HyperelasticModel', 3);
model.physics('solid').feature('hmm1').selection.set([1 2]);
model.physics('solid').feature('hmm1').set('MaterialModel', 'ArrudaBoyce');
model.physics('solid').feature('hmm1').set('VolumetricEnergyUncoupled', 'miehe');
model.physics('solid').feature('hmm1').set('kappa', 'K');
model.physics('solid').feature('hmm1').set('reducedIntegration', true);
model.physics('solid').feature('hmm1').create('pvp1', 'PolymerViscoplasticity', 3);
model.physics('solid').feature('hmm1').feature('pvp1').set('betav', 'beta');
model.physics('solid').feature('hmm1').feature('pvp1').set('thermalEffects', 'powerLaw');
model.physics('solid').feature('hmm1').feature('pvp1').set('T0', 'Tref');
model.physics('solid').feature('hmm1').feature('pvp1').set('m', 'm');
model.physics('solid').feature('hmm1').feature('pvp1').set('timeMethod', 'ode');
model.physics('solid').feature('hmm1').feature('pvp1').set('minput_temperature_src', 'userdef');
model.physics('solid').feature('hmm1').feature('pvp1').set('minput_temperature', 'T');
model.physics('solid').create('roll1', 'Roller', 2);
model.physics('solid').feature('roll1').selection.set([1 2 3 6 7 8]);
model.physics('solid').create('disp1', 'Displacement2', 2);
model.physics('solid').feature('disp1').label('Uniaxial Compression');
model.physics('solid').feature('disp1').selection.set([11]);
model.physics('solid').feature('disp1').setIndex('Direction', 'prescribed', 0);
model.physics('solid').feature('disp1').setIndex('U0', 'emax_comp*tri1(t/t_end)*1[mm]', 0);
model.physics('solid').feature.duplicate('disp2', 'disp1');
model.physics('solid').feature('disp2').label('Uniaxial Tension');
model.physics('solid').feature('disp2').selection.set([12]);
model.physics('solid').feature('disp2').setIndex('U0', 'emax_ten*tri1(t/t_end)*1[mm]', 0);

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.set([1 6]);
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.all;
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 1);
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis1').set('numelem', 1);
model.mesh('mesh1').run;

model.cpl.create('aveop1', 'Average', 'geom1');
model.cpl('aveop1').set('axisym', true);
model.cpl('aveop1').selection.set([1]);
model.cpl.duplicate('aveop2', 'aveop1');
model.cpl('aveop2').selection.set([2]);

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').label('Global Stress and Strain Variables');
model.variable('var1').set('sig_comp', 'aveop1(solid.sxx)');
model.variable('var1').descr('sig_comp', 'Cauchy stress, compression');
model.variable('var1').set('elog_comp', 'aveop1(solid.elogxx)');
model.variable('var1').descr('elog_comp', 'Logarithmic strain, compression');
model.variable('var1').set('sig_ten', 'aveop2(solid.sxx)');
model.variable('var1').descr('sig_ten', 'Cauchy stress, tension');
model.variable('var1').set('elog_ten', 'aveop2(solid.elogxx)');
model.variable('var1').descr('elog_ten', 'Logarithmic strain, tension');

model.study('std1').label('Forward Problem');
model.study('std1').setGenPlots(false);
model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'A', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', '1/s', 0);
model.study('std1').feature('param').setIndex('pname', 'A', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', '1/s', 0);
model.study('std1').feature('param').setIndex('pname', 'strain_rate', 0);
model.study('std1').feature('param').setIndex('plistarr', '0.001 0.1', 0);
model.study('std1').feature('time').set('tlist', 'range(0,0.02,1)*2*t_end');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_solid_hmm1_pw').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_hmm1_pvp1_evpe').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_hmm1_pvp1_evp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_hmm1_pvp1_evpe').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_hmm1_pvp1_evp').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_hmm1_pw').set('scaleval', '100');
model.sol('sol1').feature('v1').feature('comp1_solid_hmm1_pvp1_evpe').set('scaleval', '0.001');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*3.3166247903554');
model.sol('sol1').feature('v1').feature('comp1_solid_hmm1_pvp1_evp').set('scaleval', '0.001');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.02,1)*2*t_end');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'pg1');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature('fc1').set('minstep', 0.5);
model.sol('sol1').feature('t1').feature('fc1').set('useminsteprecovery', 'on');
model.sol('sol1').feature('t1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 4);
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('t1').feature('d1').set('nliniterrefine', true);
model.sol('sol1').feature('t1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').set('rhob', 40);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', true);
model.sol('sol1').feature('t1').feature('i1').label('Suggested Iterative Solver (GMRES with SA AMG) (solid)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature('fc1').set('minstep', 0.5);
model.sol('sol1').feature('t1').feature('fc1').set('useminsteprecovery', 'on');
model.sol('sol1').feature('t1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 4);
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'strain_rate'});
model.batch('p1').set('plistarr', {'0.001 0.1'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol('sol1').feature('v1').feature('comp1_solid_hmm1_pvp1_evp').set('scaleval', 1);
model.sol('sol1').feature('v1').feature('comp1_solid_hmm1_pvp1_evpe').set('scaleval', 1);
model.sol('sol1').feature('v1').feature('comp1_solid_hmm1_pw').set('scaleval', '1[MPa]');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', 'emax_ten');
model.sol('sol1').feature('t1').set('tstepsbdf', 'strict');
model.sol('sol1').feature('t1').set('consistent', false);
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'const');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 25);
model.sol.create('sol2');
model.sol('sol2').study('std1');
model.sol('sol2').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').run('compute');

model.result('pg1').run;
model.result.duplicate('pg2', 'pg1');
model.result('pg2').run;
model.result('pg2').label('Initial Model Prediction');
model.result('pg2').set('data', 'dset2');
model.result('pg2').create('glob1', 'Global');
model.result('pg2').feature('glob1').set('markerpos', 'datapoints');
model.result('pg2').feature('glob1').set('linewidth', 'preference');
model.result('pg2').feature('glob1').label('Initial Prediction, Compression');
model.result('pg2').feature('glob1').setIndex('expr', 'sig_comp', 0);
model.result('pg2').feature('glob1').set('xdata', 'expr');
model.result('pg2').feature('glob1').set('xdataexpr', 'elog_comp');
model.result('pg2').feature('glob1').set('linecolor', 'cyclereset');
model.result('pg2').feature('glob1').set('legend', false);
model.result('pg2').feature.duplicate('glob2', 'glob1');
model.result('pg2').run;
model.result('pg2').feature('glob2').label('Initial Prediction, Tension');
model.result('pg2').feature('glob2').setIndex('expr', 'sig_ten', 0);
model.result('pg2').feature('glob2').set('xdataexpr', 'elog_ten');
model.result('pg2').feature('glob2').set('linecolor', 'cycle');
model.result('pg2').run;

model.common.create('glso1', 'GlobalLeastSquaresObjective', 'comp1');
model.common('glso1').label('Compression, 0.001 1/s, T=293 K');
model.common('glso1').set('source', 'resultTable');
model.common('glso1').setEntry('columnType', 'col2', 'none');
model.common('glso1').setEntry('modelExpression', 'col3', 'comp1.sig_comp');
model.common('glso1').setEntry('variableName', 'col3', 'comp_slow');
model.common('glso1').setEntry('unit', 'col3', 'MPa');
model.common('glso1').setIndex('paramNames', 'mu0_eq', 0);
model.common('glso1').setIndex('paramExprs', '', 0);
model.common('glso1').setIndex('paramNames', 'mu0_eq', 0);
model.common('glso1').setIndex('paramExprs', '', 0);
model.common('glso1').setIndex('paramNames', 'strain_rate', 0);
model.common('glso1').setIndex('paramExprs', '0.001[s^-1]', 0);
model.common.duplicate('glso2', 'glso1');
model.common('glso2').label('Compression, 0.1 1/s, T=293 K');
model.common('glso2').set('resultTable', 'tbl2');
model.common('glso2').setEntry('variableName', 'col3', 'comp_fast');
model.common('glso2').setIndex('paramExprs', '0.1[s^-1]', 0);
model.common.duplicate('glso3', 'glso2');
model.common('glso3').label('Tension, 0.001 1/s, T=293 K');
model.common('glso3').set('resultTable', 'tbl3');
model.common('glso3').setEntry('modelExpression', 'col3', 'comp1.sig_ten');
model.common('glso3').setEntry('variableName', 'col3', 'ten_slow');
model.common('glso3').setIndex('paramExprs', '0.001[s^-1]', 0);
model.common.duplicate('glso4', 'glso3');
model.common('glso4').label('Tension, 0.1 1/s, T=293 K');
model.common('glso4').set('resultTable', 'tbl4');
model.common('glso4').setEntry('variableName', 'col3', 'ten_fast');
model.common('glso4').setIndex('paramExprs', '0.1[s^-1]', 0);

model.study.create('std2');
model.study('std2').create('time', 'Transient');
model.study('std2').feature('time').setSolveFor('/physics/solid', true);
model.study('std2').label('Parameter Estimation');
model.study('std2').setGenPlots(false);
model.study('std2').create('lsqo', 'LSQOptimization');
model.study('std2').feature('lsqo').set('source', 'none');
model.study('std2').feature('lsqo').setIndex('objectiveActive', true, 0);
model.study('std2').feature('lsqo').setIndex('objectiveActive', true, 1);
model.study('std2').feature('lsqo').setIndex('objectiveActive', true, 2);
model.study('std2').feature('lsqo').setIndex('objectiveActive', true, 3);
model.study('std2').feature('lsqo').setIndex('pname', 'A', 0);
model.study('std2').feature('lsqo').setIndex('initval', '1[s^-1]', 0);
model.study('std2').feature('lsqo').setIndex('scale', 1, 0);
model.study('std2').feature('lsqo').setIndex('lbound', '', 0);
model.study('std2').feature('lsqo').setIndex('ubound', '', 0);
model.study('std2').feature('lsqo').setIndex('pname', 'A', 0);
model.study('std2').feature('lsqo').setIndex('initval', '1[s^-1]', 0);
model.study('std2').feature('lsqo').setIndex('scale', 1, 0);
model.study('std2').feature('lsqo').setIndex('lbound', '', 0);
model.study('std2').feature('lsqo').setIndex('ubound', '', 0);
model.study('std2').feature('lsqo').setIndex('pname', 'beta', 1);
model.study('std2').feature('lsqo').setIndex('initval', 1, 1);
model.study('std2').feature('lsqo').setIndex('scale', 1, 1);
model.study('std2').feature('lsqo').setIndex('lbound', '', 1);
model.study('std2').feature('lsqo').setIndex('ubound', '', 1);
model.study('std2').feature('lsqo').setIndex('pname', 'beta', 1);
model.study('std2').feature('lsqo').setIndex('initval', 1, 1);
model.study('std2').feature('lsqo').setIndex('scale', 1, 1);
model.study('std2').feature('lsqo').setIndex('lbound', '', 1);
model.study('std2').feature('lsqo').setIndex('ubound', '', 1);
model.study('std2').feature('lsqo').setIndex('pname', 'c', 2);
model.study('std2').feature('lsqo').setIndex('initval', -0.5, 2);
model.study('std2').feature('lsqo').setIndex('scale', 1, 2);
model.study('std2').feature('lsqo').setIndex('lbound', '', 2);
model.study('std2').feature('lsqo').setIndex('ubound', '', 2);
model.study('std2').feature('lsqo').setIndex('pname', 'c', 2);
model.study('std2').feature('lsqo').setIndex('initval', -0.5, 2);
model.study('std2').feature('lsqo').setIndex('scale', 1, 2);
model.study('std2').feature('lsqo').setIndex('lbound', '', 2);
model.study('std2').feature('lsqo').setIndex('ubound', '', 2);
model.study('std2').feature('lsqo').setIndex('pname', 'emax_comp', 3);
model.study('std2').feature('lsqo').setIndex('initval', -0.3, 3);
model.study('std2').feature('lsqo').setIndex('scale', 1, 3);
model.study('std2').feature('lsqo').setIndex('lbound', '', 3);
model.study('std2').feature('lsqo').setIndex('ubound', '', 3);
model.study('std2').feature('lsqo').setIndex('pname', 'emax_comp', 3);
model.study('std2').feature('lsqo').setIndex('initval', -0.3, 3);
model.study('std2').feature('lsqo').setIndex('scale', 1, 3);
model.study('std2').feature('lsqo').setIndex('lbound', '', 3);
model.study('std2').feature('lsqo').setIndex('ubound', '', 3);
model.study('std2').feature('lsqo').setIndex('pname', 'emax_ten', 4);
model.study('std2').feature('lsqo').setIndex('initval', 0.6, 4);
model.study('std2').feature('lsqo').setIndex('scale', 1, 4);
model.study('std2').feature('lsqo').setIndex('lbound', '', 4);
model.study('std2').feature('lsqo').setIndex('ubound', '', 4);
model.study('std2').feature('lsqo').setIndex('pname', 'emax_ten', 4);
model.study('std2').feature('lsqo').setIndex('initval', 0.6, 4);
model.study('std2').feature('lsqo').setIndex('scale', 1, 4);
model.study('std2').feature('lsqo').setIndex('lbound', '', 4);
model.study('std2').feature('lsqo').setIndex('ubound', '', 4);
model.study('std2').feature('lsqo').setIndex('pname', 'K', 5);
model.study('std2').feature('lsqo').setIndex('initval', '1[GPa]', 5);
model.study('std2').feature('lsqo').setIndex('scale', 1, 5);
model.study('std2').feature('lsqo').setIndex('lbound', '', 5);
model.study('std2').feature('lsqo').setIndex('ubound', '', 5);
model.study('std2').feature('lsqo').setIndex('pname', 'K', 5);
model.study('std2').feature('lsqo').setIndex('initval', '1[GPa]', 5);
model.study('std2').feature('lsqo').setIndex('scale', 1, 5);
model.study('std2').feature('lsqo').setIndex('lbound', '', 5);
model.study('std2').feature('lsqo').setIndex('ubound', '', 5);
model.study('std2').feature('lsqo').setIndex('pname', 'mu0_eq', 0);
model.study('std2').feature('lsqo').setIndex('lbound', 0, 0);
model.study('std2').feature('lsqo').setIndex('pname', 'Nsegm', 1);
model.study('std2').feature('lsqo').setIndex('scale', 10, 1);
model.study('std2').feature('lsqo').setIndex('lbound', 2, 1);
model.study('std2').feature('lsqo').setIndex('pname', 'beta', 2);
model.study('std2').feature('lsqo').setIndex('lbound', 0, 2);
model.study('std2').feature('lsqo').setIndex('pname', 'A', 3);
model.study('std2').feature('lsqo').setIndex('lbound', 0, 3);
model.study('std2').feature('lsqo').setIndex('pname', 'c', 4);
model.study('std2').feature('lsqo').setIndex('lbound', -1, 4);
model.study('std2').feature('lsqo').setIndex('ubound', 0, 4);
model.study('std2').feature('lsqo').setIndex('pname', 'n', 5);
model.study('std2').feature('lsqo').setIndex('lbound', 1.01, 5);
model.study('std2').feature('lsqo').setIndex('ubound', 20, 5);
model.study('std2').feature('lsqo').set('lsqdatamethod', 'lsq');

model.sol.create('sol5');
model.sol('sol5').study('std2');

model.study('std2').feature('lsqo').set('lsqmessage', {});

model.sol('sol5').create('st1', 'StudyStep');
model.sol('sol5').feature('st1').set('study', 'std2');
model.sol('sol5').feature('st1').set('studystep', 'time');
model.sol('sol5').create('v1', 'Variables');
model.sol('sol5').feature('v1').feature('comp1_solid_hmm1_pw').set('scalemethod', 'manual');
model.sol('sol5').feature('v1').feature('comp1_solid_hmm1_pvp1_evpe').set('scalemethod', 'manual');
model.sol('sol5').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol5').feature('v1').feature('comp1_solid_hmm1_pvp1_evp').set('scalemethod', 'manual');
model.sol('sol5').feature('v1').feature('comp1_solid_hmm1_pvp1_evpe').set('resscalemethod', 'parent');
model.sol('sol5').feature('v1').feature('comp1_solid_hmm1_pvp1_evp').set('resscalemethod', 'parent');
model.sol('sol5').feature('v1').feature('comp1_solid_hmm1_pw').set('scaleval', '100');
model.sol('sol5').feature('v1').feature('comp1_solid_hmm1_pvp1_evpe').set('scaleval', '0.001');
model.sol('sol5').feature('v1').feature('comp1_u').set('scaleval', '1e-2*3.3166247903554');
model.sol('sol5').feature('v1').feature('comp1_solid_hmm1_pvp1_evp').set('scaleval', '0.001');
model.sol('sol5').feature('v1').set('control', 'time');
model.sol('sol5').create('o1', 'Optimization');
model.sol('sol5').feature('o1').set('gradientlm', 'numeric');
model.sol('sol5').feature('o1').set('diffint', 1.0E-6);
model.sol('sol5').feature('o1').set('control', 'lsqo');
model.sol('sol5').feature('o1').create('t1', 'TimeAttrib');
model.sol('sol5').feature('o1').feature('t1').set('rtol', 0.001);
model.sol('sol5').feature('o1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol5').feature('o1').feature('t1').set('reacf', true);
model.sol('sol5').feature('o1').feature('t1').set('storeudot', true);
model.sol('sol5').feature('o1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol5').feature('o1').feature('t1').set('control', 'time');
model.sol('sol5').feature('o1').feature('t1').create('tp1', 'TimeParametric');
model.sol('sol5').feature('o1').feature('t1').feature('tp1').set('control', 'time');
model.sol('sol5').feature('o1').feature('t1').set('control', 'time');
model.sol('sol5').feature('o1').feature('t1').feature('tp1').set('plistarrlsq', {'0.001, 0.1'});
model.sol('sol5').feature('o1').feature('t1').feature('tp1').set('lsqparamsout', ['  strain_rate' newline '      0.00100' newline '        0.100' newline ]);
model.sol('sol5').feature('o1').feature('t1').feature('tp1').set('pnamelsq', {'strain_rate'});
model.sol('sol5').feature('v1').set('cname', {'t' 'timestep'});
model.sol('sol5').feature('v1').set('clist', {'range(0,0.1,1)[s]' '0.001[s]'});
model.sol('sol5').feature('v1').set('clistctrl', {'t1_t' 't1_timestep'});
model.sol('sol5').feature('v1').set('cname', {'t' 'timestep' 'strain_rate'});
model.sol('sol5').feature('v1').set('clist', {'range(0,0.1,1)[s]' '0.001[s]' '0.001, 0.1'});
model.sol('sol5').feature('v1').set('clistctrl', {'t1_t' 't1_timestep' 'tp1lsq'});
model.sol('sol5').feature('o1').feature('t1').set('tlistlsq', [0 40 80 120 160 200 240 280 320 360 400 440 480 520 560 600 640 680 720 760 800 840 880 920 960 1000 1040 1080 1120 1160 1200 1240 1280 1320 1360 1400 1440 1480 1520 1560 1600 1640 1680 1720 1760 1800 1840 1880 1920 1960; 0 0.4 0.8 1.2 1.6 2 2.4 2.8 3.2 3.6 4 4.4 4.8 5.2 5.6 6 6.4 6.8 7.2 7.6 8 8.4 8.8 9.2 9.6 10 10.4 10.8 11.2 11.6 12 12.4 12.8 13.2 13.6 14 14.4 14.8 15.2 15.6 16 16.4 16.8 17.2 17.6 18 18.4 0 0 0]);
model.sol('sol5').feature('o1').feature('t1').set('lsqtimesout', ['      0.00' newline '     0.400' newline '     0.800' newline '      1.20' newline '      1.60' newline '      2.00' newline '      2.40' newline '      2.80' newline '      3.20' newline '      3.60' newline '      4.00' newline '      4.40' newline '      4.80' newline '      5.20' newline '      5.60' newline '      6.00' newline '      6.40' newline '      6.80' newline '      7.20' newline '      7.60' newline '      8.00' newline '      8.40' newline '      8.80' newline '      9.20' newline '      9.60' newline '      10.0' newline '      10.4' newline '      10.8' newline '      11.2' newline '      11.6' newline '      12.0' newline '      12.4' newline '      12.8' newline '      13.2' newline '      13.6' newline '      14.0' newline '      14.4' newline '      14.8' newline '      15.2' newline '      15.6' newline '      16.0' newline '      16.4' newline '      16.8' newline '      17.2' newline '      17.6' newline '      18.0' newline '      18.4' newline '      40.0' newline '      80.0' newline '       120' newline '       160' newline '       200' newline '       240' newline '       280' newline '       320' newline '       360' newline '       400' newline '       440' newline '       480' newline '       520' newline '       560' newline '       600' newline '       640' newline '       680' newline '       720' newline '       760' newline '       800' newline '       840' newline '       880' newline '       920' newline '       960' newline '  1.00e+03' newline '  1.04e+03' newline '  1.08e+03' newline '  1.12e+03' newline '  1.16e+03' newline '  1.20e+03' newline '  1.24e+03' newline '  1.28e+03' newline '  1.32e+03' newline '  1.36e+03' newline '  1.40e+03' newline '  1.44e+03' newline '  1.48e+03' newline '  1.52e+03' newline '  1.56e+03' newline '  1.60e+03' newline '  1.64e+03' newline '  1.68e+03' newline '  1.72e+03' newline '  1.76e+03' newline '  1.80e+03' newline '  1.84e+03' newline '  1.88e+03' newline '  1.92e+03' newline '  1.96e+03' newline ]);
model.sol('sol5').feature('o1').feature('t1').set('tout', 'tlist');
model.sol('sol5').feature('o1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol5').feature('o1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol5').feature('o1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol5').feature('o1').feature('t1').feature('fc1').set('minstep', 0.5);
model.sol('sol5').feature('o1').feature('t1').feature('fc1').set('useminsteprecovery', 'on');
model.sol('sol5').feature('o1').feature('t1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol5').feature('o1').feature('t1').feature('fc1').set('maxiter', 4);
model.sol('sol5').feature('o1').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol5').feature('o1').feature('t1').create('d1', 'Direct');
model.sol('sol5').feature('o1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('o1').feature('t1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol5').feature('o1').feature('t1').feature('d1').set('nliniterrefine', true);
model.sol('sol5').feature('o1').feature('t1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol5').feature('o1').feature('t1').create('i1', 'Iterative');
model.sol('sol5').feature('o1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol5').feature('o1').feature('t1').feature('i1').set('rhob', 40);
model.sol('sol5').feature('o1').feature('t1').feature('i1').set('nlinnormuse', true);
model.sol('sol5').feature('o1').feature('t1').feature('i1').label('Suggested Iterative Solver (GMRES with SA AMG) (solid)');
model.sol('sol5').feature('o1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol5').feature('o1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol5').feature('o1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol5').feature('o1').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol5').feature('o1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol5').feature('o1').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol5').feature('o1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol5').feature('o1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol5').feature('o1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol5').feature('o1').feature('t1').feature('fc1').set('minstep', 0.5);
model.sol('sol5').feature('o1').feature('t1').feature('fc1').set('useminsteprecovery', 'on');
model.sol('sol5').feature('o1').feature('t1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol5').feature('o1').feature('t1').feature('fc1').set('maxiter', 4);
model.sol('sol5').feature('o1').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol5').feature('o1').feature('t1').feature.remove('fcDef');
model.sol('sol5').attach('std2');
model.sol('sol5').feature('v1').feature('comp1_solid_hmm1_pvp1_evp').set('scaleval', 1);
model.sol('sol5').feature('v1').feature('comp1_solid_hmm1_pvp1_evpe').set('scaleval', 1);
model.sol('sol5').feature('v1').feature('comp1_solid_hmm1_pw').set('scaleval', 1);
model.sol('sol5').feature('v1').feature('comp1_u').set('scaleval', 'emax_ten');
model.sol('sol5').feature('o1').feature('t1').set('tstepsbdf', 'strict');
model.sol('sol5').feature('o1').feature('t1').set('consistent', false);
model.sol('sol5').feature('o1').feature('t1').feature('fc1').set('dtech', 'const');
model.sol('sol5').feature('o1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol5').feature('o1').feature('t1').feature('fc1').set('maxiter', 25);

model.result('pg1').run;
model.result.duplicate('pg3', 'pg1');
model.result('pg3').run;
model.result('pg3').label(['Parameter Estimation: Bergstrom' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Boyce Viscoplasticity']);
model.result('pg3').set('data', 'dset3');
model.result('pg3').create('glob1', 'Global');
model.result('pg3').feature('glob1').set('markerpos', 'datapoints');
model.result('pg3').feature('glob1').set('linewidth', 'preference');
model.result('pg3').feature('glob1').label('Model Prediction, Compression 0.001 1/s');
model.result('pg3').feature('glob1').setIndex('expr', 'glso1.comp_slow.model', 0);
model.result('pg3').feature('glob1').set('xdata', 'expr');
model.result('pg3').feature('glob1').set('xdataexpr', 'elog_comp');
model.result('pg3').feature('glob1').set('linecolor', 'cyclereset');
model.result('pg3').feature('glob1').set('legend', false);
model.result('pg3').feature.duplicate('glob2', 'glob1');
model.result('pg3').run;
model.result('pg3').feature('glob2').label('Model Prediction, Compression 0.1 1/s');
model.result('pg3').feature('glob2').setIndex('expr', 'glso2.comp_fast.model', 0);
model.result('pg3').feature('glob2').set('linecolor', 'cycle');
model.result('pg3').feature.duplicate('glob3', 'glob2');
model.result('pg3').run;
model.result('pg3').feature('glob3').label('Model Prediction, Tension 0.001 1/s');
model.result('pg3').feature('glob3').setIndex('expr', 'glso3.ten_slow.model', 0);
model.result('pg3').feature('glob3').set('xdataexpr', 'elog_ten');
model.result('pg3').feature.duplicate('glob4', 'glob3');
model.result('pg3').run;
model.result('pg3').feature('glob4').label('Model Prediction, Tension 0.1 1/s');
model.result('pg3').feature('glob4').setIndex('expr', 'glso4.ten_fast.model', 0);

model.study('std2').feature('lsqo').set('plot', true);
model.study('std2').feature('lsqo').set('plotgroup', 'pg3');
model.study('std2').feature('lsqo').set('showindobj', true);
model.study('std2').feature('lsqo').set('plotobj', true);

model.sol('sol5').runAll;

model.result('pg3').run;

model.study('std2').feature('lsqo').set('probewindow', '');

model.physics('solid').feature.duplicate('hmm2', 'hmm1');
model.physics('solid').feature('hmm2').set('mu0_mat', 'userdef');
model.physics('solid').feature('hmm2').set('mu0', 'withsol(''sol5'', mu0_eq)*(1+(T-Tref)/Tref)');
model.physics('solid').feature('hmm2').set('Nseg_mat', 'userdef');
model.physics('solid').feature('hmm2').set('Nseg', 'withsol(''sol5'', Nsegm)');
model.physics('solid').feature('hmm2').feature('pvp1').set('betav', 'withsol(''sol5'', beta)');
model.physics('solid').feature('hmm2').feature('pvp1').set('A_BB_mat', 'userdef');
model.physics('solid').feature('hmm2').feature('pvp1').set('A_BB', 'withsol(''sol5'', A)');
model.physics('solid').feature('hmm2').feature('pvp1').set('sigRes_BB_mat', 'userdef');
model.physics('solid').feature('hmm2').feature('pvp1').set('sigRes_BB', 'sig_res');
model.physics('solid').feature('hmm2').feature('pvp1').set('n_BB_mat', 'userdef');
model.physics('solid').feature('hmm2').feature('pvp1').set('n_BB', 'withsol(''sol5'', n)');
model.physics('solid').feature('hmm2').feature('pvp1').set('sigmaco_BB_mat', 'userdef');
model.physics('solid').feature('hmm2').feature('pvp1').set('c_BB_mat', 'userdef');
model.physics('solid').feature('hmm2').feature('pvp1').set('c_BB', 'withsol(''sol5'', c)');

model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').label(['Stress' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Strain Data: Temperature Dependence']);
model.result('pg5').set('data', 'none');
model.result('pg5').set('titletype', 'label');
model.result('pg5').set('legendpos', 'upperleft');
model.result('pg5').create('tblp1', 'Table');
model.result('pg5').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg5').feature('tblp1').set('linewidth', 'preference');
model.result('pg5').feature('tblp1').set('table', 'tbl4');
model.result('pg5').feature('tblp1').set('xaxisdata', 2);
model.result('pg5').feature('tblp1').set('plotcolumninput', 'manual');
model.result('pg5').feature('tblp1').set('plotcolumns', [3]);
model.result('pg5').feature('tblp1').set('linestyle', 'dotted');
model.result('pg5').feature('tblp1').set('linemarker', 'point');
model.result('pg5').feature('tblp1').set('legend', true);
model.result('pg5').feature('tblp1').set('autoplotlabel', true);
model.result('pg5').feature('tblp1').set('autoheaders', false);
model.result('pg5').feature('tblp1').label('Tension, 0.1 1/s, T=293 K');
model.result('pg5').feature.duplicate('tblp2', 'tblp1');
model.result('pg5').run;
model.result('pg5').feature('tblp2').label('Tension, 0.1 1/s, T=310 K');
model.result('pg5').feature('tblp2').set('table', 'tbl5');
model.result('pg5').feature.duplicate('tblp3', 'tblp2');
model.result('pg5').run;
model.result('pg5').feature('tblp3').label('Tension, 0.1 1/s, T=323 K');
model.result('pg5').feature('tblp3').set('table', 'tbl6');
model.result('pg5').run;

model.common.duplicate('glso5', 'glso4');
model.common('glso5').label('Tension, 0.1 1/s, T=310 K');
model.common('glso5').set('resultTable', 'tbl5');
model.common('glso5').setEntry('variableName', 'col3', 'ten_fast_310K');
model.common('glso5').setIndex('paramNames', 'mu0_eq', 1);
model.common('glso5').setIndex('paramExprs', '', 1);
model.common('glso5').setIndex('paramNames', 'mu0_eq', 1);
model.common('glso5').setIndex('paramExprs', '', 1);
model.common('glso5').setIndex('paramNames', 'T', 1);
model.common('glso5').setIndex('paramExprs', '310.15[K]', 1);
model.common.duplicate('glso6', 'glso5');
model.common('glso6').label('Tension, 0.1 1/s, T=323 K');
model.common('glso6').set('resultTable', 'tbl6');
model.common('glso6').setEntry('variableName', 'col3', 'ten_fast_323K');
model.common('glso6').setIndex('paramExprs', '323.15[K]', 1);

model.study.create('std3');
model.study('std3').create('time', 'Transient');
model.study('std3').feature('time').setSolveFor('/physics/solid', true);
model.study('std3').label('Parameter Estimation: Temperature Dependence');
model.study('std3').setGenPlots(false);
model.study('std3').create('lsqo', 'LSQOptimization');
model.study('std3').feature('lsqo').set('source', 'none');
model.study('std3').feature('lsqo').setIndex('objectiveActive', false, 0);
model.study('std3').feature('lsqo').setIndex('objectiveActive', false, 1);
model.study('std3').feature('lsqo').setIndex('objectiveActive', false, 2);
model.study('std3').feature('lsqo').setIndex('objectiveActive', true, 3);
model.study('std3').feature('lsqo').setIndex('objectiveActive', true, 4);
model.study('std3').feature('lsqo').setIndex('objectiveActive', true, 5);
model.study('std3').feature('lsqo').setIndex('pname', 'A', 0);
model.study('std3').feature('lsqo').setIndex('initval', '1[s^-1]', 0);
model.study('std3').feature('lsqo').setIndex('scale', 1, 0);
model.study('std3').feature('lsqo').setIndex('lbound', '', 0);
model.study('std3').feature('lsqo').setIndex('ubound', '', 0);
model.study('std3').feature('lsqo').setIndex('pname', 'A', 0);
model.study('std3').feature('lsqo').setIndex('initval', '1[s^-1]', 0);
model.study('std3').feature('lsqo').setIndex('scale', 1, 0);
model.study('std3').feature('lsqo').setIndex('lbound', '', 0);
model.study('std3').feature('lsqo').setIndex('ubound', '', 0);
model.study('std3').feature('lsqo').setIndex('pname', 'm', 0);
model.study('std3').feature('lsqo').setIndex('scale', 10, 0);
model.study('std3').feature('lsqo').set('lsqdatamethod', 'lsq');
model.study('std3').feature('time').set('useadvanceddisable', true);
model.study('std3').feature('time').set('disabledphysics', {'solid/hmm1'});

model.sol.create('sol6');
model.sol('sol6').study('std3');

model.study('std3').feature('lsqo').set('lsqmessage', {});

model.sol('sol6').create('st1', 'StudyStep');
model.sol('sol6').feature('st1').set('study', 'std3');
model.sol('sol6').feature('st1').set('studystep', 'time');
model.sol('sol6').create('v1', 'Variables');
model.sol('sol6').feature('v1').feature('comp1_solid_hmm2_pvp1_evp').set('scalemethod', 'manual');
model.sol('sol6').feature('v1').feature('comp1_solid_hmm2_pvp1_evpe').set('scalemethod', 'manual');
model.sol('sol6').feature('v1').feature('comp1_solid_hmm2_pw').set('scalemethod', 'manual');
model.sol('sol6').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol6').feature('v1').feature('comp1_solid_hmm2_pvp1_evp').set('resscalemethod', 'parent');
model.sol('sol6').feature('v1').feature('comp1_solid_hmm2_pvp1_evpe').set('resscalemethod', 'parent');
model.sol('sol6').feature('v1').feature('comp1_solid_hmm2_pvp1_evp').set('scaleval', '0.001');
model.sol('sol6').feature('v1').feature('comp1_solid_hmm2_pvp1_evpe').set('scaleval', '0.001');
model.sol('sol6').feature('v1').feature('comp1_solid_hmm2_pw').set('scaleval', '100');
model.sol('sol6').feature('v1').feature('comp1_u').set('scaleval', '1e-2*3.3166247903554');
model.sol('sol6').feature('v1').set('control', 'time');
model.sol('sol6').create('o1', 'Optimization');
model.sol('sol6').feature('o1').set('gradientlm', 'numeric');
model.sol('sol6').feature('o1').set('diffint', 1.0E-6);
model.sol('sol6').feature('o1').set('control', 'lsqo');
model.sol('sol6').feature('o1').create('t1', 'TimeAttrib');
model.sol('sol6').feature('o1').feature('t1').set('rtol', 0.001);
model.sol('sol6').feature('o1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol6').feature('o1').feature('t1').set('reacf', true);
model.sol('sol6').feature('o1').feature('t1').set('storeudot', true);
model.sol('sol6').feature('o1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol6').feature('o1').feature('t1').set('control', 'time');
model.sol('sol6').feature('o1').feature('t1').create('tp1', 'TimeParametric');
model.sol('sol6').feature('o1').feature('t1').feature('tp1').set('control', 'time');
model.sol('sol6').feature('o1').feature('t1').set('control', 'time');
model.sol('sol6').feature('o1').feature('t1').feature('tp1').set('plistarrlsq', {'293.15,310.15,323.15' '0.1,0.1,0.1'});
model.sol('sol6').feature('o1').feature('t1').feature('tp1').set('lsqparamsout', ['         T  strain_rate' newline '       293        0.100' newline '       310        0.100' newline '       323        0.100' newline ]);
model.sol('sol6').feature('o1').feature('t1').feature('tp1').set('pnamelsq', {'T' 'strain_rate'});
model.sol('sol6').feature('v1').set('cname', {'t' 'timestep'});
model.sol('sol6').feature('v1').set('clist', {'range(0,0.1,1)[s]' '0.001[s]'});
model.sol('sol6').feature('v1').set('clistctrl', {'t1_t' 't1_timestep'});
model.sol('sol6').feature('v1').set('cname', {'t' 'timestep' 'T' 'strain_rate'});
model.sol('sol6').feature('v1').set('clist', {'range(0,0.1,1)[s]' '0.001[s]' '293.15,310.15,323.15' '0.1,0.1,0.1'});
model.sol('sol6').feature('v1').set('clistctrl', {'t1_t' 't1_timestep' 'tp1lsq' 'tp1lsq'});
model.sol('sol6').feature('o1').feature('t1').set('tlistlsq', [0 0.4 0.8 1.2 1.6 2 2.4 2.8 3.2 3.6 4 4.4 4.8 5.2 5.6 6 6.4 6.8 7.2 7.6 8 8.4 8.8 9.2 9.6 10 10.4 10.8 11.2 11.6 12 12.4 12.8 13.2 13.6 14 14.4 14.8 15.2 15.6 16 16.4 16.8 17.2 17.6 18 18.4 0 0; 0 0.4 0.8 1.2 1.6 2 2.4 2.8 3.2 3.6 4 4.4 4.8 5.2 5.6 6 6.4 6.8 7.2 7.6 8 8.4 8.8 9.2 9.6 10 10.4 10.8 11.2 11.6 12 12.4 12.8 13.2 13.6 14 14.4 14.8 15.2 15.6 16 16.4 16.8 17.2 17.6 18 18.4 18.8 19.2; 0 0.4 0.8 1.2 1.6 2 2.4 2.8 3.2 3.6 4 4.4 4.8 5.2 5.6 6 6.4 6.8 7.2 7.6 8 8.4 8.8 9.2 9.6 10 10.4 10.8 11.2 11.6 12 12.4 12.8 13.2 13.6 14 14.4 14.8 15.2 15.6 16 16.4 16.8 17.2 17.6 18 18.4 18.8 19.2]);
model.sol('sol6').feature('o1').feature('t1').set('lsqtimesout', ['      0.00' newline '     0.400' newline '     0.800' newline '      1.20' newline '      1.60' newline '      2.00' newline '      2.40' newline '      2.80' newline '      3.20' newline '      3.60' newline '      4.00' newline '      4.40' newline '      4.80' newline '      5.20' newline '      5.60' newline '      6.00' newline '      6.40' newline '      6.80' newline '      7.20' newline '      7.60' newline '      8.00' newline '      8.40' newline '      8.80' newline '      9.20' newline '      9.60' newline '      10.0' newline '      10.4' newline '      10.8' newline '      11.2' newline '      11.6' newline '      12.0' newline '      12.4' newline '      12.8' newline '      13.2' newline '      13.6' newline '      14.0' newline '      14.4' newline '      14.8' newline '      15.2' newline '      15.6' newline '      16.0' newline '      16.4' newline '      16.8' newline '      17.2' newline '      17.6' newline '      18.0' newline '      18.4' newline '      18.8' newline '      19.2' newline ]);
model.sol('sol6').feature('o1').feature('t1').set('tout', 'tlist');
model.sol('sol6').feature('o1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol6').feature('o1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol6').feature('o1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol6').feature('o1').feature('t1').feature('fc1').set('minstep', 0.5);
model.sol('sol6').feature('o1').feature('t1').feature('fc1').set('useminsteprecovery', 'on');
model.sol('sol6').feature('o1').feature('t1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol6').feature('o1').feature('t1').feature('fc1').set('maxiter', 4);
model.sol('sol6').feature('o1').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol6').feature('o1').feature('t1').create('d1', 'Direct');
model.sol('sol6').feature('o1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol6').feature('o1').feature('t1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol6').feature('o1').feature('t1').feature('d1').set('nliniterrefine', true);
model.sol('sol6').feature('o1').feature('t1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol6').feature('o1').feature('t1').create('i1', 'Iterative');
model.sol('sol6').feature('o1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol6').feature('o1').feature('t1').feature('i1').set('rhob', 40);
model.sol('sol6').feature('o1').feature('t1').feature('i1').set('nlinnormuse', true);
model.sol('sol6').feature('o1').feature('t1').feature('i1').label('Suggested Iterative Solver (GMRES with SA AMG) (solid)');
model.sol('sol6').feature('o1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol6').feature('o1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol6').feature('o1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol6').feature('o1').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol6').feature('o1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol6').feature('o1').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol6').feature('o1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol6').feature('o1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol6').feature('o1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol6').feature('o1').feature('t1').feature('fc1').set('minstep', 0.5);
model.sol('sol6').feature('o1').feature('t1').feature('fc1').set('useminsteprecovery', 'on');
model.sol('sol6').feature('o1').feature('t1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol6').feature('o1').feature('t1').feature('fc1').set('maxiter', 4);
model.sol('sol6').feature('o1').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol6').feature('o1').feature('t1').feature.remove('fcDef');
model.sol('sol6').attach('std3');
model.sol('sol6').feature('v1').feature('comp1_solid_hmm2_pvp1_evp').set('scaleval', 1);
model.sol('sol6').feature('v1').feature('comp1_solid_hmm2_pvp1_evpe').set('scaleval', 1);
model.sol('sol6').feature('v1').feature('comp1_solid_hmm2_pw').set('scaleval', 1);
model.sol('sol6').feature('v1').feature('comp1_u').set('scaleval', 'emax_ten');
model.sol('sol6').feature('o1').set('stationaryhidesens', 'off');
model.sol('sol6').feature('o1').set('stationaryhideadj', 'off');
model.sol('sol6').feature('o1').set('diffint', '1E-3');
model.sol('sol6').feature('o1').feature('t1').set('tstepsbdf', 'strict');
model.sol('sol6').feature('o1').feature('t1').set('consistent', false);
model.sol('sol6').feature('o1').feature('t1').feature('fc1').set('dtech', 'const');
model.sol('sol6').feature('o1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol6').feature('o1').feature('t1').feature('fc1').set('maxiter', 25);
model.sol('sol6').runAll;

model.study('std3').feature('lsqo').set('probewindow', '');

model.result('pg5').run;
model.result.duplicate('pg6', 'pg5');
model.result('pg6').run;
model.result('pg6').label('Parameter Estimation: Temperature Dependence');
model.result('pg6').set('data', 'dset4');
model.result('pg6').create('glob1', 'Global');
model.result('pg6').feature('glob1').set('markerpos', 'datapoints');
model.result('pg6').feature('glob1').set('linewidth', 'preference');
model.result('pg6').feature('glob1').label('Model Prediction, Tension 0.1 1/s, T=293 K');
model.result('pg6').feature('glob1').set('data', 'dset4');
model.result('pg6').feature('glob1').setIndex('looplevelinput', 'manual', 2);
model.result('pg6').feature('glob1').setIndex('looplevel', [1], 2);
model.result('pg6').feature('glob1').setIndex('expr', 'glso4.ten_fast.model', 0);
model.result('pg6').feature('glob1').set('xdata', 'expr');
model.result('pg6').feature('glob1').set('xdataexpr', 'elog_ten');
model.result('pg6').feature('glob1').set('linecolor', 'cyclereset');
model.result('pg6').feature('glob1').set('legend', false);
model.result('pg6').feature.duplicate('glob2', 'glob1');
model.result('pg6').run;
model.result('pg6').feature('glob2').label('Model Prediction, Tension 0.1 1/s, T=310 K');
model.result('pg6').feature('glob2').setIndex('looplevel', [2], 2);
model.result('pg6').feature('glob2').setIndex('expr', 'glso5.ten_fast_310K.model', 0);
model.result('pg6').feature('glob2').set('linecolor', 'cycle');
model.result('pg6').feature.duplicate('glob3', 'glob2');
model.result('pg6').run;
model.result('pg6').feature('glob3').label('Model Prediction, Tension 0.1 1/s, T=323 K');
model.result('pg6').feature('glob3').setIndex('looplevel', [3], 2);
model.result('pg6').feature('glob3').setIndex('expr', 'glso6.ten_fast_323K.model', 0);
model.result('pg6').run;
model.result.evaluationGroup.create('std2lsqoparam1', 'EvaluationGroup');
model.result.evaluationGroup('std2lsqoparam1').set('defaultPlotID', 'estimatedParameters');
model.result.evaluationGroup('std2lsqoparam1').label('Estimated Parameters (std2) 1');
model.result.evaluationGroup('std2lsqoparam1').set('data', 'dset3');
model.result.evaluationGroup('std2lsqoparam1').setIndex('looplevelinput', 'last', 0);
model.result.evaluationGroup('std2lsqoparam1').setIndex('looplevelinput', 'last', 1);
model.result.evaluationGroup('std2lsqoparam1').set('transpose', true);
model.result.evaluationGroup('std2lsqoparam1').set('includeparameters', false);
model.result.evaluationGroup('std2lsqoparam1').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('std2lsqoparam1').feature('gev1').setIndex('expr', 'mu0_eq', 0);
model.result.evaluationGroup('std2lsqoparam1').feature('gev1').setIndex('expr', 'Nsegm', 1);
model.result.evaluationGroup('std2lsqoparam1').feature('gev1').setIndex('expr', 'beta', 2);
model.result.evaluationGroup('std2lsqoparam1').feature('gev1').setIndex('expr', 'A', 3);
model.result.evaluationGroup('std2lsqoparam1').feature('gev1').setIndex('expr', 'c', 4);
model.result.evaluationGroup('std2lsqoparam1').feature('gev1').setIndex('expr', 'n', 5);
model.result.evaluationGroup('std2lsqoparam1').run;
model.result.evaluationGroup('std2lsqoparam1').label('Estimated Parameters (std2) 1');
model.result.evaluationGroup('std2lsqoparam1').label('Calibrated Material Parameters');
model.result.evaluationGroup('std2lsqoparam1').create('gev2', 'EvalGlobal');
model.result.evaluationGroup('std2lsqoparam1').feature('gev2').set('data', 'dset4');
model.result.evaluationGroup('std2lsqoparam1').feature('gev2').setIndex('looplevelinput', 'last', 2);
model.result.evaluationGroup('std2lsqoparam1').feature('gev2').setIndex('looplevelinput', 'last', 1);
model.result.evaluationGroup('std2lsqoparam1').feature('gev2').setIndex('looplevelinput', 'last', 0);
model.result.evaluationGroup('std2lsqoparam1').feature('gev2').setIndex('expr', 'm', 0);
model.result.evaluationGroup('std2lsqoparam1').run;

model.study('std1').feature('time').set('useadvanceddisable', true);
model.study('std1').feature('time').set('disabledphysics', {'solid/hmm2'});
model.study('std2').feature('time').set('useadvanceddisable', true);
model.study('std2').feature('time').set('disabledphysics', {'solid/hmm2'});

model.result('pg4').set('window', 'window1');
model.result('pg4').run;
model.result('pg4').label('Objective Function');
model.result('pg4').set('data', 'dset3');
model.result('pg4').set('ylabelactive', true);
model.result('pg4').set('ylabel', 'Objective');
model.result('pg4').set('ylog', true);
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').feature('glob1').set('data', 'dset3');
model.result('pg3').feature('glob1').setIndex('looplevelinput', 'manual', 1);
model.result('pg3').feature('glob1').setIndex('looplevel', [1], 1);
model.result('pg3').feature('glob1').set('xdatasolnumtype', 'level1');
model.result('pg3').run;
model.result('pg3').feature('glob2').set('data', 'dset3');
model.result('pg3').feature('glob2').setIndex('looplevelinput', 'manual', 1);
model.result('pg3').feature('glob2').setIndex('looplevel', [2], 1);
model.result('pg3').feature('glob2').set('xdatasolnumtype', 'level1');
model.result('pg3').run;
model.result('pg3').feature('glob3').set('data', 'dset3');
model.result('pg3').feature('glob3').setIndex('looplevelinput', 'manual', 1);
model.result('pg3').feature('glob3').setIndex('looplevel', [1], 1);
model.result('pg3').feature('glob3').set('xdatasolnumtype', 'level1');
model.result('pg3').run;
model.result('pg3').feature('glob4').set('data', 'dset3');
model.result('pg3').feature('glob4').setIndex('looplevelinput', 'manual', 1);
model.result('pg3').feature('glob4').setIndex('looplevel', [2], 1);
model.result('pg3').feature('glob4').set('xdatasolnumtype', 'level1');
model.result('pg3').run;

model.title('Parameter Estimation of Viscoplastic Polymers');

model.description(['This tutorial model demonstrates how to estimate the material parameters of a viscoplastic Bergstrom' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Boyce model suitable for nonequilibrium modeling of rubber-like materials. The data used for parameter estimation consists of cyclic uniaxial tension and compression tests at two different strain rates. After estimating the primary model parameters, the model formulation is extended to also include temperature dependence using additional data from tension experiments at different temperatures.']);

model.label('parameter_estimation_polymer_viscoplasticity.mph');

model.modelNode.label('Components');

out = model;
