function out = model
%
% impedance_tube_parameter_estimation_data.m
%
% Model exported on May 26 2025, 21:31 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Optimization_Module/Parameter_Estimation');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('acpr', 'PressureAcoustics', 'geom1');
model.physics('acpr').model('comp1');

model.study.create('std1');
model.study('std1').create('freq', 'Frequency');
model.study('std1').feature('freq').setSolveFor('/physics/acpr', true);

model.param.label('Geometrical Parameters');
model.param.set('L1', '30[cm]');
model.param.descr('L1', 'Length of tube');
model.param.set('D1', '10[cm]');
model.param.descr('D1', 'Diameter of tube');
model.param.set('L2', '3[cm]');
model.param.descr('L2', 'Length of porous region');
model.param.set('L3', '2[cm]');
model.param.descr('L3', 'Microphone spacing');
model.param.create('par2');
model.param('par2').label('Material Parameters');
model.param('par2').set('Rf0', '87[kN*s/m^4]');
model.param('par2').descr('Rf0', 'Flow resistivity');
model.param('par2').set('Lth0', '119[um]');
model.param('par2').descr('Lth0', 'Thermal characteristic length');
model.param('par2').set('Lv0', '37[um]');
model.param('par2').descr('Lv0', 'Viscous characteristic length');
model.param('par2').set('tau0', '2.52');
model.param('par2').descr('tau0', 'Tortuosity factor');
model.param('par2').set('epsilon0', '0.97');
model.param('par2').descr('epsilon0', 'Porosity');
model.param.create('par3');
model.param('par3').label('Material Parameters (Initial Guess)');
model.param('par3').set('Rf1', '100[kN*s/m^4]');
model.param('par3').descr('Rf1', 'Flow resistivity');
model.param('par3').set('Lth1', '100[um]');
model.param('par3').descr('Lth1', 'Thermal characteristic length');
model.param('par3').set('Lv1', '100[um]');
model.param('par3').descr('Lv1', 'Viscous characteristic length');
model.param('par3').set('tau1', '1');
model.param('par3').descr('tau1', 'Tortuosity factor');
model.param('par3').set('epsilon1', '0.5');
model.param('par3').descr('epsilon1', 'Porosity');
model.param.create('par4');
model.param('par4').set('error', '5e-3');
model.param('par4').descr('error', 'Relative measurement error');
model.param('par4').set('fmin', '500[Hz]');
model.param('par4').descr('fmin', 'Minimum frequency');
model.param('par4').set('fmax', '4[kHz]');
model.param('par4').descr('fmax', 'Maximum frequency');
model.param('par4').set('meshsz', '340[m/s]/fmax/12');
model.param('par4').descr('meshsz', 'Mesh size');

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', {'D1/2' 'L1'});
model.geom('geom1').feature('r1').set('pos', {'0' 'L2'});
model.geom('geom1').run('r1');
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').set('size', {'D1/2' 'L2'});
model.geom('geom1').run('r2');
model.geom('geom1').create('pt1', 'Point');
model.geom('geom1').feature('pt1').setIndex('p', 'D1/2', 0);
model.geom('geom1').feature('pt1').setIndex('p', 'L2+L3', 1);
model.geom('geom1').feature('pt1').set('selresult', true);
model.geom('geom1').run('pt1');
model.geom('geom1').create('pt2', 'Point');
model.geom('geom1').feature('pt2').setIndex('p', 'D1/2', 0);
model.geom('geom1').feature('pt2').setIndex('p', 'L2+2*L3', 1);
model.geom('geom1').feature('pt2').set('selresult', true);
model.geom('geom1').run('pt2');

model.func.create('rn1', 'Random');
model.func('rn1').set('type', 'normal');

model.probe.create('point1', 'Point');
model.probe('point1').model('comp1');

model.geom('geom1').run;

model.probe('point1').label('Microphone 1 (real)');
model.probe('point1').set('probename', 'mic1_real');
model.probe('point1').selection.named('geom1_pt1_pnt');
model.probe('point1').set('expr', 'real(acpr.p_t)');
model.probe.duplicate('point2', 'point1');
model.probe('point2').label('Microphone 1 (imag)');
model.probe('point2').set('probename', 'mic1_imag');
model.probe('point2').set('expr', 'imag(acpr.p_t)');
model.probe.duplicate('point3', 'point1');
model.probe('point3').label('Microphone 2 (real)');
model.probe('point3').set('probename', 'mic2_real');
model.probe('point3').selection.named('geom1_pt2_pnt');
model.probe.duplicate('point4', 'point3');
model.probe('point4').label('Microphone 2 (imag)');
model.probe('point4').set('probename', 'mic2_imag');
model.probe('point4').set('expr', 'imag(acpr.p_t)');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('rho', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('cs', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an1', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an2', 'Analytic');
model.material('mat1').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat1').propertyGroup.create('NonlinearModel', 'Nonlinear model');
model.material('mat1').propertyGroup.create('idealGas', 'Ideal gas');
model.material('mat1').propertyGroup('idealGas').func.create('Cp', 'Piecewise');
model.material('mat1').label('Air');
model.material('mat1').set('family', 'air');
model.material('mat1').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('eta').set('pieces', {'200.0' '1600.0' '-8.38278E-7+8.35717342E-8*T^1-7.69429583E-11*T^2+4.6437266E-14*T^3-1.06585607E-17*T^4'});
model.material('mat1').propertyGroup('def').func('eta').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat1').propertyGroup('def').func('Cp').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('def').func('rho').set('expr', 'pA*0.02897/R_const[K*mol/J]/T');
model.material('mat1').propertyGroup('def').func('rho').set('args', {'pA' 'T'});
model.material('mat1').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.material('mat1').propertyGroup('def').func('rho').set('argunit', {'Pa' 'K'});
model.material('mat1').propertyGroup('def').func('rho').set('plotaxis', {'off' 'on'});
model.material('mat1').propertyGroup('def').func('rho').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat1').propertyGroup('def').func('rho').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '293.15'});
model.material('mat1').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('k').set('pieces', {'200.0' '1600.0' '-0.00227583562+1.15480022E-4*T^1-7.90252856E-8*T^2+4.11702505E-11*T^3-7.43864331E-15*T^4'});
model.material('mat1').propertyGroup('def').func('k').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.material('mat1').propertyGroup('def').func('cs').set('expr', 'sqrt(1.4*R_const[K*mol/J]/0.02897*T)');
model.material('mat1').propertyGroup('def').func('cs').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('cs').set('fununit', 'm/s');
model.material('mat1').propertyGroup('def').func('cs').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('cs').set('plotfixedvalue', {'273.15'});
model.material('mat1').propertyGroup('def').func('cs').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.material('mat1').propertyGroup('def').func('an1').set('expr', '-1/rho(pA,T)*d(rho(pA,T),T)');
model.material('mat1').propertyGroup('def').func('an1').set('args', {'pA' 'T'});
model.material('mat1').propertyGroup('def').func('an1').set('fununit', '1/K');
model.material('mat1').propertyGroup('def').func('an1').set('argunit', {'Pa' 'K'});
model.material('mat1').propertyGroup('def').func('an1').set('plotaxis', {'off' 'on'});
model.material('mat1').propertyGroup('def').func('an1').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat1').propertyGroup('def').func('an1').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an2').set('funcname', 'muB');
model.material('mat1').propertyGroup('def').func('an2').set('expr', '0.6*eta(T)');
model.material('mat1').propertyGroup('def').func('an2').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('an2').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('an2').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an2').set('plotfixedvalue', {'200'});
model.material('mat1').propertyGroup('def').func('an2').set('plotargs', {'T' '200' '1600'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.material('mat1').propertyGroup('def').set('molarmass', '');
model.material('mat1').propertyGroup('def').set('bulkviscosity', '');
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)'});
model.material('mat1').propertyGroup('def').set('molarmass', '0.02897[kg/mol]');
model.material('mat1').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.material('mat1').propertyGroup('def').set('ratioofspecificheat', '1.4');
model.material('mat1').propertyGroup('def').set('electricconductivity', {'0[S/m]' '0' '0' '0' '0[S/m]' '0' '0' '0' '0[S/m]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.material('mat1').propertyGroup('def').set('density', 'rho(pA,T)');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.material('mat1').propertyGroup('def').set('soundspeed', 'cs(T)');
model.material('mat1').propertyGroup('def').addInput('temperature');
model.material('mat1').propertyGroup('def').addInput('pressure');
model.material('mat1').propertyGroup('RefractiveIndex').set('n', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('NonlinearModel').set('BA', 'def.gamma-1');
model.material('mat1').propertyGroup('idealGas').func('Cp').label('Piecewise 2');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat1').propertyGroup('idealGas').func('Cp').set('argunit', 'K');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('idealGas').set('Rs', 'R_const/Mn');
model.material('mat1').propertyGroup('idealGas').set('heatcapacity', 'Cp(T)');
model.material('mat1').propertyGroup('idealGas').set('ratioofspecificheat', '1.4');
model.material('mat1').propertyGroup('idealGas').set('molarmass', '0.02897');
model.material('mat1').propertyGroup('idealGas').addInput('temperature');
model.material('mat1').propertyGroup('idealGas').addInput('pressure');
model.material('mat1').materialType('nonSolid');
model.material.create('mat2', 'Common', 'comp1');

model.physics('acpr').create('pom1', 'PoroacousticsModel', 2);
model.physics('acpr').feature('pom1').selection.set([1]);
model.physics('acpr').feature('pom1').set('FluidModel', 'JohnsonChampouxAllard');
model.physics('acpr').feature('pom1').set('SolidMaterial', 'mat2');
model.physics('acpr').create('nacc1', 'NormalAcceleration', 1);
model.physics('acpr').feature('nacc1').selection.set([5]);
model.physics('acpr').feature('nacc1').set('nacc', 1);

model.material('mat2').propertyGroup('def').set('porosity', {'epsilon0'});
model.material('mat2').propertyGroup.create('PoroacousticsModel', 'Poroacoustics_model');
model.material('mat2').propertyGroup('PoroacousticsModel').set('Lv', {'Lv0'});
model.material('mat2').propertyGroup('PoroacousticsModel').set('Lth', {'Lth0'});
model.material('mat2').propertyGroup('PoroacousticsModel').set('tau', {'tau0'});
model.material('mat2').propertyGroup('PoroacousticsModel').set('Rf', {'Rf0'});

model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('size').set('custom', true);
model.mesh('mesh1').feature('size').set('hmax', 'meshsz');
model.mesh('mesh1').feature('size').set('hmin', 'meshsz/2');
model.mesh('mesh1').run;

model.study('std1').label('Generate Experimental Data');
model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'D1', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);
model.study('std1').feature('param').setIndex('pname', 'D1', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);
model.study('std1').feature('param').setIndex('pname', 'meshsz', 0);
model.study('std1').feature('param').setIndex('plistarr', '7 3.5', 0);
model.study('std1').feature('param').setIndex('punit', 'mm', 0);
model.study('std1').feature('param').set('probesel', 'none');
model.study('std1').feature('freq').set('probesel', 'none');
model.study('std1').feature('freq').set('plist', '{500, 515, 530, 545, 560, 580, 600, 615, 630, 650, 670, 690, 710, 730, 750, 775, 800, 825, 850, 875, 900, 925, 950, 975, 1e3, 1.03e3, 1.06e3, 1.09e3, 1.12e3, 1.15e3, 1.18e3, 1.22e3, 1.25e3, 1.28e3, 1.32e3, 1.36e3, 1.4e3, 1.45e3, 1.5e3, 1.55e3, 1.6e3, 1.65e3, 1.7e3, 1.75e3, 1.8e3, 1.85e3, 1.9e3, 1.95e3, 2e3, 2.06e3, 2.12e3, 2.18e3, 2.24e3, 2.3e3, 2.36e3, 2.43e3, 2.5e3, 2.58e3, 2.65e3, 2.72e3, 2.8e3, 2.9e3, 3e3, 3.07e3, 3.15e3, 3.25e3, 3.35e3, 3.45e3, 3.55e3, 3.65e3, 3.75e3, 3.87e3, 4e3}');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'{500, 515, 530, 545, 560, 580, 600, 615, 630, 650, 670, 690, 710, 730, 750, 775, 800, 825, 850, 875, 900, 925, 950, 975, 1e3, 1.03e3, 1.06e3, 1.09e3, 1.12e3, 1.15e3, 1.18e3, 1.22e3, 1.25e3, 1.28e3, 1.32e3, 1.36e3, 1.4e3, 1.45e3, 1.5e3, 1.55e3, 1.6e3, 1.65e3, 1.7e3, 1.75e3, 1.8e3, 1.85e3, 1.9e3, 1.95e3, 2e3, 2.06e3, 2.12e3, 2.18e3, 2.24e3, 2.3e3, 2.36e3, 2.43e3, 2.5e3, 2.58e3, 2.65e3, 2.72e3, 2.8e3, 2.9e3, 3e3, 3.07e3, 3.15e3, 3.25e3, 3.35e3, 3.45e3, 3.55e3, 3.65e3, 3.75e3, 3.87e3, 4e3}'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'Default');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'none');
model.sol('sol1').feature('s1').feature('p1').set('probes', {'point1' 'point2' 'point3' 'point4'});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'meshsz'});
model.batch('p1').set('plistarr', {'7 3.5'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'none');
model.batch('p1').set('probes', {'point1' 'point2' 'point3' 'point4'});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol.create('sol2');
model.sol('sol2').study('std1');
model.sol('sol2').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').run('compute');

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset2');
model.result('pg1').setIndex('looplevel', 73, 0);
model.result('pg1').setIndex('looplevel', 2, 1);
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'acpr.p_t'});
model.result('pg1').feature('surf1').set('colortable', 'Wave');
model.result('pg1').feature('surf1').set('colorscalemode', 'linearsymmetric');
model.result('pg1').set('showlegendsunit', true);
model.result('pg1').label('Acoustic Pressure (acpr)');
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').set('data', 'dset2');
model.result('pg2').setIndex('looplevel', 73, 0);
model.result('pg2').setIndex('looplevel', 2, 1);
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'acpr.Lp_t'});
model.result('pg2').feature('surf1').set('colortable', 'Rainbow');
model.result('pg2').feature('surf1').set('colorscalemode', 'linear');
model.result('pg2').set('showlegendsunit', true);
model.result('pg2').label('Sound Pressure Level (acpr)');
model.result.dataset.create('rev1', 'Revolve2D');
model.result.dataset('rev1').set('data', 'dset2');
model.result.dataset('rev1').set('revangle', 225);
model.result.dataset('rev1').set('startangle', -90);
model.result.dataset('rev1').set('hasspacevars', false);
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').set('data', 'rev1');
model.result('pg3').setIndex('looplevel', 73, 0);
model.result('pg3').setIndex('looplevel', 2, 1);
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', {'acpr.p_t'});
model.result('pg3').feature('surf1').set('colortable', 'Wave');
model.result('pg3').feature('surf1').set('colorscalemode', 'linearsymmetric');
model.result('pg3').set('showlegendsunit', true);
model.result('pg3').label('Acoustic Pressure, 3D (acpr)');
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').set('data', 'rev1');
model.result('pg4').setIndex('looplevel', 73, 0);
model.result('pg4').setIndex('looplevel', 2, 1);
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', {'acpr.Lp_t'});
model.result('pg4').feature('surf1').set('colortable', 'Rainbow');
model.result('pg4').feature('surf1').set('colorscalemode', 'linear');
model.result('pg4').set('showlegendsunit', true);
model.result('pg4').label('Sound Pressure Level, 3D (acpr)');
model.result('pg1').run;
model.result('pg4').run;
model.result('pg4').run;
model.result('pg1').run;

model.nodeGroup.create('grp1', 'Results');
model.nodeGroup('grp1').set('type', 'plotgroup');
model.nodeGroup('grp1').add('plotgroup', 'pg1');
model.nodeGroup('grp1').add('plotgroup', 'pg2');
model.nodeGroup('grp1').add('plotgroup', 'pg3');
model.nodeGroup('grp1').add('plotgroup', 'pg4');
model.nodeGroup('grp1').label('Experimental Data');

model.result.evaluationGroup.create('eg1', 'EvaluationGroup');
model.result.evaluationGroup('eg1').label('Experimental Data');
model.result.evaluationGroup('eg1').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'mic1_real*(1+error*rn1(freq+0))', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'Pa', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Sensor 1, real', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'mic1_imag*(1+error*rn1(freq+1))', 1);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'Pa', 1);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Sensor 1, imaginary', 1);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'mic2_real*(1+error*rn1(2*freq+0))', 2);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'Pa', 2);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Sensor 2, real', 2);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'mic2_imag*(1+error*rn1(2*freq+1))', 3);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'Pa', 3);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Sensor 2, imaginary', 3);
model.result.evaluationGroup('eg1').run;
model.result.evaluationGroup.create('eg2', 'EvaluationGroup');
model.result.evaluationGroup('eg2').set('data', 'dset2');
model.result.evaluationGroup('eg2').setIndex('looplevelinput', 'first', 1);
model.result.evaluationGroup('eg2').label('Relative Errors (mesh)');
model.result.evaluationGroup('eg2').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg2').feature('gev1').set('expr', {'(sqrt(mic1_real^2+mic1_imag^2)-withsol(''sol1'',sqrt(mic1_real^2+mic1_imag^2),setval(freq,freq)))/sqrt(mic1_real^2+mic1_imag^2)' '(sqrt(mic2_real^2+mic2_imag^2)-withsol(''sol1'',sqrt(mic2_real^2+mic2_imag^2),setval(freq,freq)))/sqrt(mic2_real^2+mic2_imag^2)'});
model.result.evaluationGroup('eg2').feature('gev1').set('descr', {'Sensor 1, magnitude' 'Sensor 2, magnitude'});
model.result.evaluationGroup('eg2').run;
model.result.create('pg5', 'PlotGroup1D');

model.nodeGroup('grp1').add('plotgroup', 'pg5');

model.result('pg5').run;
model.result('pg5').label('Errors');
model.result('pg5').create('tblp1', 'Table');
model.result('pg5').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg5').feature('tblp1').set('linewidth', 'preference');
model.result('pg5').feature('tblp1').set('source', 'evaluationgroup');
model.result('pg5').feature('tblp1').set('evaluationgroup', 'eg2');
model.result('pg5').feature('tblp1').set('xaxisdata', 2);
model.result('pg5').feature('tblp1').set('plotcolumninput', 'manual');
model.result('pg5').feature('tblp1').set('plotcolumns', [3 4]);
model.result('pg5').feature('tblp1').set('legend', true);
model.result('pg5').run;
model.result('pg5').set('xlabelactive', true);
model.result('pg5').set('xlabel', 'Frequency (Hz)');
model.result('pg5').set('ylabelactive', true);
model.result('pg5').set('ylabel', 'Relative error');
model.result('pg5').set('legendpos', 'upperleft');
model.result('pg5').run;
model.result.export.create('tbl1', 'Table');
model.result.export('tbl1').set('source', 'evaluationgroup');
model.result.export('tbl1').set('filename', 'impedance_tube_parameter_estimation_data.csv');
model.result.export('tbl1').set('header', false);
model.result.export('tbl1').run;

model.study.create('std2');
model.study('std2').create('freq', 'Frequency');
model.study('std2').feature('freq').setSolveFor('/physics/acpr', true);
model.study('std2').label('Parameter Estimation');
model.study('std2').create('lsqo', 'LSQOptimization');
model.study('std2').feature('lsqo').set('filename', 'impedance_tube_parameter_estimation_data.csv');
model.study('std2').feature('lsqo').importData;
model.study('std2').feature('lsqo').setEntry('columnType', 'col1', 'freq');
model.study('std2').feature('lsqo').setEntry('modelExpression', 'col2', 'comp1.mic1_real');
model.study('std2').feature('lsqo').setEntry('variableName', 'col2', 'pressure1');
model.study('std2').feature('lsqo').setEntry('unit', 'col2', 'Pa');
model.study('std2').feature('lsqo').setEntry('modelExpression', 'col3', 'comp1.mic1_imag');
model.study('std2').feature('lsqo').setEntry('variableName', 'col3', 'pressure2');
model.study('std2').feature('lsqo').setEntry('unit', 'col3', 'Pa');
model.study('std2').feature('lsqo').setEntry('modelExpression', 'col4', 'comp1.mic2_real');
model.study('std2').feature('lsqo').setEntry('variableName', 'col4', 'pressure3');
model.study('std2').feature('lsqo').setEntry('unit', 'col4', 'Pa');
model.study('std2').feature('lsqo').setEntry('modelExpression', 'col5', 'comp1.mic2_imag');
model.study('std2').feature('lsqo').setEntry('variableName', 'col5', 'pressure4');
model.study('std2').feature('lsqo').setEntry('unit', 'col5', 'Pa');
model.study('std2').feature('lsqo').set('optsolver', 'lm');
model.study('std2').feature('lsqo').set('lsqdatamethod', 'lsq');
model.study('std2').feature('lsqo').set('probesel', 'none');
model.study('std2').feature('lsqo').setIndex('pname', 'D1', 0);
model.study('std2').feature('lsqo').setIndex('initval', '10[cm]', 0);
model.study('std2').feature('lsqo').setIndex('scale', 1, 0);
model.study('std2').feature('lsqo').setIndex('lbound', '', 0);
model.study('std2').feature('lsqo').setIndex('ubound', '', 0);
model.study('std2').feature('lsqo').setIndex('pname', 'D1', 0);
model.study('std2').feature('lsqo').setIndex('initval', '10[cm]', 0);
model.study('std2').feature('lsqo').setIndex('scale', 1, 0);
model.study('std2').feature('lsqo').setIndex('lbound', '', 0);
model.study('std2').feature('lsqo').setIndex('ubound', '', 0);
model.study('std2').feature('lsqo').setIndex('pname', 'epsilon0', 1);
model.study('std2').feature('lsqo').setIndex('initval', 0.97, 1);
model.study('std2').feature('lsqo').setIndex('scale', 1, 1);
model.study('std2').feature('lsqo').setIndex('lbound', '', 1);
model.study('std2').feature('lsqo').setIndex('ubound', '', 1);
model.study('std2').feature('lsqo').setIndex('pname', 'epsilon0', 1);
model.study('std2').feature('lsqo').setIndex('initval', 0.97, 1);
model.study('std2').feature('lsqo').setIndex('scale', 1, 1);
model.study('std2').feature('lsqo').setIndex('lbound', '', 1);
model.study('std2').feature('lsqo').setIndex('ubound', '', 1);
model.study('std2').feature('lsqo').setIndex('pname', 'epsilon1', 2);
model.study('std2').feature('lsqo').setIndex('initval', 0.5, 2);
model.study('std2').feature('lsqo').setIndex('scale', 1, 2);
model.study('std2').feature('lsqo').setIndex('lbound', '', 2);
model.study('std2').feature('lsqo').setIndex('ubound', '', 2);
model.study('std2').feature('lsqo').setIndex('pname', 'epsilon1', 2);
model.study('std2').feature('lsqo').setIndex('initval', 0.5, 2);
model.study('std2').feature('lsqo').setIndex('scale', 1, 2);
model.study('std2').feature('lsqo').setIndex('lbound', '', 2);
model.study('std2').feature('lsqo').setIndex('ubound', '', 2);
model.study('std2').feature('lsqo').setIndex('pname', 'error', 3);
model.study('std2').feature('lsqo').setIndex('initval', '5e-3', 3);
model.study('std2').feature('lsqo').setIndex('scale', 1, 3);
model.study('std2').feature('lsqo').setIndex('lbound', '', 3);
model.study('std2').feature('lsqo').setIndex('ubound', '', 3);
model.study('std2').feature('lsqo').setIndex('pname', 'error', 3);
model.study('std2').feature('lsqo').setIndex('initval', '5e-3', 3);
model.study('std2').feature('lsqo').setIndex('scale', 1, 3);
model.study('std2').feature('lsqo').setIndex('lbound', '', 3);
model.study('std2').feature('lsqo').setIndex('ubound', '', 3);
model.study('std2').feature('lsqo').setIndex('pname', 'fmax', 4);
model.study('std2').feature('lsqo').setIndex('initval', '4[kHz]', 4);
model.study('std2').feature('lsqo').setIndex('scale', 1, 4);
model.study('std2').feature('lsqo').setIndex('lbound', '', 4);
model.study('std2').feature('lsqo').setIndex('ubound', '', 4);
model.study('std2').feature('lsqo').setIndex('pname', 'fmax', 4);
model.study('std2').feature('lsqo').setIndex('initval', '4[kHz]', 4);
model.study('std2').feature('lsqo').setIndex('scale', 1, 4);
model.study('std2').feature('lsqo').setIndex('lbound', '', 4);
model.study('std2').feature('lsqo').setIndex('ubound', '', 4);
model.study('std2').feature('lsqo').setIndex('pname', '', 0);
model.study('std2').feature('lsqo').setIndex('initval', 'epsilon1', 0);
model.study('std2').feature('lsqo').setIndex('pname', 'Lth0', 1);
model.study('std2').feature('lsqo').setIndex('pname', 'epsilon0', 0);
model.study('std2').feature('lsqo').setIndex('initval', 'Lth1', 1);
model.study('std2').feature('lsqo').setIndex('scale', '100[um]', 1);
model.study('std2').feature('lsqo').setIndex('pname', 'Lv0', 2);
model.study('std2').feature('lsqo').setIndex('initval', 'Lv1', 2);
model.study('std2').feature('lsqo').setIndex('scale', '100[um]', 2);
model.study('std2').feature('lsqo').setIndex('pname', 'Rf0', 3);
model.study('std2').feature('lsqo').setIndex('initval', 'Rf1', 3);
model.study('std2').feature('lsqo').setIndex('scale', '100[kN*s/m^4]', 3);
model.study('std2').feature('lsqo').setIndex('pname', 'tau0', 4);
model.study('std2').feature('lsqo').setIndex('initval', 'tau1', 4);

model.sol.create('sol5');
model.sol('sol5').study('std2');
model.sol('sol5').create('st1', 'StudyStep');
model.sol('sol5').feature('st1').set('study', 'std2');
model.sol('sol5').feature('st1').set('studystep', 'freq');
model.sol('sol5').create('v1', 'Variables');
model.sol('sol5').feature('v1').set('control', 'freq');
model.sol('sol5').create('o1', 'Optimization');
model.sol('sol5').feature('o1').set('control', 'lsqo');
model.sol('sol5').feature('o1').create('s1', 'StationaryAttrib');
model.sol('sol5').feature('o1').feature('s1').set('stol', 0.001);
model.sol('sol5').feature('o1').feature('s1').create('p1', 'Parametric');
model.sol('sol5').feature('o1').feature('s1').feature.remove('pDef');
model.sol('sol5').feature('o1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol5').feature('o1').feature('s1').set('control', 'freq');
model.sol('sol5').feature('o1').feature('s1').create('p2', 'Parametric');
model.sol('sol5').feature('o1').feature('s1').feature('p2').set('control', 'freq');
model.sol('sol5').feature('o1').feature('s1').set('control', 'freq');
model.sol('sol5').feature('o1').feature('s1').feature('p2').set('plistarrlsq', {'500.0, 515.0, 530.0, 545.0, 560.0, 580.0, 600.0, 615.0, 630.0, 650.0, 670.0, 690.0, 710.0, 730.0, 750.0, 775.0, 800.0, 825.0, 850.0, 875.0, 900.0, 925.0, 950.0, 975.0, 1000.0, 1030.0, 1060.0, 1090.0, 1120.0, 1150.0, 1180.0, 1220.0, 1250.0, 1280.0, 1320.0, 1360.0, 1400.0, 1450.0, 1500.0, 1550.0, 1600.0, 1650.0, 1700.0, 1750.0, 1800.0, 1850.0, 1900.0, 1950.0, 2000.0, 2060.0, 2120.0, 2180.0, 2240.0, 2300.0, 2360.0, 2430.0, 2500.0, 2580.0, 2650.0, 2720.0, 2800.0, 2900.0, 3000.0, 3070.0, 3150.0, 3250.0, 3350.0, 3450.0, 3550.0, 3650.0, 3750.0, 3870.0, 4000.0'});
model.sol('sol5').feature('o1').feature('s1').feature('p2').set('lsqparamsout', ['      freq' newline '       500' newline '       515' newline '       530' newline '       545' newline '       560' newline '       580' newline '       600' newline '       615' newline '       630' newline '       650' newline '       670' newline '       690' newline '       710' newline '       730' newline '       750' newline '       775' newline '       800' newline '       825' newline '       850' newline '       875' newline '       900' newline '       925' newline '       950' newline '       975' newline '  1.00e+03' newline '  1.03e+03' newline '  1.06e+03' newline '  1.09e+03' newline '  1.12e+03' newline '  1.15e+03' newline '  1.18e+03' newline '  1.22e+03' newline '  1.25e+03' newline '  1.28e+03' newline '  1.32e+03' newline '  1.36e+03' newline '  1.40e+03' newline '  1.45e+03' newline '  1.50e+03' newline '  1.55e+03' newline '  1.60e+03' newline '  1.65e+03' newline '  1.70e+03' newline '  1.75e+03' newline '  1.80e+03' newline '  1.85e+03' newline '  1.90e+03' newline '  1.95e+03' newline '  2.00e+03' newline '  2.06e+03' newline '  2.12e+03' newline '  2.18e+03' newline '  2.24e+03' newline '  2.30e+03' newline '  2.36e+03' newline '  2.43e+03' newline '  2.50e+03' newline '  2.58e+03' newline '  2.65e+03' newline '  2.72e+03' newline '  2.80e+03' newline '  2.90e+03' newline '  3.00e+03' newline '  3.07e+03' newline '  3.15e+03' newline '  3.25e+03' newline '  3.35e+03' newline '  3.45e+03' newline '  3.55e+03' newline '  3.65e+03' newline '  3.75e+03' newline '  3.87e+03' newline '  4.00e+03' newline ]);
model.sol('sol5').feature('o1').feature('s1').feature('p2').set('pnamelsq', {'freq'});
model.sol('sol5').feature('v1').set('cname', {});
model.sol('sol5').feature('v1').set('clist', {});
model.sol('sol5').feature('v1').set('clistctrl', {});
model.sol('sol5').feature('v1').set('cname', {'freq'});
model.sol('sol5').feature('v1').set('clist', {'500.0, 515.0, 530.0, 545.0, 560.0, 580.0, 600.0, 615.0, 630.0, 650.0, 670.0, 690.0, 710.0, 730.0, 750.0, 775.0, 800.0, 825.0, 850.0, 875.0, 900.0, 925.0, 950.0, 975.0, 1000.0, 1030.0, 1060.0, 1090.0, 1120.0, 1150.0, 1180.0, 1220.0, 1250.0, 1280.0, 1320.0, 1360.0, 1400.0, 1450.0, 1500.0, 1550.0, 1600.0, 1650.0, 1700.0, 1750.0, 1800.0, 1850.0, 1900.0, 1950.0, 2000.0, 2060.0, 2120.0, 2180.0, 2240.0, 2300.0, 2360.0, 2430.0, 2500.0, 2580.0, 2650.0, 2720.0, 2800.0, 2900.0, 3000.0, 3070.0, 3150.0, 3250.0, 3350.0, 3450.0, 3550.0, 3650.0, 3750.0, 3870.0, 4000.0'});
model.sol('sol5').feature('v1').set('clistctrl', {'p2lsq'});
model.sol('sol5').feature('o1').feature('s1').feature('p1').active(false);
model.sol('sol5').feature('o1').feature('s1').set('linpmethod', 'sol');
model.sol('sol5').feature('o1').feature('s1').set('linpsol', 'zero');
model.sol('sol5').feature('o1').feature('s1').set('control', 'freq');
model.sol('sol5').feature('o1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol5').feature('o1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol5').feature('o1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol5').feature('o1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol5').feature('o1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol5').feature('o1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol5').feature('o1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol5').feature('o1').feature('s1').feature.remove('fcDef');
model.sol('sol5').attach('std2');
model.sol('sol5').feature('st1').set('splitcomplex', true);
model.sol('sol5').feature('o1').set('gradientlm', 'adjoint');

model.study('std2').feature('freq').setEntry('mesh', 'geom1', 'mesh1');

model.sol('sol5').runAll;

model.result.create('pg6', 'PlotGroup2D');
model.result('pg6').set('data', 'dset3');
model.result('pg6').setIndex('looplevel', 73, 0);
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', {'acpr.p_t'});
model.result('pg6').feature('surf1').set('colortable', 'Wave');
model.result('pg6').feature('surf1').set('colorscalemode', 'linearsymmetric');
model.result('pg6').set('showlegendsunit', true);
model.result('pg6').label('Acoustic Pressure (acpr) 1');
model.result.create('pg7', 'PlotGroup2D');
model.result('pg7').set('data', 'dset3');
model.result('pg7').setIndex('looplevel', 73, 0);
model.result('pg7').create('surf1', 'Surface');
model.result('pg7').feature('surf1').set('expr', {'acpr.Lp_t'});
model.result('pg7').feature('surf1').set('colortable', 'Rainbow');
model.result('pg7').feature('surf1').set('colorscalemode', 'linear');
model.result('pg7').set('showlegendsunit', true);
model.result('pg7').label('Sound Pressure Level (acpr) 1');
model.result.dataset.create('rev2', 'Revolve2D');
model.result.dataset('rev2').set('data', 'dset3');
model.result.dataset('rev2').set('revangle', 225);
model.result.dataset('rev2').set('startangle', -90);
model.result.dataset('rev2').set('hasspacevars', false);
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').set('data', 'rev2');
model.result('pg8').setIndex('looplevel', 73, 0);
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').feature('surf1').set('expr', {'acpr.p_t'});
model.result('pg8').feature('surf1').set('colortable', 'Wave');
model.result('pg8').feature('surf1').set('colorscalemode', 'linearsymmetric');
model.result('pg8').set('showlegendsunit', true);
model.result('pg8').label('Acoustic Pressure, 3D (acpr) 1');
model.result.create('pg9', 'PlotGroup3D');
model.result('pg9').set('data', 'rev2');
model.result('pg9').setIndex('looplevel', 73, 0);
model.result('pg9').create('surf1', 'Surface');
model.result('pg9').feature('surf1').set('expr', {'acpr.Lp_t'});
model.result('pg9').feature('surf1').set('colortable', 'Rainbow');
model.result('pg9').feature('surf1').set('colorscalemode', 'linear');
model.result('pg9').set('showlegendsunit', true);
model.result('pg9').label('Sound Pressure Level, 3D (acpr) 1');
model.result.create('pg10', 'PlotGroup1D');
model.result('pg10').label('Parameter estimation');
model.result('pg10').set('data', 'dset3');
model.result('pg10').set('xlabelactive', true);
model.result('pg10').set('xlabel', 'Frequency');
model.result('pg10').set('titletype', 'none');
model.result('pg10').create('glob1', 'Global');
model.result('pg10').feature('glob1').label('Column 2 (model)');
model.result('pg10').feature('glob1').set('expr', {'opt.glsobj.pressure1.model'});
model.result('pg10').feature('glob1').set('descr', {'Column 2 (model)'});
model.result('pg10').feature('glob1').set('xdata', 'expr');
model.result('pg10').feature('glob1').set('xdataexpr', 'freq');
model.result('pg10').create('glob2', 'Global');
model.result('pg10').feature('glob2').label('Column 3 (model)');
model.result('pg10').feature('glob2').set('expr', {'opt.glsobj.pressure2.model'});
model.result('pg10').feature('glob2').set('descr', {'Column 3 (model)'});
model.result('pg10').feature('glob2').set('xdata', 'expr');
model.result('pg10').feature('glob2').set('xdataexpr', 'freq');
model.result('pg10').create('glob3', 'Global');
model.result('pg10').feature('glob3').label('Column 4 (model)');
model.result('pg10').feature('glob3').set('expr', {'opt.glsobj.pressure3.model'});
model.result('pg10').feature('glob3').set('descr', {'Column 4 (model)'});
model.result('pg10').feature('glob3').set('xdata', 'expr');
model.result('pg10').feature('glob3').set('xdataexpr', 'freq');
model.result('pg10').create('glob4', 'Global');
model.result('pg10').feature('glob4').label('Column 5 (model)');
model.result('pg10').feature('glob4').set('expr', {'opt.glsobj.pressure4.model'});
model.result('pg10').feature('glob4').set('descr', {'Column 5 (model)'});
model.result('pg10').feature('glob4').set('xdata', 'expr');
model.result('pg10').feature('glob4').set('xdataexpr', 'freq');
model.result('pg10').create('glob5', 'Global');
model.result('pg10').feature('glob5').label('Column 2 (data)');
model.result('pg10').feature('glob5').set('expr', {'opt.glsobj.pressure1.data'});
model.result('pg10').feature('glob5').set('descr', {'Column 2 (data)'});
model.result('pg10').feature('glob5').set('xdata', 'expr');
model.result('pg10').feature('glob5').set('xdataexpr', 'freq');
model.result('pg10').feature('glob5').set('linestyle', 'none');
model.result('pg10').feature('glob5').set('linemarker', 'point');
model.result('pg10').feature('glob5').set('markerpos', 'datapoints');
model.result('pg10').feature('glob5').set('linecolor', 'cyclereset');
model.result('pg10').create('glob6', 'Global');
model.result('pg10').feature('glob6').label('Column 3 (data)');
model.result('pg10').feature('glob6').set('expr', {'opt.glsobj.pressure2.data'});
model.result('pg10').feature('glob6').set('descr', {'Column 3 (data)'});
model.result('pg10').feature('glob6').set('xdata', 'expr');
model.result('pg10').feature('glob6').set('xdataexpr', 'freq');
model.result('pg10').feature('glob6').set('linestyle', 'none');
model.result('pg10').feature('glob6').set('linemarker', 'point');
model.result('pg10').feature('glob6').set('markerpos', 'datapoints');
model.result('pg10').create('glob7', 'Global');
model.result('pg10').feature('glob7').label('Column 4 (data)');
model.result('pg10').feature('glob7').set('expr', {'opt.glsobj.pressure3.data'});
model.result('pg10').feature('glob7').set('descr', {'Column 4 (data)'});
model.result('pg10').feature('glob7').set('xdata', 'expr');
model.result('pg10').feature('glob7').set('xdataexpr', 'freq');
model.result('pg10').feature('glob7').set('linestyle', 'none');
model.result('pg10').feature('glob7').set('linemarker', 'point');
model.result('pg10').feature('glob7').set('markerpos', 'datapoints');
model.result('pg10').create('glob8', 'Global');
model.result('pg10').feature('glob8').label('Column 5 (data)');
model.result('pg10').feature('glob8').set('expr', {'opt.glsobj.pressure4.data'});
model.result('pg10').feature('glob8').set('descr', {'Column 5 (data)'});
model.result('pg10').feature('glob8').set('xdata', 'expr');
model.result('pg10').feature('glob8').set('xdataexpr', 'freq');
model.result('pg10').feature('glob8').set('linestyle', 'none');
model.result('pg10').feature('glob8').set('linemarker', 'point');
model.result('pg10').feature('glob8').set('markerpos', 'datapoints');
model.result('pg6').run;

model.study('std2').feature('lsqo').set('probewindow', '');

model.nodeGroup.create('grp2', 'Results');
model.nodeGroup('grp2').set('type', 'plotgroup');
model.nodeGroup.move('grp2', 1);
model.nodeGroup('grp2').add('plotgroup', 'pg6');
model.nodeGroup('grp2').add('plotgroup', 'pg7');
model.nodeGroup('grp2').add('plotgroup', 'pg8');
model.nodeGroup('grp2').add('plotgroup', 'pg9');
model.nodeGroup('grp2').add('plotgroup', 'pg10');
model.nodeGroup('grp2').label('Parameter Estimation');

model.result('pg10').run;
model.result('pg10').run;
model.result.evaluationGroup.create('eg3', 'EvaluationGroup');
model.result.evaluationGroup('eg3').label('Relative Errors');
model.result.evaluationGroup('eg3').set('data', 'dset3');
model.result.evaluationGroup('eg3').setIndex('looplevelinput', 'first', 0);
model.result.evaluationGroup('eg3').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg3').feature('gev1').setIndex('expr', 'abs(Rf0-withsol(''sol1'',Rf0))/withsol(''sol1'',Rf0)', 0);
model.result.evaluationGroup('eg3').feature('gev1').setIndex('unit', 1, 0);
model.result.evaluationGroup('eg3').feature('gev1').setIndex('descr', '', 0);
model.result.evaluationGroup('eg3').feature('gev1').setIndex('expr', 'abs(Lth0-withsol(''sol1'',Lth0))/withsol(''sol1'',Lth0)', 1);
model.result.evaluationGroup('eg3').feature('gev1').setIndex('unit', 1, 1);
model.result.evaluationGroup('eg3').feature('gev1').setIndex('descr', '', 1);
model.result.evaluationGroup('eg3').feature('gev1').setIndex('expr', 'abs(Lv0-withsol(''sol1'',Lv0))/withsol(''sol1'',Lv0)', 2);
model.result.evaluationGroup('eg3').feature('gev1').setIndex('unit', 1, 2);
model.result.evaluationGroup('eg3').feature('gev1').setIndex('descr', '', 2);
model.result.evaluationGroup('eg3').feature('gev1').setIndex('expr', 'abs(tau0-withsol(''sol1'',tau0))/withsol(''sol1'',tau0)', 3);
model.result.evaluationGroup('eg3').feature('gev1').setIndex('unit', 1, 3);
model.result.evaluationGroup('eg3').feature('gev1').setIndex('descr', '', 3);
model.result.evaluationGroup('eg3').feature('gev1').setIndex('expr', 'abs(epsilon0-withsol(''sol1'',epsilon0))/withsol(''sol1'',epsilon0)', 4);
model.result.evaluationGroup('eg3').feature('gev1').setIndex('unit', 1, 4);
model.result.evaluationGroup('eg3').feature('gev1').setIndex('descr', '', 4);
model.result.evaluationGroup('eg3').run;

model.title('Impedance Tube Parameter Estimation with Data Generation');

model.description(['Impedance tubes are used for estimating the surface impedance of various samples, for example, a layer of porous material used for sound insulation. This model shows how the five material parameters of the Johnson' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Champoux' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Allard model can be estimated from the pressure at two measurement microphones. The model includes an initial study, which generates synthetic measurement data. Noise is added to the data before it is exported.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;

model.label('impedance_tube_parameter_estimation_data.mph');

model.modelNode.label('Components');

out = model;
