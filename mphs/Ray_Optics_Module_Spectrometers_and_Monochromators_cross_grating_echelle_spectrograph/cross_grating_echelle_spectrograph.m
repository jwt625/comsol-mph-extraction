function out = model
%
% cross_grating_echelle_spectrograph.m
%
% Model exported on May 26 2025, 21:32 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Ray_Optics_Module/Spectrometers_and_Monochromators');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('gop', 'GeometricalOptics', 'geom1');
model.physics('gop').model('comp1');

model.study.create('std1');
model.study('std1').create('rtrac', 'RayTracing');
model.study('std1').feature('rtrac').setSolveFor('/physics/gop', true);

model.param.label('Parameters 1: Geometry');
model.param.create('par2');
model.param('par2').label('Parameters 2: Model');

% To import content from file, use:
% model.param('par2').loadFile('FILENAME');
model.param('par2').set('lam_nom', '525[nm]', 'Nominal wavelength');
model.param('par2').set('N_hex', '10', 'Number of hexapolar rings');
model.param('par2').set('N_lam', '5', 'Number of wavelengths per order');
model.param('par2').set('f_col', '100.0[mm]', 'Collimator focal length');
model.param('par2').set('D', '15.0[mm]', 'Collimated beam diameter');
model.param('par2').set('F', 'f_col/D', 'Input focal ratio');
model.param('par2').set('NA', '0.5/F', 'Input numerical aperture');
model.param('par2').set('T_ech', '50[1/mm]', 'Echelle line density');
model.param('par2').set('sigma_ech', '1/T_ech', 'Echelle line separation');
model.param('par2').set('mlam_const', '2*sigma_ech*cos(theta_xdp)*sin(theta_B)', 'Order number times wavelength constant');
model.param('par2').set('m', 'round(mlam_const/lam_nom)', 'Echelle diffraction order');
model.param('par2').set('lam_B', 'mlam_const/m', 'Actual echelle blaze wavelength');
model.param('par2').set('dlam_FSR', 'lam_B/m', 'Echelle free spectral range');
model.param('par2').set('lam_min', 'lam_B-dlam_FSR/2', 'Minimum wavelength (in order m_nom)');
model.param('par2').set('lam_max', 'lam_B+dlam_FSR/2', 'Maximum wavelength (in order m_nom)');
model.param('par2').set('lam_step', '(lam_max-lam_min)/(N_lam-1)', 'Wavelength step size');

model.geom('geom1').label(['Cross Grating ' native2unicode(hex2dec({'00' 'c9'}), 'unicode') 'chelle Spectrograph Geometry Sequence']);
model.geom('geom1').insertFile('cross_grating_echelle_spectrograph_geom_sequence.mph', 'geom1');
model.geom('geom1').run('fin');

model.view('view1').camera.set('projection', 'orthographic');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('DispersionModelSellmeierStandard', 'Sellmeier');
model.material('mat1').propertyGroup.create('ThermoOpticDispersionModelSchott', 'Schott thermo-optic');
model.material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat1').propertyGroup.create('InternalTransmittance10', ['Internal transmittance, 10' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'mm sample thickness']);
model.material('mat1').propertyGroup('InternalTransmittance10').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('InternalTransmittance25', ['Internal transmittance, 25' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'mm sample thickness']);
model.material('mat1').propertyGroup('InternalTransmittance25').func.create('int1', 'Interpolation');
model.material('mat1').label('Schott N-BK7 Glass');
model.material('mat1').propertyGroup('def').set('density', '2.51[g/cm^3]');
model.material('mat1').propertyGroup('def').set('heatcapacity', '0.858[J/(g*K)]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'1.114[W/(m*K)]' '0' '0' '0' '1.114[W/(m*K)]' '0' '0' '0' '1.114[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'7.1E-6[1/K]' '0' '0' '0' '7.1E-6[1/K]' '0' '0' '0' '7.1E-6[1/K]'});
model.material('mat1').propertyGroup('DispersionModelSellmeierStandard').set('ODsma', {'1.03961212E+00' '2.31792344E-01' '1.01046945E+00' '6.00069867E-03' '2.00179144E-02' '1.03560653E+02'});
model.material('mat1').propertyGroup('DispersionModelSellmeierStandard').set('Trefsma', '22[degC]');
model.material('mat1').propertyGroup('DispersionModelSellmeierStandard').set('Prefsma', '1[atm]');
model.material('mat1').propertyGroup('DispersionModelSellmeierStandard').addInput('frequency');
model.material('mat1').propertyGroup('ThermoOpticDispersionModelSchott').set('TOsco', {'1.86E-6' '1.31E-8' '-1.37E-11' '4.34E-7' '6.27E-10' '0.17'});
model.material('mat1').propertyGroup('ThermoOpticDispersionModelSchott').set('Trefsco', '20[degC]');
model.material('mat1').propertyGroup('Enu').set('E', '82.0[GPa]');
model.material('mat1').propertyGroup('Enu').set('nu', '0.206');
model.material('mat1').propertyGroup('InternalTransmittance10').func('int1').set('funcname', 'taui10');
model.material('mat1').propertyGroup('InternalTransmittance10').func('int1').set('table', {'2500' '0.665';  ...
'2325' '0.793';  ...
'1970' '0.933';  ...
'1530' '0.992';  ...
'1060' '0.999';  ...
'700' '0.998';  ...
'660' '0.998';  ...
'620' '0.998';  ...
'580' '0.998';  ...
'546' '0.998';  ...
'500' '0.998';  ...
'460' '0.997';  ...
'436' '0.997';  ...
'420' '0.997';  ...
'405' '0.997';  ...
'400' '0.997';  ...
'390' '0.996';  ...
'380' '0.993';  ...
'370' '0.991';  ...
'365' '0.988';  ...
'350' '0.967';  ...
'334' '0.905';  ...
'320' '0.77';  ...
'310' '0.574';  ...
'300' '0.292';  ...
'290' '0.063'});
model.material('mat1').propertyGroup('InternalTransmittance10').func('int1').set('extrap', 'none');
model.material('mat1').propertyGroup('InternalTransmittance10').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('InternalTransmittance10').func('int1').set('argunit', {'nm'});
model.material('mat1').propertyGroup('InternalTransmittance10').set('taui10', 'taui10(c_const/freq)');
model.material('mat1').propertyGroup('InternalTransmittance10').addInput('frequency');
model.material('mat1').propertyGroup('InternalTransmittance25').func('int1').set('funcname', 'taui25');
model.material('mat1').propertyGroup('InternalTransmittance25').func('int1').set('table', {'2500' '0.36';  ...
'2325' '0.56';  ...
'1970' '0.84';  ...
'1530' '0.98';  ...
'1060' '0.997';  ...
'700' '0.996';  ...
'660' '0.994';  ...
'620' '0.994';  ...
'580' '0.995';  ...
'546' '0.996';  ...
'500' '0.994';  ...
'460' '0.993';  ...
'436' '0.992';  ...
'420' '0.993';  ...
'405' '0.993';  ...
'400' '0.992';  ...
'390' '0.989';  ...
'380' '0.983';  ...
'370' '0.977';  ...
'365' '0.971';  ...
'350' '0.92';  ...
'334' '0.78';  ...
'320' '0.52';  ...
'310' '0.25';  ...
'300' '0.05'});
model.material('mat1').propertyGroup('InternalTransmittance25').func('int1').set('extrap', 'none');
model.material('mat1').propertyGroup('InternalTransmittance25').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('InternalTransmittance25').func('int1').set('argunit', {'nm'});
model.material('mat1').propertyGroup('InternalTransmittance25').set('taui25', 'taui25(c_const/freq)');
model.material('mat1').propertyGroup('InternalTransmittance25').addInput('frequency');
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').propertyGroup.create('DispersionModelSellmeierStandard', 'Sellmeier');
model.material('mat2').propertyGroup.create('ThermoOpticDispersionModelSchott', 'Schott thermo-optic');
model.material('mat2').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat2').propertyGroup.create('InternalTransmittance10', ['Internal transmittance, 10' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'mm sample thickness']);
model.material('mat2').propertyGroup('InternalTransmittance10').func.create('int1', 'Interpolation');
model.material('mat2').propertyGroup.create('InternalTransmittance25', ['Internal transmittance, 25' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'mm sample thickness']);
model.material('mat2').propertyGroup('InternalTransmittance25').func.create('int1', 'Interpolation');
model.material('mat2').label('Schott N-KZFS5 Glass');
model.material('mat2').propertyGroup('def').set('density', '3.04[g/cm^3]');
model.material('mat2').propertyGroup('def').set('heatcapacity', '0.73[J/(g*K)]');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'0.95[W/(m*K)]' '0' '0' '0' '0.95[W/(m*K)]' '0' '0' '0' '0.95[W/(m*K)]'});
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'6.38E-6[1/K]' '0' '0' '0' '6.38E-6[1/K]' '0' '0' '0' '6.38E-6[1/K]'});
model.material('mat2').propertyGroup('DispersionModelSellmeierStandard').set('ODsma', {'1.47460789E+00' '1.93584488E-01' '1.26589974E+00' '9.86143816E-03' '4.45477583E-02' '1.06436258E+02'});
model.material('mat2').propertyGroup('DispersionModelSellmeierStandard').set('Trefsma', '22[degC]');
model.material('mat2').propertyGroup('DispersionModelSellmeierStandard').set('Prefsma', '1[atm]');
model.material('mat2').propertyGroup('DispersionModelSellmeierStandard').addInput('frequency');
model.material('mat2').propertyGroup('ThermoOpticDispersionModelSchott').set('TOsco', {'4.54E-6' '1.19E-8' '2.93E-12' '6.89E-7' '8.6E-10' '0.23'});
model.material('mat2').propertyGroup('ThermoOpticDispersionModelSchott').set('Trefsco', '20[degC]');
model.material('mat2').propertyGroup('Enu').set('E', '89.0[GPa]');
model.material('mat2').propertyGroup('Enu').set('nu', '0.243');
model.material('mat2').propertyGroup('InternalTransmittance10').func('int1').set('funcname', 'taui10');
model.material('mat2').propertyGroup('InternalTransmittance10').func('int1').set('table', {'2500' '0.657';  ...
'2325' '0.826';  ...
'1970' '0.963';  ...
'1530' '0.988';  ...
'1060' '0.999';  ...
'700' '0.998';  ...
'660' '0.997';  ...
'620' '0.997';  ...
'580' '0.997';  ...
'546' '0.997';  ...
'500' '0.994';  ...
'460' '0.99';  ...
'436' '0.986';  ...
'420' '0.983';  ...
'405' '0.978';  ...
'400' '0.976';  ...
'390' '0.967';  ...
'380' '0.95';  ...
'370' '0.928';  ...
'365' '0.91';  ...
'350' '0.793';  ...
'334' '0.372';  ...
'320' '0.017'});
model.material('mat2').propertyGroup('InternalTransmittance10').func('int1').set('extrap', 'none');
model.material('mat2').propertyGroup('InternalTransmittance10').func('int1').set('fununit', {'1'});
model.material('mat2').propertyGroup('InternalTransmittance10').func('int1').set('argunit', {'nm'});
model.material('mat2').propertyGroup('InternalTransmittance10').set('taui10', 'taui10(c_const/freq)');
model.material('mat2').propertyGroup('InternalTransmittance10').addInput('frequency');
model.material('mat2').propertyGroup('InternalTransmittance25').func('int1').set('funcname', 'taui25');
model.material('mat2').propertyGroup('InternalTransmittance25').func('int1').set('table', {'2500' '0.35';  ...
'2325' '0.62';  ...
'1970' '0.91';  ...
'1530' '0.97';  ...
'1060' '0.998';  ...
'700' '0.994';  ...
'660' '0.992';  ...
'620' '0.992';  ...
'580' '0.993';  ...
'546' '0.992';  ...
'500' '0.985';  ...
'460' '0.974';  ...
'436' '0.965';  ...
'420' '0.958';  ...
'405' '0.946';  ...
'400' '0.94';  ...
'390' '0.92';  ...
'380' '0.88';  ...
'370' '0.83';  ...
'365' '0.79';  ...
'350' '0.56';  ...
'334' '0.08'});
model.material('mat2').propertyGroup('InternalTransmittance25').func('int1').set('extrap', 'none');
model.material('mat2').propertyGroup('InternalTransmittance25').func('int1').set('fununit', {'1'});
model.material('mat2').propertyGroup('InternalTransmittance25').func('int1').set('argunit', {'nm'});
model.material('mat2').propertyGroup('InternalTransmittance25').set('taui25', 'taui25(c_const/freq)');
model.material('mat2').propertyGroup('InternalTransmittance25').addInput('frequency');
model.material.create('mat3', 'Common', 'comp1');
model.material('mat3').propertyGroup.create('DispersionModelSellmeierStandard', 'Sellmeier');
model.material('mat3').propertyGroup.create('ThermoOpticDispersionModelSchott', 'Schott thermo-optic');
model.material('mat3').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat3').propertyGroup.create('InternalTransmittance10', ['Internal transmittance, 10' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'mm sample thickness']);
model.material('mat3').propertyGroup('InternalTransmittance10').func.create('int1', 'Interpolation');
model.material('mat3').propertyGroup.create('InternalTransmittance25', ['Internal transmittance, 25' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'mm sample thickness']);
model.material('mat3').propertyGroup('InternalTransmittance25').func.create('int1', 'Interpolation');
model.material('mat3').label('Schott N-SK2 Glass');
model.material('mat3').propertyGroup('def').set('density', '3.55[g/cm^3]');
model.material('mat3').propertyGroup('def').set('heatcapacity', '0.595[J/(g*K)]');
model.material('mat3').propertyGroup('def').set('thermalconductivity', {'0.776[W/(m*K)]' '0' '0' '0' '0.776[W/(m*K)]' '0' '0' '0' '0.776[W/(m*K)]'});
model.material('mat3').propertyGroup('def').set('thermalexpansioncoefficient', {'6.0E-6[1/K]' '0' '0' '0' '6.0E-6[1/K]' '0' '0' '0' '6.0E-6[1/K]'});
model.material('mat3').propertyGroup('DispersionModelSellmeierStandard').set('ODsma', {'1.28189012E+00' '2.57738258E-01' '9.68186040E-01' '7.27191640E-03' '2.42823527E-02' '1.10377773E+02'});
model.material('mat3').propertyGroup('DispersionModelSellmeierStandard').set('Trefsma', '22[degC]');
model.material('mat3').propertyGroup('DispersionModelSellmeierStandard').set('Prefsma', '1[atm]');
model.material('mat3').propertyGroup('DispersionModelSellmeierStandard').addInput('frequency');
model.material('mat3').propertyGroup('ThermoOpticDispersionModelSchott').set('TOsco', {'3.8E-6' '1.41E-8' '2.28E-11' '6.44E-7' '8.03E-11' '0.108'});
model.material('mat3').propertyGroup('ThermoOpticDispersionModelSchott').set('Trefsco', '20[degC]');
model.material('mat3').propertyGroup('Enu').set('E', '78.0[GPa]');
model.material('mat3').propertyGroup('Enu').set('nu', '0.263');
model.material('mat3').propertyGroup('InternalTransmittance10').func('int1').set('funcname', 'taui10');
model.material('mat3').propertyGroup('InternalTransmittance10').func('int1').set('table', {'2500' '0.815';  ...
'2325' '0.896';  ...
'1970' '0.971';  ...
'1530' '0.995';  ...
'1060' '0.998';  ...
'700' '0.998';  ...
'660' '0.998';  ...
'620' '0.998';  ...
'580' '0.998';  ...
'546' '0.998';  ...
'500' '0.996';  ...
'460' '0.993';  ...
'436' '0.993';  ...
'420' '0.994';  ...
'405' '0.994';  ...
'400' '0.994';  ...
'390' '0.992';  ...
'380' '0.988';  ...
'370' '0.976';  ...
'365' '0.967';  ...
'350' '0.905';  ...
'334' '0.752';  ...
'320' '0.504';  ...
'310' '0.276';  ...
'300' '0.102';  ...
'290' '0.02'});
model.material('mat3').propertyGroup('InternalTransmittance10').func('int1').set('extrap', 'none');
model.material('mat3').propertyGroup('InternalTransmittance10').func('int1').set('fununit', {'1'});
model.material('mat3').propertyGroup('InternalTransmittance10').func('int1').set('argunit', {'nm'});
model.material('mat3').propertyGroup('InternalTransmittance10').set('taui10', 'taui10(c_const/freq)');
model.material('mat3').propertyGroup('InternalTransmittance10').addInput('frequency');
model.material('mat3').propertyGroup('InternalTransmittance25').func('int1').set('funcname', 'taui25');
model.material('mat3').propertyGroup('InternalTransmittance25').func('int1').set('table', {'2500' '0.6';  ...
'2325' '0.76';  ...
'1970' '0.93';  ...
'1530' '0.988';  ...
'1060' '0.995';  ...
'700' '0.995';  ...
'660' '0.994';  ...
'620' '0.994';  ...
'580' '0.995';  ...
'546' '0.995';  ...
'500' '0.99';  ...
'460' '0.983';  ...
'436' '0.982';  ...
'420' '0.984';  ...
'405' '0.985';  ...
'400' '0.984';  ...
'390' '0.979';  ...
'380' '0.97';  ...
'370' '0.94';  ...
'365' '0.92';  ...
'350' '0.78';  ...
'334' '0.49';  ...
'320' '0.18';  ...
'310' '0.04'});
model.material('mat3').propertyGroup('InternalTransmittance25').func('int1').set('extrap', 'none');
model.material('mat3').propertyGroup('InternalTransmittance25').func('int1').set('fununit', {'1'});
model.material('mat3').propertyGroup('InternalTransmittance25').func('int1').set('argunit', {'nm'});
model.material('mat3').propertyGroup('InternalTransmittance25').set('taui25', 'taui25(c_const/freq)');
model.material('mat3').propertyGroup('InternalTransmittance25').addInput('frequency');
model.material.create('mat4', 'Common', 'comp1');
model.material('mat4').propertyGroup.create('DispersionModelSellmeierStandard', 'Sellmeier');
model.material('mat4').propertyGroup.create('ThermoOpticDispersionModelSchott', 'Schott thermo-optic');
model.material('mat4').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat4').propertyGroup.create('InternalTransmittance10', ['Internal transmittance, 10' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'mm sample thickness']);
model.material('mat4').propertyGroup('InternalTransmittance10').func.create('int1', 'Interpolation');
model.material('mat4').propertyGroup.create('InternalTransmittance25', ['Internal transmittance, 25' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'mm sample thickness']);
model.material('mat4').propertyGroup('InternalTransmittance25').func.create('int1', 'Interpolation');
model.material('mat4').label('Schott N-SF5 Glass');
model.material('mat4').propertyGroup('def').set('density', '2.86[g/cm^3]');
model.material('mat4').propertyGroup('def').set('heatcapacity', '0.77[J/(g*K)]');
model.material('mat4').propertyGroup('def').set('thermalconductivity', {'1.0[W/(m*K)]' '0' '0' '0' '1.0[W/(m*K)]' '0' '0' '0' '1.0[W/(m*K)]'});
model.material('mat4').propertyGroup('def').set('thermalexpansioncoefficient', {'7.94E-6[1/K]' '0' '0' '0' '7.94E-6[1/K]' '0' '0' '0' '7.94E-6[1/K]'});
model.material('mat4').propertyGroup('DispersionModelSellmeierStandard').set('ODsma', {'1.52481889E+00' '1.87085527E-01' '1.42729015E+00' '1.12547560E-02' '5.88995392E-02' '1.29141675E+02'});
model.material('mat4').propertyGroup('DispersionModelSellmeierStandard').set('Trefsma', '22[degC]');
model.material('mat4').propertyGroup('DispersionModelSellmeierStandard').set('Prefsma', '1[atm]');
model.material('mat4').propertyGroup('DispersionModelSellmeierStandard').addInput('frequency');
model.material('mat4').propertyGroup('ThermoOpticDispersionModelSchott').set('TOsco', {'-2.51E-7' '1.07E-8' '-2.4E-11' '7.85E-7' '1.15E-9' '0.278'});
model.material('mat4').propertyGroup('ThermoOpticDispersionModelSchott').set('Trefsco', '20[degC]');
model.material('mat4').propertyGroup('Enu').set('E', '87.0[GPa]');
model.material('mat4').propertyGroup('Enu').set('nu', '0.237');
model.material('mat4').propertyGroup('InternalTransmittance10').func('int1').set('funcname', 'taui10');
model.material('mat4').propertyGroup('InternalTransmittance10').func('int1').set('table', {'2500' '0.758';  ...
'2325' '0.831';  ...
'1970' '0.95';  ...
'1530' '0.99';  ...
'1060' '0.998';  ...
'700' '0.996';  ...
'660' '0.995';  ...
'620' '0.995';  ...
'580' '0.996';  ...
'546' '0.995';  ...
'500' '0.99';  ...
'460' '0.982';  ...
'436' '0.973';  ...
'420' '0.963';  ...
'405' '0.928';  ...
'400' '0.905';  ...
'390' '0.826';  ...
'380' '0.642';  ...
'370' '0.276';  ...
'365' '0.116'});
model.material('mat4').propertyGroup('InternalTransmittance10').func('int1').set('extrap', 'none');
model.material('mat4').propertyGroup('InternalTransmittance10').func('int1').set('fununit', {'1'});
model.material('mat4').propertyGroup('InternalTransmittance10').func('int1').set('argunit', {'nm'});
model.material('mat4').propertyGroup('InternalTransmittance10').set('taui10', 'taui10(c_const/freq)');
model.material('mat4').propertyGroup('InternalTransmittance10').addInput('frequency');
model.material('mat4').propertyGroup('InternalTransmittance25').func('int1').set('funcname', 'taui25');
model.material('mat4').propertyGroup('InternalTransmittance25').func('int1').set('table', {'2500' '0.5';  ...
'2325' '0.63';  ...
'1970' '0.88';  ...
'1530' '0.975';  ...
'1060' '0.994';  ...
'700' '0.989';  ...
'660' '0.987';  ...
'620' '0.988';  ...
'580' '0.991';  ...
'546' '0.988';  ...
'500' '0.976';  ...
'460' '0.956';  ...
'436' '0.935';  ...
'420' '0.91';  ...
'405' '0.83';  ...
'400' '0.78';  ...
'390' '0.62';  ...
'380' '0.33';  ...
'370' '0.04'});
model.material('mat4').propertyGroup('InternalTransmittance25').func('int1').set('extrap', 'none');
model.material('mat4').propertyGroup('InternalTransmittance25').func('int1').set('fununit', {'1'});
model.material('mat4').propertyGroup('InternalTransmittance25').func('int1').set('argunit', {'nm'});
model.material('mat4').propertyGroup('InternalTransmittance25').set('taui25', 'taui25(c_const/freq)');
model.material('mat4').propertyGroup('InternalTransmittance25').addInput('frequency');
model.material.create('mat5', 'Common', 'comp1');
model.material('mat5').propertyGroup.create('DispersionModelSellmeierStandard', 'Sellmeier');
model.material('mat5').propertyGroup.create('ThermoOpticDispersionModelSchott', 'Schott thermo-optic');
model.material('mat5').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat5').propertyGroup.create('InternalTransmittance5', ['Internal transmittance, 5' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'mm sample thickness']);
model.material('mat5').propertyGroup('InternalTransmittance5').func.create('int1', 'Interpolation');
model.material('mat5').propertyGroup.create('InternalTransmittance10', ['Internal transmittance, 10' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'mm sample thickness']);
model.material('mat5').propertyGroup('InternalTransmittance10').func.create('int1', 'Interpolation');
model.material('mat5').label('CDGM H-ZF39 Glass');
model.material('mat5').propertyGroup('def').set('density', '2.92[g/cm^3]');
model.material('mat5').propertyGroup('def').set('thermalexpansioncoefficient', {'90.0E-7[1/K]' '0' '0' '0' '90.0E-7[1/K]' '0' '0' '0' '90.0E-7[1/K]'});
model.material('mat5').propertyGroup('DispersionModelSellmeierStandard').set('ODsma', {'1.53633529E-01' '1.54070508E+00' '1.20956745E+00' '6.03806210E-02' '1.18591415E-02' '1.19979606E+02'});
model.material('mat5').propertyGroup('DispersionModelSellmeierStandard').set('Trefsma', '20[degC]');
model.material('mat5').propertyGroup('DispersionModelSellmeierStandard').set('Prefsma', '1[atm]');
model.material('mat5').propertyGroup('DispersionModelSellmeierStandard').addInput('frequency');
model.material('mat5').propertyGroup('ThermoOpticDispersionModelSchott').set('TOsco', {'-4.14E-6' '1.44E-8' '-6.69E-11' '8.18E-7' '9.54E-10' '0.274'});
model.material('mat5').propertyGroup('ThermoOpticDispersionModelSchott').set('Trefsco', '20[degC]');
model.material('mat5').propertyGroup('Enu').set('E', '8282.0E7[Pa]');
model.material('mat5').propertyGroup('Enu').set('nu', '0.248');
model.material('mat5').propertyGroup('InternalTransmittance5').func('int1').set('funcname', 'taui5');
model.material('mat5').propertyGroup('InternalTransmittance5').func('int1').set('table', {'2400' '0.916';  ...
'2200' '0.941';  ...
'2000' '0.971';  ...
'1800' '0.985';  ...
'1600' '0.998';  ...
'1400' '0.999';  ...
'1200' '0.999';  ...
'1060' '0.999';  ...
'1000' '0.999';  ...
'950' '0.999';  ...
'900' '0.999';  ...
'850' '0.999';  ...
'800' '0.999';  ...
'700' '0.998';  ...
'650' '0.998';  ...
'600' '0.998';  ...
'550' '0.998';  ...
'500' '0.996';  ...
'480' '0.994';  ...
'460' '0.993';  ...
'440' '0.99';  ...
'420' '0.984';  ...
'400' '0.961';  ...
'390' '0.927';  ...
'380' '0.84';  ...
'370' '0.61';  ...
'360' '0.201'});
model.material('mat5').propertyGroup('InternalTransmittance5').func('int1').set('extrap', 'none');
model.material('mat5').propertyGroup('InternalTransmittance5').func('int1').set('fununit', {'1'});
model.material('mat5').propertyGroup('InternalTransmittance5').func('int1').set('argunit', {'nm'});
model.material('mat5').propertyGroup('InternalTransmittance5').set('taui5', 'taui5(c_const/freq)');
model.material('mat5').propertyGroup('InternalTransmittance5').addInput('frequency');
model.material('mat5').propertyGroup('InternalTransmittance10').func('int1').set('funcname', 'taui10');
model.material('mat5').propertyGroup('InternalTransmittance10').func('int1').set('table', {'2400' '0.839';  ...
'2200' '0.885';  ...
'2000' '0.942';  ...
'1800' '0.969';  ...
'1600' '0.996';  ...
'1400' '0.998';  ...
'1200' '0.998';  ...
'1060' '0.998';  ...
'1000' '0.998';  ...
'950' '0.998';  ...
'900' '0.998';  ...
'850' '0.998';  ...
'800' '0.998';  ...
'700' '0.997';  ...
'650' '0.996';  ...
'600' '0.996';  ...
'550' '0.996';  ...
'500' '0.991';  ...
'480' '0.989';  ...
'460' '0.985';  ...
'440' '0.98';  ...
'420' '0.968';  ...
'400' '0.924';  ...
'390' '0.859';  ...
'380' '0.705';  ...
'370' '0.373';  ...
'360' '0.04'});
model.material('mat5').propertyGroup('InternalTransmittance10').func('int1').set('extrap', 'none');
model.material('mat5').propertyGroup('InternalTransmittance10').func('int1').set('fununit', {'1'});
model.material('mat5').propertyGroup('InternalTransmittance10').func('int1').set('argunit', {'nm'});
model.material('mat5').propertyGroup('InternalTransmittance10').set('taui10', 'taui10(c_const/freq)');
model.material('mat5').propertyGroup('InternalTransmittance10').addInput('frequency');
model.material.create('mat6', 'Common', 'comp1');
model.material('mat6').propertyGroup.create('DispersionModelSellmeierStandard', 'Sellmeier');
model.material('mat6').propertyGroup.create('ThermoOpticDispersionModelSchott', 'Schott thermo-optic');
model.material('mat6').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat6').propertyGroup.create('InternalTransmittance10', ['Internal transmittance, 10' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'mm sample thickness']);
model.material('mat6').propertyGroup('InternalTransmittance10').func.create('int1', 'Interpolation');
model.material('mat6').propertyGroup.create('InternalTransmittance25', ['Internal transmittance, 25' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'mm sample thickness']);
model.material('mat6').propertyGroup('InternalTransmittance25').func.create('int1', 'Interpolation');
model.material('mat6').label('Schott N-SK11 Glass');
model.material('mat6').propertyGroup('def').set('density', '3.08[g/cm^3]');
model.material('mat6').propertyGroup('def').set('thermalexpansioncoefficient', {'6.5E-6[1/K]' '0' '0' '0' '6.5E-6[1/K]' '0' '0' '0' '6.5E-6[1/K]'});
model.material('mat6').propertyGroup('DispersionModelSellmeierStandard').set('ODsma', {'1.17963631E+00' '2.29817295E-01' '9.35789652E-01' '6.80282081E-03' '2.19737205E-02' '1.01513232E+02'});
model.material('mat6').propertyGroup('DispersionModelSellmeierStandard').set('Trefsma', '22[degC]');
model.material('mat6').propertyGroup('DispersionModelSellmeierStandard').set('Prefsma', '1[atm]');
model.material('mat6').propertyGroup('DispersionModelSellmeierStandard').addInput('frequency');
model.material('mat6').propertyGroup('ThermoOpticDispersionModelSchott').set('TOsco', {'2.14E-6' '1.27E-8' '-7.21E-11' '3.51E-7' '5.41E-10' '0.238'});
model.material('mat6').propertyGroup('ThermoOpticDispersionModelSchott').set('Trefsco', '20[degC]');
model.material('mat6').propertyGroup('Enu').set('E', '79.0[GPa]');
model.material('mat6').propertyGroup('Enu').set('nu', '0.239');
model.material('mat6').propertyGroup('InternalTransmittance10').func('int1').set('funcname', 'taui10');
model.material('mat6').propertyGroup('InternalTransmittance10').func('int1').set('table', {'2500' '0.782';  ...
'2325' '0.882';  ...
'1970' '0.967';  ...
'1530' '0.994';  ...
'1060' '0.998';  ...
'700' '0.998';  ...
'660' '0.998';  ...
'620' '0.998';  ...
'580' '0.998';  ...
'546' '0.999';  ...
'500' '0.998';  ...
'460' '0.996';  ...
'436' '0.995';  ...
'420' '0.994';  ...
'405' '0.992';  ...
'400' '0.99';  ...
'390' '0.988';  ...
'380' '0.985';  ...
'370' '0.98';  ...
'365' '0.976';  ...
'350' '0.95';  ...
'334' '0.872';  ...
'320' '0.7';  ...
'310' '0.48';  ...
'300' '0.212';  ...
'290' '0.058'});
model.material('mat6').propertyGroup('InternalTransmittance10').func('int1').set('extrap', 'none');
model.material('mat6').propertyGroup('InternalTransmittance10').func('int1').set('fununit', {'1'});
model.material('mat6').propertyGroup('InternalTransmittance10').func('int1').set('argunit', {'nm'});
model.material('mat6').propertyGroup('InternalTransmittance10').set('taui10', 'taui10(c_const/freq)');
model.material('mat6').propertyGroup('InternalTransmittance10').addInput('frequency');
model.material('mat6').propertyGroup('InternalTransmittance25').func('int1').set('funcname', 'taui25');
model.material('mat6').propertyGroup('InternalTransmittance25').func('int1').set('table', {'2500' '0.54';  ...
'2325' '0.73';  ...
'1970' '0.92';  ...
'1530' '0.984';  ...
'1060' '0.995';  ...
'700' '0.996';  ...
'660' '0.995';  ...
'620' '0.995';  ...
'580' '0.996';  ...
'546' '0.997';  ...
'500' '0.994';  ...
'460' '0.99';  ...
'436' '0.988';  ...
'420' '0.985';  ...
'405' '0.98';  ...
'400' '0.975';  ...
'390' '0.97';  ...
'380' '0.963';  ...
'370' '0.95';  ...
'365' '0.94';  ...
'350' '0.88';  ...
'334' '0.71';  ...
'320' '0.41';  ...
'310' '0.16';  ...
'300' '0.02'});
model.material('mat6').propertyGroup('InternalTransmittance25').func('int1').set('extrap', 'none');
model.material('mat6').propertyGroup('InternalTransmittance25').func('int1').set('fununit', {'1'});
model.material('mat6').propertyGroup('InternalTransmittance25').func('int1').set('argunit', {'nm'});
model.material('mat6').propertyGroup('InternalTransmittance25').set('taui25', 'taui25(c_const/freq)');
model.material('mat6').propertyGroup('InternalTransmittance25').addInput('frequency');
model.material('mat1').selection.named('geom1_csel1_dom');
model.material('mat2').selection.named('geom1_csel2_dom');
model.material('mat3').selection.named('geom1_csel3_dom');
model.material('mat4').selection.named('geom1_csel4_dom');
model.material('mat5').selection.named('geom1_pi1_sel2');
model.material('mat6').selection.named('geom1_pi1_sel3');

model.physics('gop').prop('WavelengthDistribution').setIndex('WavelengthDistribution', 'PolychromaticWavelength', 0);
model.physics('gop').prop('MaximumSecondary').setIndex('MaximumSecondary', 0, 0);
model.physics('gop').prop('ExteriorUnmeshedProperties').setIndex('DispersionModel', 'AirEdlen1953', 0);
model.physics('gop').prop('ComputeOpticalPathLength').setIndex('ComputeOpticalPathLength', 1, 0);
model.physics('gop').feature('mp1').set('RefractiveIndexDomains', 'GetDispersionModelFromMaterial');
model.physics('gop').feature('matd1').set('ReleaseReflectedRays', 'Never');
model.physics('gop').create('xgrat1', 'CrossGrating', 2);
model.physics('gop').feature('xgrat1').selection.named('geom1_wp4_bnd');
model.physics('gop').feature('xgrat1').set('RaysToRelease', 'Reflected');
model.physics('gop').feature('xgrat1').set('dg1', 'sigma_ech');
model.physics('gop').feature('xgrat1').set('dg2', 'sigma_xdp');
model.physics('gop').feature('xgrat1').set('DirectionOfPeriodicity1', 'ParallelToReferenceEdge');
model.physics('gop').feature('xgrat1').selection('ReferenceEdge1').set([39]);
model.physics('gop').feature('xgrat1').set('DirectionOfPeriodicity2', 'ParallelToReferenceEdge');
model.physics('gop').feature('xgrat1').selection('ReferenceEdge2').set([5]);
model.physics('gop').feature('xgrat1').feature('xdfo0').set('mg', 'm');
model.physics('gop').feature('xgrat1').feature('xdfo0').set('ng', 1);
model.physics('gop').create('wall1', 'Wall', 2);
model.physics('gop').feature('wall1').label('Obstructions');
model.physics('gop').feature('wall1').selection.named('geom1_csel7_bnd');
model.physics('gop').feature('wall1').set('WallCondition', 'Disappear');
model.physics('gop').create('wall2', 'Wall', 2);
model.physics('gop').feature('wall2').label('Image Plane');
model.physics('gop').feature('wall2').selection.named('geom1_csel9_bnd');
model.physics('gop').create('rpt1', 'ReleaseFromPoint', 0);
model.physics('gop').feature('rpt1').selection.named('geom1_pt1_pnt');
model.physics('gop').feature('rpt1').set('RayDirectionVector', 'Conical');
model.physics('gop').feature('rpt1').set('ConicalDistribution', 'Hexapolar');
model.physics('gop').feature('rpt1').setIndex('Nctheta', 'N_hex', 0);
model.physics('gop').feature('rpt1').set('cax', [0 0 1]);
model.physics('gop').feature('rpt1').set('alphac', 'atan(NA)');
model.physics('gop').feature('rpt1').set('LDistributionFunction', 'ListOfValues');
model.physics('gop').feature('rpt1').setIndex('lambda0vals', 'range(lam_min,lam_step,lam_max)', 0);

model.cpl.create('aveop1', 'Average', 'geom1');
model.cpl('aveop1').set('axisym', true);
model.cpl('aveop1').selection.geom('geom1', 0);
model.cpl('aveop1').selection.set([76]);
model.cpl.create('aveop2', 'Average', 'geom1');
model.cpl('aveop2').set('axisym', true);
model.cpl('aveop2').selection.geom('geom1', 0);
model.cpl('aveop2').selection.set([77]);
model.cpl.create('aveop3', 'Average', 'geom1');
model.cpl('aveop3').set('axisym', true);
model.cpl('aveop3').selection.geom('geom1', 0);
model.cpl('aveop3').selection.set([96]);

model.mesh('mesh1').autoMeshSize(4);
model.mesh('mesh1').run;

model.study('std1').feature('rtrac').set('timestepspec', 'specifylength');
model.study('std1').feature('rtrac').set('lunit', 'mm');
model.study('std1').feature('rtrac').set('llist', '0 450');
model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'BFL_doub', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);
model.study('std1').feature('param').setIndex('pname', 'BFL_doub', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);
model.study('std1').feature('param').setIndex('pname', 'lam_nom', 0);
model.study('std1').feature('param').setIndex('plistarr', 'lam_mid-50[nm] lam_mid lam_mid+50[nm]', 0);
model.study('std1').feature('param').setIndex('punit', 'nm', 0);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'rtrac');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'rtrac');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.01,1)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 1.0E-5);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('reacf', false);
model.sol('sol1').feature('t1').set('storeudot', false);
model.sol('sol1').feature('t1').set('tstepsgenalpha', 'strict');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('timemethod', 'genalpha');
model.sol('sol1').feature('t1').set('estrat', 'exclude');
model.sol('sol1').feature('t1').set('control', 'rtrac');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 0.1);
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').create('ja1', 'Jacobi');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 0.1);
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'lam_nom'});
model.batch('p1').set('plistarr', {'lam_mid-50[nm] lam_mid lam_mid+50[nm]'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol.create('sol2');
model.sol('sol2').study('std1');
model.sol('sol2').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').run('compute');

model.result.dataset.create('ray1', 'Ray');
model.result.dataset('ray1').set('solution', 'sol2');
model.result.dataset('ray1').set('posdof', {'comp1.qx' 'comp1.qy' 'comp1.qz'});
model.result.dataset('ray1').set('geom', 'geom1');
model.result.dataset('ray1').set('rgeom', 'pgeom_gop');
model.result.dataset('ray1').set('rgeomspec', 'fromphysics');
model.result.dataset('ray1').set('physicsinterface', 'gop');
model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'ray1');
model.result('pg1').setIndex('looplevel', 2, 0);
model.result('pg1').setIndex('looplevel', 3, 1);
model.result('pg1').label('Ray Trajectories (gop)');
model.result('pg1').create('rtrj1', 'RayTrajectories');
model.result('pg1').feature('rtrj1').set('linetype', 'line');
model.result('pg1').feature('rtrj1').create('col1', 'Color');
model.result('pg1').feature('rtrj1').feature('col1').set('expr', 'gop.L');
model.result('pg1').feature('rtrj1').create('filt1', 'RayTrajectoriesFilter');
model.result('pg1').run;
model.result('pg1').label('Ray Diagram');
model.result('pg1').set('titletype', 'none');
model.result('pg1').set('showlegendsmaxmin', true);
model.result('pg1').set('showlegendsunit', true);
model.result('pg1').set('legendpos', 'bottom');
model.result('pg1').set('legendactive', true);
model.result('pg1').set('legendprecision', 4);
model.result('pg1').run;
model.result('pg1').feature('rtrj1').set('data', 'ray1');
model.result('pg1').feature('rtrj1').setIndex('looplevel', 1, 1);
model.result('pg1').run;
model.result('pg1').feature('rtrj1').feature('col1').set('expr', 'gop.lambda0');
model.result('pg1').feature('rtrj1').feature('col1').set('unit', 'nm');
model.result('pg1').feature('rtrj1').feature('col1').set('colortable', 'Spectrum');
model.result('pg1').run;
model.result('pg1').feature('rtrj1').feature('filt1').set('evaluate', 'fraction');
model.result('pg1').feature('rtrj1').feature('filt1').set('fraction', '.05');
model.result('pg1').run;
model.result('pg1').feature.duplicate('rtrj2', 'rtrj1');
model.result('pg1').run;
model.result('pg1').feature('rtrj2').setIndex('looplevel', 2, 1);
model.result('pg1').feature('rtrj2').set('inheritplot', 'rtrj1');
model.result('pg1').feature.duplicate('rtrj3', 'rtrj2');
model.result('pg1').run;
model.result('pg1').feature('rtrj3').setIndex('looplevel', 3, 1);
model.result('pg1').run;
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('coloring', 'uniform');
model.result('pg1').feature('surf1').set('color', 'gray');
model.result('pg1').feature('surf1').create('tran1', 'Transparency');
model.result('pg1').run;
model.result('pg1').run;
model.result.dataset.create('ip1', 'IntersectionPoint3D');
model.result.dataset('ip1').set('genmethod', 'threepoint');
model.result.dataset('ip1').setIndex('genpoints', 'aveop1(x)', 0, 0);
model.result.dataset('ip1').setIndex('genpoints', 'aveop1(y)', 0, 1);
model.result.dataset('ip1').setIndex('genpoints', 'aveop1(z)', 0, 2);
model.result.dataset('ip1').setIndex('genpoints', 'aveop2(x)', 1, 0);
model.result.dataset('ip1').setIndex('genpoints', 'aveop2(y)', 1, 1);
model.result.dataset('ip1').setIndex('genpoints', 'aveop2(z)', 1, 2);
model.result.dataset('ip1').setIndex('genpoints', 'aveop3(x)', 2, 0);
model.result.dataset('ip1').setIndex('genpoints', 'aveop3(y)', 2, 1);
model.result.dataset('ip1').setIndex('genpoints', 'aveop3(z)', 2, 2);
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').run;
model.result('pg2').label([native2unicode(hex2dec({'00' 'c9'}), 'unicode') 'chelle Diagram']);
model.result('pg2').set('data', 'none');
model.result('pg2').set('titletype', 'none');
model.result('pg2').set('showlegendsmaxmin', true);
model.result('pg2').set('showlegendsunit', true);
model.result('pg2').set('legendpos', 'bottom');
model.result('pg2').set('legendactive', true);
model.result('pg2').set('legendprecision', 4);
model.result('pg2').create('spot1', 'SpotDiagram');
model.result('pg2').feature('spot1').set('data', 'ip1');
model.result('pg2').feature('spot1').set('additionallogicalexpressionactive', true);
model.result('pg2').feature('spot1').set('additionallogicalexpression', 'comp1.gop.L>100[mm]');
model.result('pg2').feature('spot1').set('arrangement', 'single');
model.result('pg2').feature('spot1').set('spotsizeactive', false);
model.result('pg2').feature('spot1').set('sphereradiusscaleactive', true);
model.result('pg2').feature('spot1').create('col1', 'Color');
model.result('pg2').run;
model.result('pg2').feature('spot1').feature('col1').set('expr', 'gop.lambda0');
model.result('pg2').feature('spot1').feature('col1').set('unit', 'nm');
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').run;
model.result('pg3').label('Spot Diagram');
model.result('pg3').set('data', 'none');
model.result('pg3').set('showlegendsmaxmin', true);
model.result('pg3').set('showlegendsunit', true);
model.result('pg3').set('legendpos', 'bottom');
model.result('pg3').create('spot1', 'SpotDiagram');
model.result('pg3').feature('spot1').set('data', 'ip1');
model.result('pg3').feature('spot1').set('additionallogicalexpressionactive', true);
model.result('pg3').feature('spot1').set('additionallogicalexpression', 'comp1.gop.L>100[mm]');
model.result('pg3').feature('spot1').set('arrangement', 'wavelength');
model.result('pg3').feature('spot1').set('layout', 'rectangular');
model.result('pg3').feature('spot1').set('columns', 5);
model.result('pg3').feature('spot1').set('wavelengthactive', true);
model.result('pg3').feature('spot1').create('col1', 'Color');
model.result('pg3').run;
model.result('pg3').feature('spot1').feature('col1').set('expr', 'at(0,gop.phic)');
model.result('pg3').feature('spot1').feature('col1').set('unit', 'deg');
model.result('pg3').run;

model.view('view14').set('showgrid', false);

model.title(['Cross Grating ' native2unicode(hex2dec({'00' 'c9'}), 'unicode') 'chelle Spectrograph']);

model.description(['This tutorial demonstrates the use of a Cross Grating feature in an ' native2unicode(hex2dec({'00' 'e9'}), 'unicode') 'chelle spectrograph. A cross grating is a periodic surface with two directions of periodicity. In this model the cross grating is used in high order in one direction and in first order in the orthogonal ("cross") direction. By this means, a two-dimensional cross-dispersed spectrum can be produced with a single grating. A parametric sweep across several orders is made, and the resulting ray and spot diagrams are generated.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;

model.label('cross_grating_echelle_spectrograph.mph');

model.modelNode.label('Components');

out = model;
