function out = model
%
% sensitive_high_resolution_ion_microprobe_geom_sequence.m
%
% Model exported on May 26 2025, 21:31 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Particle_Tracing_Module/Charged_Particle_Tracing');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('hsample', '0.8[m]', 'Height of the sample chamber');
model.param.set('rsample', '0.25[m]', 'Radius of the sample chamber');
model.param.set('hentrance', '1[m]', 'Height of the entrance chamber');
model.param.set('rentrance', '0.1[m]', 'Radius of the entrance chamber');
model.param.set('r0_analyzer', '1272[mm]', 'Major radius of the electric analyzer');
model.param.set('ang_analyzer', '90[deg]', 'Swept angle of the electric analyzer');
model.param.set('r1_analyzer', '0.3[m]', 'Minor radius of the electric analyzer');
model.param.set('h_analyzer_post', '0.5[m]', 'Height of the post-electric analyzer chamber');
model.param.set('h_analyzer_pre', '0.2[m]', 'Height of the pre-electric analyzer chamber');
model.param.set('hexit', '1[m]', 'Height of the post-analyzer exit chamber');
model.param.set('rexit', '0.15[m]', 'Radius of the post-analyzer exit chamber');
model.param.set('ang_magnet', '72.5[deg]', 'Swept angle of the magnetic filter');
model.param.set('r_magnet', '1[m]', 'Bend radius of the magnetic filter');
model.param.set('hout', '0.8[m]', 'Height of the post-magnetic filter chamber');
model.param.set('hdetector', '0.3[m]', 'Height of the detector chamber');
model.param.set('rdetector', '0.25[m]', 'Radius of the detector chamber');
model.param.set('rtarget', '1[cm]', 'Target radius');
model.param.set('rin', '1[cm]', 'Inlet radius');
model.param.set('hoffset', '0.05[m]', 'Offset dimension');

model.geom.create('part1', 'Part', 3);
model.geom('part1').label('Lens');
model.geom('part1').inputParam.set('rinner', '0.5[cm]');
model.geom('part1').inputParam.descr('rinner', 'Inner radius');
model.geom('part1').inputParam.set('router', '0.2[m]');
model.geom('part1').inputParam.descr('router', 'Outer radius');
model.geom('part1').inputParam.set('hlens', '0.05[m]');
model.geom('part1').inputParam.descr('hlens', 'Lens thickness');
model.geom('part1').create('cyl1', 'Cylinder');
model.geom('part1').feature('cyl1').set('r', 'router');
model.geom('part1').feature('cyl1').set('h', 'hlens');
model.geom('part1').feature('cyl1').set('axistype', 'y');
model.geom('part1').run('cyl1');
model.geom('part1').create('cyl2', 'Cylinder');
model.geom('part1').feature('cyl2').set('r', 'rinner');
model.geom('part1').feature('cyl2').set('h', 'hlens');
model.geom('part1').feature('cyl2').set('axistype', 'y');
model.geom('part1').run('cyl2');
model.geom('part1').create('dif1', 'Difference');
model.geom('part1').feature('dif1').selection('input').set({'cyl1'});
model.geom('part1').feature('dif1').selection('input2').set({'cyl2'});
model.geom('part1').run('dif1');
model.geom('part1').create('wp1', 'WorkPlane');
model.geom('part1').feature('wp1').set('unite', true);
model.geom('part1').feature('wp1').set('planetype', 'faceparallel');
model.geom('part1').feature('wp1').selection('face').set('dif1', 3);
model.geom('part1').run('wp1');
model.geom('geom1').create('cyl1', 'Cylinder');
model.geom('geom1').feature('cyl1').set('r', 'rsample');
model.geom('geom1').feature('cyl1').set('h', 'hsample');
model.geom('geom1').feature('cyl1').set('axistype', 'y');
model.geom('geom1').run('cyl1');
model.geom('geom1').create('wp1', 'WorkPlane');
model.geom('geom1').feature('wp1').set('unite', true);
model.geom('geom1').feature('wp1').set('planetype', 'faceparallel');
model.geom('geom1').feature('wp1').selection('face').set('cyl1', 3);
model.geom('geom1').feature('wp1').geom.create('c1', 'Circle');
model.geom('geom1').feature('wp1').geom.feature('c1').set('r', 'rin');
model.geom('geom1').run('wp1');
model.geom('geom1').create('cyl2', 'Cylinder');
model.geom('geom1').feature('cyl2').set('r', 'rentrance');
model.geom('geom1').feature('cyl2').set('h', 'hentrance');
model.geom('geom1').feature('cyl2').set('pos', {'0' 'hsample' '0'});
model.geom('geom1').feature('cyl2').set('axistype', 'y');
model.geom('geom1').run('cyl2');
model.geom('geom1').create('cyl3', 'Cylinder');
model.geom('geom1').feature('cyl3').set('r', 'r1_analyzer');
model.geom('geom1').feature('cyl3').set('h', 'h_analyzer_pre');
model.geom('geom1').feature('cyl3').set('pos', {'0' 'hsample+hentrance' '0'});
model.geom('geom1').feature('cyl3').set('axistype', 'y');
model.geom('geom1').run('cyl3');
model.geom('geom1').create('wp2', 'WorkPlane');
model.geom('geom1').feature('wp2').set('unite', true);
model.geom('geom1').feature('wp2').set('planetype', 'faceparallel');
model.geom('geom1').feature('wp2').selection('face').set('cyl3', 4);
model.geom('geom1').feature('wp2').geom.create('c1', 'Circle');
model.geom('geom1').feature('wp2').geom.feature('c1').set('r', 'r1_analyzer');
model.geom('geom1').run('wp2');
model.geom('geom1').feature.create('rev1', 'Revolve');
model.geom('geom1').feature('rev1').set('angtype', 'specang');
model.geom('geom1').feature('rev1').set('angle2', 'ang_analyzer');
model.geom('geom1').feature('rev1').set('axistype', '3d');
model.geom('geom1').feature('rev1').set('pos3', {'-r0_analyzer' '0' '0'});
model.geom('geom1').feature('rev1').setIndex('pos3', 'hsample+hentrance+h_analyzer_pre', 1);
model.geom('geom1').feature('rev1').set('axis3', [0 0 1]);
model.geom('geom1').run('rev1');
model.geom('geom1').create('wp3', 'WorkPlane');
model.geom('geom1').feature('wp3').set('unite', true);
model.geom('geom1').feature('wp3').set('planetype', 'faceparallel');
model.geom('geom1').feature('wp3').selection('face').set('rev1', 1);
model.geom('geom1').feature('wp3').geom.create('c1', 'Circle');
model.geom('geom1').feature('wp3').geom.feature('c1').set('r', 'r1_analyzer');
model.geom('geom1').run('wp3');
model.geom('geom1').feature.create('ext1', 'Extrude');
model.geom('geom1').feature('ext1').setIndex('distance', 'h_analyzer_post', 0);
model.geom('geom1').run('ext1');
model.geom('geom1').create('wp4', 'WorkPlane');
model.geom('geom1').feature('wp4').set('unite', true);
model.geom('geom1').feature('wp4').set('planetype', 'faceparallel');
model.geom('geom1').feature('wp4').selection('face').set('ext1', 1);
model.geom('geom1').feature('wp4').geom.create('c1', 'Circle');
model.geom('geom1').feature('wp4').geom.feature('c1').set('r', 'rexit');
model.geom('geom1').run('wp4');
model.geom('geom1').feature.create('ext2', 'Extrude');
model.geom('geom1').feature('ext2').setIndex('distance', 'hexit', 0);
model.geom('geom1').run('ext2');
model.geom('geom1').create('wp5', 'WorkPlane');
model.geom('geom1').feature('wp5').set('unite', true);
model.geom('geom1').feature('wp5').set('planetype', 'faceparallel');
model.geom('geom1').feature('wp5').selection('face').set('ext2', 1);
model.geom('geom1').feature('wp5').geom.create('c1', 'Circle');
model.geom('geom1').feature('wp5').geom.feature('c1').set('r', 'rexit');
model.geom('geom1').run('wp5');
model.geom('geom1').feature.create('rev2', 'Revolve');
model.geom('geom1').feature('rev2').set('angtype', 'specang');
model.geom('geom1').feature('rev2').set('angle2', 'ang_magnet');
model.geom('geom1').feature('rev2').set('axistype', '3d');
model.geom('geom1').feature('rev2').set('pos3', {'-r0_analyzer-h_analyzer_post-hexit' '0' '0'});
model.geom('geom1').feature('rev2').setIndex('pos3', 'hsample+hentrance+h_analyzer_pre+r0_analyzer-r_magnet', 1);
model.geom('geom1').feature('rev2').set('axis3', [0 0 1]);
model.geom('geom1').run('rev2');
model.geom('geom1').create('wp6', 'WorkPlane');
model.geom('geom1').feature('wp6').set('unite', true);
model.geom('geom1').feature('wp6').set('planetype', 'faceparallel');
model.geom('geom1').feature('wp6').selection('face').set('rev2', 1);
model.geom('geom1').feature('wp6').geom.create('c1', 'Circle');
model.geom('geom1').feature('wp6').geom.feature('c1').set('r', 'rexit');
model.geom('geom1').run('wp6');
model.geom('geom1').feature.create('ext3', 'Extrude');
model.geom('geom1').feature('ext3').setIndex('distance', 'hout', 0);
model.geom('geom1').run('ext3');
model.geom('geom1').create('wp7', 'WorkPlane');
model.geom('geom1').feature('wp7').set('unite', true);
model.geom('geom1').feature('wp7').set('planetype', 'faceparallel');
model.geom('geom1').feature('wp7').selection('face').set('ext3', 1);
model.geom('geom1').feature('wp7').geom.create('c1', 'Circle');
model.geom('geom1').feature('wp7').geom.feature('c1').set('r', 'rdetector');
model.geom('geom1').run('wp7');
model.geom('geom1').feature.create('ext4', 'Extrude');
model.geom('geom1').feature('ext4').setIndex('distance', 'hdetector', 0);
model.geom('geom1').run('ext4');
model.geom('geom1').create('wp8', 'WorkPlane');
model.geom('geom1').feature('wp8').set('unite', true);
model.geom('geom1').feature('wp8').set('planetype', 'faceparallel');
model.geom('geom1').feature('wp8').selection('face').set('ext4', 3);
model.geom('geom1').feature('wp8').geom.create('c1', 'Circle');
model.geom('geom1').feature('wp8').geom.feature('c1').set('r', 'rtarget');
model.geom('geom1').run('wp8');
model.geom('geom1').create('wp9', 'WorkPlane');
model.geom('geom1').feature('wp9').set('unite', true);
model.geom('geom1').feature('wp9').set('planetype', 'faceparallel');
model.geom('geom1').feature('wp9').selection('face').set('cyl1', 4);
model.geom('geom1').run('wp9');
model.geom('geom1').create('wp10', 'WorkPlane');
model.geom('geom1').feature('wp10').set('unite', true);
model.geom('geom1').feature('wp10').set('planetype', 'faceparallel');
model.geom('geom1').feature('wp10').selection('face').set('rev1', 1);
model.geom('geom1').feature('wp10').set('offset', 'hoffset');
model.geom('geom1').run('wp10');
model.geom('geom1').create('wp11', 'WorkPlane');
model.geom('geom1').feature('wp11').set('unite', true);
model.geom('geom1').feature('wp11').set('planetype', 'faceparallel');
model.geom('geom1').feature('wp11').selection('face').set('ext4', 4);
model.geom('geom1').feature('wp11').set('offset', 'hoffset');
model.geom('geom1').feature('wp11').set('reverse', true);
model.geom('geom1').run('wp11');
model.geom('geom1').create('pi1', 'PartInstance');
model.geom('geom1').feature('pi1').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi1').set('part', 'part1');
model.geom('geom1').feature('pi1').set('workplanepart', 'wp1');
model.geom('geom1').feature('pi1').set('workplane', 'wp9');
model.geom('geom1').feature('pi1').set('selkeepnoncontr', true);
model.geom('geom1').run('pi1');
model.geom('geom1').create('pi2', 'PartInstance');
model.geom('geom1').feature('pi2').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi2').set('part', 'part1');
model.geom('geom1').feature('pi2').set('workplanepart', 'wp1');
model.geom('geom1').feature('pi2').set('workplane', 'wp2');
model.geom('geom1').feature('pi2').set('selkeepnoncontr', true);
model.geom('geom1').run('pi2');
model.geom('geom1').create('pi3', 'PartInstance');
model.geom('geom1').feature('pi3').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi3').set('part', 'part1');
model.geom('geom1').feature('pi3').set('workplanepart', 'wp1');
model.geom('geom1').feature('pi3').set('workplane', 'wp10');
model.geom('geom1').feature('pi3').set('selkeepnoncontr', true);
model.geom('geom1').run('pi3');
model.geom('geom1').create('pi4', 'PartInstance');
model.geom('geom1').feature('pi4').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi4').set('part', 'part1');
model.geom('geom1').feature('pi4').set('workplanepart', 'wp1');
model.geom('geom1').feature('pi4').set('workplane', 'wp11');
model.geom('geom1').feature('pi4').set('selkeepnoncontr', true);
model.geom('geom1').run('pi4');
model.geom('geom1').create('dif1', 'Difference');
model.geom('geom1').feature('dif1').selection('input').set({'cyl1' 'cyl2' 'cyl3' 'ext1' 'ext2' 'ext3' 'ext4' 'rev1' 'rev2'});
model.geom('geom1').feature('dif1').selection('input2').set({'pi1' 'pi2' 'pi3' 'pi4'});
model.geom('geom1').runPre('fin');

model.title([]);

model.description('');

model.label('sensitive_high_resolution_ion_microprobe_geom_sequence.mph');

model.modelNode.label('Components');

out = model;
