function out = model
%
% moscap_1d_interface_traps.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Semiconductor_Module/Device_Building_Blocks');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 1);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('semi', 'Semiconductor', 'geom1');
model.physics('semi').model('comp1');

model.study.create('std1');
model.study('std1').create('semie', 'SemiconductorEquilibrium');
model.study('std1').feature('semie').set('solnum', 'auto');
model.study('std1').feature('semie').set('notsolnum', 'auto');
model.study('std1').feature('semie').set('outputmap', {});
model.study('std1').feature('semie').set('ngenAUX', '1');
model.study('std1').feature('semie').set('goalngenAUX', '1');
model.study('std1').feature('semie').set('ngenAUX', '1');
model.study('std1').feature('semie').set('goalngenAUX', '1');
model.study('std1').feature('semie').setSolveFor('/physics/semi', true);

model.geom('geom1').lengthUnit([native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('t_epi', '10[um]', 'Epi layer thickness');
model.param.set('t_sub', '2[um]', 'Substrate thickness');
model.param.set('d_g', '3.8e-2[cm]', 'Gate diameter');
model.param.set('area_g', 'pi*(d_g/2)^2', 'Gate area');
model.param.set('r_epi', '0.75[ohm*cm]', 'Epi layer resistivity');
model.param.set('r_sub', '0.005[ohm*cm]', 'Substrate resistivity');
model.param.set('Nd_epi', '1/(e_const*1450[cm^2/V/s]*r_epi)', 'Epi layer doping');
model.param.set('Nd_sub', '1/(e_const*1450[cm^2/V/s]*r_sub)', 'Substrate doping');
model.param.set('epsr_ox', '3.9', 'Oxide dielectric constant');
model.param.set('t_ox', '60[nm]', 'Oxide thickness');
model.param.set('C_ox', 'epsr_ox*epsilon0_const/t_ox*area_g', 'Oxide capacitance');
model.param.set('rhos_ox', 'e_const*9e11[cm^-2]', 'Oxide fixed charge');
model.param.set('Nss', '2e11[cm^-2*eV^-1]', 'Surface state density');
model.param.set('Ew0', '0.2[V]', 'Width of continuous trapping levels');
model.param.set('f0', '50[Hz]', 'AC frequency');
model.param.set('phiM', '4.5[V]', 'Metal work function');
model.param.set('v_th', '1e7[cm/s]', 'Thermal velocity');
model.param.set('sigma_n', '1e-15[cm^2]', 'Electron capture cross section');
model.param.set('sigma_p', '2.2e-16[cm^2]', 'Hole capture cross section');
model.param.set('Vg', '0[V]', 'Gate voltage');
model.param.set('Vac', '1[mV]', 'AC voltage');

model.variable.create('var1');
model.variable('var1').model('comp1');

model.geom('geom1').run;

% To import content from file, use:
% model.variable('var1').loadFile('FILENAME');
model.variable('var1').set('Ym', 'semi.iomega*lindev(semi.Q0_2)/Vac', 'Measured admittance');
model.variable('var1').set('Cm', 'real(Ym/semi.iomega)', 'Measured capacitance');
model.variable('var1').set('Gm', 'real(Ym)', 'Measured conductance');
model.variable('var1').set('Yp', '1/(1/Ym-1/(semi.iomega*C_ox))', 'Equivalent parallel admittance');
model.variable('var1').set('Cp', 'real(Yp/semi.iomega)', 'Equivalent parallel capacitance');
model.variable('var1').set('Gp', 'real(Yp)', 'Equivalent parallel conductance');

model.geom('geom1').create('i1', 'Interval');
model.geom('geom1').feature('i1').setIndex('coord', 't_epi', 1);
model.geom('geom1').feature('i1').setIndex('coord', 't_epi+t_sub', 2);
model.geom('geom1').run;

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('AroraMobilityModel', 'Arora mobility model');
model.material('mat1').propertyGroup.create('PowerLawMobilityModel', 'Power law mobility model');
model.material('mat1').propertyGroup.create('Auger', 'Auger recombination');
model.material('mat1').propertyGroup.create('Direct', 'Direct recombination');
model.material('mat1').propertyGroup.create('SRH', ['Shockley' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Read' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Hall recombination']);
model.material('mat1').propertyGroup.create('FletcherMobilityModel', 'Fletcher mobility model');
model.material('mat1').propertyGroup.create('CaugheyThomasMobilityModel', ['Caughey' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Thomas mobility model']);
model.material('mat1').propertyGroup.create('SemicondMaterial', 'Semiconductor material');
model.material('mat1').propertyGroup.create('LombardiSurfaceMobilityModel', 'Lombardi surface mobility model');
model.material('mat1').propertyGroup.create('ImpactIonization', 'Impact ionization');
model.material('mat1').propertyGroup.create('SlotboomModel', 'Slotboom model');
model.material('mat1').propertyGroup.create('JainRoulstonModel', ['Jain' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Roulston model']);
model.material('mat1').propertyGroup.create('KlaassenUnifiedMobilityModel', 'Klaassen unified mobility model');
model.material('mat1').label('Si - Silicon');
model.material('mat1').propertyGroup('def').set('relpermittivity', {'11.7' '0' '0' '0' '11.7' '0' '0' '0' '11.7'});
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'131[W/(m*K)]' '0' '0' '0' '131[W/(m*K)]' '0' '0' '0' '131[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('density', '2329[kg/m^3]');
model.material('mat1').propertyGroup('def').set('heatcapacity', '700[J/(kg*K)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mun0_ref_arora', '1252[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mup0_ref_arora', '407[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mun_min_ref_arora', '88[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mup_min_ref_arora', '54.3[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('Nn0_ref_arora', '1.26e17[1/cm^3]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('Np0_ref_arora', '2.35e17[1/cm^3]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('alpha0_arora', '0.88');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta1_arora', '-0.57');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta2_arora', '-2.33');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta3_arora', '-2.33');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta4_arora', '-0.146');
model.material('mat1').propertyGroup('AroraMobilityModel').set('Tref_arora', '300[K]');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('mun0_pl', '1448[cm^2/(V*s)]');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('mup0_pl', '473[cm^2/(V*s)]');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('alphan_pl', '2.33');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('alphap_pl', '2.23');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('Tref_pl', '300[K]');
model.material('mat1').propertyGroup('Auger').set('Cn', '2.8e-31[cm^6/s]');
model.material('mat1').propertyGroup('Auger').set('Cp', '9.9e-32[cm^6/s]');
model.material('mat1').propertyGroup('Direct').set('C', '0[cm^3/s]');
model.material('mat1').propertyGroup('SRH').set('taun', '10[us]');
model.material('mat1').propertyGroup('SRH').set('taup', '10[us]');
model.material('mat1').propertyGroup('FletcherMobilityModel').set('F1_fl', '1.04e21[1/(cm^1*V*s)]');
model.material('mat1').propertyGroup('FletcherMobilityModel').set('F2_fl', '7.45e13[1/cm^2]');
model.material('mat1').propertyGroup('FletcherMobilityModel').set('Tref_fl', '300[K]');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').label(['Caughey' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Thomas mobility model']);
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('alphan0_ct', '1.11');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('alphap0_ct', '1.21');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('vn0_ct', '1e7[cm/s]');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('vp0_ct', '8.37e6[cm/s]');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betan1_ct', '0.66');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betap1_ct', '0.17');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betan2_ct', '-0.87');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betap2_ct', '-0.52');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('Tref_ct', '300[K]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Eg0', '1.12[V]');
model.material('mat1').propertyGroup('SemicondMaterial').set('chi0', '4.05[V]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Nv', '(T/300[K])^(3/2)*1.04e19[1/cm^3]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Nc', '(T/300[K])^(3/2)*2.8e19[1/cm^3]');
model.material('mat1').propertyGroup('SemicondMaterial').set('mun', '1450[cm^2/(V*s)]');
model.material('mat1').propertyGroup('SemicondMaterial').set('mup', '500[cm^2/(V*s)]');
model.material('mat1').propertyGroup('SemicondMaterial').addInput('temperature');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('deltan_ls', '5.82e14[V/s]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('deltap_ls', '2.05e14[V/s]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mun1_ls', '4.75e7[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mup1_ls', '9.93e7[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mun2_ls', '1.74e5[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mup2_ls', '8.84e5[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('alphan_ls', '0.125');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('alphap_ls', '0.0317');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('Tref_ls', '1[K]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('Eref_ls', '1[V/cm]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('Nref_ls', '1[1/cm^3]');
model.material('mat1').propertyGroup('ImpactIonization').set('an', '0.426');
model.material('mat1').propertyGroup('ImpactIonization').set('ap', '0.243');
model.material('mat1').propertyGroup('ImpactIonization').set('bn', '4.81E5[V/cm]');
model.material('mat1').propertyGroup('ImpactIonization').set('bp', '6.53E5[V/cm]');
model.material('mat1').propertyGroup('ImpactIonization').set('cnii', '3.05E-4');
model.material('mat1').propertyGroup('ImpactIonization').set('cpii', '5.35E-4');
model.material('mat1').propertyGroup('ImpactIonization').set('dn', '6.86E-4');
model.material('mat1').propertyGroup('ImpactIonization').set('dp', '5.67E-4');
model.material('mat1').propertyGroup('SlotboomModel').set('Eref_sb', '0.00692[V]');
model.material('mat1').propertyGroup('SlotboomModel').set('Nref_sb', '1.3e17[1/cm^3]');
model.material('mat1').propertyGroup('SlotboomModel').set('alpha_sb', '0.5');
model.material('mat1').propertyGroup('JainRoulstonModel').set('An_jr', '3.5e-8[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Bn_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Cn_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Ap_jr', '3.5e-8[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Bp_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Cp_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Nref_jr', '1[1/cm^3]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('alpha_jr', '0.5');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('T_ref_kl', '300[K]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_e_max_kl', '1414.0[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_h_max_kl', '470.5[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_e_min_kl', '68.5[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_h_min_kl', '44.9[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('theta_e_kl', '2.285');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('theta_h_kl', '2.247');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('alpha_e_1_kl', '0.711');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('alpha_h_1_kl', '0.719');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_e_1_kl', '9.20e16[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_h_1_kl', '2.23e17[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('c_D_kl', '0.21');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('c_A_kl', '0.50');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_D_kl', '4.0e20[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_A_kl', '7.2e20[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('f_BH_kl', '3.828');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('f_CW_kl', '2.459');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_BH_kl', '1.36e20[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('P_CW_kl', '3.97e13');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_1_kl', '0.89233');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_2_kl', '0.41372');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_3_kl', '0.19778');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_4_kl', '0.28227');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_5_kl', '0.005978');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_6_kl', '1.80618');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_7_kl', '0.72169');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_1_kl', '0.7643');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_2_kl', '2.2999');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_3_kl', '6.5502');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_4_kl', '2.3670');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_5_kl', '-0.01552');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_6_kl', '0.6478');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('m_e_kl', 'me_const');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('m_h_kl', '1.258*me_const');

model.physics('semi').prop('d').set('A', 'area_g');
model.physics('semi').prop('ShapeProperty').set('Formulation', 'FEM2Ef');
model.physics('semi').create('adm1', 'AnalyticDopingModel', 1);
model.physics('semi').feature('adm1').selection.set([2]);
model.physics('semi').feature('adm1').set('impurityType', 'donor');
model.physics('semi').feature('adm1').set('NDc', 'Nd_sub');
model.physics('semi').create('adm2', 'AnalyticDopingModel', 1);
model.physics('semi').feature('adm2').selection.set([1]);
model.physics('semi').feature('adm2').set('impurityType', 'donor');
model.physics('semi').feature('adm2').set('NDc', 'Nd_epi');
model.physics('semi').create('mc1', 'MetalContact', 0);
model.physics('semi').feature('mc1').selection.set([3]);
model.physics('semi').create('gc1', 'GateContact', 0);
model.physics('semi').feature('gc1').selection.set([1]);
model.physics('semi').feature('gc1').set('V0', 'Vg');
model.physics('semi').feature('gc1').set('epsilon_ins', 'epsr_ox');
model.physics('semi').feature('gc1').set('d_ins', 't_ox');
model.physics('semi').feature('gc1').set('Phi', 'phiM');
model.physics('semi').feature('gc1').create('hp1', 'HarmonicPerturbation', 0);
model.physics('semi').feature('gc1').feature('hp1').set('V0', 'Vac');
model.physics('semi').create('sfcd1', 'SurfaceChargeDensity', 0);
model.physics('semi').feature('sfcd1').selection.set([1]);
model.physics('semi').feature('sfcd1').set('rhoqs', 'rhos_ox');
model.physics('semi').create('tasr1', 'TrapAssistedSurfaceRecombination', 0);
model.physics('semi').feature('tasr1').selection.set([1]);
model.physics('semi').feature('tasr1').set('IncludeTraps', 'ExplicitTraps');
model.physics('semi').feature('tasr1').set('SpecifyDiscreteContinuous', 'SpecifyContinuousAndOrDiscreteLevels');
model.physics('semi').feature('tasr1').create('ctb1', 'ContinuousEnergyLevelsBoundary', 0);
model.physics('semi').feature('tasr1').feature('ctb1').set('Nt_b', 'Nss*Ew0*e_const');
model.physics('semi').feature('tasr1').feature('ctb1').set('TrapDensityDistribution', 'Rectangle');
model.physics('semi').feature('tasr1').feature('ctb1').set('Ewidth', 'Ew0');
model.physics('semi').feature('tasr1').feature('ctb1').set('Etran', 'Ew0/100');
model.physics('semi').feature('tasr1').feature('ctb1').set('Vxd_min_in', 'semi.tasr1.ctb1.Et0-Ew0/2');
model.physics('semi').feature('tasr1').feature('ctb1').set('Vxd_max_in', 'semi.tasr1.ctb1.Et0+Ew0/2');
model.physics('semi').feature('tasr1').feature('ctb1').set('sigman', 'sigma_n');
model.physics('semi').feature('tasr1').feature('ctb1').set('vn_th', 'v_th');
model.physics('semi').feature('tasr1').feature('ctb1').set('vp_th', 'v_th');
model.physics('semi').feature('tasr1').feature('ctb1').set('sigmap', 'sigma_p');

model.mesh('mesh1').create('edg1', 'Edge');
model.mesh('mesh1').feature('edg1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('edg1').feature('dis1').selection.set([1]);
model.mesh('mesh1').feature('edg1').feature('dis1').set('numelem', 100);
model.mesh('mesh1').feature('edg1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('edg1').feature('dis2').selection.set([2]);
model.mesh('mesh1').feature('edg1').feature('dis2').set('numelem', 20);
model.mesh('mesh1').run;

model.study('std1').label('Study 1 - Vg sweep at 50 Hz');
model.study('std1').feature('semie').set('useparam', true);
model.study('std1').feature('semie').setIndex('pname', 't_epi', 0);
model.study('std1').feature('semie').setIndex('plistarr', '', 0);
model.study('std1').feature('semie').setIndex('punit', 'm', 0);
model.study('std1').feature('semie').setIndex('pname', 't_epi', 0);
model.study('std1').feature('semie').setIndex('plistarr', '', 0);
model.study('std1').feature('semie').setIndex('punit', 'm', 0);
model.study('std1').feature('semie').setIndex('pname', 'Vg', 0);
model.study('std1').feature('semie').setIndex('plistarr', 'range(1,-0.2, -2) range(-2.1,-0.05,-4) range(-4.2,-0.2,-5)', 0);
model.study('std1').feature('semie').setIndex('punit', 'V', 0);
model.study('std1').create('frlin', 'Frequencylinearized');
model.study('std1').feature('frlin').set('plist', 'f0');
model.study('std1').feature('frlin').set('useparam', true);
model.study('std1').feature('frlin').setIndex('pname_aux', 't_epi', 0);
model.study('std1').feature('frlin').setIndex('plistarr_aux', '', 0);
model.study('std1').feature('frlin').setIndex('punit_aux', 'm', 0);
model.study('std1').feature('frlin').setIndex('pname_aux', 't_epi', 0);
model.study('std1').feature('frlin').setIndex('plistarr_aux', '', 0);
model.study('std1').feature('frlin').setIndex('punit_aux', 'm', 0);
model.study('std1').feature('frlin').setIndex('pname_aux', 'Vg', 0);
model.study('std1').feature('frlin').setIndex('plistarr_aux', 'range(1,-0.2, -2) range(-2.1,-0.05,-4) range(-4.2,-0.2,-5)', 0);
model.study('std1').feature('frlin').setIndex('punit_aux', 'V', 0);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'semie');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_semi_tasr1_ctb1_ft').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_V').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_Efn_').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_Efp_').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_semi_tasr1_ctb1_ft').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_V').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_Efn_').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_Efp_').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_semi_tasr1_ctb1_ft').set('scaleval', '10');
model.sol('sol1').feature('v1').feature('comp1_V').set('scaleval', '1');
model.sol('sol1').feature('v1').feature('comp1_Efn_').set('scaleval', '1');
model.sol('sol1').feature('v1').feature('comp1_Efp_').set('scaleval', '1');
model.sol('sol1').feature('v1').set('control', 'semie');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 1.0E-6);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol1').feature('s1').feature('p1').set('control', 'semie');
model.sol('sol1').feature('s1').set('control', 'semie');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', false);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').feature('aDef').set('assemtol', 0);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol1').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol1').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol1').feature('s1').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol1').feature('s1').feature('d1').set('ooc', 'auto');
model.sol('sol1').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol1').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol1').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'frlin');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').feature('comp1_semi_tasr1_ctb1_ft').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_V').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_Efn_').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_Efp_').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_semi_tasr1_ctb1_ft').set('resscalemethod', 'parent');
model.sol('sol1').feature('v2').feature('comp1_V').set('resscalemethod', 'parent');
model.sol('sol1').feature('v2').feature('comp1_Efn_').set('resscalemethod', 'parent');
model.sol('sol1').feature('v2').feature('comp1_Efp_').set('resscalemethod', 'parent');
model.sol('sol1').feature('v2').feature('comp1_semi_tasr1_ctb1_ft').set('scaleval', '10');
model.sol('sol1').feature('v2').feature('comp1_V').set('scaleval', '1');
model.sol('sol1').feature('v2').feature('comp1_Efn_').set('scaleval', '1');
model.sol('sol1').feature('v2').feature('comp1_Efp_').set('scaleval', '1');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('initsoluse', 'sol2');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'frlin');
model.sol('sol1').create('s2', 'Stationary');
model.sol('sol1').feature('s2').set('stol', 0.001);
model.sol('sol1').feature('s2').create('p1', 'Parametric');
model.sol('sol1').feature('s2').feature.remove('pDef');
model.sol('sol1').feature('s2').feature('p1').set('pname', {'freq' 'Vg'});
model.sol('sol1').feature('s2').feature('p1').set('punit', {'Hz' 'V'});
model.sol('sol1').feature('s2').feature('p1').set('sweeptype', 'filled');
model.sol('sol1').feature('s2').feature('p1').set('plistarr', {'f0' 'range(1,-0.2, -2) range(-2.1,-0.05,-4) range(-4.2,-0.2,-5)'});
model.sol('sol1').feature('s2').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s2').feature('p1').set('pcontinuation', '');
model.sol('sol1').feature('s2').feature('p1').set('preusesol', 'no');
model.sol('sol1').feature('s2').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s2').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s2').feature('p1').set('plotgroup', 'Default');
model.sol('sol1').feature('s2').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s2').feature('p1').set('probes', {});
model.sol('sol1').feature('s2').feature('p1').set('control', 'frlin');
model.sol('sol1').feature('s2').set('nonlin', 'linper');
model.sol('sol1').feature('s2').set('storelinpoint', true);
model.sol('sol1').feature('s2').set('linpsolnum', 'all');
model.sol('sol1').feature('s2').set('control', 'frlin');
model.sol('sol1').feature('s2').set('linpmethod', 'sol');
model.sol('sol1').feature('s2').set('linpsol', 'sol1');
model.sol('sol1').feature('s2').set('linpsoluse', 'sol2');
model.sol('sol1').feature('s2').set('control', 'frlin');
model.sol('sol1').feature('s2').feature('aDef').set('assemtol', 0);
model.sol('sol1').feature('s2').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s2').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('d1').set('linsolver', 'mumps');
model.sol('sol1').feature('s2').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol1').feature('s2').feature('d1').set('ooc', 'auto');
model.sol('sol1').feature('s2').feature('d1').set('errorchk', 'off');
model.sol('sol1').feature('s2').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s2').feature.remove('fcDef');
model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').label('Energy Levels (semi)');
model.result('pg1').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg1').set('titletype', 'manual');
model.result('pg1').set('title', 'Energy Diagram');
model.result('pg1').set('ylabel', 'Energy (eV)');
model.result('pg1').set('data', 'dset1');
model.result('pg1').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond1/pg2');
model.result('pg1').feature.create('lngr1', 'LineGraph');
model.result('pg1').feature('lngr1').label('Conduction Band Energy Level');
model.result('pg1').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr1').set('expr', 'semi.Ec_e');
model.result('pg1').feature('lngr1').set('unit', 'eV');
model.result('pg1').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg1').feature('lngr1').set('linecolor', 'blue');
model.result('pg1').feature('lngr1').set('legend', true);
model.result('pg1').feature('lngr1').set('legendmethod', 'manual');
model.result('pg1').feature('lngr1').set('legends', {'Ec'});
model.result('pg1').feature('lngr1').set('resolution', 'norefine');
model.result('pg1').feature('lngr1').set('smooth', 'everywhere');
model.result('pg1').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg1').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg1').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg1').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg1').feature('lngr1').set('data', 'parent');
model.result('pg1').feature('lngr1').selection.geom('geom1', 1);
model.result('pg1').feature('lngr1').selection.set([1 2]);
model.result('pg1').feature.create('lngr2', 'LineGraph');
model.result('pg1').feature('lngr2').label('Electron Quasi-Fermi Energy Level');
model.result('pg1').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr2').set('expr', 'semi.Efn_e');
model.result('pg1').feature('lngr2').set('unit', 'eV');
model.result('pg1').feature('lngr2').set('evalmethodactive', 'off');
model.result('pg1').feature('lngr2').set('linestyle', 'dashed');
model.result('pg1').feature('lngr2').set('linecolor', 'black');
model.result('pg1').feature('lngr2').set('legend', true);
model.result('pg1').feature('lngr2').set('legendmethod', 'manual');
model.result('pg1').feature('lngr2').set('legends', {'Efn'});
model.result('pg1').feature('lngr2').set('resolution', 'norefine');
model.result('pg1').feature('lngr2').set('smooth', 'everywhere');
model.result('pg1').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr2').set('evalmethodactive', 'off');
model.result('pg1').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr2').set('evalmethodactive', 'off');
model.result('pg1').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr2').set('evalmethodactive', 'off');
model.result('pg1').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr2').set('evalmethodactive', 'off');
model.result('pg1').feature('lngr2').set('data', 'parent');
model.result('pg1').feature('lngr2').selection.geom('geom1', 1);
model.result('pg1').feature('lngr2').selection.set([1 2]);
model.result('pg1').feature.create('lngr3', 'LineGraph');
model.result('pg1').feature('lngr3').label('Hole Quasi-Fermi Energy Level');
model.result('pg1').feature('lngr3').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr3').set('expr', 'semi.Efp_e');
model.result('pg1').feature('lngr3').set('unit', 'eV');
model.result('pg1').feature('lngr3').set('evalmethodactive', 'off');
model.result('pg1').feature('lngr3').set('linestyle', 'dotted');
model.result('pg1').feature('lngr3').set('linecolor', 'black');
model.result('pg1').feature('lngr3').set('legend', true);
model.result('pg1').feature('lngr3').set('legendmethod', 'manual');
model.result('pg1').feature('lngr3').set('legends', {'Efp'});
model.result('pg1').feature('lngr3').set('resolution', 'norefine');
model.result('pg1').feature('lngr3').set('smooth', 'everywhere');
model.result('pg1').feature('lngr3').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr3').set('evalmethodactive', 'off');
model.result('pg1').feature('lngr3').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr3').set('evalmethodactive', 'off');
model.result('pg1').feature('lngr3').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr3').set('evalmethodactive', 'off');
model.result('pg1').feature('lngr3').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr3').set('evalmethodactive', 'off');
model.result('pg1').feature('lngr3').set('data', 'parent');
model.result('pg1').feature('lngr3').selection.geom('geom1', 1);
model.result('pg1').feature('lngr3').selection.set([1 2]);
model.result('pg1').feature.create('lngr4', 'LineGraph');
model.result('pg1').feature('lngr4').label('Valence Band Energy Level');
model.result('pg1').feature('lngr4').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr4').set('expr', 'semi.Ev_e');
model.result('pg1').feature('lngr4').set('unit', 'eV');
model.result('pg1').feature('lngr4').set('evalmethodactive', 'off');
model.result('pg1').feature('lngr4').set('linecolor', 'green');
model.result('pg1').feature('lngr4').set('legend', true);
model.result('pg1').feature('lngr4').set('legendmethod', 'manual');
model.result('pg1').feature('lngr4').set('legends', {'Ev'});
model.result('pg1').feature('lngr4').set('resolution', 'norefine');
model.result('pg1').feature('lngr4').set('smooth', 'everywhere');
model.result('pg1').feature('lngr4').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr4').set('evalmethodactive', 'off');
model.result('pg1').feature('lngr4').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr4').set('evalmethodactive', 'off');
model.result('pg1').feature('lngr4').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr4').set('evalmethodactive', 'off');
model.result('pg1').feature('lngr4').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr4').set('evalmethodactive', 'off');
model.result('pg1').feature('lngr4').set('data', 'parent');
model.result('pg1').feature('lngr4').selection.geom('geom1', 1);
model.result('pg1').feature('lngr4').selection.set([1 2]);
model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').label('Carrier Concentrations (semi)');
model.result('pg2').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg2').set('ylabel', 'Carrier concentration (1/cm^3)');
model.result('pg2').set('ylog', true);
model.result('pg2').set('data', 'dset1');
model.result('pg2').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond1/pg3');
model.result('pg2').feature.create('lngr1', 'LineGraph');
model.result('pg2').feature('lngr1').label('Electron Concentration');
model.result('pg2').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg2').feature('lngr1').set('expr', 'semi.N');
model.result('pg2').feature('lngr1').set('unit', '1/cm^3');
model.result('pg2').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg2').feature('lngr1').set('legend', true);
model.result('pg2').feature('lngr1').set('legendmethod', 'manual');
model.result('pg2').feature('lngr1').set('legends', {'electrons'});
model.result('pg2').feature('lngr1').set('resolution', 'norefine');
model.result('pg2').feature('lngr1').set('smooth', 'everywhere');
model.result('pg2').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg2').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg2').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg2').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg2').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg2').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg2').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg2').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg2').feature('lngr1').set('data', 'parent');
model.result('pg2').feature('lngr1').selection.geom('geom1', 1);
model.result('pg2').feature('lngr1').selection.set([1 2]);
model.result('pg2').feature.create('lngr2', 'LineGraph');
model.result('pg2').feature('lngr2').label('Hole Concentration');
model.result('pg2').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg2').feature('lngr2').set('expr', 'semi.P');
model.result('pg2').feature('lngr2').set('unit', '1/cm^3');
model.result('pg2').feature('lngr2').set('evalmethodactive', 'off');
model.result('pg2').feature('lngr2').set('legend', true);
model.result('pg2').feature('lngr2').set('legendmethod', 'manual');
model.result('pg2').feature('lngr2').set('legends', {'holes'});
model.result('pg2').feature('lngr2').set('resolution', 'norefine');
model.result('pg2').feature('lngr2').set('smooth', 'everywhere');
model.result('pg2').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg2').feature('lngr2').set('evalmethodactive', 'off');
model.result('pg2').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg2').feature('lngr2').set('evalmethodactive', 'off');
model.result('pg2').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg2').feature('lngr2').set('evalmethodactive', 'off');
model.result('pg2').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg2').feature('lngr2').set('evalmethodactive', 'off');
model.result('pg2').feature('lngr2').set('data', 'parent');
model.result('pg2').feature('lngr2').selection.geom('geom1', 1);
model.result('pg2').feature('lngr2').selection.set([1 2]);
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').label('Electric Potential (semi)');
model.result('pg3').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg3').set('ylabel', 'Electric Potential (V)');
model.result('pg3').set('data', 'dset1');
model.result('pg3').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond1/pg4');
model.result('pg3').feature.create('lngr1', 'LineGraph');
model.result('pg3').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg3').feature('lngr1').set('expr', 'V');
model.result('pg3').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg3').feature('lngr1').set('resolution', 'norefine');
model.result('pg3').feature('lngr1').set('smooth', 'everywhere');
model.result('pg3').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg3').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg3').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg3').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg3').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg3').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg3').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg3').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg3').feature('lngr1').set('data', 'parent');
model.result('pg3').feature('lngr1').selection.geom('geom1', 1);
model.result('pg3').feature('lngr1').selection.set([1 2]);
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').set('data', 'dset1');
model.result('pg4').create('lngr1', 'LineGraph');
model.result('pg4').create('lngr2', 'LineGraph');
model.result('pg4').feature('lngr1').selection.all;
model.result('pg4').feature('lngr1').set('xdataexpr', 'X');
model.result('pg4').feature('lngr1').set('expr', 'semi.Nnetdop');
model.result('pg4').feature('lngr1').set('unit', '1/cm^3');
model.result('pg4').feature('lngr1').set('linecolor', 'red');
model.result('pg4').feature('lngr1').set('legend', true);
model.result('pg4').feature('lngr1').set('legendmethod', 'manual');
model.result('pg4').feature('lngr1').set('legends', {'P-type (Red)'});
model.result('pg4').feature('lngr1').feature.create('filt1', 'LineGraphFilter');
model.result('pg4').feature('lngr1').feature('filt1').set('expr', 'semi.Na-semi.Nd > 1[1/cm^3]');
model.result('pg4').feature('lngr2').selection.all;
model.result('pg4').feature('lngr2').set('xdataexpr', 'X');
model.result('pg4').feature('lngr2').set('expr', 'semi.Nnetdop');
model.result('pg4').feature('lngr2').set('unit', '1/cm^3');
model.result('pg4').feature('lngr2').set('linecolor', 'blue');
model.result('pg4').feature('lngr2').set('legend', true);
model.result('pg4').feature('lngr2').set('legendmethod', 'manual');
model.result('pg4').feature('lngr2').set('legends', {'N-type (Blue)'});
model.result('pg4').feature('lngr2').feature.create('filt1', 'LineGraphFilter');
model.result('pg4').feature('lngr2').feature('filt1').set('expr', 'semi.Nd-semi.Na > 1[1/cm^3]');
model.result('pg4').set('titletype', 'none');
model.result('pg4').set('legendpos', 'uppermiddle');
model.result('pg4').set('ylabel', 'Net Dopant Concentration \vert N<sub>d</sub> - N<sub>a</sub>\vert, 1/cm<sup>3</sup>');
model.result('pg4').set('ylog', true);
model.result('pg4').feature('lngr1').label('P-type');
model.result('pg4').feature('lngr2').label('N-type');
model.result('pg4').label('Net Dopant Concentration (semi)');
model.result('pg1').run;
model.result('pg1').set('data', 'dset2');
model.result('pg1').set('showlegends', false);
model.result('pg1').run;
model.result('pg2').run;
model.result('pg2').set('data', 'dset2');
model.result('pg2').set('showlegends', false);
model.result('pg2').run;
model.result('pg3').run;
model.result('pg3').set('data', 'dset2');
model.result('pg3').run;
model.result('pg4').run;
model.result.remove('pg4');
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Cm and Gp vs. Vg');
model.result('pg4').create('glob1', 'Global');
model.result('pg4').feature('glob1').set('markerpos', 'datapoints');
model.result('pg4').feature('glob1').set('linewidth', 'preference');
model.result('pg4').feature('glob1').setIndex('expr', 'Cm', 0);
model.result('pg4').feature('glob1').setIndex('unit', 'pF', 0);
model.result('pg4').feature('glob1').setIndex('descr', 'Cm', 0);
model.result('pg4').run;
model.result('pg4').create('glob2', 'Global');
model.result('pg4').feature('glob2').set('markerpos', 'datapoints');
model.result('pg4').feature('glob2').set('linewidth', 'preference');
model.result('pg4').feature('glob2').setIndex('expr', 'Gp', 0);
model.result('pg4').feature('glob2').setIndex('unit', 'nS', 0);
model.result('pg4').feature('glob2').setIndex('descr', 'Gp', 0);
model.result('pg4').run;
model.result('pg4').set('twoyaxes', true);
model.result('pg4').setIndex('plotonsecyaxis', true, 1, 1);
model.result('pg4').set('legendpos', 'middleright');
model.result('pg4').run;

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').set('plotgroup', 'Default');
model.study('std2').feature('stat').set('solnum', 'auto');
model.study('std2').feature('stat').set('notsolnum', 'auto');
model.study('std2').feature('stat').set('outputmap', {});
model.study('std2').feature('stat').set('ngenAUX', '1');
model.study('std2').feature('stat').set('goalngenAUX', '1');
model.study('std2').feature('stat').set('ngenAUX', '1');
model.study('std2').feature('stat').set('goalngenAUX', '1');
model.study('std2').feature('stat').setSolveFor('/physics/semi', true);
model.study('std2').create('frlin', 'Frequencylinearized');
model.study('std2').feature('frlin').set('plotgroup', 'Default');
model.study('std2').feature('frlin').set('linpsolnum', 'auto');
model.study('std2').feature('frlin').set('solnum', 'auto');
model.study('std2').feature('frlin').set('notsolnum', 'auto');
model.study('std2').feature('frlin').set('outputmap', {});
model.study('std2').feature('frlin').set('ngenAUX', '1');
model.study('std2').feature('frlin').set('goalngenAUX', '1');
model.study('std2').feature('frlin').set('ngenAUX', '1');
model.study('std2').feature('frlin').set('goalngenAUX', '1');
model.study('std2').feature('frlin').setSolveFor('/physics/semi', true);
model.study('std2').feature.remove('stat');
model.study('std2').label('Study 2 - Freq sweep at -3 V');
model.study('std2').feature('frlin').set('plist', 'f0 * 10^range(-2,0.2,3)');
model.study('std2').feature('frlin').set('useparam', true);
model.study('std2').feature('frlin').setIndex('pname_aux', 't_epi', 0);
model.study('std2').feature('frlin').setIndex('plistarr_aux', '', 0);
model.study('std2').feature('frlin').setIndex('punit_aux', 'm', 0);
model.study('std2').feature('frlin').setIndex('pname_aux', 't_epi', 0);
model.study('std2').feature('frlin').setIndex('plistarr_aux', '', 0);
model.study('std2').feature('frlin').setIndex('punit_aux', 'm', 0);
model.study('std2').feature('frlin').setIndex('pname_aux', 'Vg', 0);
model.study('std2').feature('frlin').setIndex('plistarr_aux', -3, 0);
model.study('std2').feature('frlin').setIndex('punit_aux', 'V', 0);

model.sol.create('sol3');
model.sol('sol3').study('std2');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std2');
model.sol('sol3').feature('st1').set('studystep', 'frlin');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').feature('comp1_semi_tasr1_ctb1_ft').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_V').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_Efn_').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_Efp_').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_semi_tasr1_ctb1_ft').set('resscalemethod', 'parent');
model.sol('sol3').feature('v1').feature('comp1_V').set('resscalemethod', 'parent');
model.sol('sol3').feature('v1').feature('comp1_Efn_').set('resscalemethod', 'parent');
model.sol('sol3').feature('v1').feature('comp1_Efp_').set('resscalemethod', 'parent');
model.sol('sol3').feature('v1').feature('comp1_semi_tasr1_ctb1_ft').set('scaleval', '10');
model.sol('sol3').feature('v1').feature('comp1_V').set('scaleval', '1');
model.sol('sol3').feature('v1').feature('comp1_Efn_').set('scaleval', '1');
model.sol('sol3').feature('v1').feature('comp1_Efp_').set('scaleval', '1');
model.sol('sol3').feature('v1').set('control', 'frlin');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').set('stol', 0.001);
model.sol('sol3').feature('s1').create('p1', 'Parametric');
model.sol('sol3').feature('s1').feature.remove('pDef');
model.sol('sol3').feature('s1').feature('p1').set('pname', {'freq' 'Vg'});
model.sol('sol3').feature('s1').feature('p1').set('punit', {'Hz' 'V'});
model.sol('sol3').feature('s1').feature('p1').set('sweeptype', 'filled');
model.sol('sol3').feature('s1').feature('p1').set('plistarr', {'f0 * 10^range(-2,0.2,3)' '-3'});
model.sol('sol3').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol3').feature('s1').feature('p1').set('pcontinuation', '');
model.sol('sol3').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol3').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol3').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol3').feature('s1').feature('p1').set('plotgroup', 'Default');
model.sol('sol3').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol3').feature('s1').feature('p1').set('probes', {});
model.sol('sol3').feature('s1').feature('p1').set('control', 'frlin');
model.sol('sol3').feature('s1').set('nonlin', 'linper');
model.sol('sol3').feature('s1').set('storelinpoint', true);
model.sol('sol3').feature('s1').set('linpsolnum', 'all');
model.sol('sol3').feature('s1').set('control', 'frlin');
model.sol('sol3').feature('s1').feature('aDef').set('assemtol', 0);
model.sol('sol3').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('s1').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol3').feature('s1').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol3').feature('s1').feature('d1').set('ooc', 'auto');
model.sol('sol3').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol3').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol('sol3').attach('std2');

model.study('std2').feature('frlin').set('uselinpsol', true);
model.study('std2').feature('frlin').set('linpmethod', 'sol');
model.study('std2').feature('frlin').set('linpstudy', 'std1');
model.study('std2').feature('frlin').set('linpsol', 'sol1');
model.study('std2').feature('frlin').set('linpsoluse', 'sol2');
model.study('std2').feature('frlin').set('linpsolnum', 35);

model.sol('sol3').study('std2');
model.sol('sol3').feature.remove('s1');
model.sol('sol3').feature.remove('v1');
model.sol('sol3').feature.remove('st1');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std2');
model.sol('sol3').feature('st1').set('studystep', 'frlin');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').feature('comp1_semi_tasr1_ctb1_ft').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_V').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_Efn_').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_Efp_').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_semi_tasr1_ctb1_ft').set('resscalemethod', 'parent');
model.sol('sol3').feature('v1').feature('comp1_V').set('resscalemethod', 'parent');
model.sol('sol3').feature('v1').feature('comp1_Efn_').set('resscalemethod', 'parent');
model.sol('sol3').feature('v1').feature('comp1_Efp_').set('resscalemethod', 'parent');
model.sol('sol3').feature('v1').feature('comp1_semi_tasr1_ctb1_ft').set('scaleval', '10');
model.sol('sol3').feature('v1').feature('comp1_V').set('scaleval', '1');
model.sol('sol3').feature('v1').feature('comp1_Efn_').set('scaleval', '1');
model.sol('sol3').feature('v1').feature('comp1_Efp_').set('scaleval', '1');
model.sol('sol3').feature('v1').set('control', 'frlin');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').set('stol', 0.001);
model.sol('sol3').feature('s1').create('p1', 'Parametric');
model.sol('sol3').feature('s1').feature.remove('pDef');
model.sol('sol3').feature('s1').feature('p1').set('pname', {'freq' 'Vg'});
model.sol('sol3').feature('s1').feature('p1').set('punit', {'Hz' 'V'});
model.sol('sol3').feature('s1').feature('p1').set('sweeptype', 'filled');
model.sol('sol3').feature('s1').feature('p1').set('plistarr', {'f0 * 10^range(-2,0.2,3)' '-3'});
model.sol('sol3').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol3').feature('s1').feature('p1').set('pcontinuation', '');
model.sol('sol3').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol3').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol3').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol3').feature('s1').feature('p1').set('plotgroup', 'Default');
model.sol('sol3').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol3').feature('s1').feature('p1').set('probes', {});
model.sol('sol3').feature('s1').feature('p1').set('control', 'frlin');
model.sol('sol3').feature('s1').set('nonlin', 'linper');
model.sol('sol3').feature('s1').set('storelinpoint', true);
model.sol('sol3').feature('s1').set('linpsolnum', 'all');
model.sol('sol3').feature('s1').set('control', 'frlin');
model.sol('sol3').feature('s1').feature('aDef').set('assemtol', 0);
model.sol('sol3').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('s1').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol3').feature('s1').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol3').feature('s1').feature('d1').set('ooc', 'auto');
model.sol('sol3').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol3').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol('sol3').attach('std2');
model.sol('sol3').runAll;

model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').label('Energy Levels (semi) 1');
model.result('pg5').set('data', 'dset3');
model.result('pg5').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg5').set('titletype', 'manual');
model.result('pg5').set('title', 'Energy Diagram');
model.result('pg5').set('ylabel', 'Energy (eV)');
model.result('pg5').set('data', 'dset3');
model.result('pg5').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond1/pg2');
model.result('pg5').feature.create('lngr1', 'LineGraph');
model.result('pg5').feature('lngr1').label('Conduction Band Energy Level');
model.result('pg5').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg5').feature('lngr1').set('expr', 'semi.Ec_e');
model.result('pg5').feature('lngr1').set('unit', 'eV');
model.result('pg5').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg5').feature('lngr1').set('linecolor', 'blue');
model.result('pg5').feature('lngr1').set('legend', true);
model.result('pg5').feature('lngr1').set('legendmethod', 'manual');
model.result('pg5').feature('lngr1').set('legends', {'Ec'});
model.result('pg5').feature('lngr1').set('resolution', 'norefine');
model.result('pg5').feature('lngr1').set('smooth', 'everywhere');
model.result('pg5').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg5').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg5').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg5').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg5').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg5').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg5').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg5').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg5').feature('lngr1').set('data', 'parent');
model.result('pg5').feature('lngr1').selection.geom('geom1', 1);
model.result('pg5').feature('lngr1').selection.set([1 2]);
model.result('pg5').feature.create('lngr2', 'LineGraph');
model.result('pg5').feature('lngr2').label('Electron Quasi-Fermi Energy Level');
model.result('pg5').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg5').feature('lngr2').set('expr', 'semi.Efn_e');
model.result('pg5').feature('lngr2').set('unit', 'eV');
model.result('pg5').feature('lngr2').set('evalmethodactive', 'off');
model.result('pg5').feature('lngr2').set('linestyle', 'dashed');
model.result('pg5').feature('lngr2').set('linecolor', 'black');
model.result('pg5').feature('lngr2').set('legend', true);
model.result('pg5').feature('lngr2').set('legendmethod', 'manual');
model.result('pg5').feature('lngr2').set('legends', {'Efn'});
model.result('pg5').feature('lngr2').set('resolution', 'norefine');
model.result('pg5').feature('lngr2').set('smooth', 'everywhere');
model.result('pg5').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg5').feature('lngr2').set('evalmethodactive', 'off');
model.result('pg5').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg5').feature('lngr2').set('evalmethodactive', 'off');
model.result('pg5').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg5').feature('lngr2').set('evalmethodactive', 'off');
model.result('pg5').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg5').feature('lngr2').set('evalmethodactive', 'off');
model.result('pg5').feature('lngr2').set('data', 'parent');
model.result('pg5').feature('lngr2').selection.geom('geom1', 1);
model.result('pg5').feature('lngr2').selection.set([1 2]);
model.result('pg5').feature.create('lngr3', 'LineGraph');
model.result('pg5').feature('lngr3').label('Hole Quasi-Fermi Energy Level');
model.result('pg5').feature('lngr3').set('showsolutionparams', 'on');
model.result('pg5').feature('lngr3').set('expr', 'semi.Efp_e');
model.result('pg5').feature('lngr3').set('unit', 'eV');
model.result('pg5').feature('lngr3').set('evalmethodactive', 'off');
model.result('pg5').feature('lngr3').set('linestyle', 'dotted');
model.result('pg5').feature('lngr3').set('linecolor', 'black');
model.result('pg5').feature('lngr3').set('legend', true);
model.result('pg5').feature('lngr3').set('legendmethod', 'manual');
model.result('pg5').feature('lngr3').set('legends', {'Efp'});
model.result('pg5').feature('lngr3').set('resolution', 'norefine');
model.result('pg5').feature('lngr3').set('smooth', 'everywhere');
model.result('pg5').feature('lngr3').set('showsolutionparams', 'on');
model.result('pg5').feature('lngr3').set('evalmethodactive', 'off');
model.result('pg5').feature('lngr3').set('showsolutionparams', 'on');
model.result('pg5').feature('lngr3').set('evalmethodactive', 'off');
model.result('pg5').feature('lngr3').set('showsolutionparams', 'on');
model.result('pg5').feature('lngr3').set('evalmethodactive', 'off');
model.result('pg5').feature('lngr3').set('showsolutionparams', 'on');
model.result('pg5').feature('lngr3').set('evalmethodactive', 'off');
model.result('pg5').feature('lngr3').set('data', 'parent');
model.result('pg5').feature('lngr3').selection.geom('geom1', 1);
model.result('pg5').feature('lngr3').selection.set([1 2]);
model.result('pg5').feature.create('lngr4', 'LineGraph');
model.result('pg5').feature('lngr4').label('Valence Band Energy Level');
model.result('pg5').feature('lngr4').set('showsolutionparams', 'on');
model.result('pg5').feature('lngr4').set('expr', 'semi.Ev_e');
model.result('pg5').feature('lngr4').set('unit', 'eV');
model.result('pg5').feature('lngr4').set('evalmethodactive', 'off');
model.result('pg5').feature('lngr4').set('linecolor', 'green');
model.result('pg5').feature('lngr4').set('legend', true);
model.result('pg5').feature('lngr4').set('legendmethod', 'manual');
model.result('pg5').feature('lngr4').set('legends', {'Ev'});
model.result('pg5').feature('lngr4').set('resolution', 'norefine');
model.result('pg5').feature('lngr4').set('smooth', 'everywhere');
model.result('pg5').feature('lngr4').set('showsolutionparams', 'on');
model.result('pg5').feature('lngr4').set('evalmethodactive', 'off');
model.result('pg5').feature('lngr4').set('showsolutionparams', 'on');
model.result('pg5').feature('lngr4').set('evalmethodactive', 'off');
model.result('pg5').feature('lngr4').set('showsolutionparams', 'on');
model.result('pg5').feature('lngr4').set('evalmethodactive', 'off');
model.result('pg5').feature('lngr4').set('showsolutionparams', 'on');
model.result('pg5').feature('lngr4').set('evalmethodactive', 'off');
model.result('pg5').feature('lngr4').set('data', 'parent');
model.result('pg5').feature('lngr4').selection.geom('geom1', 1);
model.result('pg5').feature('lngr4').selection.set([1 2]);
model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').label('Carrier Concentrations (semi) 1');
model.result('pg6').set('data', 'dset3');
model.result('pg6').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg6').set('ylabel', 'Carrier concentration (1/cm^3)');
model.result('pg6').set('ylog', true);
model.result('pg6').set('data', 'dset3');
model.result('pg6').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond1/pg3');
model.result('pg6').feature.create('lngr1', 'LineGraph');
model.result('pg6').feature('lngr1').label('Electron Concentration');
model.result('pg6').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg6').feature('lngr1').set('expr', 'semi.N');
model.result('pg6').feature('lngr1').set('unit', '1/cm^3');
model.result('pg6').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg6').feature('lngr1').set('legend', true);
model.result('pg6').feature('lngr1').set('legendmethod', 'manual');
model.result('pg6').feature('lngr1').set('legends', {'electrons'});
model.result('pg6').feature('lngr1').set('resolution', 'norefine');
model.result('pg6').feature('lngr1').set('smooth', 'everywhere');
model.result('pg6').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg6').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg6').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg6').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg6').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg6').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg6').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg6').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg6').feature('lngr1').set('data', 'parent');
model.result('pg6').feature('lngr1').selection.geom('geom1', 1);
model.result('pg6').feature('lngr1').selection.set([1 2]);
model.result('pg6').feature.create('lngr2', 'LineGraph');
model.result('pg6').feature('lngr2').label('Hole Concentration');
model.result('pg6').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg6').feature('lngr2').set('expr', 'semi.P');
model.result('pg6').feature('lngr2').set('unit', '1/cm^3');
model.result('pg6').feature('lngr2').set('evalmethodactive', 'off');
model.result('pg6').feature('lngr2').set('legend', true);
model.result('pg6').feature('lngr2').set('legendmethod', 'manual');
model.result('pg6').feature('lngr2').set('legends', {'holes'});
model.result('pg6').feature('lngr2').set('resolution', 'norefine');
model.result('pg6').feature('lngr2').set('smooth', 'everywhere');
model.result('pg6').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg6').feature('lngr2').set('evalmethodactive', 'off');
model.result('pg6').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg6').feature('lngr2').set('evalmethodactive', 'off');
model.result('pg6').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg6').feature('lngr2').set('evalmethodactive', 'off');
model.result('pg6').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg6').feature('lngr2').set('evalmethodactive', 'off');
model.result('pg6').feature('lngr2').set('data', 'parent');
model.result('pg6').feature('lngr2').selection.geom('geom1', 1);
model.result('pg6').feature('lngr2').selection.set([1 2]);
model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').label('Electric Potential (semi) 1');
model.result('pg7').set('data', 'dset3');
model.result('pg7').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg7').set('ylabel', 'Electric Potential (V)');
model.result('pg7').set('data', 'dset3');
model.result('pg7').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond1/pg4');
model.result('pg7').feature.create('lngr1', 'LineGraph');
model.result('pg7').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg7').feature('lngr1').set('expr', 'V');
model.result('pg7').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg7').feature('lngr1').set('resolution', 'norefine');
model.result('pg7').feature('lngr1').set('smooth', 'everywhere');
model.result('pg7').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg7').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg7').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg7').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg7').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg7').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg7').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg7').feature('lngr1').set('evalmethodactive', 'off');
model.result('pg7').feature('lngr1').set('data', 'parent');
model.result('pg7').feature('lngr1').selection.geom('geom1', 1);
model.result('pg7').feature('lngr1').selection.set([1 2]);
model.result.create('pg8', 'PlotGroup1D');
model.result('pg8').set('data', 'dset3');
model.result('pg8').create('lngr1', 'LineGraph');
model.result('pg8').create('lngr2', 'LineGraph');
model.result('pg8').feature('lngr1').selection.all;
model.result('pg8').feature('lngr1').set('xdataexpr', 'X');
model.result('pg8').feature('lngr1').set('expr', 'semi.Nnetdop');
model.result('pg8').feature('lngr1').set('unit', '1/cm^3');
model.result('pg8').feature('lngr1').set('linecolor', 'red');
model.result('pg8').feature('lngr1').set('legend', true);
model.result('pg8').feature('lngr1').set('legendmethod', 'manual');
model.result('pg8').feature('lngr1').set('legends', {'P-type (Red)'});
model.result('pg8').feature('lngr1').feature.create('filt1', 'LineGraphFilter');
model.result('pg8').feature('lngr1').feature('filt1').set('expr', 'semi.Na-semi.Nd > 1[1/cm^3]');
model.result('pg8').feature('lngr2').selection.all;
model.result('pg8').feature('lngr2').set('xdataexpr', 'X');
model.result('pg8').feature('lngr2').set('expr', 'semi.Nnetdop');
model.result('pg8').feature('lngr2').set('unit', '1/cm^3');
model.result('pg8').feature('lngr2').set('linecolor', 'blue');
model.result('pg8').feature('lngr2').set('legend', true);
model.result('pg8').feature('lngr2').set('legendmethod', 'manual');
model.result('pg8').feature('lngr2').set('legends', {'N-type (Blue)'});
model.result('pg8').feature('lngr2').feature.create('filt1', 'LineGraphFilter');
model.result('pg8').feature('lngr2').feature('filt1').set('expr', 'semi.Nd-semi.Na > 1[1/cm^3]');
model.result('pg8').set('titletype', 'none');
model.result('pg8').set('legendpos', 'uppermiddle');
model.result('pg8').set('ylabel', 'Net Dopant Concentration \vert N<sub>d</sub> - N<sub>a</sub>\vert, 1/cm<sup>3</sup>');
model.result('pg8').set('ylog', true);
model.result('pg8').feature('lngr1').label('P-type');
model.result('pg8').feature('lngr2').label('N-type');
model.result('pg8').label('Net Dopant Concentration (semi)');
model.result('pg5').run;
model.result('pg8').run;
model.result.remove('pg8');
model.result('pg4').run;
model.result.duplicate('pg8', 'pg4');
model.result('pg8').run;
model.result('pg8').label('Cm and Gp vs. Freq');
model.result('pg8').set('data', 'dset3');
model.result('pg8').set('legendpos', 'upperright');
model.result('pg8').run;
model.result('pg8').feature('glob2').setIndex('expr', 'Gp/(2*pi*freq)', 0);
model.result('pg8').feature('glob2').setIndex('unit', 'pF', 0);
model.result('pg8').feature('glob2').setIndex('descr', 'Gp/\omega', 0);
model.result('pg8').feature('glob2').set('xdatasolnumtype', 'level2');
model.result('pg8').run;
model.result('pg8').feature('glob1').set('xdatasolnumtype', 'level2');
model.result('pg8').set('xlog', true);
model.result('pg8').run;
model.result.dataset.duplicate('dset4', 'dset1');
model.result.dataset('dset4').label('Study 1 - Vg sweep at 50 Hz/Solution 1 XD');
model.result.dataset('dset4').set('comp', 'semi_tasr1_ctb1_xdim');
model.result.create('pg9', 'PlotGroup1D');
model.result('pg9').run;
model.result('pg9').label('Density of trap states vs. Energy');
model.result('pg9').set('data', 'dset4');
model.result('pg9').create('lngr1', 'LineGraph');
model.result('pg9').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg9').feature('lngr1').set('linewidth', 'preference');
model.result('pg9').feature('lngr1').selection.all;
model.result('pg9').feature('lngr1').set('expr', 'atxd0(0[um],(semi.tasr1.ctb1.gt/(e_const*Ew0)))');
model.result('pg9').feature('lngr1').set('unit', '1/(cm^2*eV)');
model.result('pg9').feature('lngr1').set('descractive', true);
model.result('pg9').feature('lngr1').set('descr', 'Density of trap states');
model.result('pg9').feature('lngr1').set('evalmethod', 'linpoint');
model.result('pg9').feature('lngr1').set('xdata', 'expr');
model.result('pg9').feature('lngr1').set('xdataexpr', 'atxd0(0[um],semi.tasr1.ctb1.Vxd-semi.tasr1.ctb1.Et0)*e_const');
model.result('pg9').feature('lngr1').set('xdataunit', 'eV');
model.result('pg9').feature('lngr1').set('xdatadescractive', true);
model.result('pg9').feature('lngr1').set('xdatadescr', 'Energy');
model.result('pg9').feature('lngr1').set('xdataevalmethod', 'linpoint');
model.result('pg9').run;
model.result('pg9').run;
model.result.duplicate('pg10', 'pg9');
model.result('pg10').run;
model.result('pg10').label('Trap occupancy, static');
model.result('pg10').setIndex('looplevelinput', 'manual', 0);
model.result('pg10').setIndex('looplevel', [1 35], 0);
model.result('pg10').set('legendpos', 'lowerleft');
model.result('pg10').run;
model.result('pg10').feature('lngr1').set('expr', 'atxd0(0[um],(semi.tasr1.ctb1.ft))');
model.result('pg10').feature('lngr1').set('descr', 'Trap occupancy, static');
model.result('pg10').feature('lngr1').set('legend', true);
model.result('pg10').run;
model.result('pg10').feature('lngr1').set('resolution', 'norefine');
model.result('pg10').run;
model.result('pg10').run;
model.result.duplicate('pg11', 'pg10');
model.result('pg11').run;
model.result('pg11').label('Trap occupancy, small signal response');
model.result('pg11').set('titletype', 'manual');
model.result('pg11').set('title', 'Trap occupancy, small signal, real and imaginary parts');
model.result('pg11').set('legendpos', 'upperleft');
model.result('pg11').run;
model.result('pg11').feature('lngr1').set('descr', 'Trap occupancy, small signal response');
model.result('pg11').feature('lngr1').set('evalmethod', 'harmonic');
model.result('pg11').feature('lngr1').set('differential', true);
model.result('pg11').feature.duplicate('lngr2', 'lngr1');
model.result('pg11').run;
model.result('pg11').feature('lngr2').set('expr', 'atxd0(0[um],imag(semi.tasr1.ctb1.ft))');
model.result('pg11').feature('lngr2').set('linestyle', 'dashed');
model.result('pg11').feature('lngr2').set('linecolor', 'cyclereset');
model.result('pg11').run;

model.title('Interface Trapping Effects of a MOSCAP');

model.description('This tutorial compares experimental data from the literature with a COMSOL model of a MOSCAP with interface traps (surface states). The Trap-Assisted Surface Recombination feature is used to simulate the effects of the trap charges and the processes of carrier capturing and emitting by the traps. The effect of the fixed charges in the gate oxide is also included. The computed values of the capacitance and conductance as functions of the gate voltage and frequency reproduce the qualitative behavior of the experimental data with comparable magnitudes. The model uses the quasi-Fermi level formulation and shows how to plot quantities such as the trap occupancy as a function of the energy.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;

model.label('moscap_1d_interface_traps.mph');

model.modelNode.label('Components');

out = model;
