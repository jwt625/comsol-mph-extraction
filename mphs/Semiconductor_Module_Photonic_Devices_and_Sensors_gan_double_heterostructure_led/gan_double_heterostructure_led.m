function out = model
%
% gan_double_heterostructure_led.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Semiconductor_Module/Photonic_Devices_and_Sensors');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 1);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('semi', 'Semiconductor', 'geom1');
model.physics('semi').model('comp1');

model.study.create('std1');
model.study('std1').create('semie', 'SemiconductorEquilibrium');
model.study('std1').feature('semie').set('solnum', 'auto');
model.study('std1').feature('semie').set('notsolnum', 'auto');
model.study('std1').feature('semie').set('outputmap', {});
model.study('std1').feature('semie').set('ngenAUX', '1');
model.study('std1').feature('semie').set('goalngenAUX', '1');
model.study('std1').feature('semie').set('ngenAUX', '1');
model.study('std1').feature('semie').set('goalngenAUX', '1');
model.study('std1').feature('semie').setSolveFor('/physics/semi', true);

model.param.set('V_n', '0[V]');
model.param.descr('V_n', 'n-contact voltage');
model.param.set('V_p', '0[V]');
model.param.descr('V_p', 'p-contact voltage');
model.param.set('InGaN_bg', '((h_const*c_const)/450[nm])/(1.6e-19[C])');
model.param.descr('InGaN_bg', 'Band gap energy of InGaN layer');
model.param.set('I_p', '1e-6[A]');
model.param.descr('I_p', 'p-contact current');
model.param.set('A_cross', '200[um]*200[um]');
model.param.descr('A_cross', 'Cross sectional area');

model.geom('geom1').lengthUnit([native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']);
model.geom('geom1').create('i1', 'Interval');
model.geom('geom1').feature('i1').setIndex('coord', '0.15[um]', 1);
model.geom('geom1').run('i1');
model.geom('geom1').create('i2', 'Interval');
model.geom('geom1').feature('i2').setIndex('coord', '0.15[um]', 0);
model.geom('geom1').feature('i2').setIndex('coord', '0.2[um]', 1);
model.geom('geom1').run('i2');
model.geom('geom1').create('i3', 'Interval');
model.geom('geom1').feature('i3').setIndex('coord', '0.2[um]', 0);
model.geom('geom1').feature('i3').setIndex('coord', '0.35[um]', 1);

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('SemicondMaterial', 'Semiconductor material');
model.material('mat1').label('GaN (Zinc Blende) - Gallium Nitride');
model.material('mat1').propertyGroup('def').set('relpermittivity', {'9.7' '0' '0' '0' '9.7' '0' '0' '0' '9.7'});
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'130[W/(m*K)]' '0' '0' '0' '130[W/(m*K)]' '0' '0' '0' '130[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('density', '6070[kg/m^3]');
model.material('mat1').propertyGroup('def').set('heatcapacity', '490[J/(kg*K)]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Eg0', '3.2[V]');
model.material('mat1').propertyGroup('SemicondMaterial').set('chi0', '4.1[V]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Nv', '(T/1[K])^(3/2)*8e15[1/cm^3]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Nc', '(T/1[K])^(3/2)*2.3e14[1/cm^3]');
model.material('mat1').propertyGroup('SemicondMaterial').set('mun', '1000[cm^2/(V*s)]');
model.material('mat1').propertyGroup('SemicondMaterial').set('mup', '350[cm^2/(V*s)]');
model.material('mat1').propertyGroup('SemicondMaterial').addInput('temperature');

model.geom('geom1').run;

model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').propertyGroup.create('SemicondMaterial', 'Semiconductor material');
model.material('mat2').label('GaN (Zinc Blende) - Gallium Nitride 1');
model.material('mat2').propertyGroup('def').set('relpermittivity', {'9.7' '0' '0' '0' '9.7' '0' '0' '0' '9.7'});
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'130[W/(m*K)]' '0' '0' '0' '130[W/(m*K)]' '0' '0' '0' '130[W/(m*K)]'});
model.material('mat2').propertyGroup('def').set('density', '6070[kg/m^3]');
model.material('mat2').propertyGroup('def').set('heatcapacity', '490[J/(kg*K)]');
model.material('mat2').propertyGroup('SemicondMaterial').set('Eg0', '3.2[V]');
model.material('mat2').propertyGroup('SemicondMaterial').set('chi0', '4.1[V]');
model.material('mat2').propertyGroup('SemicondMaterial').set('Nv', '(T/1[K])^(3/2)*8e15[1/cm^3]');
model.material('mat2').propertyGroup('SemicondMaterial').set('Nc', '(T/1[K])^(3/2)*2.3e14[1/cm^3]');
model.material('mat2').propertyGroup('SemicondMaterial').set('mun', '1000[cm^2/(V*s)]');
model.material('mat2').propertyGroup('SemicondMaterial').set('mup', '350[cm^2/(V*s)]');
model.material('mat2').propertyGroup('SemicondMaterial').addInput('temperature');
model.material('mat1').label('Al_0.15_Ga_0.85_N');
model.material('mat1').propertyGroup('SemicondMaterial').set('Eg0', {'3.7[V]'});
model.material('mat2').label('In_0.06_Ga_0.94_N');
model.material('mat2').selection.set([2]);
model.material('mat2').propertyGroup('SemicondMaterial').set('Eg0', {'InGaN_bg'});
model.material('mat2').propertyGroup('SemicondMaterial').set('chi0', {'4.6[V]'});

model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl('intop1').set('axisym', true);
model.cpl('intop1').selection.set([2]);

model.physics('semi').prop('d').set('A', 'A_cross');
model.physics('semi').prop('ModelProperties').set('CarrierStatistics', 'FermiDirac');
model.physics('semi').create('adm1', 'AnalyticDopingModel', 1);
model.physics('semi').feature('adm1').label('n Doping');
model.physics('semi').feature('adm1').selection.all;
model.physics('semi').feature('adm1').set('impurityDistribution', 'box');
model.physics('semi').feature('adm1').set('impurityType', 'donor');
model.physics('semi').feature('adm1').set('NDc', '1e18[1/cm^3]');
model.physics('semi').feature('adm1').set('jwidth', '0.125[um]');
model.physics('semi').feature('adm1').set('jds1D', '0.025[um]');
model.physics('semi').create('adm2', 'AnalyticDopingModel', 1);
model.physics('semi').feature('adm2').label('p Doping');
model.physics('semi').feature('adm2').selection.all;
model.physics('semi').feature('adm2').set('impurityDistribution', 'box');
model.physics('semi').feature('adm2').set('NAc', '1e18[1/cm^3]');
model.physics('semi').feature('adm2').set('rb', {'0.225[um]' '0' '0'});
model.physics('semi').feature('adm2').set('jwidth', '0.125[um]');
model.physics('semi').feature('adm2').set('jds1D', '0.025[um]');
model.physics('semi').create('mc1', 'MetalContact', 0);
model.physics('semi').feature('mc1').label('n Contact');
model.physics('semi').feature('mc1').selection.set([1]);
model.physics('semi').feature('mc1').set('V0', 'V_n');
model.physics('semi').create('mc2', 'MetalContact', 0);
model.physics('semi').feature('mc2').label('p Contact');
model.physics('semi').feature('mc2').selection.set([4]);
model.physics('semi').feature('mc2').set('V0', 'V_p');
model.physics('semi').create('cont2', 'Continuity', 0);
model.physics('semi').feature('cont2').selection.all;
model.physics('semi').feature('cont2').label('Continuity/Heterojunction - Thermionic Emission');
model.physics('semi').feature('cont2').set('HeteroModelSelection', 2);
model.physics('semi').create('ot1', 'OpticalTransitions', 1);
model.physics('semi').feature('ot1').selection.all;
model.physics('semi').feature('ot1').set('StimulatedEmission', false);
model.physics('semi').create('mc3', 'MetalContact', 0);
model.physics('semi').feature('mc3').label('p Contact - Current');
model.physics('semi').feature('mc3').selection.set([4]);
model.physics('semi').feature('mc3').set('TerminalType', 'Current');
model.physics('semi').feature('mc3').set('I0', 'I_p');
model.physics('semi').create('aur1', 'AURecombination', 1);
model.physics('semi').feature('aur1').selection.all;
model.physics('semi').create('tar1', 'TrapAssistedRecombination', 1);
model.physics('semi').feature('tar1').selection.all;

model.material('mat1').propertyGroup.create('Auger', 'Auger_recombination');
model.material('mat1').propertyGroup('Auger').set('Cn', {'1.7e-30[cm^6/s]'});
model.material('mat1').propertyGroup('Auger').set('Cp', {'1.7e-30[cm^6/s]'});
model.material('mat1').propertyGroup.create('SRH', 'Shockley-Read-Hall_recombination');
model.material('mat1').propertyGroup('SRH').set('taun', {'1e-8'});
model.material('mat1').propertyGroup('SRH').set('taup', {'1e-8'});
model.material('mat2').propertyGroup.create('Auger', 'Auger_recombination');
model.material('mat2').propertyGroup('Auger').set('Cn', {'1.7e-30[cm^6/s]'});
model.material('mat2').propertyGroup('Auger').set('Cp', {'1.7e-30[cm^6/s]'});
model.material('mat2').propertyGroup.create('SRH', 'Shockley-Read-Hall_recombination');
model.material('mat2').propertyGroup('SRH').set('taun', {'1e-8'});
model.material('mat2').propertyGroup('SRH').set('taup', {'1e-8'});

model.mesh('mesh1').create('edg1', 'Edge');
model.mesh('mesh1').feature('edg1').selection.geom('geom1');
model.mesh('mesh1').feature('edg1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('edg1').feature('dis1').selection.set([1 3]);
model.mesh('mesh1').feature('edg1').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('edg1').feature('dis1').set('elemcount', 100);
model.mesh('mesh1').feature('edg1').feature('dis1').set('elemratio', 6);
model.mesh('mesh1').feature('edg1').feature('dis1').set('symmetric', true);
model.mesh('mesh1').feature('edg1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('edg1').feature('dis2').selection.set([2]);
model.mesh('mesh1').feature('edg1').feature('dis2').set('type', 'predefined');
model.mesh('mesh1').feature('edg1').feature('dis2').set('elemcount', 30);
model.mesh('mesh1').feature('edg1').feature('dis2').set('elemratio', 2);
model.mesh('mesh1').feature('edg1').feature('dis2').set('symmetric', true);
model.mesh('mesh1').run;

model.study('std1').label('Study 1: Preliminary study');
model.study('std1').setGenPlots(false);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'semie');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'semie');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 1.0E-6);
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', false);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').feature('aDef').set('assemtol', 0);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol1').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol1').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol1').feature('s1').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol1').feature('s1').feature('d1').set('ooc', 'off');
model.sol('sol1').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol1').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol1').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/semi', true);
model.study('std2').label('Study 2: Voltage bias');
model.study('std2').feature('stat').set('useadvanceddisable', true);
model.study('std2').feature('stat').set('disabledphysics', {'semi/mc3'});
model.study('std2').feature('stat').set('useinitsol', true);
model.study('std2').feature('stat').set('initmethod', 'sol');
model.study('std2').feature('stat').set('initstudy', 'std1');
model.study('std2').feature('stat').set('useparam', true);
model.study('std2').feature('stat').setIndex('pname', 'V_n', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 'V', 0);
model.study('std2').feature('stat').setIndex('pname', 'V_n', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 'V', 0);
model.study('std2').feature('stat').setIndex('pname', 'V_p', 0);
model.study('std2').feature('stat').setIndex('plistarr', 'range(0,0.1,3) range(3.025,0.025,3.3)', 0);

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').set('stol', 1.0E-6);
model.sol('sol2').feature('s1').create('p1', 'Parametric');
model.sol('sol2').feature('s1').feature.remove('pDef');
model.sol('sol2').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol2').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol2').feature('s1').set('control', 'stat');
model.sol('sol2').feature('s1').feature('aDef').set('complexfun', false);
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol2').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol2').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol2').feature('s1').feature('aDef').set('assemtol', 0);
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol2').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol2').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol2').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol2').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol2').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol2').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol2').feature('s1').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol2').feature('s1').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol2').feature('s1').feature('d1').set('ooc', 'off');
model.sol('sol2').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol2').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol2').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol2').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol2').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol2').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol2').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').label('Energy Levels (semi)');
model.result('pg1').set('data', 'dset2');
model.result('pg1').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg1').set('titletype', 'manual');
model.result('pg1').set('title', 'Energy Diagram');
model.result('pg1').set('ylabel', 'Energy (eV)');
model.result('pg1').set('data', 'dset2');
model.result('pg1').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond1/pg2');
model.result('pg1').feature.create('lngr1', 'LineGraph');
model.result('pg1').feature('lngr1').label('Conduction Band Energy Level');
model.result('pg1').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr1').set('expr', 'semi.Ec_e');
model.result('pg1').feature('lngr1').set('unit', 'eV');
model.result('pg1').feature('lngr1').set('linecolor', 'blue');
model.result('pg1').feature('lngr1').set('legend', true);
model.result('pg1').feature('lngr1').set('legendmethod', 'manual');
model.result('pg1').feature('lngr1').set('legends', {'Ec'});
model.result('pg1').feature('lngr1').set('resolution', 'norefine');
model.result('pg1').feature('lngr1').set('smooth', 'everywhere');
model.result('pg1').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr1').set('data', 'parent');
model.result('pg1').feature('lngr1').selection.geom('geom1', 1);
model.result('pg1').feature('lngr1').selection.set([1 2 3]);
model.result('pg1').feature.create('lngr2', 'LineGraph');
model.result('pg1').feature('lngr2').label('Electron Quasi-Fermi Energy Level');
model.result('pg1').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr2').set('expr', 'semi.Efn_e');
model.result('pg1').feature('lngr2').set('unit', 'eV');
model.result('pg1').feature('lngr2').set('linestyle', 'dashed');
model.result('pg1').feature('lngr2').set('linecolor', 'black');
model.result('pg1').feature('lngr2').set('legend', true);
model.result('pg1').feature('lngr2').set('legendmethod', 'manual');
model.result('pg1').feature('lngr2').set('legends', {'Efn'});
model.result('pg1').feature('lngr2').set('resolution', 'norefine');
model.result('pg1').feature('lngr2').set('smooth', 'everywhere');
model.result('pg1').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr2').set('data', 'parent');
model.result('pg1').feature('lngr2').selection.geom('geom1', 1);
model.result('pg1').feature('lngr2').selection.set([1 2 3]);
model.result('pg1').feature.create('lngr3', 'LineGraph');
model.result('pg1').feature('lngr3').label('Hole Quasi-Fermi Energy Level');
model.result('pg1').feature('lngr3').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr3').set('expr', 'semi.Efp_e');
model.result('pg1').feature('lngr3').set('unit', 'eV');
model.result('pg1').feature('lngr3').set('linestyle', 'dotted');
model.result('pg1').feature('lngr3').set('linecolor', 'black');
model.result('pg1').feature('lngr3').set('legend', true);
model.result('pg1').feature('lngr3').set('legendmethod', 'manual');
model.result('pg1').feature('lngr3').set('legends', {'Efp'});
model.result('pg1').feature('lngr3').set('resolution', 'norefine');
model.result('pg1').feature('lngr3').set('smooth', 'everywhere');
model.result('pg1').feature('lngr3').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr3').set('data', 'parent');
model.result('pg1').feature('lngr3').selection.geom('geom1', 1);
model.result('pg1').feature('lngr3').selection.set([1 2 3]);
model.result('pg1').feature.create('lngr4', 'LineGraph');
model.result('pg1').feature('lngr4').label('Valence Band Energy Level');
model.result('pg1').feature('lngr4').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr4').set('expr', 'semi.Ev_e');
model.result('pg1').feature('lngr4').set('unit', 'eV');
model.result('pg1').feature('lngr4').set('linecolor', 'green');
model.result('pg1').feature('lngr4').set('legend', true);
model.result('pg1').feature('lngr4').set('legendmethod', 'manual');
model.result('pg1').feature('lngr4').set('legends', {'Ev'});
model.result('pg1').feature('lngr4').set('resolution', 'norefine');
model.result('pg1').feature('lngr4').set('smooth', 'everywhere');
model.result('pg1').feature('lngr4').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr4').set('data', 'parent');
model.result('pg1').feature('lngr4').selection.geom('geom1', 1);
model.result('pg1').feature('lngr4').selection.set([1 2 3]);
model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').label('Carrier Concentrations (semi)');
model.result('pg2').set('data', 'dset2');
model.result('pg2').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg2').set('ylabel', 'Carrier concentration (1/cm^3)');
model.result('pg2').set('ylog', true);
model.result('pg2').set('data', 'dset2');
model.result('pg2').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond1/pg3');
model.result('pg2').feature.create('lngr1', 'LineGraph');
model.result('pg2').feature('lngr1').label('Electron Concentration');
model.result('pg2').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg2').feature('lngr1').set('expr', 'semi.N');
model.result('pg2').feature('lngr1').set('unit', '1/cm^3');
model.result('pg2').feature('lngr1').set('legend', true);
model.result('pg2').feature('lngr1').set('legendmethod', 'manual');
model.result('pg2').feature('lngr1').set('legends', {'electrons'});
model.result('pg2').feature('lngr1').set('resolution', 'norefine');
model.result('pg2').feature('lngr1').set('smooth', 'everywhere');
model.result('pg2').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg2').feature('lngr1').set('data', 'parent');
model.result('pg2').feature('lngr1').selection.geom('geom1', 1);
model.result('pg2').feature('lngr1').selection.set([1 2 3]);
model.result('pg2').feature.create('lngr2', 'LineGraph');
model.result('pg2').feature('lngr2').label('Hole Concentration');
model.result('pg2').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg2').feature('lngr2').set('expr', 'semi.P');
model.result('pg2').feature('lngr2').set('unit', '1/cm^3');
model.result('pg2').feature('lngr2').set('legend', true);
model.result('pg2').feature('lngr2').set('legendmethod', 'manual');
model.result('pg2').feature('lngr2').set('legends', {'holes'});
model.result('pg2').feature('lngr2').set('resolution', 'norefine');
model.result('pg2').feature('lngr2').set('smooth', 'everywhere');
model.result('pg2').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg2').feature('lngr2').set('data', 'parent');
model.result('pg2').feature('lngr2').selection.geom('geom1', 1);
model.result('pg2').feature('lngr2').selection.set([1 2 3]);
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').label('Electric Potential (semi)');
model.result('pg3').set('data', 'dset2');
model.result('pg3').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg3').set('ylabel', 'Electric Potential (V)');
model.result('pg3').set('data', 'dset2');
model.result('pg3').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond1/pg4');
model.result('pg3').feature.create('lngr1', 'LineGraph');
model.result('pg3').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg3').feature('lngr1').set('expr', 'V');
model.result('pg3').feature('lngr1').set('resolution', 'norefine');
model.result('pg3').feature('lngr1').set('smooth', 'everywhere');
model.result('pg3').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg3').feature('lngr1').set('data', 'parent');
model.result('pg3').feature('lngr1').selection.geom('geom1', 1);
model.result('pg3').feature('lngr1').selection.set([1 2 3]);
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').set('data', 'dset2');
model.result('pg4').create('lngr1', 'LineGraph');
model.result('pg4').create('lngr2', 'LineGraph');
model.result('pg4').feature('lngr1').selection.all;
model.result('pg4').feature('lngr1').set('xdataexpr', 'X');
model.result('pg4').feature('lngr1').set('expr', 'semi.Nnetdop');
model.result('pg4').feature('lngr1').set('unit', '1/cm^3');
model.result('pg4').feature('lngr1').set('linecolor', 'red');
model.result('pg4').feature('lngr1').set('legend', true);
model.result('pg4').feature('lngr1').set('legendmethod', 'manual');
model.result('pg4').feature('lngr1').set('legends', {'P-type (Red)'});
model.result('pg4').feature('lngr1').feature.create('filt1', 'LineGraphFilter');
model.result('pg4').feature('lngr1').feature('filt1').set('expr', 'semi.Na-semi.Nd > 1[1/cm^3]');
model.result('pg4').feature('lngr2').selection.all;
model.result('pg4').feature('lngr2').set('xdataexpr', 'X');
model.result('pg4').feature('lngr2').set('expr', 'semi.Nnetdop');
model.result('pg4').feature('lngr2').set('unit', '1/cm^3');
model.result('pg4').feature('lngr2').set('linecolor', 'blue');
model.result('pg4').feature('lngr2').set('legend', true);
model.result('pg4').feature('lngr2').set('legendmethod', 'manual');
model.result('pg4').feature('lngr2').set('legends', {'N-type (Blue)'});
model.result('pg4').feature('lngr2').feature.create('filt1', 'LineGraphFilter');
model.result('pg4').feature('lngr2').feature('filt1').set('expr', 'semi.Nd-semi.Na > 1[1/cm^3]');
model.result('pg4').set('titletype', 'none');
model.result('pg4').set('legendpos', 'uppermiddle');
model.result('pg4').set('ylabel', 'Net Dopant Concentration \vert N<sub>d</sub> - N<sub>a</sub>\vert, 1/cm<sup>3</sup>');
model.result('pg4').set('ylog', true);
model.result('pg4').feature('lngr1').label('P-type');
model.result('pg4').feature('lngr2').label('N-type');
model.result('pg4').label('Net Dopant Concentration (semi)');
model.result('pg1').run;
model.result('pg1').set('xlabelactive', true);
model.result('pg1').set('xlabel', 'x-coordinate (um)');
model.result('pg1').setIndex('looplevelinput', 'manual', 0);
model.result('pg1').setIndex('looplevel', [1], 0);
model.result('pg1').run;
model.result('pg1').setIndex('looplevel', [43], 0);
model.result('pg1').run;
model.result('pg2').run;
model.result('pg2').set('xlabelactive', true);
model.result('pg2').set('xlabel', 'x-coordinate (um)');
model.result('pg2').setIndex('looplevelinput', 'manual', 0);
model.result('pg2').setIndex('looplevel', [1], 0);
model.result('pg2').run;
model.result('pg2').setIndex('looplevel', [43], 0);
model.result('pg2').run;
model.result('pg4').run;
model.result('pg4').setIndex('looplevelinput', 'first', 0);
model.result('pg4').run;
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').label('Current vs. Voltage');
model.result('pg5').set('data', 'dset2');
model.result('pg5').set('titletype', 'manual');
model.result('pg5').set('title', 'Current-Voltage Curve');
model.result('pg5').set('xlabelactive', true);
model.result('pg5').set('xlabel', 'Voltage (V)');
model.result('pg5').set('ylabelactive', true);
model.result('pg5').set('ylabel', 'Current (mA)');
model.result('pg5').set('legendpos', 'upperleft');
model.result('pg5').create('glob1', 'Global');
model.result('pg5').feature('glob1').set('markerpos', 'datapoints');
model.result('pg5').feature('glob1').set('linewidth', 'preference');
model.result('pg5').feature('glob1').setIndex('expr', 'abs(semi.I0_1)', 0);
model.result('pg5').feature('glob1').setIndex('unit', 'mA', 0);
model.result('pg5').feature('glob1').setIndex('descr', 'Voltage bias', 0);
model.result('pg5').run;
model.result.numerical.create('gev1', 'EvalGlobal');
model.result.numerical('gev1').set('data', 'dset2');
model.result.numerical('gev1').setIndex('expr', 'semi.I0_2', 0);
model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').comments('Global Evaluation 1');
model.result.numerical('gev1').set('table', 'tbl1');
model.result.numerical('gev1').setResult;

model.physics('semi').feature('mc3').set('V0_init', '2.2[V]');

model.study.create('std3');
model.study('std3').create('stat', 'Stationary');
model.study('std3').feature('stat').setSolveFor('/physics/semi', true);
model.study('std3').label('Study 3: Current bias');
model.study('std3').setGenPlots(false);
model.study('std3').feature('stat').set('useinitsol', true);
model.study('std3').feature('stat').set('initmethod', 'sol');
model.study('std3').feature('stat').set('initstudy', 'std2');
model.study('std3').feature('stat').set('solnum', 23);
model.study('std3').feature('stat').set('useparam', true);
model.study('std3').feature('stat').setIndex('pname', 'V_n', 0);
model.study('std3').feature('stat').setIndex('plistarr', '', 0);
model.study('std3').feature('stat').setIndex('punit', 'V', 0);
model.study('std3').feature('stat').setIndex('pname', 'V_n', 0);
model.study('std3').feature('stat').setIndex('plistarr', '', 0);
model.study('std3').feature('stat').setIndex('punit', 'V', 0);
model.study('std3').feature('stat').setIndex('pname', 'I_p', 0);
model.study('std3').feature('stat').setIndex('plistarr', '1e-6 1e-5 1e-4 range(5e-4,2.5e-4,10e-3) range(15e-3,5e-3,100e-3) range(125e-3,25e-3,700e-3)', 0);

model.sol.create('sol3');
model.sol('sol3').study('std3');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std3');
model.sol('sol3').feature('st1').set('studystep', 'stat');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').set('control', 'stat');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').set('stol', 1.0E-6);
model.sol('sol3').feature('s1').create('p1', 'Parametric');
model.sol('sol3').feature('s1').feature.remove('pDef');
model.sol('sol3').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol3').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol3').feature('s1').set('control', 'stat');
model.sol('sol3').feature('s1').feature('aDef').set('complexfun', false);
model.sol('sol3').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol3').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol3').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol3').feature('s1').feature('aDef').set('assemtol', 0);
model.sol('sol3').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol3').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol3').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol3').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol3').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol3').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol3').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol3').feature('s1').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol3').feature('s1').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol3').feature('s1').feature('d1').set('ooc', 'off');
model.sol('sol3').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol3').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol3').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol3').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol3').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol3').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol3').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol3').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol3').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol('sol3').attach('std3');
model.sol('sol3').runAll;

model.result('pg5').run;
model.result('pg5').feature.duplicate('glob2', 'glob1');
model.result('pg5').run;
model.result('pg5').feature('glob2').set('data', 'dset3');
model.result('pg5').feature('glob2').setIndex('expr', 'abs(semi.I0_3)', 0);
model.result('pg5').feature('glob2').setIndex('unit', 'mA', 0);
model.result('pg5').feature('glob2').setIndex('descr', 'Current bias', 0);
model.result('pg5').feature('glob2').set('xdata', 'expr');
model.result('pg5').feature('glob2').set('xdataexpr', 'semi.V0_3');
model.result('pg5').feature('glob2').set('linestyle', 'dashed');
model.result('pg5').feature('glob2').set('linemarker', 'cycle');
model.result('pg5').run;
model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').run;
model.result('pg6').label('Emission Rate');
model.result('pg6').set('data', 'dset3');
model.result('pg6').set('titletype', 'manual');
model.result('pg6').set('title', 'Emission Rate (1/(m^3*s))');
model.result('pg6').set('xlabelactive', true);
model.result('pg6').set('xlabel', 'x-coordinate (um)');
model.result('pg6').create('lngr1', 'LineGraph');
model.result('pg6').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg6').feature('lngr1').set('linewidth', 'preference');
model.result('pg6').feature('lngr1').selection.all;
model.result('pg6').feature('lngr1').set('expr', 'semi.ot1.R_spon');
model.result('pg6').run;
model.result.dataset.create('dset4', 'Solution');
model.result.dataset('dset4').set('solution', 'sol3');
model.result.dataset('dset4').set('comp', 'semi_ot1_xdim');
model.result.dataset('dset4').label('Current bias study - frequency domain');
model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').run;
model.result('pg7').label('Emission Spectrum');
model.result('pg7').set('data', 'dset4');
model.result('pg7').set('titletype', 'manual');
model.result('pg7').set('title', 'Emission Spectrum from InGaN Layer');
model.result('pg7').set('xlabelactive', true);
model.result('pg7').set('xlabel', 'Energy (eV)');
model.result('pg7').set('ylabelactive', true);
model.result('pg7').set('ylabel', 'Emitted power per unit volume and energy (1/(m^3*s))');
model.result('pg7').create('lngr1', 'LineGraph');
model.result('pg7').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg7').feature('lngr1').set('linewidth', 'preference');
model.result('pg7').feature('lngr1').selection.all;
model.result('pg7').feature('lngr1').set('expr', 'comp1.atxd1(0.1525e-6,semi.ot1.dP_dE)');
model.result('pg7').feature('lngr1').set('xdata', 'expr');
model.result('pg7').feature('lngr1').set('xdataexpr', 'hbar_const*comp1.atxd1(0.1525e-6,semi.ot1.omega)/e_const');
model.result('pg7').run;
model.result.create('pg8', 'PlotGroup1D');
model.result('pg8').run;
model.result('pg8').label('Total Emission Rate from InGaN Layer vs. Current');
model.result('pg8').set('data', 'dset3');
model.result('pg8').set('xlabelactive', true);
model.result('pg8').set('xlabel', 'Current (mA)');
model.result('pg8').set('ylabelactive', true);
model.result('pg8').set('ylabel', 'Total emission rate from InGaN layer (1/s)');
model.result('pg8').set('titletype', 'manual');
model.result('pg8').set('title', 'Total emission rate from the InGaN layer');
model.result('pg8').create('glob1', 'Global');
model.result('pg8').feature('glob1').set('markerpos', 'datapoints');
model.result('pg8').feature('glob1').set('linewidth', 'preference');
model.result('pg8').feature('glob1').setIndex('expr', 'intop1(semi.ot1.R_spon)*A_cross', 0);
model.result('pg8').feature('glob1').setIndex('unit', '', 0);
model.result('pg8').feature('glob1').setIndex('descr', '', 0);
model.result('pg8').feature('glob1').set('xdata', 'expr');
model.result('pg8').feature('glob1').set('xdataexpr', 'I_p');
model.result('pg8').feature('glob1').set('xdataunit', 'mA');
model.result('pg8').feature('glob1').set('legend', false);
model.result('pg8').run;
model.result.create('pg9', 'PlotGroup1D');
model.result('pg9').run;
model.result('pg9').label('Efficiency');
model.result('pg9').set('data', 'dset3');
model.result('pg9').set('xlabelactive', true);
model.result('pg9').set('xlabel', 'Current Density (A/cm^2)');
model.result('pg9').set('ylabelactive', true);
model.result('pg9').set('ylabel', 'Internal Quantum Efficiency');
model.result('pg9').set('titletype', 'manual');
model.result('pg9').set('title', 'Efficiency as a function of current density');
model.result('pg9').create('glob1', 'Global');
model.result('pg9').feature('glob1').set('markerpos', 'datapoints');
model.result('pg9').feature('glob1').set('linewidth', 'preference');
model.result('pg9').feature('glob1').setIndex('expr', 'intop1(semi.ot1.R_spon)*A_cross/(semi.I0_3/e_const)', 0);
model.result('pg9').feature('glob1').setIndex('unit', 1, 0);
model.result('pg9').feature('glob1').setIndex('descr', '', 0);
model.result('pg9').feature('glob1').set('xdata', 'expr');
model.result('pg9').feature('glob1').set('xdataexpr', 'semi.I0_3/(A_cross*10000)');
model.result('pg9').feature('glob1').set('legend', false);
model.result('pg9').run;

model.title('InGaN/AlGaN Double Heterostructure LED');

model.description('This model simulates a GaN based light emitting diode. The emission intensity, spectrum, and quantum efficiency are calculated as a function of the driving current. Direct radiative recombination across the band gap is modeled, as well as nonradiative Auger and trap-assisted recombination processes. This results in a sublinear increase in emission intensity with increasing current, which is a common characteristic of LED devices known as LED droop. Note that quantum confinement effects within the thin active region are not included in the model.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;

model.label('gan_double_heterostructure_led.mph');

model.modelNode.label('Components');

out = model;
