function out = model
%
% vibrating_deep_beam.m
%
% Model exported on May 26 2025, 21:34 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Structural_Mechanics_Module/Verification_Examples');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('beam', 'HermitianBeam', 'geom1');
model.physics('beam').model('comp1');

model.study.create('std1');
model.study('std1').create('eig', 'Eigenfrequency');
model.study('std1').feature('eig').set('chkeigregion', true);
model.study('std1').feature('eig').set('conrad', '1');
model.study('std1').feature('eig').set('conradynhm', '1');
model.study('std1').feature('eig').set('storefact', false);
model.study('std1').feature('eig').set('solnum', 'auto');
model.study('std1').feature('eig').set('notsolnum', 'auto');
model.study('std1').feature('eig').set('outputmap', {});
model.study('std1').feature('eig').set('ngenAUX', '1');
model.study('std1').feature('eig').set('goalngenAUX', '1');
model.study('std1').feature('eig').set('ngenAUX', '1');
model.study('std1').feature('eig').set('goalngenAUX', '1');
model.study('std1').feature('eig').setSolveFor('/physics/beam', true);

model.common.create('mpf1', 'ParticipationFactors', 'comp1');

model.param.set('L', '10[m]');
model.param.descr('L', 'Length of beam');
model.param.set('F0', '1e6[N/m]');
model.param.descr('F0', 'Edge load');

model.geom('geom1').create('pol1', 'Polygon');
model.geom('geom1').feature('pol1').set('source', 'table');
model.geom('geom1').feature('pol1').setIndex('table', 0, 0, 0);
model.geom('geom1').feature('pol1').setIndex('table', 0, 0, 1);
model.geom('geom1').feature('pol1').setIndex('table', 0, 0, 2);
model.geom('geom1').feature('pol1').setIndex('table', 'L', 1, 0);
model.geom('geom1').feature('pol1').setIndex('table', 0, 1, 1);
model.geom('geom1').feature('pol1').setIndex('table', 0, 1, 2);
model.geom('geom1').run('fin');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat1').propertyGroup('Enu').set('E', {'2e11'});
model.material('mat1').propertyGroup('Enu').set('nu', {'0.3'});
model.material('mat1').propertyGroup('def').set('density', {'8000'});

model.physics('beam').prop('BeamFormulation').set('BeamFormulation', 'Timoshenko');
model.physics('beam').feature('csd1').set('SectionType', 'RectangularSection');
model.physics('beam').feature('csd1').set('hy_rect', 2);
model.physics('beam').feature('csd1').set('hz_rect', 2);
model.physics('beam').feature('csd1').feature('so1').set('OrientationMethod', 'vector_beam');
model.physics('beam').feature('csd1').feature('so1').set('vector_beam', [0 0 1]);
model.physics('beam').create('pdr1', 'DispRot0', 0);
model.physics('beam').feature('pdr1').selection.set([1]);
model.physics('beam').feature('pdr1').setIndex('Direction', 'prescribed', 0);
model.physics('beam').feature('pdr1').setIndex('Direction', 'prescribed', 1);
model.physics('beam').feature('pdr1').setIndex('Direction', 'prescribed', 2);
model.physics('beam').feature('pdr1').set('RotationType', 'RotationGroup');
model.physics('beam').feature('pdr1').setIndex('FreeRotationAround', true, 1);
model.physics('beam').feature('pdr1').setIndex('FreeRotationAround', true, 2);
model.physics('beam').create('pdr2', 'DispRot0', 0);
model.physics('beam').feature('pdr2').selection.set([2]);
model.physics('beam').feature('pdr2').setIndex('Direction', 'prescribed', 1);
model.physics('beam').feature('pdr2').setIndex('Direction', 'prescribed', 2);

model.mesh('mesh1').create('edg1', 'Edge');
model.mesh('mesh1').feature('edg1').selection.geom('geom1');
model.mesh('mesh1').feature('edg1').create('dis1', 'Distribution');
model.mesh('mesh1').run;

model.study('std1').label('Free Vibration');
model.study('std1').feature('eig').set('neigsactive', true);
model.study('std1').feature('eig').set('neigs', 10);
model.study('std1').feature('eig').set('shift', '40');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'eig');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'eig');
model.sol('sol1').create('e1', 'Eigenvalue');
model.sol('sol1').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol1').feature('e1').set('eigvfunscaleparam', '9.999999999999999E-6');
model.sol('sol1').feature('e1').set('control', 'eig');
model.sol('sol1').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol1').attach('std1');
model.sol('sol1').feature('e1').set('rtol', 1.0E-15);
model.sol('sol1').run('e1');

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 1, 0);
model.result('pg1').set('defaultPlotID', 'modeShape');
model.result('pg1').set('showlegends', false);
model.result('pg1').create('line1', 'Line');
model.result('pg1').feature('line1').set('expr', {'beam.disp'});
model.result('pg1').feature('line1').set('threshold', 'manual');
model.result('pg1').feature('line1').set('thresholdvalue', 0.2);
model.result('pg1').feature('line1').set('colortable', 'Rainbow');
model.result('pg1').feature('line1').set('colortabletrans', 'none');
model.result('pg1').feature('line1').set('colorscalemode', 'linear');
model.result('pg1').label('Mode Shape (beam)');
model.result('pg1').feature('line1').set('colortable', 'AuroraBorealis');
model.result('pg1').feature('line1').set('linetype', 'tube');
model.result('pg1').feature('line1').set('radiusexpr', 'beam.re');
model.result('pg1').feature('line1').set('tuberadiusscaleactive', true);
model.result('pg1').feature('line1').set('tuberadiusscale', 1);
model.result('pg1').feature('line1').set('tubeendcaps', false);
model.result('pg1').feature('line1').create('def', 'Deform');
model.result('pg1').feature('line1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg1').feature('line1').feature('def').set('descr', 'Displacement field');
model.result.evaluationGroup.create('std1EvgFrq', 'EvaluationGroup');
model.result.evaluationGroup('std1EvgFrq').set('defaultPlotID', 'eigenfrequenciesTable_beam');
model.result.evaluationGroup('std1EvgFrq').set('data', 'dset1');
model.result.evaluationGroup('std1EvgFrq').label('Eigenfrequencies (Free Vibration)');
model.result.evaluationGroup('std1EvgFrq').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('expr', '2*pi*freq', 0);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('unit', 'rad/s', 0);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('descr', 'Angular frequency', 0);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('expr', 'imag(freq)/abs(freq)', 1);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('unit', '1', 1);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('descr', 'Damping ratio', 1);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('expr', 'abs(freq)/imag(freq)/2', 2);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('unit', '1', 2);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('descr', 'Quality factor', 2);
model.result.evaluationGroup('std1EvgFrq').run;
model.result.evaluationGroup.create('std1mpf1', 'EvaluationGroup');
model.result.evaluationGroup('std1mpf1').set('data', 'dset1');
model.result.evaluationGroup('std1mpf1').label('Participation Factors (Free Vibration)');
model.result.evaluationGroup('std1mpf1').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfLnormX', 0);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 0);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, X-translation', 0);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfLnormY', 1);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 1);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Y-translation', 1);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfLnormZ', 2);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 2);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Z-translation', 2);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfRnormX', 3);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 3);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, X-rotation', 3);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfRnormY', 4);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 4);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Y-rotation', 4);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfRnormZ', 5);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 5);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Z-rotation', 5);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffLX', 6);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg', 6);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, X-translation', 6);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffLY', 7);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg', 7);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Y-translation', 7);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffLZ', 8);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg', 8);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Z-translation', 8);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffRX', 9);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg*m^2', 9);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, X-rotation', 9);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffRY', 10);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg*m^2', 10);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Y-rotation', 10);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffRZ', 11);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg*m^2', 11);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Z-rotation', 11);
model.result.evaluationGroup('std1mpf1').run;
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('line1').set('tuberadiusscale', 0.1);
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 1, 0);
model.result('pg2').set('defaultPlotID', 'orientation');
model.result('pg2').create('line1', 'Line');
model.result('pg2').feature('line1').set('expr', {'beam.re'});
model.result('pg2').feature('line1').set('threshold', 'manual');
model.result('pg2').feature('line1').set('thresholdvalue', 0.2);
model.result('pg2').feature('line1').set('colortable', 'Rainbow');
model.result('pg2').feature('line1').set('colortabletrans', 'none');
model.result('pg2').feature('line1').set('colorscalemode', 'linear');
model.result('pg2').feature('line1').set('linetype', 'tube');
model.result('pg2').feature('line1').set('radiusexpr', 'beam.re');
model.result('pg2').feature('line1').set('coloring', 'gradient');
model.result('pg2').feature('line1').set('topcolor', 'custom');
model.result('pg2').feature('line1').set('customtopcolor', [0.3921568691730499 0 0.3921568691730499]);
model.result('pg2').feature('line1').set('bottomcolor', 'custom');
model.result('pg2').feature('line1').set('custombottomcolor', [1 0.9019607901573181 1]);
model.result('pg2').feature('line1').set('tuberadiusscaleactive', true);
model.result('pg2').feature('line1').set('tuberadiusscale', 1);
model.result('pg2').feature('line1').set('tubeendcaps', false);
model.result('pg2').feature('line1').label('Size');
model.result('pg2').label('Beam Orientation (beam)');
model.result('pg2').set('titletype', 'manual');
model.result('pg2').set('title', 'Beam approximate radius and principal axes');
model.result('pg2').create('arws1', 'ArrowLine');
model.result('pg2').feature('arws1').label('Local Y Direction (Green)');
model.result('pg2').feature('arws1').set('expr', {'beam.beamsys.e_y1*sqrt(sqrt(beam.Izz)) ' 'beam.beamsys.e_y2*sqrt(sqrt(beam.Izz)) ' 'beam.beamsys.e_y3*sqrt(sqrt(beam.Izz)) '});
model.result('pg2').feature('arws1').set('color', 'green');
model.result('pg2').feature('arws1').set('placement', 'gausspoints');
model.result('pg2').feature('arws1').set('scale', 8);
model.result('pg2').create('arws2', 'ArrowLine');
model.result('pg2').feature('arws2').label('Local Z Direction (Blue)');
model.result('pg2').feature('arws2').set('expr', {'beam.beamsys.e_z1*sqrt(sqrt(beam.Iyy)) ' 'beam.beamsys.e_z2*sqrt(sqrt(beam.Iyy)) ' 'beam.beamsys.e_z3*sqrt(sqrt(beam.Iyy)) '});
model.result('pg2').feature('arws2').set('color', 'blue');
model.result('pg2').feature('arws2').set('placement', 'gausspoints');
model.result('pg2').feature('arws2').set('scale', 8);
model.result('pg2').label('Beam Orientation (beam)');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('line1').set('tuberadiusscale', 0.1);

model.physics('beam').create('el1', 'EdgeLoad', 1);
model.physics('beam').feature('el1').selection.all;
model.physics('beam').feature('el1').set('FeperLength', {'0' '0' 'F0'});
model.physics('beam').feature('el1').set('harmonicPerturbation', true);
model.physics('beam').feature('emm1').create('dmp1', 'Damping', 1);
model.physics('beam').feature('emm1').feature('dmp1').set('alpha_dM', 5.36);
model.physics('beam').feature('emm1').feature('dmp1').set('beta_dK', '7.46e-5');

model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').setTableData([4.26612044566661 0.1009818183635054; 5.0340221258866 0.08591029468232829; 5.80192380610659 0.07487593045716132; 6.56982548632658 0.06646309834628668; 7.3377271665465695 0.059848759197542796; 8.105628846766558 0.05452176237958726; 8.873530526986547 0.05014789401808079; 9.641432207206536 0.046499415455287754; 10.409333887426525 0.04341578960460765; 11.177235567646514 0.040780596441406504; 11.945137247866503 0.03850735251881339; 12.713038928086492 0.03653046971940268; 13.480940608306481 0.03479930405376979; 14.24884228852647 0.033274128799687164; 15.016743968746459 0.03192334315538289; 15.784645648966448 0.030721495664294714; 16.55254732918644 0.029647857820562673; 17.320449009406428 0.028685377109513785; 18.088350689626417 0.02781989672651387; 18.856252369846406 0.027039565952751518; 19.624154050066394 0.02633438896453362; 20.392055730286383 0.025695875585250556; 21.159957410506372 0.025116768083284412; 21.92785909072636 0.02459082537424782; 22.69576077094635 0.024112651031790777; 23.46366245116634 0.023677555070830934; 24.231564131386328 0.02328144201143722; 24.999465811606317 0.022920719572577936; 25.767367491826306 0.022592223692152323; 26.535269172046295 0.022293156566052002; 27.303170852266284 0.022021035143130765; 28.071072532486273 0.0217736480738876; 28.838974212706262 0.021549019537170706; 29.60687589292625 0.02134537869615527; 30.37477757314624 0.021161133787403263; 31.14267925336623 0.020994850043322594; 31.910580933586218 0.020845230802292607; 32.67848261380621 0.020711101282113904; 33.4463842940262 0.020591394588748257; 34.214285974246195 0.02048513960916836; 34.98218765446619 0.020391450498807834; 35.75008933468618 0.020309517523850625; 36.51799101490617 0.020238599058932515; 37.285892695126165 0.020178014573684944; 38.05379437534616 0.02012713846844177; 38.82169605556615 0.020085394641532396; 39.58959773578614 0.02005225168882964; 40.357499416006135 0.020027218651340738; 41.12540109622613 0.020009841239209313; 41.89330277644612 0.01999969847100022; 42.66120445666611 0.01999639967594167; 50.34022125886601 0.02027092651895036; 58.019238061065906 0.020949169307560064; 65.6982548632658 0.021889565307599005; 73.3772716654657 0.023009810603851016; 81.0562884676656 0.024258790133181867; 88.73530526986549 0.025603082508157623; 96.41432207206539 0.027019913863004723; 104.09333887426529 0.028493230489063114; 111.77235567646518 0.0300113903838694; 119.45137247866508 0.031565745202736493; 127.13038928086497 0.033149736133921824; 134.80940608306489 0.034758298778484936; 142.48842288526478 0.03638746046420308; 150.16743968746468 0.03803406111089905; 157.84645648966458 0.03969555557291664; 165.52547329186447 0.041369870999669836; 173.20449009406437 0.04305530213969136; 180.88350689626427 0.04475043331251777; 188.56252369846416 0.04645407944626793; 196.24154050066406 0.04816524095857254; 203.92055730286395 0.04988306883177064; 211.59957410506385 0.05160683729270042; 219.27859090726375 0.05333592223292317; 226.95760770946364 0.05506978400980387; 234.63662451166354 0.05680795362483429; 242.31564131386344 0.05855002153002131; 249.99465811606333 0.060295628497261784; 257.67367491826326 0.06204445812034564; 265.35269172046316 0.06379623061886201; 273.03170852266305 0.0655506976876963; 280.71072532486295 0.06730763819189838; 288.38974212706285 0.06906685454935309; 296.06875892926274 0.07082816967637794; 303.74777573146264 0.07259142439662915; 311.42679253366254 0.07435647523334749; 319.10580933586243 0.07612319252037089; 326.78482613806233 0.07789145877947942; 334.4638429402622 0.07966116732126927; 342.1428597424621 0.08143222103443767; 349.821876544662 0.08320453133452801; 357.5008933468619 0.0849780172481587; 365.1799101490618 0.0867526046127933; 372.8589269512617 0.08852822537539494; 380.5379437534616 0.09030481697599702; 388.2169605556615 0.09208232180443249; 395.8959773578614 0.0938606867202886; 403.5749941600613 0.09563986262766612; 411.2540109622612 0.0974198040975794; 418.9330277644611 0.0992004690318849; 426.612044566661 0.10098181836350544]);
model.result.table('tbl1').label('Damping Ratio Plot');
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').label('Damping Ratio Plot');
model.result('pg3').create('tblp11', 'Table');
model.result('pg3').feature('tblp11').set('markerpos', 'datapoints');
model.result('pg3').feature('tblp11').set('table', 'tbl1');
model.result('pg3').feature('tblp11').label('Damping 1');
model.result('pg3').set('xlabel', 'Frequency (Hz)');
model.result('pg3').set('ylabel', 'Damping ratio');
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').run;

model.study.create('std2');
model.study('std2').create('eig', 'Eigenfrequency');
model.study('std2').feature('eig').set('plotgroup', 'Default');
model.study('std2').feature('eig').set('chkeigregion', true);
model.study('std2').feature('eig').set('conrad', '1');
model.study('std2').feature('eig').set('conradynhm', '1');
model.study('std2').feature('eig').set('storefact', false);
model.study('std2').feature('eig').set('outputmap', {});
model.study('std2').feature('eig').set('ngenAUX', '1');
model.study('std2').feature('eig').set('goalngenAUX', '1');
model.study('std2').feature('eig').set('ngenAUX', '1');
model.study('std2').feature('eig').set('goalngenAUX', '1');
model.study('std2').feature('eig').setSolveFor('/physics/beam', true);
model.study('std2').create('frmod', 'Frequencymodal');
model.study('std2').feature('frmod').set('outputmap', {});
model.study('std2').feature('frmod').setSolveFor('/physics/beam', true);
model.study('std2').label('Harmonic Forced Vibration');
model.study('std2').setGenPlots(false);
model.study('std2').feature('frmod').set('plist', 'range(0,2,38) range(40,5e-2,45) range(46,2,60)');

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'eig');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'eig');
model.sol('sol2').create('e1', 'Eigenvalue');
model.sol('sol2').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol2').feature('e1').set('eigvfunscaleparam', '9.999999999999999E-6');
model.sol('sol2').feature('e1').set('control', 'eig');
model.sol('sol2').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol2').create('su1', 'StoreSolution');
model.sol('sol2').create('st2', 'StudyStep');
model.sol('sol2').feature('st2').set('study', 'std2');
model.sol('sol2').feature('st2').set('studystep', 'frmod');
model.sol('sol2').create('v2', 'Variables');
model.sol('sol2').feature('v2').set('notsolmethod', 'sol');
model.sol('sol2').feature('v2').set('notsol', 'sol2');
model.sol('sol2').feature('v2').set('control', 'frmod');
model.sol('sol2').create('mo1', 'Modal');
model.sol('sol2').feature('mo1').set('analysistype', 'frequency');
model.sol('sol2').feature('mo1').set('plist', 'range(0,2,38) range(40,5e-2,45) range(46,2,60)');
model.sol('sol2').feature('mo1').set('eigsol', 'sol2');
model.sol('sol2').feature('mo1').set('eigsoluse', 'su1');
model.sol('sol2').feature('mo1').set('control', 'frmod');
model.sol('sol2').feature('mo1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('v2').set('notsolnum', 'auto');
model.sol('sol2').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result.dataset.create('cpt1', 'CutPoint3D');
model.result.dataset('cpt1').set('data', 'dset2');
model.result.dataset('cpt1').set('pointx', 'L/2');
model.result.dataset('cpt1').set('pointy', 0);
model.result.dataset('cpt1').set('pointz', 0);
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Harmonic Peak Displacement');
model.result('pg4').set('data', 'cpt1');
model.result('pg4').set('titletype', 'label');
model.result('pg4').create('ptgr1', 'PointGraph');
model.result('pg4').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg4').feature('ptgr1').set('linewidth', 'preference');
model.result('pg4').feature('ptgr1').set('expr', 'beam.uAmpZ');
model.result('pg4').feature('ptgr1').set('unit', 'mm');
model.result('pg4').run;
model.result('pg4').run;
model.result.duplicate('pg5', 'pg4');
model.result('pg5').run;
model.result('pg5').label('Harmonic Peak Stress');
model.result('pg5').run;
model.result('pg5').feature('ptgr1').set('expr', 'abs(beam.sb1)');
model.result('pg5').feature('ptgr1').set('unit', 'MPa');
model.result('pg5').run;
model.result.numerical.create('max1', 'MaxLine');
model.result.numerical('max1').label('Harmonic Peak Displacement');
model.result.numerical('max1').set('data', 'dset2');
model.result.numerical('max1').setIndex('looplevelinput', 'manual', 0);
model.result.numerical('max1').setIndex('looplevel', [74], 0);
model.result.numerical('max1').selection.set([1]);
model.result.numerical('max1').setIndex('expr', 'beam.uAmpZ', 0);
model.result.numerical('max1').setIndex('unit', 'mm', 0);
model.result.table.create('tbl2', 'Table');
model.result.table('tbl2').comments('Harmonic Peak Displacement');
model.result.numerical('max1').set('table', 'tbl2');
model.result.numerical('max1').setResult;
model.result.numerical.duplicate('max2', 'max1');
model.result.numerical('max2').label('Harmonic Peak Stress');
model.result.numerical('max2').setIndex('expr', 'abs(beam.sb1)', 0);
model.result.numerical('max2').setIndex('unit', 'MPa', 0);
model.result.table.create('tbl3', 'Table');
model.result.table('tbl3').comments('Harmonic Peak Stress');
model.result.numerical('max2').set('table', 'tbl3');
model.result.numerical('max2').setResult;

model.func.create('int1', 'Interpolation');
model.func('int1').model('comp1');
model.func('int1').set('funcname', 'phase');
model.func('int1').setIndex('table', 20, 0, 0);
model.func('int1').setIndex('table', '-pi/2', 0, 1);
model.func('int1').setIndex('table', 60, 1, 0);
model.func('int1').setIndex('table', 'pi/2', 1, 1);
model.func('int1').set('interp', 'neighbor');
model.func('int1').setIndex('argunit', 'Hz', 0);
model.func('int1').setIndex('fununit', 'rad', 0);

model.physics('beam').create('el2', 'EdgeLoad', 1);
model.physics('beam').feature('el2').selection.set([1]);
model.physics('beam').feature('el2').set('FeperLength', {'0' '0' 'F0'});
model.physics('beam').feature('el2').create('ph1', 'Phase', 1);
model.physics('beam').feature('el2').feature('ph1').set('FPh', {'0' '0' 'phase(freq)'});

model.study.create('std3');
model.study('std3').create('freq', 'Frequency');
model.study('std3').feature('freq').setSolveFor('/physics/beam', true);
model.study('std3').feature('freq').set('plist', '20 60');
model.study('std3').feature('freq').set('useadvanceddisable', true);
model.study('std3').feature('freq').set('disabledphysics', {'beam/el1'});
model.study('std3').create('ftfft', 'FreqToTimeFFT');
model.study('std3').feature('ftfft').set('fftouttrange', 'range(0.0,1/(200*20),1/20)');
model.study('std3').feature('ftfft').set('fftscaling', 'discrete');
model.study('std3').feature('ftfft').set('useadvanceddisable', true);

model.sol.create('sol4');
model.sol('sol4').study('std3');
model.sol('sol4').create('st1', 'StudyStep');
model.sol('sol4').feature('st1').set('study', 'std3');
model.sol('sol4').feature('st1').set('studystep', 'freq');
model.sol('sol4').create('v1', 'Variables');
model.sol('sol4').feature('v1').set('control', 'freq');
model.sol('sol4').create('s1', 'Stationary');
model.sol('sol4').feature('s1').create('p1', 'Parametric');
model.sol('sol4').feature('s1').feature.remove('pDef');
model.sol('sol4').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol4').feature('s1').feature('p1').set('plistarr', {'20 60'});
model.sol('sol4').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol4').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol4').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol4').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol4').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol4').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol4').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol4').feature('s1').feature('p1').set('probes', {});
model.sol('sol4').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol4').feature('s1').set('linpmethod', 'sol');
model.sol('sol4').feature('s1').set('linpsol', 'zero');
model.sol('sol4').feature('s1').set('control', 'freq');
model.sol('sol4').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol4').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol4').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol4').feature('s1').feature.remove('fcDef');
model.sol('sol4').create('su1', 'StoreSolution');
model.sol('sol4').create('st2', 'StudyStep');
model.sol('sol4').feature('st2').set('study', 'std3');
model.sol('sol4').feature('st2').set('studystep', 'ftfft');
model.sol('sol4').create('v2', 'Variables');
model.sol('sol4').feature('v2').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol4').feature('v2').feature('comp1_u').set('scaleval', '1e-2*10.0');
model.sol('sol4').feature('v2').set('initmethod', 'sol');
model.sol('sol4').feature('v2').set('initsol', 'sol4');
model.sol('sol4').feature('v2').set('initsoluse', 'sol5');
model.sol('sol4').feature('v2').set('notsolmethod', 'sol');
model.sol('sol4').feature('v2').set('notsol', 'sol4');
model.sol('sol4').feature('v2').set('control', 'ftfft');
model.sol('sol4').create('fft1', 'FFT');
model.sol('sol4').feature('fft1').set('fftsteptypef', 'allfreqs');
model.sol('sol4').feature('fft1').set('fftextend', 'on');
model.sol('sol4').feature('fft1').set('ffttranstype', 'transifft');
model.sol('sol4').feature('fft1').set('fftbwalgtype', 'fastfft');
model.sol('sol4').feature('fft1').set('control', 'ftfft');
model.sol('sol4').feature('v2').set('notsolnum', 'auto');
model.sol('sol4').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol4').attach('std3');
model.sol('sol4').feature('fft1').set('control', 'user');

model.study('std3').label('Periodic Forced Vibration');
model.study('std3').setGenPlots(false);

model.sol('sol4').study('std3');
model.sol('sol5').copySolution('sol6');

model.study('std3').feature('ftfft').set('notlistsolnum', 1);
model.study('std3').feature('ftfft').set('notsolnum', 'auto');

model.result.dataset('dset5').set('solution', 'none');

model.sol('sol4').feature.remove('fft1');
model.sol('sol4').feature.remove('v2');
model.sol('sol4').feature.remove('st2');
model.sol('sol4').feature.remove('su1');
model.sol('sol4').feature.remove('s1');
model.sol('sol4').feature.remove('v1');
model.sol('sol4').feature.remove('st1');
model.sol('sol6').copySolution('sol5');
model.sol.remove('sol6');
model.sol('sol5').label('Solution Store 2');

model.result.dataset.remove('dset7');

model.sol('sol4').create('st1', 'StudyStep');
model.sol('sol4').feature('st1').set('study', 'std3');
model.sol('sol4').feature('st1').set('studystep', 'freq');
model.sol('sol4').create('v1', 'Variables');
model.sol('sol4').feature('v1').set('control', 'freq');
model.sol('sol4').create('s1', 'Stationary');
model.sol('sol4').feature('s1').create('p1', 'Parametric');
model.sol('sol4').feature('s1').feature.remove('pDef');
model.sol('sol4').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol4').feature('s1').feature('p1').set('plistarr', {'20 60'});
model.sol('sol4').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol4').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol4').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol4').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol4').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol4').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol4').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol4').feature('s1').feature('p1').set('probes', {});
model.sol('sol4').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol4').feature('s1').set('linpmethod', 'sol');
model.sol('sol4').feature('s1').set('linpsol', 'zero');
model.sol('sol4').feature('s1').set('control', 'freq');
model.sol('sol4').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol4').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol4').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol4').feature('s1').feature.remove('fcDef');
model.sol('sol4').create('su1', 'StoreSolution');
model.sol('sol4').feature('su1').set('sol', 'sol5');
model.sol('sol4').feature('su1').label('Solution Store 2');
model.sol('sol4').create('st2', 'StudyStep');
model.sol('sol4').feature('st2').set('study', 'std3');
model.sol('sol4').feature('st2').set('studystep', 'ftfft');

model.study('std3').feature('ftfft').set('fftinputsoluse', 'sol5');

model.sol('sol4').create('v2', 'Variables');
model.sol('sol4').feature('v2').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol4').feature('v2').feature('comp1_u').set('scaleval', '1e-2*10.0');
model.sol('sol4').feature('v2').set('initmethod', 'sol');
model.sol('sol4').feature('v2').set('initsol', 'sol4');
model.sol('sol4').feature('v2').set('initsoluse', 'sol5');
model.sol('sol4').feature('v2').set('notsolmethod', 'sol');
model.sol('sol4').feature('v2').set('notsol', 'sol4');
model.sol('sol4').feature('v2').set('control', 'ftfft');
model.sol('sol4').create('fft1', 'FFT');
model.sol('sol4').feature('fft1').set('fftsteptypef', 'allfreqs');
model.sol('sol4').feature('fft1').set('fftextend', 'on');
model.sol('sol4').feature('fft1').set('ffttranstype', 'transifft');
model.sol('sol4').feature('fft1').set('fftbwalgtype', 'fastfft');
model.sol('sol4').feature('fft1').set('control', 'ftfft');

model.result.dataset('dset5').set('solution', 'sol5');

model.sol('sol4').feature('v2').set('notsolnum', 'auto');
model.sol('sol4').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol4').attach('std3');
model.sol('sol4').runAll;

model.result.dataset.create('cpt2', 'CutPoint3D');
model.result.dataset('cpt2').set('data', 'dset4');
model.result.dataset('cpt2').set('pointx', 'L/2');
model.result.dataset('cpt2').set('pointy', 0);
model.result.dataset('cpt2').set('pointz', 0);
model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').run;
model.result('pg6').label('Periodic Peak Displacement');
model.result('pg6').set('data', 'cpt2');
model.result('pg6').set('titletype', 'label');
model.result('pg6').create('ptgr1', 'PointGraph');
model.result('pg6').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg6').feature('ptgr1').set('linewidth', 'preference');
model.result('pg6').feature('ptgr1').set('expr', 'w');
model.result('pg6').feature('ptgr1').set('unit', 'mm');
model.result('pg6').run;
model.result('pg6').run;
model.result.duplicate('pg7', 'pg6');
model.result('pg7').run;
model.result('pg7').label('Periodic Peak Stress');
model.result('pg7').run;
model.result('pg7').feature('ptgr1').set('expr', 'beam.sb1');
model.result('pg7').feature('ptgr1').set('unit', 'MPa');
model.result('pg7').run;
model.result.numerical.create('max3', 'MaxLine');
model.result.numerical('max3').label('Periodic Peak Displacement');
model.result.numerical('max3').set('data', 'dset4');
model.result.numerical('max3').selection.set([1]);
model.result.numerical('max3').setIndex('expr', 'abs(w)', 0);
model.result.numerical('max3').setIndex('unit', 'mm', 0);
model.result.numerical('max3').set('dataseries', 'maximum');
model.result.table.create('tbl4', 'Table');
model.result.table('tbl4').comments('Periodic Peak Displacement');
model.result.numerical('max3').set('table', 'tbl4');
model.result.numerical('max3').setResult;
model.result.numerical.duplicate('max4', 'max3');
model.result.numerical('max4').label('Periodic Peak Stress');
model.result.numerical('max4').setIndex('expr', 'abs(beam.sb1)', 0);
model.result.numerical('max4').setIndex('unit', 'MPa', 0);
model.result.table.create('tbl5', 'Table');
model.result.table('tbl5').comments('Periodic Peak Stress');
model.result.numerical('max4').set('table', 'tbl5');
model.result.numerical('max4').setResult;

model.physics('beam').create('el3', 'EdgeLoad', 1);
model.physics('beam').feature('el3').selection.all;
model.physics('beam').feature('el3').set('FeperLength', {'0' '0' 'F0'});

model.study.create('std4');
model.study('std4').create('time', 'Transient');
model.study('std4').feature('time').setSolveFor('/physics/beam', true);
model.study('std4').feature('time').set('tlist', 'range(0,1e-4,1.2e-2) range(1.3e-2,1e-3,1.2)');
model.study('std4').feature('time').set('useadvanceddisable', true);
model.study('std4').feature('time').set('disabledphysics', {'beam/el1' 'beam/el2'});
model.study('std4').label('Transient Forced Vibration');
model.study('std4').setGenPlots(false);

model.sol.create('sol6');
model.sol('sol6').study('std4');
model.sol('sol6').create('st1', 'StudyStep');
model.sol('sol6').feature('st1').set('study', 'std4');
model.sol('sol6').feature('st1').set('studystep', 'time');
model.sol('sol6').create('v1', 'Variables');
model.sol('sol6').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol6').feature('v1').feature('comp1_u').set('scaleval', '1e-2*10.0');
model.sol('sol6').feature('v1').set('control', 'time');
model.sol('sol6').create('t1', 'Time');
model.sol('sol6').feature('t1').set('tlist', 'range(0,1e-4,1.2e-2) range(1.3e-2,1e-3,1.2)');
model.sol('sol6').feature('t1').set('plot', 'off');
model.sol('sol6').feature('t1').set('plotgroup', 'pg1');
model.sol('sol6').feature('t1').set('plotfreq', 'tout');
model.sol('sol6').feature('t1').set('probesel', 'all');
model.sol('sol6').feature('t1').set('probes', {});
model.sol('sol6').feature('t1').set('probefreq', 'tsteps');
model.sol('sol6').feature('t1').set('rtol', 0.001);
model.sol('sol6').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol6').feature('t1').set('reacf', true);
model.sol('sol6').feature('t1').set('storeudot', true);
model.sol('sol6').feature('t1').set('endtimeinterpolation', true);
model.sol('sol6').feature('t1').set('timemethod', 'genalpha');
model.sol('sol6').feature('t1').set('control', 'time');
model.sol('sol6').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol6').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol6').feature('t1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol6').feature('t1').feature.remove('fcDef');
model.sol('sol6').attach('std4');
model.sol('sol6').feature('v1').feature('comp1_u').set('scaleval', '1e-4');
model.sol('sol6').feature('t1').set('tstepsgenalpha', 'intermediate');
model.sol('sol6').runAll;

model.result.dataset.create('cpt3', 'CutPoint3D');
model.result.dataset('cpt3').set('data', 'dset6');
model.result.dataset('cpt3').set('pointx', 'L/2');
model.result.dataset('cpt3').set('pointy', 0);
model.result.dataset('cpt3').set('pointz', 0);
model.result.create('pg8', 'PlotGroup1D');
model.result('pg8').run;
model.result('pg8').label('Transient Peak Displacement');
model.result('pg8').set('data', 'cpt3');
model.result('pg8').set('titletype', 'label');
model.result('pg8').set('xlabelactive', true);
model.result('pg8').set('xlabel', 'Time (s)');
model.result('pg8').set('ylabelactive', true);
model.result('pg8').set('ylabel', 'Displacement (mm)');
model.result('pg8').set('axislimits', true);
model.result('pg8').set('xmin', '-1e-2');
model.result('pg8').set('xmax', 0.5);
model.result('pg8').set('ymin', '-1e-2');
model.result('pg8').set('ymax', 1.1);
model.result('pg8').create('ptgr1', 'PointGraph');
model.result('pg8').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg8').feature('ptgr1').set('linewidth', 'preference');
model.result('pg8').feature('ptgr1').set('expr', 'w');
model.result('pg8').feature('ptgr1').set('unit', 'mm');
model.result('pg8').run;
model.result('pg8').run;
model.result.numerical.create('max5', 'MaxLine');
model.result.numerical('max5').label('Transient Forced Vibration - Max Displacement');
model.result.numerical('max5').set('data', 'dset6');
model.result.numerical('max5').setIndex('looplevelinput', 'manual', 0);
model.result.numerical('max5').setIndex('looplevel', [118], 0);
model.result.numerical('max5').selection.set([1]);
model.result.numerical('max5').setIndex('expr', 'w', 0);
model.result.numerical('max5').setIndex('unit', 'mm', 0);
model.result.numerical('max5').set('dataseries', 'maximum');
model.result.table.create('tbl6', 'Table');
model.result.table('tbl6').comments('Transient Forced Vibration - Max Displacement');
model.result.numerical('max5').set('table', 'tbl6');
model.result.numerical('max5').setResult;
model.result.numerical.duplicate('max6', 'max5');
model.result.numerical('max6').label('Transient Forced Vibration - Max Stress');
model.result.numerical('max6').setIndex('expr', 'abs(beam.sb1)', 0);
model.result.numerical('max6').setIndex('unit', 'MPa', 0);
model.result.table.create('tbl7', 'Table');
model.result.table('tbl7').comments('Transient Forced Vibration - Max Stress');
model.result.numerical('max6').set('table', 'tbl7');
model.result.numerical('max6').setResult;
model.result.numerical.duplicate('max7', 'max5');
model.result.numerical('max7').label('Transient Forced Vibration -  Static Displacement');
model.result.numerical('max7').setIndex('looplevelinput', 'interp', 0);
model.result.numerical('max7').setIndex('interp', 'range(1.1,1e-3,1.2)', 0);
model.result.numerical('max7').setIndex('expr', 'w', 0);
model.result.numerical('max7').setIndex('unit', 'mm', 0);
model.result.numerical('max7').set('dataseries', 'average');
model.result.table.create('tbl8', 'Table');
model.result.table('tbl8').comments('Transient Forced Vibration -  Static Displacement');
model.result.numerical('max7').set('table', 'tbl8');
model.result.numerical('max7').setResult;

model.study('std1').feature('eig').set('useadvanceddisable', true);
model.study('std1').feature('eig').set('disabledphysics', {'beam/emm1/dmp1'});
model.study('std2').feature('frmod').set('useadvanceddisable', true);
model.study('std2').feature('frmod').set('disabledphysics', {'beam/el2' 'beam/el3'});
model.study('std3').feature('freq').set('disabledphysics', {'beam/el1' 'beam/el3'});
model.study('std3').feature('ftfft').set('disabledphysics', {'beam/el3'});

model.result('pg7').run;

model.title('Vibration Analysis of a Deep Beam');

model.description('This example studies free and forced vibrations of a deep beam. The solution for eigenfrequency, frequency response, and transient analyses are computed using a Timoshenko beam. The results of these simulations are compared with analytical results.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;

model.label('vibrating_deep_beam.mph');

model.modelNode.label('Components');

out = model;
