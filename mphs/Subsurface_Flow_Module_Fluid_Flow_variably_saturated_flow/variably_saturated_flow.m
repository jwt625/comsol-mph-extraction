function out = model
%
% variably_saturated_flow.m
%
% Model exported on May 26 2025, 21:34 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Subsurface_Flow_Module/Fluid_Flow');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('dl', 'PorousMediaFlowRichards', 'geom1');
model.physics('dl').model('comp1');

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/dl', true);

model.geom('geom1').create('sq1', 'Square');
model.geom('geom1').feature('sq1').set('size', 2);
model.geom('geom1').feature('sq1').set('base', 'center');
model.geom('geom1').run('sq1');
model.geom('geom1').create('c1', 'Circle');
model.geom('geom1').feature('c1').set('r', 0.1);
model.geom('geom1').feature('c1').set('pos', [-0.5 0]);
model.geom('geom1').run('c1');
model.geom('geom1').create('arr1', 'Array');
model.geom('geom1').feature('arr1').selection('input').set({'c1'});
model.geom('geom1').feature('arr1').set('fullsize', [3 1]);
model.geom('geom1').feature('arr1').set('displ', [0.5 0]);
model.geom('geom1').run('arr1');
model.geom('geom1').create('dif1', 'Difference');
model.geom('geom1').feature('dif1').selection('input').set({'sq1'});
model.geom('geom1').feature('dif1').selection('input2').set({'arr1'});
model.geom('geom1').runPre('fin');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');

model.geom('geom1').run;

model.selection('sel1').label('Rod');
model.selection('sel1').geom(1);
model.selection('sel1').set([9]);
model.selection('sel1').set('groupcontang', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('rho', '1000[kg/m^3]', 'Water density');
model.param.set('poro', '0.43', 'Porosity');
model.param.set('theta_r', '0.045', 'Residual liquid volume fraction');
model.param.set('K', '8.25e-5[m/s]', 'Hydraulic conductivity');
model.param.set('chi_f', '4.4e-10[1/Pa]', 'Compressibility of fluid');
model.param.set('chi_p', '1e-8[1/Pa]', 'Compressibility of solid');
model.param.set('alpha', '14.5[1/m]', 'Constitutive relation constant');
model.param.set('n', '2.68', 'Constitutive relation constant');
model.param.set('l', '0.5', 'Constitutive relation constant');
model.param.set('Hp0', '-0.06[m]', 'Pressure head');
model.param('default').paramCase.create('case1');
model.param('default').paramCase('case1').label('Case 1: van Genuchten');
model.param('default').paramCase.create('case2');
model.param('default').paramCase('case2').label('Case 2: Brooks and Corey');
model.param('default').paramCase('case2').set('poro', '0.417');
model.param('default').paramCase('case2').set('theta_r', '0.02');
model.param('default').paramCase('case2').set('K', '5.8333e-5[m/s]');
model.param('default').paramCase('case2').set('alpha', '13.8[1/m]');
model.param('default').paramCase('case2').set('n', '0.592');
model.param('default').paramCase('case2').set('l', '1');
model.param('default').paramCase('case2').set('Hp0', '-0.2[m]');

model.physics('dl').feature('usporous1').feature('fluid1').set('fluidType', 'compressibleLinearized');
model.physics('dl').feature('usporous1').feature('fluid1').set('rhoref_mat', 'userdef');
model.physics('dl').feature('usporous1').feature('fluid1').set('rhoref', 'rho');
model.physics('dl').feature('usporous1').feature('fluid1').set('chif_mat', 'userdef');
model.physics('dl').feature('usporous1').feature('fluid1').set('chif', 'chi_f');
model.physics('dl').feature('usporous1').feature('pm1').set('epsilon_mat', 'userdef');
model.physics('dl').feature('usporous1').feature('pm1').set('epsilon', 'poro');
model.physics('dl').feature('usporous1').feature('pm1').set('chip', 'chi_p');
model.physics('dl').feature('usporous1').feature('pm1').set('permeabilityModelType', 'conductivity');
model.physics('dl').feature('usporous1').feature('pm1').set('Ks', {'K' '0' '0' '0' 'K' '0' '0' '0' 'K'});
model.physics('dl').feature('usporous1').feature('pm1').set('alpha', 'alpha');
model.physics('dl').feature('usporous1').feature('pm1').set('l', 'l');
model.physics('dl').feature('usporous1').feature('pm1').set('n', 'n');
model.physics('dl').feature('usporous1').feature('pm1').set('theta_r', 'theta_r');
model.physics('dl').feature('usporous1').label('Unsaturated Porous Medium (van Genuchten)');
model.physics('dl').feature.duplicate('usporous2', 'usporous1');
model.physics('dl').feature('usporous2').label('Unsaturated Porous Medium (Brooks and Corey)');
model.physics('dl').feature('usporous2').feature('pm1').set('retentionModel', 'BrooksAndCorey');
model.physics('dl').feature('init1').set('InitType', 'Hp');
model.physics('dl').feature('init1').set('Hp', 'Hp0');
model.physics('dl').create('ph1', 'PressureHead', 1);
model.physics('dl').feature('ph1').selection.set([2 3]);
model.physics('dl').feature('ph1').set('Hp0', 'Hp0');

model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').create('size1', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size1').selection.geom('geom1', 1);
model.mesh('mesh1').feature('ftri1').feature('size1').selection.set([5 6 7 8 9 10 11 12 13 14 15 16]);
model.mesh('mesh1').feature('ftri1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('ftri1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 0.025);
model.mesh('mesh1').run;

model.study('std1').setGenPlots(false);
model.study('std1').feature('time').set('tunit', 'min');
model.study('std1').feature('time').set('tlist', '0 1 5 10 15');
model.study('std1').feature('time').set('useadvanceddisable', true);
model.study('std1').feature('time').set('disabledphysics', {'dl/usporous2'});
model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').set('sweeptype', 'switch');
model.study('std1').feature('param').setIndex('switchname', 'default', 0);
model.study('std1').feature('param').setIndex('switchcase', 'all', 0);
model.study('std1').feature('param').setIndex('switchlistarr', 'range(1,1,2)', 0);
model.study('std1').feature('param').setIndex('switchname', 'default', 0);
model.study('std1').feature('param').setIndex('switchcase', 'all', 0);
model.study('std1').feature('param').setIndex('switchlistarr', 'range(1,1,2)', 0);
model.study('std1').feature('param').setIndex('switchcase', 'user', 0);
model.study('std1').feature('param').setIndex('switchlistarr', 1, 0);
model.study('std1').label('Study 1: van Genuchten');

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', '0 1 5 10 15');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.005);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('stabcntrl', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d1').label('Direct, pressure (dl)');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('t1').feature('i1').set('maxlinit', 50);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i1').label('AMG, pressure (dl)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {});
model.batch('p1').set('plistarr', {});
model.batch('p1').set('sweeptype', 'switch');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol.create('sol2');
model.sol('sol2').study('std1');
model.sol('sol2').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').run('compute');

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').run;
model.result('pg1').label('Soil Type 1');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', 'dl.Se');
model.result('pg1').run;
model.result('pg1').create('arws1', 'ArrowSurface');
model.result('pg1').run;
model.result('pg1').create('con1', 'Contour');
model.result('pg1').feature('con1').set('expr', 'dl.Hp');
model.result('pg1').feature('con1').set('coloring', 'uniform');
model.result('pg1').feature('con1').set('color', 'black');
model.result('pg1').feature('con1').set('colorlegend', false);
model.result('pg1').run;
model.result('pg1').run;

model.study.create('std2');
model.study('std2').create('time', 'Transient');
model.study('std2').feature('time').setSolveFor('/physics/dl', true);
model.study('std2').feature('time').set('tunit', 'min');
model.study('std2').feature('time').set('tlist', '0 1 5 10 15');
model.study('std2').create('param', 'Parametric');
model.study('std2').feature('param').set('sweeptype', 'switch');
model.study('std2').feature('param').setIndex('switchname', 'default', 0);
model.study('std2').feature('param').setIndex('switchcase', 'all', 0);
model.study('std2').feature('param').setIndex('switchlistarr', 'range(1,1,2)', 0);
model.study('std2').feature('param').setIndex('switchname', 'default', 0);
model.study('std2').feature('param').setIndex('switchcase', 'all', 0);
model.study('std2').feature('param').setIndex('switchlistarr', 'range(1,1,2)', 0);
model.study('std2').feature('param').setIndex('switchcase', 'user', 0);
model.study('std2').feature('param').setIndex('switchlistarr', 2, 0);
model.study('std2').label('Study 2: Brooks and Corey');
model.study('std2').setGenPlots(false);

model.sol.create('sol4');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol4').study('std2');
model.sol('sol4').create('st1', 'StudyStep');
model.sol('sol4').feature('st1').set('study', 'std2');
model.sol('sol4').feature('st1').set('studystep', 'time');
model.sol('sol4').create('v1', 'Variables');
model.sol('sol4').feature('v1').set('control', 'time');
model.sol('sol4').create('t1', 'Time');
model.sol('sol4').feature('t1').set('tlist', '0 1 5 10 15');
model.sol('sol4').feature('t1').set('plot', 'off');
model.sol('sol4').feature('t1').set('plotgroup', 'pg1');
model.sol('sol4').feature('t1').set('plotfreq', 'tout');
model.sol('sol4').feature('t1').set('probesel', 'all');
model.sol('sol4').feature('t1').set('probes', {});
model.sol('sol4').feature('t1').set('probefreq', 'tsteps');
model.sol('sol4').feature('t1').set('rtol', 0.005);
model.sol('sol4').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol4').feature('t1').set('reacf', true);
model.sol('sol4').feature('t1').set('storeudot', true);
model.sol('sol4').feature('t1').set('endtimeinterpolation', true);
model.sol('sol4').feature('t1').set('maxorder', 2);
model.sol('sol4').feature('t1').set('stabcntrl', true);
model.sol('sol4').feature('t1').set('control', 'time');
model.sol('sol4').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol4').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol4').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol4').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol4').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol4').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol4').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol4').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol4').feature('t1').create('d1', 'Direct');
model.sol('sol4').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('t1').feature('d1').label('Direct, pressure (dl)');
model.sol('sol4').feature('t1').create('i1', 'Iterative');
model.sol('sol4').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol4').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol4').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol4').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol4').feature('t1').feature('i1').set('maxlinit', 50);
model.sol('sol4').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol4').feature('t1').feature('i1').label('AMG, pressure (dl)');
model.sol('sol4').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', false);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol4').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol4').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol4').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol4').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol4').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol4').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol4').feature('t1').feature.remove('fcDef');
model.sol('sol4').attach('std2');

model.batch.create('p2', 'Parametric');
model.batch('p2').study('std2');
model.batch('p2').create('so1', 'Solutionseq');
model.batch('p2').feature('so1').set('seq', 'sol4');
model.batch('p2').feature('so1').set('store', 'on');
model.batch('p2').feature('so1').set('clear', 'on');
model.batch('p2').feature('so1').set('psol', 'none');
model.batch('p2').set('pname', {});
model.batch('p2').set('plistarr', {});
model.batch('p2').set('sweeptype', 'switch');
model.batch('p2').set('probesel', 'all');
model.batch('p2').set('probes', {});
model.batch('p2').set('plot', 'off');
model.batch('p2').set('err', 'on');
model.batch('p2').attach('std2');
model.batch('p2').set('control', 'param');

model.sol.create('sol5');
model.sol('sol5').study('std2');
model.sol('sol5').label('Parametric Solutions 2');

model.batch('p2').feature('so1').set('psol', 'sol5');
model.batch('p2').run('compute');

model.result('pg1').run;
model.result.duplicate('pg2', 'pg1');
model.result('pg2').run;
model.result('pg2').label('Soil Type 2');
model.result('pg2').set('data', 'dset3');
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('Effective Saturation');
model.result('pg3').create('lngr1', 'LineGraph');
model.result('pg3').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg3').feature('lngr1').set('linewidth', 'preference');
model.result('pg3').feature('lngr1').selection.named('sel1');
model.result('pg3').feature('lngr1').set('expr', 'dl.Se');
model.result('pg3').feature('lngr1').set('xdata', 'expr');
model.result('pg3').feature('lngr1').set('xdataexpr', 'atan2(y,x)');
model.result('pg3').feature('lngr1').set('xdataunit', [native2unicode(hex2dec({'00' 'b0'}), 'unicode') ]);
model.result('pg3').feature('lngr1').create('filt1', 'LineGraphFilter');
model.result('pg3').run;
model.result('pg3').feature('lngr1').feature('filt1').set('expr', 'abs(atan2(y,x))<pi');
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').feature.duplicate('lngr2', 'lngr1');
model.result('pg3').run;
model.result('pg3').feature('lngr2').set('data', 'dset3');
model.result('pg3').feature('lngr2').set('linestyle', 'dashed');
model.result('pg3').feature('lngr2').set('linecolor', 'cyclereset');
model.result('pg3').run;
model.result('pg3').feature('lngr1').set('legend', true);
model.result('pg3').run;
model.result('pg3').set('titletype', 'manual');
model.result('pg3').set('title', 'Effective Saturation, S<sub>e</sub> (1)');
model.result('pg3').set('legendpos', 'upperleft');
model.result('pg3').run;
model.result.numerical.create('av1', 'AvSurface');
model.result.numerical('av1').set('intvolume', true);
model.result.numerical('av1').selection.set([1]);
model.result.numerical('av1').setIndex('expr', 'dl.Se', 0);
model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').comments('Surface Average 1');
model.result.numerical('av1').set('table', 'tbl1');
model.result.numerical('av1').setResult;
model.result.numerical('av1').set('data', 'dset3');
model.result.numerical('av1').set('table', 'tbl1');
model.result.numerical('av1').appendResult;
model.result.numerical.create('av2', 'AvLine');
model.result.numerical('av2').set('intsurface', true);
model.result.numerical('av2').selection.named('sel1');
model.result.numerical('av2').setIndex('expr', 'dl.Se', 0);
model.result.table.create('tbl2', 'Table');
model.result.table('tbl2').comments('Line Average 2');
model.result.numerical('av2').set('table', 'tbl2');
model.result.numerical('av2').setResult;
model.result.numerical('av2').set('data', 'dset3');
model.result.numerical('av2').set('table', 'tbl2');
model.result.numerical('av2').appendResult;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').set('data', 'none');
model.result('pg4').create('tblp1', 'Table');
model.result('pg4').feature('tblp1').set('source', 'table');
model.result('pg4').feature('tblp1').set('table', 'tbl2');
model.result('pg4').feature('tblp1').set('linewidth', 'preference');
model.result('pg4').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg4').run;
model.result('pg4').feature('tblp1').set('legend', true);
model.result('pg4').feature('tblp1').set('legendmethod', 'manual');
model.result('pg4').feature('tblp1').setIndex('legends', 'S<sub>e</sub> at rod, soil type 1', 0);
model.result('pg4').feature('tblp1').setIndex('legends', 'S<sub>e</sub> at rod, soil type 2', 1);
model.result('pg4').feature.duplicate('tblp2', 'tblp1');
model.result('pg4').run;
model.result('pg4').feature('tblp2').set('table', 'tbl1');
model.result('pg4').feature('tblp2').set('linestyle', 'dashed');
model.result('pg4').feature('tblp2').set('linecolor', 'cyclereset');
model.result('pg4').feature('tblp2').setIndex('legends', 'Overall S<sub>e</sub>, soil type 1', 0);
model.result('pg4').feature('tblp2').setIndex('legends', 'Overall S<sub>e</sub>, soil type 2', 1);
model.result('pg4').run;
model.result('pg4').create('lngr1', 'LineGraph');
model.result('pg4').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg4').feature('lngr1').set('linewidth', 'preference');
model.result('pg4').feature('lngr1').set('data', 'dset1');
model.result('pg4').feature('lngr1').selection.named('sel1');
model.result('pg4').feature('lngr1').set('expr', 'dl.Se');
model.result('pg4').feature('lngr1').set('xdata', 'expr');
model.result('pg4').feature('lngr1').set('xdataexpr', 't');
model.result('pg4').feature('lngr1').set('xdataunit', 'min');
model.result('pg4').feature('lngr1').set('linecolor', 'blue');
model.result('pg4').feature('lngr1').set('linewidth', 2);
model.result('pg4').feature('lngr1').set('linemarker', 'circle');
model.result('pg4').feature('lngr1').set('markerpos', 'interp');
model.result('pg4').feature.duplicate('lngr2', 'lngr1');
model.result('pg4').run;
model.result('pg4').feature('lngr2').set('data', 'dset3');
model.result('pg4').feature('lngr2').set('linecolor', 'green');
model.result('pg4').feature('lngr2').set('linemarker', 'square');
model.result('pg4').run;
model.result('pg4').label('Average effective saturation');
model.result('pg4').set('titletype', 'manual');
model.result('pg4').set('title', 'Average effective saturation, S<sub>e</sub>');
model.result('pg4').set('ylabelactive', true);
model.result('pg4').set('ylabel', 'S<sub>e</sub>(1)');
model.result('pg4').set('legendpos', 'upperleft');
model.result.dataset.create('extr1', 'Extrude2D');
model.result.dataset('extr1').set('data', 'dset2');
model.result.dataset('extr1').set('planemap', 'xz');
model.result.dataset.duplicate('extr2', 'extr1');
model.result.dataset('extr2').set('data', 'dset4');
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').run;
model.result('pg5').label('3D Plot: Soil Type 1');
model.result('pg5').create('slc1', 'Slice');
model.result('pg5').feature('slc1').set('expr', 'dl.Se');
model.result('pg5').feature('slc1').set('descr', 'Effective saturation');
model.result('pg5').feature('slc1').set('quickplane', 'zx');
model.result('pg5').feature('slc1').set('quickynumber', 1);
model.result('pg5').feature('slc1').set('titletype', 'none');
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').set('titletype', 'custom');
model.result('pg5').set('suffixintitle', 'Effective Saturation (Slices) and Flow Velocity (Streamlines)');
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').feature.duplicate('slc2', 'slc1');
model.result('pg5').run;
model.result('pg5').feature('slc2').set('quickplane', 'xy');
model.result('pg5').feature('slc2').set('quickznumber', 1);
model.result('pg5').feature('slc2').set('interactive', true);
model.result('pg5').feature('slc2').set('shift', -0.1);
model.result('pg5').feature('slc2').set('inheritplot', 'slc1');
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').create('str1', 'Streamline');
model.result('pg5').feature('str1').set('expr', {'dl.u' '0' 'dl.v'});
model.result('pg5').feature('str1').set('titletype', 'none');
model.result('pg5').feature('str1').set('startmethod', 'coord');
model.result('pg5').feature('str1').set('xcoord', 'range(-1,0.1,1)');
model.result('pg5').feature('str1').set('ycoord', -0.5);
model.result('pg5').feature('str1').set('zcoord', 1);
model.result('pg5').feature('str1').set('pointtype', 'arrow');
model.result('pg5').run;
model.result('pg5').run;
model.result.duplicate('pg6', 'pg5');
model.result('pg6').run;
model.result('pg6').label('3D Plot: Soil Type 2');
model.result('pg6').set('data', 'extr2');
model.result('pg6').run;

model.title('Variably Saturated Flow');

model.description('This Richards'' Equation model compares variably saturated flow around impermeable features in two soil blocks. A contribution from hydrologic researchers, this example demonstrates automated interfaces for the van Genuchten and the Brooks and Corey retention and permeability functions.');

model.label('variably_saturated_flow.mph');

model.modelNode.label('Components');

out = model;
