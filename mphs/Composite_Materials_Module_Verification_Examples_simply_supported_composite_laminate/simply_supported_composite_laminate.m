function out = model
%
% simply_supported_composite_laminate.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Composite_Materials_Module/Verification_Examples');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('lshell', 'LayeredShell', 'geom1');
model.physics('lshell').model('comp1');
model.physics.create('shell', 'Shell', 'geom1');
model.physics('shell').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/lshell', true);
model.study('std1').feature('stat').setSolveFor('/physics/shell', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('a', '200[mm]', 'Side length');
model.param.set('th', 'a/4', 'Laminate thickness');
model.param.set('thl', 'th/3', 'Lamina thickness');
model.param.set('E1', '25e6[psi]', 'Lamina Young''s modulus, 11 direction');
model.param.set('E2', '1e6[psi]', 'Lamina Young''s modulus, 22 direction');
model.param.set('E3', 'E2', 'Lamina Young''s modulus, 33 direction');
model.param.set('G12', '0.5e6[psi]', 'Lamina shear modulus, 12 direction');
model.param.set('G23', '0.2e6[psi]', 'Lamina shear modulus, 23 direction');
model.param.set('G13', 'G12', 'Lamina shear modulus, 13 direction');
model.param.set('nu12', '0.25', 'Lamina Poisson''s ratio, 12 direction');
model.param.set('nu23', 'nu12', 'Lamina Poisson''s ratio, 23 direction');
model.param.set('nu13', 'nu12', 'Lamina Poisson''s ratio, 13 direction');
model.param.set('q0', '1[N/m^2]', 'Transverse load amplitude');

model.variable.create('var1');
model.variable('var1').model('comp1');

model.geom('geom1').run;

% To import content from file, use:
% model.variable('var1').loadFile('FILENAME');
model.variable('var1').set('sdl', 'q0*sin(pi*X/a)*sin(pi*Y/a)', 'Sinusoidal distributed transverse load');
model.variable('var1').set('SXX_lw', 'lshell.SXX/q0*(th/a)^2', 'In-plane normal stress (SXX), normalized');
model.variable('var1').set('SZZ_lw', 'lshell.SZZ/q0', 'Transverse normal stress (SZZ), normalized');
model.variable('var1').set('SYZ_lw', 'lshell.SYZ/q0*th/a', 'Transverse shear stress (SYZ), normalized');
model.variable('var1').set('SXZ_lw', 'lshell.SXZ/q0*th/a', 'Transverse shear stress (SXZ), normalized');
model.variable('var1').set('SXX_esl', 'shell.SXX/q0*(th/a)^2', 'In-plane normal stress (SXX), normalized');
model.variable('var1').set('SZZ_esl', 'shell.SZZ/q0', 'Transverse normal stress (SZZ), normalized');
model.variable('var1').set('SYZ_esl', 'shell.SYZ/q0*th/a', 'Transverse shear stress (SYZ), normalized');
model.variable('var1').set('SXZ_esl', 'shell.SXZ/q0*th/a', 'Transverse shear stress (SXZ), normalized');
model.variable('var1').set('A', '1.105*a/2', 'Cut point coordinate');
model.variable('var1').set('B', '1.894*a/2', 'Cut point coordinate');

model.geom('geom1').create('wp1', 'WorkPlane');
model.geom('geom1').feature('wp1').set('unite', true);
model.geom('geom1').feature('wp1').geom.create('sq1', 'Square');
model.geom('geom1').feature('wp1').geom.feature('sq1').set('size', 'a/2');
model.geom('geom1').feature('wp1').geom.feature('sq1').set('pos', {'a/2' 'a/2'});
model.geom('geom1').run('fin');

model.view('view1').set('showgrid', false);

model.coordSystem('sys1').set('mastercoordsystcomp', '1');

model.material.create('mat1', 'Common', '');
model.material.create('lmat1', 'LayeredMaterial', '');
model.material('lmat1').label('Layered Material: [0/90/0]');
model.material('lmat1').setIndex('thickness', 'thl', 0);
model.material('lmat1').setIndex('layername', 'Layer 2', 1);
model.material('lmat1').setIndex('link', 'mat1', 1);
model.material('lmat1').setIndex('rotation', '0.0', 1);
model.material('lmat1').setIndex('thickness', 'thl', 1);
model.material('lmat1').setIndex('meshPoints', 2, 1);
model.material('lmat1').setIndex('tag', 'lmat1_2', 1);
model.material('lmat1').setIndex('layername', 'Layer 2', 1);
model.material('lmat1').setIndex('link', 'mat1', 1);
model.material('lmat1').setIndex('rotation', '0.0', 1);
model.material('lmat1').setIndex('thickness', 'thl', 1);
model.material('lmat1').setIndex('meshPoints', 2, 1);
model.material('lmat1').setIndex('tag', 'lmat1_2', 1);
model.material('lmat1').setIndex('layername', 'Layer 3', 2);
model.material('lmat1').setIndex('link', 'mat1', 2);
model.material('lmat1').setIndex('rotation', '0.0', 2);
model.material('lmat1').setIndex('thickness', 'thl', 2);
model.material('lmat1').setIndex('meshPoints', 2, 2);
model.material('lmat1').setIndex('tag', 'lmat1_3', 2);
model.material('lmat1').setIndex('layername', 'Layer 3', 2);
model.material('lmat1').setIndex('link', 'mat1', 2);
model.material('lmat1').setIndex('rotation', '0.0', 2);
model.material('lmat1').setIndex('thickness', 'thl', 2);
model.material('lmat1').setIndex('meshPoints', 2, 2);
model.material('lmat1').setIndex('tag', 'lmat1_3', 2);
model.material('lmat1').setIndex('rotation', 90, 1);
model.material('lmat1').setIndex('rotation', 0, 2);
model.material('lmat1').set('widthRatio', 0.6);
model.material.create('llmat1', 'LayeredMaterialLink', 'comp1');
model.material('mat1').propertyGroup.create('Orthotropic', 'Orthotropic');
model.material('mat1').propertyGroup('Orthotropic').set('Evector', {'E1' 'E2' 'E3'});
model.material('mat1').propertyGroup('Orthotropic').set('nuvector', {'nu12' 'nu23' 'nu13'});
model.material('mat1').propertyGroup('Orthotropic').set('Gvector', {'G12' 'G23' 'G13'});
model.material('mat1').propertyGroup('def').set('density', {'1'});

model.physics('lshell').prop('LayerSelection').set('bndType', 'allShell');
model.physics('lshell').prop('ShapeProperty').set('order_displacement', '23s');
model.physics('lshell').create('disp1', 'Displacement', 1);
model.physics('lshell').feature('disp1').selection.set([3]);
model.physics('lshell').feature('disp1').setIndex('Direction', 'prescribed', 0);
model.physics('lshell').feature('disp1').setIndex('Direction', 'prescribed', 2);
model.physics('lshell').feature.duplicate('disp2', 'disp1');
model.physics('lshell').feature('disp2').selection.set([4]);
model.physics('lshell').feature('disp2').setIndex('Direction', 'free', 0);
model.physics('lshell').feature('disp2').setIndex('Direction', 'prescribed', 1);
model.physics('lshell').create('sym1', 'Symmetry', 1);
model.physics('lshell').feature('sym1').selection.set([1 2]);
model.physics('lshell').create('fl1', 'FaceLoad', 2);
model.physics('lshell').feature('fl1').set('applyTo', 'top');
model.physics('lshell').feature('fl1').selection.set([1]);
model.physics('lshell').feature('fl1').set('FperArea', {'0' '0' 'sdl'});
model.physics('shell').create('llem1', 'LayeredElastic', 2);
model.physics('shell').feature('llem1').selection.set([1]);
model.physics('shell').feature('llem1').set('SolidModel', 'Orthotropic');
model.physics('shell').feature('llem1').set('ShearCorrectionFactor', 'BasedOn3DElasticity');
model.physics('shell').create('ssp1', 'SimplySupported', 1);
model.physics('shell').feature('ssp1').selection.set([3 4]);
model.physics('shell').feature('ssp1').set('PerpendicularEdge', false);
model.physics('shell').create('sym1', 'SymmetrySolid1', 1);
model.physics('shell').feature('sym1').selection.set([1 2]);
model.physics('shell').create('fl1', 'FaceLoad', 2);
model.physics('shell').feature('fl1').selection.set([1]);
model.physics('shell').feature('fl1').set('Ff', {'0' '0' 'sdl'});

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.set([1]);
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.all;
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 2);
model.mesh('mesh1').run;

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_ar').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_ar').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_ar').set('scaleval', '0.01');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.dataset.create('dset1lshelllshl', 'LayeredMaterial');
model.result.dataset('dset1lshelllshl').set('data', 'dset1');
model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'dset1lshelllshl');
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (lshell)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').set('showlegends', true);
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'lshell.misesGp'});
model.result('pg1').feature('surf1').set('threshold', 'manual');
model.result('pg1').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg1').feature('surf1').set('colortable', 'Rainbow');
model.result('pg1').feature('surf1').set('colortabletrans', 'none');
model.result('pg1').feature('surf1').set('colorscalemode', 'linear');
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg1').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg1').feature('surf1').feature('def').set('descr', 'Displacement field (material and geometry frames)');
model.result.dataset.create('dset1shelllshl', 'LayeredMaterial');
model.result.dataset('dset1shelllshl').set('data', 'dset1');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'dset1shelllshl');
model.result('pg2').set('defaultPlotID', 'stress');
model.result('pg2').label('Stress (shell)');
model.result('pg2').set('showlegends', true);
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'shell.misesGp'});
model.result('pg2').feature('surf1').set('threshold', 'manual');
model.result('pg2').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg2').feature('surf1').set('colortable', 'Rainbow');
model.result('pg2').feature('surf1').set('colortabletrans', 'none');
model.result('pg2').feature('surf1').set('colorscalemode', 'linear');
model.result('pg2').feature('surf1').set('descr', 'von Mises stress');
model.result('pg2').feature('surf1').set('colortable', 'Prism');
model.result('pg2').feature('surf1').create('def', 'Deform');
model.result('pg2').feature('surf1').feature('def').set('expr', {'shell.u' 'shell.v' 'shell.w'});
model.result('pg2').feature('surf1').set('inheritplot', 'none');
model.result('pg2').set('data', 'dset1shelllshl');
model.result('pg1').run;
model.result.dataset.create('mir1', 'Mirror3D');
model.result.dataset('mir1').set('data', 'dset1lshelllshl');
model.result.dataset('mir1').set('quickx', 'a/2');
model.result.dataset.duplicate('mir2', 'mir1');
model.result.dataset('mir2').set('data', 'mir1');
model.result.dataset('mir2').set('quickplane', 'zx');
model.result.dataset('mir2').set('quicky', 'a/2');
model.result.dataset.create('cpt1', 'CutPoint3D');
model.result.dataset('cpt1').label('Cut Point 3D: (A, A)');
model.result.dataset('cpt1').set('pointx', 'A');
model.result.dataset('cpt1').set('pointy', 'A');
model.result.dataset('cpt1').set('pointz', 0);
model.result.dataset.duplicate('cpt2', 'cpt1');
model.result.dataset('cpt2').label('Cut Point 3D: (A, B)');
model.result.dataset('cpt2').set('pointy', 'B');
model.result.dataset.duplicate('cpt3', 'cpt2');
model.result.dataset('cpt3').label('Cut Point 3D: (B, A)');
model.result.dataset('cpt3').set('pointx', 'B');
model.result.dataset('cpt3').set('pointy', 'A');
model.result.dataset('cpt1').set('pointx', 'A A B');
model.result.dataset('cpt1').set('pointy', 'A B A');

model.view('view1').set('showgrid', true);

model.result.dataset('cpt1').set('pointx', 'A');
model.result.dataset('cpt1').set('pointy', 'A');
model.result('pg1').run;
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').run;
model.result('pg3').label('Stress, Slice (lshell)');
model.result('pg3').set('data', 'mir2');
model.result('pg3').set('edges', false);
model.result('pg3').create('slc1', 'Slice');
model.result('pg3').feature('slc1').label('Slice (yz-planes)');
model.result('pg3').feature('slc1').set('expr', 'lshell.mises');
model.result('pg3').feature('slc1').set('quickxnumber', 3);
model.result('pg3').feature('slc1').set('colortable', 'RainbowLight');
model.result('pg3').feature('slc1').create('def1', 'Deform');
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').feature.duplicate('slc2', 'slc1');
model.result('pg3').run;
model.result('pg3').feature('slc2').label('Slice (zx-planes)');
model.result('pg3').feature('slc2').set('titletype', 'none');
model.result('pg3').feature('slc2').set('colorlegend', false);
model.result('pg3').feature('slc2').set('quickplane', 'zx');
model.result('pg3').feature('slc2').set('quickynumber', 3);
model.result('pg3').run;
model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').label('Table: SXX');
model.result.table('tbl1').importData('simply_supported_composite_laminate_stress_xx.txt');
model.result.table.create('tbl2', 'Table');
model.result.table('tbl2').label('Table: SZZ');
model.result.table('tbl2').importData('simply_supported_composite_laminate_stress_zz.txt');
model.result.table.create('tbl3', 'Table');
model.result.table('tbl3').label('Table: SYZ');
model.result.table('tbl3').importData('simply_supported_composite_laminate_stress_yz.txt');
model.result.table.create('tbl4', 'Table');
model.result.table('tbl4').label('Table: SXZ');
model.result.table('tbl4').importData('simply_supported_composite_laminate_stress_xz.txt');
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('In-Plane Normal Stress (SXX)');
model.result('pg4').set('xlabelactive', true);
model.result('pg4').set('xlabel', 'In-plane normal stress (SXX), normalized');
model.result('pg4').set('ylabelactive', true);
model.result('pg4').set('ylabel', 'Thickness coordinate, normalized');
model.result('pg4').set('legendpos', 'upperleft');
model.result('pg4').create('thr1', 'ThroughThickness');
model.result('pg4').feature('thr1').set('markerpos', 'datapoints');
model.result('pg4').feature('thr1').set('linewidth', 'preference');
model.result('pg4').feature('thr1').set('data', 'cpt1');
model.result('pg4').feature('thr1').set('expr', 'SXX_lw');
model.result('pg4').feature('thr1').set('descr', 'In-plane normal stress (SXX), normalized');
model.result('pg4').feature('thr1').set('ydata', 'expr');
model.result('pg4').feature('thr1').set('ydataexpr', 'lshell.xd_rel');
model.result('pg4').feature('thr1').set('includeinterfaces', 'all');
model.result('pg4').feature('thr1').set('legend', true);
model.result('pg4').feature('thr1').set('legendmethod', 'manual');
model.result('pg4').feature('thr1').setIndex('legends', 'Layerwise Theory', 0);
model.result('pg4').run;
model.result('pg4').feature.duplicate('thr2', 'thr1');
model.result('pg4').run;
model.result('pg4').feature('thr2').set('expr', 'SXX_esl');
model.result('pg4').feature('thr2').set('descr', 'In-plane normal stress (SXX), normalized');
model.result('pg4').feature('thr2').set('titletype', 'none');
model.result('pg4').feature('thr2').set('ydataexpr', 'shell.xd_rel');
model.result('pg4').feature('thr2').set('includeinterfaces', false);
model.result('pg4').feature('thr2').set('linestyle', 'dashed');
model.result('pg4').feature('thr2').setIndex('legends', 'ESL Theory', 0);
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').create('tblp1', 'Table');
model.result('pg4').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg4').feature('tblp1').set('linewidth', 'preference');
model.result('pg4').feature('tblp1').set('linestyle', 'none');
model.result('pg4').feature('tblp1').set('linecolor', 'red');
model.result('pg4').feature('tblp1').set('linemarker', 'circle');
model.result('pg4').feature('tblp1').set('legend', true);
model.result('pg4').feature('tblp1').set('legendmethod', 'manual');
model.result('pg4').feature('tblp1').setIndex('legends', 'Reference (Exact 3D Elasticity)', 0);
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').create('tlan1', 'TableAnnotation');
model.result('pg4').feature('tlan1').set('source', 'localtable');
model.result('pg4').feature('tlan1').setIndex('localtablematrix', 0.6, 0, 0);
model.result('pg4').feature('tlan1').setIndex('localtablematrix', 0.17, 0, 1);
model.result('pg4').feature('tlan1').setIndex('localtablematrix', '\[0^\circ \,\,\textrm{Ply}\]', 0, 2);
model.result('pg4').feature('tlan1').setIndex('localtablematrix', 0.6, 1, 0);
model.result('pg4').feature('tlan1').setIndex('localtablematrix', 0.5, 1, 1);
model.result('pg4').feature('tlan1').setIndex('localtablematrix', '\[90^\circ \,\,\textrm{Ply}\]', 1, 2);
model.result('pg4').feature('tlan1').setIndex('localtablematrix', 0.6, 2, 0);
model.result('pg4').feature('tlan1').setIndex('localtablematrix', 0.83, 2, 1);
model.result('pg4').feature('tlan1').setIndex('localtablematrix', '\[0^\circ \,\,\textrm{Ply}\]', 2, 2);
model.result('pg4').feature('tlan1').set('latexmarkup', true);
model.result('pg4').feature('tlan1').set('showpoint', false);
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').run;
model.result.duplicate('pg5', 'pg4');
model.result('pg5').run;
model.result('pg5').label('Transverse Normal Stress (SZZ)');
model.result('pg5').set('xlabel', 'Transverse normal stress (SZZ), normalized');
model.result('pg5').run;
model.result('pg5').feature('thr1').set('expr', 'SZZ_lw');
model.result('pg5').feature('thr1').set('descr', 'Transverse normal stress (SZZ), normalized');
model.result('pg5').run;
model.result('pg5').feature.remove('thr2');
model.result('pg5').run;
model.result('pg5').feature('tblp1').set('table', 'tbl2');
model.result('pg5').run;
model.result('pg5').run;
model.result('pg4').run;
model.result.duplicate('pg6', 'pg4');
model.result('pg6').run;
model.result('pg6').label('Transverse Shear Stress (SYZ)');
model.result('pg6').set('xlabel', 'Transverse shear stress (SYZ), normalized');
model.result('pg6').run;
model.result('pg6').feature('thr1').set('data', 'cpt2');
model.result('pg6').feature('thr1').set('expr', 'SYZ_lw');
model.result('pg6').feature('thr1').set('descr', 'Transverse shear stress (SYZ), normalized');
model.result('pg6').run;
model.result('pg6').feature('thr2').set('data', 'cpt2');
model.result('pg6').feature('thr2').set('expr', 'SYZ_esl');
model.result('pg6').feature('thr2').set('descr', 'Transverse shear stress (SYZ), normalized');
model.result('pg6').run;
model.result('pg6').feature('tblp1').set('table', 'tbl3');
model.result('pg6').run;
model.result('pg6').feature('tlan1').setIndex('localtablematrix', -0.02, 0, 0);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', -0.02, 1, 0);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', -0.02, 2, 0);
model.result('pg6').run;
model.result('pg6').run;
model.result.duplicate('pg7', 'pg6');
model.result('pg7').run;
model.result('pg7').label('Transverse Shear Stress (SXZ)');
model.result('pg7').set('xlabel', 'Transverse shear stress (SXZ), normalized');
model.result('pg7').set('legendpos', 'center');
model.result('pg7').run;
model.result('pg7').feature('thr1').set('data', 'cpt3');
model.result('pg7').feature('thr1').set('expr', 'SXZ_lw');
model.result('pg7').feature('thr1').set('descr', 'Transverse shear stress (SXZ), normalized');
model.result('pg7').feature('thr1').set('includeinterfaces', false);
model.result('pg7').run;
model.result('pg7').feature('thr2').set('data', 'cpt3');
model.result('pg7').feature('thr2').set('expr', 'SXZ_esl');
model.result('pg7').feature('thr2').set('descr', 'Transverse shear stress (SXZ), normalized');
model.result('pg7').feature('thr2').set('includeinterfaces', 'all');
model.result('pg7').run;
model.result('pg7').feature('tblp1').set('table', 'tbl4');
model.result('pg7').run;
model.result('pg7').run;
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').set('data', 'dset1');
model.result('pg8').set('defaultPlotID', 'thicknessOrientation');
model.result('pg8').label('Thickness and Orientation (lshell)');
model.result('pg8').set('titletype', 'label');
model.result('pg8').set('showlegendsunit', true);
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').feature('surf1').set('expr', {'lshell.d'});
model.result('pg8').feature('surf1').set('threshold', 'manual');
model.result('pg8').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg8').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg8').feature('surf1').set('colortabletrans', 'reverse');
model.result('pg8').feature('surf1').set('colorscalemode', 'linear');
model.result('pg8').feature('surf1').label('Thickness');
model.result('pg8').create('syss1', 'CoordSysSurface');
model.result('pg8').feature('syss1').set('mode', 'matrix');
model.result('pg8').feature('syss1').set('expr', 'lshell.dsdX');
model.result('pg8').label('Thickness and Orientation (lshell)');
model.result('pg8').run;

model.view('view1').set('showgrid', true);

model.result('pg3').run;

model.title('Bending of a Simply Supported Composite Laminate');

model.description(['This example demonstrates the bending analysis of a simply supported composite laminate under sinusoidal distributed transverse load. The composite laminate is thick, with a thickness to side length ratio of 1/4. The laminate has three layers in a cross-ply layup. The model is solved using both the Layerwise (LW) theory and the Equivalent Single Layer (ESL) theory.' newline  newline 'This is a verification example where the results computed from both theories are compared to the exact 3D elasticity results as given in the reference. The through-thickness variation of the in-plane normal stress, the transverse normal stress, and the transverse shear stresses in each layer is compared to the reference results.']);

model.label('simply_supported_composite_laminate.mph');

model.modelNode.label('Components');

out = model;
