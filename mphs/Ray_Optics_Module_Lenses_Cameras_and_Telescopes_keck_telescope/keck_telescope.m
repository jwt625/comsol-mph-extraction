function out = model
%
% keck_telescope.m
%
% Model exported on May 26 2025, 21:32 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Ray_Optics_Module/Lenses_Cameras_and_Telescopes');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('gop', 'GeometricalOptics', 'geom1');
model.physics('gop').model('comp1');

model.study.create('std1');
model.study('std1').create('rtrac', 'RayTracing');
model.study('std1').feature('rtrac').setSolveFor('/physics/gop', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('nix', '0.0', 'Global optical axis, x-component');
model.param.set('niy', '0.0', 'Global optical axis, y-component');
model.param.set('niz', '-1.0', 'Global optical axis, z-component');
model.param.set('lam_vac', '550[nm]', 'Vacuum wavelength');
model.param.set('theta_x1', '0.0[arcmin]', 'Field angle 1, x-component');
model.param.set('theta_y1', '0.0[arcmin]', 'Field angle 1, y-component');
model.param.set('theta_x2', '2.5[arcmin]', 'Field angle 2, x-component');
model.param.set('theta_y2', '0.0[arcmin]', 'Field angle 2, y-component');
model.param.set('theta_x3', '5.0[arcmin]', 'Field angle 3, x-component');
model.param.set('theta_y3', '0.0[arcmin]', 'Field angle 3, y-component');
model.param.set('N_ring', '18', 'Number of hexapolar rings');
model.param.set('P_nom', '10.949[m]', 'Nominal entrance pupil diameter');
model.param.set('R_nom', '0.995*P_nom/2', 'Nominal entrance pupil radius (scaled)');
model.param.set('F_nom', '15.0', 'Nominal focal ratio');
model.param.set('f_nom', 'F_nom*P_nom', 'Nominal focal length');
model.param.set('R_prim', '-35.00000[m]', 'Mirror radius of curvature');
model.param.set('k_prim', '-1.0037963', 'Conic constant');
model.param.set('Tc_prim', '75.0[mm]', 'Mirror thickness');
model.param.set('d0_prim', '1.79[m]', 'Mirror segment diameter');
model.param.set('mtype', '1', 'Mirror off axis type (standalone)');
model.param.set('nside', '6', 'Number of polygon sides');
model.param.set('r1', '1.55885[m]', 'Mirror 1 radial coordinate');
model.param.set('rho1', '0', 'Mirror 1 polar angle');
model.param.set('phi1', '30[deg]', 'Mirror 1 rotation angle');
model.param.set('r2', '2.70000[m]', 'Mirror 2 radial coordinate');
model.param.set('rho2', '30[deg]', 'Mirror 2 polar angle');
model.param.set('phi2', '0', 'Mirror 2 rotation angle');
model.param.set('r3', '3.11769[m]', 'Mirror 3 radial coordinate');
model.param.set('rho3', '0', 'Mirror 3 polar angle');
model.param.set('phi3', '30[deg]', 'Mirror 3 rotation angle');
model.param.set('rho45', 'atan(sqrt(3)/5)', 'Mirrors 4 and 5 polar angles (absolute)');
model.param.set('r4', '4.12432[m]', 'Mirror 4 radial coordinate');
model.param.set('rho4', 'rho45', 'Mirror 4 polar angle');
model.param.set('phi4', 'rho45-30[deg]', 'Mirror 4 rotation angle');
model.param.set('r5', '4.12432[m]', 'Mirror 5 radial coordinate');
model.param.set('rho5', '-rho45', 'Mirror 5 polar angle');
model.param.set('phi5', '30[deg]-rho45', 'Mirror 5 rotation angle');
model.param.set('r6', '4.67654[m]', 'Mirror 6 radial coordinate');
model.param.set('rho6', '0', 'Mirror 6 polar angle');
model.param.set('phi6', '30[deg]', 'Mirror 6 rotation angle');
model.param.set('R_sec', '4.849338[m]', 'Secondary mirror radius of curvature');
model.param.set('k_sec', '-1.6430812', 'Secondary mirror conic constant');
model.param.set('Tc_sec', '150.0[mm]', 'Secondary mirror thickness');
model.param.set('d0_sec', '1.429[m]', 'Secondary mirror diameter');
model.param.set('Z_sec', '-15.35821[m]', 'Secondary mirror z-position (relative to primary vertex)');
model.param.set('d0_ter', '1.04[m]', 'Tertiary mirror minor axis diameter');
model.param.set('theta_ter', '45.0[deg]', 'Tertiary mirror fold angle');
model.param.set('Z_ter', '-4.0[m]', 'Tertiary mirror z-position (relative to primary vertex)');
model.param.set('d_img', '0.873[m]', 'Image surface diameter');
model.param.set('C_img', '0.471[1/m]', 'Image surface curvature');
model.param.set('Z_img', '-7.0[m]', 'Image surface z-position (relative to tertiary exit plane)');
model.param.set('vz', '1', 'Ray direction vector, z-component');
model.param.set('vx1', 'tan(theta_x1)', 'Ray direction vector, x-component');
model.param.set('vy1', 'tan(theta_y1)', 'Ray direction vector, y-component');
model.param.set('vx2', 'tan(theta_x2)', 'Ray direction vector, x-component');
model.param.set('vy2', 'tan(theta_y2)', 'Ray direction vector, y-component');
model.param.set('vx3', 'tan(theta_x3)', 'Ray direction vector, x-component');
model.param.set('vy3', 'tan(theta_y3)', 'Ray direction vector, y-component');
model.param.set('dz', '16.0[m]', 'Ray launch z-coordinate');
model.param.set('dx1', 'dz*tan(theta_x1)', 'Ray launch, field 1, x-coordinate');
model.param.set('dy1', 'dz*tan(theta_y1)', 'Ray launch, field 1, y-coordinate');
model.param.set('dx2', 'dz*tan(theta_x2)', 'Ray launch, field 2, x-coordinate');
model.param.set('dy2', 'dz*tan(theta_y2)', 'Ray launch, field 2, y-coordinate');
model.param.set('dx3', 'dz*tan(theta_x3)', 'Ray launch, field 3, x-coordinate');
model.param.set('dy3', 'dz*tan(theta_y3)', 'Ray launch, field 3, y-coordinate');
model.param.set('theta_Airy', '1.22*lam_vac/P_nom', 'Airy disc angular radius');
model.param.set('r_Airy', 'f_nom*theta_Airy', 'Airy disc radius');

model.geom.load({'part1'}, 'Ray_Optics_Module/3D/Mirrors/conic_polygonal_mirror_off_axis_3d.mph', {'part1'});
model.geom('geom1').create('pi1', 'PartInstance');
model.geom('geom1').feature('pi1').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi1').set('part', 'part1');
model.geom('geom1').feature('pi1').label('Primary Mirror 1');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'R', 'R_prim');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'k', 'k_prim');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'Tc', 'Tc_prim');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'd0', 'd0_prim');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'd_clear', 0);
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'dx', 'r1');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'nix', '0.0');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'niy', '0.0');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'niz', '-1.0');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'nxx', '0.0');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'nxy', '1.0');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'nxz', '0.0');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'n_side', 'nside');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'phi_rot', 'phi1');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'mtype', 'mtype');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'show_vertex', 0);
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'n_extra_r', 0);
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'n_extra_a', 0);
model.geom('geom1').feature('pi1').set('rot', 'rho1');
model.geom('geom1').selection.create('csel1', 'CumulativeSelection');
model.geom('geom1').selection('csel1').label('Mirrors');
model.geom('geom1').selection.create('csel2', 'CumulativeSelection');
model.geom('geom1').selection('csel2').label('Obstructions');
model.geom('geom1').feature('pi1').setEntry('selcontributetobnd', 'pi1_sel2', 'none');
model.geom('geom1').feature('pi1').setEntry('selcontributetobnd', 'pi1_sel3', 'csel1');
model.geom('geom1').feature('pi1').setEntry('selcontributetobnd', 'pi1_sel4', 'csel2');
model.geom('geom1').feature('pi1').setEntry('selcontributetobnd', 'pi1_sel5', 'csel2');
model.geom('geom1').feature('pi1').setEntry('selcontributetobnd', 'pi1_sel6', 'csel2');
model.geom('geom1').feature.duplicate('pi2', 'pi1');
model.geom('geom1').feature('pi1').set('selcontributetoobj', {});
model.geom('geom1').feature('pi1').set('selkeepobj', {});
model.geom('geom1').feature('pi1').set('selcontributetopnt', {'none'});
model.geom('geom1').feature('pi1').set('selkeeppnt', {'off'});
model.geom('geom1').feature('pi1').set('selshowpnt', {'on'});
model.geom('geom1').feature('pi1').set('selcontributetoedg', {});
model.geom('geom1').feature('pi1').set('selkeepedg', {});
model.geom('geom1').feature('pi1').set('selshowedg', {});
model.geom('geom1').feature('pi1').set('selcontributetobnd', {'none' 'csel1' 'csel2' 'csel2' 'csel2'});
model.geom('geom1').feature('pi1').set('selkeepbnd', {'off' 'off' 'off' 'off' 'off'});
model.geom('geom1').feature('pi1').set('selshowbnd', {'on' 'on' 'on' 'on' 'on'});
model.geom('geom1').feature('pi1').set('selcontributetodom', {'none'});
model.geom('geom1').feature('pi1').set('selkeepdom', {'off'});
model.geom('geom1').feature('pi1').set('selshowdom', {'on'});
model.geom('geom1').feature('pi2').label('Primary Mirror 2');
model.geom('geom1').feature('pi2').setEntry('inputexpr', 'dx', 'r2');
model.geom('geom1').feature('pi2').setEntry('inputexpr', 'phi_rot', 'phi2');
model.geom('geom1').feature('pi2').set('rot', 'rho2');
model.geom('geom1').feature.duplicate('pi3', 'pi2');
model.geom('geom1').feature('pi2').set('selcontributetoobj', {});
model.geom('geom1').feature('pi2').set('selkeepobj', {});
model.geom('geom1').feature('pi2').set('selcontributetopnt', {'none'});
model.geom('geom1').feature('pi2').set('selkeeppnt', {'off'});
model.geom('geom1').feature('pi2').set('selshowpnt', {'on'});
model.geom('geom1').feature('pi2').set('selcontributetoedg', {});
model.geom('geom1').feature('pi2').set('selkeepedg', {});
model.geom('geom1').feature('pi2').set('selshowedg', {});
model.geom('geom1').feature('pi2').set('selcontributetobnd', {'none' 'csel1' 'csel2' 'csel2' 'csel2'});
model.geom('geom1').feature('pi2').set('selkeepbnd', {'off' 'off' 'off' 'off' 'off'});
model.geom('geom1').feature('pi2').set('selshowbnd', {'on' 'on' 'on' 'on' 'on'});
model.geom('geom1').feature('pi2').set('selcontributetodom', {'none'});
model.geom('geom1').feature('pi2').set('selkeepdom', {'off'});
model.geom('geom1').feature('pi2').set('selshowdom', {'on'});
model.geom('geom1').feature('pi3').label('Primary Mirror 3');
model.geom('geom1').feature('pi3').setEntry('inputexpr', 'dx', 'r3');
model.geom('geom1').feature('pi3').setEntry('inputexpr', 'phi_rot', 'phi3');
model.geom('geom1').feature('pi3').set('rot', 'rho3');
model.geom('geom1').feature.duplicate('pi4', 'pi3');
model.geom('geom1').feature('pi3').set('selcontributetoobj', {});
model.geom('geom1').feature('pi3').set('selkeepobj', {});
model.geom('geom1').feature('pi3').set('selcontributetopnt', {'none'});
model.geom('geom1').feature('pi3').set('selkeeppnt', {'off'});
model.geom('geom1').feature('pi3').set('selshowpnt', {'on'});
model.geom('geom1').feature('pi3').set('selcontributetoedg', {});
model.geom('geom1').feature('pi3').set('selkeepedg', {});
model.geom('geom1').feature('pi3').set('selshowedg', {});
model.geom('geom1').feature('pi3').set('selcontributetobnd', {'none' 'csel1' 'csel2' 'csel2' 'csel2'});
model.geom('geom1').feature('pi3').set('selkeepbnd', {'off' 'off' 'off' 'off' 'off'});
model.geom('geom1').feature('pi3').set('selshowbnd', {'on' 'on' 'on' 'on' 'on'});
model.geom('geom1').feature('pi3').set('selcontributetodom', {'none'});
model.geom('geom1').feature('pi3').set('selkeepdom', {'off'});
model.geom('geom1').feature('pi3').set('selshowdom', {'on'});
model.geom('geom1').feature('pi4').label('Primary Mirror 4');
model.geom('geom1').feature('pi4').setEntry('inputexpr', 'dx', 'r4');
model.geom('geom1').feature('pi4').setEntry('inputexpr', 'phi_rot', 'phi4');
model.geom('geom1').feature('pi4').set('rot', 'rho4');
model.geom('geom1').feature.duplicate('pi5', 'pi4');
model.geom('geom1').feature('pi4').set('selcontributetoobj', {});
model.geom('geom1').feature('pi4').set('selkeepobj', {});
model.geom('geom1').feature('pi4').set('selcontributetopnt', {'none'});
model.geom('geom1').feature('pi4').set('selkeeppnt', {'off'});
model.geom('geom1').feature('pi4').set('selshowpnt', {'on'});
model.geom('geom1').feature('pi4').set('selcontributetoedg', {});
model.geom('geom1').feature('pi4').set('selkeepedg', {});
model.geom('geom1').feature('pi4').set('selshowedg', {});
model.geom('geom1').feature('pi4').set('selcontributetobnd', {'none' 'csel1' 'csel2' 'csel2' 'csel2'});
model.geom('geom1').feature('pi4').set('selkeepbnd', {'off' 'off' 'off' 'off' 'off'});
model.geom('geom1').feature('pi4').set('selshowbnd', {'on' 'on' 'on' 'on' 'on'});
model.geom('geom1').feature('pi4').set('selcontributetodom', {'none'});
model.geom('geom1').feature('pi4').set('selkeepdom', {'off'});
model.geom('geom1').feature('pi4').set('selshowdom', {'on'});
model.geom('geom1').feature('pi5').label('Primary Mirror 5');
model.geom('geom1').feature('pi5').setEntry('inputexpr', 'dx', 'r5');
model.geom('geom1').feature('pi5').setEntry('inputexpr', 'phi_rot', 'phi5');
model.geom('geom1').feature('pi5').set('rot', 'rho5');
model.geom('geom1').feature.duplicate('pi6', 'pi5');
model.geom('geom1').feature('pi5').set('selcontributetoobj', {});
model.geom('geom1').feature('pi5').set('selkeepobj', {});
model.geom('geom1').feature('pi5').set('selcontributetopnt', {'none'});
model.geom('geom1').feature('pi5').set('selkeeppnt', {'off'});
model.geom('geom1').feature('pi5').set('selshowpnt', {'on'});
model.geom('geom1').feature('pi5').set('selcontributetoedg', {});
model.geom('geom1').feature('pi5').set('selkeepedg', {});
model.geom('geom1').feature('pi5').set('selshowedg', {});
model.geom('geom1').feature('pi5').set('selcontributetobnd', {'none' 'csel1' 'csel2' 'csel2' 'csel2'});
model.geom('geom1').feature('pi5').set('selkeepbnd', {'off' 'off' 'off' 'off' 'off'});
model.geom('geom1').feature('pi5').set('selshowbnd', {'on' 'on' 'on' 'on' 'on'});
model.geom('geom1').feature('pi5').set('selcontributetodom', {'none'});
model.geom('geom1').feature('pi5').set('selkeepdom', {'off'});
model.geom('geom1').feature('pi5').set('selshowdom', {'on'});
model.geom('geom1').feature('pi6').label('Primary Mirror 6');
model.geom('geom1').feature('pi6').setEntry('inputexpr', 'dx', 'r6');
model.geom('geom1').feature('pi6').setEntry('inputexpr', 'phi_rot', 'phi6');
model.geom('geom1').feature('pi6').set('rot', 'rho6');
model.geom('geom1').run('pi6');
model.geom('geom1').create('rot1', 'Rotate');
model.geom('geom1').feature('rot1').selection('input').set({'pi1' 'pi2' 'pi3' 'pi4' 'pi5' 'pi6'});
model.geom('geom1').feature('rot1').set('rot', 'range(0,60,300)');
model.geom.load({'part2'}, 'Ray_Optics_Module/3D/Mirrors/conic_mirror_on_axis_3d.mph', {'part1'});
model.geom('geom1').run('rot1');
model.geom('geom1').create('pi7', 'PartInstance');
model.geom('geom1').feature('pi7').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi7').set('part', 'part2');
model.geom('geom1').feature('pi7').label('Secondary Mirror');
model.geom('geom1').feature('pi7').setEntry('inputexpr', 'R', 'R_sec');
model.geom('geom1').feature('pi7').setEntry('inputexpr', 'k', 'k_sec');
model.geom('geom1').feature('pi7').setEntry('inputexpr', 'Tc', 'Tc_sec');
model.geom('geom1').feature('pi7').setEntry('inputexpr', 'd0', 'd0_sec');
model.geom('geom1').feature('pi7').setEntry('inputexpr', 'd1', 0);
model.geom('geom1').feature('pi7').setEntry('inputexpr', 'd_clear', 0);
model.geom('geom1').feature('pi7').setEntry('inputexpr', 'd_hole', 0);
model.geom('geom1').feature('pi7').setEntry('inputexpr', 'nix', '0.0');
model.geom('geom1').feature('pi7').setEntry('inputexpr', 'niy', '0.0');
model.geom('geom1').feature('pi7').setEntry('inputexpr', 'niz', '-1.0');
model.geom('geom1').feature('pi7').setEntry('inputexpr', 'n_extra_r', 0);
model.geom('geom1').feature('pi7').setEntry('inputexpr', 'n_extra_a', 30);
model.geom('geom1').feature('pi7').set('workplanesrc', 'pi1');
model.geom('geom1').feature('pi7').set('workplane', 'wp1');
model.geom('geom1').feature('pi7').set('displ', {'0' '0' 'Z_sec'});
model.geom('geom1').feature('pi7').setEntry('selcontributetobnd', 'pi7_sel2', 'none');
model.geom('geom1').feature('pi7').setEntry('selkeepbnd', 'pi7_cylsel1', true);
model.geom('geom1').feature('pi7').setEntry('selcontributetobnd', 'pi7_cylsel1', 'csel1');
model.geom('geom1').feature('pi7').setEntry('selcontributetobnd', 'pi7_adjsel1', 'csel2');
model.geom('geom1').feature('pi7').setEntry('selcontributetobnd', 'pi7_cylsel2', 'csel2');
model.geom('geom1').feature('pi7').setEntry('selcontributetobnd', 'pi7_comsel2', 'csel2');
model.geom.load({'part3'}, 'Ray_Optics_Module/3D/Mirrors/elliptical_planar_mirror_3d.mph', {'part1'});
model.geom('geom1').run('pi7');
model.geom('geom1').create('pi8', 'PartInstance');
model.geom('geom1').feature('pi8').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi8').set('part', 'part3');
model.geom('geom1').feature('pi8').label('Tertiary Mirror');
model.geom('geom1').feature('pi8').setEntry('inputexpr', 'Tc', '75.0[mm]');
model.geom('geom1').feature('pi8').setEntry('inputexpr', 'd0', 'd0_ter');
model.geom('geom1').feature('pi8').setEntry('inputexpr', 'theta', '45.0[deg]');
model.geom('geom1').feature('pi8').setEntry('inputexpr', 'dx', 0);
model.geom('geom1').feature('pi8').setEntry('inputexpr', 'nix', '0.0');
model.geom('geom1').feature('pi8').setEntry('inputexpr', 'niy', '0.0');
model.geom('geom1').feature('pi8').setEntry('inputexpr', 'niz', '1.0');
model.geom('geom1').feature('pi8').setEntry('inputexpr', 'nxx', '1.0');
model.geom('geom1').feature('pi8').setEntry('inputexpr', 'nxy', '0.0');
model.geom('geom1').feature('pi8').setEntry('inputexpr', 'nxz', '0.0');
model.geom('geom1').feature('pi8').set('workplanesrc', 'pi1');
model.geom('geom1').feature('pi8').set('workplane', 'wp1');
model.geom('geom1').feature('pi8').set('displ', {'0' '0' 'Z_ter'});
model.geom('geom1').feature('pi8').setEntry('selcontributetobnd', 'pi8_sel2', 'none');
model.geom('geom1').feature('pi8').setEntry('selkeepbnd', 'pi8_cylsel1', true);
model.geom('geom1').feature('pi8').setEntry('selcontributetobnd', 'pi8_cylsel1', 'csel1');
model.geom('geom1').feature('pi8').setEntry('selcontributetobnd', 'pi8_adjsel1', 'csel2');
model.geom('geom1').feature('pi8').setEntry('selcontributetobnd', 'pi8_comsel1', 'csel2');
model.geom('geom1').run('pi8');
model.geom('geom1').create('ps1', 'ParametricSurface');
model.geom('geom1').feature('ps1').label('Image Surface');
model.geom('geom1').feature('ps1').set('parmin1', '-d_img/2');
model.geom('geom1').feature('ps1').set('parmax1', 'd_img/2');
model.geom('geom1').feature('ps1').set('parmin2', '-d_img/2');
model.geom('geom1').feature('ps1').set('parmax2', 'd_img/2');
model.geom('geom1').feature('ps1').set('coord', {'s1' 's2' 'C_img*(s1^2 + s2^2)/(1 + sqrt(1 - C_img^2*(s1^2 + s2^2)))*1[m]'});
model.geom('geom1').feature('ps1').set('workplanesrc', 'pi8');
model.geom('geom1').feature('ps1').set('workplane', 'wp4');
model.geom('geom1').feature('ps1').set('pos', {'0' '0' 'Z_img'});
model.geom('geom1').feature('ps1').set('selresult', true);
model.geom('geom1').run('fin');

model.view('view1').camera.set('projection', 'orthographic');

model.physics('gop').selection.set([]);
model.physics('gop').prop('MaximumSecondary').setIndex('MaximumSecondary', 0, 0);
model.physics('gop').prop('CountReflections').setIndex('CountReflections', 1, 0);
model.physics('gop').create('mir1', 'Mirror', 2);
model.physics('gop').feature('mir1').label('Mirrors');
model.physics('gop').feature('mir1').selection.named('geom1_csel1_bnd');
model.physics('gop').create('wall1', 'Wall', 2);
model.physics('gop').feature('wall1').label('Obstructions');
model.physics('gop').feature('wall1').selection.named('geom1_csel2_bnd');
model.physics('gop').feature('wall1').set('WallCondition', 'Disappear');
model.physics('gop').create('wall2', 'Wall', 2);
model.physics('gop').feature('wall2').label('Image');
model.physics('gop').feature('wall2').selection.named('geom1_ps1_bnd');
model.physics('gop').create('relg1', 'ReleaseGrid', -1);
model.physics('gop').feature('relg1').set('GridType', 'Hexapolar');
model.physics('gop').feature('relg1').set('qcc', {'-dx1' '-dy1' 'dz'});
model.physics('gop').feature('relg1').set('rcc', [0 0 1]);
model.physics('gop').feature('relg1').set('Rc', 'R_nom');
model.physics('gop').feature('relg1').setIndex('Ncr', 'N_ring', 0);
model.physics('gop').feature('relg1').set('L0', {'vx1' 'vy1' '-vz'});
model.physics('gop').feature.duplicate('relg2', 'relg1');
model.physics('gop').feature('relg2').set('qcc', {'-dx2' '-dy2' 'dz'});
model.physics('gop').feature('relg2').set('L0', {'vx2' 'vy2' '-vz'});
model.physics('gop').feature.duplicate('relg3', 'relg2');
model.physics('gop').feature('relg3').set('qcc', {'-dx3' '-dy3' 'dz'});
model.physics('gop').feature('relg3').set('L0', {'vx3' 'vy3' '-vz'});
model.physics('gop').create('rt1', 'RayTermination', -1);
model.physics('gop').feature('rt1').set('SpatialExtentsOfRayPropagation', 'BoundingBoxFromGeometry');

model.mesh('mesh1').automatic(false);
model.mesh('mesh1').create('size1', 'Size');
model.mesh('mesh1').feature.move('size1', 1);
model.mesh('mesh1').feature('size1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('size1').selection.set([1]);
model.mesh('mesh1').feature('size1').set('hauto', 2);
model.mesh('mesh1').run;

model.study('std1').feature('rtrac').set('timestepspec', 'specifylength');
model.study('std1').feature('rtrac').set('llist', '0 60');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'rtrac');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'rtrac');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.01,1)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 1.0E-5);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('reacf', false);
model.sol('sol1').feature('t1').set('storeudot', false);
model.sol('sol1').feature('t1').set('tstepsgenalpha', 'strict');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('timemethod', 'genalpha');
model.sol('sol1').feature('t1').set('estrat', 'exclude');
model.sol('sol1').feature('t1').set('control', 'rtrac');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 0.1);
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').create('ja1', 'Jacobi');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 0.1);
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.dataset.create('ray1', 'Ray');
model.result.dataset('ray1').set('solution', 'sol1');
model.result.dataset('ray1').set('posdof', {'comp1.qx' 'comp1.qy' 'comp1.qz'});
model.result.dataset('ray1').set('geom', 'geom1');
model.result.dataset('ray1').set('rgeom', 'pgeom_gop');
model.result.dataset('ray1').set('rgeomspec', 'fromphysics');
model.result.dataset('ray1').set('physicsinterface', 'gop');
model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'ray1');
model.result('pg1').setIndex('looplevel', 2, 0);
model.result('pg1').label('Ray Trajectories (gop)');
model.result('pg1').create('rtrj1', 'RayTrajectories');
model.result('pg1').feature('rtrj1').set('linetype', 'line');
model.result('pg1').feature('rtrj1').create('col1', 'Color');
model.result('pg1').feature('rtrj1').feature('col1').set('expr', 't');
model.result('pg1').feature('rtrj1').create('filt1', 'RayTrajectoriesFilter');
model.result('pg1').run;
model.result('pg1').label('Ray Diagram');
model.result('pg1').set('showlegendsunit', true);
model.result('pg1').run;
model.result('pg1').feature('rtrj1').feature('col1').set('expr', 'at(''last'',gop.rrel)');
model.result('pg1').feature('rtrj1').feature('col1').set('unit', [native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']);
model.result('pg1').run;
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', 'x^2+y^2');
model.result('pg1').feature('surf1').set('coloring', 'gradient');
model.result('pg1').feature('surf1').set('colorlegend', false);
model.result('pg1').feature('surf1').set('colortabletrans', 'reverse');
model.result('pg1').feature('surf1').create('sel1', 'Selection');
model.result('pg1').feature('surf1').feature('sel1').selection.named('geom1_csel1_bnd');
model.result('pg1').run;
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').run;
model.result('pg2').label('Spot Diagram');
model.result('pg2').set('showlegendsunit', true);
model.result('pg2').create('spot1', 'SpotDiagram');
model.result('pg2').feature('spot1').set('transverse', 'userdefined');
model.result('pg2').feature('spot1').set('transverseexpr', [0 1 0]);
model.result('pg2').feature('spot1').set('layout', 'rectangular');
model.result('pg2').feature('spot1').set('columns', 1);
model.result('pg2').feature('spot1').set('paddingvert', 0);
model.result('pg2').feature('spot1').set('spotcoordsactive', true);
model.result('pg2').feature('spot1').set('spotcoordssystem', 'global');
model.result('pg2').feature('spot1').set('spotcoordsprecision', 7);
model.result('pg2').feature('spot1').set('circleactive', true);
model.result('pg2').feature('spot1').set('circleradiusexpr', 'r_Airy');
model.result('pg2').feature('spot1').set('fitannotationstospot', true);
model.result('pg2').feature('spot1').create('col1', 'Color');
model.result('pg2').run;
model.result('pg2').feature('spot1').feature('col1').set('expr', 'at(0,gop.rrel)');
model.result('pg2').run;

model.title('Keck Telescope');

model.description(['The Keck Telescope is a 10' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'meter diameter telescope with a Ritchey' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Chr' native2unicode(hex2dec({'00' 'e9'}), 'unicode') 'tien optical design. It is noted for being one of the first large optical telescopes to utilize a lightweight segmented primary mirror. This tutorial demonstrates how to use built-in polygonal mirrors from the Ray Optics Module Part Library to construct a model of the Keck Telescope segmented primary mirror.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;

model.label('keck_telescope.mph');

model.modelNode.label('Components');

out = model;
