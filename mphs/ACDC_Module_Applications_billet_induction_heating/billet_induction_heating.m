function out = model
%
% billet_induction_heating.m
%
% Model exported on May 26 2025, 21:24 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/ACDC_Module/Applications');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('mf', 'InductionCurrents', 'geom1');
model.physics('mf').model('comp1');
model.physics('mf').create('als1', 'AmperesLawSolid');
model.physics('mf').feature('als1').selection.all;
model.physics.create('ht', 'HeatTransfer', 'geom1');
model.physics('ht').model('comp1');

model.multiphysics.create('emh1', 'ElectromagneticHeating', 'geom1', 3);
model.multiphysics('emh1').set('EMHeat_physics', 'mf');
model.multiphysics('emh1').set('Heat_physics', 'ht');
model.multiphysics('emh1').selection.all;

model.study.create('std1');

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('h_coil', '15[cm]', 'Length of the coil');
model.param.set('r_coil', '10[cm]', 'Inner coil radius');
model.param.set('R_coil', '13[cm]', 'Outer coil radius');
model.param.set('T_in', '400[degC]', 'Initial billet temperature');
model.param.set('N_coil', '10000', 'Number of coil turns');
model.param.set('u_trans', '4[cm/s]', 'Billet translational velocity');
model.param.set('T_amb', '20[degC]', 'Ambient temperature');
model.param.set('emissivity', '0.5', 'Billet surface emissivity');
model.param.set('dx_part', '0[m]', 'Displacement (x)');
model.param.set('dy_part', '0[m]', 'Displacement (y)');
model.param.set('rot_part', '0', 'Rotation');
model.param.set('f0', '50[Hz]', 'AC current frequency');

model.geom.create('part1', 'Part', 2);
model.geom('part1').label('Rectangular');
model.geom('part1').inputParam.set('a', '12[cm]');
model.geom('part1').inputParam.descr('a', 'Width');
model.geom('part1').inputParam.set('b', '12[cm]');
model.geom('part1').inputParam.descr('b', 'Height');
model.geom('part1').create('r1', 'Rectangle');
model.geom('part1').feature('r1').set('size', {'a' 'b'});
model.geom('part1').feature('r1').set('base', 'center');
model.geom('part1').feature('r1').set('selresult', true);
model.geom('part1').feature('r1').set('color', 'custom');
model.geom('part1').feature('r1').set('customcolor', [0.3529411852359772 0.3529411852359772 0.3529411852359772]);
model.geom.create('part2', 'Part', 2);
model.geom('part2').label('Circular');
model.geom('part2').inputParam.set('r', '6[cm]');
model.geom('part2').inputParam.descr('r', 'Radius');
model.geom('part2').create('c1', 'Circle');
model.geom('part2').feature('c1').set('r', 'r');
model.geom('part2').feature('c1').set('selresult', true);
model.geom('part2').feature('c1').set('color', 'custom');
model.geom('part2').feature('c1').set('customcolor', [0.3529411852359772 0.3529411852359772 0.3529411852359772]);
model.geom.create('part3', 'Part', 3);
model.geom('part3').label('Coil');
model.geom('part3').create('cyl1', 'Cylinder');
model.geom('part3').feature('cyl1').set('r', 'r_coil');
model.geom('part3').feature('cyl1').set('h', 'h_coil');
model.geom('part3').feature('cyl1').set('axistype', 'x');
model.geom('part3').run('cyl1');
model.geom('part3').create('cyl2', 'Cylinder');
model.geom('part3').feature('cyl2').set('r', 'R_coil');
model.geom('part3').feature('cyl2').set('h', 'h_coil');
model.geom('part3').feature('cyl2').set('axistype', 'x');
model.geom('part3').run('cyl2');
model.geom('part3').create('dif1', 'Difference');
model.geom('part3').feature('dif1').selection('input').set({'cyl2'});
model.geom('part3').feature('dif1').selection('input2').set({'cyl1'});
model.geom('part3').feature('dif1').set('selresult', true);
model.geom('part3').feature('dif1').set('color', 'custom');
model.geom('part3').feature('dif1').set('customcolor', [0.8823529481887817 0.8823529481887817 0.8823529481887817]);
model.geom('part3').feature('dif1').label('Coil');
model.geom('geom1').create('sph1', 'Sphere');
model.geom('geom1').feature('sph1').set('r', '147.5[cm]');
model.geom('geom1').feature('sph1').set('pos', {'(175/2)[cm]' '0' '0'});
model.geom('geom1').feature('sph1').setIndex('layer', '25[cm]', 0);
model.geom('geom1').run('sph1');
model.geom('geom1').create('wp1', 'WorkPlane');
model.geom('geom1').feature('wp1').set('unite', true);
model.geom('geom1').feature('wp1').set('quickplane', 'yz');
model.geom('geom1').feature('wp1').geom.create('pi1', 'PartInstance');
model.geom('geom1').feature('wp1').geom.feature('pi1').set('selkeepnoncontr', false);
model.geom('geom1').feature('wp1').geom.feature('pi1').set('part', 'part1');
model.geom('geom1').feature('wp1').geom.feature('pi1').label('Part');
model.geom('geom1').feature('wp1').geom.feature('pi1').set('displ', {'dx_part' 'dy_part'});
model.geom('geom1').feature('wp1').geom.feature('pi1').set('rot', 'rot_part');
model.geom('geom1').feature('wp1').geom.run('pi1');
model.geom('geom1').feature('wp1').geom.create('mir1', 'Mirror');
model.geom('geom1').feature('wp1').geom.feature('mir1').selection('input').set({'pi1'});
model.geom('geom1').run('wp1');
model.geom('geom1').feature.create('ext1', 'Extrude');
model.geom('geom1').feature('ext1').setIndex('distance', '20[cm]', 0);
model.geom('geom1').feature('ext1').setIndex('distance', '35[cm]', 1);
model.geom('geom1').feature('ext1').set('displ', {'0' '0'; '0' '0'});
model.geom('geom1').feature('ext1').set('scale', {'1' '1'; '1' '1'});
model.geom('geom1').feature('ext1').set('twist', {'0' '0'});
model.geom('geom1').feature('ext1').setIndex('distance', '65[cm]', 2);
model.geom('geom1').feature('ext1').set('displ', {'0' '0'; '0' '0'; '0' '0'});
model.geom('geom1').feature('ext1').set('scale', {'1' '1'; '1' '1'; '1' '1'});
model.geom('geom1').feature('ext1').set('twist', {'0' '0' '0'});
model.geom('geom1').feature('ext1').setIndex('distance', '80[cm]', 3);
model.geom('geom1').feature('ext1').set('displ', {'0' '0'; '0' '0'; '0' '0'; '0' '0'});
model.geom('geom1').feature('ext1').set('scale', {'1' '1'; '1' '1'; '1' '1'; '1' '1'});
model.geom('geom1').feature('ext1').set('twist', {'0' '0' '0' '0'});
model.geom('geom1').feature('ext1').setIndex('distance', '110[cm]', 4);
model.geom('geom1').feature('ext1').set('displ', {'0' '0'; '0' '0'; '0' '0'; '0' '0'; '0' '0'});
model.geom('geom1').feature('ext1').set('scale', {'1' '1'; '1' '1'; '1' '1'; '1' '1'; '1' '1'});
model.geom('geom1').feature('ext1').set('twist', {'0' '0' '0' '0' '0'});
model.geom('geom1').feature('ext1').setIndex('distance', '125[cm]', 5);
model.geom('geom1').feature('ext1').set('displ', {'0' '0';  ...
'0' '0';  ...
'0' '0';  ...
'0' '0';  ...
'0' '0';  ...
'0' '0'});
model.geom('geom1').feature('ext1').set('scale', {'1' '1';  ...
'1' '1';  ...
'1' '1';  ...
'1' '1';  ...
'1' '1';  ...
'1' '1'});
model.geom('geom1').feature('ext1').set('twist', {'0' '0' '0' '0' '0' '0'});
model.geom('geom1').feature('ext1').setIndex('distance', '175[cm]', 6);
model.geom('geom1').feature('ext1').set('displ', {'0' '0';  ...
'0' '0';  ...
'0' '0';  ...
'0' '0';  ...
'0' '0';  ...
'0' '0';  ...
'0' '0'});
model.geom('geom1').feature('ext1').set('scale', {'1' '1';  ...
'1' '1';  ...
'1' '1';  ...
'1' '1';  ...
'1' '1';  ...
'1' '1';  ...
'1' '1'});
model.geom('geom1').feature('ext1').set('twist', {'0' '0' '0' '0' '0' '0' '0'});
model.geom('geom1').feature('ext1').set('selresult', true);
model.geom('geom1').feature('ext1').set('color', 'custom');
model.geom('geom1').feature('ext1').set('customcolor', [0.3529411852359772 0.3529411852359772 0.3529411852359772]);
model.geom('geom1').selection.create('csel1', 'CumulativeSelection');
model.geom('geom1').selection('csel1').label('Billet');
model.geom('geom1').feature('ext1').set('contributeto', 'csel1');
model.geom('geom1').run('ext1');
model.geom('geom1').create('pi1', 'PartInstance');
model.geom('geom1').feature('pi1').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi1').set('part', 'part3');
model.geom('geom1').feature('pi1').set('displ', {'20[cm]' '0' '0'});
model.geom('geom1').feature('pi1').setEntry('selkeepdom', 'pi1_dif1.dom', true);
model.geom('geom1').selection.create('csel2', 'CumulativeSelection');
model.geom('geom1').selection('csel2').label('Coils');
model.geom('geom1').feature('pi1').setEntry('selcontributetodom', 'pi1_dif1.dom', 'csel2');
model.geom('geom1').run('pi1');
model.geom('geom1').create('pi2', 'PartInstance');
model.geom('geom1').feature('pi2').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi2').set('part', 'part3');
model.geom('geom1').feature('pi2').set('displ', {'20[cm]+h_coil+30[cm]' '0' '0'});
model.geom('geom1').feature('pi2').setEntry('selkeepdom', 'pi2_dif1.dom', true);
model.geom('geom1').feature('pi2').setEntry('selcontributetodom', 'pi2_dif1.dom', 'csel2');
model.geom('geom1').run('pi2');
model.geom('geom1').create('pi3', 'PartInstance');
model.geom('geom1').feature('pi3').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi3').set('part', 'part3');
model.geom('geom1').feature('pi3').set('displ', {'20[cm]+h_coil+30[cm]+h_coil+30[cm]' '0' '0'});
model.geom('geom1').feature('pi3').setEntry('selkeepdom', 'pi3_dif1.dom', true);
model.geom('geom1').feature('pi3').setEntry('selcontributetodom', 'pi3_dif1.dom', 'csel2');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');

model.geom('geom1').run;

model.selection('sel1').geom(2);
model.selection('sel1').set([13]);
model.selection('sel1').label('Inlet Boundary');
model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').geom(2);
model.selection('sel2').set([94]);
model.selection('sel2').label('Outlet Boundary');
model.selection.create('int1', 'Intersection');
model.selection('int1').model('comp1');
model.selection('int1').label('Billet Inlet');
model.selection('int1').set('entitydim', 2);
model.selection('int1').set('input', {'sel1' 'geom1_csel1_bnd'});
model.selection.create('int2', 'Intersection');
model.selection('int2').model('comp1');
model.selection('int2').label('Billet Outlet');
model.selection('int2').set('entitydim', 2);
model.selection('int2').set('input', {'sel2' 'geom1_csel1_bnd'});
model.selection.create('adj1', 'Adjacent');
model.selection('adj1').model('comp1');
model.selection('adj1').label('Billet Exterior Boundaries');
model.selection('adj1').set('input', {'geom1_csel1_dom'});
model.selection.create('dif1', 'Difference');
model.selection('dif1').model('comp1');
model.selection('dif1').label('Radiating Boundaries');
model.selection('dif1').set('entitydim', 2);
model.selection('dif1').set('add', {'adj1'});
model.selection('dif1').set('subtract', {'sel1' 'int2'});
model.selection.create('box1', 'Box');
model.selection('box1').model('comp1');
model.selection('box1').label('All Domains');
model.selection.create('uni1', 'Union');
model.selection('uni1').model('comp1');
model.selection('uni1').label('Billet and Coils');
model.selection('uni1').set('input', {'geom1_csel1_dom' 'geom1_csel2_dom'});
model.selection.create('dif2', 'Difference');
model.selection('dif2').model('comp1');
model.selection('dif2').set('add', {'box1'});
model.selection('dif2').set('subtract', {'uni1'});
model.selection('dif2').label('Hidden Domains');
model.selection.create('adj2', 'Adjacent');
model.selection('adj2').model('comp1');
model.selection('adj2').set('outputdim', 3);
model.selection('adj2').set('input', {'uni1'});
model.selection('adj2').label('Air domain');
model.selection.create('uni2', 'Union');
model.selection('uni2').model('comp1');
model.selection('uni2').set('input', {'uni1' 'adj2'});
model.selection('uni2').label('Free tetrahedral domains');
model.selection.create('adj3', 'Adjacent');
model.selection('adj3').model('comp1');
model.selection('adj3').label('Swept Mesh Destination Boundaries');
model.selection('adj3').set('input', {'uni1' 'dif2'});
model.selection.create('adj4', 'Adjacent');
model.selection('adj4').model('comp1');
model.selection('adj4').label('Sphere Inner Boundaries');
model.selection('adj4').set('entitydim', 2);
model.selection('adj4').set('input', {'adj3'});
model.selection.create('adj5', 'Adjacent');
model.selection('adj5').model('comp1');
model.selection('adj5').label('Swept Mesh Source Boundaries');
model.selection('adj5').set('entitydim', 2);
model.selection('adj5').set('input', {'adj3' 'adj4'});
model.selection.create('adj6', 'Adjacent');
model.selection('adj6').model('comp1');
model.selection('adj6').label('IE domains');
model.selection('adj6').set('entitydim', 2);
model.selection('adj6').set('outputdim', 3);
model.selection('adj6').set('input', {'adj3'});

model.coordSystem.create('ie1', 'geom1', 'InfiniteElement');
model.coordSystem('ie1').selection.named('adj6');
model.coordSystem('ie1').set('ScalingType', 'Spherical');

model.view('view1').hideEntities.create('hide1');
model.view('view1').hideEntities('hide1').named('dif2');

model.physics('mf').feature('als1').selection.named('geom1_csel1_dom');
model.physics('mf').create('coil1', 'Coil', 3);
model.physics('mf').feature('coil1').selection.named('geom1_pi1_dif1_dom');
model.physics('mf').feature('coil1').set('ConductorModel', 'Multi');
model.physics('mf').feature('coil1').set('CoilType', 'UserDefined');
model.physics('mf').feature('coil1').set('ICoil', '40[A]');
model.physics('mf').feature('coil1').set('N', 'N_coil');
model.physics('mf').feature('coil1').feature('cg1').set('eCoil', {'0' 'z/sqrt(y^2+z^2)' '-y/sqrt(y^2+z^2)'});
model.physics('mf').feature('coil1').feature('cg1').set('length', '(R_coil+r_coil)*pi');
model.physics('mf').feature.duplicate('coil2', 'coil1');
model.physics('mf').feature('coil2').selection.named('geom1_pi2_dif1_dom');
model.physics('mf').feature('coil2').set('ICoil', '30[A]');
model.physics('mf').feature.duplicate('coil3', 'coil2');
model.physics('mf').feature('coil3').selection.named('geom1_pi3_dif1_dom');
model.physics('ht').create('solidtrm1', 'SolidWithTranslationalMotion', 3);
model.physics('ht').feature('solidtrm1').selection.all;
model.physics('ht').feature('solidtrm1').feature('trm1').set('u', {'u_trans' '0' '0'});
model.physics('ht').feature('init1').set('Tinit', 'T_in');
model.physics('ht').selection.named('geom1_csel1_dom');
model.physics('ht').create('hf1', 'HeatFluxBoundary', 2);
model.physics('ht').feature('hf1').selection.named('dif1');
model.physics('ht').feature('hf1').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht').feature('hf1').set('h', 5);
model.physics('ht').feature('hf1').set('Text', 'T_amb');
model.physics('ht').create('temp1', 'TemperatureBoundary', 2);
model.physics('ht').feature('temp1').selection.named('int1');
model.physics('ht').feature('temp1').set('T0', 'T_in');
model.physics('ht').create('sar1', 'SurfaceToAmbientRadiation', 2);
model.physics('ht').feature('sar1').selection.named('dif1');
model.physics('ht').feature('sar1').set('Tamb', 'T_amb');
model.physics('ht').feature('sar1').set('epsilon_rad_mat', 'userdef');
model.physics('ht').feature('sar1').set('epsilon_rad', 'emissivity');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat1').propertyGroup.create('linzRes', 'Linearized resistivity');
model.material('mat1').label('Copper');
model.material('mat1').set('family', 'copper');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'5.998e7[S/m]' '0' '0' '0' '5.998e7[S/m]' '0' '0' '0' '5.998e7[S/m]'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'17e-6[1/K]' '0' '0' '0' '17e-6[1/K]' '0' '0' '0' '17e-6[1/K]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', '385[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('density', '8960[kg/m^3]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'400[W/(m*K)]' '0' '0' '0' '400[W/(m*K)]' '0' '0' '0' '400[W/(m*K)]'});
model.material('mat1').propertyGroup('Enu').set('E', '110[GPa]');
model.material('mat1').propertyGroup('Enu').set('nu', '0.35');
model.material('mat1').propertyGroup('linzRes').set('rho0', '1.72e-8[ohm*m]');
model.material('mat1').propertyGroup('linzRes').set('alpha', '0.0039[1/K]');
model.material('mat1').propertyGroup('linzRes').set('Tref', '298[K]');
model.material('mat1').propertyGroup('linzRes').addInput('temperature');
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat2').label('Steel AISI 4340');
model.material('mat2').set('family', 'steel');
model.material('mat2').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('electricconductivity', {'4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]'});
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]'});
model.material('mat2').propertyGroup('def').set('heatcapacity', '475[J/(kg*K)]');
model.material('mat2').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('density', '7850[kg/m^3]');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]'});
model.material('mat2').propertyGroup('Enu').set('E', '205[GPa]');
model.material('mat2').propertyGroup('Enu').set('nu', '0.28');
model.material('mat1').selection.named('geom1_csel2_dom');
model.material('mat2').selection.named('geom1_csel1_dom');

model.mesh('mesh1').create('size1', 'Size');
model.mesh('mesh1').feature('size1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('size1').selection.named('geom1_csel1_dom');
model.mesh('mesh1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('size1').set('hmax', 'r_coil/4');
model.mesh('mesh1').create('ftet1', 'FreeTet');
model.mesh('mesh1').feature('ftet1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('ftet1').selection.named('uni2');
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').selection('sourceface').named('adj5');
model.mesh('mesh1').feature('swe1').selection('targetface').named('adj3');
model.mesh('mesh1').feature('swe1').create('dis1', 'Distribution');

model.modelNode.create('comp2', true);

model.geom.create('geom2', 2);
model.geom('geom2').model('comp2');

model.mesh.create('mesh2', 'geom2');

model.modelNode('comp2').label('Billet Cross Section');

model.geom('geom2').create('pi1', 'PartInstance');
model.geom('geom2').feature('pi1').set('selkeepnoncontr', false);
model.geom('geom2').feature('pi1').set('part', 'part1');
model.geom('geom2').feature('pi1').label('Part');
model.geom('geom2').feature('pi1').set('displ', {'dx_part' 'dy_part'});
model.geom('geom2').feature('pi1').set('rot', 'rot_part');
model.geom('geom2').feature('pi1').setEntry('selkeepdom', 'pi1_r1.dom', true);
model.geom('geom2').run('pi1');
model.geom('geom2').create('c1', 'Circle');
model.geom('geom2').feature('c1').set('r', 'r_coil');
model.geom('geom2').run('c1');
model.geom('geom2').create('c2', 'Circle');
model.geom('geom2').feature('c2').set('r', 'R_coil');
model.geom('geom2').run('c2');
model.geom('geom2').create('dif1', 'Difference');
model.geom('geom2').feature('dif1').selection('input').set({'c2'});
model.geom('geom2').feature('dif1').selection('input2').set({'c1'});
model.geom('geom2').feature('dif1').set('selresult', true);
model.geom('geom2').feature('dif1').set('color', 'custom');
model.geom('geom2').feature('dif1').set('customcolor', [0.8823529481887817 0.8823529481887817 0.8823529481887817]);
model.geom('geom2').run('fin');

model.study('std1').create('freq', 'Frequency');
model.study('std1').feature('freq').set('plist', 'f0');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setEntry('activate', 'mf', false);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'f0'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'Default');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'bicgstab');
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'right');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sv1', 'SORVector');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sv1').set('prefun', 'sorvec');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sv1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sv1').set('relax', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sv1').set('sorvecdof', {'comp1_A'});
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sv1', 'SORVector');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sv1').set('prefun', 'soruvec');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sv1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sv1').set('relax', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sv1').set('sorvecdof', {'comp1_A'});
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'stat');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'stat');
model.sol('sol1').create('s2', 'Stationary');
model.sol('sol1').feature('s2').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s2').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s2').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s2').feature('fc1').set('termonres', 'off');
model.sol('sol1').feature('s2').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').feature('d1').label('Direct, heat transfer variables (ht)');
model.sol('sol1').feature('s2').create('i1', 'Iterative');
model.sol('sol1').feature('s2').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s2').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s2').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s2').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s2').feature('i1').set('maxlinit', 10000);
model.sol('sol1').feature('s2').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s2').feature('i1').label('AMG, heat transfer variables (ht)');
model.sol('sol1').feature('s2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s2').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s2').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s2').feature('fc1').set('termonres', 'off');
model.sol('sol1').feature('s2').feature.remove('fcDef');
model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol1').feature('v2').set('solnum', 'auto');
model.sol('sol1').feature('v2').set('solvertype', 'solnum');
model.sol('sol1').attach('std1');

model.study('std1').setGenPlots(false);

model.sol('sol1').study('std1');
model.sol('sol2').copySolution('sol3');

model.result.dataset('dset2').set('solution', 'none');

model.sol('sol1').feature.remove('s2');
model.sol('sol1').feature.remove('v2');
model.sol('sol1').feature.remove('st2');
model.sol('sol1').feature.remove('su1');
model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol3').copySolution('sol2');
model.sol.remove('sol3');
model.sol('sol2').label('Solution Store 1');

model.result.dataset.remove('dset4');

model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'f0'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'Default');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'bicgstab');
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'right');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sv1', 'SORVector');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sv1').set('prefun', 'sorvec');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sv1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sv1').set('relax', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sv1').set('sorvecdof', {'comp1_A'});
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sv1', 'SORVector');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sv1').set('prefun', 'soruvec');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sv1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sv1').set('relax', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sv1').set('sorvecdof', {'comp1_A'});
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').feature('su1').set('sol', 'sol2');
model.sol('sol1').feature('su1').label('Solution Store 1');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'stat');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'stat');
model.sol('sol1').create('s2', 'Stationary');
model.sol('sol1').feature('s2').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s2').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s2').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s2').feature('fc1').set('termonres', 'off');
model.sol('sol1').feature('s2').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').feature('d1').label('Direct, heat transfer variables (ht)');
model.sol('sol1').feature('s2').create('i1', 'Iterative');
model.sol('sol1').feature('s2').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s2').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s2').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s2').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s2').feature('i1').set('maxlinit', 10000);
model.sol('sol1').feature('s2').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s2').feature('i1').label('AMG, heat transfer variables (ht)');
model.sol('sol1').feature('s2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s2').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s2').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s2').feature('fc1').set('termonres', 'off');
model.sol('sol1').feature('s2').feature.remove('fcDef');

model.result.dataset('dset2').set('solution', 'sol2');

model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol1').feature('v2').set('solnum', 'auto');
model.sol('sol1').feature('v2').set('solvertype', 'solnum');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.dataset.create('surf1', 'Surface');
model.result.dataset('surf1').selection.named('int2');
model.result.dataset('dset1').selection.geom('geom1', 3);
model.result.dataset('dset1').selection.named('uni1');
model.result.dataset('dset2').selection.geom('geom1', 3);
model.result.dataset('dset2').selection.named('uni1');
model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').run;
model.result('pg1').label('Temperature (Slices)');
model.result('pg1').set('edgecolor', 'gray');
model.result('pg1').set('view', 'new');
model.result('pg1').set('titletype', 'custom');
model.result('pg1').set('typeintitle', false);
model.result('pg1').create('mslc1', 'Multislice');
model.result('pg1').feature('mslc1').set('expr', 'T');
model.result('pg1').feature('mslc1').set('descr', 'Temperature');
model.result('pg1').feature('mslc1').set('unit', 'degC');
model.result('pg1').feature('mslc1').set('xnumber', '8');
model.result('pg1').feature('mslc1').set('znumber', '0');
model.result('pg1').feature('mslc1').set('colortable', 'HeatCamera');
model.result('pg1').run;
model.result('pg1').create('mmv1', 'MaxMinVolume');
model.result('pg1').feature('mmv1').set('expr', 'T');
model.result('pg1').feature('mmv1').set('descr', 'Temperature');
model.result('pg1').feature('mmv1').set('unit', 'degC');
model.result('pg1').feature('mmv1').set('titletype', 'none');

model.view('view7').set('showgrid', false);
model.view('view7').set('showaxisorientation', false);

model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').run;
model.result('pg2').label('Current Density Norm');
model.result('pg2').set('data', 'dset2');
model.result('pg2').set('edgecolor', 'gray');
model.result('pg2').set('view', 'view7');
model.result('pg2').set('titletype', 'custom');
model.result('pg2').set('solutionintitle', false);
model.result('pg2').set('typeintitle', false);
model.result('pg2').create('mslc1', 'Multislice');
model.result('pg2').feature('mslc1').set('expr', 'mf.normJ');
model.result('pg2').feature('mslc1').set('descr', 'Current density norm');
model.result('pg2').feature('mslc1').set('xnumber', '8');
model.result('pg2').feature('mslc1').set('znumber', '0');
model.result('pg2').feature('mslc1').create('sel1', 'Selection');
model.result('pg2').feature('mslc1').feature('sel1').selection.named('geom1_csel1_dom');
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').run;
model.result('pg3').label('Temperature, Cross-Section at Outlet');
model.result('pg3').set('titletype', 'custom');
model.result('pg3').set('typeintitle', false);
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', 'T');
model.result('pg3').feature('surf1').set('descr', 'Temperature');
model.result('pg3').feature('surf1').set('unit', 'degC');
model.result('pg3').feature('surf1').set('colortable', 'HeatCamera');
model.result('pg3').run;
model.result('pg3').create('mms1', 'MaxMinSurface');
model.result('pg3').feature('mms1').set('expr', 'T');
model.result('pg3').feature('mms1').set('descr', 'Temperature');
model.result('pg3').feature('mms1').set('unit', 'degC');
model.result('pg3').feature('mms1').set('color', 'gray');
model.result('pg3').feature('mms1').set('backgroundcolor', 'black');
model.result('pg3').feature('mms1').set('titletype', 'none');
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').run;
model.result('pg4').label('Temperature (Surface)');
model.result('pg4').set('edges', false);
model.result('pg4').set('view', 'view7');
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', 'T');
model.result('pg4').feature('surf1').set('unit', 'degC');
model.result('pg4').feature('surf1').set('colortable', 'HeatCamera');
model.result('pg4').run;
model.result('pg4').create('vol1', 'Volume');
model.result('pg4').feature('vol1').set('expr', '1');
model.result('pg4').feature('vol1').set('titletype', 'none');
model.result('pg4').feature('vol1').set('coloring', 'uniform');
model.result('pg4').feature('vol1').set('color', 'custom');
model.result('pg4').feature('vol1').set('customcolor', [0.8823529481887817 0.8823529481887817 0.8823529481887817]);
model.result('pg4').feature('vol1').create('sel1', 'Selection');
model.result('pg4').feature('vol1').feature('sel1').selection.named('geom1_csel2_dom');
model.result('pg4').run;
model.result('pg4').set('titletype', 'custom');
model.result('pg4').set('typeintitle', false);
model.result.numerical.create('av1', 'AvSurface');
model.result.numerical('av1').set('intvolume', true);
model.result.numerical('av1').set('data', 'surf1');
model.result.numerical('av1').label('Average Outlet Temperature');
model.result.numerical('av1').setIndex('unit', 'degC', 0);
model.result.numerical.create('gev1', 'EvalGlobal');
model.result.numerical('gev1').label('Total Coil Power');
model.result.numerical('gev1').setIndex('expr', 'mf.PCoil_1+mf.PCoil_2+mf.PCoil_3', 0);
model.result.numerical('gev1').setIndex('unit', 'kW', 0);
model.result.numerical('gev1').set('data', 'dset2');
model.result.numerical.create('max1', 'MaxVolume');
model.result.numerical('max1').label('Maximum Billet Temperature');
model.result.numerical('max1').selection.named('geom1_csel1_dom');
model.result.numerical('max1').set('expr', {'T'});
model.result.numerical('max1').set('descr', {'Temperature'});
model.result.numerical('max1').set('unit', {'K'});
model.result.numerical('max1').setIndex('unit', 'degC', 0);
model.result.numerical.create('min1', 'MinVolume');
model.result.numerical('min1').label('Minimum Billet Temperature');
model.result.numerical('min1').selection.named('geom1_csel1_dom');
model.result.numerical('min1').set('expr', {'T'});
model.result.numerical('min1').set('descr', {'Temperature'});
model.result.numerical('min1').set('unit', {'K'});
model.result.numerical('min1').setIndex('unit', 'degC', 0);
model.result.numerical.create('max2', 'MaxSurface');
model.result.numerical('max2').label('Maximum Outlet Temperature');
model.result.numerical('max2').selection.named('int2');
model.result.numerical('max2').set('expr', {'T'});
model.result.numerical('max2').set('descr', {'Temperature'});
model.result.numerical('max2').set('unit', {'K'});
model.result.numerical('max2').setIndex('unit', 'degC', 0);
model.result.numerical.create('min2', 'MinSurface');
model.result.numerical('min2').label('Minimum Outlet Temperature');
model.result.numerical('min2').selection.named('int2');
model.result.numerical('min2').set('expr', {'T'});
model.result.numerical('min2').set('descr', {'Temperature'});
model.result.numerical('min2').set('unit', {'K'});
model.result.numerical('min2').setIndex('unit', 'degC', 0);
model.result.numerical.create('int1', 'IntSurface');
model.result.numerical('int1').set('intvolume', true);
model.result.numerical('int1').label('Inward Power');
model.result.numerical('int1').selection.named('int1');
model.result.numerical('int1').setIndex('expr', '-ht.ntflux', 0);
model.result.numerical('int1').setIndex('unit', 'kW', 0);
model.result.numerical.create('int2', 'IntSurface');
model.result.numerical('int2').set('intvolume', true);
model.result.numerical('int2').label('Outward Power');
model.result.numerical('int2').selection.named('int2');
model.result.numerical('int2').setIndex('expr', 'ht.ntflux', 0);
model.result.numerical('int2').setIndex('unit', 'kW', 0);
model.result.numerical.create('int3', 'IntSurface');
model.result.numerical('int3').set('intvolume', true);
model.result.numerical('int3').label('Dissipated Power');
model.result.numerical('int3').selection.named('dif1');
model.result.numerical('int3').set('expr', {'ht.ntflux'});
model.result.numerical('int3').set('descr', {'Normal total heat flux'});
model.result.numerical('int3').set('unit', {'W'});
model.result.numerical('int3').setIndex('unit', 'kW', 0);
model.result('pg4').run;
model.result('pg4').run;

model.title([]);

model.description('');

model.label('billet_induction_heating_embedded.mph');

model.result('pg4').run;

model.setExpectedComputationTime('30 s');

model.result.report.create('rpt1', 'Report');
model.result.report('rpt1').feature.create('tp1', 'TitlePage');
model.result.report('rpt1').feature('tp1').label('Induction Heating of a Steel Billet');
model.result.report('rpt1').feature.create('sec1', 'Section');
model.result.report('rpt1').feature('sec1').label('Software Information');
model.result.report('rpt1').feature('sec1').feature.create('root1', 'Model');
model.result.report('rpt1').feature.create('sec2', 'Section');
model.result.report('rpt1').feature('sec2').label('Inputs');
model.result.report('rpt1').feature('sec2').feature.create('param1', 'Parameter');
model.result.report('rpt1').feature('sec2').feature('param1').setIndex('children', false, 7, 1);
model.result.report('rpt1').feature('sec2').feature('param1').setIndex('children', false, 8, 1);
model.result.report('rpt1').feature('sec2').feature('param1').setIndex('children', false, 9, 1);
model.result.report('rpt1').feature('sec2').feature('param1').setIndex('children', false, 10, 1);
model.result.report('rpt1').feature('sec2').feature.create('geom1', 'Geometry');
model.result.report('rpt1').feature('sec2').feature('geom1').set('includeunits', false);
model.result.report('rpt1').feature('sec2').feature('geom1').set('includestats', false);
model.result.report('rpt1').feature('sec2').feature('geom1').set('noderef', 'geom2');
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 0, 1);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 1, 1);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 2, 1);
model.result.report('rpt1').feature('sec2').feature('geom1').setIndex('children', false, 3, 1);
model.result.report('rpt1').feature('sec2').feature.create('geom2', 'Geometry');
model.result.report('rpt1').feature('sec2').feature('geom2').set('includeunits', false);
model.result.report('rpt1').feature('sec2').feature('geom2').set('includestats', false);
model.result.report('rpt1').feature('sec2').feature('geom2').setIndex('children', false, 0, 1);
model.result.report('rpt1').feature('sec2').feature('geom2').setIndex('children', false, 1, 1);
model.result.report('rpt1').feature('sec2').feature('geom2').setIndex('children', false, 2, 1);
model.result.report('rpt1').feature('sec2').feature('geom2').setIndex('children', false, 6, 1);
model.result.report('rpt1').feature.create('sec3', 'Section');
model.result.report('rpt1').feature('sec3').label('Results');
model.result.report('rpt1').feature('sec3').feature.create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec3').feature.create('pg2', 'PlotGroup');
model.result.report('rpt1').feature('sec3').feature('pg2').set('noderef', 'pg2');
model.result.report('rpt1').feature('sec3').feature.create('pg3', 'PlotGroup');
model.result.report('rpt1').feature('sec3').feature('pg3').set('noderef', 'pg3');
model.result.report('rpt1').feature('sec3').feature.create('pg4', 'PlotGroup');
model.result.report('rpt1').feature('sec3').feature('pg4').set('noderef', 'pg4');
model.result.report('rpt1').set('format', 'docx');
model.result.report('rpt1').feature('sec2').feature.create('field1', 'IntegerDataField');
model.result.report('rpt1').feature('sec2').feature.create('field2', 'StringArrayDataField');
model.result.report('rpt1').feature('sec2').feature('field2').setIndex('include', false, 0);
model.result.report('rpt1').feature('sec2').feature('field2').setIndex('include', false, 1);
model.result.report('rpt1').feature('sec2').feature('field2').setIndex('include', false, 2);
model.result.report('rpt1').feature('sec2').feature('field2').setIndex('include', false, 3);
model.result.report('rpt1').feature('sec2').feature('field2').setIndex('include', false, 5);
model.result.report('rpt1').feature('sec2').feature.move('field1', 2);
model.result.report('rpt1').feature('sec2').feature.move('field1', 1);
model.result.report('rpt1').feature('sec2').feature.move('field2', 3);
model.result.report('rpt1').feature('sec2').feature.move('field2', 2);

model.title('Induction Heating of a Steel Billet');

model.description(['This app demonstrates the following:' newline  newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Geometry parts and parameterized geometries' newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Using tables for user input parameters' newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Visualization on a 2D cross-section of a 3D geometry' newline  native2unicode(hex2dec({'20' '22'}), 'unicode') ' Improved visualization and user experience when a geometry object (the air object) is hidden.' newline  newline 'Induction heating is a method used to heat metals for forging and other applications. Compared with more traditional heating methods, such as gas or electric furnaces, induction heating delivers heating power directly to the piece in a more controlled way and allows for a faster processing time.' newline  newline 'The app is used to design a simple induction heating system for a steel billet, consisting of one or more electromagnetic coils through which the billet is moved at a constant velocity. The coils are energized with alternating currents and induce eddy currents in the metallic billet, generating heat due to Joule heating. The billet cross section; the coil number, placement, and size; as well as the initial and ambient temperature and the individual coil currents can all be specified as inputs in the app.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('billet_induction_heating.mph');

model.modelNode.label('Components');

out = model;
