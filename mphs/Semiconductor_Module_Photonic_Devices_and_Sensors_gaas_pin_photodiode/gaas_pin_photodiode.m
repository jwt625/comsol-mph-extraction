function out = model
%
% gaas_pin_photodiode.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Semiconductor_Module/Photonic_Devices_and_Sensors');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('semi', 'Semiconductor', 'geom1');
model.physics('semi').model('comp1');
model.physics('semi').create('ot1', 'OpticalTransitions');
model.physics('semi').feature('ot1').selection.all;
model.physics.create('ewfd', 'ElectromagneticWavesFrequencyDomain', 'geom1');
model.physics('ewfd').model('comp1');

model.multiphysics.create('semc1', 'SemiconductorElectromagneticWavesCoupling', 'geom1', 2);
model.multiphysics('semc1').set('Semiconductor_physics', 'semi');
model.multiphysics('semc1').set('ElectromagneticWaves_physics', 'ewfd');

model.study.create('std1');
model.study('std1').create('fstat', 'FrequencyStationary');
model.study('std1').feature('fstat').set('freq', '3.6E14');
model.study('std1').feature('fstat').set('solnum', 'auto');
model.study('std1').feature('fstat').set('notsolnum', 'auto');
model.study('std1').feature('fstat').set('outputmap', {});
model.study('std1').feature('fstat').set('ngenAUX', '1');
model.study('std1').feature('fstat').set('goalngenAUX', '1');
model.study('std1').feature('fstat').set('ngenAUX', '1');
model.study('std1').feature('fstat').set('goalngenAUX', '1');
model.study('std1').feature('fstat').setSolveFor('/physics/semi', true);
model.study('std1').feature('fstat').setSolveFor('/physics/ewfd', true);
model.study('std1').feature('fstat').setSolveFor('/multiphysics/semc1', true);

model.param.set('w_dom', '5[um]');
model.param.descr('w_dom', 'Width');
model.param.set('h_dom', '1[um]');
model.param.descr('h_dom', 'Thickness');
model.param.set('V_n', '2[V]');
model.param.descr('V_n', 'n-contact voltage');
model.param.set('V_p', '0[V]');
model.param.descr('V_p', 'p-contact voltage');
model.param.set('hbar0', 'h_const/(2*pi)');
model.param.descr('hbar0', 'hbar without radians');
model.param.set('lda0', '870[nm]');
model.param.descr('lda0', 'Incident wavelength');
model.param.set('f0', 'c_const/lda0');
model.param.descr('f0', 'Incident frequency');
model.param.set('omega0', '2*pi*1[rad]*f0');
model.param.descr('omega0', 'Incident angular frequency');
model.param.set('E_ph', 'f0*h_const');
model.param.descr('E_ph', 'Incident photon energy');
model.param.set('n0', '3.5');
model.param.descr('n0', 'Refractive index of GaAs (real component)');
model.param.set('tau', '2[ns]');
model.param.descr('tau', 'Spontaneous lifetime');
model.param.set('d0', '1[um]');
model.param.descr('d0', 'Out-of-plane thickness for the Semiconductor interface (the one for wave optics is fixed at 1 m)');
model.param.set('Pin', '10[uW]');
model.param.descr('Pin', 'Incident power for out-of-plane thickness of d0 = 1 um');

model.geom('geom1').lengthUnit([native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']);
model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').run;

model.physics('semi').prop('d').set('d', 'd0');
model.physics('semi').prop('ModelProperties').set('CarrierStatistics', 'FermiDirac');

model.geom('geom1').feature('r1').set('size', {'w_dom' 'h_dom'});
model.geom('geom1').runPre('fin');
model.geom('geom1').run;

model.physics('semi').create('adm1', 'AnalyticDopingModel', 2);
model.physics('semi').feature('adm1').label('Constant p doping');
model.physics('semi').feature('adm1').selection.set([1]);
model.physics('semi').feature('adm1').set('NAc', '1e14[1/cm^3]');
model.physics('semi').create('adm2', 'AnalyticDopingModel', 2);
model.physics('semi').feature('adm2').label('p Doping');
model.physics('semi').feature('adm2').selection.set([1]);
model.physics('semi').feature('adm2').set('impurityDistribution', 'box');
model.physics('semi').feature('adm2').set('NAc', '1e18[1/cm^3]');
model.physics('semi').feature('adm2').set('rb', {'0[um]' 'h_dom-0.1*h_dom' '0'});
model.physics('semi').feature('adm2').set('jwidth', 'w_dom');
model.physics('semi').feature('adm2').set('jdepth', '0.1*h_dom');
model.physics('semi').feature('adm2').set('jds', '0.15*h_dom');
model.physics('semi').feature('adm2').set('Nb_src', 'root.comp1.semi.adm1.NAc');
model.physics('semi').create('gdm1', 'GeometricDopingModel', 2);
model.physics('semi').feature('gdm1').label('p+ Doping');
model.physics('semi').feature('gdm1').selection.set([1]);
model.physics('semi').feature('gdm1').set('NAgen', '1e20[1/cm^3]');
model.physics('semi').feature('gdm1').set('jd_gen', '0.1*h_dom');
model.physics('semi').feature('gdm1').set('Nb_gen_src', 'root.comp1.semi.adm1.NAc');
model.physics('semi').feature('gdm1').feature('gdmbs1').selection.set([3]);
model.physics('semi').create('adm3', 'AnalyticDopingModel', 2);
model.physics('semi').feature('adm3').label('n Doping');
model.physics('semi').feature('adm3').selection.set([1]);
model.physics('semi').feature('adm3').set('impurityDistribution', 'box');
model.physics('semi').feature('adm3').set('impurityType', 'donor');
model.physics('semi').feature('adm3').set('NDc', '1e18[1/cm^3]');
model.physics('semi').feature('adm3').set('jwidth', 'w_dom');
model.physics('semi').feature('adm3').set('jdepth', '0.1*h_dom');
model.physics('semi').feature('adm3').set('jds', '0.15*h_dom');
model.physics('semi').feature('adm3').set('Nb_src', 'root.comp1.semi.adm1.NAc');
model.physics('semi').create('gdm2', 'GeometricDopingModel', 2);
model.physics('semi').feature('gdm2').label('n+ Doping');
model.physics('semi').feature('gdm2').selection.set([1]);
model.physics('semi').feature('gdm2').set('impurityType', 'donor');
model.physics('semi').feature('gdm2').set('NDgen', '1e20[1/cm^3]');
model.physics('semi').feature('gdm2').set('jd_gen', '0.1*h_dom');
model.physics('semi').feature('gdm2').set('Nb_gen_src', 'root.comp1.semi.adm1.NAc');
model.physics('semi').feature('gdm2').feature('gdmbs1').selection.set([2]);
model.physics('semi').create('mc1', 'MetalContact', 1);
model.physics('semi').feature('mc1').label('p-Contact');
model.physics('semi').feature('mc1').selection.set([3]);
model.physics('semi').feature('mc1').set('V0', 'V_p');
model.physics('semi').create('mc2', 'MetalContact', 1);
model.physics('semi').feature('mc2').label('n-Contact');
model.physics('semi').feature('mc2').selection.set([2]);
model.physics('semi').feature('mc2').set('V0', 'V_n');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('SemicondMaterial', 'Semiconductor material');
model.material('mat1').propertyGroup.create('JainRoulstonModel', ['Jain' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Roulston model']);
model.material('mat1').label('GaAs - Gallium Arsenide');
model.material('mat1').propertyGroup('def').set('heatcapacity', '330[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('density', '5500[kg/m^3]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'46[W/(m*K)]' '0' '0' '0' '46[W/(m*K)]' '0' '0' '0' '46[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'12.9' '0' '0' '0' '12.9' '0' '0' '0' '12.9'});
model.material('mat1').propertyGroup('SemicondMaterial').set('Eg0', '1.424[V]');
model.material('mat1').propertyGroup('SemicondMaterial').set('chi0', '4.07[V]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Nv', '(T/1[K])^(3/2)*1.83e15[1/cm^3]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Nc', '(8.63e13*(T/1[K])^(3/2)*(1-1.93e-4*(T/1[K])-4.19e-8*(T/1[K])^2+21*exp(-0.29[V]*e_const/(k_B_const*T))+44*exp(-0.48[V]*e_const/(k_B_const*T))))[1/cm^3]');
model.material('mat1').propertyGroup('SemicondMaterial').set('mun', '8500[cm^2/(V*s)]');
model.material('mat1').propertyGroup('SemicondMaterial').set('mup', '400[cm^2/(V*s)]');
model.material('mat1').propertyGroup('SemicondMaterial').addInput('temperature');
model.material('mat1').propertyGroup('JainRoulstonModel').set('An_jr', '16.5e-9[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Bn_jr', '2.39e-7[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Cn_jr', '91.4e-12[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Ap_jr', '9.83e-9[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Bp_jr', '3.9e-7[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Cp_jr', '3.9e-12[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Nref_jr', '1[1/cm^3]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('alpha_jr', '0.5');
model.material('mat1').propertyGroup.create('RefractiveIndex', 'Refractive_index');
model.material('mat1').propertyGroup('RefractiveIndex').set('n', {'n0'});
model.material('mat1').propertyGroup('RefractiveIndex').set('ki', {'0'});

model.physics('semi').feature('ot1').set('tau_spon', 'tau');
model.physics('ewfd').create('port1', 'Port', 1);
model.physics('ewfd').feature('port1').selection.set([3]);
model.physics('ewfd').feature('port1').set('Pin', 'Pin/d0');
model.physics('ewfd').feature('port1').set('E0', [0 0 1]);
model.physics('ewfd').feature('port1').set('beta', 'ewfd.k');
model.physics('ewfd').create('port2', 'Port', 1);
model.physics('ewfd').feature('port2').selection.set([2]);
model.physics('ewfd').feature('port2').set('E0', [0 0 1]);
model.physics('ewfd').feature('port2').set('beta', 'ewfd.k');
model.physics('ewfd').create('pc1', 'PeriodicCondition', 1);
model.physics('ewfd').feature('pc1').selection.set([1 4]);
model.physics('ewfd').feature('init1').set('E', [0 0 1]);

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([3]);
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 1);
model.mesh('mesh1').feature('map1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis2').selection.set([1]);
model.mesh('mesh1').feature('map1').feature('dis2').set('numelem', 500);
model.mesh('mesh1').run;

model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl('intop1').set('axisym', true);
model.cpl('intop1').selection.all;
model.cpl('intop1').set('intorder', 1);

model.study('std1').label('Study 1: Wavelength sweep');
model.study('std1').setGenPlots(false);
model.study('std1').feature('fstat').set('freq', 'f0');
model.study('std1').feature('fstat').set('useparam', true);
model.study('std1').feature('fstat').setIndex('pname', 'w_dom', 0);
model.study('std1').feature('fstat').setIndex('plistarr', '', 0);
model.study('std1').feature('fstat').setIndex('punit', 'm', 0);
model.study('std1').feature('fstat').setIndex('pname', 'w_dom', 0);
model.study('std1').feature('fstat').setIndex('plistarr', '', 0);
model.study('std1').feature('fstat').setIndex('punit', 'm', 0);
model.study('std1').feature('fstat').setIndex('pname', 'lda0', 0);
model.study('std1').feature('fstat').setIndex('plistarr', 'range(875[nm],-10[nm],475[nm])', 0);

model.sol.create('sol1');

model.physics('semi').prop('ShapeProperty').setIndex('valueType', 'real', 0, 0);
model.physics('semi').prop('ShapeProperty').setIndex('valueType', 'real', 1, 0);
model.physics('semi').prop('ShapeProperty').setIndex('valueType', 'real', 2, 0);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'fstat');
model.sol('sol1').feature('st1').set('splitcomplex', 'on');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'fstat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 1.0E-6);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol1').feature('s1').feature('p1').set('control', 'fstat');
model.sol('sol1').feature('s1').set('control', 'fstat');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('assemtol', 0);
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').run;
model.result('pg1').label('Doping profile');
model.result('pg1').setIndex('looplevelinput', 'first', 0);
model.result('pg1').create('lngr1', 'LineGraph');
model.result('pg1').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg1').feature('lngr1').set('linewidth', 'preference');
model.result('pg1').feature('lngr1').selection.set([1]);
model.result('pg1').feature('lngr1').set('expr', 'semi.Nd-semi.Na');
model.result('pg1').feature('lngr1').set('unit', '1/cm^3');
model.result('pg1').feature('lngr1').set('xdata', 'reversedarc');
model.result('pg1').run;
model.result('pg1').set('xlabelactive', true);
model.result('pg1').set('xlabel', 'Depth (um)');
model.result('pg1').run;
model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').run;
model.result('pg2').label('Energy level diagram');
model.result('pg2').setIndex('looplevelinput', 'last', 0);
model.result('pg2').create('lngr1', 'LineGraph');
model.result('pg2').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg2').feature('lngr1').set('linewidth', 'preference');
model.result('pg2').feature('lngr1').selection.set([1]);
model.result('pg2').feature('lngr1').set('expr', 'semi.Ec_e');
model.result('pg2').feature('lngr1').set('unit', 'eV');
model.result('pg2').feature('lngr1').set('xdata', 'reversedarc');
model.result('pg2').feature('lngr1').set('legendmethod', 'manual');
model.result('pg2').feature('lngr1').setIndex('legends', 'Conduction band', 0);
model.result('pg2').feature('lngr1').set('legend', true);
model.result('pg2').feature('lngr1').label('Conduction band');
model.result('pg2').feature.duplicate('lngr2', 'lngr1');
model.result('pg2').run;
model.result('pg2').feature('lngr2').label('Electron Quasi-Fermi energy');
model.result('pg2').feature('lngr2').set('expr', 'semi.Efn_e');
model.result('pg2').feature('lngr2').setIndex('legends', 'Electron Fermi level', 0);
model.result('pg2').feature('lngr2').set('linestyle', 'dashed');
model.result('pg2').feature('lngr2').set('linecolor', 'blue');
model.result('pg2').run;
model.result('pg2').feature.duplicate('lngr3', 'lngr1');
model.result('pg2').run;
model.result('pg2').feature('lngr3').label('Valence band');
model.result('pg2').feature('lngr3').set('expr', 'semi.Ev_e');
model.result('pg2').feature('lngr3').set('linecolor', 'black');
model.result('pg2').feature('lngr3').setIndex('legends', 'Valence band', 0);
model.result('pg2').run;
model.result('pg2').feature.duplicate('lngr4', 'lngr2');
model.result('pg2').run;
model.result('pg2').feature('lngr4').set('expr', 'semi.Efp_e');
model.result('pg2').feature('lngr4').set('linecolor', 'black');
model.result('pg2').feature('lngr4').setIndex('legends', 'Hole Fermi level', 0);
model.result('pg2').run;
model.result('pg2').set('xlabelactive', true);
model.result('pg2').set('xlabel', 'Depth (um)');
model.result('pg2').set('ylabelactive', true);
model.result('pg2').set('ylabel', 'Energy (eV)');
model.result('pg2').set('titletype', 'manual');
model.result('pg2').set('title', 'Energy level diagram');
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('Current as a function of wavelength');
model.result('pg3').create('glob1', 'Global');
model.result('pg3').feature('glob1').set('markerpos', 'datapoints');
model.result('pg3').feature('glob1').set('linewidth', 'preference');
model.result('pg3').feature('glob1').setIndex('expr', 'abs(semi.I0_1)/Pin', 0);
model.result('pg3').feature('glob1').setIndex('unit', 'A/W', 0);
model.result('pg3').feature('glob1').setIndex('descr', 'Current / Optical Power', 0);
model.result('pg3').feature('glob1').set('xdataparamunit', 'nm');
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Electric field');
model.result('pg4').setIndex('looplevelinput', 'manual', 0);
model.result('pg4').setIndex('looplevel', [16], 0);
model.result('pg4').create('lngr1', 'LineGraph');
model.result('pg4').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg4').feature('lngr1').set('linewidth', 'preference');
model.result('pg4').feature('lngr1').selection.set([1]);
model.result('pg4').feature('lngr1').set('xdata', 'reversedarc');
model.result('pg4').run;
model.result('pg4').set('xlabelactive', true);
model.result('pg4').set('xlabel', 'Depth (um)');
model.result('pg4').set('ylabelactive', true);
model.result('pg4').set('ylabel', 'Electric field magnitude (V/m)');
model.result('pg4').run;
model.result.evaluationGroup.create('eg1', 'EvaluationGroup');
model.result.evaluationGroup('eg1').label('Evaluation Group 1 - check particle conservation');
model.result.evaluationGroup('eg1').setIndex('looplevelinput', 'manual', 0);
model.result.evaluationGroup('eg1').setIndex('looplevel', [16], 0);
model.result.evaluationGroup('eg1').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', '(1-abs(ewfd.S11)^2-abs(ewfd.S21)^2)*Pin/h_const/freq', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Absorption rate (port)', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'intop1(semi.ot1.G_stim-semi.ot1.R_spon)*d0', 1);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Absorption rate (optical transition)', 1);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'semi.I0_2/e_const', 2);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Charged particle arrival rate', 2);
model.result.evaluationGroup('eg1').run;
model.result.dataset.create('dset2', 'Solution');
model.result.dataset('dset2').label('Study 1: Extra dimension');
model.result.dataset('dset2').set('comp', 'semi_ot1_xdim');
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').label('Spontaneous emission');
model.result('pg5').set('data', 'dset2');
model.result('pg5').setIndex('looplevelinput', 'manual', 0);
model.result('pg5').setIndex('looplevel', [16], 0);
model.result('pg5').create('lngr1', 'LineGraph');
model.result('pg5').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg5').feature('lngr1').set('linewidth', 'preference');
model.result('pg5').feature('lngr1').selection.all;
model.result('pg5').feature('lngr1').set('expr', 'comp1.atxd2(0,0.5e-6,semi.ot1.dP_dE)');
model.result('pg5').feature('lngr1').set('descractive', true);
model.result('pg5').feature('lngr1').set('descr', 'Total emitted power per unit volume and unit energy');
model.result('pg5').feature('lngr1').set('xdata', 'expr');
model.result('pg5').feature('lngr1').set('xdataexpr', 'hbar_const*comp1.atxd2(0,0.5e-6,semi.ot1.omega)');
model.result('pg5').feature('lngr1').set('xdataunit', 'eV');
model.result('pg5').feature('lngr1').set('xdatadescractive', true);
model.result('pg5').feature('lngr1').set('xdatadescr', 'Photon energy');
model.result('pg5').run;
model.result('pg5').set('titletype', 'manual');
model.result('pg5').set('title', 'Spontaneous Emission');
model.result('pg5').run;

model.title('GaAs PIN Photodiode');

model.description('This example demonstrates how to use the Semiconductor Optoelectronics interfaces to model a simple GaAs PIN diode structure. Both the stimulated and spontaneous emission in the semiconductor are accounted for. The corresponding absorption of the light and the associated change in the complex refractive index are included in a self-consistent manner.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;

model.label('gaas_pin_photodiode.mph');

model.modelNode.label('Components');

out = model;
