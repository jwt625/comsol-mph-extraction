function out = model
%
% micromechanical_model_of_a_particulate_composite.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Structural_Mechanics_Module/Material_Models');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.param.label('Geometric Properties');
model.param.set('para', '0');
model.param.descr('para', 'Parameter');
model.param.set('L', '1[m]');
model.param.descr('L', 'Unit cell length');
model.param.set('dp', '0.4[m]');
model.param.descr('dp', 'Particle diameter');
model.param.create('par2');
model.param('par2').label('Material Properties');

% To import content from file, use:
% model.param('par2').loadFile('FILENAME');
model.param('par2').set('E_p', '230[GPa]', 'Young''s modulus of particle');
model.param('par2').set('nu_p', '0.2', 'Poisson''s ratio of particle');
model.param('par2').set('E_m', '10[GPa]', 'Young''s modulus of matrix');
model.param('par2').set('nu_m', '0.35', 'Poisson''s ratio of matrix');
model.param('par2').set('g1', '0.01', 'Deviatoric Prony series parameter of matrix, branch 1');
model.param('par2').set('g2', '0.05', 'Deviatoric Prony series parameter of matrix, branch 2');
model.param('par2').set('g3', '0.08', 'Deviatoric Prony series parameter of matrix, branch 3');
model.param('par2').set('Tau1', '0.01[s]', 'Relaxation time of matrix, branch 1');
model.param('par2').set('Tau2', '0.1[s]', 'Relaxation time of matrix, branch 2');
model.param('par2').set('Tau3', '1[s]', 'Relaxation time of matrix, branch 3');

model.geom.load({'part1'}, 'COMSOL_Multiphysics/Unit_Cells_and_RVEs/Particulate_Composites/particulate_primitive_cubic.mph', {'part1'});
model.geom('geom1').create('pi1', 'PartInstance');
model.geom('geom1').feature('pi1').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi1').set('part', 'part1');
model.geom('geom1').feature('pi1').label('Heterogeneous RUC');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'dp', 'dp');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'wm', 'L');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'dm', 'L');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'hm', 'L');
model.geom('geom1').run('fin');

model.view('view1').set('transparency', false);

model.geom('geom1').run('pi1');
model.geom('geom1').create('blk1', 'Block');
model.geom('geom1').feature('blk1').label('Homogeneous RUC');
model.geom('geom1').feature('blk1').set('size', {'L' 'L' 'L'});
model.geom('geom1').feature('blk1').set('pos', {'2*L' '0' '0'});
model.geom('geom1').run('blk1');
model.geom('geom1').run;

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').label('Matrix');
model.material('mat1').selection.named('geom1_pi1_dif1_dom');
model.material('mat1').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat1').propertyGroup('Enu').set('E', {'E_m'});
model.material('mat1').propertyGroup('Enu').set('nu', {'nu_m'});
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').label('Particulates');
model.material('mat2').selection.named('geom1_pi1_sph1_dom');
model.material('mat2').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat2').propertyGroup('Enu').set('E', {'E_p'});
model.material('mat2').propertyGroup('Enu').set('nu', {'nu_p'});

model.physics('solid').label('Solid Mechanics: Heterogeneous RUC');
model.physics('solid').selection.named('geom1_pi1_boxsel1');
model.physics('solid').prop('StructuralTransientBehavior').set('StructuralTransientBehavior', 'Quasistatic');
model.physics('solid').feature('lemm1').set('reducedIntegration', true);
model.physics('solid').create('cp1', 'CellPeriodicity', 3);
model.physics('solid').feature('cp1').label('Cell Periodicity for Elastic Properties');
model.physics('solid').feature('cp1').set('BoundaryExpansion', 'PrescribedStrain');
model.physics('solid').feature('cp1').set('EffectivePropertiese', 'ElasticityMatrixStandard');
model.physics('solid').feature('cp1').create('bp1', 'BoundaryPair', 2);
model.physics('solid').feature('cp1').feature('bp1').selection.set([]);
model.physics('solid').feature('cp1').feature('bp1').selection.named('geom1_pi1_unisel1');
model.physics('solid').feature('cp1').feature.duplicate('bp2', 'bp1');
model.physics('solid').feature('cp1').feature('bp2').selection.set([]);
model.physics('solid').feature('cp1').feature('bp2').selection.named('geom1_pi1_unisel2');
model.physics('solid').feature('cp1').feature.duplicate('bp3', 'bp2');
model.physics('solid').feature('cp1').feature('bp3').selection.set([]);
model.physics('solid').feature('cp1').feature('bp3').selection.named('geom1_pi1_unisel3');
model.physics('solid').feature('cp1').runCommand('createLoadGroupsandStudy');

model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.set([1 2 3]);
model.mesh('mesh1').feature('ftri1').create('size1', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size1').selection.geom('geom1');
model.mesh('mesh1').feature('ftri1').feature('size1').set('hauto', 3);
model.mesh('mesh1').feature('ftri1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('ftri1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('ftri1').feature('size1').set('hminactive', true);
model.mesh('mesh1').feature('ftri1').feature('size1').set('hgradactive', true);
model.mesh('mesh1').feature('ftri1').feature('size1').set('hcurveactive', true);
model.mesh('mesh1').feature('ftri1').feature('size1').set('hnarrowactive', true);
model.mesh('mesh1').run('ftri1');
model.mesh('mesh1').create('ftri2', 'FreeTri');
model.mesh('mesh1').feature('ftri2').selection.set([6 7 8 9 10 11 12 13]);
model.mesh('mesh1').feature('ftri2').create('size1', 'Size');
model.mesh('mesh1').feature('ftri2').feature('size1').selection.geom('geom1');
model.mesh('mesh1').feature('ftri2').feature('size1').set('hauto', 4);
model.mesh('mesh1').feature('ftri2').feature('size1').set('custom', true);
model.mesh('mesh1').feature('ftri2').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('ftri2').feature('size1').set('hmax', 0.07);
model.mesh('mesh1').feature('ftri2').feature('size1').set('hminactive', true);
model.mesh('mesh1').feature('ftri2').feature('size1').set('hmin', 0.05);
model.mesh('mesh1').feature('ftri2').feature('size1').set('hgradactive', true);
model.mesh('mesh1').feature('ftri2').feature('size1').set('hcurveactive', true);
model.mesh('mesh1').feature('ftri2').feature('size1').set('hnarrowactive', true);
model.mesh('mesh1').run('ftri2');
model.mesh('mesh1').create('id1', 'IdenticalMesh');
model.mesh('mesh1').feature('id1').selection('group1').named('geom1_pi1_sel1');
model.mesh('mesh1').feature('id1').selection('group2').named('geom1_pi1_sel2');
model.mesh('mesh1').create('id2', 'IdenticalMesh');
model.mesh('mesh1').feature('id2').selection('group1').named('geom1_pi1_sel3');
model.mesh('mesh1').feature('id2').selection('group2').named('geom1_pi1_sel4');
model.mesh('mesh1').create('id3', 'IdenticalMesh');
model.mesh('mesh1').feature('id3').selection('group1').named('geom1_pi1_sel5');
model.mesh('mesh1').feature('id3').selection('group2').named('geom1_pi1_sel6');
model.mesh('mesh1').run('id3');
model.mesh('mesh1').create('ftet1', 'FreeTet');
model.mesh('mesh1').feature('ftet1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('ftet1').selection.named('geom1_pi1_boxsel1');
model.mesh('mesh1').feature('ftet1').create('size1', 'Size');
model.mesh('mesh1').feature('ftet1').feature('size1').selection.geom('geom1');
model.mesh('mesh1').feature('ftet1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('ftet1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('ftet1').feature('size1').set('hminactive', true);
model.mesh('mesh1').feature('ftet1').feature('size1').set('hgradactive', true);
model.mesh('mesh1').feature('ftet1').feature('size1').set('hcurveactive', true);
model.mesh('mesh1').feature('ftet1').feature('size1').set('hcurve', 0.4);
model.mesh('mesh1').feature('ftet1').feature('size1').set('hnarrowactive', true);
model.mesh('mesh1').run;
model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.set([15]);
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([28 30]);
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 1);
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe1').selection.set([3]);
model.mesh('mesh1').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis1').set('numelem', 1);
model.mesh('mesh1').run;

model.study('solidcp1std').label('Cell Periodicity Study for Elastic Properties (Heterogeneous RUC)');

model.sol('solidcp1sol').study('solidcp1std');
model.sol('solidcp1sol').feature.remove('s1');
model.sol('solidcp1sol').feature.remove('v1');
model.sol('solidcp1sol').feature.remove('st1');
model.sol('solidcp1sol').create('st1', 'StudyStep');
model.sol('solidcp1sol').feature('st1').set('study', 'solidcp1std');
model.sol('solidcp1sol').feature('st1').set('studystep', 'solidcp1stat');
model.sol('solidcp1sol').create('v1', 'Variables');
model.sol('solidcp1sol').feature('v1').set('control', 'solidcp1stat');
model.sol('solidcp1sol').create('s1', 'Stationary');
model.sol('solidcp1sol').feature('s1').create('p1', 'Parametric');
model.sol('solidcp1sol').feature('s1').feature.remove('pDef');
model.sol('solidcp1sol').feature('s1').feature('p1').set('control', 'solidcp1stat');
model.sol('solidcp1sol').feature('s1').set('control', 'solidcp1stat');
model.sol('solidcp1sol').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('solidcp1sol').feature('s1').create('fc1', 'FullyCoupled');
model.sol('solidcp1sol').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('solidcp1sol').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('solidcp1sol').feature('s1').create('d1', 'Direct');
model.sol('solidcp1sol').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('solidcp1sol').feature('s1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('solidcp1sol').feature('s1').create('i1', 'Iterative');
model.sol('solidcp1sol').feature('s1').feature('i1').set('linsolver', 'fgmres');
model.sol('solidcp1sol').feature('s1').feature('i1').set('rhob', 400);
model.sol('solidcp1sol').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('solidcp1sol').feature('s1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('solidcp1sol').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('solidcp1sol').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('solidcp1sol').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('solidcp1sol').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('solidcp1sol').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('solidcp1sol').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('solidcp1sol').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('solidcp1sol').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('solidcp1sol').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('solidcp1sol').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('solidcp1sol').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('solidcp1sol').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('solidcp1sol').feature('s1').feature.remove('fcDef');
model.sol('solidcp1sol').attach('solidcp1std');
model.sol('solidcp1sol').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 6, 0);
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('vol1', 'Volume');
model.result('pg1').feature('vol1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('vol1').set('threshold', 'manual');
model.result('pg1').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg1').feature('vol1').set('colortable', 'Rainbow');
model.result('pg1').feature('vol1').set('colortabletrans', 'none');
model.result('pg1').feature('vol1').set('colorscalemode', 'linear');
model.result('pg1').feature('vol1').set('resolution', 'custom');
model.result('pg1').feature('vol1').set('refine', 2);
model.result('pg1').feature('vol1').set('colortable', 'Prism');
model.result('pg1').feature('vol1').create('def', 'Deform');
model.result('pg1').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg1').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result.evaluationGroup.create('solidcp1stdEg', 'EvaluationGroup');
model.result.evaluationGroup('solidcp1stdEg').set('defaultPlotID', 'homogenizedMaterialTablecp1');
model.result.evaluationGroup('solidcp1stdEg').set('data', 'dset1');
model.result.evaluationGroup('solidcp1stdEg').set('includeparameters', 'off');
model.result.evaluationGroup('solidcp1stdEg').setIndex('looplevelinput', 'last', 0);
model.result.evaluationGroup('solidcp1stdEg').label('Material Properties (Cell Periodicity Study for Elastic Properties (Heterogeneous RUC))');
model.result.evaluationGroup('solidcp1stdEg').create('gmevcp1', 'EvalGlobalMatrix');
model.result.evaluationGroup('solidcp1stdEg').feature('gmevcp1').set('expr', 'root.comp1.solid.cp1.D');
model.result.evaluationGroup('solidcp1stdEg').feature('gmevcp1').set('descr', 'Elasticity matrix');
model.result.evaluationGroup('solidcp1stdEg').run;
model.result('pg1').run;
model.result('pg1').label('Stress, Elastic Response');
model.result('pg1').selection.geom('geom1', 3);
model.result('pg1').selection.named('geom1_pi1_boxsel1');
model.result('pg1').set('applyselectiontodatasetedges', true);
model.result('pg1').set('titletype', 'manual');
model.result('pg1').set('title', 'von Mises stress (MPa)');
model.result('pg1').set('edges', false);
model.result('pg1').set('plotarrayenable', true);
model.result('pg1').feature('vol1').set('arraydim', '1');
model.result('pg1').run;
model.result('pg1').feature('vol1').set('unit', 'MPa');
model.result('pg1').feature('vol1').create('sel1', 'Selection');
model.result('pg1').feature('vol1').feature('sel1').selection.named('geom1_pi1_dif1_dom');
model.result('pg1').run;
model.result('pg1').feature('vol1').feature.remove('def');
model.result('pg1').run;
model.result('pg1').feature('vol1').set('arraydim', '1');
model.result('pg1').run;
model.result('pg1').feature.duplicate('vol2', 'vol1');
model.result('pg1').feature('vol2').set('arraydim', '1');
model.result('pg1').run;
model.result('pg1').feature('vol2').set('inheritplot', 'vol1');
model.result('pg1').feature('vol2').set('applytodatasetedgesplotarr', false);
model.result('pg1').run;
model.result('pg1').feature('vol2').feature('sel1').selection.set([]);
model.result('pg1').feature('vol2').feature('sel1').selection.named('geom1_pi1_sph1_dom');
model.result('pg1').run;
model.result('pg1').setIndex('looplevel', 1, 0);
model.result('pg1').set('paramindicator', 'Load case 1');
model.result('pg1').run;
model.result('pg1').setIndex('looplevel', 4, 0);
model.result('pg1').set('paramindicator', 'Load case 4');
model.result('pg1').run;

model.physics('solid').feature('cp1').runCommand('createMaterialbyValue');

model.func.create('step1', 'Step');
model.func('step1').set('funcname', 'strainFunction');
model.func('step1').set('location', '5e-4[s]');
model.func('step1').set('smooth', '1e-3[s]');

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').label('Variables: Heterogeneous RUC');
model.variable('var1').set('G_m', 'E_m/(2*(1+nu_m))');
model.variable('var1').descr('G_m', 'Shear modulus of matrix');
model.variable('var1').set('sum_g', 'g1+g2+g3');
model.variable('var1').descr('sum_g', 'Sum of weights');
model.variable('var1').set('G_m0', 'G_m/(1-sum_g)');
model.variable('var1').descr('G_m0', 'Instantaneous shear modulus of matrix');

model.physics('solid').feature('lemm1').create('vis1', 'Viscoelasticity', 3);
model.physics('solid').feature('lemm1').feature('vis1').selection.named('geom1_pi1_dif1_dom');
model.physics('solid').feature('lemm1').feature('vis1').setIndex('Gvm', 0, 1, 0);
model.physics('solid').feature('lemm1').feature('vis1').setIndex('tauvm', 0, 1, 0);
model.physics('solid').feature('lemm1').feature('vis1').setIndex('tauvm', 0, 1, 0);
model.physics('solid').feature('lemm1').feature('vis1').setIndex('Gvm', 0, 1, 0);
model.physics('solid').feature('lemm1').feature('vis1').setIndex('tauvm', 0, 1, 0);
model.physics('solid').feature('lemm1').feature('vis1').setIndex('Gvm', 0, 2, 0);
model.physics('solid').feature('lemm1').feature('vis1').setIndex('tauvm', 0, 2, 0);
model.physics('solid').feature('lemm1').feature('vis1').setIndex('tauvm', 0, 2, 0);
model.physics('solid').feature('lemm1').feature('vis1').setIndex('Gvm', 0, 2, 0);
model.physics('solid').feature('lemm1').feature('vis1').setIndex('tauvm', 0, 2, 0);
model.physics('solid').feature('lemm1').feature('vis1').setIndex('Gvm', 'G_m0*g1', 0, 0);
model.physics('solid').feature('lemm1').feature('vis1').setIndex('tauvm', 'Tau1', 0, 0);
model.physics('solid').feature('lemm1').feature('vis1').setIndex('Gvm', 'G_m0*g2', 1, 0);
model.physics('solid').feature('lemm1').feature('vis1').setIndex('tauvm', 'Tau2', 1, 0);
model.physics('solid').feature('lemm1').feature('vis1').setIndex('Gvm', 'G_m0*g3', 2, 0);
model.physics('solid').feature('lemm1').feature('vis1').setIndex('tauvm', 'Tau3', 2, 0);
model.physics('solid').feature.duplicate('cp2', 'cp1');
model.physics('solid').feature('cp2').label('Cell Periodicity for Viscoelastic Properties');
model.physics('solid').feature('cp2').set('EffectivePropertiese', 'None');
model.physics('solid').feature('cp2').set('eavgi', {'(para==1)*strainFunction(t)' '(para==2)*0.5*strainFunction(t)' '0' '(para==2)*0.5*strainFunction(t)' '0' '0' '0' '0' '0'});

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/solid', true);
model.study('std1').label('Transient Study for Viscoelastic Response (Heterogeneous RUC)');
model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'dp', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);
model.study('std1').feature('param').setIndex('pname', 'dp', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);
model.study('std1').feature('param').setIndex('pname', 'para', 0);
model.study('std1').feature('param').setIndex('plistarr', 'range(1,1,2)', 0);
model.study('std1').feature('param').setIndex('punit', '', 0);
model.study('std1').feature('time').set('tlist', 'range(0,0.5e-4,9.5e-4) 10^{range(-3,0.1,1.5)}');
model.study('std1').feature('time').set('useadvanceddisable', true);
model.study('std1').feature('time').set('disabledphysics', {'solid/cp1'});

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*3.3166247903554');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.5e-4,9.5e-4) 10^{range(-3,0.1,1.5)}');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'pg1');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'mumps');
model.sol('sol1').feature('t1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'fgmres');
model.sol('sol1').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', true);
model.sol('sol1').feature('t1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'para'});
model.batch('p1').set('plistarr', {'range(1,1,2)'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol('sol1').feature('t1').set('initialstepbdfactive', true);
model.sol('sol1').feature('t1').set('initialstepbdf', '5e-7');
model.sol('sol1').feature('t1').set('storeudot', false);
model.sol.create('sol2');
model.sol('sol2').study('std1');
model.sol('sol2').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').run('compute');

model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'dset3');
model.result('pg2').setIndex('looplevel', 66, 0);
model.result('pg2').setIndex('looplevel', 2, 1);
model.result('pg2').set('defaultPlotID', 'stress');
model.result('pg2').label('Stress (solid)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').create('vol1', 'Volume');
model.result('pg2').feature('vol1').set('expr', {'solid.misesGp'});
model.result('pg2').feature('vol1').set('threshold', 'manual');
model.result('pg2').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg2').feature('vol1').set('colortable', 'Rainbow');
model.result('pg2').feature('vol1').set('colortabletrans', 'none');
model.result('pg2').feature('vol1').set('colorscalemode', 'linear');
model.result('pg2').feature('vol1').set('resolution', 'custom');
model.result('pg2').feature('vol1').set('refine', 2);
model.result('pg2').feature('vol1').set('colortable', 'Prism');
model.result('pg2').feature('vol1').create('def', 'Deform');
model.result('pg2').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg2').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result('pg2').set('applyselectiontodatasetedges', false);
model.result('pg2').run;
model.result('pg2').label('Stress, Viscoelastic Response');
model.result('pg2').selection.geom('geom1', 3);
model.result('pg2').selection.named('geom1_pi1_boxsel1');
model.result('pg2').set('applyselectiontodatasetedges', true);
model.result('pg2').set('titletype', 'manual');
model.result('pg2').set('title', 'von Mises stress (MPa)');
model.result('pg2').set('edges', false);
model.result('pg2').set('plotarrayenable', true);
model.result('pg2').feature('vol1').set('arraydim', '1');
model.result('pg2').run;
model.result('pg2').feature('vol1').set('unit', 'MPa');
model.result('pg2').feature('vol1').create('sel1', 'Selection');
model.result('pg2').feature('vol1').feature('sel1').selection.named('geom1_pi1_dif1_dom');
model.result('pg2').run;
model.result('pg2').feature('vol1').feature.remove('def');
model.result('pg2').run;
model.result('pg2').feature('vol1').set('arraydim', '1');
model.result('pg2').run;
model.result('pg2').feature.duplicate('vol2', 'vol1');
model.result('pg2').feature('vol2').set('arraydim', '1');
model.result('pg2').run;
model.result('pg2').feature('vol2').set('inheritplot', 'vol1');
model.result('pg2').feature('vol2').set('applytodatasetedgesplotarr', false);
model.result('pg2').run;
model.result('pg2').feature('vol2').feature('sel1').selection.set([]);
model.result('pg2').feature('vol2').feature('sel1').selection.named('geom1_pi1_sph1_dom');
model.result('pg2').run;
model.result('pg2').setIndex('looplevel', 1, 1);
model.result('pg2').set('paramindicator', 'para(2)=1 Time=31.623 s');
model.result('pg2').run;
model.result('pg2').setIndex('looplevel', 2, 1);
model.result('pg2').set('paramindicator', 'para(2)=2 Time=31.623 s');
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('Average Normal and Shear Stresses');
model.result('pg3').set('data', 'dset3');
model.result('pg3').set('ylabelactive', true);
model.result('pg3').set('ylabel', 'Average stress (N/m<sup>2</sup>)');
model.result('pg3').set('titletype', 'manual');
model.result('pg3').set('title', 'Global: Average stress (N/m<sup>2</sup>)');
model.result('pg3').set('xlog', true);
model.result('pg3').set('legendpos', 'lowerright');
model.result('pg3').create('glob1', 'Global');
model.result('pg3').feature('glob1').set('markerpos', 'datapoints');
model.result('pg3').feature('glob1').set('linewidth', 'preference');
model.result('pg3').feature('glob1').set('data', 'dset3');
model.result('pg3').feature('glob1').setIndex('looplevelinput', 'first', 1);
model.result('pg3').feature('glob1').setIndex('expr', 'solid.cp2.savgXX', 0);
model.result('pg3').feature('glob1').setIndex('unit', 'N/m^2', 0);
model.result('pg3').feature('glob1').setIndex('descr', 'Average stress, XX direction', 0);
model.result('pg3').feature('glob1').set('legendmethod', 'manual');
model.result('pg3').feature('glob1').setIndex('legends', 'Average normal stress', 0);
model.result('pg3').feature.duplicate('glob2', 'glob1');
model.result('pg3').run;
model.result('pg3').feature('glob2').setIndex('looplevelinput', 'last', 1);
model.result('pg3').feature('glob2').setIndex('expr', 'solid.cp2.savgXY', 0);
model.result('pg3').feature('glob2').setIndex('unit', 'N/m^2', 0);
model.result('pg3').feature('glob2').setIndex('descr', 'Average stress, XY direction', 0);
model.result('pg3').feature('glob2').setIndex('legends', 'Average shear stress', 0);
model.result('pg3').run;
model.result.evaluationGroup.create('eg1', 'EvaluationGroup');
model.result.evaluationGroup('eg1').label('Evaluation Group: Normal Stress Response');
model.result.evaluationGroup('eg1').set('data', 'dset3');
model.result.evaluationGroup('eg1').setIndex('looplevelinput', 'first', 1);
model.result.evaluationGroup('eg1').setIndex('looplevelinput', 'manualindices', 0);
model.result.evaluationGroup('eg1').setIndex('looplevelindices', 'range(21,1,61)', 0);
model.result.evaluationGroup('eg1').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 't', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 's', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Time', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'solid.cp2.savgXX', 1);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'N/m^2', 1);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Average stress, XX component', 1);
model.result.evaluationGroup('eg1').set('includeparameters', false);
model.result.evaluationGroup('eg1').run;
model.result.evaluationGroup.create('eg2', 'EvaluationGroup');
model.result.evaluationGroup('eg2').label('Evaluation Group: Shear Stress Response');
model.result.evaluationGroup('eg2').set('data', 'dset3');
model.result.evaluationGroup('eg2').setIndex('looplevelinput', 'last', 1);
model.result.evaluationGroup('eg2').setIndex('looplevelinput', 'manualindices', 0);
model.result.evaluationGroup('eg2').setIndex('looplevelindices', 'range(21,1,61)', 0);
model.result.evaluationGroup('eg2').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg2').feature('gev1').setIndex('expr', 't', 0);
model.result.evaluationGroup('eg2').feature('gev1').setIndex('unit', 's', 0);
model.result.evaluationGroup('eg2').feature('gev1').setIndex('descr', 'Time', 0);
model.result.evaluationGroup('eg2').feature('gev1').setIndex('expr', 'solid.cp2.savgXY', 1);
model.result.evaluationGroup('eg2').feature('gev1').setIndex('unit', 'N/m^2', 1);
model.result.evaluationGroup('eg2').feature('gev1').setIndex('descr', 'Average stress, XY component', 1);
model.result.evaluationGroup('eg2').set('includeparameters', false);
model.result.evaluationGroup('eg2').run;
model.result('pg1').run;

model.nodeGroup.create('grp1', 'Results');
model.nodeGroup('grp1').add('plotgroup', 'pg1');
model.nodeGroup('grp1').add('plotgroup', 'pg2');
model.nodeGroup('grp1').add('plotgroup', 'pg3');
model.nodeGroup('grp1').add('evaluationgroup', 'eg1');
model.nodeGroup('grp1').add('evaluationgroup', 'eg2');
model.nodeGroup('grp1').label('Heterogeneous RUC');

model.param.create('par3');
model.param('par3').label('Optimization Parameters');
model.param('par3').set('gg1', '0');
model.param('par3').descr('gg1', 'Deviatoric Prony series parameter of homogenized material, branch 1');
model.param('par3').set('gg2', '0');
model.param('par3').descr('gg2', 'Deviatoric Prony series parameter of homogenized material, branch 2');
model.param('par3').set('gg3', '0');
model.param('par3').descr('gg3', 'Deviatoric Prony series parameter of homogenized material, branch 3');
model.param('par3').set('kg1', '0');
model.param('par3').descr('kg1', 'Volumetric Prony series parameter of homogenized material, branch 1');
model.param('par3').set('kg2', '0');
model.param('par3').descr('kg2', 'Volumetric Prony series parameter of homogenized material, branch 2');
model.param('par3').set('kg3', '0');
model.param('par3').descr('kg3', 'Volumetric Prony series parameter of homogenized material, branch 3');

model.variable.create('var2');
model.variable('var2').model('comp1');
model.variable('var2').label('Variables: Homogenized material');
model.variable('var2').set('G_H', 'solid2.D66');
model.variable('var2').descr('G_H', 'Shear modulus of homogenized material');
model.variable('var2').set('K_H', 'solid2.D11-4*G_H/3');
model.variable('var2').descr('K_H', 'Bulk modulus of homogenized material');
model.variable('var2').set('sum_gH', 'gg1+gg2+gg3');
model.variable('var2').descr('sum_gH', 'Sum of weights');
model.variable('var2').set('sum_kH', 'kg1+kg2+kg3');
model.variable('var2').descr('sum_kH', 'Sum of weights');
model.variable('var2').set('G_H0', 'G_H/(1-sum_gH)');
model.variable('var2').descr('G_H0', 'Instantaneous shear modulus of homogenized material');
model.variable('var2').set('K_H0', 'K_H/(1-sum_kH)');
model.variable('var2').descr('K_H0', 'Instantaneous bulk modulus of homogenized material');

model.material.create('matlnk1', 'Link', 'comp1');
model.material('matlnk1').label('Homogeneous Material');
model.material('matlnk1').selection.set([3]);

model.physics.create('solid2', 'SolidMechanics', 'geom1');
model.physics('solid2').model('comp1');

model.study('solidcp1std').feature('solidcp1stat').setSolveFor('/physics/solid2', true);
model.study('std1').feature('time').setSolveFor('/physics/solid2', true);

model.physics('solid2').label('Solid Mechanics: Homogeneous RUC');
model.physics('solid2').selection.set([3]);
model.physics('solid2').prop('StructuralTransientBehavior').set('StructuralTransientBehavior', 'Quasistatic');
model.physics('solid2').prop('ShapeProperty').set('order_displacement', 1);
model.physics('solid2').feature('lemm1').set('SolidModel', 'Anisotropic');
model.physics('solid2').feature('lemm1').create('vis1', 'Viscoelasticity', 3);
model.physics('solid2').feature('lemm1').feature('vis1').setIndex('Gvm', 0, 1, 0);
model.physics('solid2').feature('lemm1').feature('vis1').setIndex('tauvm', 0, 1, 0);
model.physics('solid2').feature('lemm1').feature('vis1').setIndex('tauvm', 0, 1, 0);
model.physics('solid2').feature('lemm1').feature('vis1').setIndex('Gvm', 0, 1, 0);
model.physics('solid2').feature('lemm1').feature('vis1').setIndex('tauvm', 0, 1, 0);
model.physics('solid2').feature('lemm1').feature('vis1').setIndex('Gvm', 0, 2, 0);
model.physics('solid2').feature('lemm1').feature('vis1').setIndex('tauvm', 0, 2, 0);
model.physics('solid2').feature('lemm1').feature('vis1').setIndex('tauvm', 0, 2, 0);
model.physics('solid2').feature('lemm1').feature('vis1').setIndex('Gvm', 0, 2, 0);
model.physics('solid2').feature('lemm1').feature('vis1').setIndex('tauvm', 0, 2, 0);
model.physics('solid2').feature('lemm1').feature('vis1').setIndex('Gvm', 'G_H0*gg1', 0, 0);
model.physics('solid2').feature('lemm1').feature('vis1').setIndex('tauvm', 'Tau1', 0, 0);
model.physics('solid2').feature('lemm1').feature('vis1').setIndex('Gvm', 'G_H0*gg2', 1, 0);
model.physics('solid2').feature('lemm1').feature('vis1').setIndex('tauvm', 'Tau2', 1, 0);
model.physics('solid2').feature('lemm1').feature('vis1').setIndex('Gvm', 'G_H0*gg3', 2, 0);
model.physics('solid2').feature('lemm1').feature('vis1').setIndex('tauvm', 'Tau3', 2, 0);
model.physics('solid2').create('cp1', 'CellPeriodicity', 3);
model.physics('solid2').feature('cp1').label('Cell Periodicity: Shear Strain Loading');
model.physics('solid2').feature('cp1').set('BoundaryExpansion', 'PrescribedStrain');
model.physics('solid2').feature('cp1').set('eavgi', {'0' '0.5*strainFunction(t)' '0' '0.5*strainFunction(t)' '0' '0' '0' '0' '0'});
model.physics('solid2').feature('cp1').create('bp1', 'BoundaryPair', 2);
model.physics('solid2').feature('cp1').feature('bp1').selection.set([15 20]);
model.physics('solid2').feature('cp1').feature.duplicate('bp2', 'bp1');
model.physics('solid2').feature('cp1').feature('bp2').selection.set([16 19]);
model.physics('solid2').feature('cp1').feature.duplicate('bp3', 'bp2');
model.physics('solid2').feature('cp1').feature('bp3').selection.set([17 18]);

model.common.create('glso1', 'GlobalLeastSquaresObjective', 'comp1');
model.common('glso1').label('Shear Stress Response');
model.common('glso1').set('source', 'resultTable');
model.common('glso1').set('resultTable', 'evalGroup:eg2');
model.common('glso1').setEntry('modelExpression', 'col2', 'comp1.solid2.cp1.savgXY');
model.common('glso1').setEntry('variableName', 'col2', 'shear_stress');
model.common('glso1').setEntry('unit', 'col2', 'N/m^2');

model.study.create('std2');
model.study('std2').create('time', 'Transient');
model.study('std2').feature('time').setSolveFor('/physics/solid', true);
model.study('std2').feature('time').setSolveFor('/physics/solid2', true);
model.study('std2').label('Deviatoric Prony Series Parameter Estimation (Homogeneous RUC)');
model.study('std2').setGenPlots(false);
model.study('std2').create('lsqo', 'LSQOptimization');
model.study('std2').feature('lsqo').set('source', 'none');
model.study('std2').feature('lsqo').setIndex('objectiveActive', true, 0);
model.study('std2').feature('lsqo').setIndex('pname', 'dp', 0);
model.study('std2').feature('lsqo').setIndex('initval', '0.4[m]', 0);
model.study('std2').feature('lsqo').setIndex('scale', 1, 0);
model.study('std2').feature('lsqo').setIndex('lbound', '', 0);
model.study('std2').feature('lsqo').setIndex('ubound', '', 0);
model.study('std2').feature('lsqo').setIndex('pname', 'dp', 0);
model.study('std2').feature('lsqo').setIndex('initval', '0.4[m]', 0);
model.study('std2').feature('lsqo').setIndex('scale', 1, 0);
model.study('std2').feature('lsqo').setIndex('lbound', '', 0);
model.study('std2').feature('lsqo').setIndex('ubound', '', 0);
model.study('std2').feature('lsqo').setIndex('pname', 'E_m', 1);
model.study('std2').feature('lsqo').setIndex('initval', '10[GPa]', 1);
model.study('std2').feature('lsqo').setIndex('scale', 1, 1);
model.study('std2').feature('lsqo').setIndex('lbound', '', 1);
model.study('std2').feature('lsqo').setIndex('ubound', '', 1);
model.study('std2').feature('lsqo').setIndex('pname', 'E_m', 1);
model.study('std2').feature('lsqo').setIndex('initval', '10[GPa]', 1);
model.study('std2').feature('lsqo').setIndex('scale', 1, 1);
model.study('std2').feature('lsqo').setIndex('lbound', '', 1);
model.study('std2').feature('lsqo').setIndex('ubound', '', 1);
model.study('std2').feature('lsqo').setIndex('pname', 'E_p', 2);
model.study('std2').feature('lsqo').setIndex('initval', '230[GPa]', 2);
model.study('std2').feature('lsqo').setIndex('scale', 1, 2);
model.study('std2').feature('lsqo').setIndex('lbound', '', 2);
model.study('std2').feature('lsqo').setIndex('ubound', '', 2);
model.study('std2').feature('lsqo').setIndex('pname', 'E_p', 2);
model.study('std2').feature('lsqo').setIndex('initval', '230[GPa]', 2);
model.study('std2').feature('lsqo').setIndex('scale', 1, 2);
model.study('std2').feature('lsqo').setIndex('lbound', '', 2);
model.study('std2').feature('lsqo').setIndex('ubound', '', 2);
model.study('std2').feature('lsqo').setIndex('pname', 'gg1', 0);
model.study('std2').feature('lsqo').setIndex('initval', 'g1', 0);
model.study('std2').feature('lsqo').setIndex('scale', 0.1, 0);
model.study('std2').feature('lsqo').setIndex('lbound', 0, 0);
model.study('std2').feature('lsqo').setIndex('ubound', 1, 0);
model.study('std2').feature('lsqo').setIndex('pname', 'gg2', 1);
model.study('std2').feature('lsqo').setIndex('initval', 'g2', 1);
model.study('std2').feature('lsqo').setIndex('scale', 0.1, 1);
model.study('std2').feature('lsqo').setIndex('lbound', 0, 1);
model.study('std2').feature('lsqo').setIndex('ubound', 1, 1);
model.study('std2').feature('lsqo').setIndex('pname', 'gg3', 2);
model.study('std2').feature('lsqo').setIndex('initval', 'g3', 2);
model.study('std2').feature('lsqo').setIndex('scale', 0.1, 2);
model.study('std2').feature('lsqo').setIndex('lbound', 0, 2);
model.study('std2').feature('lsqo').setIndex('ubound', 1, 2);
model.study('std2').feature('lsqo').set('lsqdatamethod', 'lsq');
model.study('std2').feature('time').set('useadvanceddisable', true);
model.study('std2').feature('time').setSolveFor('/physics/solid', false);
model.study('std2').feature('time').set('disabledphysics', {'solid'});

model.sol.create('sol5');
model.sol('sol5').study('std2');

model.study('std2').feature('lsqo').set('lsqmessage', {});

model.sol('sol5').create('st1', 'StudyStep');
model.sol('sol5').feature('st1').set('study', 'std2');
model.sol('sol5').feature('st1').set('studystep', 'time');
model.sol('sol5').create('v1', 'Variables');
model.sol('sol5').feature('v1').feature('comp1_u2').set('scalemethod', 'manual');
model.sol('sol5').feature('v1').feature('comp1_u2').set('scaleval', '1e-2*3.3166247903554');
model.sol('sol5').feature('v1').set('control', 'time');
model.sol('sol5').create('o1', 'Optimization');
model.sol('sol5').feature('o1').set('gradientlm', 'numeric');
model.sol('sol5').feature('o1').set('diffint', 1.0E-6);
model.sol('sol5').feature('o1').set('control', 'lsqo');
model.sol('sol5').feature('o1').create('t1', 'TimeAttrib');
model.sol('sol5').feature('o1').feature('t1').set('rtol', 0.001);
model.sol('sol5').feature('o1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol5').feature('o1').feature('t1').set('reacf', true);
model.sol('sol5').feature('o1').feature('t1').set('storeudot', true);
model.sol('sol5').feature('o1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol5').feature('o1').feature('t1').set('control', 'time');
model.sol('sol5').feature('o1').feature('t1').set('tlistlsq', [0.001 0.0012589254117941675 0.001584893192461114 0.001995262314968879 0.0025118864315095794 0.0031622776601683794 0.003981071705534973 0.005011872336272725 0.00630957344480193 0.007943282347242814 0.01 0.012589254117941675 0.01584893192461114 0.0199526231496888 0.025118864315095808 0.03162277660168379 0.039810717055349734 0.05011872336272725 0.06309573444801933 0.07943282347242818 0.1 0.12589254117941676 0.15848931924611143 0.19952623149688808 0.25118864315095824 0.31622776601683794 0.3981071705534973 0.5011872336272725 0.6309573444801936 0.7943282347242822 1 1.2589254117941675 1.584893192461114 1.9952623149688808 2.5118864315095824 3.1622776601683795 3.981071705534973 5.011872336272725 6.309573444801936 7.943282347242821 10]);
model.sol('sol5').feature('o1').feature('t1').set('lsqtimesout', ['   0.00100' newline '   0.00126' newline '   0.00158' newline '   0.00200' newline '   0.00251' newline '   0.00316' newline '   0.00398' newline '   0.00501' newline '   0.00631' newline '   0.00794' newline '    0.0100' newline '    0.0126' newline '    0.0158' newline '    0.0200' newline '    0.0251' newline '    0.0316' newline '    0.0398' newline '    0.0501' newline '    0.0631' newline '    0.0794' newline '     0.100' newline '     0.126' newline '     0.158' newline '     0.200' newline '     0.251' newline '     0.316' newline '     0.398' newline '     0.501' newline '     0.631' newline '     0.794' newline '      1.00' newline '      1.26' newline '      1.58' newline '      2.00' newline '      2.51' newline '      3.16' newline '      3.98' newline '      5.01' newline '      6.31' newline '      7.94' newline '      10.0' newline ]);
model.sol('sol5').feature('o1').feature('t1').set('tout', 'tlist');
model.sol('sol5').feature('o1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol5').feature('o1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol5').feature('o1').feature('t1').create('d1', 'Direct');
model.sol('sol5').feature('o1').feature('t1').feature('d1').set('linsolver', 'mumps');
model.sol('sol5').feature('o1').feature('t1').feature('d1').label('Suggested Direct Solver (solid2)');
model.sol('sol5').feature('o1').feature('t1').create('i1', 'Iterative');
model.sol('sol5').feature('o1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol5').feature('o1').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol5').feature('o1').feature('t1').feature('i1').set('nlinnormuse', true);
model.sol('sol5').feature('o1').feature('t1').feature('i1').label('Suggested Iterative Solver (GMRES with SA AMG) (solid2)');
model.sol('sol5').feature('o1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol5').feature('o1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol5').feature('o1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol5').feature('o1').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol5').feature('o1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol5').feature('o1').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol5').feature('o1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol5').feature('o1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol5').feature('o1').feature('t1').feature.remove('fcDef');
model.sol('sol5').attach('std2');
model.sol('sol5').feature('o1').feature('t1').set('tstepsbdf', 'strict');
model.sol('sol5').feature('o1').feature('t1').set('initialstepbdfactive', true);
model.sol('sol5').feature('o1').feature('t1').set('initialstepbdf', '5e-5');
model.sol('sol5').feature('o1').feature('t1').set('storeudot', false);
model.sol('sol5').runAll;

model.study('std2').feature('lsqo').set('probewindow', '');

model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Average Shear Stress');
model.result('pg4').set('data', 'dset4');
model.result('pg4').set('ylabelactive', true);
model.result('pg4').set('ylabel', 'Average shear stress (N/m<sup>2</sup>)');
model.result('pg4').set('titletype', 'manual');
model.result('pg4').set('title', 'Global: Average shear stress (N/m<sup>2</sup>)');
model.result('pg4').set('xlog', true);
model.result('pg4').create('glob1', 'Global');
model.result('pg4').feature('glob1').set('markerpos', 'datapoints');
model.result('pg4').feature('glob1').set('linewidth', 'preference');
model.result('pg4').feature('glob1').setIndex('expr', 'solid2.cp1.savgXY', 0);
model.result('pg4').feature('glob1').setIndex('unit', 'N/m^2', 0);
model.result('pg4').feature('glob1').setIndex('descr', 'Average stress, XY direction', 0);
model.result('pg4').feature('glob1').set('legendmethod', 'manual');
model.result('pg4').feature('glob1').setIndex('legends', 'Homogenized material model', 0);
model.result('pg4').run;
model.result('pg4').create('tblp1', 'Table');
model.result('pg4').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg4').feature('tblp1').set('linewidth', 'preference');
model.result('pg4').feature('tblp1').set('source', 'evaluationgroup');
model.result('pg4').feature('tblp1').set('evaluationgroup', 'eg2');
model.result('pg4').feature('tblp1').set('linestyle', 'none');
model.result('pg4').feature('tblp1').set('linemarker', 'point');
model.result('pg4').feature('tblp1').set('legend', true);
model.result('pg4').feature('tblp1').set('legendmethod', 'manual');
model.result('pg4').feature('tblp1').setIndex('legends', 'Heterogeneous RUC', 0);
model.result('pg4').run;

model.physics('solid2').feature('lemm1').feature.duplicate('vis2', 'vis1');
model.physics('solid2').feature('lemm1').feature('vis2').set('deformationModel', 'full');
model.physics('solid2').feature('lemm1').feature('vis2').setIndex('Kvm_f', 0, 1, 0);
model.physics('solid2').feature('lemm1').feature('vis2').setIndex('Gvm_f', 0, 1, 0);
model.physics('solid2').feature('lemm1').feature('vis2').setIndex('tauvm_f', 0, 1, 0);
model.physics('solid2').feature('lemm1').feature('vis2').setIndex('Gvm_f', 0, 1, 0);
model.physics('solid2').feature('lemm1').feature('vis2').setIndex('tauvm_f', 0, 1, 0);
model.physics('solid2').feature('lemm1').feature('vis2').setIndex('Kvm_f', 0, 1, 0);
model.physics('solid2').feature('lemm1').feature('vis2').setIndex('Gvm_f', 0, 1, 0);
model.physics('solid2').feature('lemm1').feature('vis2').setIndex('tauvm_f', 0, 1, 0);
model.physics('solid2').feature('lemm1').feature('vis2').setIndex('Kvm_f', 0, 2, 0);
model.physics('solid2').feature('lemm1').feature('vis2').setIndex('Gvm_f', 0, 2, 0);
model.physics('solid2').feature('lemm1').feature('vis2').setIndex('tauvm_f', 0, 2, 0);
model.physics('solid2').feature('lemm1').feature('vis2').setIndex('Gvm_f', 0, 2, 0);
model.physics('solid2').feature('lemm1').feature('vis2').setIndex('tauvm_f', 0, 2, 0);
model.physics('solid2').feature('lemm1').feature('vis2').setIndex('Kvm_f', 0, 2, 0);
model.physics('solid2').feature('lemm1').feature('vis2').setIndex('Gvm_f', 0, 2, 0);
model.physics('solid2').feature('lemm1').feature('vis2').setIndex('tauvm_f', 0, 2, 0);
model.physics('solid2').feature('lemm1').feature('vis2').setIndex('Kvm_f', 'K_H0*kg1', 0, 0);
model.physics('solid2').feature('lemm1').feature('vis2').setIndex('Gvm_f', 'G_H0*withsol(''sol5'',gg1)', 0, 0);
model.physics('solid2').feature('lemm1').feature('vis2').setIndex('tauvm_f', 'Tau1', 0, 0);
model.physics('solid2').feature('lemm1').feature('vis2').setIndex('Kvm_f', 'K_H0*kg2', 1, 0);
model.physics('solid2').feature('lemm1').feature('vis2').setIndex('Gvm_f', 'G_H0*withsol(''sol5'',gg2)', 1, 0);
model.physics('solid2').feature('lemm1').feature('vis2').setIndex('tauvm_f', 'Tau2', 1, 0);
model.physics('solid2').feature('lemm1').feature('vis2').setIndex('Kvm_f', 'K_H0*kg3', 2, 0);
model.physics('solid2').feature('lemm1').feature('vis2').setIndex('Gvm_f', 'G_H0*withsol(''sol5'',gg3)', 2, 0);
model.physics('solid2').feature('lemm1').feature('vis2').setIndex('tauvm_f', 'Tau3', 2, 0);
model.physics('solid2').feature.duplicate('cp2', 'cp1');
model.physics('solid2').feature('cp2').label('Cell Periodicity: Normal Strain Loading');
model.physics('solid2').feature('cp2').set('eavgi', {'strainFunction(t)' '0' '0' '0' '0' '0' '0' '0' '0'});

model.common.create('glso2', 'GlobalLeastSquaresObjective', 'comp1');
model.common('glso2').label('Normal Stress Response');
model.common('glso2').set('source', 'resultTable');
model.common('glso2').set('resultTable', 'evalGroup:eg1');
model.common('glso2').setEntry('modelExpression', 'col2', 'comp1.solid2.cp2.savgXX');
model.common('glso2').setEntry('variableName', 'col2', 'normal_stress');
model.common('glso2').setEntry('unit', 'col2', 'N/m^2');

model.study.create('std3');
model.study('std3').create('time', 'Transient');
model.study('std3').feature('time').setSolveFor('/physics/solid', true);
model.study('std3').feature('time').setSolveFor('/physics/solid2', true);
model.study('std3').label('Volumetric Prony Series Parameter Estimation (Homogeneous RUC)');
model.study('std3').setGenPlots(false);
model.study('std3').create('lsqo', 'LSQOptimization');
model.study('std3').feature('lsqo').set('source', 'none');
model.study('std3').feature('lsqo').setIndex('objectiveActive', false, 0);
model.study('std3').feature('lsqo').setIndex('objectiveActive', true, 1);
model.study('std3').feature('lsqo').setIndex('pname', 'dp', 0);
model.study('std3').feature('lsqo').setIndex('initval', '0.4[m]', 0);
model.study('std3').feature('lsqo').setIndex('scale', 1, 0);
model.study('std3').feature('lsqo').setIndex('lbound', '', 0);
model.study('std3').feature('lsqo').setIndex('ubound', '', 0);
model.study('std3').feature('lsqo').setIndex('pname', 'dp', 0);
model.study('std3').feature('lsqo').setIndex('initval', '0.4[m]', 0);
model.study('std3').feature('lsqo').setIndex('scale', 1, 0);
model.study('std3').feature('lsqo').setIndex('lbound', '', 0);
model.study('std3').feature('lsqo').setIndex('ubound', '', 0);
model.study('std3').feature('lsqo').setIndex('pname', 'E_m', 1);
model.study('std3').feature('lsqo').setIndex('initval', '10[GPa]', 1);
model.study('std3').feature('lsqo').setIndex('scale', 1, 1);
model.study('std3').feature('lsqo').setIndex('lbound', '', 1);
model.study('std3').feature('lsqo').setIndex('ubound', '', 1);
model.study('std3').feature('lsqo').setIndex('pname', 'E_m', 1);
model.study('std3').feature('lsqo').setIndex('initval', '10[GPa]', 1);
model.study('std3').feature('lsqo').setIndex('scale', 1, 1);
model.study('std3').feature('lsqo').setIndex('lbound', '', 1);
model.study('std3').feature('lsqo').setIndex('ubound', '', 1);
model.study('std3').feature('lsqo').setIndex('pname', 'E_p', 2);
model.study('std3').feature('lsqo').setIndex('initval', '230[GPa]', 2);
model.study('std3').feature('lsqo').setIndex('scale', 1, 2);
model.study('std3').feature('lsqo').setIndex('lbound', '', 2);
model.study('std3').feature('lsqo').setIndex('ubound', '', 2);
model.study('std3').feature('lsqo').setIndex('pname', 'E_p', 2);
model.study('std3').feature('lsqo').setIndex('initval', '230[GPa]', 2);
model.study('std3').feature('lsqo').setIndex('scale', 1, 2);
model.study('std3').feature('lsqo').setIndex('lbound', '', 2);
model.study('std3').feature('lsqo').setIndex('ubound', '', 2);
model.study('std3').feature('lsqo').setIndex('pname', 'kg1', 0);
model.study('std3').feature('lsqo').setIndex('initval', 0.001, 0);
model.study('std3').feature('lsqo').setIndex('scale', 0.001, 0);
model.study('std3').feature('lsqo').setIndex('lbound', 0, 0);
model.study('std3').feature('lsqo').setIndex('ubound', 1, 0);
model.study('std3').feature('lsqo').setIndex('pname', 'kg2', 1);
model.study('std3').feature('lsqo').setIndex('initval', 0.001, 1);
model.study('std3').feature('lsqo').setIndex('scale', 0.001, 1);
model.study('std3').feature('lsqo').setIndex('lbound', 0, 1);
model.study('std3').feature('lsqo').setIndex('ubound', 1, 1);
model.study('std3').feature('lsqo').setIndex('pname', 'kg3', 2);
model.study('std3').feature('lsqo').setIndex('initval', 0.001, 2);
model.study('std3').feature('lsqo').setIndex('scale', 0.001, 2);
model.study('std3').feature('lsqo').setIndex('lbound', 0, 2);
model.study('std3').feature('lsqo').setIndex('ubound', 1, 2);
model.study('std3').feature('lsqo').set('lsqdatamethod', 'lsq');
model.study('std3').feature('time').set('useadvanceddisable', true);
model.study('std3').feature('time').setSolveFor('/physics/solid', false);
model.study('std3').feature('time').set('disabledphysics', {'solid' 'solid2/lemm1/vis1' 'solid2/cp1'});

model.sol.create('sol6');
model.sol('sol6').study('std3');

model.study('std3').feature('lsqo').set('lsqmessage', {});

model.sol('sol6').create('st1', 'StudyStep');
model.sol('sol6').feature('st1').set('study', 'std3');
model.sol('sol6').feature('st1').set('studystep', 'time');
model.sol('sol6').create('v1', 'Variables');
model.sol('sol6').feature('v1').feature('comp1_u2').set('scalemethod', 'manual');
model.sol('sol6').feature('v1').feature('comp1_u2').set('scaleval', '1e-2*3.3166247903554');
model.sol('sol6').feature('v1').set('control', 'time');
model.sol('sol6').create('o1', 'Optimization');
model.sol('sol6').feature('o1').set('gradientlm', 'numeric');
model.sol('sol6').feature('o1').set('diffint', 1.0E-6);
model.sol('sol6').feature('o1').set('control', 'lsqo');
model.sol('sol6').feature('o1').create('t1', 'TimeAttrib');
model.sol('sol6').feature('o1').feature('t1').set('rtol', 0.001);
model.sol('sol6').feature('o1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol6').feature('o1').feature('t1').set('reacf', true);
model.sol('sol6').feature('o1').feature('t1').set('storeudot', true);
model.sol('sol6').feature('o1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol6').feature('o1').feature('t1').set('control', 'time');
model.sol('sol6').feature('o1').feature('t1').set('tlistlsq', [0.001 0.0012589254117941675 0.001584893192461114 0.001995262314968879 0.0025118864315095794 0.0031622776601683794 0.003981071705534973 0.005011872336272725 0.00630957344480193 0.007943282347242814 0.01 0.012589254117941675 0.01584893192461114 0.0199526231496888 0.025118864315095808 0.03162277660168379 0.039810717055349734 0.05011872336272725 0.06309573444801933 0.07943282347242818 0.1 0.12589254117941676 0.15848931924611143 0.19952623149688808 0.25118864315095824 0.31622776601683794 0.3981071705534973 0.5011872336272725 0.6309573444801936 0.7943282347242822 1 1.2589254117941675 1.584893192461114 1.9952623149688808 2.5118864315095824 3.1622776601683795 3.981071705534973 5.011872336272725 6.309573444801936 7.943282347242821 10]);
model.sol('sol6').feature('o1').feature('t1').set('lsqtimesout', ['   0.00100' newline '   0.00126' newline '   0.00158' newline '   0.00200' newline '   0.00251' newline '   0.00316' newline '   0.00398' newline '   0.00501' newline '   0.00631' newline '   0.00794' newline '    0.0100' newline '    0.0126' newline '    0.0158' newline '    0.0200' newline '    0.0251' newline '    0.0316' newline '    0.0398' newline '    0.0501' newline '    0.0631' newline '    0.0794' newline '     0.100' newline '     0.126' newline '     0.158' newline '     0.200' newline '     0.251' newline '     0.316' newline '     0.398' newline '     0.501' newline '     0.631' newline '     0.794' newline '      1.00' newline '      1.26' newline '      1.58' newline '      2.00' newline '      2.51' newline '      3.16' newline '      3.98' newline '      5.01' newline '      6.31' newline '      7.94' newline '      10.0' newline ]);
model.sol('sol6').feature('o1').feature('t1').set('tout', 'tlist');
model.sol('sol6').feature('o1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol6').feature('o1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol6').feature('o1').feature('t1').create('d1', 'Direct');
model.sol('sol6').feature('o1').feature('t1').feature('d1').set('linsolver', 'mumps');
model.sol('sol6').feature('o1').feature('t1').feature('d1').label('Suggested Direct Solver (solid2)');
model.sol('sol6').feature('o1').feature('t1').create('i1', 'Iterative');
model.sol('sol6').feature('o1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol6').feature('o1').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol6').feature('o1').feature('t1').feature('i1').set('nlinnormuse', true);
model.sol('sol6').feature('o1').feature('t1').feature('i1').label('Suggested Iterative Solver (GMRES with SA AMG) (solid2)');
model.sol('sol6').feature('o1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol6').feature('o1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol6').feature('o1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol6').feature('o1').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol6').feature('o1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol6').feature('o1').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol6').feature('o1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol6').feature('o1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol6').feature('o1').feature('t1').feature.remove('fcDef');
model.sol('sol6').attach('std3');
model.sol('sol6').feature('o1').feature('t1').set('tstepsbdf', 'strict');
model.sol('sol6').feature('o1').feature('t1').set('initialstepbdfactive', true);
model.sol('sol6').feature('o1').feature('t1').set('initialstepbdf', '5e-5');
model.sol('sol6').feature('o1').feature('t1').set('storeudot', false);
model.sol('sol6').runAll;

model.study('std3').feature('lsqo').set('probewindow', '');

model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').label('Average Normal Stress');
model.result('pg5').set('data', 'dset5');
model.result('pg5').set('ylabelactive', true);
model.result('pg5').set('ylabel', 'Average shear stress (N/m<sup>2</sup>)');
model.result('pg5').set('titletype', 'manual');
model.result('pg5').set('title', 'Global: Average normal stress (N/m<sup>2</sup>)');
model.result('pg5').set('xlog', true);
model.result('pg5').create('glob1', 'Global');
model.result('pg5').feature('glob1').set('markerpos', 'datapoints');
model.result('pg5').feature('glob1').set('linewidth', 'preference');
model.result('pg5').feature('glob1').setIndex('expr', 'solid2.cp2.savgXX', 0);
model.result('pg5').feature('glob1').setIndex('unit', 'N/m^2', 0);
model.result('pg5').feature('glob1').setIndex('descr', 'Average stress, XX direction', 0);
model.result('pg5').feature('glob1').set('legendmethod', 'manual');
model.result('pg5').feature('glob1').setIndex('legends', 'Homogenized material model', 0);
model.result('pg5').run;
model.result('pg5').create('tblp1', 'Table');
model.result('pg5').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg5').feature('tblp1').set('linewidth', 'preference');
model.result('pg5').feature('tblp1').set('source', 'evaluationgroup');
model.result('pg5').feature('tblp1').set('linestyle', 'none');
model.result('pg5').feature('tblp1').set('linemarker', 'point');
model.result('pg5').feature('tblp1').set('legend', true);
model.result('pg5').feature('tblp1').set('legendmethod', 'manual');
model.result('pg5').feature('tblp1').setIndex('legends', 'Heterogeneous RUC', 0);
model.result('pg5').run;
model.result.evaluationGroup.create('std2lsqoparam1', 'EvaluationGroup');
model.result.evaluationGroup('std2lsqoparam1').set('defaultPlotID', 'estimatedParameters');
model.result.evaluationGroup('std2lsqoparam1').label('Estimated Parameters (std2) 1');
model.result.evaluationGroup('std2lsqoparam1').set('data', 'dset4');
model.result.evaluationGroup('std2lsqoparam1').setIndex('looplevelinput', 'last', 0);
model.result.evaluationGroup('std2lsqoparam1').set('transpose', true);
model.result.evaluationGroup('std2lsqoparam1').set('includeparameters', false);
model.result.evaluationGroup('std2lsqoparam1').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('std2lsqoparam1').feature('gev1').setIndex('expr', 'gg1', 0);
model.result.evaluationGroup('std2lsqoparam1').feature('gev1').setIndex('expr', 'gg2', 1);
model.result.evaluationGroup('std2lsqoparam1').feature('gev1').setIndex('expr', 'gg3', 2);
model.result.evaluationGroup('std2lsqoparam1').run;
model.result.evaluationGroup('std2lsqoparam1').label('Estimated Parameters (std2) 1');
model.result.evaluationGroup('std2lsqoparam1').label('Homogenized Prony Series Parameters');
model.result.evaluationGroup('std2lsqoparam1').create('gev2', 'EvalGlobal');
model.result.evaluationGroup('std2lsqoparam1').feature('gev2').set('data', 'dset5');
model.result.evaluationGroup('std2lsqoparam1').feature('gev2').setIndex('looplevelinput', 'last', 0);
model.result.evaluationGroup('std2lsqoparam1').feature('gev2').setIndex('expr', 'kg1', 0);
model.result.evaluationGroup('std2lsqoparam1').feature('gev2').setIndex('expr', 'kg2', 1);
model.result.evaluationGroup('std2lsqoparam1').feature('gev2').setIndex('expr', 'kg3', 2);
model.result.evaluationGroup('std2lsqoparam1').run;
model.result('pg4').run;

model.nodeGroup.create('grp2', 'Results');
model.nodeGroup('grp2').add('plotgroup', 'pg4');
model.nodeGroup('grp2').add('plotgroup', 'pg5');
model.nodeGroup('grp2').add('evaluationgroup', 'std2lsqoparam1');
model.nodeGroup('grp2').label('Homogeneous RUC');

model.study('solidcp1std').feature('solidcp1stat').set('useadvanceddisable', true);
model.study('solidcp1std').feature('solidcp1stat').setSolveFor('/physics/solid2', false);
model.study('solidcp1std').feature('solidcp1stat').set('disabledphysics', {'solid2' 'solid/lemm1/vis1' 'solid/cp2'});
model.study('std1').feature('time').setSolveFor('/physics/solid2', false);
model.study('std1').feature('time').set('disabledphysics', {'solid/cp1' 'solid2'});
model.study('std2').feature('time').set('disabledphysics', {'solid' 'solid2/lemm1/vis2' 'solid2/cp2'});

model.result('pg5').run;

model.title('Micromechanical Model of a Particulate Composite');

model.description('In this example, a simplified micromechanical model of a particulate composite''s unit cell is analyzed. The homogenized elastic and viscoelastic properties of composite material are computed based on individual properties of particulates and matrix. Transient analysis on composite microstructure gives the viscoelastic response, which is used to determine the homogenized viscoelastic parameters using least-squares parameter estimation.');

model.mesh.clearMeshes;

model.sol('solidcp1sol').clearSolutionData;
model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;

model.label('micromechanical_model_of_a_particulate_composite.mph');

model.modelNode.label('Components');

out = model;
