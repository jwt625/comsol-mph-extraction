function out = model
%
% loudspeaker_spider_optimization.m
%
% Model exported on May 26 2025, 21:25 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Acoustics_Module/Optimization');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/solid', true);

model.geom('geom1').lengthUnit('mm');
model.geom('geom1').insertFile('loudspeaker_spider_optimization_geom_sequence.mph', 'geom1');
model.geom('geom1').run('sel8');

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('F0', '1[N]', 'Force parameter for the sweep');
model.param.set('Fsign', '-1', 'Force sign');
model.param.set('susp_stiff0', '1/susp_comp0', 'Target stiffness');
model.param.set('susp_comp0', '0.3432[mm/N]', 'Target compliance');
model.param.set('Fmax', 'susp_stiff0*z_length', 'Maximum force needed to reach the displacement');
model.param.set('z_length', '7[mm]', 'Displacement of the voice coil');
model.param.set('max_disp', '3[mm]', 'Maximum displacement of the Free Shape Boundary');
model.param.set('mesh_size', '1.5[mm]', 'Mesh size');

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').label('Optimization Objective');
model.variable('var1').set('obj_1', '(susp_stiff-susp_stiff0)^2*(1[m/N])^2');
model.variable('var1').descr('obj_1', 'Optimization objective');
model.variable.create('var2');
model.variable('var2').model('comp1');
model.variable('var2').label('Angle Variables');
model.variable('var2').selection.geom('geom1', 1);
model.variable('var2').selection.set([32]);
model.variable('var2').set('angle', 'atan2(nZ,nR)');
model.variable('var2').descr('angle', 'Normal angle');
model.variable('var2').set('step', 'if(s<0.1,s/0.1,if(0.9<s,(1-s)/0.1,1))');
model.variable('var2').descr('step', 'Angle smoothing step');
model.variable('var2').set('nRApprox', 'cos(-pi/2*(1-step)+angle*step)');
model.variable('var2').descr('nRApprox', 'R component of the normal');
model.variable('var2').set('nZApprox', 'sin(-pi/2*(1-step)+angle*step)');
model.variable('var2').descr('nZApprox', 'Z component of the normal');

model.probe.create('dom1', 'Domain');
model.probe('dom1').model('comp1');
model.probe('dom1').set('intsurface', true);
model.probe('dom1').set('intvolume', true);
model.probe('dom1').set('probename', 'susp_disp');
model.probe('dom1').selection.named('geom1_sel1');
model.probe('dom1').set('expr', 'w');
model.probe('dom1').set('descractive', true);
model.probe('dom1').set('descr', 'Displacement');
model.probe.create('dom2', 'Domain');
model.probe('dom2').model('comp1');
model.probe('dom2').set('intsurface', true);
model.probe('dom2').set('intvolume', true);
model.probe('dom2').set('probename', 'susp_stiff');
model.probe('dom2').selection.named('geom1_sel1');
model.probe('dom2').set('expr', 'F0*Fsign/w');
model.probe('dom2').set('unit', 'N/mm');
model.probe('dom2').set('descractive', true);
model.probe('dom2').set('descr', 'Suspension stiffness');

model.cpl.create('genext1', 'GeneralExtrusion', 'geom1');
model.cpl('genext1').selection.geom('geom1', 1);
model.cpl('genext1').selection.set([32]);
model.cpl('genext1').set('dstmap', {'Rg' '-49.7[mm]'});
model.cpl('genext1').set('srcframe', 'geometry');

model.common.create('fsd1', 'FreeShapeDomain', 'comp1');
model.common('fsd1').selection.all;
model.common('fsd1').selection.named('geom1_sel6');
model.common.create('fsb1', 'FreeShapeBoundary', 'comp1');
model.common('fsb1').selection.set([32]);
model.common('fsb1').set('maximumDisplacement', 'max_disp');
model.common('fsb1').set('filterRadiusType', 'Small');
model.common.create('pres1', 'PrescribedDeformationDeformedGeometry', 'comp1');
model.common('pres1').selection.all;
model.common('pres1').selection.geom('geom1', 1);
model.common('pres1').selection.set([34]);
model.common('pres1').set('prescribedDeformation', {'genext1(fsd1.dRg-nRApprox*0.4[mm])' '0' 'genext1(fsd1.dZg-nZApprox*0.4[mm])-0.4[mm]'});

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').label('Composite');
model.material('mat1').propertyGroup('def').set('youngsmodulus', '2[GPa]');
model.material('mat1').propertyGroup('def').set('poissonsratio', '0.42');
model.material('mat1').propertyGroup('def').set('density', '1200[kg/m^3]');
model.material('mat1').propertyGroup('def').set('lossfactor', '0.04');
model.material('mat1').selection.named('geom1_sel2');
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').label('Cloth');
model.material('mat2').propertyGroup('def').set('electricconductivity', {'0' '0' '0' '0' '0' '0' '0' '0' '0'});
model.material('mat2').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('youngsmodulus', '0.58[GPa]');
model.material('mat2').propertyGroup('def').set('poissonsratio', '0.3');
model.material('mat2').propertyGroup('def').set('density', '650[kg/m^3]');
model.material('mat2').selection.named('geom1_sel3');
model.material.create('mat3', 'Common', 'comp1');
model.material('mat3').label('Foam');
model.material('mat3').propertyGroup('def').set('youngsmodulus', '5[MPa]');
model.material('mat3').propertyGroup('def').set('poissonsratio', '0.4');
model.material('mat3').propertyGroup('def').set('density', '67[kg/m^3]');
model.material('mat3').selection.named('geom1_sel5');
model.material.create('mat4', 'Common', 'comp1');
model.material('mat4').label('Coil');
model.material('mat4').propertyGroup('def').set('lossfactor', '0.05');
model.material('mat4').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat4').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat4').propertyGroup('def').set('youngsmodulus', '110[GPa]');
model.material('mat4').propertyGroup('def').set('poissonsratio', '0.35');
model.material('mat4').propertyGroup('def').set('density', '4500[kg/m^3]');
model.material('mat4').selection.named('geom1_sel1');
model.material.create('mat5', 'Common', 'comp1');
model.material('mat5').label('Glass Fiber');
model.material('mat5').propertyGroup('def').set('electricconductivity', {'0' '0' '0' '0' '0' '0' '0' '0' '0'});
model.material('mat5').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat5').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat5').propertyGroup('def').set('youngsmodulus', '70[GPa]');
model.material('mat5').propertyGroup('def').set('poissonsratio', '0.33');
model.material('mat5').propertyGroup('def').set('density', '2000[kg/m^3]');
model.material('mat5').propertyGroup('def').set('lossfactor', '0.04');
model.material('mat5').selection.named('geom1_sel4');

model.physics('solid').selection.named('geom1_unisel1');
model.physics('solid').create('bl1', 'BodyLoad', 2);
model.physics('solid').feature('bl1').selection.named('geom1_sel1');
model.physics('solid').feature('bl1').set('LoadType', 'TotalForce');
model.physics('solid').feature('bl1').set('Ftot', {'0' '0' 'F0*Fsign'});
model.physics('solid').create('fix1', 'Fixed', 1);
model.physics('solid').feature('fix1').selection.named('geom1_sel7');
model.physics('solid').create('fix2', 'Fixed', 1);
model.physics('solid').feature('fix2').selection.named('geom1_sel8');

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('map1').selection.named('geom1_unisel1');
model.mesh('mesh1').feature('map1').create('size1', 'Size');
model.mesh('mesh1').feature('map1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('map1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('map1').feature('size1').set('hmax', 'mesh_size');
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.named('geom1_sel7');
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 2);
model.mesh('mesh1').feature('map1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis2').selection.named('geom1_sel8');
model.mesh('mesh1').feature('map1').feature('dis2').set('numelem', 2);
model.mesh('mesh1').run;
model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').run;

model.study('std1').label('Study 1 - Traditional Design');
model.study('std1').feature('stat').set('geometricNonlinearity', true);
model.study('std1').feature('stat').set('probesel', 'none');
model.study('std1').feature('stat').set('useadvanceddisable', true);
model.study('std1').feature('stat').set('disabledphysics', {'solid/fix2'});
model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').set('sweeptype', 'filled');
model.study('std1').feature('stat').setIndex('pname', 'F0', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'N', 0);
model.study('std1').feature('stat').setIndex('pname', 'F0', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'N', 0);
model.study('std1').feature('stat').setIndex('pname', 'Fsign', 0);
model.study('std1').feature('stat').setIndex('plistarr', '-1 1', 0);
model.study('std1').feature('stat').setIndex('punit', '', 0);
model.study('std1').feature('stat').setIndex('pname', 'F0', 1);
model.study('std1').feature('stat').setIndex('plistarr', '', 1);
model.study('std1').feature('stat').setIndex('punit', 'N', 1);
model.study('std1').feature('stat').setIndex('pname', 'F0', 1);
model.study('std1').feature('stat').setIndex('plistarr', '', 1);
model.study('std1').feature('stat').setIndex('punit', 'N', 1);
model.study('std1').feature('stat').setIndex('plistarr', 'Fmax/1000 Fmax/20 range(Fmax/10,Fmax/10,Fmax*1.15)', 1);
model.study('std1').feature('stat').setIndex('punit', 'N', 1);

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([12]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_fsb1_d').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_material_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_fsb1_d').set('scaleval', 'max_disp');
model.sol('sol1').feature('v1').feature('comp1_material_disp').set('scaleval', '0.0012545018931831072');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s1').set('control', 'stat');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 13, 0);
model.result('pg1').setIndex('looplevel', 2, 1);
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('surf1').set('threshold', 'manual');
model.result('pg1').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg1').feature('surf1').set('colortable', 'Rainbow');
model.result('pg1').feature('surf1').set('colortabletrans', 'none');
model.result('pg1').feature('surf1').set('colorscalemode', 'linear');
model.result('pg1').feature('surf1').set('resolution', 'normal');
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg1').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg1').feature('surf1').feature('def').set('scale', '1');
model.result('pg1').feature('surf1').feature('def').set('expr', {'u' 'w'});
model.result('pg1').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result.dataset.create('dset1solidrev', 'Revolve2D');
model.result.dataset('dset1solidrev').set('data', 'dset1');
model.result.dataset('dset1solidrev').set('revangle', 225);
model.result.dataset('dset1solidrev').set('startangle', -90);
model.result.dataset('dset1solidrev').set('hasspacevars', true);
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'dset1solidrev');
model.result('pg2').setIndex('looplevel', 13, 0);
model.result('pg2').setIndex('looplevel', 2, 1);
model.result('pg2').set('defaultPlotID', 'stress3D');
model.result('pg2').label('Stress, 3D (solid)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg2').feature('surf1').set('threshold', 'manual');
model.result('pg2').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg2').feature('surf1').set('colortable', 'Rainbow');
model.result('pg2').feature('surf1').set('colortabletrans', 'none');
model.result('pg2').feature('surf1').set('colorscalemode', 'linear');
model.result('pg2').feature('surf1').set('colortable', 'Prism');
model.result('pg2').feature('surf1').create('def', 'Deform');
model.result.dataset('dset1solidrev').set('hasspacevars', true);
model.result('pg2').feature('surf1').feature('def').set('revcoordsys', 'cylindrical');
model.result('pg2').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg2').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg2').feature('surf1').feature('def').set('descractive', true);
model.result('pg2').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg2').feature('surf1').feature('def').set('scale', '1');
model.result.create('pg3', 'PlotGroup2D');
model.result.dataset.duplicate('dset1g1', 'dset1');
model.result.dataset('dset1g1').label('Study 1 - Traditional Design/Solution 1 (1) - Geometry');
model.result.dataset('dset1g1').set('frametype', 'geometry');
model.result('pg3').label('Shape Optimization');
model.result('pg3').set('data', 'dset1');
model.result('pg3').set('frametype', 'geometry');
model.result('pg3').set('edgecolor', 'gray');
model.result('pg3').set('titletype', 'none');
model.result('pg3').create('line1', 'Line');
model.result('pg3').feature('line1').set('expr', '1');
model.result('pg3').feature('line1').set('coloring', 'uniform');
model.result('pg3').feature('line1').set('color', 'fromtheme');
model.result('pg3').create('arwl1', 'ArrowLine');
model.result('pg3').feature('arwl1').set('data', 'dset1g1');
model.result('pg3').feature('arwl1').set('expr', {'fsd1.dRg' 'fsd1.dZg'});
model.result('pg3').feature('arwl1').set('scaleactive', true);
model.result('pg3').feature('arwl1').set('scale', '1');
model.result('pg3').feature('arwl1').set('placement', 'uniform');
model.result('pg3').feature('arwl1').set('arrowcount', 200);
model.result('pg3').feature('arwl1').create('col1', 'Color');
model.result('pg3').feature('arwl1').feature('col1').set('expr', 'fsd1.rel_disp');
model.result('pg3').feature('arwl1').feature('col1').set('rangecoloractive', 'on');
model.result('pg3').feature('arwl1').feature('col1').set('rangecolormin', 0);
model.result('pg3').feature('arwl1').feature('col1').set('rangecolormax', 1);
model.result('pg3').feature('arwl1').create('sel1', 'Selection');
model.result('pg3').feature('arwl1').feature('sel1').selection.named('dsel_fsd1');
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').set('data', 'dset1');
model.result('pg4').setIndex('looplevel', 13, 0);
model.result('pg4').setIndex('looplevel', 2, 1);
model.result('pg4').label('Deformed Geometry');
model.result('pg4').create('mesh1', 'Mesh');
model.result('pg4').feature('mesh1').set('meshdomain', 'surface');
model.result('pg4').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg4').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg4').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg4').feature('mesh1').create('sel1', 'MeshSelection');
model.result('pg4').feature('mesh1').feature('sel1').selection.set([12]);
model.result('pg4').feature('mesh1').set('qualmeasure', 'custom');
model.result('pg4').feature('mesh1').set('qualexpr', 'comp1.material.relVol');
model.result('pg4').feature('mesh1').set('colorrangeunitinterval', false);
model.result('pg1').run;
model.result.dataset('dset1').selection.geom('geom1', 2);
model.result.dataset('dset1').selection.geom('geom1', 2);
model.result.dataset('dset1').selection.set([1 2 3 4 5 6 7 8 9 10 11 13 14 15 16 17 18]);
model.result('pg3').run;
model.result.remove('pg3');
model.result.remove('pg4');
model.result('pg1').run;

model.nodeGroup.create('grp1', 'Results');
model.nodeGroup('grp1').set('type', 'plotgroup');
model.nodeGroup('grp1').add('plotgroup', 'pg1');
model.nodeGroup('grp1').add('plotgroup', 'pg2');
model.nodeGroup('grp1').label('Traditional Design Results');

model.study.create('std2');
model.study('std2').create('sho', 'ShapeOptimization');
model.study('std2').feature('sho').set('objectivesolution', 'max');
model.study('std2').feature('sho').set('movelimitactive', false);
model.study('std2').feature('sho').setIndex('optobj', 'log10(comp1.obj_1)', 0);
model.study('std2').feature('sho').set('probesel', 'none');
model.study('std2').feature.copy('stat1', 'std1/stat');
model.study('std2').feature('stat1').set('disabledphysics', {'solid/fix1'});
model.study('std2').feature('stat1').setIndex('plistarr', 'Fmax/1000 Fmax/20 range(Fmax/10,Fmax/10,Fmax)', 1);
model.study('std2').feature('stat1').setIndex('punit', 'N', 1);
model.study('std2').label('Study 2 - Optimization');

model.sol.create('sol2');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([12]);

model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat1');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_fsb1_d').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_material_disp').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_fsb1_d').set('scaleval', 'max_disp');
model.sol('sol2').feature('v1').feature('comp1_material_disp').set('scaleval', '0.0012545018931831072');
model.sol('sol2').feature('v1').set('control', 'stat1');
model.sol('sol2').create('o1', 'Optimization');
model.sol('sol2').feature('o1').set('control', 'sho');
model.sol('sol2').feature('o1').create('s1', 'StationaryAttrib');
model.sol('sol2').feature('o1').feature('s1').set('control', 'stat1');
model.sol('sol2').feature('o1').feature('s1').create('p1', 'Parametric');
model.sol('sol2').feature('o1').feature('s1').feature.remove('pDef');
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('pname', {'Fsign' 'F0'});
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('plistarr', {'-1 1' 'Fmax/1000 Fmax/20 range(Fmax/10,Fmax/10,Fmax)'});
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('punit', {'' 'N'});
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('sweeptype', 'filled');
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('probesel', 'none');
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('control', 'stat1');
model.sol('sol2').feature('o1').feature('s1').set('control', 'stat1');
model.sol('sol2').feature('o1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('o1').feature('s1').create('seDef', 'Segregated');
model.sol('sol2').feature('o1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('o1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol2').feature('o1').feature('s1').feature.remove('fcDef');
model.sol('sol2').feature('o1').feature('s1').feature.remove('seDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runFromTo('st1', 'v1');

model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').set('data', 'dset2');
model.result('pg3').set('defaultPlotID', 'stress');
model.result('pg3').label('Stress (solid) 1');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg3').feature('surf1').set('threshold', 'manual');
model.result('pg3').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg3').feature('surf1').set('colortable', 'Rainbow');
model.result('pg3').feature('surf1').set('colortabletrans', 'none');
model.result('pg3').feature('surf1').set('colorscalemode', 'linear');
model.result('pg3').feature('surf1').set('resolution', 'normal');
model.result('pg3').feature('surf1').set('colortable', 'Prism');
model.result('pg3').feature('surf1').create('def', 'Deform');
model.result('pg3').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg3').feature('surf1').feature('def').set('scale', '1');
model.result('pg3').feature('surf1').feature('def').set('expr', {'u' 'w'});
model.result('pg3').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result.dataset.create('dset2solidrev', 'Revolve2D');
model.result.dataset('dset2solidrev').set('data', 'dset2');
model.result.dataset('dset2solidrev').set('revangle', 225);
model.result.dataset('dset2solidrev').set('startangle', -90);
model.result.dataset('dset2solidrev').set('hasspacevars', true);
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').set('data', 'dset2solidrev');
model.result('pg4').set('defaultPlotID', 'stress3D');
model.result('pg4').label('Stress, 3D (solid) 1');
model.result('pg4').set('frametype', 'spatial');
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg4').feature('surf1').set('threshold', 'manual');
model.result('pg4').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg4').feature('surf1').set('colortable', 'Rainbow');
model.result('pg4').feature('surf1').set('colortabletrans', 'none');
model.result('pg4').feature('surf1').set('colorscalemode', 'linear');
model.result('pg4').feature('surf1').set('colortable', 'Prism');
model.result('pg4').feature('surf1').create('def', 'Deform');
model.result.dataset('dset2solidrev').set('hasspacevars', true);
model.result('pg4').feature('surf1').feature('def').set('revcoordsys', 'cylindrical');
model.result('pg4').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg4').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg4').feature('surf1').feature('def').set('descractive', true);
model.result('pg4').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg4').feature('surf1').feature('def').set('scale', '1');
model.result.create('pg5', 'PlotGroup2D');
model.result.dataset.duplicate('dset2g1', 'dset2');
model.result.dataset('dset2g1').label('Study 2 - Optimization/Solution 2 (2) - Geometry');
model.result.dataset('dset2g1').set('frametype', 'geometry');
model.result('pg5').label('Shape Optimization');
model.result('pg5').set('data', 'dset2');
model.result('pg5').set('frametype', 'geometry');
model.result('pg5').set('edgecolor', 'gray');
model.result('pg5').set('titletype', 'none');
model.result('pg5').create('line1', 'Line');
model.result('pg5').feature('line1').set('expr', '1');
model.result('pg5').feature('line1').set('coloring', 'uniform');
model.result('pg5').feature('line1').set('color', 'fromtheme');
model.result('pg5').create('arwl1', 'ArrowLine');
model.result('pg5').feature('arwl1').set('data', 'dset2g1');
model.result('pg5').feature('arwl1').set('expr', {'fsd1.dRg' 'fsd1.dZg'});
model.result('pg5').feature('arwl1').set('scaleactive', true);
model.result('pg5').feature('arwl1').set('scale', '1');
model.result('pg5').feature('arwl1').set('placement', 'uniform');
model.result('pg5').feature('arwl1').set('arrowcount', 200);
model.result('pg5').feature('arwl1').create('col1', 'Color');
model.result('pg5').feature('arwl1').feature('col1').set('expr', 'fsd1.rel_disp');
model.result('pg5').feature('arwl1').feature('col1').set('rangecoloractive', 'on');
model.result('pg5').feature('arwl1').feature('col1').set('rangecolormin', 0);
model.result('pg5').feature('arwl1').feature('col1').set('rangecolormax', 1);
model.result('pg5').feature('arwl1').create('sel1', 'Selection');
model.result('pg5').feature('arwl1').feature('sel1').selection.named('dsel_fsd1');
model.result.create('pg6', 'PlotGroup2D');
model.result('pg6').set('data', 'dset2');
model.result('pg6').label('Deformed Geometry');
model.result('pg6').create('mesh1', 'Mesh');
model.result('pg6').feature('mesh1').set('meshdomain', 'surface');
model.result('pg6').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg6').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg6').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg6').feature('mesh1').create('sel1', 'MeshSelection');
model.result('pg6').feature('mesh1').feature('sel1').selection.set([12]);
model.result('pg6').feature('mesh1').set('qualmeasure', 'custom');
model.result('pg6').feature('mesh1').set('qualexpr', 'comp1.material.relVol');
model.result('pg6').feature('mesh1').set('colorrangeunitinterval', false);
model.result('pg3').run;
model.result.dataset('dset2').selection.geom('geom1', 2);
model.result.dataset('dset2').selection.geom('geom1', 2);
model.result.dataset('dset2').selection.set([1 2 3 4 5 6 7 8 9 10 11 12 14 15 16 17 18]);
model.result('pg5').run;
model.result('pg5').feature('arwl1').set('placement', 'gausspoints');
model.result('pg3').run;

model.nodeGroup.create('grp2', 'Results');
model.nodeGroup('grp2').set('type', 'plotgroup');
model.nodeGroup.move('grp2', 1);
model.nodeGroup('grp2').add('plotgroup', 'pg3');
model.nodeGroup('grp2').add('plotgroup', 'pg4');
model.nodeGroup('grp2').add('plotgroup', 'pg5');
model.nodeGroup('grp2').add('plotgroup', 'pg6');
model.nodeGroup('grp2').label('Optimization Results');

model.study('std2').feature('sho').set('plot', true);
model.study('std2').feature('sho').set('plotgroup', 'pg5');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([12]);

model.sol('sol2').study('std2');
model.sol('sol2').feature.remove('o1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('st1');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat1');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_fsb1_d').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_material_disp').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_fsb1_d').set('scaleval', 'max_disp');
model.sol('sol2').feature('v1').feature('comp1_material_disp').set('scaleval', '0.0012545018931831072');
model.sol('sol2').feature('v1').set('control', 'stat1');
model.sol('sol2').create('o1', 'Optimization');
model.sol('sol2').feature('o1').set('control', 'sho');
model.sol('sol2').feature('o1').create('s1', 'StationaryAttrib');
model.sol('sol2').feature('o1').feature('s1').set('control', 'stat1');
model.sol('sol2').feature('o1').feature('s1').create('p1', 'Parametric');
model.sol('sol2').feature('o1').feature('s1').feature.remove('pDef');
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('pname', {'Fsign' 'F0'});
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('plistarr', {'-1 1' 'Fmax/1000 Fmax/20 range(Fmax/10,Fmax/10,Fmax)'});
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('punit', {'' 'N'});
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('sweeptype', 'filled');
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('probesel', 'none');
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('control', 'stat1');
model.sol('sol2').feature('o1').feature('s1').set('control', 'stat1');
model.sol('sol2').feature('o1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('o1').feature('s1').create('seDef', 'Segregated');
model.sol('sol2').feature('o1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('o1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol2').feature('o1').feature('s1').feature.remove('fcDef');
model.sol('sol2').feature('o1').feature('s1').feature.remove('seDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result('pg3').run;

model.study('std2').feature('sho').set('probewindow', '');

model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').run;
model.result('pg7').label('Force vs. Displacement');
model.result('pg7').set('xlabelactive', true);
model.result('pg7').set('xlabel', 'Displacement (mm)');
model.result('pg7').set('ylabelactive', true);
model.result('pg7').set('ylabel', 'Applied Force (N)');
model.result('pg7').set('titletype', 'label');
model.result('pg7').set('legendpos', 'lowerright');
model.result('pg7').create('glob1', 'Global');
model.result('pg7').feature('glob1').set('markerpos', 'datapoints');
model.result('pg7').feature('glob1').set('linewidth', 'preference');
model.result('pg7').feature('glob1').setIndex('expr', 'F0*Fsign', 0);
model.result('pg7').feature('glob1').setIndex('unit', '', 0);
model.result('pg7').feature('glob1').setIndex('descr', '', 0);
model.result('pg7').feature('glob1').set('xdatasolnumtype', 'all');
model.result('pg7').feature('glob1').set('xdata', 'expr');
model.result('pg7').feature('glob1').set('xdataexpr', 'susp_disp');
model.result('pg7').feature('glob1').set('legendmethod', 'manual');
model.result('pg7').feature('glob1').setIndex('legends', 'Traditional design', 0);
model.result('pg7').feature('glob1').set('linestyle', 'none');
model.result('pg7').feature('glob1').set('linemarker', 'circle');
model.result('pg7').run;
model.result('pg7').feature.duplicate('glob2', 'glob1');
model.result('pg7').run;
model.result('pg7').feature('glob2').set('data', 'dset2');
model.result('pg7').feature('glob2').setIndex('expr', 'susp_disp/susp_comp0', 0);
model.result('pg7').feature('glob2').setIndex('unit', 'N', 0);
model.result('pg7').feature('glob2').setIndex('descr', '', 0);
model.result('pg7').feature('glob2').set('linestyle', 'dotted');
model.result('pg7').feature('glob2').set('linecolor', 'gray');
model.result('pg7').feature('glob2').set('linemarker', 'none');
model.result('pg7').feature('glob2').setIndex('legends', 'Ideal suspension', 0);
model.result('pg7').run;
model.result('pg7').feature.duplicate('glob3', 'glob1');
model.result('pg7').run;
model.result('pg7').feature('glob3').set('data', 'dset2');
model.result('pg7').feature('glob3').setIndex('legends', 'Optimized design', 0);
model.result('pg7').run;
model.result('pg7').run;
model.result.duplicate('pg8', 'pg7');
model.result('pg8').run;
model.result('pg8').label('Compliance');
model.result('pg8').set('ylabel', 'Compliance C<sub>MS</sub>(x) (mm/N)');
model.result('pg8').run;
model.result('pg8').feature('glob1').setIndex('expr', '1/susp_stiff', 0);
model.result('pg8').feature('glob1').setIndex('unit', 'mm/N', 0);
model.result('pg8').feature('glob1').setIndex('descr', '', 0);
model.result('pg8').run;
model.result('pg8').feature('glob2').setIndex('expr', '1/susp_stiff0', 0);
model.result('pg8').feature('glob2').setIndex('unit', 'mm/N', 0);
model.result('pg8').feature('glob2').setIndex('descr', '', 0);
model.result('pg8').run;
model.result('pg8').feature('glob3').setIndex('expr', '1/susp_stiff', 0);
model.result('pg8').feature('glob3').setIndex('unit', 'mm/N', 0);
model.result('pg8').feature('glob3').setIndex('descr', '', 0);
model.result('pg8').run;
model.result('pg8').run;
model.result('pg8').create('ann1', 'Annotation');
model.result('pg8').feature('ann1').set('showpoint', false);
model.result('pg8').run;
model.result('pg2').run;
model.result('pg2').feature('surf1').feature.remove('def');
model.result('pg2').run;
model.result('pg4').run;
model.result('pg4').feature('surf1').feature.remove('def');
model.result('pg4').run;
model.result('pg4').run;
model.result('pg1').run;
model.result('pg1').run;
model.result('pg3').run;
model.result('pg3').run;
model.result('pg5').run;
model.result('pg5').run;
model.result('pg4').run;

model.title('Loudspeaker Spider Optimization');

model.description(['The suspension of a loudspeaker is designed to keep the cone and dust cap in place and avoid any rocking movement of the voice coil. At low frequencies, where the displacement of the cone and dust cap is significant, the stiffness of the suspension varies along the stroke of the voice coil. This variation, or nonlinearity, can play a significant role in the distortion created by the speaker.' newline  newline 'This model demonstrates the application of shape optimization to the design of the spider, which constitutes part of the suspension of the loudspeaker. By changing the shape of the spider, it is possible to create a suspension system that behaves linearly (constant stiffness) all through the range of movement of the voice coil.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('loudspeaker_spider_optimization.mph');

model.modelNode.label('Components');

out = model;
