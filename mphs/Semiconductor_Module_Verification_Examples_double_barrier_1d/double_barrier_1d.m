function out = model
%
% double_barrier_1d.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Semiconductor_Module/Verification_Examples');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 1);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('schr', 'SchrodingerEquation', 'geom1', {'psi'});

model.study.create('std1');
model.study('std1').create('eigv', 'Eigenvalue');
model.study('std1').feature('eigv').set('neigs', '3');
model.study('std1').feature('eigv').set('eigunit', '');
model.study('std1').feature('eigv').set('shift', '0.1');
model.study('std1').feature('eigv').set('conrad', '1');
model.study('std1').feature('eigv').set('conradynhm', '1');
model.study('std1').feature('eigv').set('conlbdy', '0');
model.study('std1').feature('eigv').set('conubdy', '1');
model.study('std1').feature('eigv').set('linpsolnum', 'auto');
model.study('std1').feature('eigv').set('solnum', 'auto');
model.study('std1').feature('eigv').set('notsolnum', 'auto');
model.study('std1').feature('eigv').set('outputmap', {});
model.study('std1').feature('eigv').set('ngenAUX', '1');
model.study('std1').feature('eigv').set('goalngenAUX', '1');
model.study('std1').feature('eigv').set('ngenAUX', '1');
model.study('std1').feature('eigv').set('goalngenAUX', '1');
model.study('std1').feature('eigv').setSolveFor('/physics/schr', true);

model.geom('geom1').lengthUnit('nm');

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('lmbd0', '1[eV]', 'Eigenvalue scale');
model.param.set('x0', '0.32', 'Fraction of Al in AlGaAs');
model.param.set('mw', '0.067*me_const', 'Effective mass in well regions');
model.param.set('mb', '(0.067+0.083*x0)*me_const', 'Effective mass in barrier regions');
model.param.set('Vb', '1.247[eV]*x0*0.67', 'Potential energy in barrier regions');
model.param.set('lw', '10[nm]', 'Length of well');
model.param.set('lb', '5[nm]', 'Length of barrier');
model.param.set('L', '3*lw+2*lb', 'Length of modeling domain');
model.param.set('reE1anal', '0.03095108621779908[eV]', 'Analytical energy for quasi bound state, real part');
model.param.set('reE2anal', '0.122061164410767[eV]', 'Analytical energy for quasi bound state, real part');
model.param.set('reE3anal', '0.25894903907423716[eV]', 'Analytical energy for quasi bound state, real part');
model.param.set('reE_anal', 'reE1anal', 'Sweeping parameter for quasi bound states');
model.param.set('imE1anal', '0.000010086285035003605[eV]', 'Analytical energy for quasi bound state, imaginary part');
model.param.set('imE2anal', '0.0001913257313211308[eV]', 'Analytical energy for quasi bound state, imaginary part');
model.param.set('imE3anal', '0.0031326022267301064[eV]', 'Analytical energy for quasi bound state, imaginary part');
model.param.set('imE_anal', 'imE1anal', 'Sweeping parameter for quasi bound states');
model.param.set('T3', 'h_const/reE3anal', 'Time scale for time dependent study');
model.param.set('tau3', 'hbar_const/imE3anal', 'Decay time constant');
model.param.set('E1anal', '0.0309510912373888[eV]', 'Analytical energy for transmission=1 solution');
model.param.set('E2anal', '0.12206193797930533[eV]', 'Analytical energy for transmission=1 solution');
model.param.set('E3anal', '0.2591443427675162[eV]', 'Analytical energy for transmission=1 solution');
model.param.set('E_anal', 'E1anal', 'Sweeping parameter for transmission=1 solutions');
model.param.set('E0', '1[eV]', 'Energy for stationary study');
model.param.set('psi0', '1', 'Incoming wave amplitude');

model.geom('geom1').create('i1', 'Interval');
model.geom('geom1').feature('i1').set('specify', 'len');
model.geom('geom1').feature('i1').set('left', '-L/2');
model.geom('geom1').feature('i1').setIndex('len', 'lw', 0);
model.geom('geom1').feature('i1').setIndex('len', 'lb', 1);
model.geom('geom1').feature('i1').setIndex('len', 'L-2*lw-2*lb', 2);
model.geom('geom1').feature('i1').setIndex('len', 'lb', 3);
model.geom('geom1').feature('i1').setIndex('len', 'lw', 4);
model.geom('geom1').runPre('fin');
model.geom('geom1').run;

model.physics('schr').prop('ModelProperties').set('lambda_scale', 'lmbd0');
model.physics('schr').feature('meff1').set('meffe_psi', {'mw' '0' '0' '0' 'mw' '0' '0' '0' 'mw'});
model.physics('schr').feature('ve1').set('Ve_src', 'userdef');
model.physics('schr').feature('ve1').set('Ve', 0);
model.physics('schr').create('meff2', 'EffectiveMass', 1);
model.physics('schr').feature('meff2').selection.set([2 4]);
model.physics('schr').feature('meff2').set('meffe_psi', {'mb' '0' '0' '0' 'mb' '0' '0' '0' 'mb'});
model.physics('schr').create('ve2', 'ElectronPotentialEnergy', 1);
model.physics('schr').feature('ve2').selection.set([2 4]);
model.physics('schr').feature('ve2').set('Ve_src', 'userdef');
model.physics('schr').feature('ve2').set('Ve', 'Vb');
model.physics('schr').create('open1', 'OpenBoundary', 0);
model.physics('schr').feature('open1').selection.all;

model.mesh('mesh1').create('edg1', 'Edge');
model.mesh('mesh1').feature('edg1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('edg1').feature('dis1').set('numelem', 50);

model.study('std1').feature('eigv').set('neigs', 1);
model.study('std1').feature('eigv').set('shift', 'reE_anal/lmbd0');
model.study('std1').label('Study 1 Quasi bound states');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'eigv');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'eigv');
model.sol('sol1').create('e1', 'Eigenvalue');
model.sol('sol1').feature('e1').set('neigs', 6);
model.sol('sol1').feature('e1').set('shift', '0');
model.sol('sol1').feature('e1').set('rtol', 1.0E-10);
model.sol('sol1').feature('e1').set('transform', 'none');
model.sol('sol1').feature('e1').set('eigref', '0.1');
model.sol('sol1').feature('e1').set('eigvfunscale', 'average');
model.sol('sol1').feature('e1').set('control', 'eigv');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('e1').set('eigref', 'reE_anal/lmbd0');

model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'lmbd0', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'J', 0);
model.study('std1').feature('param').setIndex('pname', 'lmbd0', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'J', 0);
model.study('std1').feature('param').setIndex('pname', 'x0', 1);
model.study('std1').feature('param').setIndex('plistarr', '', 1);
model.study('std1').feature('param').setIndex('punit', '', 1);
model.study('std1').feature('param').setIndex('pname', 'x0', 1);
model.study('std1').feature('param').setIndex('plistarr', '', 1);
model.study('std1').feature('param').setIndex('punit', '', 1);
model.study('std1').feature('param').setIndex('pname', 'reE_anal', 0);
model.study('std1').feature('param').setIndex('plistarr', 'reE1anal reE2anal reE3anal', 0);
model.study('std1').feature('param').setIndex('pname', 'imE_anal', 1);
model.study('std1').feature('param').setIndex('plistarr', 'imE1anal imE2anal imE3anal', 1);

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'reE_anal' 'imE_anal'});
model.batch('p1').set('plistarr', {'reE1anal reE2anal reE3anal' 'imE1anal imE2anal imE3anal'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol.create('sol2');
model.sol('sol2').study('std1');
model.sol('sol2').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').run('compute');

model.result.numerical.create('gev1', 'EvalGlobal');
model.result.numerical('gev1').label('Eigenvalue');
model.result.numerical('gev1').set('data', 'dset2');
model.result.numerical('gev1').set('showlooplevelinput', {'off' 'off' 'off'});
model.result.numerical('gev1').set('hasouter', 'off');
model.result.numerical('gev1').set('expr', {'schr.Ei' 'schr.int(schr.Pr)'});
model.result.numerical('gev1').setIndex('unit', 'eV', 0);
model.result.numerical('gev1').set('descr', {'Eigenenergy' 'Total probability'});
model.result.numerical('gev1').set('hasouter', 'off');
model.result.numerical('gev1').setIndex('unit', 'eV', 0);
model.result.numerical('gev1').set('hasouter', 'off');
model.result.numerical('gev1').setIndex('unit', 'eV', 0);
model.result.numerical('gev1').set('hasouter', 'off');
model.result.numerical('gev1').setIndex('unit', 'eV', 0);
model.result.numerical('gev1').set('hasouter', 'off');
model.result.numerical('gev1').setIndex('unit', 'eV', 0);
model.result.numerical('gev1').set('data', 'dset2');
model.result.numerical('gev1').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond2/pcond5/gev1');
model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').label('Normalized Wave Function (schr)');
model.result('pg1').set('data', 'dset2');
model.result('pg1').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg1').set('data', 'dset2');
model.result('pg1').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond1/pcond1/pcond4/pg1');
model.result('pg1').feature.create('lngr1', 'LineGraph');
model.result('pg1').feature('lngr1').label('Real Part');
model.result('pg1').feature('lngr1').set('expr', 'schr.Psi_psi');
model.result('pg1').feature('lngr1').set('xdata', 'expr');
model.result('pg1').feature('lngr1').set('xdataexpr', 'X');
model.result('pg1').feature('lngr1').set('smooth', 'internal');
model.result('pg1').feature('lngr1').set('data', 'parent');
model.result('pg1').feature('lngr1').selection.geom('geom1', 1);
model.result('pg1').feature('lngr1').selection.set([1 2 3 4 5]);
model.result('pg1').feature.create('lngr2', 'LineGraph');
model.result('pg1').feature('lngr2').label('Imaginary Part');
model.result('pg1').feature('lngr2').set('expr', 'imag(schr.Psi_psi)');
model.result('pg1').feature('lngr2').set('xdata', 'expr');
model.result('pg1').feature('lngr2').set('xdataexpr', 'X');
model.result('pg1').feature('lngr2').set('linestyle', 'dashed');
model.result('pg1').feature('lngr2').set('linecolor', 'cyclereset');
model.result('pg1').feature('lngr2').set('smooth', 'internal');
model.result('pg1').feature('lngr2').set('data', 'parent');
model.result('pg1').feature('lngr2').selection.geom('geom1', 1);
model.result('pg1').feature('lngr2').selection.set([1 2 3 4 5]);
model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').label('Potential Energy, Eigenenergy, and Wave Function (schr)');
model.result('pg2').set('data', 'dset2');
model.result('pg2').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg2').set('data', 'dset2');
model.result('pg2').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond1/pcond1/pcond4/pg5');
model.result('pg2').feature.create('lngr1', 'LineGraph');
model.result('pg2').feature('lngr1').label('Potential Energy');
model.result('pg2').feature('lngr1').set('expr', 'schr.V_psi');
model.result('pg2').feature('lngr1').set('unit', 'eV');
model.result('pg2').feature('lngr1').set('xdata', 'expr');
model.result('pg2').feature('lngr1').set('xdataexpr', 'X');
model.result('pg2').feature('lngr1').set('linecolor', 'black');
model.result('pg2').feature('lngr1').set('smooth', 'everywhere');
model.result('pg2').feature('lngr1').set('data', 'parent');
model.result('pg2').feature('lngr1').selection.geom('geom1', 1);
model.result('pg2').feature('lngr1').selection.set([1 2 3 4 5]);
model.result('pg2').feature.create('lngr2', 'LineGraph');
model.result('pg2').feature('lngr2').label('Real Part');
model.result('pg2').feature('lngr2').set('expr', 'schr.Psi_psi*0.1[eV]/schr.plot_fac+schr.Ei');
model.result('pg2').feature('lngr2').set('unit', 'eV');
model.result('pg2').feature('lngr2').set('xdata', 'expr');
model.result('pg2').feature('lngr2').set('xdataexpr', 'X');
model.result('pg2').feature('lngr2').set('legend', true);
model.result('pg2').feature('lngr2').set('smooth', 'internal');
model.result('pg2').feature('lngr2').set('data', 'parent');
model.result('pg2').feature('lngr2').selection.geom('geom1', 1);
model.result('pg2').feature('lngr2').selection.set([1 2 3 4 5]);
model.result('pg2').feature.create('lngr3', 'LineGraph');
model.result('pg2').feature('lngr3').label('Imaginary Part');
model.result('pg2').feature('lngr3').set('expr', 'imag(schr.Psi_psi)*0.1[eV]/schr.plot_fac+schr.Ei');
model.result('pg2').feature('lngr3').set('unit', 'eV');
model.result('pg2').feature('lngr3').set('xdata', 'expr');
model.result('pg2').feature('lngr3').set('xdataexpr', 'X');
model.result('pg2').feature('lngr3').set('linestyle', 'dashed');
model.result('pg2').feature('lngr3').set('linecolor', 'cyclereset');
model.result('pg2').feature('lngr3').set('smooth', 'internal');
model.result('pg2').feature('lngr3').set('data', 'parent');
model.result('pg2').feature('lngr3').selection.geom('geom1', 1);
model.result('pg2').feature('lngr3').selection.set([1 2 3 4 5]);
model.result('pg2').feature.create('lngr4', 'LineGraph');
model.result('pg2').feature('lngr4').label('Eigenenergy');
model.result('pg2').feature('lngr4').set('expr', 'schr.Ei');
model.result('pg2').feature('lngr4').set('unit', 'eV');
model.result('pg2').feature('lngr4').set('xdata', 'expr');
model.result('pg2').feature('lngr4').set('xdataexpr', 'X');
model.result('pg2').feature('lngr4').set('linestyle', 'dotted');
model.result('pg2').feature('lngr4').set('linecolor', 'black');
model.result('pg2').feature('lngr4').set('smooth', 'internal');
model.result('pg2').feature('lngr4').set('data', 'parent');
model.result('pg2').feature('lngr4').selection.geom('geom1', 1);
model.result('pg2').feature('lngr4').selection.set([1 2 3 4 5]);
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').label('Probability Density (schr)');
model.result('pg3').set('data', 'dset2');
model.result('pg3').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg3').set('data', 'dset2');
model.result('pg3').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond1/pg4');
model.result('pg3').feature.create('lngr1', 'LineGraph');
model.result('pg3').feature('lngr1').set('expr', 'schr.Pr');
model.result('pg3').feature('lngr1').set('xdata', 'expr');
model.result('pg3').feature('lngr1').set('xdataexpr', 'X');
model.result('pg3').feature('lngr1').set('smooth', 'internal');
model.result('pg3').feature('lngr1').set('data', 'parent');
model.result('pg3').feature('lngr1').selection.geom('geom1', 1);
model.result('pg3').feature('lngr1').selection.set([1 2 3 4 5]);
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').label('Potential Energy (schr)');
model.result('pg4').set('data', 'dset2');
model.result('pg4').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg4').set('data', 'dset2');
model.result('pg4').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond1/pg2');
model.result('pg4').feature.create('lngr1', 'LineGraph');
model.result('pg4').feature('lngr1').set('expr', 'schr.V_psi');
model.result('pg4').feature('lngr1').set('unit', 'eV');
model.result('pg4').feature('lngr1').set('xdata', 'expr');
model.result('pg4').feature('lngr1').set('xdataexpr', 'X');
model.result('pg4').feature('lngr1').set('smooth', 'everywhere');
model.result('pg4').feature('lngr1').set('data', 'parent');
model.result('pg4').feature('lngr1').selection.geom('geom1', 1);
model.result('pg4').feature('lngr1').selection.set([1 2 3 4 5]);
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').label('Effective Mass (schr)');
model.result('pg5').set('data', 'dset2');
model.result('pg5').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg5').set('data', 'dset2');
model.result('pg5').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond1/pg3');
model.result('pg5').feature.create('lngr1', 'LineGraph');
model.result('pg5').feature('lngr1').set('expr', 'schr.meff_psiXX/me_const');
model.result('pg5').feature('lngr1').set('xdata', 'expr');
model.result('pg5').feature('lngr1').set('xdataexpr', 'X');
model.result('pg5').feature('lngr1').set('smooth', 'everywhere');
model.result('pg5').feature('lngr1').set('data', 'parent');
model.result('pg5').feature('lngr1').selection.geom('geom1', 1);
model.result('pg5').feature('lngr1').selection.set([1 2 3 4 5]);
model.result('pg1').run;
model.result('pg2').run;
model.result('pg2').label('Quasi bound state summary plot');
model.result('pg2').set('titletype', 'manual');
model.result('pg2').set('title', 'Summary plot for the quasi bound states');
model.result('pg2').set('xlabelactive', true);
model.result('pg2').set('xlabel', 'X (nm)');
model.result('pg2').set('ylabelactive', true);
model.result('pg2').set('ylabel', 'Energy (eV)');
model.result('pg2').set('showlegends', false);
model.result('pg2').run;
model.result.numerical('gev1').setIndex('expr', 'real(schr.Ei)/reE_anal-1', 2);
model.result.numerical('gev1').setIndex('descr', 'error of real part', 2);
model.result.numerical('gev1').setIndex('expr', 'imag(schr.Ei)/imE_anal-1', 3);
model.result.numerical('gev1').setIndex('descr', 'error of imaginary part', 3);
model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').comments('Eigenvalue');
model.result.numerical('gev1').set('table', 'tbl1');
model.result.numerical('gev1').setResult;

model.study.create('std2');
model.study('std2').create('time', 'Transient');
model.study('std2').feature('time').setSolveFor('/physics/schr', true);
model.study('std2').feature('time').set('useinitsol', true);
model.study('std2').feature('time').set('initstudy', 'std1');
model.study('std2').label('Study 2 Time evolution of the 3rd quasi bound state');

model.physics('schr').create('init2', 'init', 1);
model.physics('schr').feature('init2').label('Initial Values 2 for time dependent study');
model.physics('schr').feature('init2').selection.all;
model.physics('schr').feature('init2').set('psi', 'schr.Psi');

model.study('std2').feature('time').set('tlist', 'range(0,T3/10,tau3/3)');

model.sol.create('sol6');
model.sol('sol6').study('std2');
model.sol('sol6').create('st1', 'StudyStep');
model.sol('sol6').feature('st1').set('study', 'std2');
model.sol('sol6').feature('st1').set('studystep', 'time');
model.sol('sol6').create('v1', 'Variables');
model.sol('sol6').feature('v1').set('control', 'time');
model.sol('sol6').create('t1', 'Time');
model.sol('sol6').feature('t1').set('tlist', 'range(0,T3/10,tau3/3)');
model.sol('sol6').feature('t1').set('plot', 'off');
model.sol('sol6').feature('t1').set('plotgroup', 'pg1');
model.sol('sol6').feature('t1').set('plotfreq', 'tout');
model.sol('sol6').feature('t1').set('probesel', 'all');
model.sol('sol6').feature('t1').set('probes', {});
model.sol('sol6').feature('t1').set('probefreq', 'tsteps');
model.sol('sol6').feature('t1').set('rtol', 1.0E-5);
model.sol('sol6').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol6').feature('t1').set('atolglobalmethod', 'scaled');
model.sol('sol6').feature('t1').set('atolglobalfactor', 0.1);
model.sol('sol6').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol6').feature('t1').set('reacf', true);
model.sol('sol6').feature('t1').set('storeudot', true);
model.sol('sol6').feature('t1').set('tstepsgenalpha', 'strict');
model.sol('sol6').feature('t1').set('endtimeinterpolation', true);
model.sol('sol6').feature('t1').set('timemethod', 'genalpha');
model.sol('sol6').feature('t1').set('rhoinf', 0.75);
model.sol('sol6').feature('t1').set('rescaleafterinitbw', false);
model.sol('sol6').feature('t1').set('bwinitstepfrac', '0.001');
model.sol('sol6').feature('t1').set('control', 'time');
model.sol('sol6').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol6').feature('t1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol6').feature('t1').feature.remove('fcDef');
model.sol('sol6').attach('std2');
model.sol('sol6').runAll;

model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').label('Wave Function (schr)');
model.result('pg6').set('data', 'dset3');
model.result('pg6').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg6').set('data', 'dset3');
model.result('pg6').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond1/pcond2/pg1');
model.result('pg6').feature.create('lngr1', 'LineGraph');
model.result('pg6').feature('lngr1').label('Real Part');
model.result('pg6').feature('lngr1').set('expr', 'psi');
model.result('pg6').feature('lngr1').set('xdata', 'expr');
model.result('pg6').feature('lngr1').set('xdataexpr', 'X');
model.result('pg6').feature('lngr1').set('smooth', 'internal');
model.result('pg6').feature('lngr1').set('data', 'parent');
model.result('pg6').feature('lngr1').selection.geom('geom1', 1);
model.result('pg6').feature('lngr1').selection.set([1 2 3 4 5]);
model.result('pg6').feature.create('lngr2', 'LineGraph');
model.result('pg6').feature('lngr2').label('Imaginary Part');
model.result('pg6').feature('lngr2').set('expr', 'imag(psi)');
model.result('pg6').feature('lngr2').set('xdata', 'expr');
model.result('pg6').feature('lngr2').set('xdataexpr', 'X');
model.result('pg6').feature('lngr2').set('linestyle', 'dashed');
model.result('pg6').feature('lngr2').set('linecolor', 'cyclereset');
model.result('pg6').feature('lngr2').set('smooth', 'internal');
model.result('pg6').feature('lngr2').set('data', 'parent');
model.result('pg6').feature('lngr2').selection.geom('geom1', 1);
model.result('pg6').feature('lngr2').selection.set([1 2 3 4 5]);
model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').label('Probability Density (schr) 1');
model.result('pg7').set('data', 'dset3');
model.result('pg7').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg7').set('data', 'dset3');
model.result('pg7').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond1/pg4');
model.result('pg7').feature.create('lngr1', 'LineGraph');
model.result('pg7').feature('lngr1').set('expr', 'schr.Pr');
model.result('pg7').feature('lngr1').set('xdata', 'expr');
model.result('pg7').feature('lngr1').set('xdataexpr', 'X');
model.result('pg7').feature('lngr1').set('smooth', 'internal');
model.result('pg7').feature('lngr1').set('data', 'parent');
model.result('pg7').feature('lngr1').selection.geom('geom1', 1);
model.result('pg7').feature('lngr1').selection.set([1 2 3 4 5]);
model.result.create('pg8', 'PlotGroup1D');
model.result('pg8').label('Potential Energy (schr) 1');
model.result('pg8').set('data', 'dset3');
model.result('pg8').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg8').set('data', 'dset3');
model.result('pg8').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond1/pg2');
model.result('pg8').feature.create('lngr1', 'LineGraph');
model.result('pg8').feature('lngr1').set('expr', 'schr.V_psi');
model.result('pg8').feature('lngr1').set('unit', 'eV');
model.result('pg8').feature('lngr1').set('xdata', 'expr');
model.result('pg8').feature('lngr1').set('xdataexpr', 'X');
model.result('pg8').feature('lngr1').set('smooth', 'everywhere');
model.result('pg8').feature('lngr1').set('data', 'parent');
model.result('pg8').feature('lngr1').selection.geom('geom1', 1);
model.result('pg8').feature('lngr1').selection.set([1 2 3 4 5]);
model.result.create('pg9', 'PlotGroup1D');
model.result('pg9').label('Effective Mass (schr) 1');
model.result('pg9').set('data', 'dset3');
model.result('pg9').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg9').set('data', 'dset3');
model.result('pg9').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond1/pg3');
model.result('pg9').feature.create('lngr1', 'LineGraph');
model.result('pg9').feature('lngr1').set('expr', 'schr.meff_psiXX/me_const');
model.result('pg9').feature('lngr1').set('xdata', 'expr');
model.result('pg9').feature('lngr1').set('xdataexpr', 'X');
model.result('pg9').feature('lngr1').set('smooth', 'everywhere');
model.result('pg9').feature('lngr1').set('data', 'parent');
model.result('pg9').feature('lngr1').selection.geom('geom1', 1);
model.result('pg9').feature('lngr1').selection.set([1 2 3 4 5]);
model.result('pg6').run;
model.result.export.create('anim1', 'Animation');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('plotgroup', 'pg6');
model.result.export('anim1').run;
model.result.export('anim1').set('framesel', 'all');
model.result.export('anim1').run;
model.result.export.duplicate('anim2', 'anim1');
model.result.export('anim2').showFrame;
model.result.export('anim2').set('plotgroup', 'pg7');
model.result.export('anim2').run;
model.result('pg8').run;
model.result.remove('pg8');
model.result('pg9').run;
model.result.remove('pg9');
model.result.create('pg8', 'PlotGroup1D');
model.result('pg8').run;
model.result('pg8').label('Compare decay of total probability');
model.result('pg8').set('data', 'dset3');
model.result('pg8').set('titletype', 'manual');
model.result('pg8').set('title', 'Decay of the total probability');
model.result('pg8').set('ylabelactive', true);
model.result('pg8').set('ylabel', 'Total probability');
model.result('pg8').create('glob1', 'Global');
model.result('pg8').feature('glob1').set('markerpos', 'datapoints');
model.result('pg8').feature('glob1').set('linewidth', 'preference');
model.result('pg8').feature('glob1').setIndex('expr', 'schr.int(schr.Pr)', 0);
model.result('pg8').feature('glob1').setIndex('descr', 'computed decay curve', 0);
model.result('pg8').feature('glob1').setIndex('expr', 'exp(-t/tau3)^2', 1);
model.result('pg8').feature('glob1').setIndex('descr', 'analytical decay curve', 1);
model.result('pg8').feature('glob1').set('linestyle', 'cycle');
model.result('pg8').run;

model.physics('schr').create('open2', 'OpenBoundary', 0);
model.physics('schr').feature('open2').label('Open Boundary 2 for resonant tunneling study');
model.physics('schr').feature('open2').selection.set([1]);
model.physics('schr').feature('open2').set('openBoundaryType', 'incoming');

model.study.create('std3');
model.study('std3').create('eigv', 'Eigenvalue');
model.study('std3').feature('eigv').set('plotgroup', 'Default');
model.study('std3').feature('eigv').set('neigs', '3');
model.study('std3').feature('eigv').set('eigunit', '');
model.study('std3').feature('eigv').set('shift', '0.1');
model.study('std3').feature('eigv').set('conrad', '1');
model.study('std3').feature('eigv').set('conradynhm', '1');
model.study('std3').feature('eigv').set('conlbdy', '0');
model.study('std3').feature('eigv').set('conubdy', '1');
model.study('std3').feature('eigv').set('linpsolnum', 'auto');
model.study('std3').feature('eigv').set('solnum', 'auto');
model.study('std3').feature('eigv').set('notsolnum', 'auto');
model.study('std3').feature('eigv').set('outputmap', {});
model.study('std3').feature('eigv').set('ngenAUX', '1');
model.study('std3').feature('eigv').set('goalngenAUX', '1');
model.study('std3').feature('eigv').set('ngenAUX', '1');
model.study('std3').feature('eigv').set('goalngenAUX', '1');
model.study('std3').feature('eigv').setSolveFor('/physics/schr', true);
model.study('std3').feature('eigv').set('neigs', 1);
model.study('std3').feature('eigv').set('shift', 'E_anal/lmbd0');
model.study('std3').feature('eigv').set('useadvanceddisable', true);
model.study('std3').feature('eigv').set('disabledphysics', {'schr/init2'});
model.study('std3').label('Study 3 Resonant tunneling');

model.sol.create('sol7');
model.sol('sol7').study('std3');
model.sol('sol7').create('st1', 'StudyStep');
model.sol('sol7').feature('st1').set('study', 'std3');
model.sol('sol7').feature('st1').set('studystep', 'eigv');
model.sol('sol7').create('v1', 'Variables');
model.sol('sol7').feature('v1').set('control', 'eigv');
model.sol('sol7').create('e1', 'Eigenvalue');
model.sol('sol7').feature('e1').set('neigs', 6);
model.sol('sol7').feature('e1').set('shift', '0');
model.sol('sol7').feature('e1').set('rtol', 1.0E-10);
model.sol('sol7').feature('e1').set('transform', 'none');
model.sol('sol7').feature('e1').set('eigref', '0.1');
model.sol('sol7').feature('e1').set('eigvfunscale', 'average');
model.sol('sol7').feature('e1').set('control', 'eigv');
model.sol('sol7').attach('std3');
model.sol('sol7').feature('e1').set('eigref', 'E_anal/lmbd0');

model.study('std3').create('param', 'Parametric');
model.study('std3').feature('param').setIndex('pname', 'lmbd0', 0);
model.study('std3').feature('param').setIndex('plistarr', '', 0);
model.study('std3').feature('param').setIndex('punit', 'J', 0);
model.study('std3').feature('param').setIndex('pname', 'lmbd0', 0);
model.study('std3').feature('param').setIndex('plistarr', '', 0);
model.study('std3').feature('param').setIndex('punit', 'J', 0);
model.study('std3').feature('param').setIndex('pname', 'E_anal', 0);
model.study('std3').feature('param').setIndex('plistarr', 'E1anal E2anal E3anal', 0);

model.batch.create('p2', 'Parametric');
model.batch('p2').study('std3');
model.batch('p2').create('so1', 'Solutionseq');
model.batch('p2').feature('so1').set('seq', 'sol7');
model.batch('p2').feature('so1').set('store', 'on');
model.batch('p2').feature('so1').set('clear', 'on');
model.batch('p2').feature('so1').set('psol', 'none');
model.batch('p2').set('pname', {'E_anal'});
model.batch('p2').set('plistarr', {'E1anal E2anal E3anal'});
model.batch('p2').set('sweeptype', 'sparse');
model.batch('p2').set('probesel', 'all');
model.batch('p2').set('probes', {});
model.batch('p2').set('plot', 'off');
model.batch('p2').set('err', 'on');
model.batch('p2').attach('std3');
model.batch('p2').set('control', 'param');

model.sol.create('sol8');
model.sol('sol8').study('std3');
model.sol('sol8').label('Parametric Solutions 2');

model.batch('p2').feature('so1').set('psol', 'sol8');
model.batch('p2').run('compute');

model.result.numerical.create('gev2', 'EvalGlobal');
model.result.numerical('gev2').label('Eigenvalue 1');
model.result.numerical('gev2').set('data', 'dset5');
model.result.numerical('gev2').set('showlooplevelinput', {'off' 'off' 'off'});
model.result.numerical('gev2').set('hasouter', 'off');
model.result.numerical('gev2').set('expr', {'schr.Ei' 'schr.int(schr.Pr)'});
model.result.numerical('gev2').setIndex('unit', 'eV', 0);
model.result.numerical('gev2').set('descr', {'Eigenenergy' 'Total probability'});
model.result.numerical('gev2').set('hasouter', 'off');
model.result.numerical('gev2').setIndex('unit', 'eV', 0);
model.result.numerical('gev2').set('hasouter', 'off');
model.result.numerical('gev2').setIndex('unit', 'eV', 0);
model.result.numerical('gev2').set('hasouter', 'off');
model.result.numerical('gev2').setIndex('unit', 'eV', 0);
model.result.numerical('gev2').set('hasouter', 'off');
model.result.numerical('gev2').setIndex('unit', 'eV', 0);
model.result.numerical('gev2').set('data', 'dset5');
model.result.numerical('gev2').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond2/pcond5/gev1');
model.result.create('pg9', 'PlotGroup1D');
model.result('pg9').label('Normalized Wave Function (schr) 1');
model.result('pg9').set('data', 'dset5');
model.result('pg9').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg9').set('data', 'dset5');
model.result('pg9').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond1/pcond1/pcond4/pg1');
model.result('pg9').feature.create('lngr1', 'LineGraph');
model.result('pg9').feature('lngr1').label('Real Part');
model.result('pg9').feature('lngr1').set('expr', 'schr.Psi_psi');
model.result('pg9').feature('lngr1').set('xdata', 'expr');
model.result('pg9').feature('lngr1').set('xdataexpr', 'X');
model.result('pg9').feature('lngr1').set('smooth', 'internal');
model.result('pg9').feature('lngr1').set('data', 'parent');
model.result('pg9').feature('lngr1').selection.geom('geom1', 1);
model.result('pg9').feature('lngr1').selection.set([1 2 3 4 5]);
model.result('pg9').feature.create('lngr2', 'LineGraph');
model.result('pg9').feature('lngr2').label('Imaginary Part');
model.result('pg9').feature('lngr2').set('expr', 'imag(schr.Psi_psi)');
model.result('pg9').feature('lngr2').set('xdata', 'expr');
model.result('pg9').feature('lngr2').set('xdataexpr', 'X');
model.result('pg9').feature('lngr2').set('linestyle', 'dashed');
model.result('pg9').feature('lngr2').set('linecolor', 'cyclereset');
model.result('pg9').feature('lngr2').set('smooth', 'internal');
model.result('pg9').feature('lngr2').set('data', 'parent');
model.result('pg9').feature('lngr2').selection.geom('geom1', 1);
model.result('pg9').feature('lngr2').selection.set([1 2 3 4 5]);
model.result.create('pg10', 'PlotGroup1D');
model.result('pg10').label('Potential Energy, Eigenenergy, and Wave Function (schr)');
model.result('pg10').set('data', 'dset5');
model.result('pg10').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg10').set('data', 'dset5');
model.result('pg10').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond1/pcond1/pcond4/pg5');
model.result('pg10').feature.create('lngr1', 'LineGraph');
model.result('pg10').feature('lngr1').label('Potential Energy');
model.result('pg10').feature('lngr1').set('expr', 'schr.V_psi');
model.result('pg10').feature('lngr1').set('unit', 'eV');
model.result('pg10').feature('lngr1').set('xdata', 'expr');
model.result('pg10').feature('lngr1').set('xdataexpr', 'X');
model.result('pg10').feature('lngr1').set('linecolor', 'black');
model.result('pg10').feature('lngr1').set('smooth', 'everywhere');
model.result('pg10').feature('lngr1').set('data', 'parent');
model.result('pg10').feature('lngr1').selection.geom('geom1', 1);
model.result('pg10').feature('lngr1').selection.set([1 2 3 4 5]);
model.result('pg10').feature.create('lngr2', 'LineGraph');
model.result('pg10').feature('lngr2').label('Real Part');
model.result('pg10').feature('lngr2').set('expr', 'schr.Psi_psi*0.1[eV]/schr.plot_fac+schr.Ei');
model.result('pg10').feature('lngr2').set('unit', 'eV');
model.result('pg10').feature('lngr2').set('xdata', 'expr');
model.result('pg10').feature('lngr2').set('xdataexpr', 'X');
model.result('pg10').feature('lngr2').set('legend', true);
model.result('pg10').feature('lngr2').set('smooth', 'internal');
model.result('pg10').feature('lngr2').set('data', 'parent');
model.result('pg10').feature('lngr2').selection.geom('geom1', 1);
model.result('pg10').feature('lngr2').selection.set([1 2 3 4 5]);
model.result('pg10').feature.create('lngr3', 'LineGraph');
model.result('pg10').feature('lngr3').label('Imaginary Part');
model.result('pg10').feature('lngr3').set('expr', 'imag(schr.Psi_psi)*0.1[eV]/schr.plot_fac+schr.Ei');
model.result('pg10').feature('lngr3').set('unit', 'eV');
model.result('pg10').feature('lngr3').set('xdata', 'expr');
model.result('pg10').feature('lngr3').set('xdataexpr', 'X');
model.result('pg10').feature('lngr3').set('linestyle', 'dashed');
model.result('pg10').feature('lngr3').set('linecolor', 'cyclereset');
model.result('pg10').feature('lngr3').set('smooth', 'internal');
model.result('pg10').feature('lngr3').set('data', 'parent');
model.result('pg10').feature('lngr3').selection.geom('geom1', 1);
model.result('pg10').feature('lngr3').selection.set([1 2 3 4 5]);
model.result('pg10').feature.create('lngr4', 'LineGraph');
model.result('pg10').feature('lngr4').label('Eigenenergy');
model.result('pg10').feature('lngr4').set('expr', 'schr.Ei');
model.result('pg10').feature('lngr4').set('unit', 'eV');
model.result('pg10').feature('lngr4').set('xdata', 'expr');
model.result('pg10').feature('lngr4').set('xdataexpr', 'X');
model.result('pg10').feature('lngr4').set('linestyle', 'dotted');
model.result('pg10').feature('lngr4').set('linecolor', 'black');
model.result('pg10').feature('lngr4').set('smooth', 'internal');
model.result('pg10').feature('lngr4').set('data', 'parent');
model.result('pg10').feature('lngr4').selection.geom('geom1', 1);
model.result('pg10').feature('lngr4').selection.set([1 2 3 4 5]);
model.result.create('pg11', 'PlotGroup1D');
model.result('pg11').label('Probability Density (schr) 2');
model.result('pg11').set('data', 'dset5');
model.result('pg11').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg11').set('data', 'dset5');
model.result('pg11').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond1/pg4');
model.result('pg11').feature.create('lngr1', 'LineGraph');
model.result('pg11').feature('lngr1').set('expr', 'schr.Pr');
model.result('pg11').feature('lngr1').set('xdata', 'expr');
model.result('pg11').feature('lngr1').set('xdataexpr', 'X');
model.result('pg11').feature('lngr1').set('smooth', 'internal');
model.result('pg11').feature('lngr1').set('data', 'parent');
model.result('pg11').feature('lngr1').selection.geom('geom1', 1);
model.result('pg11').feature('lngr1').selection.set([1 2 3 4 5]);
model.result.create('pg12', 'PlotGroup1D');
model.result('pg12').label('Potential Energy (schr) 1');
model.result('pg12').set('data', 'dset5');
model.result('pg12').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg12').set('data', 'dset5');
model.result('pg12').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond1/pg2');
model.result('pg12').feature.create('lngr1', 'LineGraph');
model.result('pg12').feature('lngr1').set('expr', 'schr.V_psi');
model.result('pg12').feature('lngr1').set('unit', 'eV');
model.result('pg12').feature('lngr1').set('xdata', 'expr');
model.result('pg12').feature('lngr1').set('xdataexpr', 'X');
model.result('pg12').feature('lngr1').set('smooth', 'everywhere');
model.result('pg12').feature('lngr1').set('data', 'parent');
model.result('pg12').feature('lngr1').selection.geom('geom1', 1);
model.result('pg12').feature('lngr1').selection.set([1 2 3 4 5]);
model.result.create('pg13', 'PlotGroup1D');
model.result('pg13').label('Effective Mass (schr) 1');
model.result('pg13').set('data', 'dset5');
model.result('pg13').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg13').set('data', 'dset5');
model.result('pg13').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond1/pg3');
model.result('pg13').feature.create('lngr1', 'LineGraph');
model.result('pg13').feature('lngr1').set('expr', 'schr.meff_psiXX/me_const');
model.result('pg13').feature('lngr1').set('xdata', 'expr');
model.result('pg13').feature('lngr1').set('xdataexpr', 'X');
model.result('pg13').feature('lngr1').set('smooth', 'everywhere');
model.result('pg13').feature('lngr1').set('data', 'parent');
model.result('pg13').feature('lngr1').selection.geom('geom1', 1);
model.result('pg13').feature('lngr1').selection.set([1 2 3 4 5]);
model.result('pg9').run;
model.result.remove('pg9');
model.result('pg10').run;
model.result('pg11').run;
model.result.remove('pg11');
model.result.remove('pg12');
model.result.remove('pg13');
model.result('pg10').run;
model.result('pg10').label('Resonant tunneling summary plot');
model.result('pg10').set('titletype', 'manual');
model.result('pg10').set('title', 'Summary plot for the resonant tunneling condition');
model.result('pg10').set('xlabelactive', true);
model.result('pg10').set('xlabel', 'X (nm)');
model.result('pg10').set('ylabelactive', true);
model.result('pg10').set('ylabel', 'Energy (eV)');
model.result('pg10').set('showlegends', false);
model.result('pg10').run;
model.result.numerical('gev2').setIndex('expr', 'real(schr.Ei)/E_anal-1', 2);
model.result.numerical('gev2').setIndex('descr', 'error of real part', 2);
model.result.numerical('gev2').setIndex('expr', 'imag(schr.Ei)/E_anal', 3);
model.result.numerical('gev2').setIndex('descr', 'error of imaginary part (exact imaginary part is zero)', 3);
model.result.table.create('tbl2', 'Table');
model.result.table('tbl2').comments('Eigenvalue 1');
model.result.numerical('gev2').set('table', 'tbl2');
model.result.numerical('gev2').setResult;

model.physics('schr').prop('ModelProperties').set('E', 'E0');
model.physics('schr').create('open3', 'OpenBoundary', 0);
model.physics('schr').feature('open3').label('Open Boundary 3 for transmission vs. energy study');
model.physics('schr').feature('open3').selection.set([1]);
model.physics('schr').feature('open3').set('incomingWave', true);
model.physics('schr').feature('open3').set('psi0', 'psi0');

model.study.create('std4');
model.study('std4').create('stat', 'Stationary');
model.study('std4').feature('stat').setSolveFor('/physics/schr', true);
model.study('std4').feature('stat').set('useadvanceddisable', true);
model.study('std4').feature('stat').set('disabledphysics', {'schr/init2'});
model.study('std4').feature('stat').set('useparam', true);
model.study('std4').feature('stat').setIndex('pname', 'lmbd0', 0);
model.study('std4').feature('stat').setIndex('plistarr', '', 0);
model.study('std4').feature('stat').setIndex('punit', 'J', 0);
model.study('std4').feature('stat').setIndex('pname', 'lmbd0', 0);
model.study('std4').feature('stat').setIndex('plistarr', '', 0);
model.study('std4').feature('stat').setIndex('punit', 'J', 0);
model.study('std4').feature('stat').setIndex('pname', 'E0', 0);
model.study('std4').feature('stat').setIndex('plistarr', 'E1anal*(1-0.5*10^range(0,-0.2,-3)) E1anal E1anal+0.5*(E2anal-E1anal)*10^range(-3,0.2,-0.1) E2anal-0.5*(E2anal-E1anal)*10^range(0,-0.2,-3) E2anal  E2anal+0.5*(E3anal-E2anal)*10^range(-3,0.2,-0.1) E3anal-0.5*(E3anal-E2anal)*10^range(0,-0.2,-3) E3anal E3anal*(1+0.1*10^range(-3,0.2,0))', 0);
model.study('std4').label('Study 4 Transmission vs. energy');

model.sol.create('sol12');
model.sol('sol12').study('std4');
model.sol('sol12').create('st1', 'StudyStep');
model.sol('sol12').feature('st1').set('study', 'std4');
model.sol('sol12').feature('st1').set('studystep', 'stat');
model.sol('sol12').create('v1', 'Variables');
model.sol('sol12').feature('v1').set('control', 'stat');
model.sol('sol12').create('s1', 'Stationary');
model.sol('sol12').feature('s1').create('p1', 'Parametric');
model.sol('sol12').feature('s1').feature.remove('pDef');
model.sol('sol12').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol12').feature('s1').set('control', 'stat');
model.sol('sol12').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol12').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol12').feature('s1').feature.remove('fcDef');
model.sol('sol12').attach('std4');
model.sol('sol12').runAll;

model.result.create('pg11', 'PlotGroup1D');
model.result('pg11').label('Wave Function (schr) 1');
model.result('pg11').set('data', 'dset6');
model.result('pg11').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg11').set('data', 'dset6');
model.result('pg11').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond1/pcond2/pg1');
model.result('pg11').feature.create('lngr1', 'LineGraph');
model.result('pg11').feature('lngr1').label('Real Part');
model.result('pg11').feature('lngr1').set('expr', 'psi');
model.result('pg11').feature('lngr1').set('xdata', 'expr');
model.result('pg11').feature('lngr1').set('xdataexpr', 'X');
model.result('pg11').feature('lngr1').set('smooth', 'internal');
model.result('pg11').feature('lngr1').set('data', 'parent');
model.result('pg11').feature('lngr1').selection.geom('geom1', 1);
model.result('pg11').feature('lngr1').selection.set([1 2 3 4 5]);
model.result('pg11').feature.create('lngr2', 'LineGraph');
model.result('pg11').feature('lngr2').label('Imaginary Part');
model.result('pg11').feature('lngr2').set('expr', 'imag(psi)');
model.result('pg11').feature('lngr2').set('xdata', 'expr');
model.result('pg11').feature('lngr2').set('xdataexpr', 'X');
model.result('pg11').feature('lngr2').set('linestyle', 'dashed');
model.result('pg11').feature('lngr2').set('linecolor', 'cyclereset');
model.result('pg11').feature('lngr2').set('smooth', 'internal');
model.result('pg11').feature('lngr2').set('data', 'parent');
model.result('pg11').feature('lngr2').selection.geom('geom1', 1);
model.result('pg11').feature('lngr2').selection.set([1 2 3 4 5]);
model.result.create('pg12', 'PlotGroup1D');
model.result('pg12').label('Potential Energy, Energy, and Wave Function (schr)');
model.result('pg12').set('data', 'dset6');
model.result('pg12').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg12').set('data', 'dset6');
model.result('pg12').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond1/pcond3/pg1');
model.result('pg12').feature.create('lngr1', 'LineGraph');
model.result('pg12').feature('lngr1').label('Potential Energy');
model.result('pg12').feature('lngr1').set('expr', 'schr.V_psi');
model.result('pg12').feature('lngr1').set('unit', 'eV');
model.result('pg12').feature('lngr1').set('xdata', 'expr');
model.result('pg12').feature('lngr1').set('xdataexpr', 'X');
model.result('pg12').feature('lngr1').set('linecolor', 'black');
model.result('pg12').feature('lngr1').set('smooth', 'everywhere');
model.result('pg12').feature('lngr1').set('data', 'parent');
model.result('pg12').feature('lngr1').selection.geom('geom1', 1);
model.result('pg12').feature('lngr1').selection.set([1 2 3 4 5]);
model.result('pg12').feature.create('lngr2', 'LineGraph');
model.result('pg12').feature('lngr2').label('Real Part');
model.result('pg12').feature('lngr2').set('expr', 'psi*0.1[eV]/schr.plot_fac+schr.E');
model.result('pg12').feature('lngr2').set('unit', 'eV');
model.result('pg12').feature('lngr2').set('xdata', 'expr');
model.result('pg12').feature('lngr2').set('xdataexpr', 'X');
model.result('pg12').feature('lngr2').set('legend', true);
model.result('pg12').feature('lngr2').set('smooth', 'internal');
model.result('pg12').feature('lngr2').set('data', 'parent');
model.result('pg12').feature('lngr2').selection.geom('geom1', 1);
model.result('pg12').feature('lngr2').selection.set([1 2 3 4 5]);
model.result('pg12').feature.create('lngr3', 'LineGraph');
model.result('pg12').feature('lngr3').label('Imaginary Part');
model.result('pg12').feature('lngr3').set('expr', 'imag(psi)*0.1[eV]/schr.plot_fac+schr.E');
model.result('pg12').feature('lngr3').set('unit', 'eV');
model.result('pg12').feature('lngr3').set('xdata', 'expr');
model.result('pg12').feature('lngr3').set('xdataexpr', 'X');
model.result('pg12').feature('lngr3').set('linestyle', 'dashed');
model.result('pg12').feature('lngr3').set('linecolor', 'cyclereset');
model.result('pg12').feature('lngr3').set('smooth', 'internal');
model.result('pg12').feature('lngr3').set('data', 'parent');
model.result('pg12').feature('lngr3').selection.geom('geom1', 1);
model.result('pg12').feature('lngr3').selection.set([1 2 3 4 5]);
model.result('pg12').feature.create('lngr4', 'LineGraph');
model.result('pg12').feature('lngr4').label('Energy');
model.result('pg12').feature('lngr4').set('expr', 'schr.E');
model.result('pg12').feature('lngr4').set('unit', 'eV');
model.result('pg12').feature('lngr4').set('xdata', 'expr');
model.result('pg12').feature('lngr4').set('xdataexpr', 'X');
model.result('pg12').feature('lngr4').set('linestyle', 'dotted');
model.result('pg12').feature('lngr4').set('linecolor', 'black');
model.result('pg12').feature('lngr4').set('smooth', 'internal');
model.result('pg12').feature('lngr4').set('data', 'parent');
model.result('pg12').feature('lngr4').selection.geom('geom1', 1);
model.result('pg12').feature('lngr4').selection.set([1 2 3 4 5]);
model.result.create('pg13', 'PlotGroup1D');
model.result('pg13').label('Probability Density (schr) 2');
model.result('pg13').set('data', 'dset6');
model.result('pg13').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg13').set('data', 'dset6');
model.result('pg13').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond1/pg4');
model.result('pg13').feature.create('lngr1', 'LineGraph');
model.result('pg13').feature('lngr1').set('expr', 'schr.Pr');
model.result('pg13').feature('lngr1').set('xdata', 'expr');
model.result('pg13').feature('lngr1').set('xdataexpr', 'X');
model.result('pg13').feature('lngr1').set('smooth', 'internal');
model.result('pg13').feature('lngr1').set('data', 'parent');
model.result('pg13').feature('lngr1').selection.geom('geom1', 1);
model.result('pg13').feature('lngr1').selection.set([1 2 3 4 5]);
model.result.create('pg14', 'PlotGroup1D');
model.result('pg14').label('Potential Energy (schr) 1');
model.result('pg14').set('data', 'dset6');
model.result('pg14').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg14').set('data', 'dset6');
model.result('pg14').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond1/pg2');
model.result('pg14').feature.create('lngr1', 'LineGraph');
model.result('pg14').feature('lngr1').set('expr', 'schr.V_psi');
model.result('pg14').feature('lngr1').set('unit', 'eV');
model.result('pg14').feature('lngr1').set('xdata', 'expr');
model.result('pg14').feature('lngr1').set('xdataexpr', 'X');
model.result('pg14').feature('lngr1').set('smooth', 'everywhere');
model.result('pg14').feature('lngr1').set('data', 'parent');
model.result('pg14').feature('lngr1').selection.geom('geom1', 1);
model.result('pg14').feature('lngr1').selection.set([1 2 3 4 5]);
model.result.create('pg15', 'PlotGroup1D');
model.result('pg15').label('Effective Mass (schr) 1');
model.result('pg15').set('data', 'dset6');
model.result('pg15').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg15').set('data', 'dset6');
model.result('pg15').set('defaultPlotID', 'SchrodingerEquation/phys1/pdef1/pcond1/pg3');
model.result('pg15').feature.create('lngr1', 'LineGraph');
model.result('pg15').feature('lngr1').set('expr', 'schr.meff_psiXX/me_const');
model.result('pg15').feature('lngr1').set('xdata', 'expr');
model.result('pg15').feature('lngr1').set('xdataexpr', 'X');
model.result('pg15').feature('lngr1').set('smooth', 'everywhere');
model.result('pg15').feature('lngr1').set('data', 'parent');
model.result('pg15').feature('lngr1').selection.geom('geom1', 1);
model.result('pg15').feature('lngr1').selection.set([1 2 3 4 5]);
model.result('pg11').run;
model.result.remove('pg11');
model.result('pg12').run;
model.result('pg13').run;
model.result.remove('pg13');
model.result.remove('pg14');
model.result.remove('pg15');
model.result('pg12').run;
model.result('pg12').label('Transmission summary plot');
model.result('pg12').setIndex('looplevelinput', 'manualindices', 0);
model.result('pg12').setIndex('looplevelindices', '17 33 49 65 81', 0);
model.result('pg12').set('titletype', 'manual');
model.result('pg12').set('title', 'Summary plot for the scattering problem');
model.result('pg12').set('xlabelactive', true);
model.result('pg12').set('xlabel', 'X (nm)');
model.result('pg12').set('ylabelactive', true);
model.result('pg12').set('ylabel', 'Energy (eV)');
model.result('pg12').set('showlegends', false);
model.result('pg12').run;
model.result.create('pg13', 'PlotGroup1D');
model.result('pg13').run;
model.result('pg13').label('Reflection & Transmission vs. Energy');
model.result('pg13').set('data', 'dset6');
model.result('pg13').create('glob1', 'Global');
model.result('pg13').feature('glob1').set('markerpos', 'datapoints');
model.result('pg13').feature('glob1').set('linewidth', 'preference');
model.result('pg13').feature('glob1').setIndex('expr', 'abs(schr.open3.int(psi/schr.psiI)-1)^2', 0);
model.result('pg13').feature('glob1').setIndex('descr', 'Reflection coeff.', 0);
model.result('pg13').feature('glob1').setIndex('expr', 'abs(schr.open1.int(psi)/psi0)^2', 1);
model.result('pg13').feature('glob1').setIndex('descr', 'Transmission coeff.', 1);
model.result('pg13').feature('glob1').set('xdataparamunit', 'eV');
model.result('pg13').run;
model.result('pg13').set('ylog', true);
model.result('pg13').run;
model.result('pg13').set('titletype', 'manual');
model.result('pg13').set('title', 'Reflection and transmission coeff. vs. energy');
model.result('pg13').set('xlabelactive', true);
model.result('pg13').set('xlabel', 'Energy (eV)');
model.result('pg13').set('ylabelactive', true);
model.result('pg13').set('ylabel', 'Reflection and transmission coeff.');
model.result('pg13').set('legendpos', 'lowerright');
model.result.table.create('tbl3', 'Table');
model.result.table('tbl3').label('Analytical transmission coefficients');
model.result.table('tbl3').importData('double_barrier_1d_anal.csv');
model.result.table('tbl3').setIndex('headers', 'E0 (eV)', 0, 1);
model.result.table('tbl3').setIndex('headers', 'Analytical transmission coeff.', 1, 1);
model.result.create('pg14', 'PlotGroup1D');
model.result('pg14').set('data', 'none');
model.result('pg14').create('tblp1', 'Table');
model.result('pg14').feature('tblp1').set('source', 'table');
model.result('pg14').feature('tblp1').set('table', 'tbl3');
model.result('pg14').feature('tblp1').set('linewidth', 'preference');
model.result('pg14').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg14').run;
model.result('pg13').run;
model.result('pg13').feature.copy('tblp1', 'pg14/tblp1');
model.result('pg13').run;
model.result('pg14').run;
model.result.remove('pg14');
model.result('pg13').run;
model.result('pg13').feature('tblp1').set('linestyle', 'none');
model.result('pg13').feature('tblp1').set('linemarker', 'circle');
model.result('pg13').feature('tblp1').set('legend', true);
model.result('pg13').run;

model.study('std1').feature('eigv').set('useadvanceddisable', true);
model.study('std1').feature('eigv').set('disabledphysics', {'schr/init2' 'schr/open2' 'schr/open3'});
model.study('std2').feature('time').set('useadvanceddisable', true);
model.study('std2').feature('time').set('disabledphysics', {'schr/open2' 'schr/open3'});
model.study('std3').feature('eigv').set('disabledphysics', {'schr/init2' 'schr/open3'});

model.title('Double Barrier 1D');

model.description(['The double barrier structure is of interest because of its application in semiconductor devices such as resonant-tunneling diodes.' newline  newline 'This verification example demonstrates the Schr' native2unicode(hex2dec({'00' 'f6'}), 'unicode') 'dinger Equation interface to set up a simple 1D GaAs/AlGaAs double barrier structure to analyze the quasibound states and their time evolution, the resonant tunneling phenomenon, and the transmission as a function of energy. The model results show very good agreement with analytical results, both for the computed eigenenergies for the quasibound states and the resonant tunneling condition, as well as the computed transmission coefficients.']);

model.label('double_barrier_1d.mph');

model.modelNode.label('Components');

out = model;
