function out = model
%
% micropump_mechanism.m
%
% Model exported on May 26 2025, 21:30 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/MEMS_Module/Fluid-Structure_Interaction');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('spf', 'LaminarFlow', 'geom1');
model.physics('spf').model('comp1');
model.physics('spf').prop('AdvancedSettingProperty').set('UsePseudoTime', '1');
model.physics('spf').prop('PhysicalModelProperty').set('Compressibility', 'Incompressible');
model.physics('spf').field('velocity').field('u_fluid');
model.physics('spf').field('velocity').component({'u_fluid' 'v_fluid' 'w_fluid'});
model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');
model.physics('solid').field('displacement').field('u_solid');
model.physics('solid').field('displacement').component({'u_solid' 'v_solid' 'w_solid'});
model.physics('solid').prop('ShapeProperty').set('order_displacement', '2');

model.multiphysics.create('fsi1', 'FluidStructureInteractionBC', 'geom1', 1);
model.multiphysics('fsi1').set('Fluid_physics', 'spf');
model.multiphysics('fsi1').set('Structure_physics', 'solid');
model.multiphysics('fsi1').selection.all;

model.common.create('free1', 'DeformingDomain', 'comp1');
model.common('free1').set('smoothingType', 'yeoh');
model.common('free1').selection.set([]);

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/spf', true);
model.study('std1').feature('time').setSolveFor('/physics/solid', true);
model.study('std1').feature('time').setSolveFor('/multiphysics/fsi1', true);

model.param.set('Re', '16');
model.param.descr('Re', 'Reynolds number');
model.param.set('coeff', '4/sqrt(Re)');
model.param.descr('coeff', 'Coefficient to change Reynolds number');
model.param.set('dens', '1000[kg/m^3]');
model.param.descr('dens', 'Fluid density');
model.param.set('visc', '0.001[Pa*s]*coeff');
model.param.descr('visc', 'Fluid dynamic viscosity');
model.param.set('U', '16[cm/s]/coeff');
model.param.descr('U', 'Average inlet flow speed');
model.param.set('H', '100[um]');
model.param.descr('H', 'Channel height');
model.param.set('W', '10[um]');
model.param.descr('W', 'Domain width');
model.param.set('rp', '2[um]');
model.param.descr('rp', 'Pillar radius');
model.param.set('hp', '70[um]');
model.param.descr('hp', 'Pillar height');
model.param.set('L', '600[um]');
model.param.descr('L', 'Length of channel');
model.param.set('beta', '45[deg]');
model.param.descr('beta', 'Flap tilt angle');
model.param.set('x0', '150[um]');
model.param.descr('x0', 'Flap center location');
model.param.set('Re_check', 'dens*U*H/(visc)');
model.param.descr('Re_check', 'Reynolds number');

model.geom('geom1').lengthUnit([native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']);
model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', {'L' 'H'});
model.geom('geom1').feature('r1').set('pos', {'-L/2' '0'});
model.geom('geom1').run('r1');
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').set('size', {'2*rp' '2*hp'});
model.geom('geom1').feature('r2').set('base', 'center');
model.geom('geom1').feature('r2').set('pos', {'x0-hp*sin(beta)/2' '0'});
model.geom('geom1').feature('r2').set('rot', '-beta');
model.geom('geom1').run('r2');
model.geom('geom1').create('copy1', 'Copy');
model.geom('geom1').feature('copy1').selection('input').set({'r1'});
model.geom('geom1').run('copy1');
model.geom('geom1').create('int1', 'Intersection');
model.geom('geom1').feature('int1').selection('input').set({'r1' 'r2'});
model.geom('geom1').feature('int1').set('intbnd', false);
model.geom('geom1').run('int1');
model.geom('geom1').create('fil1', 'Fillet');
model.geom('geom1').feature('fil1').selection('point').set('int1', [3 4]);
model.geom('geom1').feature('fil1').set('radius', 'rp');
model.geom('geom1').run('fil1');
model.geom('geom1').create('copy2', 'Copy');
model.geom('geom1').feature('copy2').selection('input').set({'fil1'});
model.geom('geom1').feature('copy2').set('displx', '-2*x0');
model.geom('geom1').run('copy2');
model.geom('geom1').create('r3', 'Rectangle');
model.geom('geom1').feature('r3').set('size', {'0.8*H' 'H'});
model.geom('geom1').feature('r3').set('pos', {'-0.4*H' 'H'});
model.geom('geom1').runPre('fin');

model.cpl.create('intop1', 'Integration', 'geom1');

model.geom('geom1').run;

model.cpl('intop1').set('axisym', true);
model.cpl('intop1').set('opname', 'intopL');
model.cpl('intop1').selection.geom('geom1', 1);
model.cpl('intop1').selection.set([1]);
model.cpl.create('intop2', 'Integration', 'geom1');
model.cpl('intop2').set('axisym', true);
model.cpl('intop2').set('opname', 'intopR');
model.cpl('intop2').selection.geom('geom1', 1);
model.cpl('intop2').selection.set([17]);

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').set('UoutL', '-intopL(u_fluid)*W');
model.variable('var1').descr('UoutL', 'Flow rate from left outlet');
model.variable('var1').set('UoutR', 'intopR(u_fluid)*W');
model.variable('var1').descr('UoutR', 'Flow rate from right outlet');
model.variable('var1').set('UoutNet', 'UoutR-UoutL');
model.variable('var1').descr('UoutNet', 'Net flow rate');

model.physics.create('ge', 'GlobalEquations', 'geom1');
model.physics('ge').model('comp1');

model.study('std1').feature('time').setSolveFor('/physics/ge', true);

model.physics('ge').prop('EquationForm').set('form', 'Automatic');
model.physics('ge').feature('ge1').setIndex('name', 'Vpump', 0, 0);
model.physics('ge').feature('ge1').setIndex('equation', 'Vpumpt-UoutNet', 0, 0);
model.physics('ge').feature('ge1').setIndex('description', 'Net volume pumped left-to-right', 0, 0);
model.physics('ge').feature('ge1').set('CustomDependentVariableUnit', '1');
model.physics('ge').feature('ge1').set('DependentVariableQuantity', 'none');
model.physics('ge').feature('ge1').setIndex('CustomDependentVariableUnit', 'm^3', 0, 0);
model.physics('ge').feature('ge1').set('CustomSourceTermUnit', '1');
model.physics('ge').feature('ge1').set('SourceTermQuantity', 'none');
model.physics('ge').feature('ge1').setIndex('CustomSourceTermUnit', 'm^3/s', 0, 0);

model.common('free1').set('stiffeningFactor', '100');
model.common('free1').selection.set([1]);
model.common.create('fix1', 'FixedBoundary', 'comp1');
model.common('fix1').selection.set([1 2 7 9 16 17]);
model.common.create('pnmd1', 'PrescribedNormalMeshDisplacement', 'comp1');
model.common('pnmd1').selection.set([3 12]);

model.physics('spf').selection.set([1 3]);
model.physics('spf').create('inl1', 'InletBoundary', 1);
model.physics('spf').feature('inl1').selection.set([10]);
model.physics('spf').feature('inl1').set('U0in', 'U*6*s*(1-s)*sin(2*pi*t/(1[s]))');
model.physics('spf').create('out1', 'OutletBoundary', 1);
model.physics('spf').feature('out1').selection.set([1 17]);
model.physics('spf').feature('out1').set('SuppressBackflow', false);
model.physics('solid').selection.set([1 2 4]);
model.physics('solid').feature('lemm1').set('MixedFormulation', 'pFormulation');
model.physics('solid').create('fix1', 'Fixed', 1);
model.physics('solid').feature('fix1').selection.set([4 13]);

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').label('Fluid');
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').label('Solid');
model.material('mat2').selection.set([2 4]);
model.material('mat1').propertyGroup('def').set('density', {'dens'});
model.material('mat1').propertyGroup('def').set('dynamicviscosity', {'visc'});
model.material('mat2').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat2').propertyGroup('Enu').set('E', {'3.6e5'});
model.material('mat2').propertyGroup('Enu').set('nu', {'0.499'});
model.material('mat2').propertyGroup('def').set('density', {'970'});

model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.geom('geom1');
model.mesh('mesh1').feature('size').set('custom', true);
model.mesh('mesh1').feature('size').set('hmax', 10);
model.mesh('mesh1').feature('size').set('hmin', 1.4);
model.mesh('mesh1').feature('size').set('hgrad', 1.4);
model.mesh('mesh1').feature('size').set('hcurve', 0.6);
model.mesh('mesh1').feature('size').set('hnarrow', 0.7);
model.mesh('mesh1').create('size1', 'Size');
model.mesh('mesh1').feature.move('size1', 1);
model.mesh('mesh1').feature('size1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('size1').selection.set([2 4]);
model.mesh('mesh1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('size1').set('hmax', 2);
model.mesh('mesh1').feature('size1').set('hminactive', true);
model.mesh('mesh1').feature('size1').set('hmin', 1.5);
model.mesh('mesh1').run;

model.study('std1').feature('time').set('tlist', 'range(0,0.02,2)');

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1 3]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_u_solid').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_lemm1_pw').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_spatial_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u_solid').set('scaleval', '1e-2*6.324555320336759E-4');
model.sol('sol1').feature('v1').feature('comp1_solid_lemm1_pw').set('scaleval', '100000000');
model.sol('sol1').feature('v1').feature('comp1_spatial_disp').set('scaleval', '1e-2*6.324555320336759E-4');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.02,2)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalmethod', 'scaled');
model.sol('sol1').feature('t1').set('atolglobalfactor', 0.05);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('atolmethod', {'comp1_fsi1_vWall' 'global' 'comp1_p' 'scaled' 'comp1_solid_lemm1_pw' 'global' 'comp1_spatial_disp' 'global' 'comp1_u_fluid' 'global'  ...
'comp1_u_solid' 'global' 'comp1_ODE1' 'global'});
model.sol('sol1').feature('t1').set('atolvaluemethod', {'comp1_fsi1_vWall' 'factor' 'comp1_p' 'factor' 'comp1_solid_lemm1_pw' 'factor' 'comp1_spatial_disp' 'factor' 'comp1_u_fluid' 'factor'  ...
'comp1_u_solid' 'factor' 'comp1_ODE1' 'factor'});
model.sol('sol1').feature('t1').set('atolfactor', {'comp1_fsi1_vWall' '0.1' 'comp1_p' '1' 'comp1_solid_lemm1_pw' '0.1' 'comp1_spatial_disp' '0.1' 'comp1_u_fluid' '0.1'  ...
'comp1_u_solid' '0.1' 'comp1_ODE1' '0.1'});
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('estrat', 'exclude');
model.sol('sol1').feature('t1').set('rhoinf', 0.5);
model.sol('sol1').feature('t1').set('predictor', 'constant');
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('stabcntrl', true);
model.sol('sol1').feature('t1').set('bwinitstepfrac', '0.01');
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_ODE1'});
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('subdamp', 0.8);
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('subjtech', 'once');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Global ODEs and DAEs');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_u_fluid' 'comp1_p'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('subdamp', 0.8);
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('subjtech', 'once');
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Velocity U_fluid, Pressure p');
model.sol('sol1').feature('t1').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('segvar', {'comp1_u_solid' 'comp1_solid_lemm1_pw'});
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('subdtech', 'const');
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('subdamp', 0.8);
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('subjtech', 'once');
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').feature('ss3').label('Displacement Field');
model.sol('sol1').feature('t1').feature('se1').create('ss4', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss4').set('segvar', {'comp1_spatial_disp'});
model.sol('sol1').feature('t1').feature('se1').feature('ss4').set('subdamp', 0.8);
model.sol('sol1').feature('t1').feature('se1').feature('ss4').set('subjtech', 'once');
model.sol('sol1').feature('t1').feature('se1').feature('ss4').set('subiter', 1);
model.sol('sol1').feature('t1').feature('se1').feature('ss4').set('subtermconst', 'iter');
model.sol('sol1').feature('t1').feature('se1').feature('ss4').set('subntolfact', 0.1);
model.sol('sol1').feature('t1').create('d2', 'Direct');
model.sol('sol1').feature('t1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d2').label('Direct, spatial mesh displacement (spf)');
model.sol('sol1').feature('t1').feature('se1').feature('ss4').set('linsolver', 'd2');
model.sol('sol1').feature('t1').feature('se1').feature('ss4').label('Spatial Mesh Displacement');
model.sol('sol1').feature('t1').feature('se1').create('ss5', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss5').set('segvar', {'comp1_fsi1_vWall'});
model.sol('sol1').feature('t1').feature('se1').feature('ss5').set('subdamp', 0.7);
model.sol('sol1').feature('t1').feature('se1').feature('ss5').set('subjtech', 'onevery');
model.sol('sol1').feature('t1').create('d3', 'Direct');
model.sol('sol1').feature('t1').feature('d3').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d3').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d3').label('Direct 2');
model.sol('sol1').feature('t1').feature('se1').feature('ss5').set('linsolver', 'd3');
model.sol('sol1').feature('t1').feature('se1').feature('ss5').label(['Fluid' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Structure Interaction 1']);
model.sol('sol1').feature('t1').feature('se1').set('ntolfact', 0.5);
model.sol('sol1').feature('t1').feature('se1').set('maxsegiter', 20);
model.sol('sol1').feature('t1').feature('se1').set('segstabacc', 'segaacc');
model.sol('sol1').feature('t1').feature('se1').set('segaaccdim', 5);
model.sol('sol1').feature('t1').feature('se1').set('segaaccdelay', 0);
model.sol('sol1').feature('t1').feature('se1').set('segaaccmix', 0.9);
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('t1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('t1').feature('i1').set('maxlinit', 100);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.dataset('dset1').set('geom', 'geom1');
model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').label('Velocity (spf)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 101, 0);
model.result('pg1').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg1');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').label('Surface');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('smooth', 'internal');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').label('Pressure (spf)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 101, 0);
model.result('pg2').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg2');
model.result('pg2').feature.create('con1', 'Contour');
model.result('pg2').feature('con1').label('Contour');
model.result('pg2').feature('con1').set('showsolutionparams', 'on');
model.result('pg2').feature('con1').set('expr', 'p');
model.result('pg2').feature('con1').set('number', 40);
model.result('pg2').feature('con1').set('levelrounding', false);
model.result('pg2').feature('con1').set('smooth', 'internal');
model.result('pg2').feature('con1').set('showsolutionparams', 'on');
model.result('pg2').feature('con1').set('data', 'parent');
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').set('data', 'dset1');
model.result('pg3').setIndex('looplevel', 101, 0);
model.result('pg3').set('defaultPlotID', 'stress');
model.result('pg3').label('Stress (solid)');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg3').feature('surf1').set('threshold', 'manual');
model.result('pg3').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg3').feature('surf1').set('colortable', 'Rainbow');
model.result('pg3').feature('surf1').set('colortabletrans', 'none');
model.result('pg3').feature('surf1').set('colorscalemode', 'linear');
model.result('pg3').feature('surf1').set('resolution', 'normal');
model.result('pg3').feature('surf1').set('colortable', 'Prism');
model.result.numerical.create('gev1', 'EvalGlobal');
model.result.numerical('gev1').set('data', 'dset1');
model.result.numerical('gev1').set('expr', {'Vpump'});
model.result.numerical('gev1').set('descr', {'Net volume pumped left-to-right'});
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').set('data', 'dset1');
model.result('pg4').create('glob1', 'Global');
model.result('pg4').feature('glob1').set('expr', {'Vpump'});
model.result('pg4').feature('glob1').set('descr', {'Net volume pumped left-to-right'});
model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').set('data', 'dset1');
model.result('pg5').setIndex('looplevel', 101, 0);
model.result('pg5').label('Moving Mesh');
model.result('pg5').create('mesh1', 'Mesh');
model.result('pg5').feature('mesh1').set('meshdomain', 'surface');
model.result('pg5').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg5').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg5').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg5').feature('mesh1').create('sel1', 'MeshSelection');
model.result('pg5').feature('mesh1').feature('sel1').selection.set([1 2 4]);
model.result('pg5').feature('mesh1').set('qualmeasure', 'custom');
model.result('pg5').feature('mesh1').set('qualexpr', 'comp1.spatial.relVol');
model.result('pg5').feature('mesh1').set('colorrangeunitinterval', false);
model.result('pg1').run;
model.result.dataset.duplicate('dset2', 'dset1');
model.result('pg1').run;
model.result('pg1').label('Flow and Stress');
model.result('pg1').set('data', 'dset2');
model.result('pg1').create('surf2', 'Surface');
model.result('pg1').feature('surf2').set('expr', 'solid.misesGp');
model.result('pg1').feature('surf2').set('descr', 'von Mises stress');
model.result('pg1').feature('surf2').set('colortable', 'Traffic');
model.result('pg1').run;
model.result('pg1').create('arws1', 'ArrowSurface');
model.result('pg1').feature('arws1').set('arrowlength', 'logarithmic');
model.result('pg1').feature('arws1').set('color', 'black');
model.result('pg1').run;
model.result.export.create('anim1', 'Animation');
model.result.export('anim1').set('fontsize', '9');
model.result.export('anim1').set('colortheme', 'globaltheme');
model.result.export('anim1').set('customcolor', [1 1 1]);
model.result.export('anim1').set('background', 'color');
model.result.export('anim1').set('gltfincludelines', 'on');
model.result.export('anim1').set('title1d', 'on');
model.result.export('anim1').set('legend1d', 'on');
model.result.export('anim1').set('logo1d', 'on');
model.result.export('anim1').set('options1d', 'on');
model.result.export('anim1').set('title2d', 'on');
model.result.export('anim1').set('legend2d', 'on');
model.result.export('anim1').set('logo2d', 'on');
model.result.export('anim1').set('options2d', 'off');
model.result.export('anim1').set('title3d', 'on');
model.result.export('anim1').set('legend3d', 'on');
model.result.export('anim1').set('logo3d', 'on');
model.result.export('anim1').set('options3d', 'off');
model.result.export('anim1').set('axisorientation', 'on');
model.result.export('anim1').set('grid', 'on');
model.result.export('anim1').set('axes1d', 'on');
model.result.export('anim1').set('axes2d', 'on');
model.result.export('anim1').set('showgrid', 'on');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('framesel', 'all');
model.result.export('anim1').run;
model.result('pg4').run;
model.result('pg4').label('Net Volume Pumped Left-to-Right');
model.result('pg4').set('legendpos', 'upperleft');
model.result('pg1').run;
model.result('pg1').setIndex('looplevel', 14, 0);
model.result('pg1').run;
model.result('pg1').setIndex('looplevel', 39, 0);
model.result('pg1').run;

model.title('Micropump Mechanism');

model.description(['Micropumps are key components of microfluidic systems with applications ranging from biological fluid handling to microelectronic cooling. This model simulates the mechanism of a valveless micropump, that is designed to be effective at low Reynolds numbers, overcoming hydrodynamic reversibility. Valveless pumps are often preferred in microfluidic systems because they minimize the risk of clogging and are gentle on biological material. The Fluid' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Structure Interaction interface is used to solve for the flow of the fluid and the associated deformation of the structure. In addition the Global ODEs and DAEs interface is used to demonstrate how to perform a time resolved integration of the total flow throughout the pumping cycle.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;

model.label('micropump_mechanism.mph');

model.modelNode.label('Components');

out = model;
