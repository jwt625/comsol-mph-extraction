function out = model
%
% steam_reformer.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Chemical_Reaction_Engineering_Module/Reactors_with_Porous_Catalysts');

model.thermodynamics.feature.create('pp1', 'BuiltinPropertyPackage');
model.thermodynamics.feature('pp1').set('compoundlist', {'propane' '74-98-6' 'C3H8' 'COMSOL';  ...
'water' '7732-18-5' 'H2O' 'COMSOL';  ...
'hydrogen' '1333-74-0' 'H2' 'COMSOL';  ...
'carbon dioxide' '124-38-9' 'CO2' 'COMSOL';  ...
'carbon monoxide' '630-08-0' 'CO' 'COMSOL'});
model.thermodynamics.feature('pp1').set('phase_list', {'Gas' 'Vapor'});
model.thermodynamics.feature('pp1').label('Gas System 1');
model.thermodynamics.feature('pp1').set('manager_id', 'COMSOL');
model.thermodynamics.feature('pp1').set('manager_version', '1.0');
model.thermodynamics.feature('pp1').set('packagename', 'pp1');
model.thermodynamics.feature('pp1').set('package_desc', 'Built-in property package');
model.thermodynamics.feature('pp1').set('managerindex', '0');
model.thermodynamics.feature('pp1').set('packageid', 'COMSOL1');
model.thermodynamics.feature('pp1').set('ThermodynamicModel', 'IdealGas');
model.thermodynamics.feature('pp1').set('LiquidPhaseModel', 'None');
model.thermodynamics.feature('pp1').set('LiquidCard', 'None');
model.thermodynamics.feature('pp1').set('EOSModel', 'IdealGas');
model.thermodynamics.feature('pp1').set('GasPhaseModel', 'IdealGas');
model.thermodynamics.feature('pp1').set('GasEOSCard', 'GasPhaseModel');
model.thermodynamics.feature('pp1').set('VapDiffusivity', 'Automatic');
model.thermodynamics.feature('pp1').set('VapThermalConductivity', 'KineticTheory');
model.thermodynamics.feature('pp1').set('VapViscosity', 'Brokaw');
model.thermodynamics.feature('pp1').storePersistenceData;
model.thermodynamics.feature('pp1').set('WarningState', false);
model.thermodynamics.feature('pp1').set('Warning', {''});

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('chem', 'Chemistry', 'geom1');
model.physics('chem').model('comp1');

model.geom('geom1').run;

model.physics('chem').create('spec1', 'SpeciesChem', 3);
model.physics('chem').feature('spec1').set('specName', 'C3H8');
model.physics('chem').create('spec1', 'SpeciesChem', 3);
model.physics('chem').feature('spec1').set('specName', 'H2O');
model.physics('chem').create('spec1', 'SpeciesChem', 3);
model.physics('chem').feature('spec1').set('specName', 'H2');
model.physics('chem').create('spec1', 'SpeciesChem', 3);
model.physics('chem').feature('spec1').set('specName', 'CO2');
model.physics('chem').create('spec1', 'SpeciesChem', 3);
model.physics('chem').feature('spec1').set('specName', 'CO');
model.physics('chem').prop('calcTransport').set('calcTransport', true);
model.physics('chem').prop('mixture').set('ConcentrationType', 'MassFraction');
model.physics('chem').prop('mixture').set('Thermodynamics', true);
model.physics('chem').prop('mixture').set('PropertyPackage', 'pp1');
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('PackageSpecies', 'propane', 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationValue', '0.2', 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('PackageSpecies', 'carbon monoxide', 1);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationValue', '0.2', 1);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('PackageSpecies', 'carbon dioxide', 2);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationValue', '0.2', 2);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('PackageSpecies', 'hydrogen', 3);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationValue', '0.2', 3);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('PackageSpecies', 'water', 4);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationValue', '0.2', 4);
model.physics('chem').prop('mixture').set('mixture', 'gas');

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('u_in_tubes', '1[m/s]', 'Inlet velocity, heating tubes');
model.param.set('T_in_tubes', '900[K]', 'Inlet temperature, heating tubes');
model.param.set('p_in_sr', '50[Pa]', 'Pressure difference');
model.param.set('p_ref', '1e5[Pa]', 'Reference pressure');
model.param.set('T_in_sr', '700[K]', 'Inlet temperature, reformer bed');
model.param.set('h_tubes', '100[W/m^2/K]', 'Heat transfer coefficient, heating tubes');
model.param.set('h_j', '1[W/m^2/K]', 'Heat transfer coefficient, jacket');
model.param.set('w_C3H8_in', '0.2[1]', 'Inlet weight fraction propane');
model.param.set('w_H2_in', '0.01[1]', 'Inlet weight fraction hydrogen');
model.param.set('w_CO2_in', '0.01[1]', 'Inlet weight fraction carbon dioxide');
model.param.set('w_CO_in', '0[1]', 'Inlet weight fraction carbon monoxide');
model.param.set('dens_foam', '24[kg/m^3]', 'Density, insulating foam');
model.param.set('Cp_foam', '1.9[J/kg/K]', 'Heat capacity, insulating foam');
model.param.set('k_foam', '0.027[W/m/K]', 'Thermal conductivity, insulating foam');
model.param.set('Cp_pm', '2800[J/kg/K]', 'Heat capacity, porous matrix');
model.param.set('dens_pm', '2000[kg/m^3]', 'Density, porous matrix');
model.param.set('k_pm', '0.1[W/m/K]', 'Thermal conductivity, porous matrix');
model.param.set('A', '7e5[1/s]', 'Arrhenius frequency factor reaction 1');
model.param.set('Ea', '83.14e3[J/mol]', 'Arrhenius activation energy reaction 1');
model.param.set('A_wgs', '1.6e5[m^3/s/mol]', 'Arrhenius frequency factor reaction 2');
model.param.set('Ea_wgs', '112e3[J/mol]', 'Arrhenius activation energy reaction 2');
model.param.set('porosity', '0.25[1]', 'Void fraction in bed');
model.param.set('kappa_pm', '1e-9[m^2]', 'Permeability of porous matrix');
model.param.set('T_amb', '300[K]', 'Ambient temperature (outside jacket)');

model.geom('geom1').insertFile('steam_reformer_geom_sequence.mph', 'geom1');
model.geom('geom1').run('sel1');

model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl('intop1').set('axisym', true);
model.cpl('intop1').selection.geom('geom1', 2);
model.cpl('intop1').selection.named('geom1_wp1_adjsel1');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').label('Catalyst');
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').label('Insulation');
model.material('mat2').selection.named('geom1_ext1_dom');
model.material.create('mat3', 'Common', 'comp1');
model.material('mat3').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat3').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat3').propertyGroup('def').func.create('rho', 'Analytic');
model.material('mat3').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat3').propertyGroup('def').func.create('cs', 'Analytic');
model.material('mat3').propertyGroup('def').func.create('an1', 'Analytic');
model.material('mat3').propertyGroup('def').func.create('an2', 'Analytic');
model.material('mat3').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat3').propertyGroup.create('NonlinearModel', 'Nonlinear model');
model.material('mat3').propertyGroup.create('idealGas', 'Ideal gas');
model.material('mat3').propertyGroup('idealGas').func.create('Cp', 'Piecewise');
model.material('mat3').label('Air');
model.material('mat3').set('family', 'air');
model.material('mat3').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat3').propertyGroup('def').func('eta').set('pieces', {'200.0' '1600.0' '-8.38278E-7+8.35717342E-8*T^1-7.69429583E-11*T^2+4.6437266E-14*T^3-1.06585607E-17*T^4'});
model.material('mat3').propertyGroup('def').func('eta').set('argunit', 'K');
model.material('mat3').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.material('mat3').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat3').propertyGroup('def').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat3').propertyGroup('def').func('Cp').set('argunit', 'K');
model.material('mat3').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat3').propertyGroup('def').func('rho').set('expr', 'pA*0.02897/R_const[K*mol/J]/T');
model.material('mat3').propertyGroup('def').func('rho').set('args', {'pA' 'T'});
model.material('mat3').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.material('mat3').propertyGroup('def').func('rho').set('argunit', {'Pa' 'K'});
model.material('mat3').propertyGroup('def').func('rho').set('plotaxis', {'off' 'on'});
model.material('mat3').propertyGroup('def').func('rho').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat3').propertyGroup('def').func('rho').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '293.15'});
model.material('mat3').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat3').propertyGroup('def').func('k').set('pieces', {'200.0' '1600.0' '-0.00227583562+1.15480022E-4*T^1-7.90252856E-8*T^2+4.11702505E-11*T^3-7.43864331E-15*T^4'});
model.material('mat3').propertyGroup('def').func('k').set('argunit', 'K');
model.material('mat3').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.material('mat3').propertyGroup('def').func('cs').set('expr', 'sqrt(1.4*R_const[K*mol/J]/0.02897*T)');
model.material('mat3').propertyGroup('def').func('cs').set('args', {'T'});
model.material('mat3').propertyGroup('def').func('cs').set('fununit', 'm/s');
model.material('mat3').propertyGroup('def').func('cs').set('argunit', {'K'});
model.material('mat3').propertyGroup('def').func('cs').set('plotfixedvalue', {'273.15'});
model.material('mat3').propertyGroup('def').func('cs').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat3').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.material('mat3').propertyGroup('def').func('an1').set('expr', '-1/rho(pA,T)*d(rho(pA,T),T)');
model.material('mat3').propertyGroup('def').func('an1').set('args', {'pA' 'T'});
model.material('mat3').propertyGroup('def').func('an1').set('fununit', '1/K');
model.material('mat3').propertyGroup('def').func('an1').set('argunit', {'Pa' 'K'});
model.material('mat3').propertyGroup('def').func('an1').set('plotaxis', {'off' 'on'});
model.material('mat3').propertyGroup('def').func('an1').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat3').propertyGroup('def').func('an1').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '373.15'});
model.material('mat3').propertyGroup('def').func('an2').set('funcname', 'muB');
model.material('mat3').propertyGroup('def').func('an2').set('expr', '0.6*eta(T)');
model.material('mat3').propertyGroup('def').func('an2').set('args', {'T'});
model.material('mat3').propertyGroup('def').func('an2').set('fununit', 'Pa*s');
model.material('mat3').propertyGroup('def').func('an2').set('argunit', {'K'});
model.material('mat3').propertyGroup('def').func('an2').set('plotfixedvalue', {'200'});
model.material('mat3').propertyGroup('def').func('an2').set('plotargs', {'T' '200' '1600'});
model.material('mat3').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.material('mat3').propertyGroup('def').set('molarmass', '');
model.material('mat3').propertyGroup('def').set('bulkviscosity', '');
model.material('mat3').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)'});
model.material('mat3').propertyGroup('def').set('molarmass', '0.02897[kg/mol]');
model.material('mat3').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.material('mat3').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.material('mat3').propertyGroup('def').set('ratioofspecificheat', '1.4');
model.material('mat3').propertyGroup('def').set('electricconductivity', {'0[S/m]' '0' '0' '0' '0[S/m]' '0' '0' '0' '0[S/m]'});
model.material('mat3').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.material('mat3').propertyGroup('def').set('density', 'rho(pA,T)');
model.material('mat3').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.material('mat3').propertyGroup('def').set('soundspeed', 'cs(T)');
model.material('mat3').propertyGroup('def').addInput('temperature');
model.material('mat3').propertyGroup('def').addInput('pressure');
model.material('mat3').propertyGroup('RefractiveIndex').set('n', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('NonlinearModel').set('BA', 'def.gamma-1');
model.material('mat3').propertyGroup('idealGas').func('Cp').label('Piecewise 2');
model.material('mat3').propertyGroup('idealGas').func('Cp').set('arg', 'T');
model.material('mat3').propertyGroup('idealGas').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat3').propertyGroup('idealGas').func('Cp').set('argunit', 'K');
model.material('mat3').propertyGroup('idealGas').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat3').propertyGroup('idealGas').set('Rs', 'R_const/Mn');
model.material('mat3').propertyGroup('idealGas').set('heatcapacity', 'Cp(T)');
model.material('mat3').propertyGroup('idealGas').set('ratioofspecificheat', '1.4');
model.material('mat3').propertyGroup('idealGas').set('molarmass', '0.02897');
model.material('mat3').propertyGroup('idealGas').addInput('temperature');
model.material('mat3').propertyGroup('idealGas').addInput('pressure');
model.material('mat3').materialType('nonSolid');
model.material('mat3').selection.named('geom1_ext3_dom');
model.material.create('pmat1', 'PorousMedia', 'comp1');
model.material('pmat1').selection.named('geom1_ext2_dom');

model.physics.create('tcs', 'ConcentratedSpecies', 'geom1', {'w1' 'w2'});
model.physics('tcs').prop('TransportMechanism').set('MassTransferInPorousMedia', true);
model.physics('tcs').field('massfraction').component({'w1' 'w2' 'w3' 'w4' 'w5'});
model.physics('tcs').field('massfraction').component(1, 'w_H2O');
model.physics('tcs').field('massfraction').component(2, 'w_C3H8');
model.physics('tcs').field('massfraction').component(3, 'w_H2');
model.physics('tcs').field('massfraction').component(4, 'w_CO2');
model.physics('tcs').field('massfraction').component(5, 'w_CO');
model.physics.create('dl', 'PorousMediaFlowDarcy', 'geom1');
model.physics('dl').model('comp1');
model.physics('dl').prop('PhysicalModelProperty').set('pref', 'p_ref');
model.physics('dl').field('pressure').field('p_sr');
model.physics.create('ht', 'PorousMediaHeatTransfer', 'geom1');
model.physics('ht').model('comp1');
model.physics('ht').field('temperature').field('T_sr');
model.physics.create('spf', 'LaminarFlow', 'geom1');
model.physics('spf').model('comp1');
model.physics('spf').prop('AdvancedSettingProperty').set('UsePseudoTime', '1');
model.physics('spf').prop('PhysicalModelProperty').set('Compressibility', 'WeaklyCompressible');
model.physics.create('ht2', 'HeatTransferInFluids', 'geom1');
model.physics('ht2').model('comp1');
model.physics('ht2').prop('ShapeProperty').set('order_temperature', '1');

model.multiphysics.create('nitf1', 'NonIsothermalFlow', 'geom1', 3);
model.multiphysics('nitf1').set('Fluid_physics', 'spf');
model.multiphysics('nitf1').set('Heat_physics', 'ht2');

model.physics('spf').prop('PhysicalModelProperty').set('pref', 'p_ref');
model.physics('spf').field('pressure').field('p_tubes');
model.physics('ht2').field('temperature').field('T_tubes');
model.physics('chem').prop('ChemistryModelInputParameter').set('MassTransfer', 'tcs');
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'w_C3H8', 0, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'w_CO', 1, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'w_CO2', 2, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'w_H2', 3, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'w_H2O', 4, 0);
model.physics('chem').create('rch1', 'ReactionChem', 3);
model.physics('chem').feature('rch1').set('formula', 'C3H8 + 6 H2O => 10 H2 + 3 CO2');
model.physics('chem').feature('rch1').set('ReactionExpression', 'UserDefined');
model.physics('chem').feature('rch1').set('r', 'chem.kf_1*chem.c_C3H8');
model.physics('chem').feature('rch1').set('bulkFwdOrder', 1);
model.physics('chem').feature('rch1').set('useArrhenius', true);
model.physics('chem').feature('rch1').set('Af', 'A');
model.physics('chem').feature('rch1').set('Ef', 'Ea');
model.physics('chem').create('rch2', 'ReactionChem', 3);
model.physics('chem').feature('rch2').set('formula', 'CO+H2O<=>CO2+H2');
model.physics('chem').feature('rch2').set('setKeq0', true);
model.physics('chem').feature('rch2').set('useArrhenius', true);
model.physics('chem').feature('rch2').set('Af', 'A_wgs');
model.physics('chem').feature('rch2').set('Ef', 'Ea_wgs');
model.physics('tcs').label('Transport of Concentrated Species in Bed');
model.physics('tcs').selection.named('geom1_ext2_dom');
model.physics('tcs').prop('TransportMechanism').set('DiffusionModel', 'MaxwellStefan');
model.physics('tcs').feature('init1').setIndex('w0', 'w_C3H8_in', 1);
model.physics('tcs').feature('init1').setIndex('w0', 'w_H2_in', 2);
model.physics('tcs').feature('init1').setIndex('w0', 'w_CO2_in', 3);
model.physics('tcs').feature('init1').setIndex('w0', 'w_CO_in', 4);
model.physics('tcs').create('porous1', 'PorousMedium', 3);
model.physics('tcs').feature('porous1').selection.named('geom1_ext2_dom');
model.physics('tcs').feature('porous1').feature('fluid1').set('u_src', 'root.comp1.dl.u');
model.physics('tcs').feature('porous1').feature('fluid1').setIndex('DiffusivityFrom', 'comp1.chem.D_C3H8_H2O', 0, 0);
model.physics('tcs').feature('porous1').feature('fluid1').setIndex('DiffusivityFrom', 'comp1.chem.D_H2_H2O', 1, 0);
model.physics('tcs').feature('porous1').feature('fluid1').setIndex('DiffusivityFrom', 'comp1.chem.D_CO2_H2O', 2, 0);
model.physics('tcs').feature('porous1').feature('fluid1').setIndex('DiffusivityFrom', 'comp1.chem.D_CO_H2O', 3, 0);
model.physics('tcs').feature('porous1').feature('fluid1').setIndex('DiffusivityFrom', 'comp1.chem.D_C3H8_H2', 4, 0);
model.physics('tcs').feature('porous1').feature('fluid1').setIndex('DiffusivityFrom', 'comp1.chem.D_C3H8_CO2', 5, 0);
model.physics('tcs').feature('porous1').feature('fluid1').setIndex('DiffusivityFrom', 'comp1.chem.D_C3H8_CO', 6, 0);
model.physics('tcs').feature('porous1').feature('fluid1').setIndex('DiffusivityFrom', 'comp1.chem.D_CO2_H2', 7, 0);
model.physics('tcs').feature('porous1').feature('fluid1').setIndex('DiffusivityFrom', 'comp1.chem.D_CO_H2', 8, 0);
model.physics('tcs').feature('porous1').feature('fluid1').setIndex('DiffusivityFrom', 'comp1.chem.D_CO_CO2', 9, 0);
model.physics('tcs').feature('porous1').feature('pm1').set('epsilon_p_mat', 'from_mat');
model.physics('tcs').create('reac1', 'ReactionSources', 3);
model.physics('tcs').feature('reac1').selection.named('geom1_ext2_dom');
model.physics('tcs').feature('reac1').setIndex('R_w_C3H8_src', 'root.comp1.chem.Rw_C3H8', 0);
model.physics('tcs').feature('reac1').setIndex('R_w_H2_src', 'root.comp1.chem.Rw_H2', 0);
model.physics('tcs').feature('reac1').setIndex('R_w_CO2_src', 'root.comp1.chem.Rw_CO2', 0);
model.physics('tcs').feature('reac1').setIndex('R_w_CO_src', 'root.comp1.chem.Rw_CO', 0);
model.physics('tcs').feature('reac1').set('ReactingVolumeType', 'PoreVolume');
model.physics('tcs').create('in1', 'Inflow', 2);

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').set('J_in_C3H8', 'intop1(tcs.rho*dl.U*w_C3H8_in)');
model.variable('var1').descr('J_in_C3H8', 'Mass flow rate, C3H8');
model.variable('var1').set('J_in_H2', 'intop1(tcs.rho*dl.U*w_H2_in)');
model.variable('var1').descr('J_in_H2', 'Mass flow rate, H2');
model.variable('var1').set('J_in_CO2', 'intop1(tcs.rho*dl.U*w_CO2_in)');
model.variable('var1').descr('J_in_CO2', 'Mass flow rate, CO2');
model.variable('var1').set('J_in_CO', 'intop1(tcs.rho*dl.U*w_CO_in)');
model.variable('var1').descr('J_in_CO', 'Mass flow rate, CO');

model.physics('tcs').feature('in1').selection.named('geom1_wp1_adjsel1');
model.physics('tcs').feature('in1').set('MixtureSpecification', 'MassFlowRates');
model.physics('tcs').feature('in1').setIndex('J0', 'J_in_C3H8', 1);
model.physics('tcs').feature('in1').setIndex('J0', 'J_in_H2', 2);
model.physics('tcs').feature('in1').setIndex('J0', 'J_in_CO2', 3);
model.physics('tcs').feature('in1').setIndex('J0', 'J_in_CO', 4);
model.physics('tcs').create('out1', 'Outflow', 2);
model.physics('tcs').feature('out1').selection.named('geom1_difsel3');
model.physics('dl').label('Darcy''s Law in Bed');
model.physics('dl').selection.named('geom1_ext2_dom');
model.physics('dl').feature('porous1').feature('fluid1').set('rho_mat', 'root.comp1.tcs.rho');
model.physics('dl').feature('porous1').feature('fluid1').set('mu_mat', 'root.comp1.chem.eta');
model.physics('dl').create('inl1', 'Inlet', 2);
model.physics('dl').feature('inl1').set('BoundaryCondition', 'Pressure');
model.physics('dl').feature('inl1').set('p0', 'p_in_sr');
model.physics('dl').feature('inl1').selection.named('geom1_wp1_adjsel1');
model.physics('dl').create('out1', 'Outlet', 2);
model.physics('dl').feature('out1').selection.named('geom1_difsel3');
model.physics('dl').feature('out1').set('BoundaryCondition', 'Pressure');
model.physics('dl').create('sym1', 'Symmetry', 2);
model.physics('dl').feature('sym1').selection.named('geom1_intsel5');
model.physics('ht').label('Heat Transfer in Porous Media in Bed');
model.physics('ht').selection.set([1 3]);
model.physics('ht').feature('porous1').feature('fluid1').set('u_src', 'root.comp1.dl.u');
model.physics('ht').feature('porous1').feature('fluid1').set('k_mat', 'root.comp1.chem.kxx');
model.physics('ht').feature('porous1').feature('fluid1').set('rho_mat', 'root.comp1.tcs.rho');
model.physics('ht').feature('porous1').feature('fluid1').set('Cp_mat', 'root.comp1.chem.Cptot');
model.physics('ht').feature('porous1').feature('fluid1').set('gamma_not_IG_mat', 'root.comp1.chem.gamma');
model.physics('ht').feature('porous1').feature('pm1').set('porousMatrixPropertiesType', 'solidPhaseProperties');
model.physics('ht').feature('init1').set('Tinit', 'T_in_sr');
model.physics('ht').create('solid1', 'SolidHeatTransferModel', 3);
model.physics('ht').feature('solid1').selection.named('geom1_ext1_dom');
model.physics('ht').create('temp1', 'TemperatureBoundary', 2);
model.physics('ht').feature('temp1').selection.named('geom1_wp1_adjsel1');
model.physics('ht').feature('temp1').set('T0', 'T_in_sr');
model.physics('ht').create('ofl1', 'ConvectiveOutflow', 2);
model.physics('ht').feature('ofl1').selection.named('geom1_difsel3');
model.physics('ht').create('hf1', 'HeatFluxBoundary', 2);
model.physics('ht').feature('hf1').selection.named('geom1_intsel2');
model.physics('ht').feature('hf1').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht').feature('hf1').set('h', 'h_tubes');
model.physics('ht').feature('hf1').set('Text', 'T_tubes');
model.physics('ht').create('hf2', 'HeatFluxBoundary', 2);
model.physics('ht').feature('hf2').selection.named('geom1_sel1');
model.physics('ht').feature('hf2').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht').feature('hf2').set('h', 'h_j');
model.physics('ht').feature('hf2').set('Text', 'T_amb');
model.physics('ht').create('hs1', 'HeatSource', 3);
model.physics('ht').feature('hs1').set('Q0', 'porosity*chem.Qtot');
model.physics('ht').feature('hs1').selection.named('geom1_ext2_dom');
model.physics('spf').label('Laminar Flow in Heating Tubes');
model.physics('spf').selection.named('geom1_ext3_dom');
model.physics('spf').create('inl1', 'InletBoundary', 2);
model.physics('spf').feature('inl1').selection.named('geom1_difsel1');
model.physics('spf').feature('inl1').set('BoundaryCondition', 'FullyDevelopedFlow');
model.physics('spf').feature('inl1').set('Uavfdf', 'u_in_tubes');
model.physics('spf').create('out1', 'OutletBoundary', 2);
model.physics('spf').feature('out1').label('Outlet Countercurrent');
model.physics('spf').feature('out1').selection.named('geom1_wp1_c2_bnd');
model.physics('spf').feature('out1').set('NormalFlow', true);
model.physics('spf').create('out2', 'OutletBoundary', 2);
model.physics('spf').feature('out2').label('Outlet Co-current');
model.physics('spf').feature('out2').selection.named('geom1_difsel2');
model.physics('spf').create('sym1', 'Symmetry', 2);
model.physics('spf').feature('sym1').selection.named('geom1_intsel4');
model.physics('ht2').label('Heat Transfer in Heating Tubes');
model.physics('ht2').selection.named('geom1_ext3_dom');
model.physics('ht2').feature('init1').set('Tinit', 'T_in_tubes');
model.physics('ht2').create('temp1', 'TemperatureBoundary', 2);
model.physics('ht2').feature('temp1').label('Temperature at Inlet');
model.physics('ht2').feature('temp1').selection.named('geom1_difsel1');
model.physics('ht2').feature('temp1').set('T0', 'T_in_tubes');
model.physics('ht2').create('ofl1', 'ConvectiveOutflow', 2);
model.physics('ht2').feature('ofl1').label('Outflow Countercurrent');
model.physics('ht2').feature('ofl1').selection.named('geom1_wp1_c2_bnd');
model.physics('ht2').feature.duplicate('ofl2', 'ofl1');
model.physics('ht2').feature('ofl2').label('Outflow Co-current');
model.physics('ht2').feature('ofl2').selection.named('geom1_difsel2');
model.physics('ht2').create('hf1', 'HeatFluxBoundary', 2);
model.physics('ht2').feature('hf1').label('Heat Flux to bed');
model.physics('ht2').feature('hf1').selection.named('geom1_intsel2');
model.physics('ht2').feature('hf1').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht2').feature('hf1').set('h', 'h_tubes');
model.physics('ht2').feature('hf1').set('Text', 'T_sr');

model.material('pmat1').propertyGroup('def').set('hydraulicpermeability', {'kappa_pm'});
model.material('pmat1').feature.create('solid1', 'Solid', 'comp1');
model.material('pmat1').feature('solid1').set('link', 'mat1');
model.material('pmat1').feature('solid1').set('vfrac', '1-porosity');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'k_pm'});
model.material('mat1').propertyGroup('def').set('density', {'dens_pm'});
model.material('mat1').propertyGroup('def').set('heatcapacity', {'Cp_pm'});
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'k_foam'});
model.material('mat2').propertyGroup('def').set('density', {'dens_foam'});
model.material('mat2').propertyGroup('def').set('heatcapacity', {'Cp_foam'});

model.mesh('mesh1').create('fq1', 'FreeQuad');
model.mesh('mesh1').feature('fq1').selection.named('geom1_wp1_adjsel1');
model.mesh('mesh1').feature('fq1').feature.create('size1', 'Size');
model.mesh('mesh1').feature('fq1').feature('size1').set('hauto', 5);
model.mesh('mesh1').feature('fq1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('fq1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('fq1').feature('size1').set('hmax', '2e-3/1.08');
model.mesh('mesh1').feature('size').set('custom', true);
model.mesh('mesh1').feature('size').set('hmax', '2e-3');
model.mesh('mesh1').feature('size').set('hmin', '1e-3');
model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.named('geom1_wp1_c2_bnd');
model.mesh('mesh1').feature('ftri1').selection.set([4 9 13 17]);
model.mesh('mesh1').create('bl1', 'BndLayer');
model.mesh('mesh1').feature('bl1').create('blp', 'BndLayerProp');
model.mesh('mesh1').feature('bl1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('bl1').selection.named('geom1_wp1_c2_bnd');
model.mesh('mesh1').feature('bl1').selection.set([1 4 13 17]);
model.mesh('mesh1').feature('bl1').feature('blp').selection.set([5 8 16 17 19 21 24 27]);
model.mesh('mesh1').feature('bl1').feature('blp').set('blnlayers', 3);
model.mesh('mesh1').feature('bl1').feature('blp').set('inittype', 'blhmin');
model.mesh('mesh1').feature('bl1').feature('blp').set('blhmin', '3e-4');
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis1').set('numelem', 50);
model.mesh('mesh1').run;
model.mesh('mesh1').create('bl2', 'BndLayer');
model.mesh('mesh1').feature('bl2').create('blp', 'BndLayerProp');
model.mesh('mesh1').feature('bl2').selection.geom(3);
model.mesh('mesh1').feature('bl2').selection.set([]);
model.mesh('mesh1').feature('bl2').selection.allGeom;
model.mesh('mesh1').feature('bl2').set('smoothtransition', false);
model.mesh('mesh1').feature('bl2').feature('blp').selection.named('geom1_difsel1');
model.mesh('mesh1').feature('bl2').feature('blp').set('inittype', 'blhmin');
model.mesh('mesh1').feature('bl2').feature('blp').set('blnlayers', 6);
model.mesh('mesh1').feature('bl2').feature('blp').set('blhmin', '0.0003');
model.mesh('mesh1').run;
model.mesh('mesh1').stat.setQualityMeasure('skewness');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/chem', true);
model.study('std1').feature('stat').setSolveFor('/physics/tcs', true);
model.study('std1').feature('stat').setSolveFor('/physics/dl', true);
model.study('std1').feature('stat').setSolveFor('/physics/ht', true);
model.study('std1').feature('stat').setSolveFor('/physics/spf', true);
model.study('std1').feature('stat').setSolveFor('/physics/ht2', true);
model.study('std1').feature('stat').setSolveFor('/multiphysics/nitf1', true);
model.study('std1').label('Countercurrent T_in_tubes = 900K');
model.study('std1').setGenPlots(false);

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([2 4 5]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('se1', 'Segregated');
model.sol('sol1').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_p_sr'});
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, pressure (dl)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').label('Pressure P_sr');
model.sol('sol1').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_T_sr'});
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subdamp', 0.8);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, heat transfer variables (ht)');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').label('Temperature');
model.sol('sol1').feature('s1').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss3').set('segvar', {'comp1_p_tubes' 'comp1_u'});
model.sol('sol1').feature('s1').feature('se1').feature('ss3').set('subdamp', 0.5);
model.sol('sol1').feature('s1').create('d2', 'Direct');
model.sol('sol1').feature('s1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d2').label('Direct, fluid flow variables (spf)');
model.sol('sol1').feature('s1').feature('se1').feature('ss3').set('linsolver', 'd2');
model.sol('sol1').feature('s1').feature('se1').feature('ss3').label('Velocity u, Pressure P_tubes');
model.sol('sol1').feature('s1').feature('se1').create('ss4', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss4').set('segvar', {'comp1_T_tubes'});
model.sol('sol1').feature('s1').feature('se1').feature('ss4').set('subdamp', 0.5);
model.sol('sol1').feature('s1').create('d3', 'Direct');
model.sol('sol1').feature('s1').feature('d3').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d3').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d3').label('Direct, heat transfer variables (ht2)');
model.sol('sol1').feature('s1').feature('se1').feature('ss4').set('linsolver', 'd3');
model.sol('sol1').feature('s1').feature('se1').feature('ss4').label('Temperature (2)');
model.sol('sol1').feature('s1').feature('se1').create('ss5', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss5').set('segvar', {'comp1_w_C3H8' 'comp1_w_H2' 'comp1_w_CO2' 'comp1_w_CO' 'comp1_tcs_in1_wbnd_w_C3H8' 'comp1_tcs_in1_wbnd_w_H2' 'comp1_tcs_in1_wbnd_w_CO2' 'comp1_tcs_in1_wbnd_w_CO'});
model.sol('sol1').feature('s1').feature('se1').feature('ss5').set('subdamp', 0.35);
model.sol('sol1').feature('s1').feature('se1').feature('ss5').set('subntolfact', 1);
model.sol('sol1').feature('s1').feature('se1').feature('ss5').set('subiter', 3);
model.sol('sol1').feature('s1').feature('se1').feature('ss5').set('subtermconst', 'itertol');
model.sol('sol1').feature('s1').create('d4', 'Direct');
model.sol('sol1').feature('s1').feature('d4').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d4').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d4').label('Direct, mass fractions (tcs)');
model.sol('sol1').feature('s1').feature('se1').feature('ss5').set('linsolver', 'd4');
model.sol('sol1').feature('s1').feature('se1').feature('ss5').label('Mass Fractions');
model.sol('sol1').feature('s1').feature('se1').set('maxsegiter', 200);
model.sol('sol1').feature('s1').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol1').feature('s1').feature('se1').set('subinitcfl', 5);
model.sol('sol1').feature('s1').feature('se1').set('subkppid', 0.65);
model.sol('sol1').feature('s1').feature('se1').set('subkdpid', 0.05);
model.sol('sol1').feature('s1').feature('se1').set('subkipid', 0.05);
model.sol('sol1').feature('s1').feature('se1').set('subcfltol', 0.1);
model.sol('sol1').feature('s1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol1').feature('s1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.T_sr 0 comp1.T_tubes 0 ');
model.sol('sol1').feature('s1').create('d5', 'Direct');
model.sol('sol1').feature('s1').feature('d5').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d5').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d5').label('Direct, pressure (dl)');
model.sol('sol1').feature('s1').create('i2', 'Iterative');
model.sol('sol1').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i2').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i2').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i2').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i2').set('maxlinit', 10000);
model.sol('sol1').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i2').label('AMG, heat transfer variables (ht)');
model.sol('sol1').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').create('i3', 'Iterative');
model.sol('sol1').feature('s1').feature('i3').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i3').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i3').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i3').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i3').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i3').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i3').label('AMG, fluid flow variables (spf)');
model.sol('sol1').feature('s1').feature('i3').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').create('i4', 'Iterative');
model.sol('sol1').feature('s1').feature('i4').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i4').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i4').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i4').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i4').set('maxlinit', 10000);
model.sol('sol1').feature('s1').feature('i4').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i4').label('AMG, heat transfer variables (ht2)');
model.sol('sol1').feature('s1').feature('i4').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i4').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').create('i5', 'Iterative');
model.sol('sol1').feature('s1').feature('i5').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i5').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i5').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i5').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i5').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i5').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i5').label('AMG, mass fractions (tcs)');
model.sol('sol1').feature('s1').feature('i5').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i5').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i5').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i5').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i5').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i5').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i5').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i5').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i5').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i5').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i5').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i5').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i5').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i5').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i5').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i5').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s1').feature('i5').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i5').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i5').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i5').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i5').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i5').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i5').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i5').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s1').feature('i5').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i5').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i5').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i5').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i5').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').attach('std1');

model.study('std1').feature('stat').setEntry('activate', 'chem', false);
model.study('std1').feature('stat').setEntry('activate', 'tcs', false);
model.study('std1').feature('stat').setEntry('activate', 'ht', false);
model.study('std1').feature('stat').setEntry('activate', 'spf', false);
model.study('std1').feature('stat').setEntry('activate', 'ht2', false);
model.study('std1').feature('stat').setEntry('activateCoupling', 'nitf1', false);
model.study('std1').feature.duplicate('stat1', 'stat');
model.study('std1').feature('stat1').setEntry('activate', 'dl', false);
model.study('std1').feature('stat1').setEntry('activate', 'spf', true);
model.study('std1').feature('stat1').set('useadvanceddisable', true);
model.study('std1').feature('stat1').set('disabledphysics', {'spf/out2' 'ht2/ofl2'});
model.study('std1').feature.duplicate('stat2', 'stat1');
model.study('std1').feature('stat2').set('useadvanceddisable', false);
model.study('std1').feature('stat2').setEntry('activate', 'chem', true);
model.study('std1').feature('stat2').setEntry('activate', 'tcs', true);
model.study('std1').feature('stat2').setEntry('activate', 'dl', true);
model.study('std1').feature('stat2').setEntry('activate', 'ht', true);
model.study('std1').feature('stat2').setEntry('activate', 'ht2', true);
model.study('std1').feature('stat2').setEntry('activateCoupling', 'nitf1', true);
model.study('std1').feature('stat2').set('useadvanceddisable', true);

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([2 4 5]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([2 4 5]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([2 4 5]);

model.sol('sol1').study('std1');

model.study('std1').feature('stat2').set('notsolnum', 'auto');
model.study('std1').feature('stat2').set('notsolvertype', 'solnum');
model.study('std1').feature('stat2').set('notsolnumhide', 'off');
model.study('std1').feature('stat2').set('notstudyhide', 'off');
model.study('std1').feature('stat2').set('notsolhide', 'on');
model.study('std1').feature('stat2').set('solnum', 'auto');
model.study('std1').feature('stat2').set('solvertype', 'solnum');
model.study('std1').feature('stat2').set('solnumhide', 'off');
model.study('std1').feature('stat2').set('initstudyhide', 'off');
model.study('std1').feature('stat2').set('initsolhide', 'on');
model.study('std1').feature('stat1').set('notsolnum', 'auto');
model.study('std1').feature('stat1').set('notsolvertype', 'solnum');
model.study('std1').feature('stat1').set('notsolnumhide', 'off');
model.study('std1').feature('stat1').set('notstudyhide', 'off');
model.study('std1').feature('stat1').set('notsolhide', 'on');
model.study('std1').feature('stat1').set('solnum', 'auto');
model.study('std1').feature('stat1').set('solvertype', 'solnum');
model.study('std1').feature('stat1').set('solnumhide', 'off');
model.study('std1').feature('stat1').set('initstudyhide', 'off');
model.study('std1').feature('stat1').set('initsolhide', 'on');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, pressure (dl)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, pressure (dl)');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'stat1');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'stat1');
model.sol('sol1').create('s2', 'Stationary');
model.sol('sol1').feature('s2').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s2').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s2').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s2').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s2').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol1').feature('s2').create('i1', 'Iterative');
model.sol('sol1').feature('s2').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s2').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s2').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s2').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s2').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s2').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s2').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol1').feature('s2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf_sel1' 'comp1_spf_inl1_Pinlfdf_sel2' 'comp1_spf_inl1_Pinlfdf_sel3'});
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf_sel1' 'comp1_spf_inl1_Pinlfdf_sel2' 'comp1_spf_inl1_Pinlfdf_sel3'});
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s2').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s2').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s2').feature.remove('fcDef');
model.sol('sol1').create('su2', 'StoreSolution');
model.sol('sol1').create('st3', 'StudyStep');
model.sol('sol1').feature('st3').set('study', 'std1');
model.sol('sol1').feature('st3').set('studystep', 'stat2');
model.sol('sol1').create('v3', 'Variables');
model.sol('sol1').feature('v3').set('initmethod', 'sol');
model.sol('sol1').feature('v3').set('initsol', 'sol1');
model.sol('sol1').feature('v3').set('initsoluse', 'sol3');
model.sol('sol1').feature('v3').set('notsolmethod', 'sol');
model.sol('sol1').feature('v3').set('notsol', 'sol1');
model.sol('sol1').feature('v3').set('control', 'stat2');
model.sol('sol1').create('s3', 'Stationary');
model.sol('sol1').feature('s3').set('stol', 0.001);
model.sol('sol1').feature('s3').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s3').create('seDef', 'Segregated');
model.sol('sol1').feature('s3').create('se1', 'Segregated');
model.sol('sol1').feature('s3').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s3').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s3').feature('se1').feature('ss1').set('segvar', {'comp1_p_sr'});
model.sol('sol1').feature('s3').create('i1', 'Iterative');
model.sol('sol1').feature('s3').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s3').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s3').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s3').feature('i1').set('rhob', 400);
model.sol('sol1').feature('s3').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s3').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s3').feature('i1').label('AMG, pressure (dl)');
model.sol('sol1').feature('s3').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('saamgcompwise', false);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s3').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('s3').feature('se1').feature('ss1').label('Pressure P_sr');
model.sol('sol1').feature('s3').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s3').feature('se1').feature('ss2').set('segvar', {'comp1_T_sr'});
model.sol('sol1').feature('s3').feature('se1').feature('ss2').set('subdamp', 0.8);
model.sol('sol1').feature('s3').create('d1', 'Direct');
model.sol('sol1').feature('s3').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s3').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s3').feature('d1').label('Direct, heat transfer variables (ht)');
model.sol('sol1').feature('s3').feature('se1').feature('ss2').set('linsolver', 'd1');
model.sol('sol1').feature('s3').feature('se1').feature('ss2').label('Temperature');
model.sol('sol1').feature('s3').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol1').feature('s3').feature('se1').feature('ss3').set('segvar', {'comp1_p_tubes' 'comp1_u' 'comp1_spf_inl1_Pinlfdf_sel1' 'comp1_spf_inl1_Pinlfdf_sel2' 'comp1_spf_inl1_Pinlfdf_sel3'});
model.sol('sol1').feature('s3').feature('se1').feature('ss3').set('subdamp', 0.5);
model.sol('sol1').feature('s3').create('d2', 'Direct');
model.sol('sol1').feature('s3').feature('d2').set('linsolver', 'pardiso');
model.sol('sol1').feature('s3').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s3').feature('d2').label('Direct, fluid flow variables (spf)');
model.sol('sol1').feature('s3').feature('se1').feature('ss3').set('linsolver', 'd2');
model.sol('sol1').feature('s3').feature('se1').feature('ss3').label('Velocity u, Pressure P_tubes');
model.sol('sol1').feature('s3').feature('se1').create('ss4', 'SegregatedStep');
model.sol('sol1').feature('s3').feature('se1').feature('ss4').set('segvar', {'comp1_T_tubes'});
model.sol('sol1').feature('s3').feature('se1').feature('ss4').set('subdamp', 0.5);
model.sol('sol1').feature('s3').create('d3', 'Direct');
model.sol('sol1').feature('s3').feature('d3').set('linsolver', 'pardiso');
model.sol('sol1').feature('s3').feature('d3').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s3').feature('d3').label('Direct, heat transfer variables (ht2)');
model.sol('sol1').feature('s3').feature('se1').feature('ss4').set('linsolver', 'd3');
model.sol('sol1').feature('s3').feature('se1').feature('ss4').label('Temperature (2)');
model.sol('sol1').feature('s3').feature('se1').create('ss5', 'SegregatedStep');
model.sol('sol1').feature('s3').feature('se1').feature('ss5').set('segvar', {'comp1_w_C3H8' 'comp1_w_H2' 'comp1_w_CO2' 'comp1_w_CO' 'comp1_tcs_in1_wbnd_w_C3H8' 'comp1_tcs_in1_wbnd_w_H2' 'comp1_tcs_in1_wbnd_w_CO2' 'comp1_tcs_in1_wbnd_w_CO'});
model.sol('sol1').feature('s3').feature('se1').feature('ss5').set('subdamp', 0.35);
model.sol('sol1').feature('s3').feature('se1').feature('ss5').set('subntolfact', 1);
model.sol('sol1').feature('s3').feature('se1').feature('ss5').set('subiter', 3);
model.sol('sol1').feature('s3').feature('se1').feature('ss5').set('subtermconst', 'itertol');
model.sol('sol1').feature('s3').create('d4', 'Direct');
model.sol('sol1').feature('s3').feature('d4').set('linsolver', 'pardiso');
model.sol('sol1').feature('s3').feature('d4').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s3').feature('d4').label('Direct, mass fractions (tcs)');
model.sol('sol1').feature('s3').feature('se1').feature('ss5').set('linsolver', 'd4');
model.sol('sol1').feature('s3').feature('se1').feature('ss5').label('Mass Fractions');
model.sol('sol1').feature('s3').feature('se1').set('maxsegiter', 200);
model.sol('sol1').feature('s3').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol1').feature('s3').feature('se1').set('subinitcfl', 5);
model.sol('sol1').feature('s3').feature('se1').set('subkppid', 0.65);
model.sol('sol1').feature('s3').feature('se1').set('subkdpid', 0.05);
model.sol('sol1').feature('s3').feature('se1').set('subkipid', 0.05);
model.sol('sol1').feature('s3').feature('se1').set('subcfltol', 0.1);
model.sol('sol1').feature('s3').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol1').feature('s3').feature('se1').feature('ll1').set('lowerlimit', 'comp1.T_sr 0 comp1.T_tubes 0 ');
model.sol('sol1').feature('s3').create('d5', 'Direct');
model.sol('sol1').feature('s3').feature('d5').set('linsolver', 'pardiso');
model.sol('sol1').feature('s3').feature('d5').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s3').feature('d5').label('Direct, pressure (dl)');
model.sol('sol1').feature('s3').create('i2', 'Iterative');
model.sol('sol1').feature('s3').feature('i2').set('linsolver', 'gmres');
model.sol('sol1').feature('s3').feature('i2').set('prefuntype', 'left');
model.sol('sol1').feature('s3').feature('i2').set('itrestart', 50);
model.sol('sol1').feature('s3').feature('i2').set('rhob', 20);
model.sol('sol1').feature('s3').feature('i2').set('maxlinit', 10000);
model.sol('sol1').feature('s3').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('s3').feature('i2').label('AMG, heat transfer variables (ht)');
model.sol('sol1').feature('s3').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s3').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s3').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s3').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s3').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s3').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s3').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s3').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s3').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s3').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s3').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s3').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('s3').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s3').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s3').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('s3').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s3').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s3').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s3').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s3').create('i3', 'Iterative');
model.sol('sol1').feature('s3').feature('i3').set('linsolver', 'gmres');
model.sol('sol1').feature('s3').feature('i3').set('prefuntype', 'left');
model.sol('sol1').feature('s3').feature('i3').set('itrestart', 50);
model.sol('sol1').feature('s3').feature('i3').set('rhob', 20);
model.sol('sol1').feature('s3').feature('i3').set('maxlinit', 1000);
model.sol('sol1').feature('s3').feature('i3').set('nlinnormuse', 'on');
model.sol('sol1').feature('s3').feature('i3').label('AMG, fluid flow variables (spf)');
model.sol('sol1').feature('s3').feature('i3').create('mg1', 'Multigrid');
model.sol('sol1').feature('s3').feature('i3').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s3').feature('i3').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s3').feature('i3').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('s3').feature('i3').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('s3').feature('i3').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s3').feature('i3').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s3').feature('i3').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s3').feature('i3').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s3').feature('i3').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s3').feature('i3').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s3').feature('i3').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s3').feature('i3').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('s3').feature('i3').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s3').feature('i3').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s3').feature('i3').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s3').feature('i3').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s3').feature('i3').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s3').feature('i3').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf_sel1' 'comp1_spf_inl1_Pinlfdf_sel2' 'comp1_spf_inl1_Pinlfdf_sel3'});
model.sol('sol1').feature('s3').feature('i3').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s3').feature('i3').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s3').feature('i3').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s3').feature('i3').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s3').feature('i3').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s3').feature('i3').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s3').feature('i3').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s3').feature('i3').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s3').feature('i3').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s3').feature('i3').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s3').feature('i3').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s3').feature('i3').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf_sel1' 'comp1_spf_inl1_Pinlfdf_sel2' 'comp1_spf_inl1_Pinlfdf_sel3'});
model.sol('sol1').feature('s3').feature('i3').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s3').feature('i3').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s3').feature('i3').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s3').feature('i3').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s3').feature('i3').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s3').feature('i3').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s3').create('i4', 'Iterative');
model.sol('sol1').feature('s3').feature('i4').set('linsolver', 'gmres');
model.sol('sol1').feature('s3').feature('i4').set('prefuntype', 'left');
model.sol('sol1').feature('s3').feature('i4').set('itrestart', 50);
model.sol('sol1').feature('s3').feature('i4').set('rhob', 20);
model.sol('sol1').feature('s3').feature('i4').set('maxlinit', 10000);
model.sol('sol1').feature('s3').feature('i4').set('nlinnormuse', 'on');
model.sol('sol1').feature('s3').feature('i4').label('AMG, heat transfer variables (ht2)');
model.sol('sol1').feature('s3').feature('i4').create('mg1', 'Multigrid');
model.sol('sol1').feature('s3').feature('i4').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s3').feature('i4').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s3').feature('i4').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s3').feature('i4').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s3').feature('i4').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s3').feature('i4').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s3').feature('i4').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s3').feature('i4').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s3').feature('i4').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s3').feature('i4').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s3').feature('i4').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('s3').feature('i4').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s3').feature('i4').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s3').feature('i4').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('s3').feature('i4').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s3').feature('i4').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s3').feature('i4').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s3').feature('i4').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s3').create('i5', 'Iterative');
model.sol('sol1').feature('s3').feature('i5').set('linsolver', 'gmres');
model.sol('sol1').feature('s3').feature('i5').set('prefuntype', 'left');
model.sol('sol1').feature('s3').feature('i5').set('itrestart', 50);
model.sol('sol1').feature('s3').feature('i5').set('rhob', 400);
model.sol('sol1').feature('s3').feature('i5').set('maxlinit', 1000);
model.sol('sol1').feature('s3').feature('i5').set('nlinnormuse', 'on');
model.sol('sol1').feature('s3').feature('i5').label('AMG, mass fractions (tcs)');
model.sol('sol1').feature('s3').feature('i5').create('mg1', 'Multigrid');
model.sol('sol1').feature('s3').feature('i5').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s3').feature('i5').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s3').feature('i5').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s3').feature('i5').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s3').feature('i5').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s3').feature('i5').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s3').feature('i5').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s3').feature('i5').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s3').feature('i5').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s3').feature('i5').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s3').feature('i5').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s3').feature('i5').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s3').feature('i5').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s3').feature('i5').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s3').feature('i5').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s3').feature('i5').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s3').feature('i5').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s3').feature('i5').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s3').feature('i5').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s3').feature('i5').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s3').feature('i5').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s3').feature('i5').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s3').feature('i5').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s3').feature('i5').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s3').feature('i5').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s3').feature('i5').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s3').feature('i5').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s3').feature('i5').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s3').feature.remove('fcDef');
model.sol('sol1').feature('s3').feature.remove('seDef');
model.sol('sol1').feature('v3').set('notsolnum', 'auto');
model.sol('sol1').feature('v3').set('notsolvertype', 'solnum');
model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol1').feature('v2').set('solnum', 'auto');
model.sol('sol1').feature('v2').set('solvertype', 'solnum');

model.study('std1').feature('stat2').set('notsolnum', 'auto');
model.study('std1').feature('stat2').set('notsolvertype', 'solnum');
model.study('std1').feature('stat2').set('notsolnumhide', 'off');
model.study('std1').feature('stat2').set('notstudyhide', 'off');
model.study('std1').feature('stat2').set('notsolhide', 'off');
model.study('std1').feature('stat1').set('notsolnum', 'auto');
model.study('std1').feature('stat1').set('notsolvertype', 'solnum');
model.study('std1').feature('stat1').set('notsolnumhide', 'off');
model.study('std1').feature('stat1').set('notstudyhide', 'off');
model.study('std1').feature('stat1').set('notsolhide', 'off');
model.study('std1').feature('stat1').set('solnum', 'auto');
model.study('std1').feature('stat1').set('solvertype', 'solnum');
model.study('std1').feature('stat1').set('solnumhide', 'off');
model.study('std1').feature('stat1').set('initstudyhide', 'off');
model.study('std1').feature('stat1').set('initsolhide', 'off');

model.sol('sol1').attach('std1');
model.sol('sol1').feature('s3').create('fc1', 'FullyCoupled');

model.study.create('std2');
model.study('std2').label('Co-current T_in_tubes = 900, 1000 K');
model.study('std2').setGenPlots(false);
model.study('std2').feature.copy('stat1', 'std1/stat');
model.study('std2').feature.copy('stat2', 'std1/stat1');
model.study('std2').feature.copy('stat3', 'std1/stat2');
model.study('std2').feature('stat2').set('disabledphysics', {'spf/out1' 'ht2/ofl1'});
model.study('std2').feature('stat3').set('disabledphysics', {'spf/out1' 'ht2/ofl1'});

model.sol.create('sol4');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([2 4 5]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([2 4 5]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([2 4 5]);

model.sol('sol4').study('std2');
model.sol('sol4').create('st1', 'StudyStep');
model.sol('sol4').feature('st1').set('study', 'std2');
model.sol('sol4').feature('st1').set('studystep', 'stat1');
model.sol('sol4').create('v1', 'Variables');
model.sol('sol4').feature('v1').set('control', 'stat1');
model.sol('sol4').create('s1', 'Stationary');
model.sol('sol4').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol4').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol4').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol4').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol4').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol4').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol4').feature('s1').create('i1', 'Iterative');
model.sol('sol4').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol4').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol4').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol4').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol4').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol4').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol4').feature('s1').feature('i1').label('AMG, pressure (dl)');
model.sol('sol4').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', false);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('s1').create('d1', 'Direct');
model.sol('sol4').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('s1').feature('d1').label('Direct, pressure (dl)');
model.sol('sol4').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol4').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol4').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol4').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol4').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol4').feature('s1').feature.remove('fcDef');
model.sol('sol4').create('su1', 'StoreSolution');
model.sol('sol4').create('st2', 'StudyStep');
model.sol('sol4').feature('st2').set('study', 'std2');
model.sol('sol4').feature('st2').set('studystep', 'stat2');
model.sol('sol4').create('v2', 'Variables');
model.sol('sol4').feature('v2').set('initmethod', 'sol');
model.sol('sol4').feature('v2').set('initsol', 'sol4');
model.sol('sol4').feature('v2').set('notsolmethod', 'sol');
model.sol('sol4').feature('v2').set('notsol', 'sol4');
model.sol('sol4').feature('v2').set('control', 'stat2');
model.sol('sol4').create('s2', 'Stationary');
model.sol('sol4').feature('s2').feature('aDef').set('cachepattern', true);
model.sol('sol4').feature('s2').create('fc1', 'FullyCoupled');
model.sol('sol4').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol4').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol4').feature('s2').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol4').feature('s2').feature('fc1').set('maxiter', 100);
model.sol('sol4').feature('s2').create('d1', 'Direct');
model.sol('sol4').feature('s2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('s2').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('s2').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol4').feature('s2').create('i1', 'Iterative');
model.sol('sol4').feature('s2').feature('i1').set('linsolver', 'gmres');
model.sol('sol4').feature('s2').feature('i1').set('prefuntype', 'left');
model.sol('sol4').feature('s2').feature('i1').set('itrestart', 50);
model.sol('sol4').feature('s2').feature('i1').set('rhob', 20);
model.sol('sol4').feature('s2').feature('i1').set('maxlinit', 1000);
model.sol('sol4').feature('s2').feature('i1').set('nlinnormuse', 'on');
model.sol('sol4').feature('s2').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol4').feature('s2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol4').feature('s2').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol4').feature('s2').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol4').feature('s2').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol4').feature('s2').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol4').feature('s2').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol4').feature('s2').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol4').feature('s2').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol4').feature('s2').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol4').feature('s2').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol4').feature('s2').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol4').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol4').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol4').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol4').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol4').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol4').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol4').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol4').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf_sel1' 'comp1_spf_inl1_Pinlfdf_sel2' 'comp1_spf_inl1_Pinlfdf_sel3'});
model.sol('sol4').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol4').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol4').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol4').feature('s2').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol4').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol4').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol4').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol4').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol4').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol4').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol4').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol4').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf_sel1' 'comp1_spf_inl1_Pinlfdf_sel2' 'comp1_spf_inl1_Pinlfdf_sel3'});
model.sol('sol4').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol4').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol4').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol4').feature('s2').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol4').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('s2').feature('fc1').set('linsolver', 'd1');
model.sol('sol4').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol4').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol4').feature('s2').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol4').feature('s2').feature('fc1').set('maxiter', 100);
model.sol('sol4').feature('s2').feature.remove('fcDef');
model.sol('sol4').create('su2', 'StoreSolution');
model.sol('sol4').create('st3', 'StudyStep');
model.sol('sol4').feature('st3').set('study', 'std2');
model.sol('sol4').feature('st3').set('studystep', 'stat3');
model.sol('sol4').create('v3', 'Variables');
model.sol('sol4').feature('v3').set('initmethod', 'sol');
model.sol('sol4').feature('v3').set('initsol', 'sol4');
model.sol('sol4').feature('v3').set('initsoluse', 'sol6');
model.sol('sol4').feature('v3').set('notsolmethod', 'sol');
model.sol('sol4').feature('v3').set('notsol', 'sol4');
model.sol('sol4').feature('v3').set('control', 'stat3');
model.sol('sol4').create('s3', 'Stationary');
model.sol('sol4').feature('s3').set('stol', 0.001);
model.sol('sol4').feature('s3').feature('aDef').set('cachepattern', true);
model.sol('sol4').feature('s3').create('seDef', 'Segregated');
model.sol('sol4').feature('s3').create('se1', 'Segregated');
model.sol('sol4').feature('s3').feature('se1').feature.remove('ssDef');
model.sol('sol4').feature('s3').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol4').feature('s3').feature('se1').feature('ss1').set('segvar', {'comp1_p_sr'});
model.sol('sol4').feature('s3').create('i1', 'Iterative');
model.sol('sol4').feature('s3').feature('i1').set('linsolver', 'gmres');
model.sol('sol4').feature('s3').feature('i1').set('prefuntype', 'left');
model.sol('sol4').feature('s3').feature('i1').set('itrestart', 50);
model.sol('sol4').feature('s3').feature('i1').set('rhob', 400);
model.sol('sol4').feature('s3').feature('i1').set('maxlinit', 1000);
model.sol('sol4').feature('s3').feature('i1').set('nlinnormuse', 'on');
model.sol('sol4').feature('s3').feature('i1').label('AMG, pressure (dl)');
model.sol('sol4').feature('s3').feature('i1').create('mg1', 'Multigrid');
model.sol('sol4').feature('s3').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol4').feature('s3').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol4').feature('s3').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol4').feature('s3').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol4').feature('s3').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol4').feature('s3').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol4').feature('s3').feature('i1').feature('mg1').set('saamgcompwise', false);
model.sol('sol4').feature('s3').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol4').feature('s3').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol4').feature('s3').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol4').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol4').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol4').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol4').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol4').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol4').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol4').feature('s3').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol4').feature('s3').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol4').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol4').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol4').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol4').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol4').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol4').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol4').feature('s3').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol4').feature('s3').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol4').feature('s3').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('s3').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('s3').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol4').feature('s3').feature('se1').feature('ss1').label('Pressure P_sr');
model.sol('sol4').feature('s3').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol4').feature('s3').feature('se1').feature('ss2').set('segvar', {'comp1_T_sr'});
model.sol('sol4').feature('s3').feature('se1').feature('ss2').set('subdamp', 0.8);
model.sol('sol4').feature('s3').create('d1', 'Direct');
model.sol('sol4').feature('s3').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('s3').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('s3').feature('d1').label('Direct, heat transfer variables (ht)');
model.sol('sol4').feature('s3').feature('se1').feature('ss2').set('linsolver', 'd1');
model.sol('sol4').feature('s3').feature('se1').feature('ss2').label('Temperature');
model.sol('sol4').feature('s3').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol4').feature('s3').feature('se1').feature('ss3').set('segvar', {'comp1_p_tubes' 'comp1_u' 'comp1_spf_inl1_Pinlfdf_sel1' 'comp1_spf_inl1_Pinlfdf_sel2' 'comp1_spf_inl1_Pinlfdf_sel3'});
model.sol('sol4').feature('s3').feature('se1').feature('ss3').set('subdamp', 0.5);
model.sol('sol4').feature('s3').create('d2', 'Direct');
model.sol('sol4').feature('s3').feature('d2').set('linsolver', 'pardiso');
model.sol('sol4').feature('s3').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('s3').feature('d2').label('Direct, fluid flow variables (spf)');
model.sol('sol4').feature('s3').feature('se1').feature('ss3').set('linsolver', 'd2');
model.sol('sol4').feature('s3').feature('se1').feature('ss3').label('Velocity u, Pressure P_tubes');
model.sol('sol4').feature('s3').feature('se1').create('ss4', 'SegregatedStep');
model.sol('sol4').feature('s3').feature('se1').feature('ss4').set('segvar', {'comp1_T_tubes'});
model.sol('sol4').feature('s3').feature('se1').feature('ss4').set('subdamp', 0.5);
model.sol('sol4').feature('s3').create('d3', 'Direct');
model.sol('sol4').feature('s3').feature('d3').set('linsolver', 'pardiso');
model.sol('sol4').feature('s3').feature('d3').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('s3').feature('d3').label('Direct, heat transfer variables (ht2)');
model.sol('sol4').feature('s3').feature('se1').feature('ss4').set('linsolver', 'd3');
model.sol('sol4').feature('s3').feature('se1').feature('ss4').label('Temperature (2)');
model.sol('sol4').feature('s3').feature('se1').create('ss5', 'SegregatedStep');
model.sol('sol4').feature('s3').feature('se1').feature('ss5').set('segvar', {'comp1_w_C3H8' 'comp1_w_H2' 'comp1_w_CO2' 'comp1_w_CO' 'comp1_tcs_in1_wbnd_w_C3H8' 'comp1_tcs_in1_wbnd_w_H2' 'comp1_tcs_in1_wbnd_w_CO2' 'comp1_tcs_in1_wbnd_w_CO'});
model.sol('sol4').feature('s3').feature('se1').feature('ss5').set('subdamp', 0.35);
model.sol('sol4').feature('s3').feature('se1').feature('ss5').set('subntolfact', 1);
model.sol('sol4').feature('s3').feature('se1').feature('ss5').set('subiter', 3);
model.sol('sol4').feature('s3').feature('se1').feature('ss5').set('subtermconst', 'itertol');
model.sol('sol4').feature('s3').create('d4', 'Direct');
model.sol('sol4').feature('s3').feature('d4').set('linsolver', 'pardiso');
model.sol('sol4').feature('s3').feature('d4').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('s3').feature('d4').label('Direct, mass fractions (tcs)');
model.sol('sol4').feature('s3').feature('se1').feature('ss5').set('linsolver', 'd4');
model.sol('sol4').feature('s3').feature('se1').feature('ss5').label('Mass Fractions');
model.sol('sol4').feature('s3').feature('se1').set('maxsegiter', 200);
model.sol('sol4').feature('s3').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol4').feature('s3').feature('se1').set('subinitcfl', 5);
model.sol('sol4').feature('s3').feature('se1').set('subkppid', 0.65);
model.sol('sol4').feature('s3').feature('se1').set('subkdpid', 0.05);
model.sol('sol4').feature('s3').feature('se1').set('subkipid', 0.05);
model.sol('sol4').feature('s3').feature('se1').set('subcfltol', 0.1);
model.sol('sol4').feature('s3').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol4').feature('s3').feature('se1').feature('ll1').set('lowerlimit', 'comp1.T_sr 0 comp1.T_tubes 0 ');
model.sol('sol4').feature('s3').create('d5', 'Direct');
model.sol('sol4').feature('s3').feature('d5').set('linsolver', 'pardiso');
model.sol('sol4').feature('s3').feature('d5').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('s3').feature('d5').label('Direct, pressure (dl)');
model.sol('sol4').feature('s3').create('i2', 'Iterative');
model.sol('sol4').feature('s3').feature('i2').set('linsolver', 'gmres');
model.sol('sol4').feature('s3').feature('i2').set('prefuntype', 'left');
model.sol('sol4').feature('s3').feature('i2').set('itrestart', 50);
model.sol('sol4').feature('s3').feature('i2').set('rhob', 20);
model.sol('sol4').feature('s3').feature('i2').set('maxlinit', 10000);
model.sol('sol4').feature('s3').feature('i2').set('nlinnormuse', 'on');
model.sol('sol4').feature('s3').feature('i2').label('AMG, heat transfer variables (ht)');
model.sol('sol4').feature('s3').feature('i2').create('mg1', 'Multigrid');
model.sol('sol4').feature('s3').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol4').feature('s3').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol4').feature('s3').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol4').feature('s3').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol4').feature('s3').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol4').feature('s3').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol4').feature('s3').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol4').feature('s3').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol4').feature('s3').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol4').feature('s3').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol4').feature('s3').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol4').feature('s3').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol4').feature('s3').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol4').feature('s3').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol4').feature('s3').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol4').feature('s3').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol4').feature('s3').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('s3').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('s3').create('i3', 'Iterative');
model.sol('sol4').feature('s3').feature('i3').set('linsolver', 'gmres');
model.sol('sol4').feature('s3').feature('i3').set('prefuntype', 'left');
model.sol('sol4').feature('s3').feature('i3').set('itrestart', 50);
model.sol('sol4').feature('s3').feature('i3').set('rhob', 20);
model.sol('sol4').feature('s3').feature('i3').set('maxlinit', 1000);
model.sol('sol4').feature('s3').feature('i3').set('nlinnormuse', 'on');
model.sol('sol4').feature('s3').feature('i3').label('AMG, fluid flow variables (spf)');
model.sol('sol4').feature('s3').feature('i3').create('mg1', 'Multigrid');
model.sol('sol4').feature('s3').feature('i3').feature('mg1').set('prefun', 'saamg');
model.sol('sol4').feature('s3').feature('i3').feature('mg1').set('mgcycle', 'v');
model.sol('sol4').feature('s3').feature('i3').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol4').feature('s3').feature('i3').feature('mg1').set('strconn', 0.02);
model.sol('sol4').feature('s3').feature('i3').feature('mg1').set('nullspace', 'constant');
model.sol('sol4').feature('s3').feature('i3').feature('mg1').set('usesmooth', false);
model.sol('sol4').feature('s3').feature('i3').feature('mg1').set('saamgcompwise', true);
model.sol('sol4').feature('s3').feature('i3').feature('mg1').set('loweramg', true);
model.sol('sol4').feature('s3').feature('i3').feature('mg1').set('compactaggregation', false);
model.sol('sol4').feature('s3').feature('i3').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol4').feature('s3').feature('i3').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol4').feature('s3').feature('i3').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol4').feature('s3').feature('i3').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol4').feature('s3').feature('i3').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol4').feature('s3').feature('i3').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol4').feature('s3').feature('i3').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol4').feature('s3').feature('i3').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol4').feature('s3').feature('i3').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf_sel1' 'comp1_spf_inl1_Pinlfdf_sel2' 'comp1_spf_inl1_Pinlfdf_sel3'});
model.sol('sol4').feature('s3').feature('i3').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol4').feature('s3').feature('i3').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol4').feature('s3').feature('i3').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol4').feature('s3').feature('i3').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol4').feature('s3').feature('i3').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol4').feature('s3').feature('i3').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol4').feature('s3').feature('i3').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol4').feature('s3').feature('i3').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol4').feature('s3').feature('i3').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol4').feature('s3').feature('i3').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol4').feature('s3').feature('i3').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol4').feature('s3').feature('i3').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf_sel1' 'comp1_spf_inl1_Pinlfdf_sel2' 'comp1_spf_inl1_Pinlfdf_sel3'});
model.sol('sol4').feature('s3').feature('i3').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol4').feature('s3').feature('i3').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol4').feature('s3').feature('i3').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol4').feature('s3').feature('i3').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol4').feature('s3').feature('i3').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('s3').feature('i3').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('s3').create('i4', 'Iterative');
model.sol('sol4').feature('s3').feature('i4').set('linsolver', 'gmres');
model.sol('sol4').feature('s3').feature('i4').set('prefuntype', 'left');
model.sol('sol4').feature('s3').feature('i4').set('itrestart', 50);
model.sol('sol4').feature('s3').feature('i4').set('rhob', 20);
model.sol('sol4').feature('s3').feature('i4').set('maxlinit', 10000);
model.sol('sol4').feature('s3').feature('i4').set('nlinnormuse', 'on');
model.sol('sol4').feature('s3').feature('i4').label('AMG, heat transfer variables (ht2)');
model.sol('sol4').feature('s3').feature('i4').create('mg1', 'Multigrid');
model.sol('sol4').feature('s3').feature('i4').feature('mg1').set('prefun', 'saamg');
model.sol('sol4').feature('s3').feature('i4').feature('mg1').set('mgcycle', 'v');
model.sol('sol4').feature('s3').feature('i4').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol4').feature('s3').feature('i4').feature('mg1').set('strconn', 0.01);
model.sol('sol4').feature('s3').feature('i4').feature('mg1').set('nullspace', 'constant');
model.sol('sol4').feature('s3').feature('i4').feature('mg1').set('usesmooth', false);
model.sol('sol4').feature('s3').feature('i4').feature('mg1').set('saamgcompwise', true);
model.sol('sol4').feature('s3').feature('i4').feature('mg1').set('loweramg', true);
model.sol('sol4').feature('s3').feature('i4').feature('mg1').set('compactaggregation', false);
model.sol('sol4').feature('s3').feature('i4').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol4').feature('s3').feature('i4').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol4').feature('s3').feature('i4').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol4').feature('s3').feature('i4').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol4').feature('s3').feature('i4').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol4').feature('s3').feature('i4').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol4').feature('s3').feature('i4').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol4').feature('s3').feature('i4').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('s3').feature('i4').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('s3').create('i5', 'Iterative');
model.sol('sol4').feature('s3').feature('i5').set('linsolver', 'gmres');
model.sol('sol4').feature('s3').feature('i5').set('prefuntype', 'left');
model.sol('sol4').feature('s3').feature('i5').set('itrestart', 50);
model.sol('sol4').feature('s3').feature('i5').set('rhob', 400);
model.sol('sol4').feature('s3').feature('i5').set('maxlinit', 1000);
model.sol('sol4').feature('s3').feature('i5').set('nlinnormuse', 'on');
model.sol('sol4').feature('s3').feature('i5').label('AMG, mass fractions (tcs)');
model.sol('sol4').feature('s3').feature('i5').create('mg1', 'Multigrid');
model.sol('sol4').feature('s3').feature('i5').feature('mg1').set('prefun', 'saamg');
model.sol('sol4').feature('s3').feature('i5').feature('mg1').set('mgcycle', 'v');
model.sol('sol4').feature('s3').feature('i5').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol4').feature('s3').feature('i5').feature('mg1').set('strconn', 0.01);
model.sol('sol4').feature('s3').feature('i5').feature('mg1').set('nullspace', 'constant');
model.sol('sol4').feature('s3').feature('i5').feature('mg1').set('usesmooth', false);
model.sol('sol4').feature('s3').feature('i5').feature('mg1').set('saamgcompwise', true);
model.sol('sol4').feature('s3').feature('i5').feature('mg1').set('loweramg', true);
model.sol('sol4').feature('s3').feature('i5').feature('mg1').set('compactaggregation', false);
model.sol('sol4').feature('s3').feature('i5').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol4').feature('s3').feature('i5').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol4').feature('s3').feature('i5').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol4').feature('s3').feature('i5').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol4').feature('s3').feature('i5').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol4').feature('s3').feature('i5').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol4').feature('s3').feature('i5').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol4').feature('s3').feature('i5').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol4').feature('s3').feature('i5').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol4').feature('s3').feature('i5').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol4').feature('s3').feature('i5').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol4').feature('s3').feature('i5').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol4').feature('s3').feature('i5').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol4').feature('s3').feature('i5').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol4').feature('s3').feature('i5').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol4').feature('s3').feature('i5').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol4').feature('s3').feature('i5').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol4').feature('s3').feature('i5').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('s3').feature('i5').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('s3').feature.remove('fcDef');
model.sol('sol4').feature('s3').feature.remove('seDef');
model.sol('sol4').feature('v3').set('notsolnum', 'auto');
model.sol('sol4').feature('v3').set('notsolvertype', 'solnum');
model.sol('sol4').feature('v2').set('notsolnum', 'auto');
model.sol('sol4').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol4').feature('v2').set('solnum', 'auto');
model.sol('sol4').feature('v2').set('solvertype', 'solnum');
model.sol('sol4').attach('std2');
model.sol('sol4').feature('s3').create('fc1', 'FullyCoupled');

model.study('std2').create('param', 'Parametric');
model.study('std2').feature('param').setIndex('pname', 'u_in_tubes', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', 'm/s', 0);
model.study('std2').feature('param').setIndex('pname', 'u_in_tubes', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', 'm/s', 0);
model.study('std2').feature('param').setIndex('pname', 'T_in_tubes', 0);
model.study('std2').feature('param').setIndex('plistarr', '900 1000', 0);

model.sol('sol1').runAll;

model.result.dataset.create('cpl1', 'CutPlane');
model.result.dataset('cpl1').set('quickx', 'L/2');
model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').run;
model.result('pg1').label('w_C3H8 and T at L/2');
model.result('pg1').set('data', 'cpl1');
model.result('pg1').set('titletype', 'none');
model.result('pg1').set('showlegendsmaxmin', true);
model.result('pg1').set('showlegendsunit', true);
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', 'w_C3H8');
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').run;
model.result('pg1').create('con1', 'Contour');
model.result('pg1').feature('con1').set('expr', 'chem.T');
model.result('pg1').feature('con1').set('contourtype', 'tubes');
model.result('pg1').run;
model.result('pg1').feature('con1').set('colortable', 'Wave');

model.view('view1').set('showgrid', false);

model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').run;
model.result('pg2').label('Countercurrent Mass Fractions');
model.result('pg2').set('titletype', 'none');
model.result('pg2').create('lngr1', 'LineGraph');
model.result('pg2').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg2').feature('lngr1').set('linewidth', 'preference');
model.result('pg2').feature('lngr1').selection.set([3]);
model.result('pg2').feature('lngr1').set('xdata', 'expr');
model.result('pg2').feature('lngr1').set('xdataexpr', 'x');
model.result('pg2').feature('lngr1').set('legend', true);
model.result('pg2').feature('lngr1').set('autoexpr', true);
model.result('pg2').feature('lngr1').set('autosolution', false);
model.result('pg2').run;
model.result('pg2').feature.duplicate('lngr2', 'lngr1');
model.result('pg2').run;
model.result('pg2').feature('lngr2').set('expr', 'w_C3H8');
model.result('pg2').feature.duplicate('lngr3', 'lngr2');
model.result('pg2').run;
model.result('pg2').feature('lngr3').set('expr', 'w_CO');
model.result('pg2').feature.duplicate('lngr4', 'lngr3');
model.result('pg2').run;
model.result('pg2').feature('lngr4').set('expr', 'w_CO2');
model.result('pg2').feature.duplicate('lngr5', 'lngr4');
model.result('pg2').run;
model.result('pg2').feature('lngr5').set('expr', 'w_H2');
model.result('pg2').run;
model.result('pg2').set('ylabelactive', true);
model.result('pg2').set('ylabel', 'Mass fraction');
model.result('pg2').set('legendpos', 'uppermiddle');
model.result.dataset.create('mir1', 'Mirror3D');
model.result.dataset('mir1').label('Countercurrent mirror');
model.result.dataset('mir1').set('quickplane', 'xy');
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').run;
model.result('pg3').label('Mass fraction, C3H8 Countercurrent');
model.result('pg3').set('data', 'mir1');
model.result('pg3').set('titletype', 'none');
model.result('pg3').set('edges', false);
model.result('pg3').set('showlegendsunit', true);
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', 'w_C3H8');
model.result('pg3').feature('surf1').set('colortable', 'Prism');
model.result('pg3').feature('surf1').create('sel1', 'Selection');
model.result('pg3').feature('surf1').feature('sel1').selection.named('geom1_intsel2');
model.result('pg3').feature('surf1').feature('sel1').selection.set([6 8 11 14 15 16 18 20 21]);
model.result('pg3').create('surf2', 'Surface');
model.result('pg3').feature('surf2').set('expr', '1');
model.result('pg3').feature('surf2').create('mtrl1', 'MaterialAppearance');
model.result('pg3').run;
model.result('pg3').feature('surf2').feature('mtrl1').set('appearance', 'custom');
model.result('pg3').feature('surf2').feature('mtrl1').set('family', 'steelanodized');
model.result('pg3').run;
model.result('pg3').feature('surf2').create('sel1', 'Selection');
model.result('pg3').feature('surf2').feature('sel1').selection.set([9 10 12 26]);
model.result('pg3').run;
model.result('pg3').run;
model.result.duplicate('pg4', 'pg3');
model.result('pg4').run;
model.result('pg4').label('Concentration, H2 Countercurrent');
model.result('pg4').run;
model.result('pg4').feature('surf1').set('expr', 'tcs.c_w_H2');
model.result('pg4').feature('surf1').set('descr', 'Molar concentration');
model.result('pg4').run;
model.result('pg3').run;
model.result.duplicate('pg5', 'pg3');
model.result('pg5').run;
model.result('pg5').label('Gas Density, Countercurrent 900 K');
model.result('pg5').run;
model.result('pg5').feature('surf1').set('expr', 'dl.rho');
model.result('pg5').feature('surf1').set('descr', 'Fluid density');
model.result('pg5').feature('surf1').set('colortable', 'JupiterAuroraBorealis');
model.result('pg5').run;
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').run;
model.result('pg6').label('Temperature Countercurrent');
model.result('pg6').set('data', 'mir1');
model.result('pg6').set('titletype', 'none');
model.result('pg6').set('edges', false);
model.result('pg6').set('showlegendsunit', true);
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', 'T_tubes');
model.result('pg6').feature('surf1').set('colortable', 'ThermalWave');
model.result('pg6').create('slc1', 'Slice');
model.result('pg6').feature('slc1').set('expr', 'T_sr');
model.result('pg6').feature('slc1').set('inheritplot', 'surf1');
model.result('pg6').create('surf2', 'Surface');
model.result('pg6').feature('surf2').set('expr', '1');
model.result('pg6').feature('surf2').create('sel1', 'Selection');
model.result('pg6').feature('surf2').feature('sel1').selection.set([9 10 12 26]);
model.result('pg6').run;
model.result('pg6').feature('surf2').create('mtrl1', 'MaterialAppearance');
model.result('pg6').run;
model.result('pg6').feature('surf2').feature('mtrl1').set('appearance', 'custom');
model.result('pg6').feature('surf2').feature('mtrl1').set('family', 'steelanodized');
model.result('pg6').run;
model.result('pg6').feature.duplicate('surf3', 'surf2');
model.result('pg6').run;
model.result('pg6').run;
model.result('pg6').feature('surf3').feature('sel1').selection.set([11]);
model.result('pg6').run;
model.result('pg6').feature('surf3').create('tran1', 'Transparency');
model.result('pg6').run;
model.result('pg6').feature('surf3').feature('tran1').set('transparency', 0.75);
model.result('pg6').create('arws1', 'ArrowSurface');
model.result('pg6').feature('arws1').set('expr', {'ht.tfluxx' 'ht.tfluxy' 'ht.tfluxz'});
model.result('pg6').feature('arws1').set('descr', 'Total heat flux');
model.result('pg6').feature('arws1').set('placement', 'uniformani');
model.result('pg6').feature('arws1').set('arrowcount', 150);
model.result('pg6').feature('arws1').set('weight', [1 1 1.5]);
model.result('pg6').feature('arws1').set('arrowbase', 'center');
model.result('pg6').feature('arws1').set('scaleactive', true);
model.result('pg6').feature('arws1').set('scale', 3.6E-6);
model.result('pg6').feature('arws1').set('color', 'gray');
model.result('pg6').feature('arws1').create('sel1', 'Selection');
model.result('pg6').feature('arws1').feature('sel1').selection.set([2 7]);
model.result('pg6').create('arws2', 'ArrowSurface');
model.result('pg6').feature('arws2').set('expr', {'ht2.tfluxx' 'ht2.tfluxy' 'ht2.tfluxz'});
model.result('pg6').feature('arws2').set('descr', 'Total heat flux');
model.result('pg6').feature('arws2').create('sel1', 'Selection');
model.result('pg6').feature('arws2').feature('sel1').selection.set([5]);
model.result('pg6').run;
model.result('pg6').feature('arws2').set('expr', {'ht2.tfluxx' 'ht2.tfluxy' 'ht2.tfluxz'});
model.result('pg6').feature('arws2').set('descr', 'Total heat flux');
model.result('pg6').feature('arws2').set('placement', 'uniformani');
model.result('pg6').feature('arws2').set('arrowcount', 40);
model.result('pg6').feature('arws2').set('weight', [0.3 1 3]);
model.result('pg6').feature('arws2').set('scaleactive', true);
model.result('pg6').feature('arws2').set('scale', '3E-8');
model.result('pg6').run;
model.result.create('pg7', 'PlotGroup3D');
model.result('pg7').run;
model.result('pg7').label('Velocity Countercurrent');
model.result('pg7').set('data', 'mir1');
model.result('pg7').set('titletype', 'none');
model.result('pg7').set('edges', false);
model.result('pg7').set('showlegendsunit', true);
model.result('pg7').create('vol1', 'Volume');
model.result('pg7').feature('vol1').set('expr', 'spf.U');
model.result('pg7').feature('vol1').set('descr', 'Velocity magnitude');
model.result('pg7').feature('vol1').set('colortable', 'Cividis');
model.result('pg7').feature('vol1').create('sel1', 'Selection');
model.result('pg7').feature('vol1').feature('sel1').selection.named('geom1_ext3_dom');
model.result('pg7').create('arws1', 'ArrowSurface');
model.result('pg7').feature('arws1').set('expr', {'u' 'v' 'w'});
model.result('pg7').feature('arws1').set('descr', 'Velocity field');
model.result('pg7').feature('arws1').set('placement', 'uniformani');
model.result('pg7').feature('arws1').set('arrowcount', 40);
model.result('pg7').feature('arws1').set('weight', [0.4 1 4]);
model.result('pg7').feature('arws1').set('arrowtype', 'arrowhead');
model.result('pg7').feature('arws1').set('color', 'white');
model.result('pg7').feature('arws1').create('sel1', 'Selection');
model.result('pg7').feature('arws1').feature('sel1').selection.named('geom1_intsel4');
model.result('pg7').create('arwv1', 'ArrowVolume');
model.result('pg7').feature('arwv1').set('expr', {'dl.u' 'dl.v' 'dl.w'});
model.result('pg7').feature('arwv1').set('descr', 'Total Darcy velocity field');
model.result('pg7').feature('arwv1').set('arrowlength', 'normalized');
model.result('pg7').feature('arwv1').create('col1', 'Color');
model.result('pg7').run;
model.result('pg7').feature('arwv1').feature('col1').set('expr', 'dl.U');
model.result('pg7').feature('arwv1').feature('col1').set('descr', 'Total Darcy velocity magnitude');
model.result('pg7').create('surf1', 'Surface');
model.result('pg7').feature('surf1').set('expr', '1');
model.result('pg7').feature('surf1').create('mtrl1', 'MaterialAppearance');
model.result('pg7').run;
model.result('pg7').feature('surf1').feature('mtrl1').set('appearance', 'custom');
model.result('pg7').feature('surf1').feature('mtrl1').set('family', 'steelanodized');
model.result('pg7').run;
model.result('pg7').feature('surf1').create('sel1', 'Selection');
model.result('pg7').feature('surf1').feature('sel1').selection.set([9 10 11 12]);
model.result('pg7').run;

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std2');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol4');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'T_in_tubes'});
model.batch('p1').set('plistarr', {'900 1000'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std2');
model.batch('p1').set('control', 'param');

model.sol.create('sol7');
model.sol('sol7').study('std2');
model.sol('sol7').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol7');
model.batch('p1').run('compute');

model.result.dataset.duplicate('mir2', 'mir1');
model.result.dataset('mir2').label('Co-current mirror');
model.result.dataset('mir2').set('data', 'dset7');
model.result('pg2').run;
model.result.duplicate('pg8', 'pg2');
model.result.duplicate('pg9', 'pg3');
model.result.duplicate('pg10', 'pg4');
model.result.duplicate('pg11', 'pg5');
model.result.duplicate('pg12', 'pg6');
model.result.duplicate('pg13', 'pg7');
model.result('pg8').run;
model.result('pg8').label('Co-current Mass Fractions, 1000 K');
model.result('pg8').set('data', 'dset7');
model.result('pg8').setIndex('looplevelinput', 'last', 0);
model.result('pg8').set('legendpos', 'upperright');
model.result('pg8').run;
model.result('pg9').run;
model.result('pg9').label('Mass fraction, C3H8 Co-current 1000 K');
model.result('pg9').set('data', 'mir2');
model.result('pg9').run;
model.result('pg10').run;
model.result('pg10').label('Concentration, H2 Co-current 1000 K');
model.result('pg10').set('data', 'mir2');
model.result('pg10').run;
model.result('pg11').run;
model.result('pg11').label('Gas Density, Co-current 1000 K');
model.result('pg11').set('data', 'mir2');
model.result('pg11').run;
model.result('pg12').run;
model.result('pg12').label('Temperature, Co-current 1000 K');
model.result('pg12').set('data', 'mir2');
model.result('pg12').set('legendactive', true);
model.result('pg12').set('legendprecision', 4);
model.result('pg12').run;
model.result('pg13').run;
model.result('pg13').label('Velocity Co-current, 1000 K');
model.result('pg13').set('data', 'mir2');
model.result('pg13').run;
model.result('pg1').run;

model.nodeGroup.create('grp1', 'Results');
model.nodeGroup('grp1').set('type', 'plotgroup');
model.nodeGroup('grp1').add('plotgroup', 'pg1');
model.nodeGroup('grp1').add('plotgroup', 'pg2');
model.nodeGroup('grp1').add('plotgroup', 'pg3');
model.nodeGroup('grp1').add('plotgroup', 'pg4');
model.nodeGroup('grp1').add('plotgroup', 'pg5');
model.nodeGroup('grp1').add('plotgroup', 'pg6');
model.nodeGroup('grp1').add('plotgroup', 'pg7');
model.nodeGroup('grp1').label('Countercurrent, 900 K');

model.result('pg8').run;

model.nodeGroup.create('grp2', 'Results');
model.nodeGroup('grp2').set('type', 'plotgroup');
model.nodeGroup.move('grp2', 1);
model.nodeGroup('grp2').add('plotgroup', 'pg8');
model.nodeGroup('grp2').add('plotgroup', 'pg9');
model.nodeGroup('grp2').add('plotgroup', 'pg10');
model.nodeGroup('grp2').add('plotgroup', 'pg11');
model.nodeGroup('grp2').add('plotgroup', 'pg12');
model.nodeGroup('grp2').add('plotgroup', 'pg13');
model.nodeGroup('grp2').label('Co-current, 1000 K');

model.result.create('pg14', 'PlotGroup1D');
model.result('pg14').run;
model.result('pg14').label('w_C3H8 and w_CO Along Bed Midline');
model.result('pg14').set('titletype', 'none');
model.result('pg14').create('lngr1', 'LineGraph');
model.result('pg14').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg14').feature('lngr1').set('linewidth', 'preference');
model.result('pg14').feature('lngr1').label('C3H8 countercurrent 900 K');
model.result('pg14').feature('lngr1').set('data', 'dset1');
model.result('pg14').feature('lngr1').selection.set([3]);
model.result('pg14').feature('lngr1').set('expr', 'w_C3H8');
model.result('pg14').feature('lngr1').set('xdata', 'expr');
model.result('pg14').feature('lngr1').set('xdataexpr', 'x');
model.result('pg14').feature('lngr1').set('legend', true);
model.result('pg14').feature('lngr1').set('autoplotlabel', true);
model.result('pg14').feature('lngr1').set('autosolution', false);
model.result('pg14').feature.duplicate('lngr2', 'lngr1');
model.result('pg14').run;
model.result('pg14').feature('lngr2').label('C3H8 Co-current 900 K');
model.result('pg14').feature('lngr2').set('data', 'dset7');
model.result('pg14').feature('lngr2').setIndex('looplevelinput', 'first', 0);
model.result('pg14').feature.duplicate('lngr3', 'lngr2');
model.result('pg14').run;
model.result('pg14').feature('lngr3').label('C3H8 Co-current 1000 K');
model.result('pg14').feature('lngr3').setIndex('looplevelinput', 'last', 0);
model.result('pg14').run;
model.result('pg14').run;
model.result('pg14').feature.duplicate('lngr4', 'lngr1');
model.result('pg14').feature.duplicate('lngr5', 'lngr2');
model.result('pg14').feature.duplicate('lngr6', 'lngr3');
model.result('pg14').run;
model.result('pg14').feature('lngr4').label('CO countercurrent 900 K');
model.result('pg14').feature('lngr4').set('expr', 'w_CO');
model.result('pg14').feature('lngr4').set('linestyle', 'dashed');
model.result('pg14').feature('lngr4').set('linecolor', 'cyclereset');
model.result('pg14').run;
model.result('pg14').feature('lngr5').label('CO Co-current 900 K');
model.result('pg14').feature('lngr5').set('expr', 'w_CO');
model.result('pg14').feature('lngr5').set('linestyle', 'dashed');
model.result('pg14').run;
model.result('pg14').feature('lngr6').label('CO Co-current 1000 K');
model.result('pg14').feature('lngr6').set('expr', 'w_CO');
model.result('pg14').feature('lngr6').set('linestyle', 'dashed');
model.result('pg14').run;
model.result('pg14').set('xlabelactive', true);
model.result('pg14').set('ylabelactive', true);
model.result('pg14').set('ylabel', 'Mass fraction C3H8');
model.result('pg14').set('twoyaxes', true);
model.result('pg14').set('yseclabelactive', true);
model.result('pg14').set('yseclabel', 'Mass fraction CO');
model.result('pg14').setIndex('plotonsecyaxis', true, 3, 1);
model.result('pg14').setIndex('plotonsecyaxis', true, 4, 1);
model.result('pg14').setIndex('plotonsecyaxis', true, 5, 1);
model.result('pg14').run;
model.result('pg14').set('legendpos', 'middleright');
model.result('pg14').run;
model.result.duplicate('pg15', 'pg14');
model.result('pg15').run;
model.result('pg15').label('Temperature Profiles Along Reactor');
model.result('pg15').run;
model.result('pg15').feature('lngr1').label('T_sr countercurrent 900 K');
model.result('pg15').feature('lngr1').set('expr', 'T_sr');
model.result('pg15').run;
model.result('pg15').feature('lngr2').label('T_sr Co-current 900 K');
model.result('pg15').feature('lngr2').set('expr', 'T_sr');
model.result('pg15').run;
model.result('pg15').feature('lngr3').label('T_sr Co-current 1000 K');
model.result('pg15').feature('lngr3').set('expr', 'T_sr');
model.result('pg15').run;
model.result('pg15').feature('lngr4').label('T_tubes countercurrent');
model.result('pg15').feature('lngr4').selection.set([6]);
model.result('pg15').feature('lngr4').set('expr', 'T_tubes');
model.result('pg15').run;
model.result('pg15').feature('lngr5').label('T_tubes Co-current 900 K');
model.result('pg15').feature('lngr5').selection.set([6]);
model.result('pg15').feature('lngr5').set('expr', 'T_tubes');
model.result('pg15').run;
model.result('pg15').feature('lngr6').label('T_tubes Co-current 1000 K');
model.result('pg15').feature('lngr6').selection.set([6]);
model.result('pg15').feature('lngr6').set('expr', 'T_tubes');
model.result('pg15').run;
model.result('pg15').run;
model.result('pg15').set('twoyaxes', false);
model.result('pg15').set('ylabel', 'Temperature (K)');
model.result('pg15').run;
model.result('pg15').set('legendpos', 'uppermiddle');
model.result.numerical.create('gev1', 'EvalGlobal');
model.result.numerical('gev1').label('Average temperature in bed outflow');
model.result.numerical('gev1').set('data', 'dset7');
model.result.numerical('gev1').setIndex('looplevelinput', 'last', 0);
model.result.numerical('gev1').setIndex('expr', 'ht.ofl1.Tave', 0);
model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').comments('Average temperature in bed outflow');
model.result.numerical('gev1').set('table', 'tbl1');
model.result.numerical('gev1').setResult;
model.result.numerical.create('gev2', 'EvalGlobal');
model.result.numerical('gev2').label('Average temperature in heat tube outflow');
model.result.numerical('gev2').set('data', 'dset7');
model.result.numerical('gev2').setIndex('looplevelinput', 'last', 0);
model.result.numerical('gev2').setIndex('expr', 'ht2.ofl2.Tave', 0);
model.result.table.create('tbl2', 'Table');
model.result.table('tbl2').comments('Average temperature in heat tube outflow');
model.result.numerical('gev2').set('table', 'tbl2');
model.result.numerical('gev2').setResult;
model.result('pg6').run;

model.title('Steam Reformer');

model.description('This example solves a 3D model of a steam reformer serving a stationary fuel-cell unit with hydrogen. The tightly coupled system of mass, energy, and momentum equations used to describe the reformer is readily set up using the predefined physics interfaces of the Chemical Reaction Engineering Module.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;
model.sol('sol8').clearSolutionData;
model.sol('sol9').clearSolutionData;

model.label('steam_reformer.mph');

model.modelNode.label('Components');

out = model;
