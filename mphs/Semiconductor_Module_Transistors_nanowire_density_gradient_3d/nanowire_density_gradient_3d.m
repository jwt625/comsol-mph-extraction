function out = model
%
% nanowire_density_gradient_3d.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Semiconductor_Module/Transistors');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('semi', 'Semiconductor', 'geom1');
model.physics('semi').model('comp1');

model.study.create('std1');
model.study('std1').create('semie', 'SemiconductorEquilibrium');
model.study('std1').feature('semie').set('solnum', 'auto');
model.study('std1').feature('semie').set('notsolnum', 'auto');
model.study('std1').feature('semie').set('outputmap', {});
model.study('std1').feature('semie').set('ngenAUX', '1');
model.study('std1').feature('semie').set('goalngenAUX', '1');
model.study('std1').feature('semie').set('ngenAUX', '1');
model.study('std1').feature('semie').set('goalngenAUX', '1');
model.study('std1').feature('semie').setSolveFor('/physics/semi', true);

model.geom('geom1').lengthUnit('nm');

model.param.label('Parameters 1: Geometry');
model.param.set('Lgate', '4[nm]');
model.param.descr('Lgate', 'Gate length');
model.param.set('Wchannel', '3.2[nm]');
model.param.descr('Wchannel', 'Channel width');
model.param.set('dOx', '0.8[nm]');
model.param.descr('dOx', 'Oxide thickness');
model.param.set('Lsource', '15[nm]');
model.param.descr('Lsource', 'Source length');
model.param.set('Ldrain', '15[nm]');
model.param.descr('Ldrain', 'Drain length');
model.param.set('Ltot', 'Lsource+Lgate+Ldrain');
model.param.descr('Ltot', 'Total length');
model.param.set('Wtot', 'Wchannel+dOx*2');
model.param.descr('Wtot', 'Total width');

model.geom('geom1').create('wp1', 'WorkPlane');
model.geom('geom1').feature('wp1').set('unite', true);
model.geom('geom1').feature('wp1').set('quickplane', 'yz');
model.geom('geom1').feature('wp1').set('quickx', '-Lsource-Lgate/2');
model.geom('geom1').feature('wp1').geom.create('sq1', 'Square');
model.geom('geom1').feature('wp1').geom.feature('sq1').set('size', 'Wtot');
model.geom('geom1').feature('wp1').geom.feature('sq1').set('base', 'center');
model.geom('geom1').feature('wp1').geom.feature('sq1').setIndex('layername', 'Layer 1', 0);
model.geom('geom1').feature('wp1').geom.feature('sq1').setIndex('layer', 'Wtot/2', 0);
model.geom('geom1').feature('wp1').geom.feature('sq1').set('layerleft', true);
model.geom('geom1').feature('wp1').geom.run('sq1');
model.geom('geom1').feature('wp1').geom.create('sq2', 'Square');
model.geom('geom1').feature('wp1').geom.feature('sq2').set('size', 'Wchannel');
model.geom('geom1').feature('wp1').geom.feature('sq2').set('base', 'center');
model.geom('geom1').run('wp1');
model.geom('geom1').feature.create('ext1', 'Extrude');
model.geom('geom1').feature('ext1').label('Extrude 1: Source');
model.geom('geom1').feature('ext1').set('extrudefrom', 'faces');
model.geom('geom1').feature('ext1').selection('inputface').set('wp1', [3 4 6 7]);
model.geom('geom1').feature('ext1').set('inputhandling', 'keep');
model.geom('geom1').feature('ext1').setIndex('distance', 'Lsource', 0);
model.geom('geom1').feature('ext1').set('selresult', true);
model.geom('geom1').feature('ext1').set('selresultshow', 'all');
model.geom('geom1').selection.create('csel1', 'CumulativeSelection');
model.geom('geom1').selection('csel1').label('Si');
model.geom('geom1').feature('ext1').set('contributeto', 'csel1');
model.geom('geom1').run('ext1');
model.geom('geom1').feature.duplicate('ext2', 'ext1');
model.geom('geom1').feature('ext2').label('Extrude 2: Channel');
model.geom('geom1').feature('ext2').selection('inputface').clear('wp1');
model.geom('geom1').feature('ext2').selection('inputface').set('ext1', [17 18 19 20]);
model.geom('geom1').feature('ext2').set('distance', []);
model.geom('geom1').feature('ext2').set('twist', {});
model.geom('geom1').feature('ext2').set('scale', {});
model.geom('geom1').feature('ext2').set('displ', {});
model.geom('geom1').feature('ext2').setIndex('distance', 'Lgate/2', 0);
model.geom('geom1').feature('ext2').set('displ', {'0' '0'});
model.geom('geom1').feature('ext2').set('scale', {'1' '1'});
model.geom('geom1').feature('ext2').set('twist', {'0'});
model.geom('geom1').feature('ext2').setIndex('distance', 'Lgate', 1);
model.geom('geom1').feature('ext2').set('displ', {'0' '0'; '0' '0'});
model.geom('geom1').feature('ext2').set('scale', {'1' '1'; '1' '1'});
model.geom('geom1').feature('ext2').set('twist', {'0' '0'});
model.geom('geom1').feature('ext2').set('selresultshow', 'dom');
model.geom('geom1').run('ext2');
model.geom('geom1').feature.duplicate('ext3', 'ext2');
model.geom('geom1').feature('ext3').label('Extrude 3: Drain');
model.geom('geom1').feature('ext3').selection('inputface').clear('ext1');
model.geom('geom1').feature('ext3').selection('inputface').set('ext2', [33 34 35 36]);
model.geom('geom1').feature('ext3').set('distance', []);
model.geom('geom1').feature('ext3').set('twist', {});
model.geom('geom1').feature('ext3').set('scale', {});
model.geom('geom1').feature('ext3').set('displ', {});
model.geom('geom1').feature('ext3').setIndex('distance', 'Ldrain', 0);
model.geom('geom1').feature('ext3').set('displ', {'0' '0'});
model.geom('geom1').feature('ext3').set('scale', {'1' '1'});
model.geom('geom1').feature('ext3').set('twist', {'0'});
model.geom('geom1').feature('ext3').set('selresultshow', 'all');
model.geom('geom1').run('ext3');
model.geom('geom1').feature.duplicate('ext4', 'ext1');
model.geom('geom1').feature('ext4').label('Extrude 4: Source oxide');
model.geom('geom1').feature('ext4').selection('inputface').clear('wp1');
model.geom('geom1').feature('ext4').selection('inputface').set('wp1', [8 1 2 5]);
model.geom('geom1').feature('ext4').set('selresultshow', false);
model.geom('geom1').selection.create('csel2', 'CumulativeSelection');
model.geom('geom1').selection('csel2').label('Oxide');
model.geom('geom1').feature('ext4').set('contributeto', 'csel2');
model.geom('geom1').run('ext4');
model.geom('geom1').feature.duplicate('ext5', 'ext2');
model.geom('geom1').feature('ext5').label('Extrude 5: Gate oxide');
model.geom('geom1').feature('ext5').selection('inputface').clear('ext1');
model.geom('geom1').feature('ext5').selection('inputface').set('ext4', [25 26 27 28]);
model.geom('geom1').feature('ext5').set('contributeto', 'csel2');
model.geom('geom1').run('ext5');
model.geom('geom1').feature.duplicate('ext6', 'ext3');
model.geom('geom1').feature('ext6').label('Extrude 6: Drain oxide');
model.geom('geom1').feature('ext6').selection('inputface').clear('ext2');
model.geom('geom1').feature('ext6').selection('inputface').set('ext5', [49 50 51 52]);
model.geom('geom1').feature('ext6').set('selresultshow', false);
model.geom('geom1').feature('ext6').set('contributeto', 'csel2');
model.geom('geom1').runPre('fin');

model.selection.create('adj1', 'Adjacent');
model.selection('adj1').model('comp1');

model.geom('geom1').run;

model.selection('adj1').set('input', {'geom1_ext5_dom'});
model.selection.duplicate('adj2', 'adj1');
model.selection('adj2').set('input', {'geom1_csel2_dom'});
model.selection.create('int1', 'Intersection');
model.selection('int1').model('comp1');
model.selection('int1').set('entitydim', 2);
model.selection('int1').set('input', {'adj1' 'adj2'});
model.selection('int1').label('Gate');
model.selection.create('uni1', 'Union');
model.selection('uni1').model('comp1');
model.selection('uni1').label('Source+Drain');
model.selection('uni1').set('input', {'geom1_ext1_dom' 'geom1_ext3_dom'});
model.selection.create('box1', 'Box');
model.selection('box1').model('comp1');
model.selection('box1').label('Box 1: x axis');
model.selection('box1').set('entitydim', 1);
model.selection('box1').set('ymin', -0.1);
model.selection('box1').set('ymax', 0.1);
model.selection('box1').set('zmin', -0.1);
model.selection('box1').set('zmax', 0.1);
model.selection('box1').set('condition', 'inside');
model.selection.duplicate('box2', 'box1');
model.selection('box2').label('Box 2: z axis');
model.selection('box2').set('xmin', -0.1);
model.selection('box2').set('xmax', 0.1);
model.selection('box2').set('zmin', '-inf');
model.selection('box2').set('zmax', 'inf');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('AroraMobilityModel', 'Arora mobility model');
model.material('mat1').propertyGroup.create('PowerLawMobilityModel', 'Power law mobility model');
model.material('mat1').propertyGroup.create('Auger', 'Auger recombination');
model.material('mat1').propertyGroup.create('Direct', 'Direct recombination');
model.material('mat1').propertyGroup.create('SRH', ['Shockley' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Read' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Hall recombination']);
model.material('mat1').propertyGroup.create('FletcherMobilityModel', 'Fletcher mobility model');
model.material('mat1').propertyGroup.create('CaugheyThomasMobilityModel', ['Caughey' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Thomas mobility model']);
model.material('mat1').propertyGroup.create('SemicondMaterial', 'Semiconductor material');
model.material('mat1').propertyGroup.create('LombardiSurfaceMobilityModel', 'Lombardi surface mobility model');
model.material('mat1').propertyGroup.create('ImpactIonization', 'Impact ionization');
model.material('mat1').propertyGroup.create('SlotboomModel', 'Slotboom model');
model.material('mat1').propertyGroup.create('JainRoulstonModel', ['Jain' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Roulston model']);
model.material('mat1').propertyGroup.create('KlaassenUnifiedMobilityModel', 'Klaassen unified mobility model');
model.material('mat1').label('Si - Silicon');
model.material('mat1').propertyGroup('def').set('relpermittivity', {'11.7' '0' '0' '0' '11.7' '0' '0' '0' '11.7'});
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'131[W/(m*K)]' '0' '0' '0' '131[W/(m*K)]' '0' '0' '0' '131[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('density', '2329[kg/m^3]');
model.material('mat1').propertyGroup('def').set('heatcapacity', '700[J/(kg*K)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mun0_ref_arora', '1252[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mup0_ref_arora', '407[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mun_min_ref_arora', '88[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mup_min_ref_arora', '54.3[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('Nn0_ref_arora', '1.26e17[1/cm^3]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('Np0_ref_arora', '2.35e17[1/cm^3]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('alpha0_arora', '0.88');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta1_arora', '-0.57');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta2_arora', '-2.33');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta3_arora', '-2.33');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta4_arora', '-0.146');
model.material('mat1').propertyGroup('AroraMobilityModel').set('Tref_arora', '300[K]');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('mun0_pl', '1448[cm^2/(V*s)]');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('mup0_pl', '473[cm^2/(V*s)]');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('alphan_pl', '2.33');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('alphap_pl', '2.23');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('Tref_pl', '300[K]');
model.material('mat1').propertyGroup('Auger').set('Cn', '2.8e-31[cm^6/s]');
model.material('mat1').propertyGroup('Auger').set('Cp', '9.9e-32[cm^6/s]');
model.material('mat1').propertyGroup('Direct').set('C', '0[cm^3/s]');
model.material('mat1').propertyGroup('SRH').set('taun', '10[us]');
model.material('mat1').propertyGroup('SRH').set('taup', '10[us]');
model.material('mat1').propertyGroup('FletcherMobilityModel').set('F1_fl', '1.04e21[1/(cm^1*V*s)]');
model.material('mat1').propertyGroup('FletcherMobilityModel').set('F2_fl', '7.45e13[1/cm^2]');
model.material('mat1').propertyGroup('FletcherMobilityModel').set('Tref_fl', '300[K]');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').label(['Caughey' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Thomas mobility model']);
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('alphan0_ct', '1.11');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('alphap0_ct', '1.21');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('vn0_ct', '1e7[cm/s]');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('vp0_ct', '8.37e6[cm/s]');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betan1_ct', '0.66');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betap1_ct', '0.17');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betan2_ct', '-0.87');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betap2_ct', '-0.52');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('Tref_ct', '300[K]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Eg0', '1.12[V]');
model.material('mat1').propertyGroup('SemicondMaterial').set('chi0', '4.05[V]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Nv', '(T/300[K])^(3/2)*1.04e19[1/cm^3]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Nc', '(T/300[K])^(3/2)*2.8e19[1/cm^3]');
model.material('mat1').propertyGroup('SemicondMaterial').set('mun', '1450[cm^2/(V*s)]');
model.material('mat1').propertyGroup('SemicondMaterial').set('mup', '500[cm^2/(V*s)]');
model.material('mat1').propertyGroup('SemicondMaterial').addInput('temperature');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('deltan_ls', '5.82e14[V/s]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('deltap_ls', '2.05e14[V/s]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mun1_ls', '4.75e7[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mup1_ls', '9.93e7[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mun2_ls', '1.74e5[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mup2_ls', '8.84e5[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('alphan_ls', '0.125');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('alphap_ls', '0.0317');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('Tref_ls', '1[K]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('Eref_ls', '1[V/cm]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('Nref_ls', '1[1/cm^3]');
model.material('mat1').propertyGroup('ImpactIonization').set('an', '0.426');
model.material('mat1').propertyGroup('ImpactIonization').set('ap', '0.243');
model.material('mat1').propertyGroup('ImpactIonization').set('bn', '4.81E5[V/cm]');
model.material('mat1').propertyGroup('ImpactIonization').set('bp', '6.53E5[V/cm]');
model.material('mat1').propertyGroup('ImpactIonization').set('cnii', '3.05E-4');
model.material('mat1').propertyGroup('ImpactIonization').set('cpii', '5.35E-4');
model.material('mat1').propertyGroup('ImpactIonization').set('dn', '6.86E-4');
model.material('mat1').propertyGroup('ImpactIonization').set('dp', '5.67E-4');
model.material('mat1').propertyGroup('SlotboomModel').set('Eref_sb', '0.00692[V]');
model.material('mat1').propertyGroup('SlotboomModel').set('Nref_sb', '1.3e17[1/cm^3]');
model.material('mat1').propertyGroup('SlotboomModel').set('alpha_sb', '0.5');
model.material('mat1').propertyGroup('JainRoulstonModel').set('An_jr', '3.5e-8[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Bn_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Cn_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Ap_jr', '3.5e-8[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Bp_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Cp_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Nref_jr', '1[1/cm^3]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('alpha_jr', '0.5');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('T_ref_kl', '300[K]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_e_max_kl', '1414.0[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_h_max_kl', '470.5[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_e_min_kl', '68.5[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_h_min_kl', '44.9[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('theta_e_kl', '2.285');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('theta_h_kl', '2.247');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('alpha_e_1_kl', '0.711');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('alpha_h_1_kl', '0.719');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_e_1_kl', '9.20e16[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_h_1_kl', '2.23e17[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('c_D_kl', '0.21');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('c_A_kl', '0.50');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_D_kl', '4.0e20[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_A_kl', '7.2e20[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('f_BH_kl', '3.828');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('f_CW_kl', '2.459');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_BH_kl', '1.36e20[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('P_CW_kl', '3.97e13');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_1_kl', '0.89233');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_2_kl', '0.41372');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_3_kl', '0.19778');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_4_kl', '0.28227');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_5_kl', '0.005978');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_6_kl', '1.80618');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_7_kl', '0.72169');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_1_kl', '0.7643');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_2_kl', '2.2999');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_3_kl', '6.5502');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_4_kl', '2.3670');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_5_kl', '-0.01552');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_6_kl', '0.6478');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('m_e_kl', 'me_const');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('m_h_kl', '1.258*me_const');
model.material('mat1').selection.named('geom1_csel1_dom');

model.param.create('par2');
model.param('par2').label('Parameters 2: Physics');
model.param('par2').set('T0', '300[K]');
model.param('par2').descr('T0', 'Temperature');
model.param('par2').set('fmx', '0.8');
model.param('par2').descr('fmx', 'Longitudinal DG effective mass');
model.param('par2').set('fmy', '0.12');
model.param('par2').descr('fmy', 'Transverse DG effective mass');
model.param('par2').set('mx', 'fmx*me_const');
model.param('par2').descr('mx', 'Longitudinal DG effective mass');
model.param('par2').set('my', 'fmy*me_const');
model.param('par2').descr('my', 'Transverse DG effective mass');
model.param('par2').set('mz', 'my');
model.param('par2').descr('mz', 'Transverse DG effective mass');
model.param('par2').set('epsrOx', '3.9');
model.param('par2').descr('epsrOx', 'Oxide dielectric constant');
model.param('par2').set('mox', '0.5*me_const');
model.param('par2').descr('mox', 'Oxide DG effective mass');
model.param('par2').set('moxstar', '0.22*me_const');
model.param('par2').descr('moxstar', 'Oxide DG effective mass');
model.param('par2').set('PhiBox', '3.15[V]');
model.param('par2').descr('PhiBox', 'Oxide potential barrier');
model.param('par2').set('Nd', '1e20[cm^-3]');
model.param('par2').descr('Nd', 'Doping');
model.param('par2').set('cp', '1');
model.param('par2').descr('cp', 'Continuation parameter for doping');
model.param('par2').set('Vd', '0.05[V]');
model.param('par2').descr('Vd', 'Drain voltage');
model.param('par2').set('Phig', '4.5[V]');
model.param('par2').descr('Phig', 'Gate metal work function');
model.param('par2').set('Vg', '0.8[V]');
model.param('par2').descr('Vg', 'Gate voltage');

model.physics('semi').prop('ModelProperties').set('Compute', 'MajorityPsi');
model.physics('semi').prop('ShapeProperty').set('Formulation', 'FEM2DG');
model.physics('semi').feature('smm1').set('minput_temperature', 'T0');
model.physics('semi').feature('smm1').set('meDG', {'mx' '0' '0' '0' 'my' '0' '0' '0' 'mz'});
model.physics('semi').create('ccn1', 'ChargeConservation', 3);
model.physics('semi').feature('ccn1').selection.named('geom1_csel2_dom');
model.physics('semi').feature('ccn1').set('epsilonr_mat', 'userdef');
model.physics('semi').feature('ccn1').set('epsilonr', {'epsrOx' '0' '0' '0' 'epsrOx' '0' '0' '0' 'epsrOx'});
model.physics('semi').feature('ii1').set('DGexteriorBC', 'barrier');
model.physics('semi').feature('ii1').set('meOx', {'mox' '0' '0' '0' 'mox' '0' '0' '0' 'mox'});
model.physics('semi').feature('ii1').set('meOxStar', {'moxstar' '0' '0' '0' 'moxstar' '0' '0' '0' 'moxstar'});
model.physics('semi').feature('ii1').set('Phi_nOx', 'PhiBox');
model.physics('semi').create('adm1', 'AnalyticDopingModel', 3);
model.physics('semi').feature('adm1').selection.named('uni1');
model.physics('semi').feature('adm1').set('impurityType', 'donor');
model.physics('semi').feature('adm1').set('NDc', 'Nd*cp');
model.physics('semi').create('mc1', 'MetalContact', 2);
model.physics('semi').feature('mc1').label('Metal Contact 1: Source');
model.physics('semi').feature('mc1').selection.named('geom1_ext1_bnd');
model.physics('semi').create('mc2', 'MetalContact', 2);
model.physics('semi').feature('mc2').label('Metal Contact 2: Drain');
model.physics('semi').feature('mc2').selection.named('geom1_ext3_bnd');
model.physics('semi').feature('mc2').set('V0', 'Vd');
model.physics('semi').create('term1', 'Terminal', 2);
model.physics('semi').feature('term1').label('Terminal 1: Gate');
model.physics('semi').feature('term1').selection.named('int1');
model.physics('semi').feature('term1').set('Phic', 'Phig');
model.physics('semi').feature('term1').set('TerminalType', 'Voltage');
model.physics('semi').feature('term1').set('V0', 'Vg');

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.set([1 4 8 11 15 18 21 24]);
model.mesh('mesh1').feature('map1').set('adjustedgdistr', true);
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([9 20 21 24 27 31]);
model.mesh('mesh1').feature('map1').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis1').set('elemcount', 3);
model.mesh('mesh1').feature('map1').feature('dis1').set('elemratio', 2);
model.mesh('mesh1').feature('map1').feature.duplicate('dis2', 'dis1');
model.mesh('mesh1').feature('map1').feature('dis2').selection.set([10 12 13 15 23 33]);
model.mesh('mesh1').feature('map1').feature('dis2').set('reverse', true);
model.mesh('mesh1').feature('map1').create('dis3', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis3').selection.set([5 17 26 34]);
model.mesh('mesh1').feature('map1').feature('dis3').set('numelem', 1);
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis1').selection.named('geom1_ext2_dom');
model.mesh('mesh1').feature('swe1').feature('dis1').set('numelem', 3);
model.mesh('mesh1').feature('swe1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis2').selection.named('uni1');
model.mesh('mesh1').feature('swe1').feature('dis2').set('type', 'predefined');
model.mesh('mesh1').feature('swe1').feature('dis2').set('elemcount', 10);
model.mesh('mesh1').feature('swe1').feature('dis2').set('elemratio', 3);
model.mesh('mesh1').feature('swe1').feature('dis2').set('symmetric', true);
model.mesh('mesh1').run;

model.study('std1').feature('semie').set('useparam', true);
model.study('std1').feature('semie').setIndex('pname', 'cp', 0);
model.study('std1').feature('semie').setIndex('plistarr', '', 0);
model.study('std1').feature('semie').setIndex('punit', '', 0);
model.study('std1').feature('semie').setIndex('pname', 'cp', 0);
model.study('std1').feature('semie').setIndex('plistarr', '', 0);
model.study('std1').feature('semie').setIndex('punit', '', 0);
model.study('std1').feature('semie').setIndex('plistarr', '10^range(-12,4,0)', 0);
model.study('std1').feature('semie').setIndex('punit', '', 0);
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').set('sweeptype', 'filled');
model.study('std1').feature('stat').setIndex('pname', 'cp', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', '', 0);
model.study('std1').feature('stat').setIndex('pname', 'cp', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', '', 0);
model.study('std1').feature('stat').setIndex('pname', 'fmx', 0);
model.study('std1').feature('stat').setIndex('plistarr', '0.8 0.5 0.3 0.2 0.1', 0);
model.study('std1').feature('stat').setIndex('punit', '', 0);
model.study('std1').feature('stat').setIndex('pname', 'cp', 1);
model.study('std1').feature('stat').setIndex('plistarr', '', 1);
model.study('std1').feature('stat').setIndex('punit', '', 1);
model.study('std1').feature('stat').setIndex('pname', 'cp', 1);
model.study('std1').feature('stat').setIndex('plistarr', '', 1);
model.study('std1').feature('stat').setIndex('punit', '', 1);
model.study('std1').feature('stat').setIndex('pname', 'Vg', 1);
model.study('std1').feature('stat').setIndex('plistarr', 'range(0.8,-0.1,0.4)  0.295 range(0.2,-0.1,-0.01)', 1);
model.study('std1').feature('stat').setIndex('punit', 'V', 1);
model.study('std1').feature('stat').set('preusesol', 'auto');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'semie');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_V').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_Efn_').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_phi_n').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_V').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_Efn_').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_phi_n').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_V').set('scaleval', '1');
model.sol('sol1').feature('v1').feature('comp1_Efn_').set('scaleval', '1');
model.sol('sol1').feature('v1').feature('comp1_phi_n').set('scaleval', '1');
model.sol('sol1').feature('v1').set('control', 'semie');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 1.0E-6);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol1').feature('s1').feature('p1').set('control', 'semie');
model.sol('sol1').feature('s1').set('control', 'semie');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', false);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').feature('aDef').set('assemtol', 0);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol1').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol1').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol1').feature('s1').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol1').feature('s1').feature('d1').set('ooc', 'auto');
model.sol('sol1').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol1').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol1').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'stat');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').feature('comp1_V').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_Efn_').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_phi_n').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_V').set('resscalemethod', 'parent');
model.sol('sol1').feature('v2').feature('comp1_Efn_').set('resscalemethod', 'parent');
model.sol('sol1').feature('v2').feature('comp1_phi_n').set('resscalemethod', 'parent');
model.sol('sol1').feature('v2').feature('comp1_V').set('scaleval', '1');
model.sol('sol1').feature('v2').feature('comp1_Efn_').set('scaleval', '1');
model.sol('sol1').feature('v2').feature('comp1_phi_n').set('scaleval', '1');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('initsoluse', 'sol2');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'stat');
model.sol('sol1').create('s2', 'Stationary');
model.sol('sol1').feature('s2').set('stol', 0.001);
model.sol('sol1').feature('s2').create('p1', 'Parametric');
model.sol('sol1').feature('s2').feature.remove('pDef');
model.sol('sol1').feature('s2').feature('p1').set('porder', 'constant');
model.sol('sol1').feature('s2').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s2').set('control', 'stat');
model.sol('sol1').feature('s2').feature('aDef').set('complexfun', false);
model.sol('sol1').feature('s2').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s2').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s2').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s2').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s2').feature('aDef').set('assemtol', 0);
model.sol('sol1').feature('s2').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s2').feature('fc1').set('rstep', 10);
model.sol('sol1').feature('s2').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s2').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s2').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('s2').feature('fc1').set('initstep', 0.1);
model.sol('sol1').feature('s2').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol1').feature('s2').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('d1').set('linsolver', 'mumps');
model.sol('sol1').feature('s2').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol1').feature('s2').feature('d1').set('ooc', 'off');
model.sol('sol1').feature('s2').feature('d1').set('errorchk', 'off');
model.sol('sol1').feature('s2').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s2').feature('fc1').set('rstep', 10);
model.sol('sol1').feature('s2').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s2').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s2').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('s2').feature('fc1').set('initstep', 0.1);
model.sol('sol1').feature('s2').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol1').feature('s2').feature.remove('fcDef');
model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').label('Electron Concentration (semi)');
model.result('pg1').set('showlegendsmaxmin', true);
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 9, 0);
model.result('pg1').setIndex('looplevel', 5, 1);
model.result('pg1').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond3/pg1');
model.result('pg1').feature.create('vol1', 'Volume');
model.result('pg1').feature('vol1').set('showsolutionparams', 'on');
model.result('pg1').feature('vol1').set('expr', 'semi.N');
model.result('pg1').feature('vol1').set('unit', '1/cm^3');
model.result('pg1').feature('vol1').set('colortable', 'Prism');
model.result('pg1').feature('vol1').set('colorscalemode', 'logarithmic');
model.result('pg1').feature('vol1').set('resolution', 'norefine');
model.result('pg1').feature('vol1').set('smooth', 'internal');
model.result('pg1').feature('vol1').set('showsolutionparams', 'on');
model.result('pg1').feature('vol1').set('data', 'parent');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Hole Concentration (semi)');
model.result('pg2').set('showlegendsmaxmin', true);
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 9, 0);
model.result('pg2').setIndex('looplevel', 5, 1);
model.result('pg2').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond3/pg2');
model.result('pg2').feature.create('vol1', 'Volume');
model.result('pg2').feature('vol1').set('showsolutionparams', 'on');
model.result('pg2').feature('vol1').set('expr', 'semi.P');
model.result('pg2').feature('vol1').set('unit', '1/cm^3');
model.result('pg2').feature('vol1').set('colortable', 'Prism');
model.result('pg2').feature('vol1').set('colorscalemode', 'logarithmic');
model.result('pg2').feature('vol1').set('resolution', 'norefine');
model.result('pg2').feature('vol1').set('smooth', 'internal');
model.result('pg2').feature('vol1').set('showsolutionparams', 'on');
model.result('pg2').feature('vol1').set('data', 'parent');
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').label('Electric Potential (semi)');
model.result('pg3').set('data', 'dset1');
model.result('pg3').setIndex('looplevel', 9, 0);
model.result('pg3').setIndex('looplevel', 5, 1);
model.result('pg3').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond3/pg3');
model.result('pg3').feature.create('vol1', 'Volume');
model.result('pg3').feature('vol1').set('showsolutionparams', 'on');
model.result('pg3').feature('vol1').set('expr', 'V');
model.result('pg3').feature('vol1').set('resolution', 'norefine');
model.result('pg3').feature('vol1').set('smooth', 'internal');
model.result('pg3').feature('vol1').set('showsolutionparams', 'on');
model.result('pg3').feature('vol1').set('data', 'parent');
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').label('Quantum Potential, Electron (semi)');
model.result('pg4').set('data', 'dset1');
model.result('pg4').setIndex('looplevel', 9, 0);
model.result('pg4').setIndex('looplevel', 5, 1);
model.result('pg4').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond3/pcond1/pg1');
model.result('pg4').feature.create('vol1', 'Volume');
model.result('pg4').feature('vol1').set('showsolutionparams', 'on');
model.result('pg4').feature('vol1').set('expr', 'semi.VnDG');
model.result('pg4').feature('vol1').set('smooth', 'internal');
model.result('pg4').feature('vol1').set('showsolutionparams', 'on');
model.result('pg4').feature('vol1').set('data', 'parent');
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').label('Quantum Potential, Hole (semi)');
model.result('pg5').set('data', 'dset1');
model.result('pg5').setIndex('looplevel', 9, 0);
model.result('pg5').setIndex('looplevel', 5, 1);
model.result('pg5').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond3/pcond1/pg2');
model.result('pg5').feature.create('vol1', 'Volume');
model.result('pg5').feature('vol1').set('showsolutionparams', 'on');
model.result('pg5').feature('vol1').set('expr', 'semi.VpDG');
model.result('pg5').feature('vol1').set('smooth', 'internal');
model.result('pg5').feature('vol1').set('showsolutionparams', 'on');
model.result('pg5').feature('vol1').set('data', 'parent');
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').set('data', 'dset1');
model.result('pg6').create('vol2', 'Volume');
model.result('pg6').create('vol1', 'Volume');
model.result('pg6').feature('vol2').set('expr', 'semi.Nnetdop');
model.result('pg6').feature('vol2').set('unit', '1/cm^3');
model.result('pg6').feature('vol2').set('coloring', 'gradient');
model.result('pg6').feature('vol2').set('colorscalemode', 'logarithmic');
model.result('pg6').feature('vol2').set('topcolor', 'red');
model.result('pg6').feature('vol2').set('bottomcolor', 'custom');
model.result('pg6').feature('vol2').set('custombottomcolor', [1 0.8 0.8]);
model.result('pg6').feature('vol2').set('smooth', 'internal');
model.result('pg6').feature('vol2').set('showsolutionparams', 'on');
model.result('pg6').feature('vol2').set('data', 'parent');
model.result('pg6').feature('vol2').set('titletype', 'none');
model.result('pg6').feature('vol2').feature.create('filt1', 'Filter');
model.result('pg6').feature('vol2').feature('filt1').set('expr', 'semi.Na-semi.Nd > 1[1/cm^3]');
model.result('pg6').feature('vol2').feature('filt1').set('useder', true);
model.result('pg6').feature('vol1').set('expr', 'semi.Nnetdop');
model.result('pg6').feature('vol1').set('unit', '1/cm^3');
model.result('pg6').feature('vol1').set('coloring', 'gradient');
model.result('pg6').feature('vol1').set('colorscalemode', 'logarithmic');
model.result('pg6').feature('vol1').set('topcolor', 'blue');
model.result('pg6').feature('vol1').set('bottomcolor', 'custom');
model.result('pg6').feature('vol1').set('custombottomcolor', [0.8 0.8 1]);
model.result('pg6').feature('vol1').set('smooth', 'internal');
model.result('pg6').feature('vol1').set('showsolutionparams', 'on');
model.result('pg6').feature('vol1').set('data', 'parent');
model.result('pg6').feature('vol1').set('titletype', 'none');
model.result('pg6').feature('vol1').feature.create('filt1', 'Filter');
model.result('pg6').feature('vol1').feature('filt1').set('expr', 'semi.Nd-semi.Na > 1[1/cm^3]');
model.result('pg6').feature('vol1').feature('filt1').set('useder', true);
model.result('pg6').set('titletype', 'manual');
model.result('pg6').set('title', 'Net Dopant Concentration \vert N<sub>d</sub> - N<sub>a</sub>\vert: P-type (Red), N-type (Blue)');
model.result('pg6').set('showlegendsmaxmin', true);
model.result('pg6').set('showlegendsunit', true);
model.result('pg6').set('legendpos', 'alternating');
model.result('pg6').feature('vol2').label('P-type');
model.result('pg6').feature('vol1').label('N-type');
model.result('pg6').label('Net Dopant Concentration (semi)');
model.result('pg1').run;
model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').run;
model.result('pg7').label('Id-Vg');
model.result('pg7').setIndex('looplevelinput', 'manualindices', 1);
model.result('pg7').setIndex('looplevelindices', 'range(1,4)', 1);
model.result('pg7').set('axislimits', true);
model.result('pg7').set('xmin', 0);
model.result('pg7').set('xmax', 0.8);
model.result('pg7').set('ymin', '1e-10');
model.result('pg7').set('ymax', '1e-4');
model.result('pg7').set('ylog', true);
model.result('pg7').set('legendpos', 'lowerright');
model.result('pg7').create('glob1', 'Global');
model.result('pg7').feature('glob1').set('markerpos', 'datapoints');
model.result('pg7').feature('glob1').set('linewidth', 'preference');
model.result('pg7').feature('glob1').setIndex('expr', 'semi.I0_2', 0);
model.result('pg7').feature('glob1').setIndex('unit', 'A', 0);
model.result('pg7').feature('glob1').setIndex('descr', 'Id', 0);
model.result('pg7').feature('glob1').set('linewidth', 2);
model.result('pg7').run;
model.result.create('pg8', 'PlotGroup1D');
model.result('pg8').run;
model.result('pg8').label('n(x)');
model.result('pg8').setIndex('looplevelinput', 'manual', 0);
model.result('pg8').setIndex('looplevel', [6], 0);
model.result('pg8').set('axislimits', true);
model.result('pg8').set('xmin', -10);
model.result('pg8').set('xmax', 10);
model.result('pg8').set('ymin', '1e17');
model.result('pg8').set('ymax', '1e21');
model.result('pg8').set('ylog', true);
model.result('pg8').set('legendpos', 'lowerright');
model.result('pg8').create('lngr1', 'LineGraph');
model.result('pg8').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg8').feature('lngr1').set('linewidth', 'preference');
model.result('pg8').feature('lngr1').selection.named('box1');
model.result('pg8').feature('lngr1').set('expr', 'semi.N');
model.result('pg8').feature('lngr1').set('unit', '1/cm^3');
model.result('pg8').feature('lngr1').set('xdata', 'expr');
model.result('pg8').feature('lngr1').set('xdataexpr', 'x');
model.result('pg8').feature('lngr1').set('linewidth', 2);
model.result('pg8').feature('lngr1').set('legend', true);
model.result('pg8').run;
model.result('pg8').run;
model.result.duplicate('pg9', 'pg8');
model.result('pg9').run;
model.result('pg9').label('n(z)');
model.result('pg9').set('xmin', -1.6);
model.result('pg9').set('xmax', 1.6);
model.result('pg9').set('ymin', '4e15');
model.result('pg9').set('ymax', '4e18');
model.result('pg9').set('legendpos', 'lowermiddle');
model.result('pg9').run;
model.result('pg9').feature('lngr1').selection.set([]);
model.result('pg9').feature('lngr1').selection.named('box2');
model.result('pg9').feature('lngr1').set('xdataexpr', 'z');
model.result('pg9').run;
model.result('pg1').run;
model.result('pg1').setIndex('looplevel', 1, 1);
model.result('pg1').setIndex('looplevel', 4, 0);
model.result('pg1').set('edges', false);
model.result('pg1').run;
model.result('pg1').feature('vol1').active(false);
model.result('pg1').run;
model.result('pg1').create('slc1', 'Slice');
model.result('pg1').feature('slc1').set('expr', 'semi.log10N');
model.result('pg1').feature('slc1').set('quickplane', 'zx');
model.result('pg1').feature('slc1').set('quickynumber', 1);
model.result('pg1').feature.duplicate('slc2', 'slc1');
model.result('pg1').run;
model.result('pg1').feature('slc2').set('quickplane', 'yz');
model.result('pg1').feature('slc2').set('quickxnumber', 7);
model.result('pg1').feature('slc2').set('inheritplot', 'slc1');
model.result('pg1').run;
model.result('pg1').create('arwv1', 'ArrowVolume');
model.result('pg1').feature('arwv1').set('expr', {'semi.JX' 'semi.JY' 'semi.JZ'});
model.result('pg1').feature('arwv1').set('descr', 'Total current density, nodal value');
model.result('pg1').feature('arwv1').set('ynumber', 5);
model.result('pg1').feature('arwv1').set('znumber', 19);
model.result('pg1').feature('arwv1').set('color', 'black');
model.result('pg1').run;
model.result('pg1').create('iso1', 'Isosurface');
model.result('pg1').feature('iso1').set('expr', 'V');
model.result('pg1').feature('iso1').set('number', 10);
model.result('pg1').feature('iso1').set('colortable', 'GrayScale');
model.result('pg1').feature('iso1').set('colorlegend', false);
model.result('pg1').feature('iso1').create('filt1', 'Filter');
model.result('pg1').run;
model.result('pg1').feature('iso1').feature('filt1').set('expr', '-5e-11<y');
model.result('pg1').run;

model.title('3D Density-Gradient Simulation of a Nanowire MOSFET');

model.description('This 3D model of a nanowire MOSFET employs the density-gradient theory to add the effect of quantum confinement to the conventional drift-diffusion formulation, without requiring excessively high computational costs. The oxide layer is simulated explicitly with geometric domains, and quantum confinement at the silicon-oxide interface is accounted for via a dedicated boundary condition. The density-gradient effective mass is anisotropic. Various selection utilities are used to simplify the assignment of physics settings and plot selections. The result matches well with the Id-Vg curves and electron density profiles published in the reference paper.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('nanowire_density_gradient_3d.mph');

model.modelNode.label('Components');

out = model;
