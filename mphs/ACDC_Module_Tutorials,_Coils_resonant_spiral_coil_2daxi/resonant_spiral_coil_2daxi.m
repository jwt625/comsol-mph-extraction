function out = model
%
% resonant_spiral_coil_2daxi.m
%
% Model exported on May 26 2025, 21:25 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/ACDC_Module/Tutorials,_Coils');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('mef', 'ElectricInductionCurrents', 'geom1');
model.physics('mef').model('comp1');

model.study.create('std1');
model.study('std1').create('freq', 'Frequency');
model.study('std1').feature('freq').setSolveFor('/physics/mef', true);

model.param.set('frq', '6e6[Hz]');
model.param.set('delta', 'sqrt(2/(mu0_const*2*pi*frq*5.98e7[S/m]))');
model.param.set('gap', '1e-7[m]');

model.geom('geom1').scaleUnitValue(true);
model.geom('geom1').lengthUnit('mm');
model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('base', 'center');
model.geom('geom1').feature('r1').set('pos', [6 0.5]);
model.geom('geom1').feature('r1').setIndex('layer', 'gap+eps', 0);
model.geom('geom1').feature('r1').set('layerleft', true);
model.geom('geom1').feature('r1').set('layerright', true);
model.geom('geom1').feature('r1').set('layertop', true);
model.geom('geom1').run('r1');
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').set('base', 'center');
model.geom('geom1').feature('r2').set('pos', [7 0.5]);
model.geom('geom1').feature('r2').setIndex('layer', 'gap+eps', 0);
model.geom('geom1').feature('r2').set('layerleft', true);
model.geom('geom1').feature('r2').set('layerright', true);
model.geom('geom1').feature('r2').set('layertop', true);
model.geom('geom1').run('r2');
model.geom('geom1').create('r3', 'Rectangle');
model.geom('geom1').feature('r3').set('base', 'center');
model.geom('geom1').feature('r3').set('pos', [8 0.5]);
model.geom('geom1').feature('r3').setIndex('layer', 'gap+eps', 0);
model.geom('geom1').feature('r3').set('layerleft', true);
model.geom('geom1').feature('r3').set('layerright', true);
model.geom('geom1').feature('r3').set('layertop', true);
model.geom('geom1').run('r3');
model.geom('geom1').create('r4', 'Rectangle');
model.geom('geom1').feature('r4').set('base', 'center');
model.geom('geom1').feature('r4').set('pos', [9 0.5]);
model.geom('geom1').feature('r4').setIndex('layer', 'gap+eps', 0);
model.geom('geom1').feature('r4').set('layerleft', true);
model.geom('geom1').feature('r4').set('layerright', true);
model.geom('geom1').feature('r4').set('layertop', true);
model.geom('geom1').run('r4');
model.geom('geom1').create('r5', 'Rectangle');
model.geom('geom1').feature('r5').set('base', 'center');
model.geom('geom1').feature('r5').set('pos', [10 0.5]);
model.geom('geom1').feature('r5').setIndex('layer', 'gap+eps', 0);
model.geom('geom1').feature('r5').set('layerleft', true);
model.geom('geom1').feature('r5').set('layerright', true);
model.geom('geom1').feature('r5').set('layertop', true);
model.geom('geom1').run('r5');
model.geom('geom1').create('r6', 'Rectangle');
model.geom('geom1').feature('r6').set('size', [25 1]);
model.geom('geom1').feature('r6').set('pos', [0 -1]);
model.geom('geom1').run('r6');
model.geom('geom1').create('r7', 'Rectangle');
model.geom('geom1').feature('r7').set('size', [25 50]);
model.geom('geom1').feature('r7').set('pos', [0 -25]);
model.geom('geom1').run('r7');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');

model.geom('geom1').run;

model.selection('sel1').label('Copper');
model.selection('sel1').set([8 17 26 35 44]);
model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').label('Layer Corner Boundaries');
model.selection('sel2').set([4 6 10 12 13 15 19 21 22 24 28 30 31 33 37 39 40 42 46 48]);
model.selection('sel2').geom('geom1', 2, 1, {'exterior'});
model.selection('sel2').set([4 6 10 12 13 15 19 21 22 24 28 30 31 33 37 39 40 42 46 48]);
model.selection.create('sel3', 'Explicit');
model.selection('sel3').model('comp1');
model.selection('sel3').label('Layer Side Boundaries');
model.selection('sel3').set([5 7 9 11 14 16 18 20 23 25 27 29 32 34 36 38 41 43 45 47]);
model.selection('sel3').geom('geom1', 2, 1, {'exterior'});
model.selection('sel3').set([5 7 9 11 14 16 18 20 23 25 27 29 32 34 36 38 41 43 45 47]);
model.selection.create('sel4', 'Explicit');
model.selection('sel4').model('comp1');
model.selection('sel4').label('Varnish');
model.selection('sel4').set([4 5 6 7 9 10 11 12 13 14 15 16 18 19 20 21 22 23 24 25 27 28 29 30 31 32 33 34 36 37 38 39 40 41 42 43 45 46 47 48]);
model.selection.create('dif1', 'Difference');
model.selection('dif1').model('comp1');
model.selection('dif1').set('entitydim', 1);
model.selection('dif1').set('add', {'sel3'});
model.selection('dif1').set('subtract', {'sel2'});

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('rho', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('cs', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an1', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an2', 'Analytic');
model.material('mat1').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat1').propertyGroup.create('NonlinearModel', 'Nonlinear model');
model.material('mat1').propertyGroup.create('idealGas', 'Ideal gas');
model.material('mat1').propertyGroup('idealGas').func.create('Cp', 'Piecewise');
model.material('mat1').label('Air');
model.material('mat1').set('family', 'air');
model.material('mat1').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('eta').set('pieces', {'200.0' '1600.0' '-8.38278E-7+8.35717342E-8*T^1-7.69429583E-11*T^2+4.6437266E-14*T^3-1.06585607E-17*T^4'});
model.material('mat1').propertyGroup('def').func('eta').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat1').propertyGroup('def').func('Cp').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('def').func('rho').set('expr', 'pA*0.02897/R_const[K*mol/J]/T');
model.material('mat1').propertyGroup('def').func('rho').set('args', {'pA' 'T'});
model.material('mat1').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.material('mat1').propertyGroup('def').func('rho').set('argunit', {'Pa' 'K'});
model.material('mat1').propertyGroup('def').func('rho').set('plotaxis', {'off' 'on'});
model.material('mat1').propertyGroup('def').func('rho').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat1').propertyGroup('def').func('rho').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '293.15'});
model.material('mat1').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('k').set('pieces', {'200.0' '1600.0' '-0.00227583562+1.15480022E-4*T^1-7.90252856E-8*T^2+4.11702505E-11*T^3-7.43864331E-15*T^4'});
model.material('mat1').propertyGroup('def').func('k').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.material('mat1').propertyGroup('def').func('cs').set('expr', 'sqrt(1.4*R_const[K*mol/J]/0.02897*T)');
model.material('mat1').propertyGroup('def').func('cs').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('cs').set('fununit', 'm/s');
model.material('mat1').propertyGroup('def').func('cs').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('cs').set('plotfixedvalue', {'273.15'});
model.material('mat1').propertyGroup('def').func('cs').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.material('mat1').propertyGroup('def').func('an1').set('expr', '-1/rho(pA,T)*d(rho(pA,T),T)');
model.material('mat1').propertyGroup('def').func('an1').set('args', {'pA' 'T'});
model.material('mat1').propertyGroup('def').func('an1').set('fununit', '1/K');
model.material('mat1').propertyGroup('def').func('an1').set('argunit', {'Pa' 'K'});
model.material('mat1').propertyGroup('def').func('an1').set('plotaxis', {'off' 'on'});
model.material('mat1').propertyGroup('def').func('an1').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat1').propertyGroup('def').func('an1').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an2').set('funcname', 'muB');
model.material('mat1').propertyGroup('def').func('an2').set('expr', '0.6*eta(T)');
model.material('mat1').propertyGroup('def').func('an2').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('an2').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('an2').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an2').set('plotfixedvalue', {'200'});
model.material('mat1').propertyGroup('def').func('an2').set('plotargs', {'T' '200' '1600'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.material('mat1').propertyGroup('def').set('molarmass', '');
model.material('mat1').propertyGroup('def').set('bulkviscosity', '');
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)'});
model.material('mat1').propertyGroup('def').set('molarmass', '0.02897[kg/mol]');
model.material('mat1').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.material('mat1').propertyGroup('def').set('ratioofspecificheat', '1.4');
model.material('mat1').propertyGroup('def').set('electricconductivity', {'0[S/m]' '0' '0' '0' '0[S/m]' '0' '0' '0' '0[S/m]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.material('mat1').propertyGroup('def').set('density', 'rho(pA,T)');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.material('mat1').propertyGroup('def').set('soundspeed', 'cs(T)');
model.material('mat1').propertyGroup('def').addInput('temperature');
model.material('mat1').propertyGroup('def').addInput('pressure');
model.material('mat1').propertyGroup('RefractiveIndex').set('n', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('NonlinearModel').set('BA', 'def.gamma-1');
model.material('mat1').propertyGroup('idealGas').func('Cp').label('Piecewise 2');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat1').propertyGroup('idealGas').func('Cp').set('argunit', 'K');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('idealGas').set('Rs', 'R_const/Mn');
model.material('mat1').propertyGroup('idealGas').set('heatcapacity', 'Cp(T)');
model.material('mat1').propertyGroup('idealGas').set('ratioofspecificheat', '1.4');
model.material('mat1').propertyGroup('idealGas').set('molarmass', '0.02897');
model.material('mat1').propertyGroup('idealGas').addInput('temperature');
model.material('mat1').propertyGroup('idealGas').addInput('pressure');
model.material('mat1').materialType('nonSolid');
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat2').label('FR4 (Circuit Board)');
model.material('mat2').set('family', 'pcbgreen');
model.material('mat2').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('electricconductivity', {'0.004[S/m]' '0' '0' '0' '0.004[S/m]' '0' '0' '0' '0.004[S/m]'});
model.material('mat2').propertyGroup('def').set('relpermittivity', {'4.5' '0' '0' '0' '4.5' '0' '0' '0' '4.5'});
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'18e-6[1/K]' '0' '0' '0' '18e-6[1/K]' '0' '0' '0' '18e-6[1/K]'});
model.material('mat2').propertyGroup('def').set('heatcapacity', '1369[J/(kg*K)]');
model.material('mat2').propertyGroup('def').set('density', '1900[kg/m^3]');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'0.3[W/(m*K)]' '0' '0' '0' '0.3[W/(m*K)]' '0' '0' '0' '0.3[W/(m*K)]'});
model.material('mat2').propertyGroup('Enu').set('E', '22[GPa]');
model.material('mat2').propertyGroup('Enu').set('nu', '0.15');
model.material.create('mat3', 'Common', 'comp1');
model.material('mat3').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat3').propertyGroup.create('linzRes', 'Linearized resistivity');
model.material('mat3').label('Copper');
model.material('mat3').set('family', 'copper');
model.material('mat3').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('def').set('electricconductivity', {'5.998e7[S/m]' '0' '0' '0' '5.998e7[S/m]' '0' '0' '0' '5.998e7[S/m]'});
model.material('mat3').propertyGroup('def').set('heatcapacity', '385[J/(kg*K)]');
model.material('mat3').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('def').set('emissivity', '0.5');
model.material('mat3').propertyGroup('def').set('density', '8940[kg/m^3]');
model.material('mat3').propertyGroup('def').set('thermalconductivity', {'400[W/(m*K)]' '0' '0' '0' '400[W/(m*K)]' '0' '0' '0' '400[W/(m*K)]'});
model.material('mat3').propertyGroup('Enu').set('E', '126e9[Pa]');
model.material('mat3').propertyGroup('Enu').set('nu', '0.34');
model.material('mat3').propertyGroup('linzRes').set('rho0', '1.667e-8[ohm*m]');
model.material('mat3').propertyGroup('linzRes').set('alpha', '3.862e-3[1/K]');
model.material('mat3').propertyGroup('linzRes').set('Tref', '293.15[K]');
model.material('mat3').propertyGroup('linzRes').addInput('temperature');
model.material('mat2').selection.named('sel4');
model.material('mat2').selection.set([2 4 5 6 7 9 10 11 12 13 14 15 16 18 19 20 21 22 23 24 25 27 28 29 30 31 32 33 34 36 37 38 39 40 41 42 43 45 46 47 48]);
model.material('mat2').propertyGroup('def').set('electricconductivity', {'0[S/m]'});
model.material('mat3').selection.named('sel1');

model.physics('mef').prop('ShapeProperty').set('order_magneticvectorpotential', 1);
model.physics('mef').prop('ShapeProperty').set('order_electricpotential', 1);
model.physics('mef').feature('mi1').create('ein1', 'ElectricInsulation', 1);
model.physics('mef').feature('mi1').feature('ein1').selection.all;
model.physics('mef').create('al1', 'AmperesLaw', 2);
model.physics('mef').feature('al1').selection.named('sel1');
model.physics('mef').create('rlccg1', 'RLCCoilGroup', 2);
model.physics('mef').feature('rlccg1').selection.named('sel1');
model.physics('mef').feature('rlccg1').set('CoilExcitation', 'Voltage');
model.physics('mef').feature('rlccg1').set('VCoil', '5[mV]');
model.physics('mef').feature('rlccg1').set('DomainSpec', 'manual');
model.physics('mef').feature('rlccg1').set('DomainsList', '44 35 26 17 8');

model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('size').set('custom', true);
model.mesh('mesh1').feature('size').set('hmax', 1);
model.mesh('mesh1').feature('size').set('hmin', 0.3);
model.mesh('mesh1').feature('size').set('hgrad', 1.5);
model.mesh('mesh1').feature('size').set('hcurve', 0.6);
model.mesh('mesh1').run('size');
model.mesh('mesh1').create('size1', 'Size');
model.mesh('mesh1').feature('size1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('size1').selection.named('sel1');
model.mesh('mesh1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('size1').set('hmax', 1);
model.mesh('mesh1').run('size1');
model.mesh('mesh1').create('edg1', 'Edge');
model.mesh('mesh1').feature('edg1').selection.named('sel2');
model.mesh('mesh1').feature('edg1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('edg1').feature('dis1').selection.named('sel2');
model.mesh('mesh1').feature('edg1').feature('dis1').set('numelem', 1);
model.mesh('mesh1').run('edg1');
model.mesh('mesh1').create('edg2', 'Edge');
model.mesh('mesh1').feature('edg2').selection.named('dif1');
model.mesh('mesh1').feature('edg2').create('dis1', 'Distribution');
model.mesh('mesh1').feature('edg2').feature('dis1').selection.named('dif1');
model.mesh('mesh1').feature('edg2').feature('dis1').set('numelem', 1000);
model.mesh('mesh1').run('edg2');
model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('map1').selection.named('sel4');
model.mesh('mesh1').run('map1');
model.mesh('mesh1').run('ftri1');

model.study('std1').setGenPlots(false);
model.study('std1').feature('freq').set('plist', 'range(5900000,28000,7300000)');

model.probe.create('var1', 'GlobalVariable');
model.probe('var1').model('comp1');
model.probe('var1').set('expr', 'mef.RCoil_1');
model.probe.create('var2', 'GlobalVariable');
model.probe('var2').model('comp1');
model.probe('var2').set('expr', 'mef.XCoil_1');
model.probe('var2').set('unit', ['ohm' ]);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(5900000,28000,7300000)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'Default');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {'var1' 'var2'});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');

model.probe('var1').genResult('none');
model.probe('var2').genResult('none');

model.sol('sol1').runAll;

model.result.dataset.create('dset3', 'Solution');
model.result.dataset('dset3').selection.geom('geom1', 1);
model.result.dataset('dset3').selection.geom('geom1', 1);
model.result.dataset('dset3').selection.set([24 31 38 45 52 59 66 73 80 87 94 101]);
model.result.dataset.create('dset4', 'Solution');
model.result.dataset('dset4').selection.geom('geom1', 2);
model.result.dataset('dset4').selection.geom('geom1', 2);
model.result.dataset('dset4').selection.set([8 17 26 35 44]);
model.result.dataset.create('dset5', 'Solution');
model.result.dataset('dset5').selection.geom('geom1', 2);
model.result.dataset('dset5').selection.geom('geom1', 2);
model.result.dataset('dset5').selection.set([2]);
model.result.dataset.create('rev1', 'Revolve2D');
model.result.dataset('rev1').set('data', 'dset3');
model.result.dataset.create('rev2', 'Revolve2D');
model.result.dataset('rev2').set('data', 'dset4');
model.result.dataset('rev2').set('startangle', -90);
model.result.dataset('rev2').set('revangle', 270);
model.result.dataset.create('rev3', 'Revolve2D');
model.result.dataset('rev3').set('data', 'dset5');
model.result.dataset('rev3').set('startangle', -90);
model.result.dataset('rev3').set('revangle', 270);
model.result.dataset.create('rev4', 'Revolve2D');
model.result.dataset('rev4').set('startangle', -90);
model.result.dataset('rev4').set('revangle', 270);
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').run;
model.result('pg2').label('J, B and V');
model.result('pg2').setIndex('looplevel', 24, 0);
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', 'log(mef.normJ)');
model.result('pg2').feature('surf1').set('colortable', 'Prism');
model.result('pg2').feature('surf1').create('sel1', 'Selection');
model.result('pg2').feature('surf1').feature('sel1').selection.set([8 17 26 35 44]);
model.result('pg2').run;
model.result('pg2').create('surf2', 'Surface');
model.result('pg2').feature('surf2').set('colortable', 'Dipole');
model.result('pg2').run;
model.result('pg2').create('con1', 'Contour');
model.result('pg2').feature('con1').set('expr', 'r*mef.Aphi');
model.result('pg2').feature('con1').set('contourtype', 'tubes');
model.result('pg2').feature('con1').set('tuberadiusscaleactive', true);
model.result('pg2').feature('con1').set('tuberadiusscale', 0.025);
model.result('pg2').feature('con1').create('col1', 'Color');
model.result('pg2').run;
model.result('pg2').feature('con1').feature('col1').set('expr', 'mef.normB');
model.result('pg2').feature('con1').feature('col1').set('colortable', 'RainbowLight');
model.result('pg2').run;
model.result('pg2').feature('con1').create('sel1', 'Selection');
model.result('pg2').feature('con1').feature('sel1').selection.set([1 2 3]);
model.result('pg2').run;
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').run;
model.result('pg3').label('J, B and V, 3D');
model.result('pg3').set('data', 'rev2');
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', 'log(mef.normJ)');
model.result('pg3').feature('surf1').set('colortable', 'Prism');
model.result('pg3').run;
model.result('pg3').create('surf2', 'Surface');
model.result('pg3').feature('surf2').set('data', 'rev3');
model.result('pg3').feature('surf2').set('colortable', 'Dipole');
model.result('pg3').feature('surf2').create('tran1', 'Transparency');
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').create('arwv1', 'ArrowVolume');
model.result('pg3').feature('arwv1').set('revcoordsys', 'cylindrical');
model.result('pg3').feature('arwv1').set('data', 'rev4');
model.result('pg3').feature('arwv1').set('xnumber', 50);
model.result('pg3').feature('arwv1').set('arrowymethod', 'coord');
model.result('pg3').feature('arwv1').set('ycoord', '1e-4');
model.result('pg3').feature('arwv1').set('znumber', 50);
model.result('pg3').feature('arwv1').set('arrowtype', 'cone');
model.result('pg3').feature('arwv1').set('arrowlength', 'logarithmic');
model.result('pg3').feature('arwv1').set('logrange', 1000);
model.result('pg3').feature('arwv1').set('arrowbase', 'center');
model.result('pg3').feature('arwv1').create('col1', 'Color');
model.result('pg3').run;
model.result('pg3').feature('arwv1').feature('col1').set('expr', 'mef.normB');
model.result('pg3').feature('arwv1').feature('col1').set('colortable', 'PrismDark');
model.result('pg3').feature('arwv1').feature('col1').set('colorlegend', false);
model.result('pg3').run;
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').run;
model.result('pg4').label('|nJ|');
model.result('pg4').setIndex('looplevel', 24, 0);
model.result('pg4').create('line1', 'Line');
model.result('pg4').feature('line1').set('expr', 'abs(V_lm[A/m])/(2*pi*r)');
model.result('pg4').feature('line1').set('unit', 'A/mm^2');
model.result('pg4').feature('line1').set('linetype', 'tube');
model.result('pg4').feature('line1').set('tuberadiusscaleactive', true);
model.result('pg4').feature('line1').set('tuberadiusscale', 0.05);
model.result('pg4').feature('line1').set('colortable', 'RainbowLightClassic');
model.result('pg4').feature('line1').create('sel1', 'Selection');
model.result('pg4').feature('line1').feature('sel1').selection.set([24 38 45 59 66 80 87 101]);
model.result('pg4').run;
model.result('pg4').feature('line1').create('filt1', 'Filter');
model.result('pg4').run;
model.result('pg4').feature('line1').feature('filt1').set('expr', '(s>0.01)&&(s<0.99)');
model.result('pg4').run;
model.result('pg4').run;
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').run;
model.result('pg5').label('|nJ|, 3D');
model.result('pg5').setIndex('looplevel', 24, 0);
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', 'abs(V_lm[A/m])/(2*pi*r)');
model.result('pg5').feature('surf1').set('unit', 'A/mm^2');
model.result('pg5').feature('surf1').set('colortable', 'RainbowLightClassic');
model.result('pg5').feature('surf1').create('filt1', 'Filter');
model.result('pg5').run;
model.result('pg5').feature('surf1').feature('filt1').set('expr', '(s>0.01)&&(s<0.99)');
model.result('pg5').run;
model.result('pg5').run;
model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').run;
model.result('pg6').label('Coil Current');
model.result('pg6').set('xlabelactive', true);
model.result('pg6').set('xlabel', 'freq (Hz)');
model.result('pg6').set('xlabelactive', false);
model.result('pg6').create('glob1', 'Global');
model.result('pg6').feature('glob1').set('markerpos', 'datapoints');
model.result('pg6').feature('glob1').set('linewidth', 'preference');
model.result('pg6').feature('glob1').setIndex('expr', 'abs(mef.ICoil_1)', 0);
model.result('pg6').run;
model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').run;
model.result('pg7').label('Feed Impedance');
model.result('pg7').set('xlabelactive', true);
model.result('pg7').set('xlabel', 'freq (Hz)');
model.result('pg7').set('xlabelactive', false);
model.result('pg7').create('glob1', 'Global');
model.result('pg7').feature('glob1').set('markerpos', 'datapoints');
model.result('pg7').feature('glob1').set('linewidth', 'preference');
model.result('pg7').feature('glob1').setIndex('expr', 'mef.RCoil_1', 0);
model.result('pg7').feature('glob1').setIndex('expr', 'mef.XCoil_1', 1);
model.result('pg7').feature('glob1').set('linewidth', 3);
model.result('pg7').run;
model.result('pg7').run;
model.result('pg1').set('window', 'window1');
model.result('pg1').run;
model.result.move('pg1', 6);
model.result('pg1').set('showlegends', false);
model.result('pg1').set('window', 'window1');
model.result('pg1').run;
model.result('pg1').feature('tblp1').set('linemarker', 'cycle');
model.result('pg1').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg1').set('window', 'window1');
model.result('pg1').run;

model.title('Resonant Spiral Coil in 2D Axisymmetry');

model.description('At the resonance frequency, the capacitive coupling between the turns causes the impedance of a coil to transition from inductive to capacitive. This application analyzes the resonance of a 5 turn spiral coil of copper equipped with a thin epoxy varnish insulation layer.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;

model.label('resonant_spiral_coil_2daxi.mph');

model.modelNode.label('Components');

out = model;
