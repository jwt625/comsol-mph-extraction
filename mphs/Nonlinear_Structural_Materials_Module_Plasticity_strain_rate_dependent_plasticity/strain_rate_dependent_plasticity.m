function out = model
%
% strain_rate_dependent_plasticity.m
%
% Model exported on May 26 2025, 21:31 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Nonlinear_Structural_Materials_Module/Plasticity');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');
model.physics('solid').prop('StructuralTransientBehavior').set('StructuralTransientBehavior', 'Quasistatic');
model.physics.create('ht', 'HeatTransfer', 'geom1');
model.physics('ht').model('comp1');

model.multiphysics.create('te1', 'ThermalExpansion', 'geom1', 2);
model.multiphysics('te1').set('Heat_physics', 'ht');
model.multiphysics('te1').set('Solid_physics', 'solid');
model.multiphysics('te1').selection.all;

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/solid', true);
model.study('std1').feature('time').setSolveFor('/physics/ht', true);
model.study('std1').feature('time').setSolveFor('/multiphysics/te1', true);

model.param.set('totL', '100[mm]');
model.param.descr('totL', 'Total length of the specimen');
model.param.set('avgStrain', '0.1');
model.param.descr('avgStrain', 'Average strain');
model.param.set('wMax', 'avgStrain*totL/2');
model.param.descr('wMax', 'Max displacement of the symmetric half');
model.param.set('strainRate', '0.1[1/s]');
model.param.descr('strainRate', 'Strain rate');
model.param.set('tFinal', 'avgStrain/strainRate');
model.param.descr('tFinal', 'End time');

model.geom('geom1').lengthUnit('mm');
model.geom('geom1').create('pol1', 'Polygon');
model.geom('geom1').feature('pol1').set('source', 'table');
model.geom('geom1').feature('pol1').set('type', 'open');
model.geom('geom1').feature('pol1').set('source', 'vectors');
model.geom('geom1').feature('pol1').set('x', '5 5 0  0 10 10 6.01');
model.geom('geom1').feature('pol1').set('y', '20 0 0 50 50 30 30');
model.geom('geom1').run('pol1');
model.geom('geom1').create('qb1', 'QuadraticBezier');
model.geom('geom1').feature('qb1').setIndex('p', 6.01, 0, 0);
model.geom('geom1').feature('qb1').setIndex('p', 30, 1, 0);
model.geom('geom1').feature('qb1').setIndex('p', 5.25, 0, 1);
model.geom('geom1').feature('qb1').setIndex('p', 25, 1, 1);
model.geom('geom1').feature('qb1').setIndex('p', 5, 0, 2);
model.geom('geom1').feature('qb1').setIndex('p', 20, 1, 2);
model.geom('geom1').run('qb1');
model.geom('geom1').create('csol1', 'ConvertToSolid');
model.geom('geom1').feature('csol1').selection('input').set({'pol1' 'qb1'});
model.geom('geom1').run('csol1');
model.geom('geom1').create('fil1', 'Fillet');
model.geom('geom1').feature('fil1').selection('point').set('csol1', 5);
model.geom('geom1').feature('fil1').set('radius', 4);
model.geom('geom1').run('fil1');
model.geom('geom1').run;

model.physics('solid').create('symp1', 'SymmetryPlane', 1);
model.physics('solid').feature('symp1').selection.set([2]);
model.physics('solid').create('disp1', 'Displacement1', 1);
model.physics('solid').feature('disp1').selection.set([3]);
model.physics('solid').feature('disp1').setIndex('Direction', 'prescribed', 2);
model.physics('solid').feature('disp1').setIndex('U0', 'wMax*t/tFinal', 2);
model.physics('solid').feature('lemm1').create('plsty1', 'Plasticity', 2);
model.physics('solid').feature('lemm1').feature('plsty1').set('IsotropicHardeningModel', 'JohnsonCook');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').label('Structural steel');
model.material('mat1').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat1').propertyGroup('Enu').set('E', {'200[GPa]'});
model.material('mat1').propertyGroup('Enu').set('nu', {'0.3'});
model.material('mat1').propertyGroup('def').set('density', {'7850'});
model.material('mat1').propertyGroup.create('ElastoplasticModel', 'Elastoplastic_material_model');
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmags', {'400[MPa]'});
model.material('mat1').propertyGroup.create('JohnsonCook', '#Johnson-Cook');
model.material('mat1').propertyGroup('JohnsonCook').set('k_jcook', {'200[MPa]'});
model.material('mat1').propertyGroup('JohnsonCook').set('n_jcook', {'0.5'});
model.material('mat1').propertyGroup('JohnsonCook').set('epet0_jcook', {'1'});
model.material('mat1').propertyGroup('JohnsonCook').set('C_jcook', {'0.12'});
model.material('mat1').propertyGroup('JohnsonCook').set('m_jcook', {'0.6'});
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'44.5[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', {'475[J/(kg*K)]'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'12.3e-6[1/K]'});

model.physics('ht').create('hf1', 'HeatFluxBoundary', 1);
model.physics('ht').feature('hf1').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht').feature('hf1').set('h', 15);
model.physics('ht').feature('hf1').selection.set([4 5 6 7 8]);

model.multiphysics('te1').set('IncludeTed', false);
model.multiphysics('te1').set('IncludeMechanicalLosses', true);

model.physics('solid').feature('lemm1').set('CalculateDissipatedEnergy', true);

model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('ftri1').create('se1', 'SizeExpression');
model.mesh('mesh1').feature('ftri1').feature('se1').set('sizeexpr', 'if(z<30[mm],1[mm],3[mm])');
model.mesh('mesh1').run;

model.study('std1').label('Study 1: With Thermal Softening');
model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'totL', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);
model.study('std1').feature('param').setIndex('pname', 'totL', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);
model.study('std1').feature('param').setIndex('pname', 'strainRate', 0);
model.study('std1').feature('param').setIndex('plistarr', '0.01 0.1 1 10', 0);
model.study('std1').feature('param').setIndex('punit', '1/s', 0);
model.study('std1').feature('time').set('tlist', 'range(0,0.01*tFinal,0.1*tFinal) range(0.12*tFinal,0.02*tFinal,tFinal)');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.05099019513592785');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.01*tFinal,0.1*tFinal) range(0.12*tFinal,0.02*tFinal,tFinal)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('atolmethod', {'comp1_T' 'global' 'comp1_u' 'global'});
model.sol('sol1').feature('t1').set('atol', {'comp1_T' '1e-3' 'comp1_u' '1e-3'});
model.sol('sol1').feature('t1').set('atolvaluemethod', {'comp1_T' 'factor' 'comp1_u' 'factor'});
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('estrat', 'exclude');
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'mumps');
model.sol('sol1').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d1').label('Direct, heat transfer variables ht (te1) (Merged)');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('t1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('t1').feature('i1').set('maxlinit', 10000);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i1').label('AMG, heat transfer variables ht (te1)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std1');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'strainRate'});
model.batch('p1').set('plistarr', {'0.01 0.1 1 10'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol('sol1').feature('t1').set('tstepsbdf', 'strict');
model.sol.create('sol2');
model.sol('sol2').study('std1');
model.sol('sol2').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').run('compute');

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset2');
model.result('pg1').setIndex('looplevel', 56, 0);
model.result('pg1').setIndex('looplevel', 4, 1);
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('surf1').set('threshold', 'manual');
model.result('pg1').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg1').feature('surf1').set('colortable', 'Rainbow');
model.result('pg1').feature('surf1').set('colortabletrans', 'none');
model.result('pg1').feature('surf1').set('colorscalemode', 'linear');
model.result('pg1').feature('surf1').set('resolution', 'normal');
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg1').feature('surf1').feature('def').set('expr', {'u' 'w'});
model.result('pg1').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result.dataset.create('dset2solidrev', 'Revolve2D');
model.result.dataset('dset2solidrev').set('data', 'dset2');
model.result.dataset('dset2solidrev').set('revangle', 225);
model.result.dataset('dset2solidrev').set('startangle', -90);
model.result.dataset('dset2solidrev').set('hasspacevars', true);
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'dset2solidrev');
model.result('pg2').setIndex('looplevel', 56, 0);
model.result('pg2').setIndex('looplevel', 4, 1);
model.result('pg2').set('defaultPlotID', 'stress3D');
model.result('pg2').label('Stress, 3D (solid)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg2').feature('surf1').set('threshold', 'manual');
model.result('pg2').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg2').feature('surf1').set('colortable', 'Rainbow');
model.result('pg2').feature('surf1').set('colortabletrans', 'none');
model.result('pg2').feature('surf1').set('colorscalemode', 'linear');
model.result('pg2').feature('surf1').set('colortable', 'Prism');
model.result('pg2').feature('surf1').create('def', 'Deform');
model.result.dataset('dset2solidrev').set('hasspacevars', true);
model.result('pg2').feature('surf1').feature('def').set('revcoordsys', 'cylindrical');
model.result('pg2').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg2').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg2').feature('surf1').feature('def').set('descractive', true);
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').label('Temperature (ht)');
model.result('pg3').set('data', 'dset2');
model.result('pg3').setIndex('looplevel', 56, 0);
model.result('pg3').setIndex('looplevel', 4, 1);
model.result('pg3').set('dataisaxisym', 'off');
model.result('pg3').set('data', 'dset2');
model.result('pg3').setIndex('looplevel', 56, 0);
model.result('pg3').setIndex('looplevel', 4, 1);
model.result('pg3').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pg2');
model.result('pg3').feature.create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('solutionparams', 'parent');
model.result('pg3').feature('surf1').set('expr', 'T');
model.result('pg3').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('data', 'parent');
model.result('pg1').run;
model.result.dataset.create('mir1', 'Mirror3D');
model.result.dataset('mir1').set('quickplane', 'xy');
model.result('pg2').run;
model.result('pg2').set('data', 'mir1');
model.result('pg2').run;
model.result('pg2').feature('surf1').set('unit', 'MPa');
model.result('pg2').run;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Stress vs. Strain');
model.result('pg4').set('data', 'dset2');
model.result('pg4').create('ptgr1', 'PointGraph');
model.result('pg4').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg4').feature('ptgr1').set('linewidth', 'preference');
model.result('pg4').feature('ptgr1').selection.set([1]);
model.result('pg4').feature('ptgr1').set('expr', 'solid.sz');
model.result('pg4').feature('ptgr1').set('unit', 'MPa');
model.result('pg4').feature('ptgr1').set('xdatasolnumtype', 'inner');
model.result('pg4').feature('ptgr1').set('xdata', 'expr');
model.result('pg4').feature('ptgr1').set('xdataexpr', 'solid.eZZ');
model.result('pg4').feature('ptgr1').set('linewidth', 2);
model.result('pg4').feature('ptgr1').set('legend', true);
model.result('pg4').feature('ptgr1').set('autopoint', false);
model.result('pg4').run;
model.result('pg4').set('titletype', 'none');
model.result('pg4').set('xlabelactive', true);
model.result('pg4').set('xlabel', 'Axial strain (1)');
model.result('pg4').set('ylabelactive', true);
model.result('pg4').set('ylabel', 'Axial stress (MPa)');
model.result('pg4').set('legendpos', 'lowerright');
model.result('pg4').run;

model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl('intop1').set('axisym', true);
model.cpl('intop1').selection.geom('geom1', 1);
model.cpl('intop1').selection.set([3]);
model.cpl('intop1').set('method', 'summation');

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').set('Fz', 'intop1(solid.RFz)');
model.variable('var1').descr('Fz', 'Axial force');

model.sol('sol1').updateSolution;
model.sol('sol2').updateSolution;

model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').label('Force vs. Displacement');
model.result('pg5').set('data', 'dset2');
model.result('pg5').set('legendpos', 'lowerright');
model.result('pg5').create('glob1', 'Global');
model.result('pg5').feature('glob1').set('markerpos', 'datapoints');
model.result('pg5').feature('glob1').set('linewidth', 'preference');
model.result('pg5').feature('glob1').setIndex('expr', 'Fz', 0);
model.result('pg5').feature('glob1').setIndex('unit', 'kN', 0);
model.result('pg5').feature('glob1').setIndex('descr', 'Axial force', 0);
model.result('pg5').feature('glob1').set('xdatasolnumtype', 'inner');
model.result('pg5').feature('glob1').set('xdata', 'expr');
model.result('pg5').feature('glob1').set('xdataexpr', 'wMax*t/tFinal');
model.result('pg5').feature('glob1').set('linewidth', 2);
model.result('pg5').feature('glob1').set('xdatadescractive', true);
model.result('pg5').feature('glob1').set('xdatadescr', 'Extension');
model.result('pg5').feature('glob1').set('autodescr', false);
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').set('titletype', 'none');
model.result('pg5').run;

model.study.create('std2');
model.study('std2').create('time', 'Transient');
model.study('std2').feature('time').setSolveFor('/physics/solid', true);
model.study('std2').feature('time').setSolveFor('/physics/ht', true);
model.study('std2').feature('time').setSolveFor('/multiphysics/te1', true);
model.study('std2').label('Study 2: Without Thermal Softening');
model.study('std2').create('param', 'Parametric');
model.study('std2').feature('param').setIndex('pname', 'totL', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', 'm', 0);
model.study('std2').feature('param').setIndex('pname', 'totL', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', 'm', 0);
model.study('std2').feature('param').setIndex('pname', 'strainRate', 0);
model.study('std2').feature('param').setIndex('plistarr', '0.01 0.1 1 10', 0);
model.study('std2').feature('param').setIndex('punit', '1/s', 0);
model.study('std2').feature('time').set('tlist', 'range(0,0.01*tFinal,0.1*tFinal) range(0.12*tFinal,0.02*tFinal,tFinal)');

model.physics('solid').feature('lemm1').feature.duplicate('plsty2', 'plsty1');
model.physics('solid').feature('lemm1').feature('plsty2').set('ThermalSoftening', 'NoThermalSoftening');

model.study('std1').feature('time').set('useadvanceddisable', true);
model.study('std1').feature('time').set('disabledphysics', {'solid/lemm1/plsty2'});

model.sol.create('sol7');
model.sol('sol7').study('std2');
model.sol('sol7').create('st1', 'StudyStep');
model.sol('sol7').feature('st1').set('study', 'std2');
model.sol('sol7').feature('st1').set('studystep', 'time');
model.sol('sol7').create('v1', 'Variables');
model.sol('sol7').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol7').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.05099019513592785');
model.sol('sol7').feature('v1').set('control', 'time');
model.sol('sol7').create('t1', 'Time');
model.sol('sol7').feature('t1').set('tlist', 'range(0,0.01*tFinal,0.1*tFinal) range(0.12*tFinal,0.02*tFinal,tFinal)');
model.sol('sol7').feature('t1').set('plot', 'off');
model.sol('sol7').feature('t1').set('plotgroup', 'pg1');
model.sol('sol7').feature('t1').set('plotfreq', 'tout');
model.sol('sol7').feature('t1').set('probesel', 'all');
model.sol('sol7').feature('t1').set('probes', {});
model.sol('sol7').feature('t1').set('probefreq', 'tsteps');
model.sol('sol7').feature('t1').set('rtol', 0.001);
model.sol('sol7').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol7').feature('t1').set('atolmethod', {'comp1_T' 'global' 'comp1_u' 'global'});
model.sol('sol7').feature('t1').set('atol', {'comp1_T' '1e-3' 'comp1_u' '1e-3'});
model.sol('sol7').feature('t1').set('atolvaluemethod', {'comp1_T' 'factor' 'comp1_u' 'factor'});
model.sol('sol7').feature('t1').set('reacf', true);
model.sol('sol7').feature('t1').set('storeudot', true);
model.sol('sol7').feature('t1').set('endtimeinterpolation', true);
model.sol('sol7').feature('t1').set('estrat', 'exclude');
model.sol('sol7').feature('t1').set('maxorder', 2);
model.sol('sol7').feature('t1').set('control', 'time');
model.sol('sol7').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol7').feature('t1').create('seDef', 'Segregated');
model.sol('sol7').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol7').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol7').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol7').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol7').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol7').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol7').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol7').feature('t1').create('d1', 'Direct');
model.sol('sol7').feature('t1').feature('d1').set('linsolver', 'mumps');
model.sol('sol7').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol7').feature('t1').feature('d1').label('Direct, heat transfer variables ht (te1) (Merged)');
model.sol('sol7').feature('t1').create('i1', 'Iterative');
model.sol('sol7').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol7').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol7').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol7').feature('t1').feature('i1').set('rhob', 20);
model.sol('sol7').feature('t1').feature('i1').set('maxlinit', 10000);
model.sol('sol7').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol7').feature('t1').feature('i1').label('AMG, heat transfer variables ht (te1)');
model.sol('sol7').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol7').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol7').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol7').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol7').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol7').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol7').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol7').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol7').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol7').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol7').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol7').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol7').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol7').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol7').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol7').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol7').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol7').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol7').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol7').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol7').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol7').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol7').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol7').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol7').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol7').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol7').feature('t1').feature.remove('fcDef');
model.sol('sol7').feature('t1').feature.remove('seDef');
model.sol('sol7').attach('std2');

model.batch.create('p2', 'Parametric');
model.batch('p2').study('std2');
model.batch('p2').create('so1', 'Solutionseq');
model.batch('p2').feature('so1').set('seq', 'sol7');
model.batch('p2').feature('so1').set('store', 'on');
model.batch('p2').feature('so1').set('clear', 'on');
model.batch('p2').feature('so1').set('psol', 'none');
model.batch('p2').set('pname', {'strainRate'});
model.batch('p2').set('plistarr', {'0.01 0.1 1 10'});
model.batch('p2').set('sweeptype', 'sparse');
model.batch('p2').set('probesel', 'all');
model.batch('p2').set('probes', {});
model.batch('p2').set('plot', 'off');
model.batch('p2').set('err', 'on');
model.batch('p2').attach('std2');
model.batch('p2').set('control', 'param');

model.sol('sol7').feature('t1').set('tstepsbdf', 'strict');

model.study('std2').setGenPlots(false);

model.sol.create('sol8');
model.sol('sol8').study('std2');
model.sol('sol8').label('Parametric Solutions 2');

model.batch('p2').feature('so1').set('psol', 'sol8');
model.batch('p2').run('compute');

model.result('pg4').run;
model.result('pg4').feature.duplicate('ptgr2', 'ptgr1');
model.result('pg4').run;
model.result('pg4').feature('ptgr2').set('data', 'dset4');
model.result('pg4').feature('ptgr2').set('linecolor', 'cyclereset');
model.result('pg4').feature('ptgr2').set('linemarker', 'cycle');
model.result('pg4').feature('ptgr2').set('markerpos', 'interp');
model.result('pg4').feature('ptgr2').set('legendsuffix', ', No temperature softening');
model.result('pg4').run;
model.result.create('pg6', 'PlotGroup2D');
model.result('pg6').set('data', 'dset2');
model.result('pg6').setIndex('looplevel', 56, 0);
model.result('pg6').setIndex('looplevel', 4, 1);
model.result('pg6').label('Equivalent Plastic Strain (solid)');
model.result('pg6').set('defaultPlotID', 'equivalentPlasticStrain');
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', {'solid.epeGp'});
model.result('pg6').feature('surf1').set('inheritplot', 'none');
model.result('pg6').feature('surf1').set('resolution', 'normal');
model.result('pg6').feature('surf1').set('colortabletype', 'discrete');
model.result('pg6').feature('surf1').set('bandcount', 11);
model.result('pg6').feature('surf1').set('colortable', 'AuroraAustralisDark');
model.result('pg6').feature('surf1').set('descractive', true);
model.result('pg6').feature('surf1').set('descr', 'Equivalent plastic strain');
model.result('pg6').label('Equivalent Plastic Strain (solid)');
model.result('pg6').run;
model.result('pg6').set('looplevel', [56 1]);
model.result('pg6').set('titletype', 'manual');
model.result('pg6').set('title', 'Equivalent plastic strain');
model.result('pg6').set('paramindicator', '');
model.result('pg6').set('plotarrayenable', true);
model.result('pg6').set('relpadding', 1);
model.result('pg6').create('mms1', 'MaxMinSurface');
model.result('pg6').feature('mms1').set('arraydim', '1');
model.result('pg6').feature('mms1').set('expr', 'solid.epeGp');
model.result('pg6').feature('mms1').set('display', 'max');
model.result('pg6').feature('mms1').set('precision', 3);
model.result('pg6').feature('mms1').set('manualindexing', true);
model.result('pg6').run;
model.result('pg6').create('ann1', 'Annotation');
model.result('pg6').feature('ann1').set('arraydim', '1');
model.result('pg6').feature('ann1').set('posyexpr', 'totL/2');
model.result('pg6').feature('ann1').set('level', 'global');
model.result('pg6').feature('ann1').set('text', '$\dot \varepsilon = eval(strainRate,1/s,1) \;  \mathrm s^{-1}$');
model.result('pg6').feature('ann1').set('latexmarkup', true);
model.result('pg6').feature('ann1').set('showpoint', false);
model.result('pg6').feature('ann1').set('exprprecision', 2);
model.result('pg6').feature('ann1').set('anchorpoint', 'lowerleft');
model.result('pg6').feature('ann1').set('manualindexing', true);
model.result('pg6').run;
model.result('pg6').feature('surf1').set('arraydim', '1');
model.result('pg6').run;
model.result('pg6').feature.duplicate('surf2', 'surf1');
model.result('pg6').feature.duplicate('mms2', 'mms1');
model.result('pg6').feature.duplicate('ann2', 'ann1');
model.result('pg6').feature('surf2').set('arraydim', '1');
model.result('pg6').run;
model.result('pg6').feature('surf2').set('data', 'dset2');
model.result('pg6').feature('surf2').set('looplevel', [56 2]);
model.result('pg6').feature('surf2').set('inheritplot', 'surf1');
model.result('pg6').feature('mms2').set('arraydim', '1');
model.result('pg6').run;
model.result('pg6').feature('mms2').set('data', 'dset2');
model.result('pg6').feature('mms2').set('looplevel', [56 2]);
model.result('pg6').feature('mms2').set('arrayindex', 1);
model.result('pg6').feature('ann2').set('arraydim', '1');
model.result('pg6').run;
model.result('pg6').feature('ann2').set('data', 'dset2');
model.result('pg6').feature('ann2').set('looplevel', [56 2]);
model.result('pg6').feature('ann2').set('arrayindex', 1);
model.result('pg6').feature('surf2').set('arraydim', '1');
model.result('pg6').run;
model.result('pg6').feature.duplicate('surf3', 'surf2');
model.result('pg6').feature.duplicate('mms3', 'mms2');
model.result('pg6').feature.duplicate('ann3', 'ann2');
model.result('pg6').feature('surf3').set('arraydim', '1');
model.result('pg6').run;
model.result('pg6').feature('surf3').set('looplevel', [56 3]);
model.result('pg6').feature('mms3').set('arraydim', '1');
model.result('pg6').run;
model.result('pg6').feature('mms3').set('looplevel', [56 3]);
model.result('pg6').feature('mms3').set('anchorpoint', 'upperright');
model.result('pg6').feature('mms3').set('arrayindex', 2);
model.result('pg6').feature('ann3').set('arraydim', '1');
model.result('pg6').run;
model.result('pg6').feature('ann3').set('looplevel', [56 3]);
model.result('pg6').feature('ann3').set('arrayindex', 2);
model.result('pg6').feature('surf3').set('arraydim', '1');
model.result('pg6').run;
model.result('pg6').feature.duplicate('surf4', 'surf3');
model.result('pg6').feature.duplicate('mms4', 'mms3');
model.result('pg6').feature.duplicate('ann4', 'ann3');
model.result('pg6').feature('surf4').set('arraydim', '1');
model.result('pg6').run;
model.result('pg6').feature('surf4').set('looplevel', [56 4]);
model.result('pg6').feature('mms4').set('arraydim', '1');
model.result('pg6').run;
model.result('pg6').feature('mms4').set('looplevel', [56 4]);
model.result('pg6').feature('mms4').set('arrayindex', 3);
model.result('pg6').feature('ann4').set('arraydim', '1');
model.result('pg6').run;
model.result('pg6').feature('ann4').set('looplevel', [56 4]);
model.result('pg6').feature('ann4').set('arrayindex', 3);
model.result('pg6').feature('ann4').set('text', '$\dot \varepsilon = eval(strainRate) \;  \mathrm s^{-1}$');
model.result('pg6').run;
model.result('pg6').run;

model.view('view1').set('showgrid', false);

model.result.duplicate('pg7', 'pg6');
model.result('pg7').run;
model.result('pg7').label('Temperature Increase');
model.result('pg7').set('title', 'Temperature increase');
model.result('pg7').feature('surf1').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('surf1').set('expr', 'T-293.15');
model.result('pg7').feature('surf1').set('colortable', 'Thermal');
model.result('pg7').feature('surf2').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('surf2').set('expr', 'T-minput.Tempref');
model.result('pg7').feature('surf3').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('surf3').set('expr', 'T-minput.Tempref');
model.result('pg7').feature('surf4').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('surf4').set('expr', 'T-minput.Tempref');
model.result('pg7').feature('mms1').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('mms1').set('expr', 'T-minput.Tempref');
model.result('pg7').feature('mms2').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('mms2').set('expr', 'T-minput.Tempref');
model.result('pg7').feature('mms3').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('mms3').set('expr', 'T-minput.Tempref');
model.result('pg7').feature('mms4').set('arraydim', '1');
model.result('pg7').run;
model.result('pg7').feature('mms4').set('expr', 'T-minput.Tempref');
model.result('pg7').run;

model.title('Tensile Test with Strain Rate Dependent Plasticity');

model.description(['In this example, a tensile test is simulated at four different strain rates. The Johnson' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Cook hardening law is used to model the strain rate dependency of the plastic hardening.' newline  newline 'The temperature distribution and thermal expansion caused by the heating generated by the plastic deformation are also computed. In a separate study, the influence of including a temperature dependency in the Johnson' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Cook model is examined.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;
model.sol('sol8').clearSolutionData;
model.sol('sol9').clearSolutionData;
model.sol('sol10').clearSolutionData;
model.sol('sol11').clearSolutionData;
model.sol('sol12').clearSolutionData;

model.label('strain_rate_dependent_plasticity.mph');

model.modelNode.label('Components');

out = model;
