function out = model
%
% heat_transient_axi.m
%
% Model exported on May 26 2025, 21:26 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/COMSOL_Multiphysics/Heat_Transfer');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('ht', 'HeatTransfer', 'geom1');
model.physics('ht').model('comp1');

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/ht', true);

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', [0.3 0.4]);
model.geom('geom1').runPre('fin');
model.geom('geom1').run;

model.physics('ht').create('temp1', 'TemperatureBoundary', 1);
model.physics('ht').feature('temp1').selection.all;
model.physics('ht').feature('temp1').set('T0', '1000[degC]');
model.physics('ht').feature('solid1').set('k_mat', 'userdef');
model.physics('ht').feature('solid1').set('k', [52 0 0 0 52 0 0 0 52]);
model.physics('ht').feature('solid1').set('rho_mat', 'userdef');
model.physics('ht').feature('solid1').set('rho', 7850);
model.physics('ht').feature('solid1').set('Cp_mat', 'userdef');
model.physics('ht').feature('solid1').set('Cp', 460);
model.physics('ht').feature('init1').set('Tinit', '0[degC]');

model.study('std1').feature('time').label('Time Dependent - Continuous Simulation (with Heating)');
model.study('std1').feature('time').set('tlist', 'range(0,10,380)');
model.study('std1').feature('time').set('usertol', true);
model.study('std1').feature('time').set('rtol', '1e-5');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,10,380)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('atolmethod', {'comp1_T' 'global'});
model.sol('sol1').feature('t1').set('atol', {'comp1_T' '1e-3'});
model.sol('sol1').feature('t1').set('atolvaluemethod', {'comp1_T' 'factor'});
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('estrat', 'exclude');
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d1').label('Direct, heat transfer variables (ht)');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('t1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('t1').feature('i1').set('maxlinit', 10000);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i1').label('AMG, heat transfer variables (ht)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').label('Temperature (ht)');
model.result('pg1').set('dataisaxisym', 'off');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 39, 0);
model.result('pg1').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pg2');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('solutionparams', 'parent');
model.result('pg1').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result('pg1').run;
model.result('pg1').setIndex('looplevel', 20, 0);
model.result('pg1').run;
model.result('pg1').feature('surf1').set('unit', 'degC');
model.result('pg1').run;
model.result.dataset.create('rev1', 'Revolve2D');
model.result.dataset('rev1').set('startangle', -90);
model.result.dataset('rev1').set('revangle', 225);
model.result.dataset('rev1').set('data', 'dset1');
model.result.dataset('rev1').set('defaultPlotIDs', {'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pcond2/pg2|ht' 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pcond2/pg3|ht' 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pcond2/pg4|ht'});
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Temperature (ht) 1');
model.result('pg2').set('data', 'rev1');
model.result('pg2').setIndex('looplevel', 39, 0);
model.result('pg2').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pcond2/pg2');
model.result('pg2').feature.create('vol1', 'Volume');
model.result('pg2').feature('vol1').set('solutionparams', 'parent');
model.result('pg2').feature('vol1').set('colortable', 'HeatCameraLight');
model.result('pg2').feature('vol1').set('smooth', 'internal');
model.result('pg2').feature('vol1').set('showsolutionparams', 'on');
model.result('pg2').feature('vol1').set('data', 'parent');
model.result('pg2').label('Temperature (ht) 1');
model.result('pg2').run;
model.result('pg2').label('Temperature 3D');
model.result('pg2').setIndex('looplevel', 20, 0);
model.result('pg2').run;
model.result('pg2').feature('vol1').set('unit', 'degC');
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').label('Isothermal Contours (ht)');
model.result('pg3').set('dataisaxisym', 'off');
model.result('pg3').set('data', 'dset1');
model.result('pg3').setIndex('looplevel', 39, 0);
model.result('pg3').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pg1');
model.result('pg3').feature.create('con1', 'Contour');
model.result('pg3').feature('con1').set('solutionparams', 'parent');
model.result('pg3').feature('con1').set('colortable', 'HeatCameraLight');
model.result('pg3').feature('con1').set('smooth', 'internal');
model.result('pg3').feature('con1').set('showsolutionparams', 'on');
model.result('pg3').feature('con1').set('data', 'parent');
model.result('pg3').label('Isothermal Contours (ht)');
model.result('pg3').run;
model.result.dataset.create('cpt1', 'CutPoint2D');
model.result.dataset('cpt1').set('pointx', 0.1);
model.result.dataset('cpt1').set('pointy', 0.3);
model.result.numerical.create('pev1', 'EvalPoint');
model.result.numerical('pev1').set('data', 'cpt1');
model.result.numerical('pev1').setIndex('looplevelinput', 'manual', 0);
model.result.numerical('pev1').setIndex('looplevel', [20], 0);
model.result.numerical('pev1').setIndex('unit', 'degC', 0);
model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').comments('Point Evaluation 1');
model.result.numerical('pev1').set('table', 'tbl1');
model.result.numerical('pev1').setResult;

model.study.create('std2');
model.study('std2').create('time', 'Transient');
model.study('std2').feature('time').setSolveFor('/physics/ht', true);
model.study('std2').feature('time').label('Time Dependent - First Part (with Heating)');
model.study('std2').feature('time').set('tlist', 'range(0,10,190)');
model.study('std2').feature('time').set('usertol', true);
model.study('std2').feature('time').set('rtol', '1e-5');
model.study('std2').create('time2', 'Transient');
model.study('std2').feature('time2').label('Time Dependent - Second Part (with Insulation)');
model.study('std2').feature('time2').set('tlist', 'range(190,10,380)');
model.study('std2').feature('time2').set('usertol', true);
model.study('std2').feature('time2').set('rtol', '1e-5');
model.study('std2').feature('time2').set('useadvanceddisable', true);
model.study('std2').feature('time2').set('disabledphysics', {'ht/temp1'});

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'time');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'time');
model.sol('sol2').create('t1', 'Time');
model.sol('sol2').feature('t1').set('tlist', 'range(0,10,190)');
model.sol('sol2').feature('t1').set('plot', 'off');
model.sol('sol2').feature('t1').set('plotgroup', 'pg1');
model.sol('sol2').feature('t1').set('plotfreq', 'tout');
model.sol('sol2').feature('t1').set('probesel', 'all');
model.sol('sol2').feature('t1').set('probes', {});
model.sol('sol2').feature('t1').set('probefreq', 'tsteps');
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol2').feature('t1').set('atolmethod', {'comp1_T' 'global'});
model.sol('sol2').feature('t1').set('atol', {'comp1_T' '1e-3'});
model.sol('sol2').feature('t1').set('atolvaluemethod', {'comp1_T' 'factor'});
model.sol('sol2').feature('t1').set('reacf', true);
model.sol('sol2').feature('t1').set('storeudot', true);
model.sol('sol2').feature('t1').set('endtimeinterpolation', true);
model.sol('sol2').feature('t1').set('estrat', 'exclude');
model.sol('sol2').feature('t1').set('maxorder', 2);
model.sol('sol2').feature('t1').set('control', 'time');
model.sol('sol2').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol2').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol2').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol2').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol2').feature('t1').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t1').feature('d1').label('Direct, heat transfer variables (ht)');
model.sol('sol2').feature('t1').create('i1', 'Iterative');
model.sol('sol2').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol2').feature('t1').feature('i1').set('rhob', 20);
model.sol('sol2').feature('t1').feature('i1').set('maxlinit', 10000);
model.sol('sol2').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol2').feature('t1').feature('i1').label('AMG, heat transfer variables (ht)');
model.sol('sol2').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol2').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol2').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol2').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol2').feature('t1').feature.remove('fcDef');
model.sol('sol2').create('su1', 'StoreSolution');
model.sol('sol2').create('st2', 'StudyStep');
model.sol('sol2').feature('st2').set('study', 'std2');
model.sol('sol2').feature('st2').set('studystep', 'time2');
model.sol('sol2').create('v2', 'Variables');
model.sol('sol2').feature('v2').set('initmethod', 'sol');
model.sol('sol2').feature('v2').set('initsol', 'sol2');
model.sol('sol2').feature('v2').set('initsoluse', 'sol3');
model.sol('sol2').feature('v2').set('notsolmethod', 'sol');
model.sol('sol2').feature('v2').set('notsol', 'sol2');
model.sol('sol2').feature('v2').set('notsoluse', 'sol3');
model.sol('sol2').feature('v2').set('control', 'time2');
model.sol('sol2').create('t2', 'Time');
model.sol('sol2').feature('t2').set('tlist', 'range(190,10,380)');
model.sol('sol2').feature('t2').set('plot', 'off');
model.sol('sol2').feature('t2').set('plotgroup', 'pg1');
model.sol('sol2').feature('t2').set('plotfreq', 'tout');
model.sol('sol2').feature('t2').set('probesel', 'all');
model.sol('sol2').feature('t2').set('probes', {});
model.sol('sol2').feature('t2').set('probefreq', 'tsteps');
model.sol('sol2').feature('t2').set('atolglobalvaluemethod', 'factor');
model.sol('sol2').feature('t2').set('atolmethod', {'comp1_T' 'global'});
model.sol('sol2').feature('t2').set('atol', {'comp1_T' '1e-3'});
model.sol('sol2').feature('t2').set('atolvaluemethod', {'comp1_T' 'factor'});
model.sol('sol2').feature('t2').set('reacf', true);
model.sol('sol2').feature('t2').set('storeudot', true);
model.sol('sol2').feature('t2').set('endtimeinterpolation', true);
model.sol('sol2').feature('t2').set('estrat', 'exclude');
model.sol('sol2').feature('t2').set('maxorder', 2);
model.sol('sol2').feature('t2').set('control', 'time2');
model.sol('sol2').feature('t2').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('t2').feature('fc1').set('jtech', 'once');
model.sol('sol2').feature('t2').feature('fc1').set('damp', 0.9);
model.sol('sol2').feature('t2').feature('fc1').set('stabacc', 'aacc');
model.sol('sol2').feature('t2').feature('fc1').set('aaccdim', 5);
model.sol('sol2').feature('t2').feature('fc1').set('aaccmix', 0.9);
model.sol('sol2').feature('t2').feature('fc1').set('aaccdelay', 1);
model.sol('sol2').feature('t2').create('d1', 'Direct');
model.sol('sol2').feature('t2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t2').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t2').feature('d1').label('Direct, heat transfer variables (ht)');
model.sol('sol2').feature('t2').create('i1', 'Iterative');
model.sol('sol2').feature('t2').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('t2').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('t2').feature('i1').set('itrestart', 50);
model.sol('sol2').feature('t2').feature('i1').set('rhob', 20);
model.sol('sol2').feature('t2').feature('i1').set('maxlinit', 10000);
model.sol('sol2').feature('t2').feature('i1').set('nlinnormuse', 'on');
model.sol('sol2').feature('t2').feature('i1').label('AMG, heat transfer variables (ht)');
model.sol('sol2').feature('t2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('t2').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('t2').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('t2').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol2').feature('t2').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol2').feature('t2').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('t2').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('t2').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('t2').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('t2').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('t2').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('t2').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol2').feature('t2').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('t2').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('t2').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol2').feature('t2').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('t2').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('t2').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t2').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t2').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('t2').feature('fc1').set('jtech', 'once');
model.sol('sol2').feature('t2').feature('fc1').set('damp', 0.9);
model.sol('sol2').feature('t2').feature('fc1').set('stabacc', 'aacc');
model.sol('sol2').feature('t2').feature('fc1').set('aaccdim', 5);
model.sol('sol2').feature('t2').feature('fc1').set('aaccmix', 0.9);
model.sol('sol2').feature('t2').feature('fc1').set('aaccdelay', 1);
model.sol('sol2').feature('t2').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').label('Temperature (ht) 1');
model.result('pg4').set('data', 'dset2');
model.result('pg4').setIndex('looplevel', 20, 0);
model.result('pg4').set('dataisaxisym', 'off');
model.result('pg4').set('data', 'dset2');
model.result('pg4').setIndex('looplevel', 20, 0);
model.result('pg4').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pg2');
model.result('pg4').feature.create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('showsolutionparams', 'on');
model.result('pg4').feature('surf1').set('solutionparams', 'parent');
model.result('pg4').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg4').feature('surf1').set('showsolutionparams', 'on');
model.result('pg4').feature('surf1').set('data', 'parent');
model.result('pg4').run;

model.study('std2').create('cmbsol', 'CombineSolution');
model.study('std2').feature('cmbsol').set('cssol1', 'sol3');

model.sol('sol2').study('std2');
model.sol('sol3').copySolution('sol4');

model.study('std2').feature('time2').set('notlistsolnum', 1);
model.study('std2').feature('time2').set('notsolnum', 'auto');
model.study('std2').feature('time2').set('listsolnum', 1);
model.study('std2').feature('time2').set('solnum', 'auto');
model.study('std2').feature('time2').set('notlistsolnum', 1);
model.study('std2').feature('time2').set('notsolnum', 'auto');
model.study('std2').feature('time2').set('listsolnum', 1);
model.study('std2').feature('time2').set('solnum', 'auto');
model.study('std2').feature('cmbsol').set('listsolnum', 1);
model.study('std2').feature('cmbsol').set('solnum', 'all');

model.result.dataset('dset3').set('solution', 'none');

model.sol('sol2').feature.remove('t2');
model.sol('sol2').feature.remove('v2');
model.sol('sol2').feature.remove('st2');
model.sol('sol2').feature.remove('su1');
model.sol('sol2').feature.remove('t1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('st1');
model.sol('sol4').copySolution('sol3');
model.sol.remove('sol4');
model.sol('sol3').label('Solution Store 1');

model.result.dataset.remove('dset5');

model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'time');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'time');
model.sol('sol2').create('t1', 'Time');
model.sol('sol2').feature('t1').set('tlist', 'range(0,10,190)');
model.sol('sol2').feature('t1').set('plot', 'off');
model.sol('sol2').feature('t1').set('plotgroup', 'pg1');
model.sol('sol2').feature('t1').set('plotfreq', 'tout');
model.sol('sol2').feature('t1').set('probesel', 'all');
model.sol('sol2').feature('t1').set('probes', {});
model.sol('sol2').feature('t1').set('probefreq', 'tsteps');
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol2').feature('t1').set('atolmethod', {'comp1_T' 'global'});
model.sol('sol2').feature('t1').set('atol', {'comp1_T' '1e-3'});
model.sol('sol2').feature('t1').set('atolvaluemethod', {'comp1_T' 'factor'});
model.sol('sol2').feature('t1').set('reacf', true);
model.sol('sol2').feature('t1').set('storeudot', true);
model.sol('sol2').feature('t1').set('endtimeinterpolation', true);
model.sol('sol2').feature('t1').set('estrat', 'exclude');
model.sol('sol2').feature('t1').set('maxorder', 2);
model.sol('sol2').feature('t1').set('control', 'time');
model.sol('sol2').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol2').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol2').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol2').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol2').feature('t1').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t1').feature('d1').label('Direct, heat transfer variables (ht)');
model.sol('sol2').feature('t1').create('i1', 'Iterative');
model.sol('sol2').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol2').feature('t1').feature('i1').set('rhob', 20);
model.sol('sol2').feature('t1').feature('i1').set('maxlinit', 10000);
model.sol('sol2').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol2').feature('t1').feature('i1').label('AMG, heat transfer variables (ht)');
model.sol('sol2').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol2').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol2').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol2').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol2').feature('t1').feature.remove('fcDef');
model.sol('sol2').create('su1', 'StoreSolution');
model.sol('sol2').feature('su1').set('sol', 'sol3');
model.sol('sol2').feature('su1').label('Solution Store 1');
model.sol('sol2').create('st2', 'StudyStep');
model.sol('sol2').feature('st2').set('study', 'std2');
model.sol('sol2').feature('st2').set('studystep', 'time2');

model.study('std2').feature('time2').set('notsoluse', 'sol3');
model.study('std2').feature('time2').set('initsoluse', 'sol3');

model.sol('sol2').create('v2', 'Variables');
model.sol('sol2').feature('v2').set('initmethod', 'sol');
model.sol('sol2').feature('v2').set('initsol', 'sol2');
model.sol('sol2').feature('v2').set('initsoluse', 'sol3');
model.sol('sol2').feature('v2').set('notsolmethod', 'sol');
model.sol('sol2').feature('v2').set('notsol', 'sol2');
model.sol('sol2').feature('v2').set('control', 'time2');
model.sol('sol2').create('t2', 'Time');
model.sol('sol2').feature('t2').set('tlist', 'range(190,10,380)');
model.sol('sol2').feature('t2').set('plot', 'off');
model.sol('sol2').feature('t2').set('plotgroup', 'pg1');
model.sol('sol2').feature('t2').set('plotfreq', 'tout');
model.sol('sol2').feature('t2').set('probesel', 'all');
model.sol('sol2').feature('t2').set('probes', {});
model.sol('sol2').feature('t2').set('probefreq', 'tsteps');
model.sol('sol2').feature('t2').set('atolglobalvaluemethod', 'factor');
model.sol('sol2').feature('t2').set('atolmethod', {'comp1_T' 'global'});
model.sol('sol2').feature('t2').set('atol', {'comp1_T' '1e-3'});
model.sol('sol2').feature('t2').set('atolvaluemethod', {'comp1_T' 'factor'});
model.sol('sol2').feature('t2').set('reacf', true);
model.sol('sol2').feature('t2').set('storeudot', true);
model.sol('sol2').feature('t2').set('endtimeinterpolation', true);
model.sol('sol2').feature('t2').set('estrat', 'exclude');
model.sol('sol2').feature('t2').set('maxorder', 2);
model.sol('sol2').feature('t2').set('control', 'time2');
model.sol('sol2').feature('t2').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('t2').feature('fc1').set('jtech', 'once');
model.sol('sol2').feature('t2').feature('fc1').set('damp', 0.9);
model.sol('sol2').feature('t2').feature('fc1').set('stabacc', 'aacc');
model.sol('sol2').feature('t2').feature('fc1').set('aaccdim', 5);
model.sol('sol2').feature('t2').feature('fc1').set('aaccmix', 0.9);
model.sol('sol2').feature('t2').feature('fc1').set('aaccdelay', 1);
model.sol('sol2').feature('t2').create('d1', 'Direct');
model.sol('sol2').feature('t2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t2').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t2').feature('d1').label('Direct, heat transfer variables (ht)');
model.sol('sol2').feature('t2').create('i1', 'Iterative');
model.sol('sol2').feature('t2').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('t2').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('t2').feature('i1').set('itrestart', 50);
model.sol('sol2').feature('t2').feature('i1').set('rhob', 20);
model.sol('sol2').feature('t2').feature('i1').set('maxlinit', 10000);
model.sol('sol2').feature('t2').feature('i1').set('nlinnormuse', 'on');
model.sol('sol2').feature('t2').feature('i1').label('AMG, heat transfer variables (ht)');
model.sol('sol2').feature('t2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('t2').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('t2').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('t2').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol2').feature('t2').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol2').feature('t2').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('t2').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('t2').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('t2').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('t2').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('t2').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('t2').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol2').feature('t2').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('t2').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('t2').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol2').feature('t2').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('t2').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('t2').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t2').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t2').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('t2').feature('fc1').set('jtech', 'once');
model.sol('sol2').feature('t2').feature('fc1').set('damp', 0.9);
model.sol('sol2').feature('t2').feature('fc1').set('stabacc', 'aacc');
model.sol('sol2').feature('t2').feature('fc1').set('aaccdim', 5);
model.sol('sol2').feature('t2').feature('fc1').set('aaccmix', 0.9);
model.sol('sol2').feature('t2').feature('fc1').set('aaccdelay', 1);
model.sol('sol2').feature('t2').feature.remove('fcDef');
model.sol('sol2').create('su2', 'StoreSolution');

model.study('std2').feature('cmbsol').set('cssol1', 'sol3');

model.sol('sol2').create('cms1', 'CombineSolution');
model.sol('sol2').feature('cms1').set('control', 'cmbsol');

model.result.dataset('dset3').set('solution', 'sol3');

model.sol('sol2').feature('cms1').set('solnum', 'all');
model.sol('sol2').feature('cms1').set('solvertype', 'solnum');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').feature('surf1').set('unit', 'degC');
model.result('pg4').run;
model.result.dataset('cpt1').label('Cut Point 2D - Continuous Heating');
model.result.dataset.create('cpt2', 'CutPoint2D');
model.result.dataset('cpt2').label('Cut Point 2D - Combined Solutions');
model.result.dataset('cpt2').set('data', 'dset2');
model.result.dataset('cpt2').set('pointx', 0.1);
model.result.dataset('cpt2').set('pointy', 0.3);
model.result.dataset.create('join1', 'Join');
model.result.dataset('join1').label('Join - Temperature Difference');
model.result.dataset('join1').set('data', 'cpt1');
model.result.dataset('join1').set('data2', 'cpt2');
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').label('Temperature, 1D');
model.result('pg5').set('data', 'none');
model.result('pg5').set('titletype', 'manual');
model.result('pg5').set('title', 'Temperature vs. time for continuous and concatenated solutions');
model.result('pg5').create('ptgr1', 'PointGraph');
model.result('pg5').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg5').feature('ptgr1').set('linewidth', 'preference');
model.result('pg5').feature('ptgr1').set('data', 'cpt1');
model.result('pg5').feature('ptgr1').set('linestyle', 'dashed');
model.result('pg5').feature('ptgr1').set('linecolor', 'fromtheme');
model.result('pg5').run;
model.result('pg5').create('ptgr2', 'PointGraph');
model.result('pg5').feature('ptgr2').set('markerpos', 'datapoints');
model.result('pg5').feature('ptgr2').set('linewidth', 'preference');
model.result('pg5').feature('ptgr2').set('data', 'cpt2');
model.result('pg5').feature('ptgr2').set('linecolor', 'magenta');
model.result('pg5').run;
model.result('pg5').feature('ptgr1').set('legend', true);
model.result('pg5').feature('ptgr1').set('legendmethod', 'manual');
model.result('pg5').feature('ptgr1').setIndex('legends', 'Continuous heating', 0);
model.result('pg5').run;
model.result('pg5').feature('ptgr2').set('legend', true);
model.result('pg5').feature('ptgr2').set('legendmethod', 'manual');
model.result('pg5').feature('ptgr2').setIndex('legends', 'Thermal insulation applied after 190 s', 0);
model.result('pg5').run;
model.result('pg5').set('legendpos', 'upperleft');
model.result('pg5').run;
model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').run;
model.result('pg6').label('Temperature Difference, 1D');
model.result('pg6').set('data', 'join1');
model.result('pg6').set('titletype', 'manual');
model.result('pg6').set('title', 'Temperature difference');
model.result('pg6').create('ptgr1', 'PointGraph');
model.result('pg6').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg6').feature('ptgr1').set('linewidth', 'preference');
model.result('pg6').run;
model.result('pg2').run;

model.title('Axisymmetric Transient Heat Transfer');

model.description(['This is a benchmark problem for an axisymmetric transient thermal analysis. The temperature on the boundaries changes from 0' native2unicode(hex2dec({'00' 'b0'}), 'unicode') 'C to 1000' native2unicode(hex2dec({'00' 'b0'}), 'unicode') 'C at the start of the simulation. The temperature at 190' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 's from the analysis is compared with a NAFEMS benchmark solution.']);

model.label('heat_transient_axi.mph');

model.modelNode.label('Components');

out = model;
