function out = model
%
% damage_test_bar.m
%
% Model exported on May 26 2025, 21:31 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Nonlinear_Structural_Materials_Module/Damage');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/solid', true);

model.param.set('L', '0.1[m]');
model.param.descr('L', 'Bar length');
model.param.set('H', 'L/50');
model.param.descr('H', 'Bar thickness');
model.param.set('max_average_strain', '5e-4');
model.param.descr('max_average_strain', 'Maximum average strain');
model.param.set('average_strain', '0');
model.param.descr('average_strain', 'Average strain (loading parameter)');
model.param.set('lscale', '0.001[m]');
model.param.descr('lscale', 'Length scale');

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', {'L' 'H/2'});
model.geom('geom1').runPre('fin');

model.cpl.create('intop1', 'Integration', 'geom1');

model.geom('geom1').run;

model.cpl('intop1').set('axisym', true);
model.cpl('intop1').selection.geom('geom1', 1);
model.cpl('intop1').selection.set([4]);
model.cpl('intop1').set('method', 'summation');

model.physics('solid').prop('Type2D').set('Type2D', 'PlaneStress');
model.physics('solid').prop('d').set('d', 'H');
model.physics('solid').feature('lemm1').create('dmg1', 'Damage', 2);
model.physics('solid').feature('lemm1').feature('dmg1').label('Damage: Crack Band');
model.physics('solid').feature('lemm1').create('dmg2', 'Damage', 2);
model.physics('solid').feature('lemm1').feature('dmg2').label('Damage: Implicit Gradient');
model.physics('solid').feature('lemm1').feature('dmg2').set('regType', 'impGradient');
model.physics('solid').feature('lemm1').feature('dmg2').set('lint', 'lscale');
model.physics('solid').feature('lemm1').feature('dmg2').set('hdmg', '3*lscale');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat1').propertyGroup('Enu').set('E', {'30[GPa]'});
model.material('mat1').propertyGroup('Enu').set('nu', {'0.2'});
model.material('mat1').propertyGroup('def').set('density', {'2400'});
model.material('mat1').propertyGroup.create('ScalarDamage', 'Scalar_damage');
model.material('mat1').propertyGroup('ScalarDamage').set('sigmap', {'2[MPa]'});
model.material('mat1').propertyGroup('ScalarDamage').set('Gf', {'60'});
model.material('mat1').propertyGroup('ScalarDamage').func.create('pw1', 'Piecewise');
model.material('mat1').propertyGroup('ScalarDamage').func('pw1').label('Piecewise: Weakening');
model.material('mat1').propertyGroup('ScalarDamage').func('pw1').set('funcname', 'weak');
model.material('mat1').propertyGroup('ScalarDamage').func('pw1').setIndex('pieces', 0, 0, 0);
model.material('mat1').propertyGroup('ScalarDamage').func('pw1').setIndex('pieces', 0.0495, 0, 1);
model.material('mat1').propertyGroup('ScalarDamage').func('pw1').setIndex('pieces', 1, 0, 2);
model.material('mat1').propertyGroup('ScalarDamage').func('pw1').setIndex('pieces', 0.0495, 1, 0);
model.material('mat1').propertyGroup('ScalarDamage').func('pw1').setIndex('pieces', 0.0505, 1, 1);
model.material('mat1').propertyGroup('ScalarDamage').func('pw1').setIndex('pieces', 0.975, 1, 2);
model.material('mat1').propertyGroup('ScalarDamage').func('pw1').setIndex('pieces', 0.0505, 2, 0);
model.material('mat1').propertyGroup('ScalarDamage').func('pw1').setIndex('pieces', '.1', 2, 1);
model.material('mat1').propertyGroup('ScalarDamage').func('pw1').setIndex('pieces', 1, 2, 2);
model.material('mat1').propertyGroup('ScalarDamage').func('pw1').set('argunit', 'm');
model.material('mat1').propertyGroup('ScalarDamage').func('pw1').set('fununit', '1');
model.material('mat1').propertyGroup('ScalarDamage').set('sigmap', {'2[MPa]*weak(X)'});

model.physics('solid').create('roll1', 'Roller', 1);
model.physics('solid').feature('roll1').selection.set([1 2]);
model.physics('solid').create('disp1', 'Displacement1', 1);
model.physics('solid').feature('disp1').selection.set([4]);
model.physics('solid').feature('disp1').setIndex('Direction', 'prescribed', 0);
model.physics('solid').feature('disp1').setIndex('U0', 'L*average_strain', 0);

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([2]);
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 101);

model.study('std1').label('Crack Band, Quadratic');
model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 'L', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'm', 0);
model.study('std1').feature('stat').setIndex('pname', 'L', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'm', 0);
model.study('std1').feature('stat').setIndex('pname', 'average_strain', 0);
model.study('std1').feature('stat').setIndex('plistarr', 'range(0,0.01,1)*max_average_strain', 0);
model.study('std1').feature('stat').set('useadvanceddisable', true);
model.study('std1').feature('stat').set('disabledphysics', {'solid/lemm1/dmg2'});

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s1').set('control', 'stat');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'const');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 8);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'const');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 8);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('s1').feature('p1').set('paramtuning', true);
model.sol('sol1').feature('s1').feature('p1').set('pminstep', '1e-5*max_average_strain');
model.sol('sol1').feature('s1').feature('p1').set('pinitstep', '0.01*max_average_strain');
model.sol('sol1').feature('s1').feature('p1').set('pmaxstep', '0.01*max_average_strain');
model.sol('sol1').feature('v1').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').set('scaleval', '1.0e-4');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 101, 0);
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('surf1').set('threshold', 'manual');
model.result('pg1').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg1').feature('surf1').set('colortable', 'Rainbow');
model.result('pg1').feature('surf1').set('colortabletrans', 'none');
model.result('pg1').feature('surf1').set('colorscalemode', 'linear');
model.result('pg1').feature('surf1').set('resolution', 'normal');
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg1').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg1').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg1').run;
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 101, 0);
model.result('pg2').label('Damage (solid)');
model.result('pg2').set('defaultPlotID', 'damage');
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'solid.dmgGp'});
model.result('pg2').feature('surf1').set('inheritplot', 'none');
model.result('pg2').feature('surf1').set('resolution', 'normal');
model.result('pg2').feature('surf1').set('colortabletype', 'discrete');
model.result('pg2').feature('surf1').set('bandcount', 11);
model.result('pg2').feature('surf1').set('colortable', 'RainbowLight');
model.result('pg2').feature('surf1').set('smooth', 'none');
model.result('pg2').feature('surf1').set('descractive', true);
model.result('pg2').feature('surf1').set('descr', 'Damage');
model.result('pg2').label('Damage (solid)');
model.result('pg2').run;
model.result('pg2').label('Damage: Crack Band');
model.result('pg2').set('titletype', 'label');
model.result('pg2').set('edges', false);
model.result('pg2').run;
model.result('pg2').feature('surf1').set('resolution', 'custom');
model.result('pg2').feature('surf1').set('refine', 2);
model.result('pg2').feature('surf1').create('def1', 'Deform');
model.result('pg2').run;
model.result('pg2').feature('surf1').feature('def1').set('scaleactive', true);
model.result('pg2').feature('surf1').feature('def1').set('scale', 100);
model.result('pg2').run;
model.result('pg2').create('mesh1', 'Mesh');
model.result('pg2').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg2').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg2').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg2').feature('mesh1').set('elemcolor', 'none');
model.result('pg2').feature('mesh1').set('wireframecolor', 'white');
model.result('pg2').feature('mesh1').set('inheritplot', 'surf1');
model.result('pg2').feature('mesh1').create('def1', 'Deform');
model.result('pg2').run;
model.result('pg2').run;

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/solid', true);
model.study('std2').feature('stat').set('useparam', true);
model.study('std2').feature('stat').setIndex('pname', 'L', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 'm', 0);
model.study('std2').feature('stat').setIndex('pname', 'L', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 'm', 0);
model.study('std2').feature('stat').setIndex('pname', 'average_strain', 0);
model.study('std2').feature('stat').setIndex('plistarr', 'range(0,0.01,1)*max_average_strain', 0);

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_solid_eeqnl').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_eeqnl').set('scaleval', '1e-3');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('p1', 'Parametric');
model.sol('sol2').feature('s1').feature.remove('pDef');
model.sol('sol2').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol2').feature('s1').set('control', 'stat');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('dtech', 'const');
model.sol('sol2').feature('s1').feature('fc1').set('maxiter', 8);
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol2').feature('s1').feature('fc1').set('dtech', 'const');
model.sol('sol2').feature('s1').feature('fc1').set('maxiter', 8);
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').feature('s1').feature('p1').set('paramtuning', true);
model.sol('sol2').feature('s1').feature('p1').set('pminstep', '1e-5*max_average_strain');
model.sol('sol2').feature('s1').feature('p1').set('pinitstep', '0.01*max_average_strain');
model.sol('sol2').feature('s1').feature('p1').set('pmaxstep', '0.01*max_average_strain');
model.sol('sol2').feature('v1').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').set('scaleval', '1.0e-4');

model.study('std2').setGenPlots(false);
model.study('std2').label('Implicit Gradient, Quadratic');

model.sol('sol2').runAll;

model.physics('solid').create('disc1', 'Discretization', -1);
model.physics('solid').feature('disc1').set('order_displacement', 1);
model.physics('solid').feature('disc1').label('Discretization Linear');

model.study.create('std3');
model.study('std3').create('stat', 'Stationary');
model.study('std3').feature('stat').setSolveFor('/physics/solid', true);
model.study('std3').feature('stat').set('useparam', true);
model.study('std3').feature('stat').setIndex('pname', 'L', 0);
model.study('std3').feature('stat').setIndex('plistarr', '', 0);
model.study('std3').feature('stat').setIndex('punit', 'm', 0);
model.study('std3').feature('stat').setIndex('pname', 'L', 0);
model.study('std3').feature('stat').setIndex('plistarr', '', 0);
model.study('std3').feature('stat').setIndex('punit', 'm', 0);
model.study('std3').feature('stat').setIndex('pname', 'average_strain', 0);
model.study('std3').feature('stat').setIndex('plistarr', 'range(0,0.01,1)*max_average_strain', 0);
model.study('std3').feature('stat').set('useadvanceddisable', true);
model.study('std3').feature('stat').set('disabledphysics', {'solid/lemm1/dmg2'});
model.study('std3').feature('stat').setEntry('discretization', 'solid', 'disc1');

model.sol.create('sol3');
model.sol('sol3').study('std3');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std3');
model.sol('sol3').feature('st1').set('studystep', 'stat');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').set('control', 'stat');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').create('p1', 'Parametric');
model.sol('sol3').feature('s1').feature.remove('pDef');
model.sol('sol3').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol3').feature('s1').set('control', 'stat');
model.sol('sol3').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('s1').feature('fc1').set('dtech', 'const');
model.sol('sol3').feature('s1').feature('fc1').set('maxiter', 8);
model.sol('sol3').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol3').feature('s1').feature('fc1').set('dtech', 'const');
model.sol('sol3').feature('s1').feature('fc1').set('maxiter', 8);
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol('sol3').attach('std3');
model.sol('sol3').feature('s1').feature('p1').set('paramtuning', true);
model.sol('sol3').feature('s1').feature('p1').set('pminstep', '1e-5*max_average_strain');
model.sol('sol3').feature('s1').feature('p1').set('pinitstep', '0.01*max_average_strain');
model.sol('sol3').feature('s1').feature('p1').set('pmaxstep', '0.01*max_average_strain');
model.sol('sol3').feature('v1').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').set('scaleval', '1.0e-4');

model.study('std3').setGenPlots(false);
model.study('std3').label('Crack Band, Linear');

model.sol('sol3').runAll;

model.study.create('std4');
model.study('std4').create('stat', 'Stationary');
model.study('std4').feature('stat').setSolveFor('/physics/solid', true);
model.study('std4').feature('stat').set('useadvanceddisable', true);
model.study('std4').feature('stat').setEntry('discretization', 'solid', 'disc1');
model.study('std4').feature('stat').set('useparam', true);
model.study('std4').feature('stat').setIndex('pname', 'L', 0);
model.study('std4').feature('stat').setIndex('plistarr', '', 0);
model.study('std4').feature('stat').setIndex('punit', 'm', 0);
model.study('std4').feature('stat').setIndex('pname', 'L', 0);
model.study('std4').feature('stat').setIndex('plistarr', '', 0);
model.study('std4').feature('stat').setIndex('punit', 'm', 0);
model.study('std4').feature('stat').setIndex('pname', 'average_strain', 0);
model.study('std4').feature('stat').setIndex('plistarr', 'range(0,0.01,1)*max_average_strain', 0);

model.sol.create('sol4');
model.sol('sol4').study('std4');
model.sol('sol4').create('st1', 'StudyStep');
model.sol('sol4').feature('st1').set('study', 'std4');
model.sol('sol4').feature('st1').set('studystep', 'stat');
model.sol('sol4').create('v1', 'Variables');
model.sol('sol4').feature('v1').feature('comp1_solid_eeqnl').set('scalemethod', 'manual');
model.sol('sol4').feature('v1').feature('comp1_solid_eeqnl').set('scaleval', '1e-3');
model.sol('sol4').feature('v1').set('control', 'stat');
model.sol('sol4').create('s1', 'Stationary');
model.sol('sol4').feature('s1').create('p1', 'Parametric');
model.sol('sol4').feature('s1').feature.remove('pDef');
model.sol('sol4').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol4').feature('s1').set('control', 'stat');
model.sol('sol4').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol4').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol4').feature('s1').feature('fc1').set('dtech', 'const');
model.sol('sol4').feature('s1').feature('fc1').set('maxiter', 8);
model.sol('sol4').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol4').feature('s1').feature('fc1').set('dtech', 'const');
model.sol('sol4').feature('s1').feature('fc1').set('maxiter', 8);
model.sol('sol4').feature('s1').feature.remove('fcDef');
model.sol('sol4').attach('std4');
model.sol('sol4').feature('s1').feature('p1').set('paramtuning', true);
model.sol('sol4').feature('s1').feature('p1').set('pminstep', '1e-5*max_average_strain');
model.sol('sol4').feature('s1').feature('p1').set('pinitstep', '0.01*max_average_strain');
model.sol('sol4').feature('s1').feature('p1').set('pmaxstep', '0.01*max_average_strain');
model.sol('sol4').feature('v1').set('scalemethod', 'manual');
model.sol('sol4').feature('v1').set('scaleval', '1.0e-4');

model.study('std4').setGenPlots(false);
model.study('std4').label('Implicit Gradient, Linear');

model.sol('sol4').runAll;

model.result('pg2').run;
model.result('pg2').create('ann1', 'Annotation');
model.result('pg2').feature('ann1').set('text', 'Quadratic Shape Order');
model.result('pg2').feature('ann1').set('posyexpr', '2*H');
model.result('pg2').feature('ann1').set('showpoint', false);
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature.duplicate('surf2', 'surf1');
model.result('pg2').feature.duplicate('mesh2', 'mesh1');
model.result('pg2').feature.duplicate('ann2', 'ann1');
model.result('pg2').run;
model.result('pg2').feature('surf2').set('data', 'dset3');
model.result('pg2').feature('surf2').set('inheritplot', 'surf1');
model.result('pg2').run;
model.result('pg2').feature('surf2').feature('def1').set('expr', {'u' 'v+4*H/100'});
model.result('pg2').run;
model.result('pg2').feature('mesh2').set('data', 'dset3');
model.result('pg2').run;
model.result('pg2').feature('mesh2').feature('def1').set('expr', {'u' 'v+4*H/100'});
model.result('pg2').run;
model.result('pg2').feature('ann2').set('text', 'Linear Shape Order');
model.result('pg2').feature('ann2').set('posyexpr', '6*H');
model.result('pg2').run;
model.result('pg2').run;
model.result.duplicate('pg3', 'pg2');
model.result('pg3').run;
model.result('pg3').label('Damage: Implicit Gradient');
model.result('pg3').set('data', 'dset2');
model.result('pg3').run;
model.result('pg3').feature('surf2').set('data', 'dset4');
model.result('pg3').run;
model.result('pg3').feature('mesh2').set('data', 'dset4');
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Axial Force');
model.result('pg4').create('glob1', 'Global');
model.result('pg4').feature('glob1').set('markerpos', 'datapoints');
model.result('pg4').feature('glob1').set('linewidth', 'preference');
model.result('pg4').feature('glob1').setIndex('expr', 'intop1(solid.RFx)', 0);
model.result('pg4').feature('glob1').setIndex('descr', 'Force', 0);
model.result('pg4').feature('glob1').set('linewidth', 2);
model.result('pg4').feature('glob1').set('legendmethod', 'manual');
model.result('pg4').feature('glob1').setIndex('legends', 'Crack Band, Quadratic', 0);
model.result('pg4').feature.duplicate('glob2', 'glob1');
model.result('pg4').run;
model.result('pg4').feature('glob2').set('data', 'dset2');
model.result('pg4').feature('glob2').setIndex('legends', 'Implicit Gradient, Quadratic', 0);
model.result('pg4').feature.duplicate('glob3', 'glob2');
model.result('pg4').run;
model.result('pg4').feature('glob3').set('data', 'dset3');
model.result('pg4').feature('glob3').setIndex('legends', 'Crack Band, Linear', 0);
model.result('pg4').feature.duplicate('glob4', 'glob3');
model.result('pg4').run;
model.result('pg4').feature('glob4').set('data', 'dset4');
model.result('pg4').feature('glob4').setIndex('legends', 'Implicit Gradient, Linear', 0);
model.result('pg4').run;
model.result('pg4').set('titletype', 'none');
model.result('pg4').set('xlabelactive', true);
model.result('pg4').set('xlabel', 'Average strain');
model.result('pg4').run;
model.result.dataset.create('cpt1', 'CutPoint2D');
model.result.dataset('cpt1').set('pointx', 'L/2');
model.result.dataset('cpt1').set('pointy', 0);
model.result.dataset('cpt1').label('Cut Point: Study 1');
model.result.dataset.duplicate('cpt2', 'cpt1');
model.result.dataset('cpt2').label('Cut Point: Study 2');
model.result.dataset('cpt2').set('data', 'dset2');
model.result.dataset.duplicate('cpt3', 'cpt2');
model.result.dataset('cpt3').label('Cut Point: Study 3');
model.result.dataset('cpt3').set('data', 'dset3');
model.result.dataset.duplicate('cpt4', 'cpt3');
model.result.dataset('cpt4').label('Cut Point: Study 4');
model.result.dataset('cpt4').set('data', 'dset4');
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').label('Damaged Stress vs. Strain');
model.result('pg5').set('titletype', 'none');
model.result('pg5').create('ptgr1', 'PointGraph');
model.result('pg5').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg5').feature('ptgr1').set('linewidth', 'preference');
model.result('pg5').feature('ptgr1').set('data', 'cpt1');
model.result('pg5').feature('ptgr1').set('expr', 'solid.sdGpxx');
model.result('pg5').feature('ptgr1').set('descr', 'Stress tensor, damaged, xx-component');
model.result('pg5').feature('ptgr1').set('xdata', 'expr');
model.result('pg5').feature('ptgr1').set('xdataexpr', 'solid.eXX');
model.result('pg5').feature('ptgr1').set('xdatadescr', 'Strain tensor, XX-component');
model.result('pg5').run;
model.result('pg5').feature('ptgr1').set('linewidth', 2);
model.result('pg5').feature('ptgr1').set('legend', true);
model.result('pg5').feature('ptgr1').set('legendmethod', 'manual');
model.result('pg5').feature('ptgr1').setIndex('legends', 'Crack Band, Quadratic', 0);
model.result('pg5').feature.duplicate('ptgr2', 'ptgr1');
model.result('pg5').run;
model.result('pg5').feature('ptgr2').set('data', 'cpt2');
model.result('pg5').feature('ptgr2').setIndex('legends', 'Implicit Gradient, Quadratic', 0);
model.result('pg5').feature.duplicate('ptgr3', 'ptgr2');
model.result('pg5').run;
model.result('pg5').feature('ptgr3').set('data', 'cpt3');
model.result('pg5').feature('ptgr3').setIndex('legends', 'Crack Band, Linear', 0);
model.result('pg5').feature.duplicate('ptgr4', 'ptgr3');
model.result('pg5').run;
model.result('pg5').feature('ptgr4').set('data', 'cpt4');
model.result('pg5').feature('ptgr4').setIndex('legends', 'Implicit Gradient, Linear', 0);
model.result('pg5').run;
model.result('pg5').run;
model.result.duplicate('pg6', 'pg5');
model.result('pg6').run;
model.result('pg6').label('Damage Evolution');
model.result('pg6').set('legendpos', 'lowerright');
model.result('pg6').run;
model.result('pg6').feature('ptgr1').set('xdataexpr', 'solid.dmg');
model.result('pg6').feature('ptgr1').set('expr', 'solid.dmg');
model.result('pg6').feature('ptgr1').set('xdata', 'solution');
model.result('pg6').run;
model.result('pg6').feature('ptgr2').set('expr', 'solid.dmg');
model.result('pg6').feature('ptgr2').set('xdata', 'solution');
model.result('pg6').run;
model.result('pg6').feature('ptgr3').set('expr', 'solid.dmg');
model.result('pg6').feature('ptgr3').set('xdata', 'solution');
model.result('pg6').run;
model.result('pg6').feature('ptgr4').set('expr', 'solid.dmg');
model.result('pg6').feature('ptgr4').set('xdata', 'solution');
model.result('pg6').run;
model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').run;
model.result('pg7').label('Localization, Quadratic');
model.result('pg7').setIndex('looplevelinput', 'last', 0);
model.result('pg7').set('titletype', 'none');
model.result('pg7').create('lngr1', 'LineGraph');
model.result('pg7').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg7').feature('lngr1').set('linewidth', 'preference');
model.result('pg7').feature('lngr1').selection.set([2]);
model.result('pg7').feature('lngr1').set('expr', 'solid.kappadmgGp');
model.result('pg7').feature('lngr1').set('descr', 'Maximum value of equivalent strain');
model.result('pg7').feature('lngr1').set('xdata', 'expr');
model.result('pg7').feature('lngr1').set('xdataexpr', 'X');
model.result('pg7').feature('lngr1').set('linewidth', 2);
model.result('pg7').feature('lngr1').set('linemarker', 'cycle');
model.result('pg7').feature('lngr1').set('markerpos', 'interp');
model.result('pg7').feature('lngr1').set('markers', 15);
model.result('pg7').feature('lngr1').set('resolution', 'norefine');
model.result('pg7').feature('lngr1').set('smooth', 'none');
model.result('pg7').feature('lngr1').set('legend', true);
model.result('pg7').feature('lngr1').set('legendmethod', 'manual');
model.result('pg7').feature('lngr1').setIndex('legends', 'CB: Max Eq. Strain', 0);
model.result('pg7').run;
model.result('pg7').feature.duplicate('lngr2', 'lngr1');
model.result('pg7').run;
model.result('pg7').feature('lngr2').set('data', 'dset2');
model.result('pg7').feature('lngr2').setIndex('looplevelinput', 'last', 0);
model.result('pg7').feature('lngr2').setIndex('legends', 'IG: Max Eq. Strain', 0);
model.result('pg7').run;
model.result('pg7').run;
model.result('pg7').feature.duplicate('lngr3', 'lngr1');
model.result('pg7').feature.duplicate('lngr4', 'lngr2');
model.result('pg7').run;
model.result('pg7').feature('lngr3').set('expr', 'solid.dmgGp');
model.result('pg7').feature('lngr3').set('descr', 'Damage');
model.result('pg7').feature('lngr3').setIndex('legends', 'CB: Damage', 0);
model.result('pg7').run;
model.result('pg7').feature('lngr4').set('expr', 'solid.dmg');
model.result('pg7').feature('lngr4').setIndex('legends', 'IG: Damage', 0);
model.result('pg7').run;
model.result('pg7').set('twoyaxes', true);
model.result('pg7').setIndex('plotonsecyaxis', true, 2, 1);
model.result('pg7').setIndex('plotonsecyaxis', true, 3, 1);
model.result('pg7').run;
model.result.duplicate('pg8', 'pg7');
model.result('pg8').run;
model.result('pg8').label('Localization, Linear');
model.result('pg8').set('data', 'dset3');
model.result('pg8').run;
model.result('pg8').feature('lngr2').set('data', 'dset4');
model.result('pg8').run;
model.result('pg8').feature('lngr4').set('data', 'dset4');
model.result('pg8').run;
model.result('pg7').run;
model.result.duplicate('pg9', 'pg7');
model.result('pg9').run;
model.result('pg9').label('Horizontal Displacement');
model.result('pg9').set('twoyaxes', false);
model.result('pg9').run;
model.result('pg9').feature('lngr1').set('expr', 'u');
model.result('pg9').feature('lngr1').setIndex('legends', 'Crack Band, Quadratic', 0);
model.result('pg9').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg9').run;
model.result('pg9').feature('lngr2').set('expr', 'u');
model.result('pg9').feature('lngr2').setIndex('legends', 'Implicit Gradient, Quadratic', 0);
model.result('pg9').feature('lngr2').set('markerpos', 'datapoints');
model.result('pg9').run;
model.result('pg9').feature('lngr3').set('data', 'dset3');
model.result('pg9').feature('lngr3').setIndex('looplevelinput', 'last', 0);
model.result('pg9').feature('lngr3').set('expr', 'u');
model.result('pg9').feature('lngr3').setIndex('legends', 'Crack Band, Linear', 0);
model.result('pg9').feature('lngr3').set('markerpos', 'datapoints');
model.result('pg9').run;
model.result('pg9').feature('lngr4').set('data', 'dset4');
model.result('pg9').feature('lngr4').set('expr', 'u');
model.result('pg9').feature('lngr4').setIndex('legends', 'Implicit Gradient, Linear', 0);
model.result('pg9').feature('lngr4').set('markerpos', 'datapoints');
model.result('pg9').run;
model.result('pg9').set('axislimits', true);
model.result('pg9').set('xmin', 0.04);
model.result('pg9').set('xmax', 0.06);
model.result('pg9').set('legendpos', 'middleright');
model.result('pg9').run;
model.result('pg3').run;
model.result('pg3').feature('mesh1').active(false);
model.result('pg3').feature('ann1').active(false);
model.result('pg3').feature('mesh2').active(false);
model.result('pg3').feature('ann2').active(false);
model.result('pg3').run;
model.result('pg3').set('view', 'new');
model.result('pg3').run;

model.view('view2').set('locked', true);
model.view('view2').axis.set('viewscaletype', 'automatic');
model.view('view2').axis.set('autocontext', 'anisotropic');
model.view('view2').axis.set('xweight', 2);

model.result('pg3').run;
model.result('pg3').run;

model.view.remove('view2');

model.result('pg3').run;
model.result('pg3').feature('mesh1').active(true);
model.result('pg3').feature('ann1').active(true);
model.result('pg3').feature('mesh2').active(true);
model.result('pg3').feature('ann2').active(true);
model.result('pg4').run;

model.title('Brittle Damage in Uniaxial Tension');

model.description('In this tutorial model, the behavior of two models for brittle damage are shown in a uniaxial tension test.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;

model.label('damage_test_bar.mph');

model.modelNode.label('Components');

out = model;
