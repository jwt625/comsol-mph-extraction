function out = model
%
% optimal_heating_control.m
%
% Model exported on May 26 2025, 21:31 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Optimization_Module/Optimal_Control');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 1);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('ht', 'HeatTransfer', 'geom1');
model.physics('ht').model('comp1');
model.physics.create('ge', 'GlobalEquations', 'geom1');
model.physics('ge').model('comp1');
model.physics('ge').prop('EquationForm').set('form', 'Automatic');

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/ht', true);
model.study('std1').feature('time').setSolveFor('/physics/ge', true);

model.param.set('radius', '5[mm]');
model.param.descr('radius', 'Cylinder radius');
model.param.set('tmax', '10[s]');
model.param.descr('tmax', 'Simulation time');
model.param.set('Pmax', '50[kW]');
model.param.descr('Pmax', 'Maximum power');
model.param.set('Ttarget', '260[degC]');
model.param.descr('Ttarget', 'Target temperature');
model.param.set('T0', '20[degC]');
model.param.descr('T0', 'Initial temperature');
model.param.set('Lz', '3[m]');
model.param.descr('Lz', 'Out-of-plane length scale');

model.geom('geom1').create('i1', 'Interval');
model.geom('geom1').feature('i1').setIndex('coord', 0, 0);
model.geom('geom1').feature('i1').setIndex('coord', 'radius', 1);

model.probe.create('point1', 'Point');
model.probe('point1').model('comp1');

model.geom('geom1').run;

model.probe('point1').label('Outer Temperature');
model.probe('point1').set('probename', 'Tout');
model.probe('point1').selection.set([2]);
model.probe.duplicate('point2', 'point1');
model.probe('point2').label('Inner Temperature');
model.probe('point2').set('probename', 'Tin');
model.probe('point2').selection.set([1]);
model.probe.create('var1', 'GlobalVariable');
model.probe('var1').model('comp1');
model.probe('var1').label('Temperature Error');
model.probe('var1').set('probename', 'Terror');
model.probe('var1').set('expr', '(1-(Tout-T0)/(Ttarget-T0))^2');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat1').propertyGroup('Enu').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup('Enu').func.create('int2', 'Interpolation');
model.material('mat1').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat1').propertyGroup.create('ElastoplasticModel', 'Elastoplastic material model');
model.material('mat1').propertyGroup('ElastoplasticModel').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('Ludwik', 'Ludwik');
model.material('mat1').propertyGroup('Ludwik').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('JohnsonCook', 'Johnson-Cook');
model.material('mat1').propertyGroup.create('Swift', 'Swift');
model.material('mat1').propertyGroup.create('Voce', 'Voce');
model.material('mat1').propertyGroup('Voce').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('HockettSherby', 'Hockett-Sherby');
model.material('mat1').propertyGroup('HockettSherby').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('ArmstrongFrederick', 'Armstrong-Frederick');
model.material('mat1').propertyGroup('ArmstrongFrederick').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('Norton', 'Norton');
model.material('mat1').propertyGroup.create('Garofalo', 'Garofalo (hyperbolic sine)');
model.material('mat1').propertyGroup.create('ChabocheViscoplasticity', 'Chaboche viscoplasticity');
model.material('mat1').label('Structural steel');
model.material('mat1').set('family', 'custom');
model.material('mat1').set('customspecular', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat1').set('customdiffuse', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat1').set('customambient', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat1').set('noise', true);
model.material('mat1').set('fresnel', 0.9);
model.material('mat1').set('roughness', 0.3);
model.material('mat1').set('metallic', 0);
model.material('mat1').set('pearl', 0);
model.material('mat1').set('diffusewrap', 0);
model.material('mat1').set('clearcoat', 0);
model.material('mat1').set('reflectance', 0);
model.material('mat1').propertyGroup('def').set('lossfactor', '0.02');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('heatcapacity', '475[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]'});
model.material('mat1').propertyGroup('def').set('density', '7850[kg/m^3]');
model.material('mat1').propertyGroup('Enu').func('int1').set('funcname', 'E');
model.material('mat1').propertyGroup('Enu').func('int1').set('table', {'293.15' '200e9'; '793.15' '166.6e9'});
model.material('mat1').propertyGroup('Enu').func('int1').set('extrap', 'linear');
model.material('mat1').propertyGroup('Enu').func('int1').set('fununit', {'Pa'});
model.material('mat1').propertyGroup('Enu').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Enu').func('int2').set('funcname', 'nu');
model.material('mat1').propertyGroup('Enu').func('int2').set('table', {'293.15' '0.30'; '793.15' '0.315'});
model.material('mat1').propertyGroup('Enu').func('int2').set('extrap', 'linear');
model.material('mat1').propertyGroup('Enu').func('int2').set('fununit', {'1'});
model.material('mat1').propertyGroup('Enu').func('int2').set('argunit', {'K'});
model.material('mat1').propertyGroup('Enu').set('E', 'E(T)');
model.material('mat1').propertyGroup('Enu').set('nu', 'nu(T)');
model.material('mat1').propertyGroup('Enu').addInput('temperature');
model.material('mat1').propertyGroup('Murnaghan').set('l', '-3.0e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('m', '-6.2e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('n', '-7.2e11[Pa]');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmags', '350[MPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('Et', '1.045[GPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('Ek', '1.045[GPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmagh', '1.050[GPa]*epe*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').addInput('temperature');
model.material('mat1').propertyGroup('ElastoplasticModel').addInput('effectiveplasticstrain');
model.material('mat1').propertyGroup('Ludwik').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('Ludwik').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('Ludwik').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('Ludwik').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Ludwik').set('k_lud', '560[MPa]*a(T)');
model.material('mat1').propertyGroup('Ludwik').set('n_lud', '0.61');
model.material('mat1').propertyGroup('Ludwik').addInput('temperature');
model.material('mat1').propertyGroup('JohnsonCook').set('k_jcook', '560[MPa]');
model.material('mat1').propertyGroup('JohnsonCook').set('n_jcook', '0.61');
model.material('mat1').propertyGroup('JohnsonCook').set('C_jcook', '0.12');
model.material('mat1').propertyGroup('JohnsonCook').set('epet0_jcook', '1[1/s]');
model.material('mat1').propertyGroup('JohnsonCook').set('m_jcook', '0.6');
model.material('mat1').propertyGroup('Swift').set('e0_swi', '0.021');
model.material('mat1').propertyGroup('Swift').set('n_swi', '0.2');
model.material('mat1').propertyGroup('Voce').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('Voce').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('Voce').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('Voce').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Voce').set('sigma_voc', '249[MPa]*a(T)');
model.material('mat1').propertyGroup('Voce').set('beta_voc', '9.3');
model.material('mat1').propertyGroup('Voce').addInput('temperature');
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('HockettSherby').set('sigma_hoc', '684[MPa]*a(T)');
model.material('mat1').propertyGroup('HockettSherby').set('m_hoc', '3.9');
model.material('mat1').propertyGroup('HockettSherby').set('n_hoc', '0.85');
model.material('mat1').propertyGroup('HockettSherby').addInput('temperature');
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('ArmstrongFrederick').set('Ck', '2.070[GPa]*a(T)');
model.material('mat1').propertyGroup('ArmstrongFrederick').set('gammak', '8.0');
model.material('mat1').propertyGroup('ArmstrongFrederick').addInput('temperature');
model.material('mat1').propertyGroup('Norton').set('A_nor', '1.2e-15[1/s]');
model.material('mat1').propertyGroup('Norton').set('sigRef_nor', '1[MPa]');
model.material('mat1').propertyGroup('Norton').set('n_nor', '4.5');
model.material('mat1').propertyGroup('Garofalo').set('A_gar', '1e-6[1/s]');
model.material('mat1').propertyGroup('Garofalo').set('sigRef_gar', '100[MPa]');
model.material('mat1').propertyGroup('Garofalo').set('n_gar', '4.6');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('A_cha', '1');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('sigRef_cha', '490[MPa]');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('n_cha', '9');

model.physics('ht').feature('init1').set('Tinit', 'T0');

model.common.create('cfunc1', 'ControlFunction', 'comp1');
model.common('cfunc1').label('Control Function (Polynomial)');
model.common('cfunc1').set('xend', 'tmax');
model.common('cfunc1').set('order', '7');
model.common.duplicate('cfunc2', 'cfunc1');
model.common('cfunc2').label('Control Function (Helmholtz)');
model.common('cfunc2').set('controlType', 'helmholtzFilter');
model.common('cfunc2').set('fgradmax', '10/tmax');

model.physics('ht').prop('PhysicalModelProperty').set('dz', 'Lz');
model.physics('ht').create('hf1', 'HeatFluxBoundary', 0);
model.physics('ht').feature('hf1').selection.set([2]);
model.physics('ht').feature('hf1').set('HeatFluxType', 'HeatRate');
model.physics('ht').feature('hf1').set('P0', 'cfunc1(t)*Pmax');
model.physics('ht').feature.duplicate('hf2', 'hf1');
model.physics('ht').feature('hf2').set('P0', 'cfunc2(t)*Pmax');
model.physics('ge').feature('ge1').setIndex('name', 'obj', 0, 0);
model.physics('ge').feature('ge1').setIndex('equation', 'objt*tmax-Terror', 0, 0);

model.mesh('mesh1').create('edg1', 'Edge');
model.mesh('mesh1').feature('size').set('hauto', 2);
model.mesh('mesh1').run;

model.study('std1').label('Initial Control');
model.study('std1').feature('time').set('tlist', 'range(0,tmax/20,tmax)');
model.study('std1').feature('time').set('probesel', 'none');
model.study('std1').feature('time').set('useadvanceddisable', true);
model.study('std1').feature('time').set('disabledphysics', {'ht/hf2'});

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_cfunc2_func').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_cfunc2_func').set('scaleval', '1.00000000000000');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,tmax/20,tmax)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'none');
model.sol('sol1').feature('t1').set('probes', {'point1' 'point2' 'var1'});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('atolmethod', {'comp1_cfunc2_func' 'global' 'comp1_cfunc2_funcc' 'global' 'comp1_T' 'global' 'comp1_cfunc1' 'global' 'comp1_ODE1' 'global'});
model.sol('sol1').feature('t1').set('atol', {'comp1_cfunc2_func' '1e-3' 'comp1_cfunc2_funcc' '1e-3' 'comp1_T' '1e-3' 'comp1_cfunc1' '1e-3' 'comp1_ODE1' '1e-3'});
model.sol('sol1').feature('t1').set('atolvaluemethod', {'comp1_cfunc2_func' 'factor' 'comp1_cfunc2_funcc' 'factor' 'comp1_T' 'factor' 'comp1_cfunc1' 'factor' 'comp1_ODE1' 'factor'});
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('estrat', 'exclude');
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').label('Direct (Merged)');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('t1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('t1').feature('i1').set('maxlinit', 10000);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i1').label('AMG, heat transfer variables (ht)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').label('Temperature (ht)');
model.result('pg1').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg1').set('data', 'dset1');
model.result('pg1').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond1/pg1');
model.result('pg1').feature.create('lngr1', 'LineGraph');
model.result('pg1').feature('lngr1').set('xdata', 'expr');
model.result('pg1').feature('lngr1').set('xdataexpr', 'r');
model.result('pg1').feature('lngr1').set('data', 'parent');
model.result('pg1').feature('lngr1').selection.geom('geom1', 1);
model.result('pg1').feature('lngr1').selection.set([1]);
model.result.numerical.create('gev1', 'EvalGlobal');
model.result.numerical('gev1').set('data', 'dset1');
model.result.numerical('gev1').set('expr', {'obj'});
model.result.numerical('gev1').set('descr', {'State variable obj'});
model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').create('glob1', 'Global');
model.result('pg2').feature('glob1').set('expr', {'obj'});
model.result('pg2').feature('glob1').set('descr', {'State variable obj'});
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature.remove('lngr1');
model.result('pg1').run;
model.result('pg1').create('glob1', 'Global');
model.result('pg1').feature('glob1').set('markerpos', 'datapoints');
model.result('pg1').feature('glob1').set('linewidth', 'preference');
model.result('pg1').feature('glob1').set('expr', {'Tout'});
model.result('pg1').feature('glob1').set('descr', {'Outer Temperature'});
model.result('pg1').feature('glob1').set('unit', {'K'});
model.result('pg1').feature('glob1').set('expr', {'Tin'});
model.result('pg1').feature('glob1').set('descr', {'Inner Temperature'});
model.result('pg1').feature('glob1').set('unit', {'K'});
model.result('pg1').feature('glob1').setIndex('expr', 'Tout', 0);
model.result('pg1').feature('glob1').setIndex('unit', 'degC', 0);
model.result('pg1').feature('glob1').setIndex('descr', 'Outer Temperature', 0);
model.result('pg1').feature('glob1').setIndex('expr', 'Tin', 1);
model.result('pg1').feature('glob1').setIndex('unit', 'degC', 1);
model.result('pg1').feature('glob1').setIndex('descr', 'Inner Temperature', 1);
model.result('pg1').feature.duplicate('glob2', 'glob1');
model.result('pg1').run;
model.result('pg1').feature('glob2').set('expr', {});
model.result('pg1').feature('glob2').set('descr', {});
model.result('pg1').feature('glob2').set('expr', {'ht.hf1.ntefluxInt'});
model.result('pg1').feature('glob2').set('descr', {'Total net energy rate'});
model.result('pg1').feature('glob2').setIndex('expr', '-ht.hf1.ntefluxInt', 0);
model.result('pg1').feature('glob2').setIndex('unit', 'kW', 0);
model.result('pg1').feature('glob2').setIndex('descr', 'Power', 0);
model.result('pg1').run;
model.result('pg1').label('Initial Control');
model.result('pg1').set('titletype', 'label');
model.result('pg1').set('ylabelactive', true);
model.result('pg1').set('ylabel', 'Temperature (degC)');
model.result('pg1').set('twoyaxes', true);
model.result('pg1').setIndex('plotonsecyaxis', true, 1, 1);
model.result('pg1').set('yseclabelactive', true);
model.result('pg1').set('axislimits', true);
model.result('pg1').set('xmin', '-tmax/50');
model.result('pg1').set('xmax', 'tmax*1.02');
model.result('pg1').set('ymin', 10);
model.result('pg1').set('ymax', 320);
model.result('pg1').set('yminsec', '-Pmax*2e-5');
model.result('pg1').set('ymaxsec', 'Pmax*1.02e-3');
model.result('pg1').set('legendpos', 'middleright');
model.result('pg1').run;
model.result('pg2').run;
model.result.remove('pg2');

model.study.create('std2');
model.study.create('std3');
model.study('std2').setGenPlots(false);
model.study('std2').label('Optimization (Bernstein Polynomial)');
model.study('std2').feature.copy('time1', 'std1/time');
model.study('std2').create('opt', 'Optimization');
model.study('std2').feature('opt').set('optsolver', 'ipopt');
model.study('std2').feature('opt').set('nsolvemax', 50);
model.study('std2').feature('opt').set('optobj', {'comp1.obj'});
model.study('std2').feature('opt').set('descr', {'State variable obj'});
model.study('std2').feature('opt').setEntry('controlVariableActive', 'cfunc2.funcc', false);
model.study('std2').feature('opt').set('probesel', 'none');

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'time1');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_cfunc2_func').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_cfunc2_func').set('scaleval', '1.00000000000000');
model.sol('sol2').feature('v1').set('control', 'time1');
model.sol('sol2').create('o1', 'Optimization');
model.sol('sol2').feature('o1').set('control', 'opt');
model.sol('sol2').feature('o1').create('t1', 'TimeAttrib');
model.sol('sol2').feature('o1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol2').feature('o1').feature('t1').set('atolmethod', {'comp1_cfunc2_func' 'global' 'comp1_cfunc2_funcc' 'global' 'comp1_T' 'global' 'comp1_cfunc1' 'global' 'comp1_ODE1' 'global'});
model.sol('sol2').feature('o1').feature('t1').set('atol', {'comp1_cfunc2_func' '1e-3' 'comp1_cfunc2_funcc' '1e-3' 'comp1_T' '1e-3' 'comp1_cfunc1' '1e-3' 'comp1_ODE1' '1e-3'});
model.sol('sol2').feature('o1').feature('t1').set('atolvaluemethod', {'comp1_cfunc2_func' 'factor' 'comp1_cfunc2_funcc' 'factor' 'comp1_T' 'factor' 'comp1_cfunc1' 'factor' 'comp1_ODE1' 'factor'});
model.sol('sol2').feature('o1').feature('t1').set('reacf', true);
model.sol('sol2').feature('o1').feature('t1').set('storeudot', true);
model.sol('sol2').feature('o1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol2').feature('o1').feature('t1').set('estrat', 'exclude');
model.sol('sol2').feature('o1').feature('t1').set('maxorder', 2);
model.sol('sol2').feature('o1').feature('t1').set('control', 'time1');
model.sol('sol2').feature('o1').feature('t1').create('seDef', 'Segregated');
model.sol('sol2').feature('o1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('o1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol2').feature('o1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol2').feature('o1').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol2').feature('o1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol2').feature('o1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol2').feature('o1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol2').feature('o1').feature('t1').create('d1', 'Direct');
model.sol('sol2').feature('o1').feature('t1').feature('d1').label('Direct (Merged)');
model.sol('sol2').feature('o1').feature('t1').create('i1', 'Iterative');
model.sol('sol2').feature('o1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('o1').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('o1').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol2').feature('o1').feature('t1').feature('i1').set('rhob', 20);
model.sol('sol2').feature('o1').feature('t1').feature('i1').set('maxlinit', 10000);
model.sol('sol2').feature('o1').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol2').feature('o1').feature('t1').feature('i1').label('AMG, heat transfer variables (ht)');
model.sol('sol2').feature('o1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('o1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('o1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol2').feature('o1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol2').feature('o1').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol2').feature('o1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol2').feature('o1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol2').feature('o1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol2').feature('o1').feature('t1').feature.remove('fcDef');
model.sol('sol2').feature('o1').feature('t1').feature.remove('seDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runFromTo('st1', 'v1');

model.result('pg1').run;
model.result.duplicate('pg2', 'pg1');
model.result('pg2').run;
model.result('pg2').label('Bernstein Polynomial');
model.result('pg2').set('data', 'dset2');

model.study('std2').feature('opt').set('plot', true);
model.study('std2').feature('opt').set('plotgroup', 'pg2');

model.sol('sol2').study('std2');
model.sol('sol2').feature.remove('o1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('st1');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'time1');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_cfunc2_func').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_cfunc2_func').set('scaleval', '1.00000000000000');
model.sol('sol2').feature('v1').set('control', 'time1');
model.sol('sol2').create('o1', 'Optimization');
model.sol('sol2').feature('o1').set('control', 'opt');
model.sol('sol2').feature('o1').create('t1', 'TimeAttrib');
model.sol('sol2').feature('o1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol2').feature('o1').feature('t1').set('atolmethod', {'comp1_cfunc2_func' 'global' 'comp1_cfunc2_funcc' 'global' 'comp1_T' 'global' 'comp1_cfunc1' 'global' 'comp1_ODE1' 'global'});
model.sol('sol2').feature('o1').feature('t1').set('atol', {'comp1_cfunc2_func' '1e-3' 'comp1_cfunc2_funcc' '1e-3' 'comp1_T' '1e-3' 'comp1_cfunc1' '1e-3' 'comp1_ODE1' '1e-3'});
model.sol('sol2').feature('o1').feature('t1').set('atolvaluemethod', {'comp1_cfunc2_func' 'factor' 'comp1_cfunc2_funcc' 'factor' 'comp1_T' 'factor' 'comp1_cfunc1' 'factor' 'comp1_ODE1' 'factor'});
model.sol('sol2').feature('o1').feature('t1').set('reacf', true);
model.sol('sol2').feature('o1').feature('t1').set('storeudot', true);
model.sol('sol2').feature('o1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol2').feature('o1').feature('t1').set('estrat', 'exclude');
model.sol('sol2').feature('o1').feature('t1').set('maxorder', 2);
model.sol('sol2').feature('o1').feature('t1').set('control', 'time1');
model.sol('sol2').feature('o1').feature('t1').create('seDef', 'Segregated');
model.sol('sol2').feature('o1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('o1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol2').feature('o1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol2').feature('o1').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol2').feature('o1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol2').feature('o1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol2').feature('o1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol2').feature('o1').feature('t1').create('d1', 'Direct');
model.sol('sol2').feature('o1').feature('t1').feature('d1').label('Direct (Merged)');
model.sol('sol2').feature('o1').feature('t1').create('i1', 'Iterative');
model.sol('sol2').feature('o1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('o1').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('o1').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol2').feature('o1').feature('t1').feature('i1').set('rhob', 20);
model.sol('sol2').feature('o1').feature('t1').feature('i1').set('maxlinit', 10000);
model.sol('sol2').feature('o1').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol2').feature('o1').feature('t1').feature('i1').label('AMG, heat transfer variables (ht)');
model.sol('sol2').feature('o1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('o1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('o1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('o1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol2').feature('o1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol2').feature('o1').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol2').feature('o1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol2').feature('o1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol2').feature('o1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol2').feature('o1').feature('t1').feature.remove('fcDef');
model.sol('sol2').feature('o1').feature('t1').feature.remove('seDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result('pg2').run;

model.study('std2').feature('opt').set('probewindow', '');
model.study('std3').feature.copy('opt1', 'std2/opt');
model.study('std3').feature.copy('time1', 'std2/time1');
model.study('std3').feature('opt1').set('optsolver', 'mma');
model.study('std3').feature('opt1').set('opttolinner', 0.01);
model.study('std3').feature('opt1').set('gradientStep', 'time1');
model.study('std3').feature('opt1').setEntry('controlVariableActive', 'cfunc1', false);
model.study('std3').feature('opt1').setEntry('controlVariableActive', 'cfunc2.funcc', true);
model.study('std3').feature('opt1').set('objtable', 'new');
model.study('std3').feature('time1').set('disabledphysics', {'ht/hf1'});
model.study('std3').setGenPlots(false);
model.study('std3').label('Optimization (Helmholtz Filter)');

model.sol.create('sol3');
model.sol('sol3').study('std3');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std3');
model.sol('sol3').feature('st1').set('studystep', 'time1');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').feature('comp1_cfunc2_func').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_cfunc2_func').set('scaleval', '1.00000000000000');
model.sol('sol3').feature('v1').set('control', 'time1');
model.sol('sol3').create('o1', 'Optimization');
model.sol('sol3').feature('o1').set('control', 'opt1');
model.sol('sol3').feature('o1').create('t1', 'TimeAttrib');
model.sol('sol3').feature('o1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol3').feature('o1').feature('t1').set('atolmethod', {'comp1_cfunc2_func' 'global' 'comp1_cfunc2_funcc' 'global' 'comp1_T' 'global' 'comp1_cfunc1' 'global' 'comp1_ODE1' 'global'});
model.sol('sol3').feature('o1').feature('t1').set('atol', {'comp1_cfunc2_func' '1e-3' 'comp1_cfunc2_funcc' '1e-3' 'comp1_T' '1e-3' 'comp1_cfunc1' '1e-3' 'comp1_ODE1' '1e-3'});
model.sol('sol3').feature('o1').feature('t1').set('atolvaluemethod', {'comp1_cfunc2_func' 'factor' 'comp1_cfunc2_funcc' 'factor' 'comp1_T' 'factor' 'comp1_cfunc1' 'factor' 'comp1_ODE1' 'factor'});
model.sol('sol3').feature('o1').feature('t1').set('reacf', true);
model.sol('sol3').feature('o1').feature('t1').set('storeudot', true);
model.sol('sol3').feature('o1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol3').feature('o1').feature('t1').set('estrat', 'exclude');
model.sol('sol3').feature('o1').feature('t1').set('maxorder', 2);
model.sol('sol3').feature('o1').feature('t1').set('control', 'time1');
model.sol('sol3').feature('o1').feature('t1').create('seDef', 'Segregated');
model.sol('sol3').feature('o1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('o1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol3').feature('o1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol3').feature('o1').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol3').feature('o1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol3').feature('o1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol3').feature('o1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol3').feature('o1').feature('t1').create('d1', 'Direct');
model.sol('sol3').feature('o1').feature('t1').feature('d1').label('Direct (Merged)');
model.sol('sol3').feature('o1').feature('t1').create('i1', 'Iterative');
model.sol('sol3').feature('o1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol3').feature('o1').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol3').feature('o1').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol3').feature('o1').feature('t1').feature('i1').set('rhob', 20);
model.sol('sol3').feature('o1').feature('t1').feature('i1').set('maxlinit', 10000);
model.sol('sol3').feature('o1').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol3').feature('o1').feature('t1').feature('i1').label('AMG, heat transfer variables (ht)');
model.sol('sol3').feature('o1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('o1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol3').feature('o1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol3').feature('o1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol3').feature('o1').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol3').feature('o1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol3').feature('o1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol3').feature('o1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol3').feature('o1').feature('t1').feature.remove('fcDef');
model.sol('sol3').feature('o1').feature('t1').feature.remove('seDef');
model.sol('sol3').attach('std3');
model.sol('sol3').runFromTo('st1', 'v1');

model.result('pg2').run;
model.result('pg2').run;
model.result.duplicate('pg3', 'pg2');
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').feature('glob2').set('expr', {});
model.result('pg3').feature('glob2').set('descr', {});
model.result('pg3').run;
model.result('pg3').label('Helmholtz Filter');
model.result('pg3').set('data', 'dset4');
model.result('pg3').run;
model.result('pg3').feature('glob2').set('expr', {'ht.hf2.ntefluxInt'});
model.result('pg3').feature('glob2').set('descr', {'Total net energy rate'});
model.result('pg3').feature('glob2').set('unit', {'W'});
model.result('pg3').feature('glob2').setIndex('expr', '-ht.hf2.ntefluxInt', 0);
model.result('pg3').feature('glob2').setIndex('unit', 'kW', 0);
model.result('pg3').feature('glob2').setIndex('descr', 'Power', 0);

model.study('std3').feature('opt1').set('plotgroup', 'pg3');

model.sol('sol3').study('std3');
model.sol('sol3').feature.remove('o1');
model.sol('sol3').feature.remove('v1');
model.sol('sol3').feature.remove('st1');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std3');
model.sol('sol3').feature('st1').set('studystep', 'time1');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').feature('comp1_cfunc2_func').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_cfunc2_func').set('scaleval', '1.00000000000000');
model.sol('sol3').feature('v1').set('control', 'time1');
model.sol('sol3').create('o1', 'Optimization');
model.sol('sol3').feature('o1').set('control', 'opt1');
model.sol('sol3').feature('o1').create('t1', 'TimeAttrib');
model.sol('sol3').feature('o1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol3').feature('o1').feature('t1').set('atolmethod', {'comp1_cfunc2_func' 'global' 'comp1_cfunc2_funcc' 'global' 'comp1_T' 'global' 'comp1_cfunc1' 'global' 'comp1_ODE1' 'global'});
model.sol('sol3').feature('o1').feature('t1').set('atol', {'comp1_cfunc2_func' '1e-3' 'comp1_cfunc2_funcc' '1e-3' 'comp1_T' '1e-3' 'comp1_cfunc1' '1e-3' 'comp1_ODE1' '1e-3'});
model.sol('sol3').feature('o1').feature('t1').set('atolvaluemethod', {'comp1_cfunc2_func' 'factor' 'comp1_cfunc2_funcc' 'factor' 'comp1_T' 'factor' 'comp1_cfunc1' 'factor' 'comp1_ODE1' 'factor'});
model.sol('sol3').feature('o1').feature('t1').set('reacf', true);
model.sol('sol3').feature('o1').feature('t1').set('storeudot', true);
model.sol('sol3').feature('o1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol3').feature('o1').feature('t1').set('estrat', 'exclude');
model.sol('sol3').feature('o1').feature('t1').set('maxorder', 2);
model.sol('sol3').feature('o1').feature('t1').set('control', 'time1');
model.sol('sol3').feature('o1').feature('t1').create('seDef', 'Segregated');
model.sol('sol3').feature('o1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('o1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol3').feature('o1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol3').feature('o1').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol3').feature('o1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol3').feature('o1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol3').feature('o1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol3').feature('o1').feature('t1').create('d1', 'Direct');
model.sol('sol3').feature('o1').feature('t1').feature('d1').label('Direct (Merged)');
model.sol('sol3').feature('o1').feature('t1').create('i1', 'Iterative');
model.sol('sol3').feature('o1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol3').feature('o1').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol3').feature('o1').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol3').feature('o1').feature('t1').feature('i1').set('rhob', 20);
model.sol('sol3').feature('o1').feature('t1').feature('i1').set('maxlinit', 10000);
model.sol('sol3').feature('o1').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol3').feature('o1').feature('t1').feature('i1').label('AMG, heat transfer variables (ht)');
model.sol('sol3').feature('o1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('o1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('o1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol3').feature('o1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol3').feature('o1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol3').feature('o1').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol3').feature('o1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol3').feature('o1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol3').feature('o1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol3').feature('o1').feature('t1').feature.remove('fcDef');
model.sol('sol3').feature('o1').feature('t1').feature.remove('seDef');
model.sol('sol3').attach('std3');
model.sol('sol3').runAll;

model.result('pg3').run;

model.study('std3').feature('opt1').set('probewindow', '');

model.result('pg3').run;

model.title('Optimal Control for Heating of a Rod');

model.description('This is an example of optimal control, where the input heating power to a rod is optimized to give a certain temperature on the outside of the rod. This is where the maximum water temperature occurs, while the minimum occurs at the center. Therefore this problem corresponds to the situation where one wants to reach a certain minimum temperature as fast as possible all over without exceeding some maximum temperature.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;

model.label('optimal_heating_control.mph');

model.modelNode.label('Components');

out = model;
