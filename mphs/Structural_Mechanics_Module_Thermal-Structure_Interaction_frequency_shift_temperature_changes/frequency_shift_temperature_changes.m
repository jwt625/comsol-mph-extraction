function out = model
%
% frequency_shift_temperature_changes.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Structural_Mechanics_Module/Thermal-Structure_Interaction');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.study.create('std1');
model.study('std1').create('eig', 'Eigenfrequency');
model.study('std1').feature('eig').set('chkeigregion', true);
model.study('std1').feature('eig').set('conrad', '1');
model.study('std1').feature('eig').set('conradynhm', '1');
model.study('std1').feature('eig').set('storefact', false);
model.study('std1').feature('eig').set('solnum', 'auto');
model.study('std1').feature('eig').set('notsolnum', 'auto');
model.study('std1').feature('eig').set('outputmap', {});
model.study('std1').feature('eig').set('ngenAUX', '1');
model.study('std1').feature('eig').set('goalngenAUX', '1');
model.study('std1').feature('eig').set('ngenAUX', '1');
model.study('std1').feature('eig').set('goalngenAUX', '1');
model.study('std1').feature('eig').setSolveFor('/physics/solid', true);

model.common.create('mpf1', 'ParticipationFactors', 'comp1');

model.param.label('Geometrical Parameters');
model.param.set('L0', '10[mm]');
model.param.descr('L0', 'Reference length (x)');
model.param.set('a0', '1[mm]');
model.param.descr('a0', 'Reference width (y)');
model.param.set('b0', '0.5[mm]');
model.param.descr('b0', 'Reference height (z)');

model.geom('geom1').lengthUnit('mm');
model.geom('geom1').create('blk1', 'Block');
model.geom('geom1').feature('blk1').set('size', {'L0' 'a0' 'b0'});
model.geom('geom1').run('blk1');

model.param.create('par2');
model.param('par2').label('Material Properties');
model.param('par2').set('E0', '100[GPa]');
model.param('par2').descr('E0', 'Reference Young''s modulus');
model.param('par2').set('rho0', '1000[kg/m^3]');
model.param('par2').descr('rho0', 'Reference mass density');
model.param('par2').set('nu0', '0');
model.param('par2').descr('nu0', 'Poisson''s ratio');

model.geom('geom1').run;

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat1').propertyGroup('Enu').set('E', {'E0'});
model.material('mat1').propertyGroup('Enu').set('nu', {'nu0'});
model.material('mat1').propertyGroup('def').set('density', {'rho0'});

model.physics('solid').feature('lemm1').create('te1', 'ThermalExpansion', 3);
model.physics('solid').feature('lemm1').feature('te1').set('minput_strainreferencetemperature_src', 'userdef');
model.physics('solid').feature('lemm1').feature('te1').set('minput_temperature_src', 'userdef');
model.physics('solid').feature('lemm1').feature('te1').set('minput_temperature', '293.15[K]+dT');

model.param('par2').set('alpha_x', '1E-5[1/K]');
model.param('par2').descr('alpha_x', 'CTE, x-direction');
model.param('par2').set('alpha_y', '2E-5[1/K]');
model.param('par2').descr('alpha_y', 'CTE, y-direction');
model.param('par2').set('alpha_z', '3E-5[1/K]');
model.param('par2').descr('alpha_z', 'CTE, z-direction');
model.param('par2').set('dT', '10[K]');
model.param('par2').descr('dT', 'Temperature shift');

model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_x' 'alpha_y' 'alpha_z'});

model.physics('solid').create('fix1', 'Fixed', 2);
model.physics('solid').feature('fix1').label('Fixed Constraint, Left End');
model.physics('solid').feature('fix1').selection.set([1]);
model.physics('solid').feature.duplicate('fix2', 'fix1');
model.physics('solid').feature('fix2').label('Fixed Constraint, Right End');
model.physics('solid').feature('fix2').selection.set([6]);

model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('size').set('hauto', 1);
model.mesh('mesh1').run;

model.study('std1').label('Study 1, Clamped, Base Solution');
model.study('std1').feature('eig').set('neigsactive', true);
model.study('std1').feature('eig').set('neigs', 10);
model.study('std1').feature('eig').set('shift', '10000[Hz]');
model.study('std1').feature('eig').set('useadvanceddisable', true);
model.study('std1').feature('eig').set('disabledphysics', {'solid/lemm1/te1'});

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'eig');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'eig');
model.sol('sol1').create('e1', 'Eigenvalue');
model.sol('sol1').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol1').feature('e1').set('eigvfunscaleparam', '1.01E-8');
model.sol('sol1').feature('e1').set('control', 'eig');
model.sol('sol1').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol1').attach('std1');
model.sol('sol1').feature('e1').set('rtol', 1.0E-30);
model.sol('sol1').feature('e1').set('eigvfunscaleparam', 1);
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 1, 0);
model.result('pg1').set('defaultPlotID', 'modeShape');
model.result('pg1').label('Mode Shape (solid)');
model.result('pg1').set('showlegends', false);
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'solid.disp'});
model.result('pg1').feature('surf1').set('threshold', 'manual');
model.result('pg1').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg1').feature('surf1').set('colortable', 'Rainbow');
model.result('pg1').feature('surf1').set('colortabletrans', 'none');
model.result('pg1').feature('surf1').set('colorscalemode', 'linear');
model.result('pg1').feature('surf1').set('colortable', 'AuroraBorealis');
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg1').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg1').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result.evaluationGroup.create('std1EvgFrq', 'EvaluationGroup');
model.result.evaluationGroup('std1EvgFrq').set('defaultPlotID', 'eigenfrequenciesTable_solid');
model.result.evaluationGroup('std1EvgFrq').set('data', 'dset1');
model.result.evaluationGroup('std1EvgFrq').label('Eigenfrequencies (Study 1, Clamped, Base Solution)');
model.result.evaluationGroup('std1EvgFrq').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('expr', '2*pi*freq', 0);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('unit', 'rad/s', 0);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('descr', 'Angular frequency', 0);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('expr', 'imag(freq)/abs(freq)', 1);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('unit', '1', 1);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('descr', 'Damping ratio', 1);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('expr', 'abs(freq)/imag(freq)/2', 2);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('unit', '1', 2);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('descr', 'Quality factor', 2);
model.result.evaluationGroup('std1EvgFrq').run;
model.result.evaluationGroup.create('std1mpf1', 'EvaluationGroup');
model.result.evaluationGroup('std1mpf1').set('data', 'dset1');
model.result.evaluationGroup('std1mpf1').label('Participation Factors (Study 1, Clamped, Base Solution)');
model.result.evaluationGroup('std1mpf1').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfLnormX', 0);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 0);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, X-translation', 0);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfLnormY', 1);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 1);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Y-translation', 1);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfLnormZ', 2);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 2);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Z-translation', 2);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfRnormX', 3);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 3);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, X-rotation', 3);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfRnormY', 4);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 4);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Y-rotation', 4);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfRnormZ', 5);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 5);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Z-rotation', 5);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffLX', 6);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg', 6);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, X-translation', 6);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffLY', 7);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg', 7);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Y-translation', 7);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffLZ', 8);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg', 8);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Z-translation', 8);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffRX', 9);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg*m^2', 9);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, X-rotation', 9);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffRY', 10);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg*m^2', 10);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Y-rotation', 10);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffRZ', 11);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg*m^2', 11);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Z-rotation', 11);
model.result.evaluationGroup('std1mpf1').run;
model.result('pg1').run;
model.result('pg1').label('Mode Shape, Clamped, Base Solution');
model.result('pg1').set('titletype', 'manual');
model.result('pg1').set('title', 'Clamped, Base Solution');
model.result('pg1').set('paramindicator', '');
model.result('pg1').set('edges', false);
model.result('pg1').set('plotarrayenable', true);
model.result('pg1').set('arrayshape', 'square');
model.result('pg1').set('relrowpadding', 0.6);
model.result('pg1').set('relcolumnpadding', 0.4);
model.result('pg1').feature('surf1').set('arraydim', '2');
model.result('pg1').run;
model.result('pg1').feature('surf1').label('First Bending, z Direction');
model.result('pg1').feature.duplicate('surf2', 'surf1');
model.result('pg1').feature('surf2').set('arraydim', '2');
model.result('pg1').run;
model.result('pg1').feature('surf2').label('First Bending, y Direction');
model.result('pg1').feature('surf2').set('data', 'dset1');
model.result('pg1').feature('surf2').set('looplevel', [2]);
model.result('pg1').run;
model.result('pg1').feature.duplicate('surf3', 'surf2');
model.result('pg1').feature('surf3').set('arraydim', '2');
model.result('pg1').run;
model.result('pg1').feature('surf3').set('looplevel', [6]);
model.result('pg1').feature('surf3').label('First Twisting');
model.result('pg1').run;
model.result('pg1').feature.duplicate('surf4', 'surf3');
model.result('pg1').feature('surf4').set('arraydim', '2');
model.result('pg1').run;
model.result('pg1').feature('surf4').label('First Axial');
model.result('pg1').feature('surf4').set('looplevel', [9]);
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg1').feature('surf1').feature('def').set('scale', '4E-4');
model.result('pg1').feature('surf2').set('arraydim', '2');
model.result('pg1').run;
model.result('pg1').feature('surf2').set('inheritplot', 'surf1');
model.result('pg1').feature('surf3').set('arraydim', '2');
model.result('pg1').run;
model.result('pg1').feature('surf3').set('inheritplot', 'surf1');
model.result('pg1').feature('surf4').set('arraydim', '2');
model.result('pg1').run;
model.result('pg1').feature('surf4').set('inheritplot', 'surf1');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').create('arws1', 'ArrowSurface');
model.result('pg1').feature('arws1').set('arraydim', '2');
model.result('pg1').feature('arws1').label('Arrow Surface, First Bending, z Direction');
model.result('pg1').feature('arws1').set('arrowcount', 100);
model.result('pg1').feature('arws1').set('scaleactive', true);
model.result('pg1').feature('arws1').set('scale', '6E-4');
model.result('pg1').feature('arws1').set('manualindexing', true);
model.result('pg1').feature('arws1').set('color', 'black');
model.result('pg1').feature('arws1').create('def1', 'Deform');
model.result('pg1').run;
model.result('pg1').feature('arws1').feature('def1').set('scaleactive', true);
model.result('pg1').feature('arws1').feature('def1').set('scale', '4E-4');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').create('arws2', 'ArrowSurface');
model.result('pg1').feature('arws2').set('arraydim', '2');
model.result('pg1').feature('arws2').label('Arrow Surface, First Bending, y Direction');
model.result('pg1').feature('arws2').set('data', 'dset1');
model.result('pg1').feature('arws2').set('looplevel', [2]);
model.result('pg1').feature('arws2').set('arrowcount', 100);
model.result('pg1').feature('arws2').set('manualindexing', true);
model.result('pg1').feature('arws2').set('colindex', 1);
model.result('pg1').feature('arws2').set('inheritplot', 'arws1');
model.result('pg1').feature('arws2').create('def1', 'Deform');
model.result('pg1').run;
model.result('pg1').feature('arws2').set('arraydim', '2');
model.result('pg1').run;
model.result('pg1').feature.duplicate('arws3', 'arws2');
model.result('pg1').feature('arws3').set('arraydim', '2');
model.result('pg1').run;
model.result('pg1').feature('arws3').label('Arrow Surface, First Twisting');
model.result('pg1').feature('arws3').set('looplevel', [6]);
model.result('pg1').feature('arws3').set('rowindex', 1);
model.result('pg1').feature('arws3').set('colindex', 0);
model.result('pg1').run;
model.result('pg1').feature.duplicate('arws4', 'arws3');
model.result('pg1').feature('arws4').set('arraydim', '2');
model.result('pg1').run;
model.result('pg1').feature('arws4').set('looplevel', [9]);
model.result('pg1').feature('arws4').label('Arrow Surface, First Axial');
model.result('pg1').feature('arws4').set('colindex', 1);
model.result('pg1').feature('surf1').set('arraydim', '2');
model.result('pg1').run;
model.result('pg1').feature('surf1').create('tran1', 'Transparency');
model.result('pg1').run;
model.result('pg1').feature('surf2').set('arraydim', '2');
model.result('pg1').run;
model.result('pg1').feature('surf2').create('tran1', 'Transparency');
model.result('pg1').run;
model.result('pg1').feature('surf3').set('arraydim', '2');
model.result('pg1').run;
model.result('pg1').feature('surf3').create('tran1', 'Transparency');
model.result('pg1').run;
model.result('pg1').feature('surf4').set('arraydim', '2');
model.result('pg1').run;
model.result('pg1').feature('surf4').create('tran1', 'Transparency');
model.result('pg1').run;
model.result('pg1').feature('surf1').set('arraydim', '2');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').create('tlan1', 'TableAnnotation');
model.result('pg1').feature('tlan1').set('arraydim', '2');
model.result('pg1').feature('tlan1').set('source', 'localtable');
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 'L0/2', 0, 0);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 0, 0, 1);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 0, 0, 2);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 'First Bending (z)', 0, 3);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 'L0/2+1.4*L0', 1, 0);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 0, 1, 1);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 0, 1, 2);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 'First Bending (y)', 1, 3);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 'L0/2', 2, 0);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 'L0*1.4', 2, 1);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 0, 2, 2);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 'First Twisting', 2, 3);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 'L0/2+1.4*L0', 3, 0);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 'L0*1.4', 3, 1);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 0, 3, 2);
model.result('pg1').feature('tlan1').setIndex('localtablematrix', 'First  Axial', 3, 3);
model.result('pg1').feature('tlan1').set('showpoint', false);
model.result('pg1').run;

model.view('view1').set('showgrid', false);
model.view.create('view2', 'geom1');
model.view('view2').model('comp1');
model.view('view2').label('View 2, 4 Beams');

model.result('pg1').run;
model.result('pg1').set('view', 'view2');
model.result.evaluationGroup('std1EvgFrq').run;
model.result.evaluationGroup('std1mpf1').run;

model.study.create('std2');
model.study('std2').create('eig', 'Eigenfrequency');
model.study('std2').feature('eig').set('plotgroup', 'Default');
model.study('std2').feature('eig').set('chkeigregion', true);
model.study('std2').feature('eig').set('conrad', '1');
model.study('std2').feature('eig').set('conradynhm', '1');
model.study('std2').feature('eig').set('storefact', false);
model.study('std2').feature('eig').set('solnum', 'auto');
model.study('std2').feature('eig').set('notsolnum', 'auto');
model.study('std2').feature('eig').set('outputmap', {});
model.study('std2').feature('eig').set('ngenAUX', '1');
model.study('std2').feature('eig').set('goalngenAUX', '1');
model.study('std2').feature('eig').set('ngenAUX', '1');
model.study('std2').feature('eig').set('goalngenAUX', '1');
model.study('std2').feature('eig').setSolveFor('/physics/solid', true);
model.study('std2').setGenPlots(false);
model.study('std2').feature('eig').set('neigsactive', true);
model.study('std2').feature('eig').set('neigs', 10);
model.study('std2').feature('eig').set('shift', '10000[Hz]');
model.study('std2').feature('eig').set('useadvanceddisable', true);
model.study('std2').feature('eig').set('disabledphysics', {'solid/lemm1/te1' 'solid/fix2'});
model.study('std2').label('Study 2, Cantilever, Base solution');

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'eig');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'eig');
model.sol('sol2').create('e1', 'Eigenvalue');
model.sol('sol2').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol2').feature('e1').set('eigvfunscaleparam', '1.01E-8');
model.sol('sol2').feature('e1').set('control', 'eig');
model.sol('sol2').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol2').attach('std2');
model.sol('sol2').feature('e1').set('rtol', 1.0E-30);
model.sol('sol2').feature('e1').set('eigvfunscaleparam', 1);
model.sol('sol2').runAll;

model.result('pg1').run;
model.result.duplicate('pg2', 'pg1');
model.result('pg2').run;
model.result('pg2').label('Mode Shape, Cantilever, Base Solution');
model.result('pg2').set('data', 'dset2');
model.result('pg2').set('title', 'Cantilever, Base Solution');
model.result('pg2').feature('surf2').set('arraydim', '2');
model.result('pg2').run;
model.result('pg2').feature('surf2').set('data', 'dset2');
model.result('pg2').feature('surf3').set('arraydim', '2');
model.result('pg2').run;
model.result('pg2').feature('surf3').set('data', 'dset2');
model.result('pg2').feature('surf3').set('looplevel', [5]);
model.result('pg2').feature('surf4').set('arraydim', '2');
model.result('pg2').run;
model.result('pg2').feature('surf4').set('data', 'dset2');
model.result('pg2').feature('surf4').set('looplevel', [7]);
model.result('pg2').feature('arws2').set('arraydim', '2');
model.result('pg2').run;
model.result('pg2').feature('arws2').set('data', 'dset2');
model.result('pg2').feature('arws3').set('arraydim', '2');
model.result('pg2').run;
model.result('pg2').feature('arws3').set('data', 'dset2');
model.result('pg2').feature('arws3').set('looplevel', [5]);
model.result('pg2').feature('arws4').set('arraydim', '2');
model.result('pg2').run;
model.result('pg2').feature('arws4').set('data', 'dset2');
model.result('pg2').feature('arws4').set('looplevel', [7]);
model.result('pg2').run;

model.view('view2').set('showgrid', false);

model.result.evaluationGroup.duplicate('std1EvgFrq1', 'std1EvgFrq');
model.result.evaluationGroup('std1EvgFrq1').set('data', 'dset2');
model.result.evaluationGroup('std1EvgFrq1').label('Eigenfrequencies (Study 2, Cantilever, Base Solution)');
model.result.evaluationGroup('std1EvgFrq1').run;
model.result.evaluationGroup.duplicate('std1mpf2', 'std1mpf1');
model.result.evaluationGroup('std1mpf2').set('data', 'dset2');
model.result.evaluationGroup('std1mpf2').label('Participation Factors (Study 2, Cantilever, Base Solution)');
model.result.evaluationGroup('std1mpf2').run;
model.result('pg1').run;

model.nodeGroup.create('grp1', 'Results');
model.nodeGroup('grp1').add('plotgroup', 'pg1');
model.nodeGroup('grp1').add('evaluationgroup', 'std1EvgFrq');
model.nodeGroup('grp1').add('evaluationgroup', 'std1mpf1');
model.nodeGroup('grp1').label('Clamped');

model.result('pg2').run;

model.nodeGroup.create('grp2', 'Results');
model.nodeGroup('grp2').add('plotgroup', 'pg2');
model.nodeGroup('grp2').add('evaluationgroup', 'std1EvgFrq1');
model.nodeGroup('grp2').add('evaluationgroup', 'std1mpf2');
model.nodeGroup('grp2').label('Cantilever');

model.study.create('std3');
model.study('std3').create('stat', 'Stationary');
model.study('std3').feature('stat').set('plotgroup', 'Default');
model.study('std3').feature('stat').set('outputmap', {});
model.study('std3').feature('stat').set('ngenAUX', '1');
model.study('std3').feature('stat').set('goalngenAUX', '1');
model.study('std3').feature('stat').set('ngenAUX', '1');
model.study('std3').feature('stat').set('goalngenAUX', '1');
model.study('std3').feature('stat').setSolveFor('/physics/solid', true);
model.study('std3').create('eig', 'Eigenfrequency');
model.study('std3').feature('eig').set('plotgroup', 'Default');
model.study('std3').feature('eig').set('chkeigregion', true);
model.study('std3').feature('eig').set('conrad', '1');
model.study('std3').feature('eig').set('conradynhm', '1');
model.study('std3').feature('eig').set('storefact', false);
model.study('std3').feature('eig').set('geometricNonlinearity', true);
model.study('std3').feature('eig').set('outputmap', {});
model.study('std3').feature('eig').set('ngenAUX', '1');
model.study('std3').feature('eig').set('goalngenAUX', '1');
model.study('std3').feature('eig').set('ngenAUX', '1');
model.study('std3').feature('eig').set('goalngenAUX', '1');
model.study('std3').feature('eig').setSolveFor('/physics/solid', true);
model.study('std3').label('Study 3, Clamped, dT');
model.study('std3').setGenPlots(false);
model.study('std3').feature('eig').set('neigsactive', true);
model.study('std3').feature('eig').set('neigs', 10);
model.study('std3').feature('eig').set('shift', '10000[Hz]');
model.study('std3').create('param', 'Parametric');
model.study('std3').feature('param').setIndex('pname', 'a0', 0);
model.study('std3').feature('param').setIndex('plistarr', '', 0);
model.study('std3').feature('param').setIndex('punit', 'm', 0);
model.study('std3').feature('param').setIndex('pname', 'a0', 0);
model.study('std3').feature('param').setIndex('plistarr', '', 0);
model.study('std3').feature('param').setIndex('punit', 'm', 0);
model.study('std3').feature('param').setIndex('pname', 'dT', 0);
model.study('std3').feature('param').setIndex('plistarr', 'range(0,2,10)', 0);

model.sol.create('sol3');
model.sol('sol3').study('std3');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std3');
model.sol('sol3').feature('st1').set('studystep', 'stat');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').set('control', 'stat');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol3').feature('s1').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol3').feature('s1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol3').feature('s1').create('i1', 'Iterative');
model.sol('sol3').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol3').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol3').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol3').feature('s1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol3').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol3').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol3').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol('sol3').create('su1', 'StoreSolution');
model.sol('sol3').create('st2', 'StudyStep');
model.sol('sol3').feature('st2').set('study', 'std3');
model.sol('sol3').feature('st2').set('studystep', 'eig');
model.sol('sol3').create('v2', 'Variables');
model.sol('sol3').feature('v2').set('initmethod', 'sol');
model.sol('sol3').feature('v2').set('initsol', 'sol3');
model.sol('sol3').feature('v2').set('initsoluse', 'sol4');
model.sol('sol3').feature('v2').set('notsolmethod', 'sol');
model.sol('sol3').feature('v2').set('notsol', 'sol3');
model.sol('sol3').feature('v2').set('control', 'eig');
model.sol('sol3').create('e1', 'Eigenvalue');
model.sol('sol3').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol3').feature('e1').set('eigvfunscaleparam', '1.01E-8');
model.sol('sol3').feature('e1').set('storelinpoint', true);
model.sol('sol3').feature('e1').set('control', 'eig');
model.sol('sol3').feature('e1').set('linpmethod', 'sol');
model.sol('sol3').feature('e1').set('linpsol', 'sol3');
model.sol('sol3').feature('e1').set('linpsoluse', 'sol4');
model.sol('sol3').feature('e1').set('control', 'eig');
model.sol('sol3').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('v2').set('notsolnum', 'auto');
model.sol('sol3').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol3').attach('std3');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std3');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol3');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'dT'});
model.batch('p1').set('plistarr', {'range(0,2,10)'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std3');
model.batch('p1').set('control', 'param');

model.sol('sol3').feature('e1').set('rtol', 1.0E-30);
model.sol('sol3').feature('e1').set('eigvfunscale', 'average');
model.sol.create('sol5');
model.sol('sol5').study('std3');
model.sol('sol5').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol5');
model.batch('p1').run('compute');

model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('Frequency Shift with Temperature, Clamped');
model.result('pg3').set('data', 'dset5');
model.result('pg3').setIndex('looplevelinput', 'first', 0);
model.result('pg3').set('titletype', 'manual');
model.result('pg3').set('title', 'Frequency Shift with dT, Clamped');
model.result('pg3').create('glob1', 'Global');
model.result('pg3').feature('glob1').set('markerpos', 'datapoints');
model.result('pg3').feature('glob1').set('linewidth', 'preference');
model.result('pg3').feature('glob1').label('First Bending Mode, z Direction');
model.result('pg3').feature('glob1').setIndex('expr', 'solid.freq/withsol(''sol1'',freq,setind(lambda,1))', 0);
model.result('pg3').feature('glob1').set('xdatasolnumtype', 'outer');
model.result('pg3').feature('glob1').set('linewidth', 2);
model.result('pg3').feature('glob1').set('linemarker', 'circle');
model.result('pg3').feature('glob1').set('legendmethod', 'manual');
model.result('pg3').feature('glob1').setIndex('legends', 'First Bending (z)', 0);
model.result('pg3').run;
model.result('pg3').feature.duplicate('glob2', 'glob1');
model.result('pg3').run;
model.result('pg3').feature('glob2').label('First Bending Mode, y Direction');
model.result('pg3').feature('glob2').set('data', 'dset5');
model.result('pg3').feature('glob2').setIndex('looplevelinput', 'manualindices', 0);
model.result('pg3').feature('glob2').setIndex('looplevelindices', 2, 0);
model.result('pg3').feature('glob2').setIndex('expr', 'solid.freq/withsol(''sol1'',freq,setind(lambda,2))', 0);
model.result('pg3').feature('glob2').setIndex('legends', 'First Bending (y)', 0);
model.result('pg3').run;
model.result('pg3').feature.duplicate('glob3', 'glob2');
model.result('pg3').run;
model.result('pg3').feature('glob3').label('First Twisting Mode');
model.result('pg3').feature('glob3').setIndex('looplevelindices', 6, 0);
model.result('pg3').feature('glob3').setIndex('expr', 'solid.freq/withsol(''sol1'',freq,setind(lambda,6))', 0);
model.result('pg3').feature('glob3').setIndex('legends', 'First Twisting', 0);
model.result('pg3').run;
model.result('pg3').feature.duplicate('glob4', 'glob3');
model.result('pg3').run;
model.result('pg3').feature('glob4').label('First Axial Mode');
model.result('pg3').feature('glob4').setIndex('looplevelindices', 9, 0);
model.result('pg3').feature('glob4').setIndex('expr', 'solid.freq/withsol(''sol1'',freq,setind(lambda,9))', 0);
model.result('pg3').feature('glob4').setIndex('legends', 'First Axial', 0);
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').set('legendpos', 'lowerleft');
model.result('pg3').run;

model.study.create('std4');
model.study('std4').create('stat', 'Stationary');
model.study('std4').feature('stat').set('plotgroup', 'Default');
model.study('std4').feature('stat').set('outputmap', {});
model.study('std4').feature('stat').set('ngenAUX', '1');
model.study('std4').feature('stat').set('goalngenAUX', '1');
model.study('std4').feature('stat').set('ngenAUX', '1');
model.study('std4').feature('stat').set('goalngenAUX', '1');
model.study('std4').feature('stat').setSolveFor('/physics/solid', true);
model.study('std4').create('eig', 'Eigenfrequency');
model.study('std4').feature('eig').set('plotgroup', 'Default');
model.study('std4').feature('eig').set('chkeigregion', true);
model.study('std4').feature('eig').set('conrad', '1');
model.study('std4').feature('eig').set('conradynhm', '1');
model.study('std4').feature('eig').set('storefact', false);
model.study('std4').feature('eig').set('geometricNonlinearity', true);
model.study('std4').feature('eig').set('outputmap', {});
model.study('std4').feature('eig').set('ngenAUX', '1');
model.study('std4').feature('eig').set('goalngenAUX', '1');
model.study('std4').feature('eig').set('ngenAUX', '1');
model.study('std4').feature('eig').set('goalngenAUX', '1');
model.study('std4').feature('eig').setSolveFor('/physics/solid', true);
model.study('std4').label('Study 4, Cantilever, dT');
model.study('std4').setGenPlots(false);
model.study('std4').feature('stat').set('useadvanceddisable', true);
model.study('std4').feature('stat').set('disabledphysics', {'solid/fix2'});
model.study('std4').feature('eig').set('neigsactive', true);
model.study('std4').feature('eig').set('neigs', 10);
model.study('std4').feature('eig').set('shift', '10000[Hz]');
model.study('std4').feature('eig').set('useadvanceddisable', true);
model.study('std4').feature('eig').set('disabledphysics', {'solid/fix2'});
model.study('std4').create('param', 'Parametric');
model.study('std4').feature('param').setIndex('pname', 'a0', 0);
model.study('std4').feature('param').setIndex('plistarr', '', 0);
model.study('std4').feature('param').setIndex('punit', 'm', 0);
model.study('std4').feature('param').setIndex('pname', 'a0', 0);
model.study('std4').feature('param').setIndex('plistarr', '', 0);
model.study('std4').feature('param').setIndex('punit', 'm', 0);
model.study('std4').feature('param').setIndex('pname', 'dT', 0);
model.study('std4').feature('param').setIndex('plistarr', 'range(0,2,10)', 0);

model.sol.create('sol12');
model.sol('sol12').study('std4');
model.sol('sol12').create('st1', 'StudyStep');
model.sol('sol12').feature('st1').set('study', 'std4');
model.sol('sol12').feature('st1').set('studystep', 'stat');
model.sol('sol12').create('v1', 'Variables');
model.sol('sol12').feature('v1').set('control', 'stat');
model.sol('sol12').create('s1', 'Stationary');
model.sol('sol12').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol12').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol12').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol12').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol12').feature('s1').create('d1', 'Direct');
model.sol('sol12').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol12').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol12').feature('s1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol12').feature('s1').create('i1', 'Iterative');
model.sol('sol12').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol12').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol12').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol12').feature('s1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol12').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol12').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol12').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol12').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol12').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol12').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol12').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol12').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol12').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol12').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol12').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol12').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol12').feature('s1').feature.remove('fcDef');
model.sol('sol12').create('su1', 'StoreSolution');
model.sol('sol12').create('st2', 'StudyStep');
model.sol('sol12').feature('st2').set('study', 'std4');
model.sol('sol12').feature('st2').set('studystep', 'eig');
model.sol('sol12').create('v2', 'Variables');
model.sol('sol12').feature('v2').set('initmethod', 'sol');
model.sol('sol12').feature('v2').set('initsol', 'sol12');
model.sol('sol12').feature('v2').set('initsoluse', 'sol13');
model.sol('sol12').feature('v2').set('notsolmethod', 'sol');
model.sol('sol12').feature('v2').set('notsol', 'sol12');
model.sol('sol12').feature('v2').set('control', 'eig');
model.sol('sol12').create('e1', 'Eigenvalue');
model.sol('sol12').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol12').feature('e1').set('eigvfunscaleparam', '1.01E-8');
model.sol('sol12').feature('e1').set('storelinpoint', true);
model.sol('sol12').feature('e1').set('control', 'eig');
model.sol('sol12').feature('e1').set('linpmethod', 'sol');
model.sol('sol12').feature('e1').set('linpsol', 'sol12');
model.sol('sol12').feature('e1').set('linpsoluse', 'sol13');
model.sol('sol12').feature('e1').set('control', 'eig');
model.sol('sol12').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol12').feature('v2').set('notsolnum', 'auto');
model.sol('sol12').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol12').attach('std4');

model.batch.create('p2', 'Parametric');
model.batch('p2').study('std4');
model.batch('p2').create('so1', 'Solutionseq');
model.batch('p2').feature('so1').set('seq', 'sol12');
model.batch('p2').feature('so1').set('store', 'on');
model.batch('p2').feature('so1').set('clear', 'on');
model.batch('p2').feature('so1').set('psol', 'none');
model.batch('p2').set('pname', {'dT'});
model.batch('p2').set('plistarr', {'range(0,2,10)'});
model.batch('p2').set('sweeptype', 'sparse');
model.batch('p2').set('probesel', 'all');
model.batch('p2').set('probes', {});
model.batch('p2').set('plot', 'off');
model.batch('p2').set('err', 'on');
model.batch('p2').attach('std4');
model.batch('p2').set('control', 'param');

model.sol('sol12').feature('e1').set('rtol', 1.0E-30);
model.sol('sol12').feature('e1').set('eigvfunscale', 'average');
model.sol.create('sol14');
model.sol('sol14').study('std4');
model.sol('sol14').label('Parametric Solutions 2');

model.batch('p2').feature('so1').set('psol', 'sol14');
model.batch('p2').run('compute');

model.result('pg3').run;
model.result.duplicate('pg4', 'pg3');
model.result('pg4').run;
model.result('pg4').label('Frequency Shift with Temperature, Cantilever');
model.result('pg4').set('data', 'dset8');
model.result('pg4').set('title', 'Frequency Shift with dT, Cantilever');
model.result('pg4').run;
model.result('pg4').feature('glob1').setIndex('expr', 'solid.freq/withsol(''sol2'',freq,setind(lambda,1))', 0);
model.result('pg4').run;
model.result('pg4').feature('glob2').set('data', 'dset8');
model.result('pg4').feature('glob2').setIndex('expr', 'solid.freq/withsol(''sol2'',freq,setind(lambda,2))', 0);
model.result('pg4').run;
model.result('pg4').feature('glob3').set('data', 'dset8');
model.result('pg4').feature('glob3').setIndex('looplevelindices', 5, 0);
model.result('pg4').feature('glob3').setIndex('expr', 'solid.freq/withsol(''sol2'',freq,setind(lambda,5))', 0);
model.result('pg4').run;
model.result('pg4').feature('glob4').set('data', 'dset8');
model.result('pg4').feature('glob4').setIndex('looplevelindices', 7, 0);
model.result('pg4').feature('glob4').setIndex('expr', 'solid.freq/withsol(''sol2'',freq,setind(lambda,7))', 0);
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').set('legendpos', 'upperleft');
model.result('pg4').run;
model.result('pg3').run;
model.result.move('pg3', 1);

model.nodeGroup('grp1').add('plotgroup', 'pg3');

model.result('pg4').run;

model.nodeGroup('grp2').add('plotgroup', 'pg4');

model.result.evaluationGroup.create('eg1', 'EvaluationGroup');

model.nodeGroup('grp1').add('evaluationgroup', 'eg1');

model.result.evaluationGroup('eg1').label('Frequency Shift with Temperature, Clamped');
model.result.evaluationGroup('eg1').set('data', 'dset5');
model.result.evaluationGroup('eg1').set('concatenation', 'vertical');
model.result.evaluationGroup('eg1').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg1').feature('gev1').set('data', 'dset5');
model.result.evaluationGroup('eg1').feature('gev1').setIndex('looplevelinput', 'first', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'freq/withsol(''sol1'',freq,setind(lambda,1))', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('looplevelinput', 'last', 1);
model.result.evaluationGroup('eg1').feature('gev1').label('First Bending (z)');
model.result.evaluationGroup('eg1').feature.duplicate('gev2', 'gev1');
model.result.evaluationGroup('eg1').feature('gev2').label('First Bending (y)');
model.result.evaluationGroup('eg1').feature('gev2').setIndex('looplevelinput', 'manualindices', 0);
model.result.evaluationGroup('eg1').feature('gev2').setIndex('looplevelindices', 2, 0);
model.result.evaluationGroup('eg1').feature('gev2').setIndex('expr', 'freq/withsol(''sol1'',freq,setind(lambda,2))', 0);
model.result.evaluationGroup('eg1').feature.duplicate('gev3', 'gev2');
model.result.evaluationGroup('eg1').feature('gev3').label('First Twisting');
model.result.evaluationGroup('eg1').feature('gev3').setIndex('looplevelindices', 6, 0);
model.result.evaluationGroup('eg1').feature('gev3').setIndex('expr', 'freq/withsol(''sol1'',freq,setind(lambda,6))', 0);
model.result.evaluationGroup('eg1').feature.duplicate('gev4', 'gev3');
model.result.evaluationGroup('eg1').feature('gev4').setIndex('looplevelindices', 9, 0);
model.result.evaluationGroup('eg1').feature('gev4').setIndex('expr', 'freq/withsol(''sol1'',freq,setind(lambda,9))', 0);
model.result.evaluationGroup('eg1').feature('gev4').label('First Axial');
model.result.evaluationGroup('eg1').run;
model.result.evaluationGroup.copy('eg2', 'eg1');

model.nodeGroup('grp2').add('evaluationgroup', 'eg2');

model.result.evaluationGroup('eg2').label('Frequency Shift with Temperature, Cantilever');
model.result.evaluationGroup('eg2').set('data', 'dset8');
model.result.evaluationGroup('eg2').feature('gev1').set('data', 'dset8');
model.result.evaluationGroup('eg2').feature('gev1').setIndex('expr', 'freq/withsol(''sol2'',freq,setind(lambda,1))', 0);
model.result.evaluationGroup('eg2').feature('gev2').set('data', 'dset8');
model.result.evaluationGroup('eg2').feature('gev2').setIndex('expr', 'freq/withsol(''sol2'',freq,setind(lambda,2))', 0);
model.result.evaluationGroup('eg2').feature('gev3').set('data', 'dset8');
model.result.evaluationGroup('eg2').feature('gev3').setIndex('looplevelindices', 5, 0);
model.result.evaluationGroup('eg2').feature('gev3').setIndex('expr', 'freq/withsol(''sol2'',freq,setind(lambda,5))', 0);
model.result.evaluationGroup('eg2').feature('gev4').set('data', 'dset8');
model.result.evaluationGroup('eg2').feature('gev4').setIndex('looplevelindices', 7, 0);
model.result.evaluationGroup('eg2').feature('gev4').setIndex('expr', 'freq/withsol(''sol2'',freq,setind(lambda,7))', 0);
model.result.evaluationGroup('eg2').run;

model.study.create('std5');
model.study('std5').create('stat', 'Stationary');
model.study('std5').feature('stat').set('plotgroup', 'Default');
model.study('std5').feature('stat').set('solnum', 'auto');
model.study('std5').feature('stat').set('notsolnum', 'auto');
model.study('std5').feature('stat').set('outputmap', {});
model.study('std5').feature('stat').set('ngenAUX', '1');
model.study('std5').feature('stat').set('goalngenAUX', '1');
model.study('std5').feature('stat').set('ngenAUX', '1');
model.study('std5').feature('stat').set('goalngenAUX', '1');
model.study('std5').feature('stat').setSolveFor('/physics/solid', true);
model.study('std5').create('buckling', 'LinearBuckling');
model.study('std5').feature('buckling').set('plotgroup', 'Default');
model.study('std5').feature('buckling').set('neigsactive', true);
model.study('std5').feature('buckling').set('solnum', 'auto');
model.study('std5').feature('buckling').set('notsolnum', 'auto');
model.study('std5').feature('buckling').set('outputmap', {});
model.study('std5').feature('buckling').set('ngenAUX', '1');
model.study('std5').feature('buckling').set('goalngenAUX', '1');
model.study('std5').feature('buckling').set('ngenAUX', '1');
model.study('std5').feature('buckling').set('goalngenAUX', '1');
model.study('std5').feature('buckling').setSolveFor('/physics/solid', true);
model.study('std5').label('Study 5, Buckling');

model.sol.create('sol21');
model.sol('sol21').study('std5');
model.sol('sol21').create('st1', 'StudyStep');
model.sol('sol21').feature('st1').set('study', 'std5');
model.sol('sol21').feature('st1').set('studystep', 'stat');
model.sol('sol21').create('v1', 'Variables');
model.sol('sol21').feature('v1').set('control', 'stat');
model.sol('sol21').create('s1', 'Stationary');
model.sol('sol21').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol21').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol21').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol21').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol21').feature('s1').create('d1', 'Direct');
model.sol('sol21').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol21').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol21').feature('s1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol21').feature('s1').create('i1', 'Iterative');
model.sol('sol21').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol21').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol21').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol21').feature('s1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol21').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol21').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol21').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol21').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol21').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol21').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol21').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol21').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol21').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol21').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol21').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol21').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol21').feature('s1').feature.remove('fcDef');
model.sol('sol21').create('su1', 'StoreSolution');
model.sol('sol21').create('st2', 'StudyStep');
model.sol('sol21').feature('st2').set('study', 'std5');
model.sol('sol21').feature('st2').set('studystep', 'buckling');
model.sol('sol21').create('v2', 'Variables');
model.sol('sol21').feature('v2').set('initmethod', 'sol');
model.sol('sol21').feature('v2').set('initsol', 'sol21');
model.sol('sol21').feature('v2').set('initsoluse', 'sol22');
model.sol('sol21').feature('v2').set('notsolmethod', 'sol');
model.sol('sol21').feature('v2').set('notsol', 'sol21');
model.sol('sol21').feature('v2').set('control', 'buckling');
model.sol('sol21').create('e1', 'Eigenvalue');
model.sol('sol21').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol21').feature('e1').set('eigvfunscaleparam', '1.01E-8');
model.sol('sol21').feature('e1').set('control', 'buckling');
model.sol('sol21').feature('e1').set('linpmethod', 'sol');
model.sol('sol21').feature('e1').set('linpsol', 'sol21');
model.sol('sol21').feature('e1').set('linpsoluse', 'sol22');
model.sol('sol21').feature('e1').set('control', 'buckling');
model.sol('sol21').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol21').feature('v2').set('notsolnum', 'auto');
model.sol('sol21').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol21').attach('std5');
model.sol('sol21').runAll;

model.result.dataset('dset9').set('frametype', 'spatial');
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').set('data', 'dset9');
model.result('pg5').setIndex('looplevel', 1, 0);
model.result('pg5').set('frametype', 'spatial');
model.result('pg5').set('defaultPlotID', 'modeShape');
model.result('pg5').label('Mode Shape (solid)');
model.result('pg5').set('showlegends', false);
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', {'solid.disp'});
model.result('pg5').feature('surf1').set('threshold', 'manual');
model.result('pg5').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg5').feature('surf1').set('colortable', 'Rainbow');
model.result('pg5').feature('surf1').set('colortabletrans', 'none');
model.result('pg5').feature('surf1').set('colorscalemode', 'linear');
model.result('pg5').feature('surf1').set('colortable', 'AuroraBorealis');
model.result('pg5').feature('surf1').create('def', 'Deform');
model.result('pg5').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg5').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg5').run;
model.result('pg5').label('Mode Shape, Buckling');
model.result.move('pg5', 2);

model.nodeGroup('grp1').add('plotgroup', 'pg5');

model.view.create('view3', 'geom1');
model.view('view3').model('comp1');
model.view('view3').label('View 3: Buckling');

model.result('pg5').run;
model.result('pg5').set('view', 'view3');

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').set('eps_x', 'alpha_x*dT');
model.variable('var1').descr('eps_x', 'Thermal strain, x direction');
model.variable('var1').set('eps_y', 'alpha_y*dT');
model.variable('var1').descr('eps_y', 'Thermal strain, y direction');
model.variable('var1').set('eps_z', 'alpha_z*dT');
model.variable('var1').descr('eps_z', 'Thermal strain, z direction');
model.variable('var1').set('fbz_fb0z', '1-3*eps_x/2+eps_y/2+3*eps_z/2');
model.variable('var1').descr('fbz_fb0z', 'Estimate of frequency shift, cantilever, bending z direction');
model.variable('var1').set('fby_fb0y', '1-3*eps_x/2+3*eps_y/2+eps_z/2');
model.variable('var1').descr('fby_fb0y', 'Estimate of frequency shift, cantilever, bending y direction');
model.variable('var1').set('fa_fa0', '1-eps_x/2+eps_y/2+eps_z/2');
model.variable('var1').descr('fa_fa0', 'Estimate of frequency shift, cantilever, axial');
model.variable('var1').set('ft_ft0', '1-eps_x/2-3*eps_y/10+6*eps_z/5');
model.variable('var1').descr('ft_ft0', 'Estimate of frequency shift, cantilever, torsional');

model.sol('sol12').updateSolution;
model.sol('sol14').updateSolution;

model.result.evaluationGroup('eg2').feature('gev1').setIndex('expr', 'fbz_fb0z', 1);
model.result.evaluationGroup('eg2').feature('gev2').setIndex('expr', 'fby_fb0y', 1);
model.result.evaluationGroup('eg2').feature('gev3').setIndex('expr', 'ft_ft0', 1);
model.result.evaluationGroup('eg2').feature('gev4').setIndex('expr', 'fa_fa0', 1);
model.result.evaluationGroup('eg2').run;
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').feature.duplicate('glob5', 'glob1');
model.result('pg4').feature.duplicate('glob6', 'glob2');
model.result('pg4').feature.duplicate('glob7', 'glob3');
model.result('pg4').feature.duplicate('glob8', 'glob4');
model.result('pg4').run;
model.result('pg4').feature('glob5').label('First Bending Mode, z Direction (Estimate)');
model.result('pg4').feature('glob5').setIndex('expr', 'fbz_fb0z', 0);
model.result('pg4').feature('glob5').set('linestyle', 'dashed');
model.result('pg4').feature('glob5').set('linemarker', 'square');
model.result('pg4').feature('glob5').setIndex('legends', 'First Bending (z), Estimate', 0);
model.result('pg4').run;
model.result('pg4').feature('glob6').label('First Bending Mode, y Direction (Estimate)');
model.result('pg4').feature('glob6').setIndex('expr', 'fby_fb0y', 0);
model.result('pg4').feature('glob6').set('linestyle', 'dashed');
model.result('pg4').feature('glob6').set('linemarker', 'square');
model.result('pg4').feature('glob6').setIndex('legends', 'First Bending (y), Estimate', 0);
model.result('pg4').run;
model.result('pg4').feature('glob7').label('First Twisting Mode (Estimate)');
model.result('pg4').feature('glob7').setIndex('expr', 'ft_ft0', 0);
model.result('pg4').feature('glob7').set('linestyle', 'dashed');
model.result('pg4').feature('glob7').set('linemarker', 'square');
model.result('pg4').feature('glob7').setIndex('legends', 'First Twisting, Estimate', 0);
model.result('pg4').run;
model.result('pg4').feature('glob8').label('First Axial Mode (Estimate)');
model.result('pg4').feature('glob8').setIndex('expr', 'fa_fa0', 0);
model.result('pg4').feature('glob8').set('linestyle', 'dashed');
model.result('pg4').feature('glob8').set('linemarker', 'square');
model.result('pg4').feature('glob8').setIndex('legends', 'First Axial, Estimate', 0);
model.result('pg4').run;
model.result('pg4').feature('glob5').set('linecolor', 'cyclereset');
model.result('pg4').run;
model.result.create('pg6', 'PlotGroup3D');

model.nodeGroup('grp2').add('plotgroup', 'pg6');

model.result('pg6').run;
model.result('pg6').label('Stress at Clamp');
model.result('pg6').set('data', 'dset7');
model.result('pg6').create('vol1', 'Volume');
model.result('pg6').feature('vol1').set('expr', 'solid.sx');
model.result('pg6').run;
model.result('pg6').feature('vol1').set('unit', 'MPa');

model.physics('solid').feature('fix1').create('tefix1', 'ThermalExpansionFix', 2);
model.physics('solid').feature('fix1').feature('tefix1').set('Inherit', true);

model.study('std1').feature('eig').set('disabledphysics', {'solid/lemm1/te1' 'solid/fix1/tefix1'});
model.study('std2').feature('eig').set('disabledphysics', {'solid/lemm1/te1' 'solid/fix2' 'solid/fix1/tefix1'});
model.study('std3').feature('stat').set('useadvanceddisable', true);
model.study('std3').feature('stat').set('disabledphysics', {'solid/fix1/tefix1'});
model.study('std3').feature('eig').set('useadvanceddisable', true);
model.study('std3').feature('eig').set('disabledphysics', {'solid/fix1/tefix1'});
model.study('std4').feature('stat').set('disabledphysics', {'solid/fix2' 'solid/fix1/tefix1'});
model.study('std4').feature('eig').set('disabledphysics', {'solid/fix2' 'solid/fix1/tefix1'});
model.study('std5').feature('stat').set('useadvanceddisable', true);
model.study('std5').feature('stat').set('disabledphysics', {'solid/fix1/tefix1'});
model.study('std5').feature('buckling').set('useadvanceddisable', true);
model.study('std5').feature('buckling').set('disabledphysics', {'solid/fix1/tefix1'});
model.study.create('std6');
model.study('std6').create('stat', 'Stationary');
model.study('std6').feature('stat').set('plotgroup', 'Default');
model.study('std6').feature('stat').set('outputmap', {});
model.study('std6').feature('stat').set('ngenAUX', '1');
model.study('std6').feature('stat').set('goalngenAUX', '1');
model.study('std6').feature('stat').set('ngenAUX', '1');
model.study('std6').feature('stat').set('goalngenAUX', '1');
model.study('std6').feature('stat').setSolveFor('/physics/solid', true);
model.study('std6').create('eig', 'Eigenfrequency');
model.study('std6').feature('eig').set('plotgroup', 'Default');
model.study('std6').feature('eig').set('chkeigregion', true);
model.study('std6').feature('eig').set('conrad', '1');
model.study('std6').feature('eig').set('conradynhm', '1');
model.study('std6').feature('eig').set('storefact', false);
model.study('std6').feature('eig').set('geometricNonlinearity', true);
model.study('std6').feature('eig').set('outputmap', {});
model.study('std6').feature('eig').set('ngenAUX', '1');
model.study('std6').feature('eig').set('goalngenAUX', '1');
model.study('std6').feature('eig').set('ngenAUX', '1');
model.study('std6').feature('eig').set('goalngenAUX', '1');
model.study('std6').feature('eig').setSolveFor('/physics/solid', true);
model.study('std6').label('Study 6, Cantilever with Expanding Constraint');
model.study('std6').setGenPlots(false);
model.study('std6').feature('stat').set('useadvanceddisable', true);
model.study('std6').feature('stat').set('disabledphysics', {'solid/fix2'});
model.study('std6').feature('eig').set('neigsactive', true);
model.study('std6').feature('eig').set('neigs', 10);
model.study('std6').feature('eig').set('shift', '10000[Hz]');
model.study('std6').feature('eig').set('useadvanceddisable', true);
model.study('std6').feature('eig').set('disabledphysics', {'solid/fix2'});
model.study('std6').create('param', 'Parametric');
model.study('std6').feature('param').setIndex('pname', 'a0', 0);
model.study('std6').feature('param').setIndex('plistarr', '', 0);
model.study('std6').feature('param').setIndex('punit', 'm', 0);
model.study('std6').feature('param').setIndex('pname', 'a0', 0);
model.study('std6').feature('param').setIndex('plistarr', '', 0);
model.study('std6').feature('param').setIndex('punit', 'm', 0);
model.study('std6').feature('param').setIndex('pname', 'dT', 0);
model.study('std6').feature('param').setIndex('plistarr', 'range(0,2,10)', 0);

model.sol.create('sol23');
model.sol('sol23').study('std6');
model.sol('sol23').create('st1', 'StudyStep');
model.sol('sol23').feature('st1').set('study', 'std6');
model.sol('sol23').feature('st1').set('studystep', 'stat');
model.sol('sol23').create('v1', 'Variables');
model.sol('sol23').feature('v1').set('control', 'stat');
model.sol('sol23').create('s1', 'Stationary');
model.sol('sol23').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol23').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol23').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol23').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol23').feature('s1').create('d1', 'Direct');
model.sol('sol23').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol23').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol23').feature('s1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol23').feature('s1').create('i1', 'Iterative');
model.sol('sol23').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol23').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol23').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol23').feature('s1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol23').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol23').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol23').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol23').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol23').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol23').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol23').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol23').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol23').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol23').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol23').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol23').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol23').feature('s1').feature.remove('fcDef');
model.sol('sol23').create('su1', 'StoreSolution');
model.sol('sol23').create('st2', 'StudyStep');
model.sol('sol23').feature('st2').set('study', 'std6');
model.sol('sol23').feature('st2').set('studystep', 'eig');
model.sol('sol23').create('v2', 'Variables');
model.sol('sol23').feature('v2').set('initmethod', 'sol');
model.sol('sol23').feature('v2').set('initsol', 'sol23');
model.sol('sol23').feature('v2').set('initsoluse', 'sol24');
model.sol('sol23').feature('v2').set('notsolmethod', 'sol');
model.sol('sol23').feature('v2').set('notsol', 'sol23');
model.sol('sol23').feature('v2').set('control', 'eig');
model.sol('sol23').create('e1', 'Eigenvalue');
model.sol('sol23').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol23').feature('e1').set('eigvfunscaleparam', '1.01E-8');
model.sol('sol23').feature('e1').set('storelinpoint', true);
model.sol('sol23').feature('e1').set('control', 'eig');
model.sol('sol23').feature('e1').set('linpmethod', 'sol');
model.sol('sol23').feature('e1').set('linpsol', 'sol23');
model.sol('sol23').feature('e1').set('linpsoluse', 'sol24');
model.sol('sol23').feature('e1').set('control', 'eig');
model.sol('sol23').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol23').feature('v2').set('notsolnum', 'auto');
model.sol('sol23').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol23').attach('std6');

model.batch.create('p3', 'Parametric');
model.batch('p3').study('std6');
model.batch('p3').create('so1', 'Solutionseq');
model.batch('p3').feature('so1').set('seq', 'sol23');
model.batch('p3').feature('so1').set('store', 'on');
model.batch('p3').feature('so1').set('clear', 'on');
model.batch('p3').feature('so1').set('psol', 'none');
model.batch('p3').set('pname', {'dT'});
model.batch('p3').set('plistarr', {'range(0,2,10)'});
model.batch('p3').set('sweeptype', 'sparse');
model.batch('p3').set('probesel', 'all');
model.batch('p3').set('probes', {});
model.batch('p3').set('plot', 'off');
model.batch('p3').set('err', 'on');
model.batch('p3').attach('std6');
model.batch('p3').set('control', 'param');

model.sol('sol23').feature('e1').set('rtol', 1.0E-30);
model.sol('sol23').feature('e1').set('eigvfunscale', 'average');
model.sol.create('sol25');
model.sol('sol25').study('std6');
model.sol('sol25').label('Parametric Solutions 3');

model.batch('p3').feature('so1').set('psol', 'sol25');
model.batch('p3').run('compute');

model.result('pg4').run;
model.result.duplicate('pg7', 'pg4');

model.nodeGroup('grp2').add('plotgroup', 'pg7');

model.result('pg7').run;
model.result('pg7').label('Frequency Shift with Temperature, Cantilever, Expanding Constraint');
model.result('pg7').set('data', 'dset13');
model.result('pg7').run;
model.result('pg7').feature('glob2').set('data', 'dset13');
model.result('pg7').run;
model.result('pg7').feature('glob3').set('data', 'dset13');
model.result('pg7').run;
model.result('pg7').feature('glob4').set('data', 'dset13');
model.result('pg7').run;
model.result.evaluationGroup('eg2').feature('gev1').setIndex('descr', 'Frequency Shift', 0);
model.result.evaluationGroup('eg2').feature('gev1').setIndex('expr', 'withsol(''sol25'',freq,setind(lambda,1))/withsol(''sol2'',freq,setind(lambda,1))', 1);
model.result.evaluationGroup('eg2').feature('gev1').setIndex('descr', 'Frequency Shift, Expanding Boundaries', 1);
model.result.evaluationGroup('eg2').feature('gev1').setIndex('expr', 'fbz_fb0z', 2);
model.result.evaluationGroup('eg2').feature('gev2').setIndex('expr', 'withsol(''sol25'',freq,setind(lambda,2))/withsol(''sol2'',freq,setind(lambda,2))', 1);
model.result.evaluationGroup('eg2').feature('gev2').setIndex('expr', 'fby_fb0y', 2);
model.result.evaluationGroup('eg2').feature('gev3').setIndex('expr', 'withsol(''sol25'',freq,setind(lambda,5))/withsol(''sol2'',freq,setind(lambda,5))', 1);
model.result.evaluationGroup('eg2').feature('gev3').setIndex('expr', 'ft_ft0', 2);
model.result.evaluationGroup('eg2').feature('gev4').setIndex('expr', 'withsol(''sol25'',freq,setind(lambda,7))/withsol(''sol2'',freq,setind(lambda,7))', 1);
model.result.evaluationGroup('eg2').feature('gev4').setIndex('expr', 'fa_fa0', 2);
model.result.evaluationGroup('eg2').run;
model.result('pg6').run;
model.result('pg6').feature.duplicate('vol2', 'vol1');
model.result('pg6').run;
model.result('pg6').feature('vol2').set('data', 'dset12');
model.result('pg6').feature('vol2').set('inheritplot', 'vol1');
model.result('pg6').run;
model.result('pg6').set('plotarrayenable', true);
model.result('pg6').set('arrayaxis', 'y');
model.result('pg6').set('relpadding', 5);
model.result('pg6').run;
model.result('pg6').set('titletype', 'manual');
model.result('pg6').set('title', 'Stress tensor, x-component (MPa)');
model.result('pg6').run;
model.result('pg6').feature('vol1').set('arraydim', '1');
model.result('pg6').run;
model.result('pg6').feature('vol1').label('No Expanding Boundaries');
model.result('pg6').feature('vol2').set('arraydim', '1');
model.result('pg6').run;
model.result('pg6').feature('vol2').label('Expanding Boundaries');
model.result('pg6').feature('vol1').set('arraydim', '1');
model.result('pg6').run;
model.result('pg6').feature('vol1').create('def1', 'Deform');
model.result('pg6').run;
model.result('pg6').feature('vol2').set('arraydim', '1');
model.result('pg6').run;
model.result('pg6').feature('vol2').create('def1', 'Deform');
model.result('pg6').run;
model.result('pg6').run;
model.result('pg6').create('tlan1', 'TableAnnotation');
model.result('pg6').feature('tlan1').set('arraydim', '1');
model.result('pg6').feature('tlan1').set('source', 'localtable');
model.result('pg6').feature('tlan1').setIndex('localtablematrix', -0.25, 0, 0);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', -0.75, 0, 1);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 0, 0, 2);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 'No Expanding Boundaries', 0, 3);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', -0.25, 1, 0);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 5.25, 1, 1);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 0, 1, 2);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 'Expanding Boundaries', 1, 3);
model.result('pg6').feature('tlan1').set('showpoint', false);
model.result('pg6').feature('tlan1').set('anchorpoint', 'lowerleft');
model.result('pg6').run;

model.view.create('view4', 'geom1');
model.view('view4').model('comp1');
model.view('view4').label('View 4: 2 Beams');

model.result('pg6').run;
model.result('pg6').set('view', 'view4');

model.param('par2').set('beta', '-1e-4[1/K]*0');
model.param('par2').descr('beta', 'Relative temperature sensitivity for Young''s modulus');

model.material('mat1').propertyGroup('def').addInput('temperature');
model.material('mat1').propertyGroup('Enu').addInput('temperature');
model.material('mat1').propertyGroup('Enu').set('E', {'E0*(1+beta*(T-293.15))'});

model.physics('solid').feature('lemm1').set('minput_strainreferencetemperature_src', 'userdef');
model.physics('solid').feature('lemm1').set('minput_temperature_src', 'userdef');
model.physics('solid').feature('lemm1').set('minput_temperature', '293.15[K]+dT');

model.study.create('std7');
model.study('std7').create('stat', 'Stationary');
model.study('std7').feature('stat').set('plotgroup', 'Default');
model.study('std7').feature('stat').set('outputmap', {});
model.study('std7').feature('stat').set('ngenAUX', '1');
model.study('std7').feature('stat').set('goalngenAUX', '1');
model.study('std7').feature('stat').set('ngenAUX', '1');
model.study('std7').feature('stat').set('goalngenAUX', '1');
model.study('std7').feature('stat').setSolveFor('/physics/solid', true);
model.study('std7').create('eig', 'Eigenfrequency');
model.study('std7').feature('eig').set('plotgroup', 'Default');
model.study('std7').feature('eig').set('chkeigregion', true);
model.study('std7').feature('eig').set('conrad', '1');
model.study('std7').feature('eig').set('conradynhm', '1');
model.study('std7').feature('eig').set('storefact', false);
model.study('std7').feature('eig').set('geometricNonlinearity', true);
model.study('std7').feature('eig').set('outputmap', {});
model.study('std7').feature('eig').set('ngenAUX', '1');
model.study('std7').feature('eig').set('goalngenAUX', '1');
model.study('std7').feature('eig').set('ngenAUX', '1');
model.study('std7').feature('eig').set('goalngenAUX', '1');
model.study('std7').feature('eig').setSolveFor('/physics/solid', true);
model.study('std7').label('Study 7, Cantilever with Temperature Dependent E');
model.study('std7').setGenPlots(false);
model.study('std7').feature('stat').set('useadvanceddisable', true);
model.study('std7').feature('stat').set('disabledphysics', {'solid/fix2'});
model.study('std7').feature('eig').set('neigsactive', true);
model.study('std7').feature('eig').set('neigs', 10);
model.study('std7').feature('eig').set('shift', '10000[Hz]');
model.study('std7').feature('eig').set('useadvanceddisable', true);
model.study('std7').feature('eig').set('disabledphysics', {'solid/fix2'});
model.study('std7').create('param', 'Parametric');
model.study('std7').feature('param').setIndex('pname', 'a0', 0);
model.study('std7').feature('param').setIndex('plistarr', '', 0);
model.study('std7').feature('param').setIndex('punit', 'm', 0);
model.study('std7').feature('param').setIndex('pname', 'a0', 0);
model.study('std7').feature('param').setIndex('plistarr', '', 0);
model.study('std7').feature('param').setIndex('punit', 'm', 0);
model.study('std7').feature('param').setIndex('pname', 'beta', 0);
model.study('std7').feature('param').setIndex('plistarr', '-1E-4', 0);
model.study('std7').feature('param').setIndex('pname', 'a0', 1);
model.study('std7').feature('param').setIndex('plistarr', '', 1);
model.study('std7').feature('param').setIndex('punit', 'm', 1);
model.study('std7').feature('param').setIndex('pname', 'a0', 1);
model.study('std7').feature('param').setIndex('plistarr', '', 1);
model.study('std7').feature('param').setIndex('punit', 'm', 1);
model.study('std7').feature('param').setIndex('pname', 'dT', 1);
model.study('std7').feature('param').setIndex('plistarr', 'range(0,2,10)', 1);
model.study('std7').feature('param').set('sweeptype', 'filled');

model.sol.create('sol32');
model.sol('sol32').study('std7');
model.sol('sol32').create('st1', 'StudyStep');
model.sol('sol32').feature('st1').set('study', 'std7');
model.sol('sol32').feature('st1').set('studystep', 'stat');
model.sol('sol32').create('v1', 'Variables');
model.sol('sol32').feature('v1').set('control', 'stat');
model.sol('sol32').create('s1', 'Stationary');
model.sol('sol32').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol32').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol32').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol32').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol32').feature('s1').create('d1', 'Direct');
model.sol('sol32').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol32').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol32').feature('s1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol32').feature('s1').create('i1', 'Iterative');
model.sol('sol32').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol32').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol32').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol32').feature('s1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol32').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol32').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol32').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol32').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol32').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol32').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol32').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol32').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol32').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol32').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol32').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol32').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol32').feature('s1').feature.remove('fcDef');
model.sol('sol32').create('su1', 'StoreSolution');
model.sol('sol32').create('st2', 'StudyStep');
model.sol('sol32').feature('st2').set('study', 'std7');
model.sol('sol32').feature('st2').set('studystep', 'eig');
model.sol('sol32').create('v2', 'Variables');
model.sol('sol32').feature('v2').set('initmethod', 'sol');
model.sol('sol32').feature('v2').set('initsol', 'sol32');
model.sol('sol32').feature('v2').set('initsoluse', 'sol33');
model.sol('sol32').feature('v2').set('notsolmethod', 'sol');
model.sol('sol32').feature('v2').set('notsol', 'sol32');
model.sol('sol32').feature('v2').set('control', 'eig');
model.sol('sol32').create('e1', 'Eigenvalue');
model.sol('sol32').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol32').feature('e1').set('eigvfunscaleparam', '1.01E-8');
model.sol('sol32').feature('e1').set('storelinpoint', true);
model.sol('sol32').feature('e1').set('control', 'eig');
model.sol('sol32').feature('e1').set('linpmethod', 'sol');
model.sol('sol32').feature('e1').set('linpsol', 'sol32');
model.sol('sol32').feature('e1').set('linpsoluse', 'sol33');
model.sol('sol32').feature('e1').set('control', 'eig');
model.sol('sol32').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol32').feature('v2').set('notsolnum', 'auto');
model.sol('sol32').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol32').attach('std7');

model.batch.create('p4', 'Parametric');
model.batch('p4').study('std7');
model.batch('p4').create('so1', 'Solutionseq');
model.batch('p4').feature('so1').set('seq', 'sol32');
model.batch('p4').feature('so1').set('store', 'on');
model.batch('p4').feature('so1').set('clear', 'on');
model.batch('p4').feature('so1').set('psol', 'none');
model.batch('p4').set('pname', {'beta' 'dT'});
model.batch('p4').set('plistarr', {'-1E-4' 'range(0,2,10)'});
model.batch('p4').set('sweeptype', 'filled');
model.batch('p4').set('probesel', 'all');
model.batch('p4').set('probes', {});
model.batch('p4').set('plot', 'off');
model.batch('p4').set('err', 'on');
model.batch('p4').attach('std7');
model.batch('p4').set('control', 'param');

model.sol('sol32').feature('e1').set('rtol', 1.0E-30);
model.sol('sol32').feature('e1').set('eigvfunscale', 'average');
model.sol.create('sol34');
model.sol('sol34').study('std7');
model.sol('sol34').label('Parametric Solutions 4');

model.batch('p4').feature('so1').set('psol', 'sol34');
model.batch('p4').run('compute');

model.result('pg7').run;
model.result.duplicate('pg8', 'pg7');

model.nodeGroup('grp2').add('plotgroup', 'pg8');

model.result('pg8').run;
model.result('pg8').label('Frequency Shift with Temperature, Cantilever, Temperature Dependent E');
model.result('pg8').set('data', 'dset16');
model.result('pg8').setIndex('looplevelinput', 'first', 2);
model.result('pg8').run;
model.result('pg8').feature('glob1').set('data', 'dset16');
model.result('pg8').feature('glob1').setIndex('looplevelinput', 'first', 2);
model.result('pg8').feature('glob1').setIndex('looplevelinput', 'first', 0);
model.result('pg8').feature('glob1').set('xdata', 'expr');
model.result('pg8').feature('glob1').set('xdataexpr', 'dT');
model.result('pg8').run;
model.result('pg8').feature('glob2').set('data', 'dset16');
model.result('pg8').feature('glob2').setIndex('looplevelinput', 'first', 2);
model.result('pg8').feature('glob2').setIndex('looplevelinput', 'manualindices', 0);
model.result('pg8').feature('glob2').setIndex('looplevelindices', 2, 0);
model.result('pg8').feature('glob2').set('xdata', 'expr');
model.result('pg8').feature('glob2').set('xdataexpr', 'dT');
model.result('pg8').run;
model.result('pg8').feature('glob3').set('data', 'dset16');
model.result('pg8').feature('glob3').setIndex('looplevelinput', 'first', 2);
model.result('pg8').feature('glob3').setIndex('looplevelinput', 'manualindices', 0);
model.result('pg8').feature('glob3').setIndex('looplevelindices', 5, 0);
model.result('pg8').feature('glob3').set('xdata', 'expr');
model.result('pg8').feature('glob3').set('xdataexpr', 'dT');
model.result('pg8').run;
model.result('pg8').feature('glob4').set('data', 'dset16');
model.result('pg8').feature('glob4').setIndex('looplevelinput', 'first', 2);
model.result('pg8').feature('glob4').setIndex('looplevelinput', 'manualindices', 0);
model.result('pg8').feature('glob4').setIndex('looplevelindices', 7, 0);
model.result('pg8').feature('glob4').set('xdata', 'expr');
model.result('pg8').feature('glob4').set('xdataexpr', 'dT');
model.result('pg8').run;
model.result('pg8').feature('glob5').set('data', 'dset16');
model.result('pg8').feature('glob5').setIndex('looplevelinput', 'first', 2);
model.result('pg8').feature('glob5').setIndex('looplevelinput', 'first', 0);
model.result('pg8').feature('glob5').set('xdata', 'expr');
model.result('pg8').feature('glob5').set('xdataexpr', 'dT');
model.result('pg8').feature('glob5').setIndex('expr', 'fbz_fb0z+beta*dT/2', 0);
model.result('pg8').run;
model.result('pg8').feature('glob6').set('data', 'dset16');
model.result('pg8').feature('glob6').setIndex('looplevelinput', 'first', 2);
model.result('pg8').feature('glob6').setIndex('looplevelinput', 'first', 0);
model.result('pg8').feature('glob6').setIndex('expr', 'fby_fb0y+beta*dT/2', 0);
model.result('pg8').feature('glob6').set('xdata', 'expr');
model.result('pg8').feature('glob6').set('xdataexpr', 'dT');
model.result('pg8').run;
model.result('pg8').feature('glob7').set('data', 'dset16');
model.result('pg8').feature('glob7').setIndex('looplevelinput', 'first', 2);
model.result('pg8').feature('glob7').setIndex('looplevelinput', 'first', 0);
model.result('pg8').feature('glob7').setIndex('expr', 'ft_ft0+beta*dT/2', 0);
model.result('pg8').feature('glob7').set('xdata', 'expr');
model.result('pg8').feature('glob7').set('xdataexpr', 'dT');
model.result('pg8').run;
model.result('pg8').feature('glob8').set('data', 'dset16');
model.result('pg8').feature('glob8').setIndex('looplevelinput', 'first', 2);
model.result('pg8').feature('glob8').setIndex('looplevelinput', 'first', 0);
model.result('pg8').feature('glob8').setIndex('expr', 'fa_fa0+beta*dT/2', 0);
model.result('pg8').feature('glob8').set('xdata', 'expr');
model.result('pg8').feature('glob8').set('xdataexpr', 'dT');
model.result('pg8').run;
model.result('pg8').run;
model.result('pg8').set('legendpos', 'lowerleft');
model.result('pg8').run;
model.result.evaluationGroup('eg2').feature('gev1').setIndex('expr', 'withsol(''sol34'',freq,setind(lambda,1))/withsol(''sol2'',freq,setind(lambda,1))', 3);
model.result.evaluationGroup('eg2').feature('gev1').setIndex('descr', 'Frequency Shift, E(T)', 3);
model.result.evaluationGroup('eg2').feature('gev1').setIndex('expr', 'fbz_fb0z+withsol(''sol34'',beta)*dT/2', 4);
model.result.evaluationGroup('eg2').feature('gev1').setIndex('descr', 'Estimate of fequency shift, E(T)', 4);
model.result.evaluationGroup('eg2').feature('gev2').setIndex('expr', 'withsol(''sol34'',freq,setind(lambda,2))/withsol(''sol2'',freq,setind(lambda,2))', 3);
model.result.evaluationGroup('eg2').feature('gev2').setIndex('expr', 'fby_fb0y+withsol(''sol34'',beta)*dT/2', 4);
model.result.evaluationGroup('eg2').feature('gev3').setIndex('expr', 'withsol(''sol34'',freq,setind(lambda,5))/withsol(''sol2'',freq,setind(lambda,5))', 3);
model.result.evaluationGroup('eg2').feature('gev3').setIndex('expr', 'ft_ft0+withsol(''sol34'',beta)*dT/2', 4);
model.result.evaluationGroup('eg2').feature('gev4').setIndex('expr', 'withsol(''sol34'',freq,setind(lambda,7))/withsol(''sol2'',freq,setind(lambda,7))', 3);
model.result.evaluationGroup('eg2').feature('gev4').setIndex('expr', 'fa_fa0+withsol(''sol34'',beta)*dT/2', 4);
model.result.evaluationGroup('eg2').run;

model.study.create('std8');
model.study('std8').create('stat', 'Stationary');
model.study('std8').feature('stat').set('plotgroup', 'Default');
model.study('std8').feature('stat').set('outputmap', {});
model.study('std8').feature('stat').set('ngenAUX', '1');
model.study('std8').feature('stat').set('goalngenAUX', '1');
model.study('std8').feature('stat').set('ngenAUX', '1');
model.study('std8').feature('stat').set('goalngenAUX', '1');
model.study('std8').feature('stat').setSolveFor('/physics/solid', true);
model.study('std8').create('eig', 'Eigenfrequency');
model.study('std8').feature('eig').set('plotgroup', 'Default');
model.study('std8').feature('eig').set('chkeigregion', true);
model.study('std8').feature('eig').set('conrad', '1');
model.study('std8').feature('eig').set('conradynhm', '1');
model.study('std8').feature('eig').set('storefact', false);
model.study('std8').feature('eig').set('geometricNonlinearity', true);
model.study('std8').feature('eig').set('outputmap', {});
model.study('std8').feature('eig').set('ngenAUX', '1');
model.study('std8').feature('eig').set('goalngenAUX', '1');
model.study('std8').feature('eig').set('ngenAUX', '1');
model.study('std8').feature('eig').set('goalngenAUX', '1');
model.study('std8').feature('eig').setSolveFor('/physics/solid', true);
model.study('std8').label('Study 8, Cantilever, dT=30000');
model.study('std8').setGenPlots(false);
model.study('std8').feature('stat').set('useadvanceddisable', true);
model.study('std8').feature('stat').set('disabledphysics', {'solid/fix2'});
model.study('std8').feature('eig').set('neigsactive', true);
model.study('std8').feature('eig').set('neigs', 10);
model.study('std8').feature('eig').set('shift', '10000[Hz]');
model.study('std8').feature('eig').set('useadvanceddisable', true);
model.study('std8').feature('eig').set('disabledphysics', {'solid/fix2'});
model.study('std8').create('param', 'Parametric');
model.study('std8').feature('param').setIndex('pname', 'a0', 0);
model.study('std8').feature('param').setIndex('plistarr', '', 0);
model.study('std8').feature('param').setIndex('punit', 'm', 0);
model.study('std8').feature('param').setIndex('pname', 'a0', 0);
model.study('std8').feature('param').setIndex('plistarr', '', 0);
model.study('std8').feature('param').setIndex('punit', 'm', 0);
model.study('std8').feature('param').setIndex('pname', 'dT', 0);
model.study('std8').feature('param').setIndex('plistarr', 30000, 0);

model.sol.create('sol41');
model.sol('sol41').study('std8');
model.sol('sol41').create('st1', 'StudyStep');
model.sol('sol41').feature('st1').set('study', 'std8');
model.sol('sol41').feature('st1').set('studystep', 'stat');
model.sol('sol41').create('v1', 'Variables');
model.sol('sol41').feature('v1').set('control', 'stat');
model.sol('sol41').create('s1', 'Stationary');
model.sol('sol41').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol41').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol41').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol41').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol41').feature('s1').create('d1', 'Direct');
model.sol('sol41').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol41').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol41').feature('s1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol41').feature('s1').create('i1', 'Iterative');
model.sol('sol41').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol41').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol41').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol41').feature('s1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol41').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol41').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol41').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol41').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol41').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol41').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol41').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol41').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol41').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol41').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol41').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol41').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol41').feature('s1').feature.remove('fcDef');
model.sol('sol41').create('su1', 'StoreSolution');
model.sol('sol41').create('st2', 'StudyStep');
model.sol('sol41').feature('st2').set('study', 'std8');
model.sol('sol41').feature('st2').set('studystep', 'eig');
model.sol('sol41').create('v2', 'Variables');
model.sol('sol41').feature('v2').set('initmethod', 'sol');
model.sol('sol41').feature('v2').set('initsol', 'sol41');
model.sol('sol41').feature('v2').set('initsoluse', 'sol42');
model.sol('sol41').feature('v2').set('notsolmethod', 'sol');
model.sol('sol41').feature('v2').set('notsol', 'sol41');
model.sol('sol41').feature('v2').set('control', 'eig');
model.sol('sol41').create('e1', 'Eigenvalue');
model.sol('sol41').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol41').feature('e1').set('eigvfunscaleparam', '1.01E-8');
model.sol('sol41').feature('e1').set('storelinpoint', true);
model.sol('sol41').feature('e1').set('control', 'eig');
model.sol('sol41').feature('e1').set('linpmethod', 'sol');
model.sol('sol41').feature('e1').set('linpsol', 'sol41');
model.sol('sol41').feature('e1').set('linpsoluse', 'sol42');
model.sol('sol41').feature('e1').set('control', 'eig');
model.sol('sol41').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol41').feature('v2').set('notsolnum', 'auto');
model.sol('sol41').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol41').attach('std8');

model.batch.create('p5', 'Parametric');
model.batch('p5').study('std8');
model.batch('p5').create('so1', 'Solutionseq');
model.batch('p5').feature('so1').set('seq', 'sol41');
model.batch('p5').feature('so1').set('store', 'on');
model.batch('p5').feature('so1').set('clear', 'on');
model.batch('p5').feature('so1').set('psol', 'none');
model.batch('p5').set('pname', {'dT'});
model.batch('p5').set('plistarr', {'30000'});
model.batch('p5').set('sweeptype', 'sparse');
model.batch('p5').set('probesel', 'all');
model.batch('p5').set('probes', {});
model.batch('p5').set('plot', 'off');
model.batch('p5').set('err', 'on');
model.batch('p5').attach('std8');
model.batch('p5').set('control', 'param');

model.sol('sol41').feature('e1').set('rtol', 1.0E-30);
model.sol('sol41').feature('e1').set('eigvfunscale', 'average');
model.sol.create('sol43');
model.sol('sol43').study('std8');
model.sol('sol43').label('Parametric Solutions 5');

model.batch('p5').feature('so1').set('psol', 'sol43');
model.batch('p5').run('compute');

model.study.create('std9');
model.study('std9').create('eig', 'Eigenfrequency');
model.study('std9').feature('eig').set('plotgroup', 'Default');
model.study('std9').feature('eig').set('chkeigregion', true);
model.study('std9').feature('eig').set('conrad', '1');
model.study('std9').feature('eig').set('conradynhm', '1');
model.study('std9').feature('eig').set('storefact', false);
model.study('std9').feature('eig').set('solnum', 'auto');
model.study('std9').feature('eig').set('notsolnum', 'auto');
model.study('std9').feature('eig').set('outputmap', {});
model.study('std9').feature('eig').set('ngenAUX', '1');
model.study('std9').feature('eig').set('goalngenAUX', '1');
model.study('std9').feature('eig').set('ngenAUX', '1');
model.study('std9').feature('eig').set('goalngenAUX', '1');
model.study('std9').feature('eig').setSolveFor('/physics/solid', true);
model.study('std9').feature('eig').set('neigsactive', true);
model.study('std9').feature('eig').set('neigs', 10);
model.study('std9').feature('eig').set('shift', '10000[Hz]');
model.study('std9').feature('eig').set('useadvanceddisable', true);
model.study('std9').feature('eig').set('disabledphysics', {'solid/fix2'});
model.study('std9').label('Study 9, Cantilever, Modified Geometry And Density');
model.study('std9').setGenPlots(false);

model.sol.create('sol45');
model.sol('sol45').study('std9');
model.sol('sol45').create('st1', 'StudyStep');
model.sol('sol45').feature('st1').set('study', 'std9');
model.sol('sol45').feature('st1').set('studystep', 'eig');
model.sol('sol45').create('v1', 'Variables');
model.sol('sol45').feature('v1').set('control', 'eig');
model.sol('sol45').create('e1', 'Eigenvalue');
model.sol('sol45').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol45').feature('e1').set('eigvfunscaleparam', '1.01E-8');
model.sol('sol45').feature('e1').set('control', 'eig');
model.sol('sol45').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol45').attach('std9');
model.sol('sol45').feature('e1').set('rtol', 1.0E-30);
model.sol('sol45').feature('e1').set('eigvfunscale', 'average');

model.study('std9').create('param', 'Parametric');
model.study('std9').feature('param').setIndex('pname', 'a0', 0);
model.study('std9').feature('param').setIndex('plistarr', '', 0);
model.study('std9').feature('param').setIndex('punit', 'm', 0);
model.study('std9').feature('param').setIndex('pname', 'a0', 0);
model.study('std9').feature('param').setIndex('plistarr', '', 0);
model.study('std9').feature('param').setIndex('punit', 'm', 0);
model.study('std9').feature('param').setIndex('pname', 'L0', 0);
model.study('std9').feature('param').setIndex('plistarr', 13, 0);
model.study('std9').feature('param').setIndex('pname', 'a0', 1);
model.study('std9').feature('param').setIndex('plistarr', '', 1);
model.study('std9').feature('param').setIndex('punit', 'm', 1);
model.study('std9').feature('param').setIndex('pname', 'a0', 1);
model.study('std9').feature('param').setIndex('plistarr', '', 1);
model.study('std9').feature('param').setIndex('punit', 'm', 1);
model.study('std9').feature('param').setIndex('punit', 'mm', 0);
model.study('std9').feature('param').setIndex('plistarr', 1.6, 1);
model.study('std9').feature('param').setIndex('punit', 'mm', 1);
model.study('std9').feature('param').setIndex('pname', 'alpha_x', 2);
model.study('std9').feature('param').setIndex('plistarr', '', 2);
model.study('std9').feature('param').setIndex('punit', '1/K', 2);
model.study('std9').feature('param').setIndex('pname', 'alpha_x', 2);
model.study('std9').feature('param').setIndex('plistarr', '', 2);
model.study('std9').feature('param').setIndex('punit', '1/K', 2);
model.study('std9').feature('param').setIndex('pname', 'b0', 2);
model.study('std9').feature('param').setIndex('plistarr', 0.95, 2);
model.study('std9').feature('param').setIndex('punit', 'mm', 2);
model.study('std9').feature('param').setIndex('pname', 'alpha_x', 3);
model.study('std9').feature('param').setIndex('plistarr', '', 3);
model.study('std9').feature('param').setIndex('punit', '1/K', 3);
model.study('std9').feature('param').setIndex('pname', 'alpha_x', 3);
model.study('std9').feature('param').setIndex('plistarr', '', 3);
model.study('std9').feature('param').setIndex('punit', '1/K', 3);
model.study('std9').feature('param').setIndex('pname', 'rho0', 3);
model.study('std9').feature('param').setIndex('plistarr', '1000/(1.3*1.6*1.9)', 3);

model.batch.create('p6', 'Parametric');
model.batch('p6').study('std9');
model.batch('p6').create('so1', 'Solutionseq');
model.batch('p6').feature('so1').set('seq', 'sol45');
model.batch('p6').feature('so1').set('store', 'on');
model.batch('p6').feature('so1').set('clear', 'on');
model.batch('p6').feature('so1').set('psol', 'none');
model.batch('p6').set('pname', {'L0' 'a0' 'b0' 'rho0'});
model.batch('p6').set('plistarr', {'13' '1.6' '0.95' '1000/(1.3*1.6*1.9)'});
model.batch('p6').set('sweeptype', 'sparse');
model.batch('p6').set('probesel', 'all');
model.batch('p6').set('probes', {});
model.batch('p6').set('plot', 'off');
model.batch('p6').set('err', 'on');
model.batch('p6').attach('std9');
model.batch('p6').set('control', 'param');

model.sol.create('sol46');
model.sol('sol46').study('std9');
model.sol('sol46').label('Parametric Solutions 6');

model.batch('p6').feature('so1').set('psol', 'sol46');
model.batch('p6').run('compute');

model.result.create('pg9', 'PlotGroup3D');
model.result('pg9').run;
model.result('pg9').set('data', 'dset18');
model.result('pg9').create('vol1', 'Volume');
model.result('pg9').feature('vol1').create('def1', 'Deform');
model.result('pg9').run;
model.result('pg9').feature('vol1').feature('def1').set('scaleactive', true);
model.result('pg9').feature('vol1').feature('def1').set('scale', 1);
model.result('pg9').run;
model.result('pg9').run;
model.result('pg9').set('titletype', 'none');
model.result('pg9').set('edges', false);
model.result('pg9').set('plotarrayenable', true);
model.result('pg9').set('arrayaxis', 'y');
model.result('pg9').set('relpadding', 1.5);
model.result('pg9').feature('vol1').set('arraydim', '1');
model.result('pg9').run;
model.result('pg9').feature.duplicate('vol2', 'vol1');
model.result('pg9').feature('vol2').set('arraydim', '1');
model.result('pg9').run;
model.result('pg9').feature('vol2').set('data', 'dset20');
model.result('pg9').run;
model.result('pg9').feature('vol2').feature.remove('def1');
model.result('pg9').feature('vol2').set('arraydim', '1');
model.result('pg9').run;
model.result('pg9').feature('vol2').set('expr', '1');
model.result('pg9').feature('vol2').set('coloring', 'uniform');
model.result('pg9').feature('vol2').set('color', 'gray');
model.result('pg9').run;
model.result('pg9').create('line1', 'Line');
model.result('pg9').feature('line1').set('arraydim', '1');
model.result('pg9').feature('line1').set('manualindexing', true);
model.result('pg9').feature('line1').set('expr', '1');
model.result('pg9').feature('line1').set('coloring', 'uniform');
model.result('pg9').feature('line1').set('color', 'black');
model.result('pg9').run;
model.result('pg9').run;
model.result.move('pg9', 7);
model.result('pg9').label('Thermal Expansion vs. Modified Geometry');
model.result('pg9').feature('vol1').set('arraydim', '1');
model.result('pg9').run;
model.result('pg9').feature('vol1').label('Thermal Expansion');
model.result('pg9').feature('vol2').set('arraydim', '1');
model.result('pg9').run;
model.result('pg9').feature('vol2').label('Modified Geometry');
model.result('pg9').feature('line1').set('arraydim', '1');
model.result('pg9').run;
model.result('pg9').feature('line1').label('Thermal Expansion, Undeformed');
model.result('pg9').run;
model.result('pg9').set('view', 'view4');
model.result.evaluationGroup.create('eg3', 'EvaluationGroup');

model.nodeGroup('grp2').add('evaluationgroup', 'eg3');

model.result.evaluationGroup('eg3').label('dT=30000[K] vs. Modified Geometry');
model.result.evaluationGroup('eg3').set('data', 'dset19');
model.result.evaluationGroup('eg3').set('concatenation', 'vertical');
model.result.evaluationGroup('eg3').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg3').feature('gev1').set('data', 'dset17');
model.result.evaluationGroup('eg3').feature('gev1').setIndex('looplevelinput', 'first', 0);
model.result.evaluationGroup('eg3').feature('gev1').label('First Bending (z)');
model.result.evaluationGroup('eg3').feature('gev1').setIndex('expr', 'freq/withsol(''sol45'',freq,setind(lambda,1))', 0);
model.result.evaluationGroup('eg3').feature.duplicate('gev2', 'gev1');
model.result.evaluationGroup('eg3').feature('gev2').setIndex('looplevelinput', 'manualindices', 0);
model.result.evaluationGroup('eg3').feature('gev2').setIndex('looplevelindices', 2, 0);
model.result.evaluationGroup('eg3').feature('gev2').setIndex('expr', 'freq/withsol(''sol45'',freq,setind(lambda,2))', 0);
model.result.evaluationGroup('eg3').feature('gev2').label('First Bending (y)');
model.result.evaluationGroup('eg3').feature.duplicate('gev3', 'gev2');
model.result.evaluationGroup('eg3').feature('gev3').label('First Twisting');
model.result.evaluationGroup('eg3').feature('gev3').setIndex('looplevelindices', 5, 0);
model.result.evaluationGroup('eg3').feature('gev3').setIndex('expr', 'freq/withsol(''sol45'',freq,setind(lambda,5))', 0);
model.result.evaluationGroup('eg3').feature.duplicate('gev4', 'gev3');
model.result.evaluationGroup('eg3').feature('gev4').label('First Axial');
model.result.evaluationGroup('eg3').feature('gev4').setIndex('looplevelindices', 7, 0);
model.result.evaluationGroup('eg3').feature('gev4').setIndex('expr', 'freq/withsol(''sol45'',freq,setind(lambda,7))', 0);
model.result.evaluationGroup('eg3').run;
model.result('pg2').run;

model.title('Eigenfrequency Shifts Caused by Temperature Changes');

model.description('This example explores the shift in natural frequencies caused by changing the temperature. One study investigates a doubly clamped beam where both ends are fixed, while a second study looks at a cantilever beam where only one end is fixed. Effects related to stress stiffening, change in size, constraint expansion and temperature-dependent material properties are investigated. The results show that the clamped beam is dominated by stress softening where constrained expansion causes compressive stresses. On the other hand, the cantilever beam shows a very good fit to analytical values based on the small changes in geometry caused by the thermal expansion. The temperature dependence of Young''s modulus is shown to be an important factor in this latter case.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;
model.sol('sol8').clearSolutionData;
model.sol('sol9').clearSolutionData;
model.sol('sol10').clearSolutionData;
model.sol('sol11').clearSolutionData;
model.sol('sol12').clearSolutionData;
model.sol('sol13').clearSolutionData;
model.sol('sol14').clearSolutionData;
model.sol('sol15').clearSolutionData;
model.sol('sol16').clearSolutionData;
model.sol('sol17').clearSolutionData;
model.sol('sol18').clearSolutionData;
model.sol('sol19').clearSolutionData;
model.sol('sol20').clearSolutionData;
model.sol('sol21').clearSolutionData;
model.sol('sol22').clearSolutionData;
model.sol('sol23').clearSolutionData;
model.sol('sol24').clearSolutionData;
model.sol('sol25').clearSolutionData;
model.sol('sol26').clearSolutionData;
model.sol('sol27').clearSolutionData;
model.sol('sol28').clearSolutionData;
model.sol('sol29').clearSolutionData;
model.sol('sol30').clearSolutionData;
model.sol('sol31').clearSolutionData;
model.sol('sol32').clearSolutionData;
model.sol('sol33').clearSolutionData;
model.sol('sol34').clearSolutionData;
model.sol('sol35').clearSolutionData;
model.sol('sol36').clearSolutionData;
model.sol('sol37').clearSolutionData;
model.sol('sol38').clearSolutionData;
model.sol('sol39').clearSolutionData;
model.sol('sol40').clearSolutionData;
model.sol('sol41').clearSolutionData;
model.sol('sol42').clearSolutionData;
model.sol('sol43').clearSolutionData;
model.sol('sol44').clearSolutionData;
model.sol('sol45').clearSolutionData;
model.sol('sol46').clearSolutionData;
model.sol('sol47').clearSolutionData;

model.label('frequency_shift_temperature_changes.mph');

model.modelNode.label('Components');

out = model;
