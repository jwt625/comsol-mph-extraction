function out = model
%
% forced_vibration_of_a_composite_laminate.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Composite_Materials_Module/Dynamics_and_Vibration');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('lshell', 'LayeredShell', 'geom1');
model.physics('lshell').model('comp1');

model.study.create('std1');
model.study('std1').create('freq', 'Frequency');
model.study('std1').feature('freq').setSolveFor('/physics/lshell', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('D_11', '141.34[GPa]', 'Lamina elasticity matrix, 11 component');
model.param.set('D_12', '3.35[GPa]', 'Lamina elasticity matrix, 12 component');
model.param.set('D_13', 'D_12', 'Lamina elasticity matrix, 13 component');
model.param.set('D_22', '10.25[GPa]', 'Lamina elasticity matrix, 22 component');
model.param.set('D_23', '2.83[GPa]', 'Lamina elasticity matrix, 23 component');
model.param.set('D_33', 'D_22', 'Lamina elasticity matrix, 33 component');
model.param.set('D_44', '4.52[GPa]', 'Lamina elasticity matrix, 44 component');
model.param.set('D_55', '2.95[GPa]', 'Lamina elasticity matrix, 55 component');
model.param.set('D_66', 'D_44', 'Lamina elasticity matrix, 66 component');
model.param.set('rho_l', '1520[kg/m^3]', 'Lamina density');
model.param.set('th', '0.5[mm]', 'Lamina thickness');
model.param.set('F', '1[N]', 'Unit load');

model.material.create('mat1', 'Common', '');
model.material('mat1').label(['Material: Carbon' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Epoxy']);
model.material.create('lmat1', 'LayeredMaterial', '');
model.material('lmat1').label('Layered Material: [90/45/0]');
model.material('lmat1').setIndex('rotation', 90, 0);
model.material('lmat1').setIndex('thickness', 'th', 0);
model.material('lmat1').setIndex('meshPoints', 1, 0);
model.material('lmat1').setIndex('layername', 'Layer 2', 1);
model.material('lmat1').setIndex('link', 'mat1', 1);
model.material('lmat1').setIndex('rotation', 90, 1);
model.material('lmat1').setIndex('thickness', 'th', 1);
model.material('lmat1').setIndex('meshPoints', 1, 1);
model.material('lmat1').setIndex('tag', 'lmat1_2', 1);
model.material('lmat1').setIndex('layername', 'Layer 2', 1);
model.material('lmat1').setIndex('link', 'mat1', 1);
model.material('lmat1').setIndex('rotation', 90, 1);
model.material('lmat1').setIndex('thickness', 'th', 1);
model.material('lmat1').setIndex('meshPoints', 1, 1);
model.material('lmat1').setIndex('tag', 'lmat1_2', 1);
model.material('lmat1').setIndex('layername', 'Layer 3', 2);
model.material('lmat1').setIndex('link', 'mat1', 2);
model.material('lmat1').setIndex('rotation', 90, 2);
model.material('lmat1').setIndex('thickness', 'th', 2);
model.material('lmat1').setIndex('meshPoints', 1, 2);
model.material('lmat1').setIndex('tag', 'lmat1_3', 2);
model.material('lmat1').setIndex('layername', 'Layer 3', 2);
model.material('lmat1').setIndex('link', 'mat1', 2);
model.material('lmat1').setIndex('rotation', 90, 2);
model.material('lmat1').setIndex('thickness', 'th', 2);
model.material('lmat1').setIndex('meshPoints', 1, 2);
model.material('lmat1').setIndex('tag', 'lmat1_3', 2);
model.material('lmat1').setIndex('rotation', 45, 1);
model.material('lmat1').setIndex('rotation', 0, 2);
model.material('lmat1').set('widthRatio', 0.6);

model.variable.create('var1');
model.variable('var1').model('comp1');

model.geom('geom1').run;

model.variable('var1').set('vel_z', 'abs(lshell.u_tZ)');
model.variable('var1').descr('vel_z', 'Transverse velocity, amplitude');
model.variable('var1').set('Z_z', 'abs(F/lshell.u_tZ)');
model.variable('var1').descr('Z_z', 'Impedance, amplitude');

model.coordSystem('sys1').set('mastercoordsystcomp', '1');

model.geom('geom1').create('wp1', 'WorkPlane');
model.geom('geom1').feature('wp1').set('unite', true);
model.geom('geom1').feature('wp1').geom.create('r1', 'Rectangle');
model.geom('geom1').feature('wp1').geom.feature('r1').set('size', {'300[mm]' '100[mm]'});
model.geom('geom1').feature('wp1').geom.run('r1');
model.geom('geom1').feature('wp1').geom.create('arr1', 'Array');
model.geom('geom1').feature('wp1').geom.feature('arr1').selection('input').set({'r1'});
model.geom('geom1').feature('wp1').geom.feature('arr1').set('fullsize', [1 3]);
model.geom('geom1').feature('wp1').geom.feature('arr1').set('displ', {'0' '150[mm]'});
model.geom('geom1').feature('wp1').geom.run('arr1');
model.geom('geom1').feature('wp1').geom.create('c1', 'Circle');
model.geom('geom1').feature('wp1').geom.feature('c1').set('r', '30[mm]');
model.geom('geom1').feature('wp1').geom.feature('c1').set('pos', {'150[mm]' '200[mm]'});
model.geom('geom1').feature('wp1').geom.feature('c1').set('rot', 180);
model.geom('geom1').feature('wp1').geom.feature.duplicate('c2', 'c1');
model.geom('geom1').feature('wp1').geom.feature('c2').set('angle', 180);
model.geom('geom1').feature('wp1').geom.feature('c2').set('pos', {'100[mm]' '400[mm]'});
model.geom('geom1').feature('wp1').geom.feature.duplicate('c3', 'c2');
model.geom('geom1').feature('wp1').geom.feature('c3').set('pos', {'200[mm]' '300[mm]'});
model.geom('geom1').feature('wp1').geom.feature('c3').set('rot', 0);
model.geom('geom1').feature('wp1').geom.run('c3');
model.geom('geom1').run('fin');

model.material.create('llmat1', 'LayeredMaterialLink', 'comp1');

model.physics('lshell').feature('lemm1').set('SolidModel', 'Anisotropic');

model.material('mat1').propertyGroup.create('Anisotropic', 'Anisotropic');
model.material('mat1').propertyGroup('Anisotropic').set('D', {'D_11' 'D_12' 'D_22' 'D_13' 'D_23' 'D_33' '0' '0' '0' 'D_44'  ...
'0' '0' '0' '0' 'D_55' '0' '0' '0' '0' '0'  ...
'D_66'});
model.material('mat1').propertyGroup('def').set('density', {'rho_l'});

model.physics('lshell').prop('LayerSelection').set('bndType', 'allShell');
model.physics('lshell').create('del1', 'Delamination', 2);
model.physics('lshell').feature('del1').selection.set([4 5 6]);

model.view('view1').set('showgrid', false);

model.physics('lshell').feature('del1').set('applyTo', 'select');
model.physics('lshell').feature('del1').set('shelllist_lCheck', {'0' '0' '0' '0'});
model.physics('lshell').feature('del1').setIndex('shelllist_lCheck', 1, 2, 0);
model.physics('lshell').feature('del1').set('InitialState', 'Delaminated');
model.physics('lshell').feature('del1').set('pn', '1e-3*lshell.Eequ/lshell.d_ad');
model.physics('lshell').create('fix1', 'Fixed', 1);
model.physics('lshell').feature('fix1').selection.set([1 4 7]);
model.physics('lshell').create('ll1', 'LineLoad', 0);
model.physics('lshell').feature('ll1').label('Line Load, Point-A');
model.physics('lshell').feature('ll1').selection.set([19 21 23]);
model.physics('lshell').feature('ll1').set('LoadType', 'TotalForce');
model.physics('lshell').feature('ll1').set('Ftot', {'0' '0' 'F'});
model.physics('lshell').feature.duplicate('ll2', 'll1');
model.physics('lshell').feature('ll2').label('Line Load, Point-B: [Bending]');
model.physics('lshell').feature('ll2').selection.set([20 22 24]);
model.physics('lshell').feature.duplicate('ll3', 'll2');
model.physics('lshell').feature('ll3').label('Line Load, Point-B: [Twisting]');
model.physics('lshell').feature('ll3').set('Ftot', {'0' '0' '-F'});

model.mesh('mesh1').autoMeshSize(2);
model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.all;
model.mesh('mesh1').feature('ftri1').create('size1', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size1').selection.set([4 5 6]);
model.mesh('mesh1').feature('ftri1').feature('size1').set('hauto', 1);
model.mesh('mesh1').run;

model.study('std1').label('Study: Bending Load');
model.study('std1').feature('freq').set('plist', 'range(1,5,501)');
model.study('std1').feature('freq').set('useadvanceddisable', true);
model.study('std1').feature('freq').set('disabledphysics', {'lshell/ll3'});

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(1,5,501)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'Default');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.dataset.create('dset1lshelllshl', 'LayeredMaterial');
model.result.dataset('dset1lshelllshl').set('data', 'dset1');
model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'dset1lshelllshl');
model.result('pg1').setIndex('looplevel', 101, 0);
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (lshell)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').set('showlegends', true);
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'lshell.misesGp_peak'});
model.result('pg1').feature('surf1').set('threshold', 'manual');
model.result('pg1').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg1').feature('surf1').set('colortable', 'Rainbow');
model.result('pg1').feature('surf1').set('colortabletrans', 'none');
model.result('pg1').feature('surf1').set('colorscalemode', 'linear');
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg1').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg1').feature('surf1').feature('def').set('descr', 'Displacement field (material and geometry frames)');
model.result('pg1').run;
model.result.dataset.create('cpt1', 'CutPoint3D');
model.result.dataset('cpt1').label('Cut Point 3D: A');
model.result.dataset('cpt1').set('data', 'dset1lshelllshl');
model.result.dataset('cpt1').set('pointx', '0.3 0.3 0.3');
model.result.dataset('cpt1').set('pointy', '0 0.15 0.3');
model.result.dataset('cpt1').set('pointz', '0 0 0');
model.result.dataset.duplicate('cpt2', 'cpt1');
model.result.dataset('cpt2').label('Cut Point 3D: B');
model.result.dataset('cpt2').set('pointy', '0.1 0.25 0.4');
model.result.dataset.duplicate('cpt3', 'cpt2');
model.result.dataset('cpt3').label('Cut Point 3D: C');
model.result.dataset('cpt3').set('pointx', '0.25 0.25 0.25');
model.result.dataset('cpt3').set('pointy', '0.07 0.22 0.37');
model.result('pg1').run;
model.result('pg1').run;
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 101, 0);
model.result('pg2').set('defaultPlotID', 'stressSlice');
model.result('pg2').label('Stress, Slice (lshell)');
model.result('pg2').set('showlegends', true);
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').create('lss1', 'LayeredMaterialSlice');
model.result('pg2').feature('lss1').set('expr', {'lshell.misesGp_peak'});
model.result('pg2').feature('lss1').set('threshold', 'manual');
model.result('pg2').feature('lss1').set('thresholdvalue', 0.2);
model.result('pg2').feature('lss1').set('colortable', 'Prism');
model.result('pg2').feature('lss1').set('colortabletrans', 'none');
model.result('pg2').feature('lss1').set('colorscalemode', 'linear');
model.result('pg2').feature('lss1').set('locdef', 'relative');
model.result('pg2').feature('lss1').set('localzrel', 'lshell.z');
model.result('pg2').feature('lss1').create('def', 'Deform');
model.result('pg2').feature('lss1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg2').feature('lss1').feature('def').set('descr', 'Displacement field (material and geometry frames)');
model.result('pg2').label('Stress, Slice (lshell)');
model.result('pg2').run;
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').set('data', 'dset1');
model.result('pg3').set('defaultPlotID', 'stressThroughThickness');
model.result('pg3').set('showlegends', true);
model.result('pg3').create('thr1', 'ThroughThickness');
model.result('pg3').feature('thr1').set('expr', {'lshell.misesGp_peak'});
model.result('pg3').feature('thr1').set('legend', true);
model.result('pg3').feature('thr1').set('posentry', 'selection');
model.result('pg3').feature('thr1').selection.geom('geom1', 0);
model.result('pg3').feature('thr1').selection.set([1]);
model.result('pg3').label('Stress, Through Thickness (lshell)');
model.result('pg3').setIndex('looplevelinput', 'last', 0);
model.result('pg3').label('Stress, Through Thickness (lshell)');
model.result('pg3').run;
model.result('pg3').setIndex('looplevelinput', 'manualindices', 0);
model.result('pg3').setIndex('looplevelindices', 101, 0);
model.result('pg3').set('legendpos', 'lowerright');
model.result('pg3').run;
model.result('pg3').feature('thr1').selection.set([2 4 6]);
model.result('pg3').feature('thr1').set('includeinterfaces', 'all');
model.result('pg3').feature('thr1').set('legendmethod', 'manual');
model.result('pg3').feature('thr1').setIndex('legends', 'First case', 0);
model.result('pg3').feature('thr1').setIndex('legends', 'Second case', 1);
model.result('pg3').feature('thr1').setIndex('legends', 'Third case', 2);
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Impedance, Point A [Bending Load]');
model.result('pg4').set('data', 'cpt1');
model.result('pg4').set('ylog', true);
model.result('pg4').create('ptgr1', 'PointGraph');
model.result('pg4').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg4').feature('ptgr1').set('linewidth', 'preference');
model.result('pg4').feature('ptgr1').set('expr', 'Z_z');
model.result('pg4').feature('ptgr1').set('linestyle', 'cycle');
model.result('pg4').feature('ptgr1').set('legend', true);
model.result('pg4').feature('ptgr1').set('legendmethod', 'manual');
model.result('pg4').feature('ptgr1').setIndex('legends', 'First case', 0);
model.result('pg4').feature('ptgr1').setIndex('legends', 'Second case', 1);
model.result('pg4').feature('ptgr1').setIndex('legends', 'Third case', 2);
model.result('pg4').run;
model.result('pg4').run;
model.result.duplicate('pg5', 'pg4');
model.result('pg5').run;
model.result('pg5').label('Impedance, Point B [Bending Load]');
model.result('pg5').set('data', 'cpt2');
model.result('pg5').run;
model.result.duplicate('pg6', 'pg5');
model.result('pg6').run;
model.result('pg6').label('Velocity, Point C [Bending Load]');
model.result('pg6').set('data', 'cpt3');
model.result('pg6').set('legendpos', 'upperleft');
model.result('pg6').run;
model.result('pg6').feature('ptgr1').set('expr', 'vel_z');
model.result('pg6').run;
model.result.export.create('anim1', 'Animation');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('fontsize', '9');
model.result.export('anim1').set('colortheme', 'globaltheme');
model.result.export('anim1').set('customcolor', [1 1 1]);
model.result.export('anim1').set('background', 'color');
model.result.export('anim1').set('gltfincludelines', 'on');
model.result.export('anim1').set('title1d', 'on');
model.result.export('anim1').set('legend1d', 'on');
model.result.export('anim1').set('logo1d', 'on');
model.result.export('anim1').set('options1d', 'on');
model.result.export('anim1').set('title2d', 'on');
model.result.export('anim1').set('legend2d', 'on');
model.result.export('anim1').set('logo2d', 'on');
model.result.export('anim1').set('options2d', 'off');
model.result.export('anim1').set('title3d', 'on');
model.result.export('anim1').set('legend3d', 'on');
model.result.export('anim1').set('logo3d', 'on');
model.result.export('anim1').set('options3d', 'off');
model.result.export('anim1').set('axisorientation', 'on');
model.result.export('anim1').set('grid', 'on');
model.result.export('anim1').set('axes1d', 'on');
model.result.export('anim1').set('axes2d', 'on');
model.result.export('anim1').set('showgrid', 'on');
model.result.export('anim1').showFrame;
model.result.export('anim1').label('Animation [Bending Load]');
model.result.export('anim1').set('sweeptype', 'dde');
model.result.export('anim1').set('showframe', 25);
model.result.export('anim1').run;

model.study.create('std2');
model.study('std2').create('freq', 'Frequency');
model.study('std2').feature('freq').setSolveFor('/physics/lshell', true);
model.study('std2').label('Study: Twisting Load');
model.study('std2').feature('freq').set('plist', 'range(1,5,501)');
model.study('std2').feature('freq').set('useadvanceddisable', true);
model.study('std2').feature('freq').set('disabledphysics', {'lshell/ll2'});

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'freq');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'freq');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('p1', 'Parametric');
model.sol('sol2').feature('s1').feature.remove('pDef');
model.sol('sol2').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol2').feature('s1').feature('p1').set('plistarr', {'range(1,5,501)'});
model.sol('sol2').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol2').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol2').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol2').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol2').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol2').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol2').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol2').feature('s1').feature('p1').set('probes', {});
model.sol('sol2').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol2').feature('s1').set('linpmethod', 'sol');
model.sol('sol2').feature('s1').set('linpsol', 'zero');
model.sol('sol2').feature('s1').set('control', 'freq');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result.dataset.create('dset2lshelllshl', 'LayeredMaterial');
model.result.dataset('dset2lshelllshl').set('data', 'dset2');
model.result.create('pg7', 'PlotGroup3D');
model.result('pg7').set('data', 'dset2lshelllshl');
model.result('pg7').setIndex('looplevel', 101, 0);
model.result('pg7').set('defaultPlotID', 'stress');
model.result('pg7').label('Stress (lshell) 1');
model.result('pg7').set('frametype', 'spatial');
model.result('pg7').set('showlegends', true);
model.result('pg7').create('surf1', 'Surface');
model.result('pg7').feature('surf1').set('expr', {'lshell.misesGp_peak'});
model.result('pg7').feature('surf1').set('threshold', 'manual');
model.result('pg7').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg7').feature('surf1').set('colortable', 'Rainbow');
model.result('pg7').feature('surf1').set('colortabletrans', 'none');
model.result('pg7').feature('surf1').set('colorscalemode', 'linear');
model.result('pg7').feature('surf1').set('colortable', 'Prism');
model.result('pg7').feature('surf1').create('def', 'Deform');
model.result('pg7').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg7').feature('surf1').feature('def').set('descr', 'Displacement field (material and geometry frames)');
model.result('pg7').run;
model.result.dataset.duplicate('cpt4', 'cpt1');
model.result.dataset('cpt4').set('data', 'dset2lshelllshl');
model.result.dataset.duplicate('cpt5', 'cpt2');
model.result.dataset('cpt5').set('data', 'dset2lshelllshl');
model.result.dataset.duplicate('cpt6', 'cpt3');
model.result.dataset('cpt6').set('data', 'dset2lshelllshl');
model.result('pg7').run;
model.result('pg7').run;
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').set('data', 'dset2');
model.result('pg8').setIndex('looplevel', 101, 0);
model.result('pg8').set('defaultPlotID', 'stressSlice');
model.result('pg8').label('Stress, Slice (lshell) 1');
model.result('pg8').set('showlegends', true);
model.result('pg8').set('frametype', 'spatial');
model.result('pg8').create('lss1', 'LayeredMaterialSlice');
model.result('pg8').feature('lss1').set('expr', {'lshell.misesGp_peak'});
model.result('pg8').feature('lss1').set('threshold', 'manual');
model.result('pg8').feature('lss1').set('thresholdvalue', 0.2);
model.result('pg8').feature('lss1').set('colortable', 'Prism');
model.result('pg8').feature('lss1').set('colortabletrans', 'none');
model.result('pg8').feature('lss1').set('colorscalemode', 'linear');
model.result('pg8').feature('lss1').set('locdef', 'relative');
model.result('pg8').feature('lss1').set('localzrel', 'lshell.z');
model.result('pg8').feature('lss1').create('def', 'Deform');
model.result('pg8').feature('lss1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg8').feature('lss1').feature('def').set('descr', 'Displacement field (material and geometry frames)');
model.result('pg8').label('Stress, Slice (lshell) 1');
model.result('pg8').run;
model.result('pg8').run;
model.result.create('pg9', 'PlotGroup1D');
model.result('pg9').set('data', 'dset2');
model.result('pg9').set('defaultPlotID', 'stressThroughThickness');
model.result('pg9').set('showlegends', true);
model.result('pg9').create('thr1', 'ThroughThickness');
model.result('pg9').feature('thr1').set('expr', {'lshell.misesGp_peak'});
model.result('pg9').feature('thr1').set('legend', true);
model.result('pg9').feature('thr1').set('posentry', 'selection');
model.result('pg9').feature('thr1').selection.geom('geom1', 0);
model.result('pg9').feature('thr1').selection.set([1]);
model.result('pg9').label('Stress, Through Thickness (lshell) 1');
model.result('pg9').setIndex('looplevelinput', 'last', 0);
model.result('pg9').label('Stress, Through Thickness (lshell) 1');
model.result('pg9').run;
model.result('pg9').setIndex('looplevelinput', 'manualindices', 0);
model.result('pg9').setIndex('looplevelindices', 101, 0);
model.result('pg9').set('legendpos', 'lowerright');
model.result('pg9').run;
model.result('pg9').feature('thr1').selection.set([2 4 6]);
model.result('pg9').feature('thr1').set('includeinterfaces', 'all');
model.result('pg9').run;
model.result('pg4').run;
model.result.duplicate('pg10', 'pg4');
model.result('pg10').run;
model.result('pg10').label('Impedance, Point A [Twisting Load]');
model.result('pg10').set('data', 'cpt4');
model.result('pg10').run;
model.result('pg5').run;
model.result.duplicate('pg11', 'pg5');
model.result('pg11').run;
model.result('pg11').label('Impedance, Point B [Twisting Load]');
model.result('pg11').set('data', 'cpt5');
model.result('pg11').run;
model.result('pg6').run;
model.result.duplicate('pg12', 'pg6');
model.result('pg12').run;
model.result('pg12').label('Velocity, Point C [Twisting Load]');
model.result('pg12').set('data', 'cpt6');
model.result('pg12').run;
model.result('pg1').run;

model.nodeGroup.create('grp1', 'Results');
model.nodeGroup('grp1').set('type', 'plotgroup');
model.nodeGroup('grp1').add('plotgroup', 'pg1');
model.nodeGroup('grp1').add('plotgroup', 'pg2');
model.nodeGroup('grp1').add('plotgroup', 'pg3');
model.nodeGroup('grp1').add('plotgroup', 'pg4');
model.nodeGroup('grp1').add('plotgroup', 'pg5');
model.nodeGroup('grp1').add('plotgroup', 'pg6');
model.nodeGroup('grp1').label('Bending Load');

model.result('pg7').run;

model.nodeGroup.create('grp2', 'Results');
model.nodeGroup('grp2').set('type', 'plotgroup');
model.nodeGroup.move('grp2', 1);
model.nodeGroup('grp2').add('plotgroup', 'pg7');
model.nodeGroup('grp2').add('plotgroup', 'pg8');
model.nodeGroup('grp2').add('plotgroup', 'pg9');
model.nodeGroup('grp2').add('plotgroup', 'pg10');
model.nodeGroup('grp2').add('plotgroup', 'pg11');
model.nodeGroup('grp2').add('plotgroup', 'pg12');
model.nodeGroup('grp2').label('Twisting Load');

model.result.export('anim1').showFrame;
model.result.export.duplicate('anim2', 'anim1');
model.result.export('anim2').showFrame;
model.result.export('anim2').label('Animation [Twisting Load]');
model.result.export('anim2').set('plotgroup', 'pg7');
model.result.export('anim2').run;
model.result('pg2').run;

model.title('Forced Vibration Analysis of a Composite Laminate');

model.description(['This example demonstrates the forced vibration analysis of a composite laminate under bending and twisting loads. The composite laminate considered for this analysis is made of carbon' native2unicode(hex2dec({'20' '13'}), 'unicode') 'epoxy material and has three layers with angle-ply layup.' newline  newline 'This model computes the structural impedance as a function of frequency at various positions. The effect of different types of delamination on the structural impedance is also analyzed. The presence of delamination is the modeled using the Layerwise (LW) theory of modeling composite laminates.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('forced_vibration_of_a_composite_laminate.mph');

model.modelNode.label('Components');

out = model;
