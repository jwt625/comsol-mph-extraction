function out = model
%
% plate_reactor.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Chemical_Reaction_Engineering_Module/Reactors_with_Mass_and_Heat_Transfer');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('spf', 'LaminarFlow', 'geom1');
model.physics('spf').model('comp1');
model.physics.create('chem', 'Chemistry', 'geom1');
model.physics('chem').model('comp1');
model.physics.create('ht', 'HeatTransferInFluids', 'geom1');
model.physics('ht').model('comp1');
model.physics.create('tds', 'DilutedSpecies', 'geom1', {'cA' 'cB' 'cD' 'cU'});

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/spf', true);
model.study('std1').feature('stat').setSolveFor('/physics/chem', true);
model.study('std1').feature('stat').setSolveFor('/physics/ht', true);
model.study('std1').feature('stat').setSolveFor('/physics/tds', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('T0', '300[K]', 'Initial temperature');
model.param.set('D', '1e-7[m^2/s]', 'Diffusivity');
model.param.set('U1', '2e-3[m/s]', 'Velocity, inlet 1');
model.param.set('U2', '1e-3[m/s]', 'Velocity, inlet 2');
model.param.set('cA1', '2[mol/m^3]', 'Concentration A, inlet 1');
model.param.set('cB1', '2[mol/m^3]', 'Concentration B, inlet 1');
model.param.set('cB2', '2[mol/m^3]', 'Concentration B, inlet 2');
model.param.set('csolv', '55500[mol/m^3]', 'Concentration solvent (water)');
model.param.set('Af1', '1e4[m^3/(mol*s)]', 'Frequency factor');
model.param.set('Ef1', '4e4[J/mol]', 'Activation energy');
model.param.set('Af2', '1e7[m^3/(mol*s)]', 'Frequency factor');
model.param.set('Ef2', '6e4[J/mol]', 'Activation energy');
model.param.set('H1', '-1.1e5[J/mol]', 'Enthalpy of reaction');
model.param.set('H2', '-1e6[J/mol]', 'Enthalpy of reaction');
model.param.set('hx', '1000[W/(m^2*K)]', 'Heat transfer coefficient');
model.param.set('Mn_A', '0.032[kg/mol]', 'Molar mass, A');
model.param.set('Mn_B', '0.032[kg/mol]', 'Molar mass, B');
model.param.set('Mn_D', '0.064[kg/mol]', 'Molar mass, D');
model.param.set('Mn_U', '0.096[kg/mol]', 'Molar mass, U');
model.param.set('Mn_solv', '0.018[kg/mol]', 'Molar mass, solvent (water)');

model.geom('geom1').insertFile('plate_reactor_geom_sequence.mph', 'geom1');
model.geom('geom1').run('mcf1');

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').set('Q_exch1', '(T0-5-T)*hx');
model.variable('var1').descr('Q_exch1', 'Heat exchange flux');
model.variable('var1').set('Q_exch2', '(T0-20-T)*hx');
model.variable('var1').descr('Q_exch2', 'Heat exchange flux');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('rho', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('cs', 'Interpolation');
model.material('mat1').propertyGroup('def').func.create('an1', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an2', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an3', 'Analytic');
model.material('mat1').label('Water');
model.material('mat1').set('family', 'water');
model.material('mat1').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('eta').set('pieces', {'273.15' '413.15' '1.3799566804-0.021224019151*T^1+1.3604562827E-4*T^2-4.6454090319E-7*T^3+8.9042735735E-10*T^4-9.0790692686E-13*T^5+3.8457331488E-16*T^6'; '413.15' '553.75' '0.00401235783-2.10746715E-5*T^1+3.85772275E-8*T^2-2.39730284E-11*T^3'});
model.material('mat1').propertyGroup('def').func('eta').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('Cp').set('pieces', {'273.15' '553.75' '12010.1471-80.4072879*T^1+0.309866854*T^2-5.38186884E-4*T^3+3.62536437E-7*T^4'});
model.material('mat1').propertyGroup('def').func('Cp').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('def').func('rho').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('rho').set('smooth', 'contd1');
model.material('mat1').propertyGroup('def').func('rho').set('pieces', {'273.15' '293.15' '0.000063092789034*T^3-0.060367639882855*T^2+18.9229382407066*T-950.704055329848'; '293.15' '373.15' '0.000010335053319*T^3-0.013395065634452*T^2+4.969288832655160*T+432.257114008512'});
model.material('mat1').propertyGroup('def').func('rho').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.material('mat1').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('k').set('pieces', {'273.15' '553.75' '-0.869083936+0.00894880345*T^1-1.58366345E-5*T^2+7.97543259E-9*T^3'});
model.material('mat1').propertyGroup('def').func('k').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.material('mat1').propertyGroup('def').func('cs').set('table', {'273' '1403';  ...
'278' '1427';  ...
'283' '1447';  ...
'293' '1481';  ...
'303' '1507';  ...
'313' '1526';  ...
'323' '1541';  ...
'333' '1552';  ...
'343' '1555';  ...
'353' '1555';  ...
'363' '1550';  ...
'373' '1543'});
model.material('mat1').propertyGroup('def').func('cs').set('interp', 'piecewisecubic');
model.material('mat1').propertyGroup('def').func('cs').set('fununit', {'m/s'});
model.material('mat1').propertyGroup('def').func('cs').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an1').label('Analytic ');
model.material('mat1').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.material('mat1').propertyGroup('def').func('an1').set('expr', '-1/rho(T)*d(rho(T),T)');
model.material('mat1').propertyGroup('def').func('an1').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('an1').set('fununit', '1/K');
model.material('mat1').propertyGroup('def').func('an1').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an1').set('plotfixedvalue', {'273.15'});
model.material('mat1').propertyGroup('def').func('an1').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an2').set('funcname', 'gamma_w');
model.material('mat1').propertyGroup('def').func('an2').set('expr', '1+(T/Cp(T))*(alpha_p(T)*cs(T))^2');
model.material('mat1').propertyGroup('def').func('an2').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('an2').set('fununit', '1');
model.material('mat1').propertyGroup('def').func('an2').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an2').set('plotfixedvalue', {'273.15'});
model.material('mat1').propertyGroup('def').func('an2').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an3').set('funcname', 'muB');
model.material('mat1').propertyGroup('def').func('an3').set('expr', '2.79*eta(T)');
model.material('mat1').propertyGroup('def').func('an3').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('an3').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('an3').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an3').set('plotfixedvalue', {'273.15'});
model.material('mat1').propertyGroup('def').func('an3').set('plotargs', {'T' '273.15' '553.75'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.material('mat1').propertyGroup('def').set('bulkviscosity', '');
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(T)' '0' '0' '0' 'alpha_p(T)' '0' '0' '0' 'alpha_p(T)'});
model.material('mat1').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.material('mat1').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.material('mat1').propertyGroup('def').set('ratioofspecificheat', 'gamma_w(T)');
model.material('mat1').propertyGroup('def').set('electricconductivity', {'5.5e-6[S/m]' '0' '0' '0' '5.5e-6[S/m]' '0' '0' '0' '5.5e-6[S/m]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.material('mat1').propertyGroup('def').set('density', 'rho(T)');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.material('mat1').propertyGroup('def').set('soundspeed', 'cs(T)');
model.material('mat1').propertyGroup('def').addInput('temperature');

model.physics('spf').prop('PhysicalModelProperty').set('Compressibility', 'WeaklyCompressible');
model.physics('spf').create('inl1', 'InletBoundary', 2);
model.physics('spf').feature('inl1').selection.named('geom1_sel1');
model.physics('spf').feature('inl1').set('BoundaryCondition', 'FullyDevelopedFlow');
model.physics('spf').feature('inl1').set('Uavfdf', 'U1');
model.physics('spf').create('inl2', 'InletBoundary', 2);
model.physics('spf').feature('inl2').selection.named('geom1_sel2');
model.physics('spf').feature('inl2').set('BoundaryCondition', 'FullyDevelopedFlow');
model.physics('spf').feature('inl2').set('Uavfdf', 'U2');
model.physics('spf').create('out1', 'OutletBoundary', 2);
model.physics('spf').feature('out1').selection.named('geom1_sel3');
model.physics('spf').feature('out1').set('NormalFlow', true);
model.physics('chem').prop('TPFeatureInput').set('T_src', 'root.comp1.T');
model.physics('chem').create('rch1', 'ReactionChem', 3);
model.physics('chem').feature('rch1').set('formula', 'A+B=>D');
model.physics('chem').feature('rch1').set('useArrhenius', true);
model.physics('chem').feature('rch1').set('Af', 'Af1');
model.physics('chem').feature('rch1').set('Ef', 'Ef1');
model.physics('chem').feature('rch1').set('ReactionEnthalpy', 'UserDefined');
model.physics('chem').feature('rch1').set('H', 'H1');
model.physics('chem').feature('A').set('M', 'Mn_A');
model.physics('chem').feature('B').set('M', 'Mn_B');
model.physics('chem').feature('D').set('M', 'Mn_D');
model.physics('chem').create('rch2', 'ReactionChem', 3);
model.physics('chem').feature('rch2').set('formula', 'D+B=>U');
model.physics('chem').feature('rch2').set('useArrhenius', true);
model.physics('chem').feature('rch2').set('Af', 'Af2');
model.physics('chem').feature('rch2').set('Ef', 'Ef2');
model.physics('chem').feature('rch2').set('ReactionEnthalpy', 'UserDefined');
model.physics('chem').feature('rch2').set('H', 'H2');
model.physics('chem').feature('U').set('enableChemicalFormulaCheckbox', false);
model.physics('chem').feature('U').set('M', 'Mn_U');
model.physics('chem').create('spec1', 'SpeciesChem', 3);
model.physics('chem').feature('spec1').set('specName', 'H2O');
model.physics('chem').prop('ChemistryModelInputParameter').set('MassTransfer', 'tds');
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'cA', 0, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'cB', 1, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'cD', 2, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'UserDefined', 3, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationValue', 'csolv', 3, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'cU', 4, 0);
model.physics('chem').prop('mixture').set('mixture', 'liquid');
model.physics('ht').feature('init1').set('Tinit', 'T0');
model.physics('ht').create('hs1', 'HeatSource', 3);
model.physics('ht').feature('hs1').set('Q0_src', 'root.comp1.chem.Qtot');
model.physics('ht').feature('hs1').selection.all;
model.physics('ht').create('temp1', 'TemperatureBoundary', 2);
model.physics('ht').feature('temp1').selection.named('geom1_sel1');
model.physics('ht').feature('temp1').set('T0', 'T0');
model.physics('ht').create('temp2', 'TemperatureBoundary', 2);
model.physics('ht').feature('temp2').selection.named('geom1_sel2');
model.physics('ht').feature('temp2').set('T0', 'T0');
model.physics('ht').create('ofl1', 'ConvectiveOutflow', 2);
model.physics('ht').feature('ofl1').selection.named('geom1_sel3');
model.physics('ht').create('hf1', 'HeatFluxBoundary', 2);
model.physics('ht').feature('hf1').selection.named('geom1_difsel1');
model.physics('ht').feature('hf1').set('q0_input', 'Q_exch1');
model.physics('ht').create('hf2', 'HeatFluxBoundary', 2);
model.physics('ht').feature('hf2').selection.named('geom1_difsel2');
model.physics('ht').feature('hf2').set('q0_input', 'Q_exch2');
model.physics('tds').feature('cdm1').set('D_cA', {'D' '0' '0' '0' 'D' '0' '0' '0' 'D'});
model.physics('tds').feature('cdm1').set('D_cB', {'D' '0' '0' '0' 'D' '0' '0' '0' 'D'});
model.physics('tds').feature('cdm1').set('D_cD', {'D' '0' '0' '0' 'D' '0' '0' '0' 'D'});
model.physics('tds').feature('cdm1').set('D_cU', {'D' '0' '0' '0' 'D' '0' '0' '0' 'D'});
model.physics('tds').create('reac1', 'Reactions', 3);
model.physics('tds').feature('reac1').selection.all;
model.physics('tds').feature('reac1').setIndex('R_cA_src', 'root.comp1.chem.R_A', 0);
model.physics('tds').feature('reac1').setIndex('R_cB_src', 'root.comp1.chem.R_B', 0);
model.physics('tds').feature('reac1').setIndex('R_cD_src', 'root.comp1.chem.R_D', 0);
model.physics('tds').feature('reac1').setIndex('R_cU_src', 'root.comp1.chem.R_U', 0);
model.physics('tds').create('in1', 'Inflow', 2);
model.physics('tds').feature('in1').selection.named('geom1_sel1');
model.physics('tds').feature('in1').setIndex('c0', 'cA1', 0);
model.physics('tds').feature('in1').setIndex('c0', 'cB1', 1);
model.physics('tds').create('in2', 'Inflow', 2);
model.physics('tds').feature('in2').selection.named('geom1_sel2');
model.physics('tds').feature('in2').setIndex('c0', 'cB2', 1);
model.physics('tds').create('out1', 'Outflow', 2);
model.physics('tds').feature('out1').selection.named('geom1_sel3');

model.multiphysics.create('nitf1', 'NonIsothermalFlow', 'geom1', 3);
model.multiphysics.create('rfd1', 'ReactingFlowDS', 'geom1', 3);

model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.set([10 21 219 242]);
model.mesh('mesh1').feature('size').set('custom', true);
model.mesh('mesh1').feature('size').set('hmax', 1);
model.mesh('mesh1').feature('size').set('hmin', 0.5);
model.mesh('mesh1').feature('size').set('hnarrow', 0.2);
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe1').selection.set([2 3 5 6 9 10 11 16 17 18]);
model.mesh('mesh1').run('swe1');
model.mesh('mesh1').feature.duplicate('ftri2', 'ftri1');
model.mesh('mesh1').feature('ftri2').selection.set([3 17 30 217 218 224 229 230]);
model.mesh('mesh1').run('ftri2');
model.mesh('mesh1').create('swe2', 'Sweep');
model.mesh('mesh1').run;

model.study('std1').create('stat2', 'Stationary');
model.study('std1').create('stat3', 'Stationary');
model.study('std1').feature('stat').label('Stationary - Laminar Flow');
model.study('std1').feature('stat').setEntry('activate', 'chem', false);
model.study('std1').feature('stat').setEntry('activate', 'ht', false);
model.study('std1').feature('stat').setEntry('activate', 'tds', false);
model.study('std1').feature('stat2').label('Stationary - Transport of Diluted Species');
model.study('std1').feature('stat2').setEntry('activate', 'spf', false);
model.study('std1').feature('stat2').setEntry('activate', 'ht', false);
model.study('std1').feature('stat3').label('Stationary - Heat Transfer in Fluids');
model.study('std1').feature('stat3').setEntry('activate', 'spf', false);
model.study('std1').feature('stat3').setEntry('activate', 'tds', false);

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf' 'comp1_spf_inl2_Pinlfdf'});
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf' 'comp1_spf_inl2_Pinlfdf'});
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'stat2');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'stat2');
model.sol('sol1').create('s2', 'Stationary');
model.sol('sol1').feature('s2').set('stol', 0.001);
model.sol('sol1').feature('s2').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s2').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s2').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s2').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s2').create('i1', 'Iterative');
model.sol('sol1').feature('s2').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s2').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s2').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s2').feature('i1').set('rhob', 400);
model.sol('sol1').feature('s2').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s2').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s2').feature('i1').label('AMG, concentrations (tds)');
model.sol('sol1').feature('s2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').feature('d1').label('Direct, concentrations (tds)');
model.sol('sol1').feature('s2').feature('fc1').set('linsolver', 'i1');
model.sol('sol1').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s2').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s2').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s2').feature.remove('fcDef');
model.sol('sol1').create('su2', 'StoreSolution');
model.sol('sol1').create('st3', 'StudyStep');
model.sol('sol1').feature('st3').set('study', 'std1');
model.sol('sol1').feature('st3').set('studystep', 'stat3');
model.sol('sol1').create('v3', 'Variables');
model.sol('sol1').feature('v3').set('initmethod', 'sol');
model.sol('sol1').feature('v3').set('initsol', 'sol1');
model.sol('sol1').feature('v3').set('notsolmethod', 'sol');
model.sol('sol1').feature('v3').set('notsol', 'sol1');
model.sol('sol1').feature('v3').set('control', 'stat3');
model.sol('sol1').create('s3', 'Stationary');
model.sol('sol1').feature('s3').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s3').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s3').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s3').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s3').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s3').create('d1', 'Direct');
model.sol('sol1').feature('s3').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s3').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s3').feature('d1').label('Direct, heat transfer variables (ht) (nitf1)');
model.sol('sol1').feature('s3').create('i1', 'Iterative');
model.sol('sol1').feature('s3').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s3').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s3').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s3').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s3').feature('i1').set('maxlinit', 10000);
model.sol('sol1').feature('s3').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s3').feature('i1').label('AMG, heat transfer variables (ht) (nitf1)');
model.sol('sol1').feature('s3').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s3').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s3').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s3').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s3').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s3').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s3').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s3').feature.remove('fcDef');
model.sol('sol1').feature('v3').set('notsolnum', 'auto');
model.sol('sol1').feature('v3').set('notsolvertype', 'solnum');
model.sol('sol1').feature('v3').set('solnum', 'auto');
model.sol('sol1').feature('v3').set('solvertype', 'solnum');
model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol1').feature('v2').set('solnum', 'auto');
model.sol('sol1').feature('v2').set('solvertype', 'solnum');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.dataset('dset1').set('geom', 'geom1');
model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').label('Velocity (spf)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').set('data', 'dset1');
model.result('pg1').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pg1');
model.result('pg1').feature.create('slc1', 'Slice');
model.result('pg1').feature('slc1').label('Slice');
model.result('pg1').feature('slc1').set('showsolutionparams', 'on');
model.result('pg1').feature('slc1').set('smooth', 'internal');
model.result('pg1').feature('slc1').set('showsolutionparams', 'on');
model.result('pg1').feature('slc1').set('data', 'parent');
model.result.dataset.create('surf1', 'Surface');
model.result.dataset('surf1').label('Exterior Walls');
model.result.dataset('surf1').set('data', 'dset1');
model.result.dataset('surf1').selection.geom('geom1', 2);
model.result.dataset('surf1').selection.set([1 3 4 5 6 7 8 9 11 12 14 15 16 17 18 19 20 21 22 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215]);
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Pressure (spf)');
model.result('pg2').set('data', 'surf1');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('data', 'surf1');
model.result('pg2').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pcond2/pcond1/pg4');
model.result('pg2').feature.create('surf1', 'Surface');
model.result('pg2').feature('surf1').label('Surface');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('expr', 'p');
model.result('pg2').feature('surf1').set('colortable', 'Dipole');
model.result('pg2').feature('surf1').set('smooth', 'internal');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('data', 'parent');
model.result('pg2').feature('surf1').feature.create('tran1', 'Transparency');
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').label('Temperature (ht)');
model.result('pg3').set('data', 'dset1');
model.result('pg3').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond3/pcond3/pg1');
model.result('pg3').feature.create('vol1', 'Volume');
model.result('pg3').feature('vol1').set('showsolutionparams', 'on');
model.result('pg3').feature('vol1').set('solutionparams', 'parent');
model.result('pg3').feature('vol1').set('expr', 'T');
model.result('pg3').feature('vol1').set('colortable', 'HeatCameraLight');
model.result('pg3').feature('vol1').set('smooth', 'internal');
model.result('pg3').feature('vol1').set('showsolutionparams', 'on');
model.result('pg3').feature('vol1').set('data', 'parent');
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').set('data', 'dset1');
model.result('pg4').label('Concentration, A, Streamline (tds)');
model.result('pg4').set('titletype', 'custom');
model.result('pg4').set('typeintitle', true);
model.result('pg4').set('prefixintitle', 'Species A:');
model.result('pg4').create('str1', 'Streamline');
model.result('pg4').feature('str1').set('expr', {'tds.tflux_cAx' 'tds.tflux_cAy' 'tds.tflux_cAz'});
model.result('pg4').feature('str1').set('posmethod', 'start');
model.result('pg4').feature('str1').set('pointtype', 'arrow');
model.result('pg4').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg4').feature('str1').set('color', 'gray');
model.result('pg4').feature('str1').create('col', 'Color');
model.result('pg4').feature('str1').feature('col').set('expr', 'cA');
model.result('pg4').feature('str1').feature('col').set('titletype', 'custom');
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').set('data', 'dset1');
model.result('pg5').label('Concentration, A, Surface (tds)');
model.result('pg5').set('titletype', 'custom');
model.result('pg5').set('prefixintitle', 'Species A:');
model.result('pg5').set('expressionintitle', false);
model.result('pg5').set('typeintitle', false);
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', {'cA'});
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').set('data', 'dset1');
model.result('pg6').label('Concentration, B, Streamline (tds)');
model.result('pg6').set('titletype', 'custom');
model.result('pg6').set('typeintitle', true);
model.result('pg6').set('prefixintitle', 'Species B:');
model.result('pg6').create('str1', 'Streamline');
model.result('pg6').feature('str1').set('expr', {'tds.tflux_cBx' 'tds.tflux_cBy' 'tds.tflux_cBz'});
model.result('pg6').feature('str1').set('posmethod', 'start');
model.result('pg6').feature('str1').set('pointtype', 'arrow');
model.result('pg6').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg6').feature('str1').set('color', 'gray');
model.result('pg6').feature('str1').create('col', 'Color');
model.result('pg6').feature('str1').feature('col').set('expr', 'cB');
model.result('pg6').feature('str1').feature('col').set('titletype', 'custom');
model.result.create('pg7', 'PlotGroup3D');
model.result('pg7').set('data', 'dset1');
model.result('pg7').label('Concentration, B, Surface (tds)');
model.result('pg7').set('titletype', 'custom');
model.result('pg7').set('prefixintitle', 'Species B:');
model.result('pg7').set('expressionintitle', false);
model.result('pg7').set('typeintitle', false);
model.result('pg7').create('surf1', 'Surface');
model.result('pg7').feature('surf1').set('expr', {'cB'});
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').set('data', 'dset1');
model.result('pg8').label('Concentration, D, Streamline (tds)');
model.result('pg8').set('titletype', 'custom');
model.result('pg8').set('typeintitle', true);
model.result('pg8').set('prefixintitle', 'Species D:');
model.result('pg8').create('str1', 'Streamline');
model.result('pg8').feature('str1').set('expr', {'tds.tflux_cDx' 'tds.tflux_cDy' 'tds.tflux_cDz'});
model.result('pg8').feature('str1').set('posmethod', 'start');
model.result('pg8').feature('str1').set('pointtype', 'arrow');
model.result('pg8').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg8').feature('str1').set('color', 'gray');
model.result('pg8').feature('str1').create('col', 'Color');
model.result('pg8').feature('str1').feature('col').set('expr', 'cD');
model.result('pg8').feature('str1').feature('col').set('titletype', 'custom');
model.result.create('pg9', 'PlotGroup3D');
model.result('pg9').set('data', 'dset1');
model.result('pg9').label('Concentration, D, Surface (tds)');
model.result('pg9').set('titletype', 'custom');
model.result('pg9').set('prefixintitle', 'Species D:');
model.result('pg9').set('expressionintitle', false);
model.result('pg9').set('typeintitle', false);
model.result('pg9').create('surf1', 'Surface');
model.result('pg9').feature('surf1').set('expr', {'cD'});
model.result.create('pg10', 'PlotGroup3D');
model.result('pg10').set('data', 'dset1');
model.result('pg10').label('Concentration, U, Streamline (tds)');
model.result('pg10').set('titletype', 'custom');
model.result('pg10').set('typeintitle', true);
model.result('pg10').set('prefixintitle', 'Species U:');
model.result('pg10').create('str1', 'Streamline');
model.result('pg10').feature('str1').set('expr', {'tds.tflux_cUx' 'tds.tflux_cUy' 'tds.tflux_cUz'});
model.result('pg10').feature('str1').set('posmethod', 'start');
model.result('pg10').feature('str1').set('pointtype', 'arrow');
model.result('pg10').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg10').feature('str1').set('color', 'gray');
model.result('pg10').feature('str1').create('col', 'Color');
model.result('pg10').feature('str1').feature('col').set('expr', 'cU');
model.result('pg10').feature('str1').feature('col').set('titletype', 'custom');
model.result.create('pg11', 'PlotGroup3D');
model.result('pg11').set('data', 'dset1');
model.result('pg11').label('Concentration, U, Surface (tds)');
model.result('pg11').set('titletype', 'custom');
model.result('pg11').set('prefixintitle', 'Species U:');
model.result('pg11').set('expressionintitle', false);
model.result('pg11').set('typeintitle', false);
model.result('pg11').create('surf1', 'Surface');
model.result('pg11').feature('surf1').set('expr', {'cU'});
model.result.create('pg12', 'PlotGroup3D');
model.result('pg12').label('Temperature and Fluid Flow (nitf1)');
model.result('pg12').set('showlegendsunit', true);
model.result('pg12').set('data', 'dset1');
model.result('pg12').set('defaultPlotID', 'MultiphysicsNonIsothermalFlow/cfcom1/pdef1/pcond4/pcond3/pg1');
model.result('pg12').feature.create('surf1', 'Surface');
model.result('pg12').feature('surf1').label('Wall Temperature');
model.result('pg12').feature('surf1').set('showsolutionparams', 'on');
model.result('pg12').feature('surf1').set('solutionparams', 'parent');
model.result('pg12').feature('surf1').set('expr', 'ht.Tvar');
model.result('pg12').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg12').feature('surf1').set('smooth', 'internal');
model.result('pg12').feature('surf1').set('showsolutionparams', 'on');
model.result('pg12').feature('surf1').set('data', 'parent');
model.result('pg12').feature('surf1').feature.create('sel1', 'Selection');
model.result('pg12').feature('surf1').feature('sel1').selection.geom('geom1', 2);
model.result('pg12').feature('surf1').feature('sel1').selection.set([1 3 4 5 6 7 8 9 11 12 14 15 16 17 18 19 20 21 22 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215]);
model.result('pg12').feature.create('arwv1', 'ArrowVolume');
model.result('pg12').feature('arwv1').label('Fluid Flow');
model.result('pg12').feature('arwv1').set('showsolutionparams', 'on');
model.result('pg12').feature('arwv1').set('solutionparams', 'parent');
model.result('pg12').feature('arwv1').set('expr', {'nitf1.ux' 'nitf1.uy' 'nitf1.uz'});
model.result('pg12').feature('arwv1').set('xnumber', 30);
model.result('pg12').feature('arwv1').set('ynumber', 30);
model.result('pg12').feature('arwv1').set('znumber', 30);
model.result('pg12').feature('arwv1').set('arrowtype', 'cone');
model.result('pg12').feature('arwv1').set('arrowlength', 'logarithmic');
model.result('pg12').feature('arwv1').set('showsolutionparams', 'on');
model.result('pg12').feature('arwv1').set('data', 'parent');
model.result('pg12').feature('arwv1').feature.create('col1', 'Color');
model.result('pg12').feature('arwv1').feature('col1').set('showcolordata', 'off');
model.result('pg12').feature('arwv1').feature.create('filt1', 'Filter');
model.result('pg12').feature('arwv1').feature('filt1').set('expr', 'spf.U>nitf1.Uave');
model.result('pg1').run;
model.result.create('pg13', 'PlotGroup3D');
model.result('pg13').run;
model.result('pg13').label('Velocity field');
model.result('pg13').set('showlegendsunit', true);
model.result('pg13').create('str1', 'Streamline');
model.result('pg13').feature('str1').selection.set([23 24]);
model.result('pg13').feature('str1').set('linetype', 'tube');
model.result('pg13').feature('str1').set('radiusexpr', '5e-4');
model.result('pg13').feature('str1').create('col1', 'Color');
model.result('pg13').run;
model.result('pg13').feature('str1').feature('col1').set('expr', 'cA');
model.result('pg13').feature('str1').feature('col1').set('descr', 'Concentration');
model.result('pg13').run;
model.result.create('pg14', 'PlotGroup3D');
model.result('pg14').run;
model.result('pg14').label('Temperature');
model.result('pg14').set('showlegendsunit', true);
model.result('pg14').create('slc1', 'Slice');
model.result('pg14').feature('slc1').set('expr', 'T');
model.result('pg14').feature('slc1').set('descr', 'Temperature');
model.result('pg14').feature('slc1').set('quickplane', 'xy');
model.result('pg14').feature('slc1').set('quickznumber', 4);
model.result('pg14').feature('slc1').set('rangecoloractive', true);
model.result('pg14').feature('slc1').set('rangecolormin', 280);
model.result('pg14').feature('slc1').set('rangecolormax', 300);
model.result('pg14').create('slc2', 'Slice');
model.result('pg14').feature('slc2').set('titletype', 'none');
model.result('pg14').feature('slc2').set('expr', 'T');
model.result('pg14').feature('slc2').set('descr', 'Temperature');
model.result('pg14').feature('slc2').set('quickplane', 'zx');
model.result('pg14').feature('slc2').set('quickynumber', 1);
model.result('pg14').feature('slc2').set('colorlegend', false);
model.result('pg14').run;
model.result.create('pg15', 'PlotGroup3D');
model.result('pg15').run;
model.result('pg15').label('Concentration B');
model.result('pg15').set('showlegendsunit', true);
model.result('pg15').create('iso1', 'Isosurface');
model.result('pg15').feature('iso1').set('expr', 'cB');
model.result('pg15').feature('iso1').set('descr', 'Concentration');
model.result('pg15').feature('iso1').set('number', 20);
model.result('pg15').run;
model.result('pg5').run;
model.result('pg5').set('edges', false);
model.result('pg5').run;
model.result('pg5').feature('surf1').set('colortable', 'Prism');
model.result('pg7').run;
model.result('pg7').set('edges', false);
model.result('pg7').run;
model.result('pg7').feature('surf1').set('colortable', 'Prism');
model.result('pg9').run;
model.result('pg9').set('edges', false);
model.result('pg9').run;
model.result('pg9').feature('surf1').set('colortable', 'Prism');
model.result('pg11').run;
model.result('pg11').set('edges', false);
model.result('pg11').run;
model.result('pg11').feature('surf1').set('colortable', 'Prism');
model.result('pg4').run;
model.result.remove('pg4');
model.result.remove('pg6');
model.result.remove('pg8');
model.result.remove('pg10');
model.result('pg5').run;
model.result('pg15').run;

model.title('Fine Chemical Production in a Plate Reactor');

model.description('Plate reactors running under continuous conditions have emerged as candidates to replace batch reactors in fine chemical production. This example demonstrates how to set up and solve the coupled flow, mass, and energy transport equations describing the reacting flow in a plate reactor.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;

model.label('plate_reactor.mph');

model.modelNode.label('Components');

out = model;
