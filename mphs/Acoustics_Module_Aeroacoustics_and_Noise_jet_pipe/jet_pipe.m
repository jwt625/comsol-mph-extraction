function out = model
%
% jet_pipe.m
%
% Model exported on May 26 2025, 21:25 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Acoustics_Module/Aeroacoustics_and_Noise');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('lpfbm', 'LinearizedPotentialFlowBoundaryMode', 'geom1');
model.physics('lpfbm').model('comp1');
model.physics.create('lpff', 'LinearizedPotentialFlowFrequency', 'geom1');
model.physics('lpff').model('comp1');

model.study.create('std1');
model.study('std1').create('mode', 'ModeAnalysis');
model.study('std1').feature('mode').set('modeFreq', '100[Hz]');
model.study('std1').feature('mode').set('eigunit', '');
model.study('std1').feature('mode').set('shiftactive', false);
model.study('std1').feature('mode').set('chkeigregion', true);
model.study('std1').feature('mode').set('conrad', '1');
model.study('std1').feature('mode').set('conradynhm', '1');
model.study('std1').feature('mode').set('storefact', false);
model.study('std1').feature('mode').set('linpsolnum', 'auto');
model.study('std1').feature('mode').set('outputmap', {});
model.study('std1').feature('mode').set('ngenAUX', '1');
model.study('std1').feature('mode').set('goalngenAUX', '1');
model.study('std1').feature('mode').set('ngenAUX', '1');
model.study('std1').feature('mode').set('goalngenAUX', '1');
model.study('std1').feature('mode').setSolveFor('/physics/lpfbm', true);
model.study('std1').feature('mode').setSolveFor('/physics/lpff', true);

model.baseSystem('none');

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', [0.25 0.5]);
model.geom('geom1').feature('r1').set('pos', [0.75 -0.5]);
model.geom('geom1').run('r1');
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').set('size', [0.25 1]);
model.geom('geom1').feature('r2').set('pos', [0.75 0]);
model.geom('geom1').run('r2');
model.geom('geom1').create('r3', 'Rectangle');
model.geom('geom1').feature('r3').set('size', [0.25 0.2]);
model.geom('geom1').feature('r3').set('pos', [0.75 1]);
model.geom('geom1').run('r3');
model.geom('geom1').create('r4', 'Rectangle');
model.geom('geom1').feature('r4').set('size', [1 1.5]);
model.geom('geom1').feature('r4').set('pos', [1 -0.5]);
model.geom('geom1').run('r4');
model.geom('geom1').create('r5', 'Rectangle');
model.geom('geom1').feature('r5').set('size', [1.2 0.2]);
model.geom('geom1').feature('r5').set('pos', [1 -0.7]);
model.geom('geom1').run('r5');
model.geom('geom1').create('r6', 'Rectangle');
model.geom('geom1').feature('r6').set('size', [0.2 1.9]);
model.geom('geom1').feature('r6').set('pos', [2 -0.7]);
model.geom('geom1').run('r6');
model.geom('geom1').create('r7', 'Rectangle');
model.geom('geom1').feature('r7').set('size', [1.2 0.2]);
model.geom('geom1').feature('r7').set('pos', [1 1]);
model.geom('geom1').runPre('fin');

model.param.set('M0', '0.25');
model.param.descr('M0', 'Mach number outside the duct');
model.param.set('M1', '0.45');
model.param.descr('M1', 'Mach number inside the duct');
model.param.set('m', '4');
model.param.descr('m', 'Circumferential wave number');
model.param.set('f', '30/(2*pi)');
model.param.descr('f', 'Frequency');
model.param.set('k0', '2*pi*f/(1-M1)');
model.param.descr('k0', 'Largest wave number');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');

model.geom('geom1').run;

model.selection('sel1').label('Duct Cross Section');
model.selection('sel1').geom(1);
model.selection('sel1').set([2]);

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup('def').set('density', {'1'});
model.material('mat1').propertyGroup('def').set('soundspeed', {'1'});
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').selection.geom('geom1', 1);
model.material('mat2').selection.named('sel1');
model.material('mat2').propertyGroup('def').set('density', {'1'});
model.material('mat2').propertyGroup('def').set('soundspeed', {'1'});

model.physics('lpfbm').selection.named('sel1');
model.physics('lpfbm').prop('EquationSettings').set('m', 'm');
model.physics('lpfbm').feature('lpfm1').set('minput_velocity', {'0' '0' 'M1'});
model.physics('lpff').prop('EquationSettings').set('m', 'm');
model.physics('lpff').feature('lpfm1').set('minput_velocity', {'0' '0' 'M0'});
model.physics('lpff').create('vs1', 'VortexSheet', 1);
model.physics('lpff').feature('vs1').selection.set([12 13]);
model.physics('lpff').create('ishb1', 'InteriorSoundHard', 1);
model.physics('lpff').feature('ishb1').selection.set([10]);
model.physics('lpff').create('lpfm2', 'LinearizedPotentialFlowModel', 2);
model.physics('lpff').feature('lpfm2').selection.set([1 2 3]);
model.physics('lpff').feature('lpfm2').set('minput_velocity', {'0' '0' 'M1'});
model.physics('lpff').create('pvel1', 'VelocityPotential', 1);
model.physics('lpff').feature('pvel1').selection.named('sel1');
model.physics('lpff').feature('pvel1').set('phi0', 'phi');

model.coordSystem.create('pml1', 'geom1', 'PML');
model.coordSystem('pml1').selection.set([3 4 6 7 8 9]);
model.coordSystem('pml1').set('ScalingType', 'Cylindrical');
model.coordSystem('pml1').set('stretchingType', 'rational');

model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('ftri1').selection.set([1 2 5]);
model.mesh('mesh1').feature('size').set('custom', true);
model.mesh('mesh1').feature('size').set('hmax', '(1-M1)/f/6');
model.mesh('mesh1').feature('size').set('hmin', '(1-M1)/f/6');
model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([16 19 20 21]);
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 8);
model.mesh('mesh1').run;

model.study('std1').label('Study 1 - Mode Analysis');
model.study('std1').setGenPlots(false);
model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'M0', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', '', 0);
model.study('std1').feature('param').setIndex('pname', 'M0', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', '', 0);
model.study('std1').feature('param').setIndex('pname', 'm', 0);
model.study('std1').feature('param').setIndex('plistarr', '4 17 24', 0);
model.study('std1').feature('mode').set('modeFreq', 'f');
model.study('std1').feature('mode').set('eigwhich', 'sr');
model.study('std1').feature('mode').set('neigsactive', true);
model.study('std1').feature('mode').set('neigs', 2);
model.study('std1').feature('mode').set('shiftactive', true);
model.study('std1').feature('mode').set('shift', 'k0');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'mode');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'mode');
model.sol('sol1').create('e1', 'Eigenvalue');
model.sol('sol1').feature('e1').set('neigs', 6);
model.sol('sol1').feature('e1').set('shift', '1');
model.sol('sol1').feature('e1').set('rtol', 1.0E-6);
model.sol('sol1').feature('e1').set('transform', 'none');
model.sol('sol1').feature('e1').set('eigref', '1');
model.sol('sol1').feature('e1').set('eigvfunscale', 'average');
model.sol('sol1').feature('e1').set('control', 'mode');
model.sol('sol1').attach('std1');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'m'});
model.batch('p1').set('plistarr', {'4 17 24'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol.create('sol2');
model.sol('sol2').study('std1');
model.sol('sol2').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').run('compute');

model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').run;
model.result('pg1').label('Boundary Modes');
model.result('pg1').set('data', 'dset2');
model.result('pg1').set('legendlayout', 'outside');
model.result('pg1').set('legendposoutside', 'bottom');
model.result('pg1').set('legendrowcount', 6);
model.result('pg1').create('lngr1', 'LineGraph');
model.result('pg1').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg1').feature('lngr1').set('linewidth', 'preference');
model.result('pg1').feature('lngr1').selection.set([2]);
model.result('pg1').run;
model.result('pg1').feature('lngr1').set('xdata', 'expr');
model.result('pg1').feature('lngr1').set('xdataexpr', 'r');
model.result('pg1').feature('lngr1').set('legend', true);
model.result('pg1').feature('lngr1').set('legendprefix', 'Mode number and out-of-plane wave number: ');
model.result('pg1').run;
model.result.dataset.create('rev1', 'Revolve2D');
model.result.dataset('rev1').set('data', 'dset2');
model.result.dataset('rev1').set('modenumber', 'm');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').run;
model.result('pg2').label('Boundary Modes 2D Revolved');
model.result('pg2').set('looplevel', [1 1]);
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').run;

model.study.create('std2');
model.study('std2').create('freq', 'Frequency');
model.study('std2').feature('freq').setSolveFor('/physics/lpfbm', false);
model.study('std2').feature('freq').setSolveFor('/physics/lpff', true);
model.study('std2').label('Study 2 - m=4 and n=0');
model.study('std2').setGenPlots(false);
model.study('std2').feature('freq').set('plist', 'f');
model.study('std2').feature('freq').set('usesol', true);
model.study('std2').feature('freq').set('notsolmethod', 'sol');
model.study('std2').feature('freq').set('notstudy', 'std1');
model.study('std2').feature('freq').set('notsol', 'sol2');
model.study('std2').feature('freq').set('notsoluse', 'sol3');
model.study('std2').feature('freq').set('notsolnum', 2);
model.study('std2').feature('freq').set('useparam', true);
model.study('std2').feature('freq').setIndex('pname_aux', 'M0', 0);
model.study('std2').feature('freq').setIndex('plistarr_aux', '', 0);
model.study('std2').feature('freq').setIndex('punit_aux', '', 0);
model.study('std2').feature('freq').setIndex('pname_aux', 'M0', 0);
model.study('std2').feature('freq').setIndex('plistarr_aux', '', 0);
model.study('std2').feature('freq').setIndex('punit_aux', '', 0);
model.study('std2').feature('freq').setIndex('pname_aux', 'm', 0);
model.study('std2').feature('freq').setIndex('plistarr_aux', 4, 0);

model.sol.create('sol6');
model.sol('sol6').study('std2');
model.sol('sol6').create('st1', 'StudyStep');
model.sol('sol6').feature('st1').set('study', 'std2');
model.sol('sol6').feature('st1').set('studystep', 'freq');
model.sol('sol6').create('v1', 'Variables');
model.sol('sol6').feature('v1').set('control', 'freq');
model.sol('sol6').create('s1', 'Stationary');
model.sol('sol6').feature('s1').create('p1', 'Parametric');
model.sol('sol6').feature('s1').feature.remove('pDef');
model.sol('sol6').feature('s1').feature('p1').set('pname', {'freq' 'm'});
model.sol('sol6').feature('s1').feature('p1').set('punit', {'Hz' ''});
model.sol('sol6').feature('s1').feature('p1').set('sweeptype', 'filled');
model.sol('sol6').feature('s1').feature('p1').set('plistarr', {'f' '4'});
model.sol('sol6').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol6').feature('s1').feature('p1').set('pcontinuation', '');
model.sol('sol6').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol6').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol6').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol6').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol6').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol6').feature('s1').feature('p1').set('probes', {});
model.sol('sol6').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol6').feature('s1').set('linpmethod', 'sol');
model.sol('sol6').feature('s1').set('linpsol', 'zero');
model.sol('sol6').feature('s1').set('control', 'freq');
model.sol('sol6').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol6').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol6').feature('s1').feature.remove('fcDef');
model.sol('sol6').attach('std2');
model.sol('sol6').runAll;

model.study.create('std3');
model.study('std3').create('freq', 'Frequency');
model.study('std3').feature('freq').setSolveFor('/physics/lpfbm', false);
model.study('std3').feature('freq').setSolveFor('/physics/lpff', true);
model.study('std3').label('Study 3 - m=17 and n=1');
model.study('std3').setGenPlots(false);
model.study('std3').feature('freq').set('plist', 'f');
model.study('std3').feature('freq').set('usesol', true);
model.study('std3').feature('freq').set('notsolmethod', 'sol');
model.study('std3').feature('freq').set('notstudy', 'std1');
model.study('std3').feature('freq').set('notsol', 'sol2');
model.study('std3').feature('freq').set('notsoluse', 'sol4');
model.study('std3').feature('freq').set('notsolnum', 1);
model.study('std3').feature('freq').set('useparam', true);
model.study('std3').feature('freq').setIndex('pname_aux', 'M0', 0);
model.study('std3').feature('freq').setIndex('plistarr_aux', '', 0);
model.study('std3').feature('freq').setIndex('punit_aux', '', 0);
model.study('std3').feature('freq').setIndex('pname_aux', 'M0', 0);
model.study('std3').feature('freq').setIndex('plistarr_aux', '', 0);
model.study('std3').feature('freq').setIndex('punit_aux', '', 0);
model.study('std3').feature('freq').setIndex('pname_aux', 'm', 0);
model.study('std3').feature('freq').setIndex('plistarr_aux', 17, 0);

model.sol.create('sol7');
model.sol('sol7').study('std3');
model.sol('sol7').create('st1', 'StudyStep');
model.sol('sol7').feature('st1').set('study', 'std3');
model.sol('sol7').feature('st1').set('studystep', 'freq');
model.sol('sol7').create('v1', 'Variables');
model.sol('sol7').feature('v1').set('control', 'freq');
model.sol('sol7').create('s1', 'Stationary');
model.sol('sol7').feature('s1').create('p1', 'Parametric');
model.sol('sol7').feature('s1').feature.remove('pDef');
model.sol('sol7').feature('s1').feature('p1').set('pname', {'freq' 'm'});
model.sol('sol7').feature('s1').feature('p1').set('punit', {'Hz' ''});
model.sol('sol7').feature('s1').feature('p1').set('sweeptype', 'filled');
model.sol('sol7').feature('s1').feature('p1').set('plistarr', {'f' '17'});
model.sol('sol7').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol7').feature('s1').feature('p1').set('pcontinuation', '');
model.sol('sol7').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol7').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol7').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol7').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol7').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol7').feature('s1').feature('p1').set('probes', {});
model.sol('sol7').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol7').feature('s1').set('linpmethod', 'sol');
model.sol('sol7').feature('s1').set('linpsol', 'zero');
model.sol('sol7').feature('s1').set('control', 'freq');
model.sol('sol7').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol7').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol7').feature('s1').feature.remove('fcDef');
model.sol('sol7').attach('std3');
model.sol('sol7').runAll;

model.study.create('std4');
model.study('std4').create('freq', 'Frequency');
model.study('std4').feature('freq').setSolveFor('/physics/lpfbm', false);
model.study('std4').feature('freq').setSolveFor('/physics/lpff', true);
model.study('std4').label('Study 4 - m=24 and n=1');
model.study('std4').setGenPlots(false);
model.study('std4').feature('freq').set('plist', 'f');
model.study('std4').feature('freq').set('usesol', true);
model.study('std4').feature('freq').set('notsolmethod', 'sol');
model.study('std4').feature('freq').set('notstudy', 'std1');
model.study('std4').feature('freq').set('notsol', 'sol2');
model.study('std4').feature('freq').set('notsoluse', 'sol5');
model.study('std4').feature('freq').set('notsolnum', 1);
model.study('std4').feature('freq').set('useparam', true);
model.study('std4').feature('freq').setIndex('pname_aux', 'M0', 0);
model.study('std4').feature('freq').setIndex('plistarr_aux', '', 0);
model.study('std4').feature('freq').setIndex('punit_aux', '', 0);
model.study('std4').feature('freq').setIndex('pname_aux', 'M0', 0);
model.study('std4').feature('freq').setIndex('plistarr_aux', '', 0);
model.study('std4').feature('freq').setIndex('punit_aux', '', 0);
model.study('std4').feature('freq').setIndex('pname_aux', 'm', 0);
model.study('std4').feature('freq').setIndex('plistarr_aux', 24, 0);

model.sol.create('sol8');
model.sol('sol8').study('std4');
model.sol('sol8').create('st1', 'StudyStep');
model.sol('sol8').feature('st1').set('study', 'std4');
model.sol('sol8').feature('st1').set('studystep', 'freq');
model.sol('sol8').create('v1', 'Variables');
model.sol('sol8').feature('v1').set('control', 'freq');
model.sol('sol8').create('s1', 'Stationary');
model.sol('sol8').feature('s1').create('p1', 'Parametric');
model.sol('sol8').feature('s1').feature.remove('pDef');
model.sol('sol8').feature('s1').feature('p1').set('pname', {'freq' 'm'});
model.sol('sol8').feature('s1').feature('p1').set('punit', {'Hz' ''});
model.sol('sol8').feature('s1').feature('p1').set('sweeptype', 'filled');
model.sol('sol8').feature('s1').feature('p1').set('plistarr', {'f' '24'});
model.sol('sol8').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol8').feature('s1').feature('p1').set('pcontinuation', '');
model.sol('sol8').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol8').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol8').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol8').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol8').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol8').feature('s1').feature('p1').set('probes', {});
model.sol('sol8').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol8').feature('s1').set('linpmethod', 'sol');
model.sol('sol8').feature('s1').set('linpsol', 'zero');
model.sol('sol8').feature('s1').set('control', 'freq');
model.sol('sol8').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol8').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol8').feature('s1').feature.remove('fcDef');
model.sol('sol8').attach('std4');
model.sol('sol8').runAll;

model.result.dataset('dset3').selection.geom('geom1', 2);
model.result.dataset('dset3').selection.geom('geom1', 2);
model.result.dataset('dset3').selection.set([1 2 5]);
model.result.dataset('dset4').selection.geom('geom1', 2);
model.result.dataset('dset4').selection.geom('geom1', 2);
model.result.dataset('dset4').selection.set([1 2 5]);
model.result.dataset('dset5').selection.geom('geom1', 2);
model.result.dataset('dset5').selection.geom('geom1', 2);
model.result.dataset('dset5').selection.set([1 2 5]);
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').label('Acoustic Pressure (lpff)');
model.result('pg3').set('dataisaxisym', 'off');
model.result('pg3').set('showlegendsunit', true);
model.result('pg3').set('data', 'dset5');
model.result('pg3').setIndex('looplevel', 1, 0);
model.result('pg3').setIndex('looplevel', 1, 1);
model.result('pg3').set('defaultPlotID', 'linearizedpotentialflow/LinearizedPotentialFlowPhysicsInterfaceComponents/icom4/pdef1/pcond2/pg1');
model.result('pg3').feature.create('surf1', 'Surface');
model.result('pg3').feature('surf1').label('Surface');
model.result('pg3').feature('surf1').set('expr', 'lpff.p');
model.result('pg3').feature('surf1').set('colortable', 'Wave');
model.result('pg3').feature('surf1').set('colorscalemode', 'linearsymmetric');
model.result('pg3').feature('surf1').set('smooth', 'internal');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('data', 'parent');
model.result('pg3').label('Acoustic Pressure (lpff)');
model.result('pg3').run;
model.result('pg3').label('Near Field Pressure');
model.result('pg3').run;
model.result('pg3').set('data', 'dset4');
model.result('pg3').run;
model.result('pg3').set('data', 'dset5');
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').label('Sound Pressure Level (lpff)');
model.result('pg4').set('dataisaxisym', 'off');
model.result('pg4').set('showlegendsunit', true);
model.result('pg4').set('data', 'dset5');
model.result('pg4').setIndex('looplevel', 1, 0);
model.result('pg4').setIndex('looplevel', 1, 1);
model.result('pg4').set('defaultPlotID', 'linearizedpotentialflow/LinearizedPotentialFlowPhysicsInterfaceComponents/icom4/pdef1/pcond2/pcond2/pg1');
model.result('pg4').feature.create('surf1', 'Surface');
model.result('pg4').feature('surf1').label('Surface');
model.result('pg4').feature('surf1').set('expr', 'lpff.Lp');
model.result('pg4').feature('surf1').set('smooth', 'internal');
model.result('pg4').feature('surf1').set('showsolutionparams', 'on');
model.result('pg4').feature('surf1').set('data', 'parent');
model.result('pg4').label('Sound Pressure Level (lpff)');
model.result('pg4').run;
model.result('pg4').label('Near Field SPL');
model.result('pg4').run;
model.result('pg4').feature('surf1').create('hght1', 'Height');
model.result('pg4').run;
model.result('pg4').run;
model.result.dataset.create('rev2', 'Revolve2D');
model.result.dataset('rev2').set('data', 'dset3');
model.result.dataset('rev2').set('startangle', -90);
model.result.dataset('rev2').set('revangle', 225);
model.result.dataset('rev2').set('modenumber', 'm');
model.result.dataset.create('rev3', 'Revolve2D');
model.result.dataset('rev3').label('Revolution 2D');
model.result.dataset('rev3').set('startangle', -90);
model.result.dataset('rev3').set('revangle', 225);
model.result.dataset('rev3').set('data', 'dset3');
model.result.dataset('rev3').set('defaultPlotIDs', {'linearizedpotentialflow/LinearizedPotentialFlowPhysicsInterfaceComponents/icom4/pdef1/pcond2/pcond3/pg1|lpff' 'linearizedpotentialflow/LinearizedPotentialFlowPhysicsInterfaceComponents/icom4/pdef1/pcond2/pcond3/pg2|lpff' 'linearizedpotentialflow/LinearizedPotentialFlowPhysicsInterfaceComponents/icom4/pdef1/pcond2/pcond3/pg2|lpff|surf1'});
model.result.dataset('rev3').label('Revolution 2D');
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').label('Acoustic Pressure, 3D (lpff)');
model.result('pg5').set('showlegendsunit', true);
model.result('pg5').set('data', 'rev3');
model.result('pg5').setIndex('looplevel', 1, 0);
model.result('pg5').setIndex('looplevel', 1, 1);
model.result('pg5').set('defaultPlotID', 'linearizedpotentialflow/LinearizedPotentialFlowPhysicsInterfaceComponents/icom4/pdef1/pcond2/pcond3/pg1');
model.result('pg5').feature.create('surf1', 'Surface');
model.result('pg5').feature('surf1').label('Surface');
model.result('pg5').feature('surf1').set('expr', 'lpff.p');
model.result('pg5').feature('surf1').set('colortable', 'Wave');
model.result('pg5').feature('surf1').set('colorscalemode', 'linearsymmetric');
model.result('pg5').feature('surf1').set('smooth', 'internal');
model.result('pg5').feature('surf1').set('showsolutionparams', 'on');
model.result('pg5').feature('surf1').set('data', 'parent');
model.result('pg5').label('Acoustic Pressure, 3D (lpff)');
model.result('pg5').run;
model.result('pg5').label('Near Field Pressure 2D Revolved');
model.result('pg5').set('data', 'rev2');
model.result('pg5').run;

model.title('Jet Pipe');

model.description('The radiation of fan noise from the annular duct of a turbofan aeroengine is computed. Between the jet stream and the surrounding air, moving at a lower speed, a vortex sheet appears and affects the acoustic field.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;
model.sol('sol8').clearSolutionData;

model.label('jet_pipe.mph');

model.modelNode.label('Components');

out = model;
