function out = model
%
% electrodeless_lamp.m
%
% Model exported on May 26 2025, 21:32 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Plasma_Module/Inductively_Coupled_Plasmas');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('plas', 'ColdPlasma', 'geom1');
model.physics('plas').model('comp1');
model.physics.create('mf', 'InductionCurrents', 'geom1');
model.physics('mf').model('comp1');
model.physics('mf').prop('ShapeProperty').set('order_magneticvectorpotential', '1');
model.physics('mf').create('alf1', 'AmperesLawFluid');
model.physics('mf').feature('alf1').selection.all;

model.multiphysics.create('pcc1', 'PlasmaConductivityMultiphysicsCoupling', 'geom1', 2);
model.multiphysics('pcc1').set('elm_physics', 'mf');
model.multiphysics('pcc1').set('plas_physics', 'plas');
model.multiphysics.create('ehs1', 'ElectronHeatSourceMultiphysicsCoupling', 'geom1', 2);
model.multiphysics('ehs1').set('elm_physics', 'mf');
model.multiphysics('ehs1').set('plas_physics', 'plas');

model.study.create('std1');
model.study('std1').create('ftrans', 'FrequencyTransient');
model.study('std1').feature('ftrans').set('initialtime', '0');
model.study('std1').feature('ftrans').set('freq', '1000');
model.study('std1').feature('ftrans').set('solnum', 'auto');
model.study('std1').feature('ftrans').set('notsolnum', 'auto');
model.study('std1').feature('ftrans').set('outputmap', {});
model.study('std1').feature('ftrans').setSolveFor('/physics/plas', true);
model.study('std1').feature('ftrans').setSolveFor('/physics/mf', true);
model.study('std1').feature('ftrans').setSolveFor('/multiphysics/pcc1', true);
model.study('std1').feature('ftrans').setSolveFor('/multiphysics/ehs1', true);

model.geom('geom1').create('ls1', 'LineSegment');
model.geom('geom1').feature('ls1').set('specify1', 'coord');
model.geom('geom1').feature('ls1').set('specify2', 'coord');
model.geom('geom1').feature('ls1').set('coord2', [0.015 0]);
model.geom('geom1').run('ls1');
model.geom('geom1').create('cb1', 'CubicBezier');
model.geom('geom1').feature('cb1').setIndex('p', 0.015, 0, 0);
model.geom('geom1').feature('cb1').setIndex('p', 0.015, 0, 1);
model.geom('geom1').feature('cb1').setIndex('p', 0.03, 0, 2);
model.geom('geom1').feature('cb1').setIndex('p', 0.03, 0, 3);
model.geom('geom1').feature('cb1').setIndex('p', 0.025, 1, 1);
model.geom('geom1').feature('cb1').setIndex('p', 0.025, 1, 2);
model.geom('geom1').feature('cb1').setIndex('p', 0.045, 1, 3);
model.geom('geom1').run('cb1');
model.geom('geom1').create('qb1', 'QuadraticBezier');
model.geom('geom1').feature('qb1').setIndex('p', 0.03, 0, 0);
model.geom('geom1').feature('qb1').setIndex('p', 0.03, 0, 1);
model.geom('geom1').feature('qb1').setIndex('p', 0.045, 1, 0);
model.geom('geom1').feature('qb1').setIndex('p', 0.07, 1, 1);
model.geom('geom1').feature('qb1').setIndex('p', 0.07, 1, 2);
model.geom('geom1').run('qb1');
model.geom('geom1').create('ls2', 'LineSegment');
model.geom('geom1').feature('ls2').set('specify1', 'coord');
model.geom('geom1').feature('ls2').set('specify2', 'coord');
model.geom('geom1').feature('ls2').set('coord1', [0 0.07]);
model.geom('geom1').runPre('fin');
model.geom('geom1').create('csol1', 'ConvertToSolid');
model.geom('geom1').feature('csol1').selection('input').set({'cb1' 'ls1' 'ls2' 'qb1'});
model.geom('geom1').runPre('fin');
model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', [0.004 0.05]);
model.geom('geom1').run('r1');
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').set('size', [0.006 0.052]);
model.geom('geom1').run('r2');
model.geom('geom1').create('r3', 'Rectangle');
model.geom('geom1').feature('r3').set('size', [0.007 0.053]);
model.geom('geom1').run('r3');
model.geom('geom1').create('cha1', 'Chamfer');
model.geom('geom1').feature('cha1').selection('point').set('r2', 3);
model.geom('geom1').feature('cha1').set('dist', '1.5e-3');
model.geom('geom1').runPre('fin');
model.geom('geom1').create('cha2', 'Chamfer');
model.geom('geom1').feature('cha2').selection('point').set('r3', 3);
model.geom('geom1').feature('cha2').set('dist', '2e-3');
model.geom('geom1').runPre('fin');
model.geom('geom1').create('sq1', 'Square');
model.geom('geom1').feature('sq1').set('size', 0.001);
model.geom('geom1').feature('sq1').set('pos', [0.0045 0.025]);
model.geom('geom1').runPre('fin');
model.geom('geom1').create('arr1', 'Array');
model.geom('geom1').feature('arr1').selection('input').set({'sq1'});
model.geom('geom1').feature('arr1').set('type', 'linear');
model.geom('geom1').feature('arr1').set('linearsize', 5);
model.geom('geom1').feature('arr1').set('displ', {'0' '5e-3'});
model.geom('geom1').runPre('fin');

model.variable.create('var1');
model.variable('var1').model('comp1');

model.geom('geom1').run;

model.variable('var1').set('Tinit', '350[K]');
model.variable('var1').descr('Tinit', 'Gas temperature');
model.variable('var1').set('pinit', '101325*(500E-3/760)[Pa]');
model.variable('var1').descr('pinit', 'Initial total pressure');
model.variable('var1').set('lamp_power', '80[W]');
model.variable('var1').descr('lamp_power', 'Lamp power');
model.variable('var1').set('tf1', '10');
model.variable('var1').descr('tf1', 'Trapping factor');
model.variable('var1').set('tf2', '1000');
model.variable('var1').descr('tf2', 'Trapping factor');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');
model.selection('sel1').set([5 6 7 8 9]);
model.selection('sel1').geom('geom1', 2, 1, {'exterior'});
model.selection('sel1').set([5 6 7 8 9]);
model.selection('sel1').label('Coil boundaries');
model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').set([5 6 7 8 9]);
model.selection('sel2').label('Coil domains');
model.selection.create('sel3', 'Explicit');
model.selection('sel3').model('comp1');
model.selection('sel3').geom(1);
model.selection('sel3').set([8 27 35 36 37 38]);
model.selection('sel3').label('Boundary layers');
model.selection.create('sel4', 'Explicit');
model.selection('sel4').model('comp1');
model.selection('sel4').set([4]);
model.selection('sel4').label('Discharge');

model.physics('plas').prop('TransportSettings').set('MixtureDiffusionCorrection', true);
model.physics('plas').selection.set([4]);
model.physics('plas').create('xsec1', 'CrossSectionImport', -1);
model.physics('plas').feature('xsec1').set('Filepath', 'Ar_xsecs.txt');
model.physics('plas').feature('xsec1').runCommand('importData');
model.physics('plas').create('xsec2', 'CrossSectionImport', -1);
model.physics('plas').feature('xsec2').set('Filepath', 'Hg_xsecs.txt');
model.physics('plas').feature('xsec2').runCommand('importData');
model.physics('plas').create('rxn1', 'Reaction', 2);
model.physics('plas').feature('rxn1').set('formula', 'Ars+Ars=>Ar++Ar+e');
model.physics('plas').feature('rxn1').set('kf', 'N_A_const*1.00E-15[m^3/s]');
model.physics('plas').create('rxn2', 'Reaction', 2);
model.physics('plas').feature('rxn2').set('formula', 'Ars+Hg=>Hg++Ar+e');
model.physics('plas').feature('rxn2').set('kf', 'N_A_const*9E-16[m^3/s]');
model.physics('plas').feature.duplicate('rxn3', 'rxn2');
model.physics('plas').feature('rxn3').set('formula', 'Ars+Hg1=>Hg++Ar+e');
model.physics('plas').feature.duplicate('rxn4', 'rxn3');
model.physics('plas').feature('rxn4').set('formula', 'Ars+Hg2=>Hg++Ar+e');
model.physics('plas').feature.duplicate('rxn5', 'rxn4');
model.physics('plas').feature('rxn5').set('formula', 'Ars+Hg3=>Hg++Ar+e');
model.physics('plas').feature.duplicate('rxn6', 'rxn5');
model.physics('plas').feature('rxn6').set('formula', 'Ars+Hg4=>Hg++Ar+e');
model.physics('plas').feature.duplicate('rxn7', 'rxn6');
model.physics('plas').feature('rxn7').set('formula', 'Ars+Hg5=>Hg++Ar+e');
model.physics('plas').feature.duplicate('rxn8', 'rxn7');
model.physics('plas').feature('rxn8').set('formula', 'Ars+Hg6=>Hg++Ar+e');
model.physics('plas').feature.duplicate('rxn9', 'rxn8');
model.physics('plas').feature('rxn9').set('formula', 'Hg3+Hg3=>Hg++Hg+e');
model.physics('plas').feature('rxn9').set('kf', 'N_A_const*3.50E-16[m^3/s]');
model.physics('plas').feature.duplicate('rxn10', 'rxn9');
model.physics('plas').feature('rxn10').set('formula', 'Hg3+Hg4=>Hg++Hg+e');
model.physics('plas').feature.duplicate('rxn11', 'rxn10');
model.physics('plas').feature('rxn11').set('formula', 'Hg3+Hg5=>Hg++Hg+e');
model.physics('plas').feature.duplicate('rxn12', 'rxn11');
model.physics('plas').feature('rxn12').set('formula', 'Hg3+Hg6=>Hg++Hg+e');
model.physics('plas').feature.duplicate('rxn13', 'rxn12');
model.physics('plas').feature('rxn13').set('formula', 'Hg4+Hg1=>Hg++Hg+e');
model.physics('plas').feature.duplicate('rxn14', 'rxn13');
model.physics('plas').feature('rxn14').set('formula', 'Hg4+Hg2=>Hg++Hg+e');
model.physics('plas').feature.duplicate('rxn15', 'rxn14');
model.physics('plas').feature('rxn15').set('formula', 'Hg4+Hg3=>Hg++Hg+e');
model.physics('plas').feature.duplicate('rxn16', 'rxn15');
model.physics('plas').feature('rxn16').set('formula', 'Hg4+Hg4=>Hg++Hg+e');
model.physics('plas').feature.duplicate('rxn17', 'rxn16');
model.physics('plas').feature('rxn17').set('formula', 'Hg4+Hg5=>Hg++Hg+e');
model.physics('plas').feature.duplicate('rxn18', 'rxn17');
model.physics('plas').feature('rxn18').set('formula', 'Hg4+Hg6=>Hg++Hg+e');
model.physics('plas').feature.duplicate('rxn19', 'rxn18');
model.physics('plas').feature('rxn19').set('formula', 'Hg5+Hg1=>Hg++Hg+e');
model.physics('plas').feature.duplicate('rxn20', 'rxn19');
model.physics('plas').feature('rxn20').set('formula', 'Hg5+Hg2=>Hg++Hg+e');
model.physics('plas').feature.duplicate('rxn21', 'rxn20');
model.physics('plas').feature('rxn21').set('formula', 'Hg5+Hg3=>Hg++Hg+e');
model.physics('plas').feature.duplicate('rxn22', 'rxn21');
model.physics('plas').feature('rxn22').set('formula', 'Hg5+Hg4=>Hg++Hg+e');
model.physics('plas').feature.duplicate('rxn23', 'rxn22');
model.physics('plas').feature('rxn23').set('formula', 'Hg5+Hg5=>Hg++Hg+e');
model.physics('plas').feature.duplicate('rxn24', 'rxn23');
model.physics('plas').feature('rxn24').set('formula', 'Hg5+Hg6=>Hg++Hg+e');
model.physics('plas').feature.duplicate('rxn25', 'rxn24');
model.physics('plas').feature('rxn25').set('formula', 'Hg6+Hg1=>Hg++Hg+e');
model.physics('plas').feature.duplicate('rxn26', 'rxn25');
model.physics('plas').feature('rxn26').set('formula', 'Hg6+Hg2=>Hg++Hg+e');
model.physics('plas').feature.duplicate('rxn27', 'rxn26');
model.physics('plas').feature('rxn27').set('formula', 'Hg6+Hg3=>Hg++Hg+e');
model.physics('plas').feature.duplicate('rxn28', 'rxn27');
model.physics('plas').feature('rxn28').set('formula', 'Hg6+Hg4=>Hg++Hg+e');
model.physics('plas').feature.duplicate('rxn29', 'rxn28');
model.physics('plas').feature('rxn29').set('formula', 'Hg6+Hg5=>Hg++Hg+e');
model.physics('plas').feature.duplicate('rxn30', 'rxn29');
model.physics('plas').feature('rxn30').set('formula', 'Hg6+Hg6=>Hg++Hg+e');
model.physics('plas').feature.duplicate('rxn31', 'rxn30');
model.physics('plas').feature('rxn31').set('formula', 'Ar++Hg=>Hg++Ar');
model.physics('plas').feature('rxn31').set('kf', 'N_A_const*1.50E-17[m^3/s]');
model.physics('plas').feature.duplicate('rxn32', 'rxn31');
model.physics('plas').feature('rxn32').set('formula', 'Ar++Ar=>Ar++Ar');
model.physics('plas').feature('rxn32').set('kf', 'N_A_const*4.60E-16[m^3/s]');
model.physics('plas').feature.duplicate('rxn33', 'rxn32');
model.physics('plas').feature('rxn33').set('formula', 'Hg++Hg=>Hg+Hg+');
model.physics('plas').feature('rxn33').set('kf', 'N_A_const*1.00E-15[m^3/s]');
model.physics('plas').feature.duplicate('rxn34', 'rxn33');
model.physics('plas').feature('rxn34').set('formula', 'Hg2=>Hg');
model.physics('plas').feature('rxn34').set('kf', '8.00E6/tf1');
model.physics('plas').feature.duplicate('rxn35', 'rxn34');
model.physics('plas').feature('rxn35').set('formula', 'Hg4=>Hg');
model.physics('plas').feature('rxn35').set('kf', '7.50E8/tf2');
model.physics('plas').feature.duplicate('rxn36', 'rxn35');
model.physics('plas').feature('rxn36').set('formula', 'Hg5=>Hg1');
model.physics('plas').feature('rxn36').set('kf', '2.2E7');
model.physics('plas').feature.duplicate('rxn37', 'rxn36');
model.physics('plas').feature('rxn37').set('formula', 'Hg5=>Hg2');
model.physics('plas').feature('rxn37').set('kf', '6.6E7');
model.physics('plas').feature.duplicate('rxn38', 'rxn37');
model.physics('plas').feature('rxn38').set('formula', 'Hg5=>Hg3');
model.physics('plas').feature('rxn38').set('kf', '2E7');
model.physics('plas').feature.duplicate('rxn39', 'rxn38');
model.physics('plas').feature('rxn39').set('formula', 'Hg6=>Hg1');
model.physics('plas').feature.duplicate('rxn40', 'rxn39');
model.physics('plas').feature('rxn40').set('formula', 'Hg6=>Hg2');
model.physics('plas').feature('rxn40').set('kf', '6E7');
model.physics('plas').feature.duplicate('rxn41', 'rxn40');
model.physics('plas').feature('rxn41').set('formula', 'Hg6=>Hg3');
model.physics('plas').feature('rxn41').set('kf', '5E7');
model.physics('plas').create('sr1', 'SurfaceReaction', 1);
model.physics('plas').feature('sr1').set('formula', 'Ars=>Ar');
model.physics('plas').feature('sr1').selection.named('sel3');
model.physics('plas').feature.duplicate('sr2', 'sr1');
model.physics('plas').feature('sr2').set('formula', 'Ar+=>Ar');
model.physics('plas').feature.duplicate('sr3', 'sr2');
model.physics('plas').feature('sr3').set('formula', 'Hg1=>Hg');
model.physics('plas').feature.duplicate('sr4', 'sr3');
model.physics('plas').feature('sr4').set('formula', 'Hg2=>Hg');
model.physics('plas').feature.duplicate('sr5', 'sr4');
model.physics('plas').feature('sr5').set('formula', 'Hg3=>Hg');
model.physics('plas').feature.duplicate('sr6', 'sr5');
model.physics('plas').feature('sr6').set('formula', 'Hg4=>Hg');
model.physics('plas').feature.duplicate('sr7', 'sr6');
model.physics('plas').feature('sr7').set('formula', 'Hg5=>Hg');
model.physics('plas').feature.duplicate('sr8', 'sr7');
model.physics('plas').feature('sr8').set('formula', 'Hg6=>Hg');
model.physics('plas').feature.duplicate('sr9', 'sr8');
model.physics('plas').feature('sr9').set('formula', 'Hg+=>Hg');
model.physics('plas').feature('Hg').set('M', 0.2006);
model.physics('plas').feature('Hg').set('sigma', '2.969[angstrom]');
model.physics('plas').feature('Hg').set('epsilonkb', 750);
model.physics('plas').feature('Hg').set('x0', 0.05);
model.physics('plas').feature('Hg1').set('M', 0.2006);
model.physics('plas').feature('Hg1').set('sigma', '2.969[angstrom]');
model.physics('plas').feature('Hg1').set('epsilonkb', 750);
model.physics('plas').feature('Hg1').set('x0', '2E-6');
model.physics('plas').feature('Hg2').set('M', 0.2006);
model.physics('plas').feature('Hg2').set('sigma', '2.969[angstrom]');
model.physics('plas').feature('Hg2').set('epsilonkb', 750);
model.physics('plas').feature('Hg2').set('x0', '1E-6');
model.physics('plas').feature('Hg3').set('M', 0.2006);
model.physics('plas').feature('Hg3').set('sigma', '2.969[angstrom]');
model.physics('plas').feature('Hg3').set('epsilonkb', 750);
model.physics('plas').feature('Hg3').set('x0', '5E-6');
model.physics('plas').feature('Hg4').set('M', 0.2006);
model.physics('plas').feature('Hg4').set('sigma', '2.969[angstrom]');
model.physics('plas').feature('Hg4').set('epsilonkb', 750);
model.physics('plas').feature('Hg4').set('x0', '1E-6');
model.physics('plas').feature('Hg5').set('M', 0.2006);
model.physics('plas').feature('Hg5').set('sigma', '2.969[angstrom]');
model.physics('plas').feature('Hg5').set('epsilonkb', 750);
model.physics('plas').feature('Hg5').set('x0', '5E-6');
model.physics('plas').feature('Hg6').set('M', 0.2006);
model.physics('plas').feature('Hg6').set('sigma', '2.969[angstrom]');
model.physics('plas').feature('Hg6').set('epsilonkb', 750);
model.physics('plas').feature('Hg6').set('x0', '1E-6');
model.physics('plas').feature('Ar').set('FromMassConstraint', true);
model.physics('plas').feature('Ar_1p').set('n0', '1E16');
model.physics('plas').feature('Hg_1p').set('M', 0.2006);
model.physics('plas').feature('Hg_1p').set('sigma', '2.969[angstrom]');
model.physics('plas').feature('Hg_1p').set('epsilonkb', 750);
model.physics('plas').feature('Hg_1p').set('InitIon', true);
model.physics('plas').feature('pes1').set('SpecifyElectronDensityAndEnergy', 'FromElectronImpact');
model.physics('plas').feature('pes1').set('T', 'Tinit');
model.physics('plas').feature('pes1').set('pA', 'pinit');
model.physics('plas').create('gnd1', 'Ground', 1);
model.physics('plas').feature('gnd1').selection.named('sel3');
model.physics('plas').create('wall1', 'WallDriftDiffusion', 1);
model.physics('plas').feature('wall1').selection.named('sel3');
model.physics('plas').feature('init1').set('neinit', '1E17');
model.physics('plas').feature('init1').set('ebarinit', 2);
model.physics('mf').create('coil1', 'Coil', 2);
model.physics('mf').feature('coil1').selection.named('sel2');
model.physics('mf').feature('coil1').set('coilGroup', true);
model.physics('mf').feature('coil1').set('CoilExcitation', 'Power');
model.physics('mf').feature('coil1').set('PCoil', 'lamp_power');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').selection.set([5 6 7 8 9]);
model.material('mat1').propertyGroup('def').set('electricconductivity', {'6e7'});
model.material('mat1').propertyGroup('def').set('relpermeability', {'1'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1'});
model.material('mat1').label('Coils');
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').selection.set([1]);
model.material('mat2').propertyGroup('def').set('relpermeability', {'1e3'});
model.material('mat2').propertyGroup('def').set('electricconductivity', {'0'});
model.material('mat2').propertyGroup('def').set('relpermittivity', {'1'});
model.material('mat2').label('Ferrite');
model.material.create('mat3', 'Common', 'comp1');
model.material('mat3').selection.set([2]);
model.material('mat3').propertyGroup('def').set('relpermeability', {'1'});
model.material('mat3').propertyGroup('def').set('electricconductivity', {'0'});
model.material('mat3').propertyGroup('def').set('relpermittivity', {'1'});
model.material('mat3').label('Air');
model.material.create('mat4', 'Common', 'comp1');
model.material('mat4').selection.set([3]);
model.material('mat4').propertyGroup('def').set('relpermeability', {'1'});
model.material('mat4').propertyGroup('def').set('electricconductivity', {'0'});
model.material('mat4').propertyGroup('def').set('relpermittivity', {'4.2'});
model.material('mat4').label('Dielectric');

model.mesh('mesh1').autoMeshSize(2);
model.mesh('mesh1').create('edg1', 'Edge');
model.mesh('mesh1').feature('edg1').selection.named('sel1');
model.mesh('mesh1').feature('edg1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('edg1').feature('dis1').selection.named('sel1');
model.mesh('mesh1').feature('edg1').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('edg1').feature('dis1').set('elemcount', 30);
model.mesh('mesh1').feature('edg1').feature('dis1').set('elemratio', 6);
model.mesh('mesh1').feature('edg1').feature('dis1').set('growthrate', 'exponential');
model.mesh('mesh1').feature('edg1').feature('dis1').set('symmetric', true);
model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('map1').selection.named('sel2');
model.mesh('mesh1').create('edg2', 'Edge');
model.mesh('mesh1').feature('edg2').selection.set([8 27 35]);
model.mesh('mesh1').feature('edg2').create('size1', 'Size');
model.mesh('mesh1').feature('edg2').feature('size1').set('custom', true);
model.mesh('mesh1').feature('edg2').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('edg2').feature('size1').set('hmax', '5e-4');
model.mesh('mesh1').create('edg3', 'Edge');
model.mesh('mesh1').feature('edg3').selection.set([36 37 38]);
model.mesh('mesh1').feature('edg3').create('size1', 'Size');
model.mesh('mesh1').feature('edg3').feature('size1').set('custom', true);
model.mesh('mesh1').feature('edg3').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('edg3').feature('size1').set('hmax', '1e-3');
model.mesh('mesh1').create('bl1', 'BndLayer');
model.mesh('mesh1').feature('bl1').create('blp', 'BndLayerProp');
model.mesh('mesh1').feature('bl1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('bl1').selection.set([4]);
model.mesh('mesh1').feature('bl1').set('smoothtransition', false);
model.mesh('mesh1').feature('bl1').feature('blp').selection.named('sel3');
model.mesh('mesh1').feature('bl1').feature('blp').set('blstretch', 1.1);
model.mesh('mesh1').feature('bl1').feature('blp').set('inittype', 'blhmin');
model.mesh('mesh1').feature('bl1').feature('blp').set('blhmin', '2E-5');
model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').run;

model.study('std1').feature('ftrans').set('freq', '2[MHz]');
model.study('std1').feature('ftrans').set('tlist', '0 10^{range(-8,2.6505149978319906,-2.6989700043360187)}');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'ftrans');
model.sol('sol1').feature('st1').set('splitcomplex', 'on');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'ftrans');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', '0 10^{range(-8,2.6505149978319906,-2.6989700043360187)}');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'manual');
model.sol('sol1').feature('t1').set('atolglobalmethod', 'unscaled');
model.sol('sol1').feature('t1').set('atolglobal', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'manual');
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('estrat', 'exclude');
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('initialstepbdfactive', true);
model.sol('sol1').feature('t1').set('initialstepbdf', '(1.0E-13)[s]');
model.sol('sol1').feature('t1').set('control', 'ftrans');
model.sol('sol1').feature('t1').feature('aDef').set('matherr', false);
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'onevery');
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'onevery');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 4, 0);
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'plas.ne'});
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 4, 0);
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'plas.Te'});
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').set('data', 'dset1');
model.result('pg3').setIndex('looplevel', 4, 0);
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', {'V'});
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg2').feature('surf1').set('colortable', 'Prism');
model.result('pg3').feature('surf1').set('colortable', 'Dipole');
model.result('pg1').label('Electron Density (plas)');
model.result('pg2').label('Electron Temperature (plas)');
model.result('pg3').label('Electric Potential (plas)');
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').label('Magnetic Flux Density Norm (mf)');
model.result('pg4').set('dataisaxisym', 'off');
model.result('pg4').set('frametype', 'spatial');
model.result('pg4').set('showlegendsmaxmin', true);
model.result('pg4').set('data', 'dset1');
model.result('pg4').setIndex('looplevel', 4, 0);
model.result('pg4').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom6/pdef1/pcond2/pcond2/pg1');
model.result('pg4').feature.create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('showsolutionparams', 'on');
model.result('pg4').feature('surf1').set('solutionparams', 'parent');
model.result('pg4').feature('surf1').set('expr', 'mf.normB');
model.result('pg4').feature('surf1').set('colortabletrans', 'nonlinear');
model.result('pg4').feature('surf1').set('colorcalibration', -0.8);
model.result('pg4').feature('surf1').set('showsolutionparams', 'on');
model.result('pg4').feature('surf1').set('data', 'parent');
model.result('pg4').feature.create('str1', 'Streamline');
model.result('pg4').feature('str1').set('showsolutionparams', 'on');
model.result('pg4').feature('str1').set('solutionparams', 'parent');
model.result('pg4').feature('str1').set('expr', {'mf.Br' 'mf.Bz'});
model.result('pg4').feature('str1').set('titletype', 'none');
model.result('pg4').feature('str1').set('posmethod', 'uniform');
model.result('pg4').feature('str1').set('udist', 0.03);
model.result('pg4').feature('str1').set('maxlen', 0.4);
model.result('pg4').feature('str1').set('maxtime', Inf);
model.result('pg4').feature('str1').set('inheritcolor', false);
model.result('pg4').feature('str1').set('showsolutionparams', 'on');
model.result('pg4').feature('str1').set('maxtime', Inf);
model.result('pg4').feature('str1').set('showsolutionparams', 'on');
model.result('pg4').feature('str1').set('maxtime', Inf);
model.result('pg4').feature('str1').set('showsolutionparams', 'on');
model.result('pg4').feature('str1').set('maxtime', Inf);
model.result('pg4').feature('str1').set('showsolutionparams', 'on');
model.result('pg4').feature('str1').set('maxtime', Inf);
model.result('pg4').feature('str1').set('data', 'parent');
model.result('pg4').feature('str1').selection.geom('geom1', 1);
model.result('pg4').feature('str1').selection.set([1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38]);
model.result('pg4').feature('str1').set('inheritplot', 'surf1');
model.result('pg4').feature('str1').feature.create('col1', 'Color');
model.result('pg4').feature('str1').feature('col1').set('expr', 'mf.normB');
model.result('pg4').feature('str1').feature('col1').set('colortable', 'PrismDark');
model.result('pg4').feature('str1').feature('col1').set('colorlegend', false);
model.result('pg4').feature('str1').feature('col1').set('colortabletrans', 'nonlinear');
model.result('pg4').feature('str1').feature('col1').set('colorcalibration', -0.8);
model.result('pg4').feature('str1').feature.create('filt1', 'Filter');
model.result('pg4').feature('str1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result('pg4').feature.create('con1', 'Contour');
model.result('pg4').feature('con1').set('showsolutionparams', 'on');
model.result('pg4').feature('con1').set('solutionparams', 'parent');
model.result('pg4').feature('con1').set('expr', 'r*mf.Aphi');
model.result('pg4').feature('con1').set('titletype', 'none');
model.result('pg4').feature('con1').set('number', 10);
model.result('pg4').feature('con1').set('levelrounding', false);
model.result('pg4').feature('con1').set('coloring', 'uniform');
model.result('pg4').feature('con1').set('colorlegend', false);
model.result('pg4').feature('con1').set('color', 'custom');
model.result('pg4').feature('con1').set('customcolor', [0.3764705955982208 0.3764705955982208 0.3764705955982208]);
model.result('pg4').feature('con1').set('resolution', 'fine');
model.result('pg4').feature('con1').set('inheritcolor', false);
model.result('pg4').feature('con1').set('showsolutionparams', 'on');
model.result('pg4').feature('con1').set('data', 'parent');
model.result('pg4').feature('con1').set('inheritplot', 'surf1');
model.result('pg4').feature('con1').feature.create('filt1', 'Filter');
model.result('pg4').feature('con1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result.dataset.create('rev1', 'Revolve2D');
model.result.dataset('rev1').set('data', 'none');
model.result.dataset('rev1').set('startangle', -90);
model.result.dataset('rev1').set('revangle', 225);
model.result.dataset('rev1').set('data', 'dset1');
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').label('Magnetic Flux Density Norm, Revolved Geometry (mf)');
model.result('pg5').set('frametype', 'spatial');
model.result('pg5').set('showlegendsmaxmin', true);
model.result('pg5').set('data', 'rev1');
model.result('pg5').setIndex('looplevel', 4, 0);
model.result('pg5').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom6/pdef1/pcond2/pcond3/pg1');
model.result('pg5').feature.create('vol1', 'Volume');
model.result('pg5').feature('vol1').set('showsolutionparams', 'on');
model.result('pg5').feature('vol1').set('solutionparams', 'parent');
model.result('pg5').feature('vol1').set('expr', 'mf.normB');
model.result('pg5').feature('vol1').set('colortabletrans', 'nonlinear');
model.result('pg5').feature('vol1').set('colorcalibration', -0.8);
model.result('pg5').feature('vol1').set('showsolutionparams', 'on');
model.result('pg5').feature('vol1').set('data', 'parent');
model.result('pg5').feature.create('con1', 'Contour');
model.result('pg5').feature('con1').set('showsolutionparams', 'on');
model.result('pg5').feature('con1').set('solutionparams', 'parent');
model.result('pg5').feature('con1').set('expr', 'r*mf.Aphi');
model.result('pg5').feature('con1').set('titletype', 'none');
model.result('pg5').feature('con1').set('number', 10);
model.result('pg5').feature('con1').set('levelrounding', false);
model.result('pg5').feature('con1').set('coloring', 'uniform');
model.result('pg5').feature('con1').set('colorlegend', false);
model.result('pg5').feature('con1').set('color', 'custom');
model.result('pg5').feature('con1').set('customcolor', [0.3764705955982208 0.3764705955982208 0.3764705955982208]);
model.result('pg5').feature('con1').set('resolution', 'fine');
model.result('pg5').feature('con1').set('inheritcolor', false);
model.result('pg5').feature('con1').set('showsolutionparams', 'on');
model.result('pg5').feature('con1').set('data', 'parent');
model.result('pg5').feature('con1').set('inheritplot', 'vol1');
model.result('pg5').feature('con1').feature.create('filt1', 'Filter');
model.result('pg5').feature('con1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result('pg5').feature('con1').feature('filt1').set('shownodespec', 'on');
model.result('pg1').run;
model.result('pg2').run;
model.result('pg3').run;
model.result.create('pg6', 'PlotGroup2D');
model.result('pg6').run;
model.result('pg6').label('Power Deposition');
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', 'mf.Qrh');
model.result('pg6').feature('surf1').set('descr', 'Volumetric loss density, electric');
model.result('pg6').feature('surf1').set('colortable', 'ThermalWave');
model.result('pg6').feature('surf1').create('sel1', 'Selection');
model.result('pg6').feature('surf1').feature('sel1').selection.set([4]);
model.result('pg6').run;
model.result.create('pg7', 'PlotGroup2D');
model.result('pg7').run;
model.result('pg7').label('Ground State Mercury Mole Fraction');
model.result('pg7').create('surf1', 'Surface');
model.result('pg7').feature('surf1').set('expr', 'plas.x_wHg');
model.result('pg7').feature('surf1').set('descr', 'Mole fraction');
model.result('pg7').run;
model.result.create('pg8', 'PlotGroup2D');
model.result('pg8').run;
model.result('pg8').label('Mercury Ion Number Density');
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').feature('surf1').set('expr', 'plas.n_wHg_1p');
model.result('pg8').feature('surf1').set('descr', 'Number density');
model.result('pg8').run;
model.result.create('pg9', 'PlotGroup2D');
model.result('pg9').run;
model.result('pg9').label('Mole Fraction of Excited Mercury 2');
model.result('pg9').create('surf1', 'Surface');
model.result('pg9').feature('surf1').set('expr', 'plas.x_wHg2');
model.result('pg9').feature('surf1').set('descr', 'Mole fraction');
model.result('pg9').run;
model.result.create('pg10', 'PlotGroup2D');
model.result('pg10').run;
model.result('pg10').label('Mole Fraction of Excited Mercury 4');
model.result('pg10').create('surf1', 'Surface');
model.result('pg10').feature('surf1').set('expr', 'plas.x_wHg4');
model.result('pg10').feature('surf1').set('descr', 'Mole fraction');
model.result('pg10').run;

model.title('Electrodeless Lamp');

model.description(['This example investigates the emission spectrum and mechanism of conversion of electrical energy into light energy in an electrodeless lamp. The model is essentially a transformer with the plasma acting as the secondary. The model contains 96' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'reactions and 12' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'species.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;

model.label('electrodeless_lamp.mph');

model.modelNode.label('Components');

out = model;
