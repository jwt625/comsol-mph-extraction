function out = model
%
% pressure_sensor_hygroscopic_swelling.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Structural_Mechanics_Module/Hygroscopic_Swelling');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');
model.physics.create('shell', 'Shell', 'geom1');
model.physics('shell').model('comp1');
model.physics.create('tds', 'DilutedSpecies', 'geom1', {'c'});

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/solid', true);
model.study('std1').feature('time').setSolveFor('/physics/shell', true);
model.study('std1').feature('time').setSolveFor('/physics/tds', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('l', '20[mm]', 'Length of the device');
model.param.set('w', '15[mm]', 'Width of the device');
model.param.set('l_MC', '15[mm]', 'Length of the epoxy mold compound');
model.param.set('w_MC', '10[mm]', 'Width of the epoxy mold compound');
model.param.set('l_die', '1.2[mm]', 'Side length of the pressure sensor');
model.param.set('l_memb', '700[um]', 'Side length of the silicon membrane');
model.param.set('l_hole', '800[um]', 'Side length of the hole in FR4');
model.param.set('t_FR4', '1[mm]', 'Thickness of the FR4');
model.param.set('t_Si', '200[um]', 'Thickness of the silicon');
model.param.set('t_memb', '20[um]', 'Thickness of the silicon membrane');
model.param.set('t_glass', '200[um]', 'Thickness of the silica glass wafer');
model.param.set('t_MC', '1.5[mm]', 'Thickness of the mold compound');
model.param.set('cmax', '140[mol/m^3]', 'Saturated concentration of the mold compound');
model.param.set('cini', '40[mol/m^3]', 'Initial moisture concentration');
model.param.set('pext', '1[bar]', 'External pressure');
model.param.set('t', '0[s]', 'Time used for parametric sweep');
model.param.set('Dc', '4e-13[m^2/s]', 'Diffusion coefficient');
model.param.label('Model Parameters');

model.geom('geom1').lengthUnit('mm');
model.geom('geom1').create('blk1', 'Block');
model.geom('geom1').feature('blk1').set('size', {'l_die/2' 'l_die/2' '1'});
model.geom('geom1').feature('blk1').setIndex('size', 't_Si+t_glass', 2);
model.geom('geom1').feature('blk1').setIndex('layername', 'Layer 1', 0);
model.geom('geom1').feature('blk1').setIndex('layer', 't_Si', 0);
model.geom('geom1').run('blk1');
model.geom('geom1').create('blk2', 'Block');
model.geom('geom1').feature('blk2').set('size', {'l_MC/2' 'w_MC/2' '1'});
model.geom('geom1').feature('blk2').setIndex('size', 't_MC', 2);
model.geom('geom1').run('blk2');
model.geom('geom1').create('blk3', 'Block');
model.geom('geom1').feature('blk3').set('size', {'l_memb/2' 'l_memb/2' '1'});
model.geom('geom1').feature('blk3').setIndex('size', 't_Si', 2);
model.geom('geom1').run('blk3');
model.geom('geom1').create('dif1', 'Difference');
model.geom('geom1').feature('dif1').selection('input').set({'blk1' 'blk2'});
model.geom('geom1').feature('dif1').selection('input2').set({'blk3'});
model.geom('geom1').runPre('fin');
model.geom('geom1').create('blk4', 'Block');
model.geom('geom1').feature('blk4').set('size', {'l/2' 'w/2' 't_FR4'});
model.geom('geom1').feature('blk4').set('pos', {'0' '0' '-t_FR4'});
model.geom('geom1').run('blk4');
model.geom('geom1').create('blk5', 'Block');
model.geom('geom1').feature('blk5').set('size', {'l_hole/2' 'l_hole/2' '1'});
model.geom('geom1').feature('blk5').setIndex('size', 't_FR4', 2);
model.geom('geom1').feature('blk5').set('pos', {'0' '0' '-t_FR4'});
model.geom('geom1').run('blk5');
model.geom('geom1').create('dif2', 'Difference');
model.geom('geom1').feature('dif2').selection('input').set({'blk4'});
model.geom('geom1').feature('dif2').selection('input2').set({'blk5'});
model.geom('geom1').runPre('fin');
model.geom('geom1').create('wp1', 'WorkPlane');
model.geom('geom1').feature('wp1').set('unite', true);
model.geom('geom1').feature('wp1').geom.create('r1', 'Rectangle');
model.geom('geom1').feature('wp1').geom.feature('r1').set('size', {'l_memb/2' 'l_memb/2'});
model.geom('geom1').feature('wp1').geom.run('r1');
model.geom('geom1').run('fin');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');
model.selection('sel1').label('FR4');
model.selection('sel1').set([4]);
model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').label('Silicon');
model.selection('sel2').set([3]);
model.selection.create('sel3', 'Explicit');
model.selection('sel3').model('comp1');
model.selection('sel3').label('Glass');
model.selection('sel3').set([1]);
model.selection.create('sel4', 'Explicit');
model.selection('sel4').model('comp1');
model.selection('sel4').label('Mold Compound');
model.selection('sel4').set([2]);
model.selection.create('sel5', 'Explicit');
model.selection('sel5').model('comp1');
model.selection('sel5').label('Membrane');
model.selection('sel5').geom(2);
model.selection('sel5').set([1]);

model.physics('shell').selection.named('sel5');
model.physics('shell').prop('z').set('z', -1);
model.physics('shell').feature('to1').set('d', 't_memb');
model.physics('shell').feature('to1').set('OffsetDefinition', 'bottom');
model.physics('shell').create('sym1', 'SymmetrySolid1', 1);
model.physics('shell').feature('sym1').selection.set([1 2]);
model.physics('shell').create('fl1', 'FaceLoad', 2);
model.physics('shell').feature('fl1').selection.named('sel5');
model.physics('shell').feature('fl1').set('LoadTypeForce', 'FollowerLoad');
model.physics('shell').feature('fl1').set('FollowerPressure', '-pext');
model.physics('solid').prop('ShapeProperty').set('order_displacement', 2);
model.physics('solid').create('fix1', 'Fixed', 2);
model.physics('solid').feature('fix1').selection.set([15]);
model.physics('solid').create('sym1', 'SymmetrySolid', 2);
model.physics('solid').feature('sym1').selection.set([2 3 5 6 9 13 24 26]);

model.func.create('step1', 'Step');
model.func('step1').model('comp1');
model.func('step1').set('location', '0.5[h]');
model.func('step1').set('smooth', '1[h]');

model.physics('tds').selection.named('sel4');
model.physics('tds').prop('TransportMechanism').set('Convection', false);
model.physics('tds').prop('ShapeProperty').set('order_concentration', 2);
model.physics('tds').feature('cdm1').set('D_c', {'Dc' '0' '0' '0' 'Dc' '0' '0' '0' 'Dc'});
model.physics('tds').feature('init1').setIndex('initc', 'cini', 0);
model.physics('tds').create('sym1', 'Symmetry', 2);
model.physics('tds').feature('sym1').selection.set([5 6]);
model.physics('tds').create('conc1', 'Concentration', 2);
model.physics('tds').feature('conc1').selection.set([8 20 29]);
model.physics('tds').feature('conc1').setIndex('species', true, 0);
model.physics('tds').feature('conc1').setIndex('c0', 'cini+(cmax-cini)*step1(t)', 0);

model.multiphysics.create('hs1', 'HygroscopicSwelling', 'geom1', 3);
model.multiphysics('hs1').selection.named('sel4');
model.multiphysics('hs1').set('cmo_ref', 'cini');
model.multiphysics.create('sshc1', 'SolidShellConnection', 'geom1', -1);
model.multiphysics('sshc1').set('selectionControl', true);
model.multiphysics('sshc1').selection('edgBndSolidSelection').set([10 23]);

model.massProp.create('mass1', 'MassProperties');
model.massProp('mass1').model('comp1');
model.massProp('mass1').selection.named('sel4');
model.massProp('mass1').set('densitySource', 'fromPhysics');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat1').label('FR4 (Circuit Board)');
model.material('mat1').set('family', 'pcbgreen');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'0.004[S/m]' '0' '0' '0' '0.004[S/m]' '0' '0' '0' '0.004[S/m]'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'4.5' '0' '0' '0' '4.5' '0' '0' '0' '4.5'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'18e-6[1/K]' '0' '0' '0' '18e-6[1/K]' '0' '0' '0' '18e-6[1/K]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', '1369[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('density', '1900[kg/m^3]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'0.3[W/(m*K)]' '0' '0' '0' '0.3[W/(m*K)]' '0' '0' '0' '0.3[W/(m*K)]'});
model.material('mat1').propertyGroup('Enu').set('E', '22[GPa]');
model.material('mat1').propertyGroup('Enu').set('nu', '0.15');
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat2').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat2').label('Silicon');
model.material('mat2').set('family', 'custom');
model.material('mat2').set('customspecular', [0.7843137254901961 1 1]);
model.material('mat2').set('customdiffuse', [0.6666666666666666 0.6666666666666666 0.7058823529411765]);
model.material('mat2').set('customambient', [0.6666666666666666 0.6666666666666666 0.7058823529411765]);
model.material('mat2').set('noise', true);
model.material('mat2').set('fresnel', 0.7);
model.material('mat2').set('metallic', 0);
model.material('mat2').set('pearl', 0);
model.material('mat2').set('diffusewrap', 0);
model.material('mat2').set('clearcoat', 0);
model.material('mat2').set('reflectance', 0);
model.material('mat2').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('electricconductivity', {'1e-12[S/m]' '0' '0' '0' '1e-12[S/m]' '0' '0' '0' '1e-12[S/m]'});
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'2.6e-6[1/K]' '0' '0' '0' '2.6e-6[1/K]' '0' '0' '0' '2.6e-6[1/K]'});
model.material('mat2').propertyGroup('def').set('heatcapacity', '700[J/(kg*K)]');
model.material('mat2').propertyGroup('def').set('relpermittivity', {'11.7' '0' '0' '0' '11.7' '0' '0' '0' '11.7'});
model.material('mat2').propertyGroup('def').set('density', '2329[kg/m^3]');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'130[W/(m*K)]' '0' '0' '0' '130[W/(m*K)]' '0' '0' '0' '130[W/(m*K)]'});
model.material('mat2').propertyGroup('Enu').set('E', '170[GPa]');
model.material('mat2').propertyGroup('Enu').set('nu', '0.28');
model.material('mat2').propertyGroup('RefractiveIndex').set('n', {'3.48' '0' '0' '0' '3.48' '0' '0' '0' '3.48'});
model.material.create('mat3', 'Common', 'comp1');
model.material('mat3').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat3').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat3').label('Silicon 1');
model.material('mat3').set('family', 'custom');
model.material('mat3').set('customspecular', [0.7843137254901961 1 1]);
model.material('mat3').set('customdiffuse', [0.6666666666666666 0.6666666666666666 0.7058823529411765]);
model.material('mat3').set('customambient', [0.6666666666666666 0.6666666666666666 0.7058823529411765]);
model.material('mat3').set('noise', true);
model.material('mat3').set('fresnel', 0.7);
model.material('mat3').set('metallic', 0);
model.material('mat3').set('pearl', 0);
model.material('mat3').set('diffusewrap', 0);
model.material('mat3').set('clearcoat', 0);
model.material('mat3').set('reflectance', 0);
model.material('mat3').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('def').set('electricconductivity', {'1e-12[S/m]' '0' '0' '0' '1e-12[S/m]' '0' '0' '0' '1e-12[S/m]'});
model.material('mat3').propertyGroup('def').set('thermalexpansioncoefficient', {'2.6e-6[1/K]' '0' '0' '0' '2.6e-6[1/K]' '0' '0' '0' '2.6e-6[1/K]'});
model.material('mat3').propertyGroup('def').set('heatcapacity', '700[J/(kg*K)]');
model.material('mat3').propertyGroup('def').set('relpermittivity', {'11.7' '0' '0' '0' '11.7' '0' '0' '0' '11.7'});
model.material('mat3').propertyGroup('def').set('density', '2329[kg/m^3]');
model.material('mat3').propertyGroup('def').set('thermalconductivity', {'130[W/(m*K)]' '0' '0' '0' '130[W/(m*K)]' '0' '0' '0' '130[W/(m*K)]'});
model.material('mat3').propertyGroup('Enu').set('E', '170[GPa]');
model.material('mat3').propertyGroup('Enu').set('nu', '0.28');
model.material('mat3').propertyGroup('RefractiveIndex').set('n', {'3.48' '0' '0' '0' '3.48' '0' '0' '0' '3.48'});
model.material.create('mat4', 'Common', 'comp1');
model.material('mat4').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat4').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat4').label('Silica glass');
model.material('mat4').set('family', 'custom');
model.material('mat4').set('customambient', [1 1 1]);
model.material('mat4').set('noise', true);
model.material('mat4').set('fresnel', 0.99);
model.material('mat4').set('roughness', 0.02);
model.material('mat4').set('metallic', 0);
model.material('mat4').set('pearl', 0);
model.material('mat4').set('diffusewrap', 0);
model.material('mat4').set('clearcoat', 0);
model.material('mat4').set('reflectance', 0);
model.material('mat4').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat4').propertyGroup('def').set('electricconductivity', {'1e-14[S/m]' '0' '0' '0' '1e-14[S/m]' '0' '0' '0' '1e-14[S/m]'});
model.material('mat4').propertyGroup('def').set('thermalexpansioncoefficient', {'0.55e-6[1/K]' '0' '0' '0' '0.55e-6[1/K]' '0' '0' '0' '0.55e-6[1/K]'});
model.material('mat4').propertyGroup('def').set('heatcapacity', '703[J/(kg*K)]');
model.material('mat4').propertyGroup('def').set('relpermittivity', {'3.75' '0' '0' '0' '3.75' '0' '0' '0' '3.75'});
model.material('mat4').propertyGroup('def').set('density', '2203[kg/m^3]');
model.material('mat4').propertyGroup('def').set('thermalconductivity', {'1.38[W/(m*K)]' '0' '0' '0' '1.38[W/(m*K)]' '0' '0' '0' '1.38[W/(m*K)]'});
model.material('mat4').propertyGroup('Enu').set('E', '73.1[GPa]');
model.material('mat4').propertyGroup('Enu').set('nu', '0.17');
model.material('mat4').propertyGroup('RefractiveIndex').set('n', {'1.45' '0' '0' '0' '1.45' '0' '0' '0' '1.45'});
model.material('mat1').selection.named('sel1');
model.material('mat2').selection.named('sel2');
model.material('mat3').label('Silicon (membrane)');
model.material('mat3').selection.geom('geom1', 2);
model.material('mat3').selection.named('sel5');
model.material('mat4').selection.named('sel3');
model.material.create('mat5', 'Common', 'comp1');
model.material('mat5').label('Mold Compound');
model.material('mat5').selection.named('sel4');
model.material('mat5').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat5').propertyGroup('Enu').set('E', {'22[GPa]'});
model.material('mat5').propertyGroup('Enu').set('nu', {'0.4'});
model.material('mat5').propertyGroup('def').set('density', {'1900'});
model.material('mat5').propertyGroup('def').set('hygroscopicswellingcoefficient', {'1.1e-4'});
model.material('mat5').set('color', 'black');

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.named('sel5');
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 10);
model.mesh('mesh1').feature('map1').feature('dis1').selection.all;
model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.set([11 16]);
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe1').selection.named('sel2');
model.mesh('mesh1').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('swe1').feature('dis1').set('elemratio', 5);
model.mesh('mesh1').create('ftet1', 'FreeTet');
model.mesh('mesh1').feature('ftet1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('ftet1').selection.named('sel3');
model.mesh('mesh1').create('bl1', 'BndLayer');
model.mesh('mesh1').feature('bl1').create('blp', 'BndLayerProp');
model.mesh('mesh1').feature('bl1').selection.geom(3);
model.mesh('mesh1').feature('bl1').selection.set([]);
model.mesh('mesh1').feature('bl1').selection.allGeom;
model.mesh('mesh1').feature('bl1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('bl1').selection.named('sel4');
model.mesh('mesh1').feature('bl1').feature('blp').selection.set([8 20 29]);
model.mesh('mesh1').feature('bl1').feature('blp').set('blnlayers', 4);
model.mesh('mesh1').create('swe2', 'Sweep');
model.mesh('mesh1').feature('swe2').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe2').selection.named('sel1');
model.mesh('mesh1').feature('swe2').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe2').feature('dis1').set('numelem', 4);
model.mesh('mesh1').run;

model.study('std1').feature('time').set('tlist', '0 10^range(2,0.1,7.5)');
model.study('std1').feature('time').setEntry('activate', 'solid', false);
model.study('std1').feature('time').setEntry('activate', 'shell', false);

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([2]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', '0 10^range(2,0.1,7.5)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.005);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('stabcntrl', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('t1').feature('i1').set('maxlinit', 50);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i1').label('AMG, concentrations (tds)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d1').label('Direct, concentrations (tds)');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').run;
model.result('pg1').label('Concentration');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', 'c');
model.result('pg1').feature('surf1').set('descr', 'Concentration');
model.result('pg1').feature('surf1').set('rangecoloractive', true);
model.result('pg1').feature('surf1').set('rangecolormin', 40);
model.result('pg1').feature('surf1').set('rangecolormax', 140);

model.study('std1').feature('time').set('plot', true);
model.study('std1').setGenPlots(false);

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([2]);

model.sol('sol1').study('std1');
model.sol('sol1').feature.remove('t1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', '0 10^range(2,0.1,7.5)');
model.sol('sol1').feature('t1').set('plot', 'on');
model.sol('sol1').feature('t1').set('plotgroup', 'pg1');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.005);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('stabcntrl', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('t1').feature('i1').set('maxlinit', 50);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i1').label('AMG, concentrations (tds)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d1').label('Direct, concentrations (tds)');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg1').setIndex('looplevel', 39, 0);
model.result('pg1').run;
model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').run;
model.result('pg2').label('Concentration at Die Location');
model.result('pg2').create('ptgr1', 'PointGraph');
model.result('pg2').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg2').feature('ptgr1').set('linewidth', 'preference');
model.result('pg2').feature('ptgr1').selection.set([3]);
model.result('pg2').feature('ptgr1').set('expr', 'c');
model.result('pg2').feature('ptgr1').set('descr', 'Concentration');
model.result('pg2').feature('ptgr1').set('xdataparamunit', 'd');
model.result('pg2').run;
model.result('pg2').set('xlog', true);
model.result('pg2').run;
model.result('pg2').set('xlabelactive', true);
model.result('pg2').set('xlabel', 'Time (days)');
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('Mass Uptake');
model.result('pg3').set('showlegends', false);
model.result('pg3').create('glob1', 'Global');
model.result('pg3').feature('glob1').set('markerpos', 'datapoints');
model.result('pg3').feature('glob1').set('linewidth', 'preference');
model.result('pg3').feature('glob1').setIndex('expr', '(mass1.mass-at(0,mass1.mass))/at(0,mass1.mass)*100', 0);
model.result('pg3').feature('glob1').setIndex('unit', 1, 0);
model.result('pg3').feature('glob1').setIndex('descr', 'Relative Mass Uptake (%)', 0);
model.result('pg3').feature('glob1').set('xdata', 'expr');
model.result('pg3').feature('glob1').set('xdataexpr', 'sqrt(t[1/d])');
model.result('pg3').feature('glob1').set('xdatadescractive', true);
model.result('pg3').feature('glob1').set('xdatadescr', '(time)^(1/2) [d^(1/2)]');
model.result('pg3').run;
model.result('pg3').set('xlabelactive', true);
model.result('pg3').set('xlabel', 'Square Root of Time (days^1/2)');
model.result('pg3').set('axislimits', true);
model.result('pg3').set('xmin', 0);
model.result('pg3').set('xmax', 15);
model.result('pg3').run;

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/solid', true);
model.study('std2').feature('stat').setSolveFor('/physics/shell', true);
model.study('std2').feature('stat').setSolveFor('/physics/tds', true);
model.study('std2').feature('stat').setSolveFor('/multiphysics/hs1', true);
model.study('std2').feature('stat').setSolveFor('/multiphysics/sshc1', true);
model.study('std2').feature('stat').setEntry('activate', 'tds', false);
model.study('std2').feature('stat').set('usesol', true);
model.study('std2').feature('stat').set('notsolmethod', 'sol');
model.study('std2').feature('stat').set('notstudy', 'std1');
model.study('std2').feature('stat').set('notsolnum', 'all');
model.study('std2').feature('stat').set('useparam', true);
model.study('std2').feature('stat').setIndex('pname', 'l', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 'm', 0);
model.study('std2').feature('stat').setIndex('pname', 'l', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 'm', 0);
model.study('std2').feature('stat').setIndex('pname', 't', 0);
model.study('std2').feature('stat').setIndex('plistarr', '0 10^range(2,0.1,7.5)', 0);

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_ar').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_ar').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_ar').set('scaleval', '0.01');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('p1', 'Parametric');
model.sol('sol2').feature('s1').feature.remove('pDef');
model.sol('sol2').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol2').feature('s1').set('control', 'stat');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('seDef', 'Segregated');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').feature('s1').feature.remove('seDef');
model.sol('sol2').attach('std2');
model.sol('sol2').feature('s1').create('fc2', 'FullyCoupled');
model.sol('sol2').runAll;

model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').set('data', 'dset2');
model.result('pg4').setIndex('looplevel', 57, 0);
model.result('pg4').set('defaultPlotID', 'stress');
model.result('pg4').label('Stress (solid)');
model.result('pg4').set('frametype', 'spatial');
model.result('pg4').create('vol1', 'Volume');
model.result('pg4').feature('vol1').set('expr', {'solid.misesGp'});
model.result('pg4').feature('vol1').set('threshold', 'manual');
model.result('pg4').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg4').feature('vol1').set('colortable', 'Rainbow');
model.result('pg4').feature('vol1').set('colortabletrans', 'none');
model.result('pg4').feature('vol1').set('colorscalemode', 'linear');
model.result('pg4').feature('vol1').set('resolution', 'custom');
model.result('pg4').feature('vol1').set('refine', 2);
model.result('pg4').feature('vol1').set('colortable', 'Prism');
model.result('pg4').feature('vol1').create('def', 'Deform');
model.result('pg4').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg4').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result.dataset.create('dset2shellshl', 'Shell');
model.result.dataset('dset2shellshl').set('data', 'dset2');
model.result.dataset('dset2shellshl').setIndex('topconst', '1', 6, 1);
model.result.dataset('dset2shellshl').setIndex('bottomconst', '-1', 6, 1);
model.result.dataset('dset2shellshl').setIndex('orientationexpr', 'shell.nlX', 0);
model.result.dataset('dset2shellshl').setIndex('displacementexpr', 'arx', 0);
model.result.dataset('dset2shellshl').setIndex('orientationexpr', 'shell.nlY', 1);
model.result.dataset('dset2shellshl').setIndex('displacementexpr', 'ary', 1);
model.result.dataset('dset2shellshl').setIndex('orientationexpr', 'shell.nlZ', 2);
model.result.dataset('dset2shellshl').setIndex('displacementexpr', 'arz', 2);
model.result.dataset('dset2shellshl').set('distanceexpr', 'shell.z_pos');
model.result.dataset('dset2shellshl').set('seplevels', false);
model.result.dataset('dset2shellshl').set('resolution', 2);
model.result.dataset('dset2shellshl').set('areascalefactor', 'shell.ASF');
model.result.dataset('dset2shellshl').set('linescalefactor', 'shell.LSF');
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').set('data', 'dset2shellshl');
model.result('pg5').setIndex('looplevel', 57, 0);
model.result('pg5').set('defaultPlotID', 'stress');
model.result('pg5').label('Stress (shell)');
model.result('pg5').set('showlegends', true);
model.result('pg5').set('frametype', 'spatial');
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', {'shell.misesGp'});
model.result('pg5').feature('surf1').set('threshold', 'manual');
model.result('pg5').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg5').feature('surf1').set('colortable', 'Rainbow');
model.result('pg5').feature('surf1').set('colortabletrans', 'none');
model.result('pg5').feature('surf1').set('colorscalemode', 'linear');
model.result('pg5').feature('surf1').set('descr', 'von Mises stress');
model.result('pg5').feature('surf1').set('colortable', 'Prism');
model.result('pg5').feature('surf1').create('def', 'Deform');
model.result('pg5').feature('surf1').feature('def').set('expr', {'shell.u' 'shell.v' 'shell.w'});
model.result('pg4').run;
model.result('pg5').run;
model.result('pg4').run;
model.result('pg4').label('Stress');
model.result('pg4').feature.copy('surf1', 'pg5/surf1');
model.result('pg4').run;
model.result('pg4').feature('surf1').set('titletype', 'none');
model.result('pg4').feature('surf1').set('inheritplot', 'vol1');
model.result('pg4').run;
model.result('pg4').feature('vol1').feature('def').set('scaleactive', true);
model.result('pg4').feature('vol1').feature('def').set('scale', 600);
model.result('pg4').run;
model.result('pg5').run;
model.result.remove('pg5');
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').set('data', 'dset2');
model.result('pg5').setIndex('looplevel', 57, 0);
model.result('pg5').set('defaultPlotID', 'displacement');
model.result('pg5').label('Displacement (solid)');
model.result('pg5').set('frametype', 'spatial');
model.result('pg5').set('showlegends', true);
model.result('pg5').create('vol1', 'Volume');
model.result('pg5').feature('vol1').set('expr', {'solid.disp'});
model.result('pg5').feature('vol1').set('threshold', 'manual');
model.result('pg5').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg5').feature('vol1').set('colortable', 'SpectrumLight');
model.result('pg5').feature('vol1').set('colortabletrans', 'none');
model.result('pg5').feature('vol1').set('colorscalemode', 'linear');
model.result('pg5').feature('vol1').set('resolution', 'custom');
model.result('pg5').feature('vol1').set('refine', 2);
model.result('pg5').feature('vol1').create('def', 'Deform');
model.result('pg5').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg5').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result('pg5').label('Displacement (solid)');
model.result('pg5').run;
model.result('pg5').label('Displacement');
model.result('pg5').run;
model.result('pg5').feature('vol1').set('unit', [native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']);
model.result('pg5').run;
model.result('pg5').feature('vol1').feature('def').set('scaleactive', true);
model.result('pg5').feature('vol1').feature('def').set('scale', 600);
model.result('pg5').run;
model.result('pg5').feature.duplicate('vol2', 'vol1');
model.result('pg5').run;
model.result('pg5').feature('vol2').set('data', 'dset2shellshl');
model.result('pg5').feature('vol2').set('solutionparams', 'parent');
model.result('pg5').feature('vol2').set('expr', 'shell.disp');
model.result('pg5').feature('vol2').set('descr', 'Displacement magnitude');
model.result('pg5').feature('vol2').set('titletype', 'none');
model.result('pg5').feature('vol2').set('inheritplot', 'vol1');
model.result('pg5').run;
model.result('pg5').feature('vol2').feature('def').set('expr', {'u2' 'v2' 'w2'});
model.result('pg5').feature('vol2').feature('def').set('descr', 'Displacement field');
model.result('pg5').run;
model.result('pg5').setIndex('looplevel', 39, 0);
model.result('pg5').run;
model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').run;
model.result('pg6').label('Strain');
model.result.dataset.create('cpt1', 'CutPoint3D');
model.result.dataset('cpt1').set('data', 'dset2');
model.result.dataset('cpt1').set('pointx', ['l_memb/2-30[' native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm]']);
model.result.dataset('cpt1').set('pointy', 0);
model.result.dataset('cpt1').set('pointz', 0);
model.result.dataset('cpt1').set('snapping', 'boundary');
model.result.dataset.create('cpt2', 'CutPoint3D');
model.result.dataset('cpt2').set('data', 'dset2');
model.result.dataset('cpt2').set('pointx', 0);
model.result.dataset('cpt2').set('pointy', ['l_memb/2-30[' native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm]']);
model.result.dataset('cpt2').set('pointz', 0);
model.result.dataset('cpt2').set('snapping', 'boundary');
model.result('pg6').run;
model.result('pg6').create('ptgr1', 'PointGraph');
model.result('pg6').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg6').feature('ptgr1').set('linewidth', 'preference');
model.result('pg6').feature('ptgr1').set('data', 'cpt1');
model.result('pg6').feature('ptgr1').set('expr', 'shell.eXX');
model.result('pg6').feature('ptgr1').set('xdata', 'expr');
model.result('pg6').feature('ptgr1').set('xdataexpr', 't');
model.result('pg6').feature('ptgr1').set('xdataunit', 'd');
model.result('pg6').feature('ptgr1').set('legend', true);
model.result('pg6').feature('ptgr1').set('legendmethod', 'manual');
model.result('pg6').feature('ptgr1').setIndex('legends', 'XX Strain on X Axis', 0);
model.result('pg6').run;
model.result('pg6').create('ptgr2', 'PointGraph');
model.result('pg6').feature('ptgr2').set('markerpos', 'datapoints');
model.result('pg6').feature('ptgr2').set('linewidth', 'preference');
model.result('pg6').feature('ptgr2').set('data', 'cpt2');
model.result('pg6').feature('ptgr2').set('expr', 'shell.eYY');
model.result('pg6').feature('ptgr2').set('xdata', 'expr');
model.result('pg6').feature('ptgr2').set('xdataexpr', 't');
model.result('pg6').feature('ptgr2').set('xdataunit', 'd');
model.result('pg6').feature('ptgr2').set('legend', true);
model.result('pg6').feature('ptgr2').set('legendmethod', 'manual');
model.result('pg6').feature('ptgr2').setIndex('legends', 'YY Strain on Y Axis', 0);
model.result('pg6').run;
model.result('pg6').set('xlog', true);
model.result('pg6').set('xlabelactive', true);
model.result('pg6').set('xlabel', 'time (days)');
model.result('pg6').set('legendpos', 'upperleft');
model.result('pg6').run;
model.result.create('pg7', 'PlotGroup3D');
model.result('pg7').run;
model.result('pg7').label('Materials');
model.result('pg7').create('surf1', 'Surface');
model.result('pg7').feature('surf1').set('expr', '1');
model.result('pg7').feature('surf1').create('mtrl1', 'MaterialAppearance');
model.result('pg7').run;
model.result('pg7').run;
model.result('pg7').feature.duplicate('surf2', 'surf1');
model.result('pg7').run;
model.result('pg7').run;
model.result('pg7').feature.duplicate('surf3', 'surf1');
model.result('pg7').run;
model.result('pg7').run;
model.result('pg7').feature.duplicate('surf4', 'surf1');
model.result('pg7').run;
model.result('pg7').run;
model.result('pg7').feature.duplicate('surf5', 'surf1');
model.result('pg7').run;
model.result('pg7').run;
model.result('pg7').feature('surf2').feature('mtrl1').set('material', 'mat2');
model.result('pg7').run;
model.result('pg7').feature('surf3').feature('mtrl1').set('material', 'mat3');
model.result('pg7').run;
model.result('pg7').feature('surf4').feature('mtrl1').set('material', 'mat4');
model.result('pg7').run;
model.result('pg7').feature('surf5').feature('mtrl1').set('material', 'mat5');
model.result('pg7').run;
model.result('pg7').set('titletype', 'none');
model.result('pg7').run;
model.result.remove('pg7');
model.result('pg5').run;

model.title('MEMS Pressure Sensor Drift Due to Hygroscopic Swelling');

model.description('An Epoxy Mold Compound covering a MEMS pressure sensor is subject to moisture absorption. A time-dependent study calculates the moisture diffusion in the mold compound and a parametric stationary analysis calculates the drift on measured pressure induced by hygroscopic swelling.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('pressure_sensor_hygroscopic_swelling.mph');

model.modelNode.label('Components');

out = model;
