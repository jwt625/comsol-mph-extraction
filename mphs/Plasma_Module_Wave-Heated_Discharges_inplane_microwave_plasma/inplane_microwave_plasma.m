function out = model
%
% inplane_microwave_plasma.m
%
% Model exported on May 26 2025, 21:32 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Plasma_Module/Wave-Heated_Discharges');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('plas', 'ColdPlasma', 'geom1');
model.physics('plas').model('comp1');
model.physics.create('emw', 'ElectromagneticWaves', 'geom1');
model.physics('emw').model('comp1');
model.physics('emw').prop('ShapeProperty').set('order_electricfield', '1');

model.multiphysics.create('pcc1', 'PlasmaConductivityMultiphysicsCoupling', 'geom1', 2);
model.multiphysics('pcc1').set('elm_physics', 'emw');
model.multiphysics('pcc1').set('plas_physics', 'plas');
model.multiphysics.create('ehs1', 'ElectronHeatSourceMultiphysicsCoupling', 'geom1', 2);
model.multiphysics('ehs1').set('elm_physics', 'emw');
model.multiphysics('ehs1').set('plas_physics', 'plas');

model.study.create('std1');
model.study('std1').create('ftrans', 'FrequencyTransient');
model.study('std1').feature('ftrans').set('initialtime', '0');
model.study('std1').feature('ftrans').set('freq', '1000');
model.study('std1').feature('ftrans').set('solnum', 'auto');
model.study('std1').feature('ftrans').set('notsolnum', 'auto');
model.study('std1').feature('ftrans').set('outputmap', {});
model.study('std1').feature('ftrans').setSolveFor('/physics/plas', true);
model.study('std1').feature('ftrans').setSolveFor('/physics/emw', true);
model.study('std1').feature('ftrans').setSolveFor('/multiphysics/pcc1', true);
model.study('std1').feature('ftrans').setSolveFor('/multiphysics/ehs1', true);

model.param.set('P0', '30[W]');
model.param.descr('P0', 'Absorbed power');

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', [0.05 0.1]);
model.geom('geom1').runPre('fin');
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').set('size', [0.25 0.05]);
model.geom('geom1').feature('r2').set('pos', [-0.1 0.1]);
model.geom('geom1').run('r2');
model.geom('geom1').create('r3', 'Rectangle');
model.geom('geom1').feature('r3').set('size', [0.05 0.1]);
model.geom('geom1').feature('r3').set('pos', [0 0.15]);
model.geom('geom1').runPre('fin');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');

model.geom('geom1').run;

model.selection('sel1').geom(1);
model.selection('sel1').set([1 2 3 6 8 11 13]);
model.selection('sel1').label('Walls');

model.physics('plas').selection.set([1]);
model.physics('plas').create('xsec1', 'CrossSectionImport', -1);
model.physics('plas').feature('xsec1').set('Filepath', 'Ar_xsecs.txt');
model.physics('plas').feature('xsec1').runCommand('importData');
model.physics('plas').create('rxn1', 'Reaction', 2);
model.physics('plas').feature('rxn1').set('formula', 'Ars+Ars=>e+Ar+Ar+');
model.physics('plas').feature('rxn1').set('kf', '3.734E8');
model.physics('plas').create('rxn2', 'Reaction', 2);
model.physics('plas').feature('rxn2').set('formula', 'Ars+Ar=>Ar+Ar');
model.physics('plas').feature('rxn2').set('kf', 1807);
model.physics('plas').feature('Ar').set('FromMassConstraint', true);
model.physics('plas').feature('Ar_1p').set('InitIon', true);
model.physics('plas').create('sr1', 'SurfaceReaction', 1);
model.physics('plas').feature('sr1').set('formula', 'Ars=>Ar');
model.physics('plas').feature('sr1').selection.named('sel1');
model.physics('plas').create('sr2', 'SurfaceReaction', 1);
model.physics('plas').feature('sr2').set('formula', 'Ar+=>Ar');
model.physics('plas').feature('sr2').selection.named('sel1');
model.physics('plas').prop('TransportSettings').set('Convection', true);
model.physics('plas').prop('ElectronProperties').set('ReducedProps', true);
model.physics('plas').feature('pes1').set('u', [10 0 0]);
model.physics('plas').feature('pes1').set('T', 350);
model.physics('plas').feature('pes1').set('pA', '1[torr]');
model.physics('plas').feature('pes1').set('muN', {'4E24' '0' '0' '0' '4E24' '0' '0' '0' '4E24'});
model.physics('plas').feature('init1').set('neinit', '1E17');
model.physics('plas').create('wall1', 'WallDriftDiffusion', 1);
model.physics('plas').feature('wall1').selection.named('sel1');
model.physics('plas').create('gnd1', 'Ground', 1);
model.physics('plas').feature('gnd1').selection.named('sel1');
model.physics('plas').create('eout1', 'ElectronOutlet', 1);
model.physics('plas').feature('eout1').selection.set([14]);
model.physics('plas').feature('Ars').create('out1', 'Outflow', 1);
model.physics('plas').feature('Ars').feature('out1').selection.set([14]);
model.physics('plas').feature('Ar_1p').create('out1', 'Outflow', 1);
model.physics('plas').feature('Ar_1p').feature('out1').selection.set([14]);
model.physics('emw').prop('components').set('components', 'outofplane');
model.physics('emw').create('port1', 'Port', 1);
model.physics('emw').feature('port1').selection.set([9]);
model.physics('emw').feature('port1').set('PortType', 'Rectangular');
model.physics('emw').feature('port1').set('SpecifyDepositedPower', true);
model.physics('emw').feature('port1').set('Pdep', 'P0');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').selection.set([2 3]);
model.material('mat1').propertyGroup('def').set('relpermittivity', {'5'});
model.material('mat1').propertyGroup('def').set('relpermeability', {'1'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'0'});

model.mesh('mesh1').create('bl1', 'BndLayer');
model.mesh('mesh1').feature('bl1').create('blp', 'BndLayerProp');
model.mesh('mesh1').feature('bl1').selection.geom(2);
model.mesh('mesh1').feature('bl1').selection.set([]);
model.mesh('mesh1').feature('bl1').selection.allGeom;
model.mesh('mesh1').feature('bl1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('bl1').selection.set([1]);
model.mesh('mesh1').feature('bl1').feature('blp').selection.named('sel1');
model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('size').set('table', 'plasma');
model.mesh('mesh1').feature('size').set('hauto', 4);
model.mesh('mesh1').run;

model.study('std1').feature('ftrans').set('tlist', '0 10^{range(-8,0.2,-2)}');
model.study('std1').feature('ftrans').set('freq', '2.45[GHz]');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'ftrans');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_plas_Ar_1p_W').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_Ne').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_plas_Ars_W').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_En').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_V').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_plas_Ar_1p_W').set('scaleval', '1');
model.sol('sol1').feature('v1').feature('comp1_Ne').set('scaleval', '35');
model.sol('sol1').feature('v1').feature('comp1_plas_Ars_W').set('scaleval', '1');
model.sol('sol1').feature('v1').feature('comp1_En').set('scaleval', '35');
model.sol('sol1').feature('v1').feature('comp1_V').set('scaleval', '10');
model.sol('sol1').feature('v1').set('control', 'ftrans');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', '0 10^{range(-8,0.2,-2)}');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'manual');
model.sol('sol1').feature('t1').set('atolglobalmethod', 'unscaled');
model.sol('sol1').feature('t1').set('atolglobal', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'manual');
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('estrat', 'exclude');
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('initialstepbdfactive', true);
model.sol('sol1').feature('t1').set('initialstepbdf', '(1.0E-13)[s]');
model.sol('sol1').feature('t1').set('complex', true);
model.sol('sol1').feature('t1').set('control', 'ftrans');
model.sol('sol1').feature('t1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('t1').feature('aDef').set('matherr', false);
model.sol('sol1').feature('t1').feature('aDef').set('nullfun', 'flnullorth');
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_plas_Ars_W' 'comp1_plas_Ar_1p_W' 'comp1_Ne' 'comp1_En' 'comp1_V'});
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Plasma');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_Sparam1' 'comp1_E'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('subjtech', 'onevery');
model.sol('sol1').feature('t1').create('d2', 'Direct');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol1').feature('t1').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('segvar', {'comp1_Pin1'});
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('subjtech', 'onevery');
model.sol('sol1').feature('t1').create('d3', 'Direct');
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('linsolver', 'd3');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 32, 0);
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'plas.ne'});
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 32, 0);
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'plas.Te'});
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').set('data', 'dset1');
model.result('pg3').setIndex('looplevel', 32, 0);
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', {'V'});
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg2').feature('surf1').set('colortable', 'Prism');
model.result('pg3').feature('surf1').set('colortable', 'Dipole');
model.result('pg1').label('Electron Density (plas)');
model.result('pg2').label('Electron Temperature (plas)');
model.result('pg3').label('Electric Potential (plas)');
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').label('Electric Field (emw)');
model.result('pg4').set('frametype', 'spatial');
model.result('pg4').set('showlegendsmaxmin', true);
model.result('pg4').set('data', 'dset1');
model.result('pg4').setIndex('looplevel', 32, 0);
model.result('pg4').set('defaultPlotID', 'ElectromagneticWaves/phys1/pdef1/pcond2/pg1');
model.result('pg4').feature.create('surf1', 'Surface');
model.result('pg4').feature('surf1').label('Surface');
model.result('pg4').feature('surf1').set('expr', 'emw.normE');
model.result('pg4').feature('surf1').set('colortable', 'RainbowLight');
model.result('pg4').feature('surf1').set('smooth', 'internal');
model.result('pg4').feature('surf1').set('data', 'parent');
model.result('pg1').run;
model.result('pg2').run;
model.result('pg3').run;
model.result('pg4').run;
model.result('pg4').create('con1', 'Contour');
model.result('pg4').feature('con1').set('levelmethod', 'levels');
model.result('pg4').feature('con1').set('levels', 7.6E16);
model.result('pg4').feature('con1').set('colorlegend', false);
model.result('pg4').feature('con1').set('coloring', 'uniform');
model.result('pg4').feature('con1').set('color', 'black');
model.result('pg4').run;
model.result('pg4').run;
model.result.duplicate('pg5', 'pg4');
model.result('pg5').run;
model.result('pg5').label('Resistive Heating');
model.result('pg5').run;
model.result('pg5').feature('surf1').set('expr', 'emw.Qrh');
model.result('pg5').feature('surf1').set('descr', 'Resistive losses');
model.result('pg5').feature('surf1').set('colortable', 'ThermalWave');
model.result('pg5').run;

model.multiphysics('pcc1').set('TensorSigma', true);
model.multiphysics('pcc1').set('dopplerb', 20);

model.physics('emw').prop('components').set('components', 'inplane');

model.study.create('std2');
model.study('std2').create('ftrans', 'FrequencyTransient');
model.study('std2').feature('ftrans').set('plotgroup', 'Default');
model.study('std2').feature('ftrans').set('initialtime', '0');
model.study('std2').feature('ftrans').set('freq', '1000');
model.study('std2').feature('ftrans').set('solnum', 'auto');
model.study('std2').feature('ftrans').set('notsolnum', 'auto');
model.study('std2').feature('ftrans').set('outputmap', {});
model.study('std2').feature('ftrans').setSolveFor('/physics/plas', true);
model.study('std2').feature('ftrans').setSolveFor('/physics/emw', true);
model.study('std2').feature('ftrans').setSolveFor('/multiphysics/pcc1', true);
model.study('std2').feature('ftrans').setSolveFor('/multiphysics/ehs1', true);
model.study('std2').feature('ftrans').set('tlist', '0 10^{range(-8,0.2,-2)}');
model.study('std2').feature('ftrans').set('freq', '2.45[GHz]');

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'ftrans');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_plas_Ar_1p_W').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_Ne').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_plas_Ars_W').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_En').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_V').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_plas_Ar_1p_W').set('scaleval', '1');
model.sol('sol2').feature('v1').feature('comp1_Ne').set('scaleval', '35');
model.sol('sol2').feature('v1').feature('comp1_plas_Ars_W').set('scaleval', '1');
model.sol('sol2').feature('v1').feature('comp1_En').set('scaleval', '35');
model.sol('sol2').feature('v1').feature('comp1_V').set('scaleval', '10');
model.sol('sol2').feature('v1').set('control', 'ftrans');
model.sol('sol2').create('t1', 'Time');
model.sol('sol2').feature('t1').set('tlist', '0 10^{range(-8,0.2,-2)}');
model.sol('sol2').feature('t1').set('plot', 'off');
model.sol('sol2').feature('t1').set('plotgroup', 'Default');
model.sol('sol2').feature('t1').set('plotfreq', 'tout');
model.sol('sol2').feature('t1').set('probesel', 'all');
model.sol('sol2').feature('t1').set('probes', {});
model.sol('sol2').feature('t1').set('probefreq', 'tsteps');
model.sol('sol2').feature('t1').set('rtol', 0.001);
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'manual');
model.sol('sol2').feature('t1').set('atolglobalmethod', 'unscaled');
model.sol('sol2').feature('t1').set('atolglobal', 0.001);
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'manual');
model.sol('sol2').feature('t1').set('reacf', true);
model.sol('sol2').feature('t1').set('storeudot', true);
model.sol('sol2').feature('t1').set('endtimeinterpolation', true);
model.sol('sol2').feature('t1').set('estrat', 'exclude');
model.sol('sol2').feature('t1').set('maxorder', 2);
model.sol('sol2').feature('t1').set('initialstepbdfactive', true);
model.sol('sol2').feature('t1').set('initialstepbdf', '(1.0E-13)[s]');
model.sol('sol2').feature('t1').set('complex', true);
model.sol('sol2').feature('t1').set('control', 'ftrans');
model.sol('sol2').feature('t1').feature('aDef').set('complexfun', true);
model.sol('sol2').feature('t1').feature('aDef').set('cachepattern', false);
model.sol('sol2').feature('t1').feature('aDef').set('matherr', false);
model.sol('sol2').feature('t1').feature('aDef').set('nullfun', 'flnullorth');
model.sol('sol2').feature('t1').create('seDef', 'Segregated');
model.sol('sol2').feature('t1').create('se1', 'Segregated');
model.sol('sol2').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol2').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol2').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_plas_Ars_W' 'comp1_plas_Ar_1p_W' 'comp1_Ne' 'comp1_En' 'comp1_V'});
model.sol('sol2').feature('t1').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol2').feature('t1').feature('se1').feature('ss1').label('Plasma');
model.sol('sol2').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_Sparam1' 'comp1_E'});
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('subjtech', 'onevery');
model.sol('sol2').feature('t1').create('d2', 'Direct');
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol2').feature('t1').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol2').feature('t1').feature('se1').feature('ss3').set('segvar', {'comp1_Pin1'});
model.sol('sol2').feature('t1').feature('se1').feature('ss3').set('subjtech', 'onevery');
model.sol('sol2').feature('t1').create('d3', 'Direct');
model.sol('sol2').feature('t1').feature('se1').feature('ss3').set('linsolver', 'd3');
model.sol('sol2').feature('t1').feature.remove('fcDef');
model.sol('sol2').feature('t1').feature.remove('seDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result.create('pg6', 'PlotGroup2D');
model.result('pg6').set('data', 'dset2');
model.result('pg6').setIndex('looplevel', 32, 0);
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', {'plas.ne'});
model.result.create('pg7', 'PlotGroup2D');
model.result('pg7').set('data', 'dset2');
model.result('pg7').setIndex('looplevel', 32, 0);
model.result('pg7').create('surf1', 'Surface');
model.result('pg7').feature('surf1').set('expr', {'plas.Te'});
model.result.create('pg8', 'PlotGroup2D');
model.result('pg8').set('data', 'dset2');
model.result('pg8').setIndex('looplevel', 32, 0);
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').feature('surf1').set('expr', {'V'});
model.result('pg6').feature('surf1').set('colortable', 'Prism');
model.result('pg7').feature('surf1').set('colortable', 'Prism');
model.result('pg8').feature('surf1').set('colortable', 'Dipole');
model.result('pg6').label('Electron Density (plas) 1');
model.result('pg7').label('Electron Temperature (plas) 1');
model.result('pg8').label('Electric Potential (plas) 1');
model.result.create('pg9', 'PlotGroup2D');
model.result('pg9').label('Electric Field (emw) 1');
model.result('pg9').set('data', 'dset2');
model.result('pg9').setIndex('looplevel', 32, 0);
model.result('pg9').set('frametype', 'spatial');
model.result('pg9').set('showlegendsmaxmin', true);
model.result('pg9').set('data', 'dset2');
model.result('pg9').setIndex('looplevel', 32, 0);
model.result('pg9').set('defaultPlotID', 'ElectromagneticWaves/phys1/pdef1/pcond2/pg1');
model.result('pg9').feature.create('surf1', 'Surface');
model.result('pg9').feature('surf1').label('Surface');
model.result('pg9').feature('surf1').set('expr', 'emw.normE');
model.result('pg9').feature('surf1').set('colortable', 'RainbowLight');
model.result('pg9').feature('surf1').set('smooth', 'internal');
model.result('pg9').feature('surf1').set('data', 'parent');
model.result('pg6').run;
model.result('pg7').run;
model.result('pg8').run;
model.result('pg9').run;
model.result('pg9').run;
model.result('pg5').run;
model.result.duplicate('pg10', 'pg5');
model.result('pg10').run;
model.result('pg10').set('data', 'dset2');
model.result('pg10').run;
model.result.create('pg11', 'PlotGroup1D');
model.result('pg11').run;
model.result('pg11').label('Port Power');
model.result('pg11').create('glob1', 'Global');
model.result('pg11').feature('glob1').set('markerpos', 'datapoints');
model.result('pg11').feature('glob1').set('linewidth', 'preference');
model.result('pg11').feature('glob1').set('expr', {'emw.port1.Pin'});
model.result('pg11').feature('glob1').set('descr', {'Port input power'});
model.result('pg11').feature('glob1').set('unit', {'W/m'});
model.result('pg11').run;
model.result('pg11').feature('glob1').set('legendmethod', 'manual');
model.result('pg11').feature('glob1').setIndex('legends', 'TE Mode', 0);
model.result('pg11').set('xlog', true);
model.result('pg11').run;
model.result('pg11').set('legendpos', 'upperleft');
model.result('pg11').run;
model.result('pg11').feature.duplicate('glob2', 'glob1');
model.result('pg11').run;
model.result('pg11').feature('glob2').set('data', 'dset2');
model.result('pg11').feature('glob2').setIndex('legends', 'TM Mode', 0);
model.result('pg11').feature('glob2').set('titletype', 'none');
model.result('pg11').run;

model.title('In-Plane Microwave Plasma');

model.description('This tutorial example sets up a simple 2D model of an argon plasma sustained through heating from electromagnetic waves.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('inplane_microwave_plasma.mph');

model.modelNode.label('Components');

out = model;
