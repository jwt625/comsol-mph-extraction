function out = model
%
% roller_conveyor_dynamics.m
%
% Model exported on May 26 2025, 21:31 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Multibody_Dynamics_Module/Tutorials');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('mbd', 'MultibodyDynamics', 'geom1');
model.physics('mbd').model('comp1');

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/mbd', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('fp', '1/100000', 'Penalty factor multiplier');
model.param.set('mu', '0.1', 'Friction coefficient');
model.param.set('rpm', '765', 'Roller RPM');
model.param.set('omega', '2*pi[rad]*rpm/60[s]', 'Roller angular speed');

model.geom('geom1').create('imp1', 'Import');
model.geom('geom1').feature('imp1').set('filename', 'roller_conveyor_dynamics.mphbin');
model.geom('geom1').feature('imp1').importData;
model.geom('geom1').feature('imp1').set('selresult', true);
model.geom('geom1').feature('imp1').set('selindividual', true);
model.geom('geom1').feature('imp1').set('selindividualshow', 'all');
model.geom('geom1').create('sel1', 'ExplicitSelection');
model.geom('geom1').feature('sel1').label('Ball');
model.geom('geom1').feature('sel1').selection('selection').set('imp1(14)', 1);
model.geom('geom1').feature('sel1').set('color', 'custom');
model.geom('geom1').feature('sel1').set('customcolor', [0.9686274528503418 0.8352941274642944 0.6431372761726379]);
model.geom('geom1').run('sel1');
model.geom('geom1').create('adjsel1', 'AdjacentSelection');
model.geom('geom1').feature('adjsel1').label('Ball Boundaries');
model.geom('geom1').feature('adjsel1').set('input', {'sel1'});
model.geom('geom1').run('adjsel1');
model.geom('geom1').create('sel2', 'ExplicitSelection');
model.geom('geom1').feature('sel2').label('Frames');
model.geom('geom1').feature('sel2').selection('selection').set('imp1(1)', 1);
model.geom('geom1').feature('sel2').selection('selection').set('imp1(23)', 1);
model.geom('geom1').feature('sel2').set('color', 'custom');
model.geom('geom1').feature('sel2').set('customcolor', [0.3921568691730499 0.3921568691730499 0.501960813999176]);
model.geom('geom1').run('sel2');
model.geom('geom1').create('sel3', 'ExplicitSelection');
model.geom('geom1').feature('sel3').label('Guides');
model.geom('geom1').feature('sel3').selection('selection').set({'imp1(17)' 'imp1(2)' 'imp1(22)' 'imp1(25)' 'imp1(26)' 'imp1(29)' 'imp1(3)' 'imp1(33)'}, [1 0; 1 2; 1 0; 1 0; 1 0; 1 0; 1 0; 1 2]);
model.geom('geom1').feature('sel3').set('color', 'custom');
model.geom('geom1').feature('sel3').set('customcolor', [0.6980392336845398 0.729411780834198 0.364705890417099]);
model.geom('geom1').run('sel3');
model.geom('geom1').create('sel4', 'ExplicitSelection');
model.geom('geom1').feature('sel4').label('Tray');
model.geom('geom1').feature('sel4').selection('selection').set('imp1(42)', [1 2]);
model.geom('geom1').feature('sel4').set('color', 'custom');
model.geom('geom1').feature('sel4').set('customcolor', [0.5843137502670288 0.7843137383460999 0.7843137383460999]);
model.geom('geom1').run('sel4');
model.geom('geom1').create('difsel1', 'DifferenceSelection');
model.geom('geom1').feature('difsel1').label('Rollers');
model.geom('geom1').feature('difsel1').set('add', {'imp1'});
model.geom('geom1').feature('difsel1').set('subtract', {'sel1' 'sel2' 'sel3' 'sel4'});
model.geom('geom1').feature('difsel1').set('color', 'custom');
model.geom('geom1').feature('difsel1').set('customcolor', [0.5843137502670288 0.3921568691730499 0.501960813999176]);
model.geom('geom1').run('difsel1');
model.geom('geom1').feature.duplicate('adjsel2', 'adjsel1');
model.geom('geom1').feature('adjsel2').label('Rollers Boundaries');
model.geom('geom1').feature('adjsel2').set('input', {'difsel1'});
model.geom('geom1').run('adjsel2');
model.geom('geom1').feature.duplicate('difsel2', 'difsel1');
model.geom('geom1').feature('difsel2').label('Fixed Boundaries');
model.geom('geom1').feature('difsel2').set('entitydim', 2);
model.geom('geom1').feature('difsel2').set('add', {'imp1'});
model.geom('geom1').feature('difsel2').set('subtract', {'adjsel1' 'adjsel2'});
model.geom('geom1').feature('difsel2').set('color', 'none');
model.geom('geom1').run('difsel2');
model.geom('geom1').nodeGroup.create('grp1');
model.geom('geom1').nodeGroup('grp1').placeAfter('imp1');
model.geom('geom1').nodeGroup('grp1').add('sel1');
model.geom('geom1').nodeGroup('grp1').add('adjsel1');
model.geom('geom1').nodeGroup('grp1').add('sel2');
model.geom('geom1').nodeGroup('grp1').add('sel3');
model.geom('geom1').nodeGroup('grp1').add('sel4');
model.geom('geom1').nodeGroup('grp1').add('difsel1');
model.geom('geom1').nodeGroup('grp1').add('adjsel2');
model.geom('geom1').nodeGroup('grp1').add('difsel2');
model.geom('geom1').nodeGroup('grp1').label('Selections');
model.geom('geom1').feature('fin').set('action', 'assembly');
model.geom('geom1').feature('fin').set('createpairs', false);
model.geom('geom1').run('fin');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat1').propertyGroup('Enu').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup('Enu').func.create('int2', 'Interpolation');
model.material('mat1').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat1').propertyGroup.create('ElastoplasticModel', 'Elastoplastic material model');
model.material('mat1').propertyGroup('ElastoplasticModel').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('Ludwik', 'Ludwik');
model.material('mat1').propertyGroup('Ludwik').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('JohnsonCook', 'Johnson-Cook');
model.material('mat1').propertyGroup.create('Swift', 'Swift');
model.material('mat1').propertyGroup.create('Voce', 'Voce');
model.material('mat1').propertyGroup('Voce').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('HockettSherby', 'Hockett-Sherby');
model.material('mat1').propertyGroup('HockettSherby').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('ArmstrongFrederick', 'Armstrong-Frederick');
model.material('mat1').propertyGroup('ArmstrongFrederick').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('Norton', 'Norton');
model.material('mat1').propertyGroup.create('Garofalo', 'Garofalo (hyperbolic sine)');
model.material('mat1').propertyGroup.create('ChabocheViscoplasticity', 'Chaboche viscoplasticity');
model.material('mat1').label('Structural steel');
model.material('mat1').set('family', 'custom');
model.material('mat1').set('customspecular', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat1').set('customdiffuse', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat1').set('customambient', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat1').set('noise', true);
model.material('mat1').set('fresnel', 0.9);
model.material('mat1').set('roughness', 0.3);
model.material('mat1').set('metallic', 0);
model.material('mat1').set('pearl', 0);
model.material('mat1').set('diffusewrap', 0);
model.material('mat1').set('clearcoat', 0);
model.material('mat1').set('reflectance', 0);
model.material('mat1').propertyGroup('def').set('lossfactor', '0.02');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('heatcapacity', '475[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]'});
model.material('mat1').propertyGroup('def').set('density', '7850[kg/m^3]');
model.material('mat1').propertyGroup('Enu').func('int1').set('funcname', 'E');
model.material('mat1').propertyGroup('Enu').func('int1').set('table', {'293.15' '200e9'; '793.15' '166.6e9'});
model.material('mat1').propertyGroup('Enu').func('int1').set('extrap', 'linear');
model.material('mat1').propertyGroup('Enu').func('int1').set('fununit', {'Pa'});
model.material('mat1').propertyGroup('Enu').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Enu').func('int2').set('funcname', 'nu');
model.material('mat1').propertyGroup('Enu').func('int2').set('table', {'293.15' '0.30'; '793.15' '0.315'});
model.material('mat1').propertyGroup('Enu').func('int2').set('extrap', 'linear');
model.material('mat1').propertyGroup('Enu').func('int2').set('fununit', {'1'});
model.material('mat1').propertyGroup('Enu').func('int2').set('argunit', {'K'});
model.material('mat1').propertyGroup('Enu').set('E', 'E(T)');
model.material('mat1').propertyGroup('Enu').set('nu', 'nu(T)');
model.material('mat1').propertyGroup('Enu').addInput('temperature');
model.material('mat1').propertyGroup('Murnaghan').set('l', '-3.0e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('m', '-6.2e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('n', '-7.2e11[Pa]');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmags', '350[MPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('Et', '1.045[GPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('Ek', '1.045[GPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmagh', '1.050[GPa]*epe*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').addInput('temperature');
model.material('mat1').propertyGroup('ElastoplasticModel').addInput('effectiveplasticstrain');
model.material('mat1').propertyGroup('Ludwik').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('Ludwik').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('Ludwik').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('Ludwik').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Ludwik').set('k_lud', '560[MPa]*a(T)');
model.material('mat1').propertyGroup('Ludwik').set('n_lud', '0.61');
model.material('mat1').propertyGroup('Ludwik').addInput('temperature');
model.material('mat1').propertyGroup('JohnsonCook').set('k_jcook', '560[MPa]');
model.material('mat1').propertyGroup('JohnsonCook').set('n_jcook', '0.61');
model.material('mat1').propertyGroup('JohnsonCook').set('C_jcook', '0.12');
model.material('mat1').propertyGroup('JohnsonCook').set('epet0_jcook', '1[1/s]');
model.material('mat1').propertyGroup('JohnsonCook').set('m_jcook', '0.6');
model.material('mat1').propertyGroup('Swift').set('e0_swi', '0.021');
model.material('mat1').propertyGroup('Swift').set('n_swi', '0.2');
model.material('mat1').propertyGroup('Voce').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('Voce').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('Voce').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('Voce').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Voce').set('sigma_voc', '249[MPa]*a(T)');
model.material('mat1').propertyGroup('Voce').set('beta_voc', '9.3');
model.material('mat1').propertyGroup('Voce').addInput('temperature');
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('HockettSherby').set('sigma_hoc', '684[MPa]*a(T)');
model.material('mat1').propertyGroup('HockettSherby').set('m_hoc', '3.9');
model.material('mat1').propertyGroup('HockettSherby').set('n_hoc', '0.85');
model.material('mat1').propertyGroup('HockettSherby').addInput('temperature');
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('ArmstrongFrederick').set('Ck', '2.070[GPa]*a(T)');
model.material('mat1').propertyGroup('ArmstrongFrederick').set('gammak', '8.0');
model.material('mat1').propertyGroup('ArmstrongFrederick').addInput('temperature');
model.material('mat1').propertyGroup('Norton').set('A_nor', '1.2e-15[1/s]');
model.material('mat1').propertyGroup('Norton').set('sigRef_nor', '1[MPa]');
model.material('mat1').propertyGroup('Norton').set('n_nor', '4.5');
model.material('mat1').propertyGroup('Garofalo').set('A_gar', '1e-6[1/s]');
model.material('mat1').propertyGroup('Garofalo').set('sigRef_gar', '100[MPa]');
model.material('mat1').propertyGroup('Garofalo').set('n_gar', '4.6');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('A_cha', '1');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('sigRef_cha', '490[MPa]');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('n_cha', '9');

model.physics('mbd').prop('AutoModeling').runCommand('createRigidDomains');
model.physics('mbd').feature('rd1').label('Rigid Material: Left Frame');
model.physics('mbd').feature('rd24').label('Rigid Material: Right Frame');
model.physics('mbd').feature('rd2').label('Rigid Material: Guide L1');
model.physics('mbd').feature('rd4').label('Rigid Material: Guide L2');
model.physics('mbd').feature('rd18').label('Rigid Material: Guide L3');
model.physics('mbd').feature('rd26').label('Rigid Material: Guide L4');
model.physics('mbd').feature('rd35').label('Rigid Material: Guide L5');
model.physics('mbd').feature('rd3').label('Rigid Material: Guide R1');
model.physics('mbd').feature('rd23').label('Rigid Material: Guide R2');
model.physics('mbd').feature('rd27').label('Rigid Material: Guide R3');
model.physics('mbd').feature('rd30').label('Rigid Material: Guide R4');
model.physics('mbd').feature('rd34').label('Rigid Material: Guide R5');
model.physics('mbd').feature('rd15').label('Rigid Material: Ball');
model.physics('mbd').feature('rd44').label('Rigid Material: Tray');
model.physics('mbd').feature.move('rd24', 4);
model.physics('mbd').feature.move('rd4', 6);
model.physics('mbd').feature.move('rd18', 7);
model.physics('mbd').feature.move('rd26', 8);
model.physics('mbd').feature.move('rd35', 9);
model.physics('mbd').feature.move('rd23', 11);
model.physics('mbd').feature.move('rd27', 12);
model.physics('mbd').feature.move('rd30', 13);
model.physics('mbd').feature.move('rd34', 14);
model.physics('mbd').feature.move('rd44', 15);
model.physics('mbd').feature.move('rd15', 16);
model.physics('mbd').feature('rd5').label('Rigid Material: Roller 1');
model.physics('mbd').feature('rd6').label('Rigid Material: Roller 2');
model.physics('mbd').feature('rd7').label('Rigid Material: Roller 3');
model.physics('mbd').feature('rd8').label('Rigid Material: Roller 4');
model.physics('mbd').feature('rd9').label('Rigid Material: Roller 5');
model.physics('mbd').feature('rd10').label('Rigid Material: Roller 6');
model.physics('mbd').feature('rd11').label('Rigid Material: Roller 7');
model.physics('mbd').feature('rd12').label('Rigid Material: Roller 8');
model.physics('mbd').feature('rd13').label('Rigid Material: Roller 9');
model.physics('mbd').feature('rd14').label('Rigid Material: Roller 10');
model.physics('mbd').feature('rd16').label('Rigid Material: Roller 11');
model.physics('mbd').feature('rd17').label('Rigid Material: Roller 12');
model.physics('mbd').feature('rd19').label('Rigid Material: Roller 13');
model.physics('mbd').feature('rd20').label('Rigid Material: Roller 14');
model.physics('mbd').feature('rd21').label('Rigid Material: Roller 15');
model.physics('mbd').feature('rd22').label('Rigid Material: Roller 16');
model.physics('mbd').feature('rd25').label('Rigid Material: Roller 17');
model.physics('mbd').feature('rd28').label('Rigid Material: Roller 18');
model.physics('mbd').feature('rd29').label('Rigid Material: Roller 19');
model.physics('mbd').feature('rd31').label('Rigid Material: Roller 20');
model.physics('mbd').feature('rd32').label('Rigid Material: Roller 21');
model.physics('mbd').feature('rd33').label('Rigid Material: Roller 22');
model.physics('mbd').feature('rd36').label('Rigid Material: Roller 23');
model.physics('mbd').feature('rd37').label('Rigid Material: Roller 24');
model.physics('mbd').feature('rd38').label('Rigid Material: Roller 25');
model.physics('mbd').feature('rd39').label('Rigid Material: Roller 26');
model.physics('mbd').feature('rd40').label('Rigid Material: Roller 27');
model.physics('mbd').feature('rd41').label('Rigid Material: Roller 28');
model.physics('mbd').feature('rd42').label('Rigid Material: Roller 29');
model.physics('mbd').feature('rd43').label('Rigid Material: Roller 30');
model.physics('mbd').feature('rd1').create('fix1', 'FixedConstraint', -1);
model.physics('mbd').feature('rd24').create('fix1', 'FixedConstraint', -1);
model.physics('mbd').feature('rd2').create('fix1', 'FixedConstraint', -1);
model.physics('mbd').feature('rd4').create('fix1', 'FixedConstraint', -1);
model.physics('mbd').feature('rd18').create('fix1', 'FixedConstraint', -1);
model.physics('mbd').feature('rd26').create('fix1', 'FixedConstraint', -1);
model.physics('mbd').feature('rd35').create('fix1', 'FixedConstraint', -1);
model.physics('mbd').feature('rd3').create('fix1', 'FixedConstraint', -1);
model.physics('mbd').feature('rd23').create('fix1', 'FixedConstraint', -1);
model.physics('mbd').feature('rd27').create('fix1', 'FixedConstraint', -1);
model.physics('mbd').feature('rd30').create('fix1', 'FixedConstraint', -1);
model.physics('mbd').feature('rd34').create('fix1', 'FixedConstraint', -1);
model.physics('mbd').feature('rd44').create('fix1', 'FixedConstraint', -1);
model.physics('mbd').create('hgj1', 'HingeJoint', -1);
model.physics('mbd').feature('hgj1').set('Source', 'rd1');
model.physics('mbd').feature('hgj1').set('Destination', 'rd5');
model.physics('mbd').feature('hgj1').feature('cjb1').selection.named('geom1_imp1_4_bnd');
model.physics('mbd').feature('hgj1').set('AxisOfJointType', 'SelectEdge');
model.physics('mbd').feature('hgj1').feature('ja1').selection.set([74]);
model.physics('mbd').feature('hgj1').create('pm1', 'PrescribedMotion', -1);
model.physics('mbd').feature('hgj1').feature('pm1').set('PrescribedMotionThroughRotational', 'AngularVelocity');
model.physics('mbd').feature('hgj1').feature('pm1').set('omegap', '-omega');
model.physics('mbd').feature.duplicate('hgj2', 'hgj1');
model.physics('mbd').feature('hgj2').set('Destination', 'rd6');
model.physics('mbd').feature('hgj2').feature('cjb1').selection.named('geom1_imp1_5_bnd');
model.physics('mbd').feature('hgj2').feature('ja1').selection.set([98]);
model.physics('mbd').feature.duplicate('hgj3', 'hgj2');
model.physics('mbd').feature('hgj3').set('Destination', 'rd7');
model.physics('mbd').feature('hgj3').feature('cjb1').selection.named('geom1_imp1_6_bnd');
model.physics('mbd').feature('hgj3').feature('ja1').selection.set([122]);
model.physics('mbd').feature.duplicate('hgj4', 'hgj3');
model.physics('mbd').feature('hgj4').set('Destination', 'rd8');
model.physics('mbd').feature('hgj4').feature('cjb1').selection.named('geom1_imp1_7_bnd');
model.physics('mbd').feature('hgj4').feature('ja1').selection.set([146]);
model.physics('mbd').feature.duplicate('hgj5', 'hgj4');
model.physics('mbd').feature('hgj5').set('Destination', 'rd9');
model.physics('mbd').feature('hgj5').feature('cjb1').selection.named('geom1_imp1_8_bnd');
model.physics('mbd').feature('hgj5').feature('ja1').selection.set([170]);
model.physics('mbd').feature.duplicate('hgj6', 'hgj5');
model.physics('mbd').feature('hgj6').set('Destination', 'rd10');
model.physics('mbd').feature('hgj6').feature('cjb1').selection.named('geom1_imp1_9_bnd');
model.physics('mbd').feature('hgj6').feature('ja1').selection.set([194]);
model.physics('mbd').feature.duplicate('hgj7', 'hgj6');
model.physics('mbd').feature('hgj7').set('Destination', 'rd11');
model.physics('mbd').feature('hgj7').feature('cjb1').selection.named('geom1_imp1_10_bnd');
model.physics('mbd').feature('hgj7').feature('ja1').selection.set([218]);
model.physics('mbd').feature.duplicate('hgj8', 'hgj7');
model.physics('mbd').feature('hgj8').set('Destination', 'rd12');
model.physics('mbd').feature('hgj8').feature('cjb1').selection.named('geom1_imp1_11_bnd');
model.physics('mbd').feature('hgj8').feature('ja1').selection.set([242]);
model.physics('mbd').feature.duplicate('hgj9', 'hgj8');
model.physics('mbd').feature('hgj9').set('Destination', 'rd13');
model.physics('mbd').feature('hgj9').feature('cjb1').selection.named('geom1_imp1_12_bnd');
model.physics('mbd').feature('hgj9').feature('ja1').selection.set([266]);
model.physics('mbd').feature.duplicate('hgj10', 'hgj9');
model.physics('mbd').feature('hgj10').set('Destination', 'rd14');
model.physics('mbd').feature('hgj10').feature('cjb1').selection.named('geom1_imp1_13_bnd');
model.physics('mbd').feature('hgj10').feature('ja1').selection.set([290]);
model.physics('mbd').feature.duplicate('hgj11', 'hgj10');
model.physics('mbd').feature('hgj11').set('Destination', 'rd16');
model.physics('mbd').feature('hgj11').feature('cjb1').selection.named('geom1_imp1_15_bnd');
model.physics('mbd').feature('hgj11').feature('ja1').selection.set([326]);
model.physics('mbd').feature.duplicate('hgj12', 'hgj11');
model.physics('mbd').feature('hgj12').set('Destination', 'rd17');
model.physics('mbd').feature('hgj12').feature('cjb1').selection.named('geom1_imp1_16_bnd');
model.physics('mbd').feature('hgj12').feature('ja1').selection.set([350]);
model.physics('mbd').feature.duplicate('hgj13', 'hgj12');
model.physics('mbd').feature('hgj13').set('Destination', 'rd19');
model.physics('mbd').feature('hgj13').feature('cjb1').selection.named('geom1_imp1_18_bnd');
model.physics('mbd').feature('hgj13').feature('ja1').selection.set([386]);
model.physics('mbd').feature.duplicate('hgj14', 'hgj13');
model.physics('mbd').feature('hgj14').set('Destination', 'rd20');
model.physics('mbd').feature('hgj14').feature('cjb1').selection.named('geom1_imp1_19_bnd');
model.physics('mbd').feature('hgj14').feature('ja1').selection.set([410]);
model.physics('mbd').feature.duplicate('hgj15', 'hgj14');
model.physics('mbd').feature('hgj15').set('Destination', 'rd21');
model.physics('mbd').feature('hgj15').feature('cjb1').selection.named('geom1_imp1_20_bnd');
model.physics('mbd').feature('hgj15').feature('ja1').selection.set([434]);
model.physics('mbd').feature.duplicate('hgj16', 'hgj15');
model.physics('mbd').feature('hgj16').set('Destination', 'rd22');
model.physics('mbd').feature('hgj16').feature('cjb1').selection.named('geom1_imp1_21_bnd');
model.physics('mbd').feature('hgj16').feature('ja1').selection.set([458]);
model.physics('mbd').feature.duplicate('hgj17', 'hgj16');
model.physics('mbd').feature('hgj17').set('Destination', 'rd25');
model.physics('mbd').feature('hgj17').feature('cjb1').selection.named('geom1_imp1_24_bnd');
model.physics('mbd').feature('hgj17').feature('ja1').selection.set([518]);
model.physics('mbd').feature.duplicate('hgj18', 'hgj17');
model.physics('mbd').feature('hgj18').set('Destination', 'rd28');
model.physics('mbd').feature('hgj18').feature('cjb1').selection.named('geom1_imp1_27_bnd');
model.physics('mbd').feature('hgj18').feature('ja1').selection.set([566]);
model.physics('mbd').feature.duplicate('hgj19', 'hgj18');
model.physics('mbd').feature('hgj19').set('Destination', 'rd29');
model.physics('mbd').feature('hgj19').feature('cjb1').selection.named('geom1_imp1_28_bnd');
model.physics('mbd').feature('hgj19').feature('ja1').selection.set([590]);
model.physics('mbd').feature.duplicate('hgj20', 'hgj19');
model.physics('mbd').feature('hgj20').set('Destination', 'rd31');
model.physics('mbd').feature('hgj20').feature('cjb1').selection.named('geom1_imp1_30_bnd');
model.physics('mbd').feature('hgj20').feature('ja1').selection.set([626]);
model.physics('mbd').feature.duplicate('hgj21', 'hgj20');
model.physics('mbd').feature('hgj21').set('Destination', 'rd32');
model.physics('mbd').feature('hgj21').feature('cjb1').selection.named('geom1_imp1_31_bnd');
model.physics('mbd').feature('hgj21').feature('ja1').selection.set([650]);
model.physics('mbd').feature.duplicate('hgj22', 'hgj21');
model.physics('mbd').feature('hgj22').set('Destination', 'rd33');
model.physics('mbd').feature('hgj22').set('ReverseDirection', true);
model.physics('mbd').feature('hgj22').feature('cjb1').selection.named('geom1_imp1_32_bnd');
model.physics('mbd').feature('hgj22').feature('ja1').selection.set([677]);
model.physics('mbd').feature.duplicate('hgj23', 'hgj22');
model.physics('mbd').feature('hgj23').set('Destination', 'rd36');
model.physics('mbd').feature('hgj23').feature('cjb1').selection.named('geom1_imp1_34_bnd');
model.physics('mbd').feature('hgj23').feature('ja1').selection.set([725]);
model.physics('mbd').feature.duplicate('hgj24', 'hgj23');
model.physics('mbd').feature('hgj24').set('Destination', 'rd37');
model.physics('mbd').feature('hgj24').feature('cjb1').selection.named('geom1_imp1_35_bnd');
model.physics('mbd').feature('hgj24').feature('ja1').selection.set([749]);
model.physics('mbd').feature.duplicate('hgj25', 'hgj24');
model.physics('mbd').feature('hgj25').set('Destination', 'rd38');
model.physics('mbd').feature('hgj25').feature('cjb1').selection.named('geom1_imp1_36_bnd');
model.physics('mbd').feature('hgj25').feature('ja1').selection.set([773]);
model.physics('mbd').feature.duplicate('hgj26', 'hgj25');
model.physics('mbd').feature('hgj26').set('Destination', 'rd39');
model.physics('mbd').feature('hgj26').feature('cjb1').selection.named('geom1_imp1_37_bnd');
model.physics('mbd').feature('hgj26').feature('ja1').selection.set([797]);
model.physics('mbd').feature.duplicate('hgj27', 'hgj26');
model.physics('mbd').feature('hgj27').set('Destination', 'rd40');
model.physics('mbd').feature('hgj27').feature('cjb1').selection.named('geom1_imp1_38_bnd');
model.physics('mbd').feature('hgj27').feature('ja1').selection.set([821]);
model.physics('mbd').feature.duplicate('hgj28', 'hgj27');
model.physics('mbd').feature('hgj28').set('Destination', 'rd41');
model.physics('mbd').feature('hgj28').feature('cjb1').selection.named('geom1_imp1_39_bnd');
model.physics('mbd').feature('hgj28').feature('ja1').selection.set([845]);
model.physics('mbd').feature.duplicate('hgj29', 'hgj28');
model.physics('mbd').feature('hgj29').set('Destination', 'rd42');
model.physics('mbd').feature('hgj29').feature('cjb1').selection.named('geom1_imp1_40_bnd');
model.physics('mbd').feature('hgj29').feature('ja1').selection.set([869]);
model.physics('mbd').feature.duplicate('hgj30', 'hgj29');
model.physics('mbd').feature('hgj30').set('Destination', 'rd43');
model.physics('mbd').feature('hgj30').feature('cjb1').selection.named('geom1_imp1_41_bnd');
model.physics('mbd').feature('hgj30').feature('ja1').selection.set([893]);

model.nodeGroup.create('grp2', 'Physics', 'mbd');
model.nodeGroup('grp2').placeAfter('init1');
model.nodeGroup('grp2').add('hgj1');
model.nodeGroup('grp2').add('hgj2');
model.nodeGroup('grp2').add('hgj3');
model.nodeGroup('grp2').add('hgj4');
model.nodeGroup('grp2').add('hgj5');
model.nodeGroup('grp2').add('hgj6');
model.nodeGroup('grp2').add('hgj7');
model.nodeGroup('grp2').add('hgj8');
model.nodeGroup('grp2').add('hgj9');
model.nodeGroup('grp2').add('hgj10');
model.nodeGroup('grp2').add('hgj11');
model.nodeGroup('grp2').add('hgj12');
model.nodeGroup('grp2').add('hgj13');
model.nodeGroup('grp2').add('hgj14');
model.nodeGroup('grp2').add('hgj15');
model.nodeGroup('grp2').add('hgj16');
model.nodeGroup('grp2').add('hgj17');
model.nodeGroup('grp2').add('hgj18');
model.nodeGroup('grp2').add('hgj19');
model.nodeGroup('grp2').add('hgj20');
model.nodeGroup('grp2').add('hgj21');
model.nodeGroup('grp2').add('hgj22');
model.nodeGroup('grp2').add('hgj23');
model.nodeGroup('grp2').add('hgj24');
model.nodeGroup('grp2').add('hgj25');
model.nodeGroup('grp2').add('hgj26');
model.nodeGroup('grp2').add('hgj27');
model.nodeGroup('grp2').add('hgj28');
model.nodeGroup('grp2').add('hgj29');
model.nodeGroup('grp2').add('hgj30');
model.nodeGroup('grp2').label('Hinge Joints');

model.physics('mbd').create('rbc1', 'RigidBodyContact', -1);
model.physics('mbd').feature('rbc1').set('Source', 'rd15');
model.physics('mbd').feature('rbc1').set('DestinationShape', 'Cylindrical');
model.physics('mbd').feature('rbc1').set('Destination', 'rd5');
model.physics('mbd').feature('rbc1').set('FiniteDestination', true);
model.physics('mbd').feature('rbc1').set('fp', 'fp');
model.physics('mbd').feature('rbc1').create('fric1', 'Friction', -1);
model.physics('mbd').feature('rbc1').feature('fric1').set('mu', 'mu');
model.physics('mbd').feature('rbc1').feature('fric1').set('v0', 'mbd.diag*1e-3[1/s]*10');
model.physics('mbd').feature.duplicate('rbc2', 'rbc1');
model.physics('mbd').feature('rbc2').set('Destination', 'rd6');
model.physics('mbd').feature.duplicate('rbc3', 'rbc2');
model.physics('mbd').feature('rbc3').set('Destination', 'rd7');
model.physics('mbd').feature.duplicate('rbc4', 'rbc3');
model.physics('mbd').feature('rbc4').set('Destination', 'rd8');
model.physics('mbd').feature.duplicate('rbc5', 'rbc4');
model.physics('mbd').feature('rbc5').set('Destination', 'rd9');
model.physics('mbd').feature.duplicate('rbc6', 'rbc5');
model.physics('mbd').feature('rbc6').set('Destination', 'rd10');
model.physics('mbd').feature.duplicate('rbc7', 'rbc6');
model.physics('mbd').feature('rbc7').set('Destination', 'rd11');
model.physics('mbd').feature.duplicate('rbc8', 'rbc7');
model.physics('mbd').feature('rbc8').set('Destination', 'rd12');
model.physics('mbd').feature.duplicate('rbc9', 'rbc8');
model.physics('mbd').feature('rbc9').set('Destination', 'rd13');
model.physics('mbd').feature.duplicate('rbc10', 'rbc9');
model.physics('mbd').feature('rbc10').set('Destination', 'rd14');
model.physics('mbd').feature.duplicate('rbc11', 'rbc10');
model.physics('mbd').feature('rbc11').set('Destination', 'rd16');
model.physics('mbd').feature.duplicate('rbc12', 'rbc11');
model.physics('mbd').feature('rbc12').set('Destination', 'rd17');
model.physics('mbd').feature.duplicate('rbc13', 'rbc12');
model.physics('mbd').feature('rbc13').set('Destination', 'rd19');
model.physics('mbd').feature.duplicate('rbc14', 'rbc13');
model.physics('mbd').feature('rbc14').set('Destination', 'rd20');
model.physics('mbd').feature.duplicate('rbc15', 'rbc14');
model.physics('mbd').feature('rbc15').set('Destination', 'rd21');
model.physics('mbd').feature.duplicate('rbc16', 'rbc15');
model.physics('mbd').feature('rbc16').set('Destination', 'rd22');
model.physics('mbd').feature.duplicate('rbc17', 'rbc16');
model.physics('mbd').feature('rbc17').set('Destination', 'rd25');
model.physics('mbd').feature.duplicate('rbc18', 'rbc17');
model.physics('mbd').feature('rbc18').set('Destination', 'rd28');
model.physics('mbd').feature.duplicate('rbc19', 'rbc18');
model.physics('mbd').feature('rbc19').set('Destination', 'rd29');
model.physics('mbd').feature.duplicate('rbc20', 'rbc19');
model.physics('mbd').feature('rbc20').set('Destination', 'rd31');
model.physics('mbd').feature.duplicate('rbc21', 'rbc20');
model.physics('mbd').feature('rbc21').set('Destination', 'rd32');
model.physics('mbd').feature.duplicate('rbc22', 'rbc21');
model.physics('mbd').feature('rbc22').set('Destination', 'rd33');
model.physics('mbd').feature.duplicate('rbc23', 'rbc22');
model.physics('mbd').feature('rbc23').set('Destination', 'rd36');
model.physics('mbd').feature.duplicate('rbc24', 'rbc23');
model.physics('mbd').feature('rbc24').set('Destination', 'rd37');
model.physics('mbd').feature.duplicate('rbc25', 'rbc24');
model.physics('mbd').feature('rbc25').set('Destination', 'rd38');
model.physics('mbd').feature.duplicate('rbc26', 'rbc25');
model.physics('mbd').feature('rbc26').set('Destination', 'rd39');
model.physics('mbd').feature.duplicate('rbc27', 'rbc26');
model.physics('mbd').feature('rbc27').set('Destination', 'rd40');
model.physics('mbd').feature.duplicate('rbc28', 'rbc27');
model.physics('mbd').feature('rbc28').set('Destination', 'rd41');
model.physics('mbd').feature.duplicate('rbc29', 'rbc28');
model.physics('mbd').feature('rbc29').set('Destination', 'rd42');
model.physics('mbd').feature.duplicate('rbc30', 'rbc29');
model.physics('mbd').feature('rbc30').set('Destination', 'rd43');
model.physics('mbd').feature.duplicate('rbc31', 'rbc30');
model.physics('mbd').feature('rbc31').set('Destination', 'rd2');
model.physics('mbd').feature.duplicate('rbc32', 'rbc31');
model.physics('mbd').feature('rbc32').set('Destination', 'rd4');
model.physics('mbd').feature.duplicate('rbc33', 'rbc32');
model.physics('mbd').feature('rbc33').set('Destination', 'rd18');
model.physics('mbd').feature.duplicate('rbc34', 'rbc33');
model.physics('mbd').feature('rbc34').set('Destination', 'rd26');
model.physics('mbd').feature.duplicate('rbc35', 'rbc34');
model.physics('mbd').feature('rbc35').set('Destination', 'rd35');
model.physics('mbd').feature.duplicate('rbc36', 'rbc35');
model.physics('mbd').feature('rbc36').set('Destination', 'rd3');
model.physics('mbd').feature.duplicate('rbc37', 'rbc36');
model.physics('mbd').feature('rbc37').set('Destination', 'rd23');
model.physics('mbd').feature.duplicate('rbc38', 'rbc37');
model.physics('mbd').feature('rbc38').set('Destination', 'rd27');
model.physics('mbd').feature.duplicate('rbc39', 'rbc38');
model.physics('mbd').feature('rbc39').set('Destination', 'rd30');
model.physics('mbd').feature.duplicate('rbc40', 'rbc39');
model.physics('mbd').feature('rbc40').set('Destination', 'rd34');
model.physics('mbd').feature.duplicate('rbc41', 'rbc40');
model.physics('mbd').feature('rbc41').set('DestinationShape', 'Planar');
model.physics('mbd').feature('rbc41').selection('planarDestinationSelection').set([397]);
model.physics('mbd').feature.duplicate('rbc42', 'rbc41');
model.physics('mbd').feature('rbc42').selection('planarDestinationSelection').set([403]);

model.nodeGroup.create('grp3', 'Physics', 'mbd');
model.nodeGroup('grp3').placeAfter('init1');
model.nodeGroup('grp3').add('rbc1');
model.nodeGroup('grp3').add('rbc2');
model.nodeGroup('grp3').add('rbc3');
model.nodeGroup('grp3').add('rbc4');
model.nodeGroup('grp3').add('rbc5');
model.nodeGroup('grp3').add('rbc6');
model.nodeGroup('grp3').add('rbc7');
model.nodeGroup('grp3').add('rbc8');
model.nodeGroup('grp3').add('rbc9');
model.nodeGroup('grp3').add('rbc10');
model.nodeGroup('grp3').add('rbc11');
model.nodeGroup('grp3').add('rbc12');
model.nodeGroup('grp3').add('rbc13');
model.nodeGroup('grp3').add('rbc14');
model.nodeGroup('grp3').add('rbc15');
model.nodeGroup('grp3').add('rbc16');
model.nodeGroup('grp3').add('rbc17');
model.nodeGroup('grp3').add('rbc18');
model.nodeGroup('grp3').add('rbc19');
model.nodeGroup('grp3').add('rbc20');
model.nodeGroup('grp3').add('rbc21');
model.nodeGroup('grp3').add('rbc22');
model.nodeGroup('grp3').add('rbc23');
model.nodeGroup('grp3').add('rbc24');
model.nodeGroup('grp3').add('rbc25');
model.nodeGroup('grp3').add('rbc26');
model.nodeGroup('grp3').add('rbc27');
model.nodeGroup('grp3').add('rbc28');
model.nodeGroup('grp3').add('rbc29');
model.nodeGroup('grp3').add('rbc30');
model.nodeGroup('grp3').label('Ball-Rollers Contacts');
model.nodeGroup.create('grp4', 'Physics', 'mbd');
model.nodeGroup('grp4').placeAfter('init1');
model.nodeGroup('grp4').add('rbc31');
model.nodeGroup('grp4').add('rbc32');
model.nodeGroup('grp4').add('rbc33');
model.nodeGroup('grp4').add('rbc34');
model.nodeGroup('grp4').add('rbc35');
model.nodeGroup('grp4').add('rbc36');
model.nodeGroup('grp4').add('rbc37');
model.nodeGroup('grp4').add('rbc38');
model.nodeGroup('grp4').add('rbc39');
model.nodeGroup('grp4').add('rbc40');
model.nodeGroup('grp4').label('Ball-Guides Contacts');
model.nodeGroup.create('grp5', 'Physics', 'mbd');
model.nodeGroup('grp5').placeAfter('init1');
model.nodeGroup('grp5').add('rbc41');
model.nodeGroup('grp5').add('rbc42');
model.nodeGroup('grp5').label('Ball-Tray Contacts');

model.physics('mbd').create('gacc1', 'GravityAcceleration', -1);

model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.set([13 19 23 29 39 49 59 69 79 89 99 109 119 137 147 157 162 163 173 183 193 203 219 229 234 235 240 241 251 261 266 267 277 290 297 302 312 322 332 342 352 362 372 382]);
model.mesh('mesh1').feature('ftri1').create('size1', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size1').set('hauto', 3);
model.mesh('mesh1').feature('size').set('hauto', 3);
model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.set([397]);
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([917 926]);
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 25);
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe1').selection.all;
model.mesh('mesh1').feature('swe1').selection.set([1 2 3 4 5 6 7 8 9 10 11 12 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 45]);
model.mesh('mesh1').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis1').selection.named('geom1_sel2');
model.mesh('mesh1').feature('swe1').feature('dis1').set('numelem', 50);
model.mesh('mesh1').feature('swe1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis2').selection.named('geom1_sel3');
model.mesh('mesh1').feature('swe1').feature('dis2').set('numelem', 20);
model.mesh('mesh1').feature('swe1').create('dis3', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis3').selection.named('geom1_difsel1');
model.mesh('mesh1').feature('swe1').feature('dis3').set('numelem', 10);
model.mesh('mesh1').create('ftet1', 'FreeTet');
model.mesh('mesh1').feature('ftet1').create('size1', 'Size');
model.mesh('mesh1').feature('ftet1').feature('size1').set('hauto', 3);
model.mesh('mesh1').feature('ftet1').feature('size1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('ftet1').feature('size1').selection.set([44]);
model.mesh('mesh1').feature('ftet1').create('size2', 'Size');
model.mesh('mesh1').feature('ftet1').feature('size2').selection.geom('geom1', 3);
model.mesh('mesh1').feature('ftet1').feature('size2').selection.set([15]);
model.mesh('mesh1').feature('ftet1').feature('size2').set('custom', true);
model.mesh('mesh1').feature('ftet1').feature('size2').set('hmaxactive', true);
model.mesh('mesh1').feature('ftet1').feature('size2').set('hmax', 0.03);
model.mesh('mesh1').run;

model.study('std1').feature('time').set('tlist', 'range(0,0.01,8)');
model.study('std1').feature('time').set('plot', true);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_mbd_rd_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_mbd_jnt_rot').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_mbd_rd_rot').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_mbd_rd_disp').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_mbd_jnt_rot').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_mbd_rd_rot').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_mbd_rd_disp').set('scaleval', '0.029743612759717007');
model.sol('sol1').feature('v1').feature('comp1_mbd_jnt_rot').set('scaleval', '0.1');
model.sol('sol1').feature('v1').feature('comp1_mbd_rd_rot').set('scaleval', '0.1');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*2.9743612759717006');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.01,8)');
model.sol('sol1').feature('t1').set('plot', 'on');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('atolglobalmethod', 'scaled');
model.sol('sol1').feature('t1').set('atolglobalfactor', 0.1);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('eventtol', 0.01);
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('tstepsbdf', 'strict');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('minorder', 1);
model.sol('sol1').feature('t1').set('rescaleafterinitbw', false);
model.sol('sol1').feature('t1').set('bwinitstepfrac', '0.001');
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'onevery');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'const');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 1);
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('t1').feature('fc1').set('ntermconst', 'tol');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'onevery');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'const');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 1);
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('t1').feature('fc1').set('ntermconst', 'tol');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 15);
model.sol('sol1').feature('t1').set('tstepsbdf', 'intermediate');

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').label('Displacement (mbd)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').set('data', 'dset1');
model.result('pg1').set('defaultPlotID', 'displacement');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').label('Surface');
model.result('pg1').feature('surf1').set('colortable', 'SpectrumLight');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result('pg1').feature('surf1').feature.create('def1', 'Deform');
model.result('pg1').feature('surf1').feature('def1').label('Deformation');
model.result('pg1').feature('surf1').feature('def1').set('scaleactive', true);

model.sol('sol1').runAll;

model.result.remove('pg1');

model.study('std1').feature('time').set('plotgroup', 'Default');

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').label('Displacement (mbd)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 801, 0);
model.result('pg1').set('defaultPlotID', 'displacement');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').label('Surface');
model.result('pg1').feature('surf1').set('colortable', 'SpectrumLight');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result('pg1').feature('surf1').feature.create('def1', 'Deform');
model.result('pg1').feature('surf1').feature('def1').label('Deformation');
model.result('pg1').feature('surf1').feature('def1').set('scaleactive', true);
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Velocity (mbd)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 801, 0);
model.result('pg2').set('defaultPlotID', 'velocity');
model.result('pg2').feature.create('vol1', 'Volume');
model.result('pg2').feature('vol1').label('Volume');
model.result('pg2').feature('vol1').set('expr', 'mod(dom,10)');
model.result('pg2').feature('vol1').set('unit', '1');
model.result('pg2').feature('vol1').set('colortable', 'Cyclic');
model.result('pg2').feature('vol1').set('colorlegend', false);
model.result('pg2').feature('vol1').set('data', 'parent');
model.result('pg2').feature('vol1').feature.create('def1', 'Deform');
model.result('pg2').feature('vol1').feature('def1').label('Deformation');
model.result('pg2').feature('vol1').feature('def1').set('scaleactive', true);
model.result('pg2').feature.create('arwl1', 'ArrowLine');
model.result('pg2').feature('arwl1').label('Arrow Line');
model.result('pg2').feature('arwl1').set('expr', {'mbd.u_tX' 'mbd.u_tY' 'mbd.u_tZ'});
model.result('pg2').feature('arwl1').set('placement', 'elements');
model.result('pg2').feature('arwl1').set('data', 'parent');
model.result('pg2').feature('arwl1').feature.create('def1', 'Deform');
model.result('pg2').feature('arwl1').feature('def1').label('Deformation');
model.result('pg2').feature('arwl1').feature('def1').set('scaleactive', true);
model.result('pg1').run;

model.view('view1').set('showgrid', false);

model.result('pg1').run;
model.result('pg1').feature('surf1').create('sel1', 'Selection');
model.result('pg1').feature('surf1').feature('sel1').selection.named('geom1_adjsel1');
model.result('pg1').run;
model.result('pg1').feature.duplicate('surf2', 'surf1');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('surf2').feature('sel1').selection.named('geom1_adjsel2');
model.result('pg1').run;
model.result('pg1').feature('surf2').set('titletype', 'none');
model.result('pg1').feature('surf2').set('colorlegend', false);
model.result('pg1').feature('surf2').set('colortable', 'WaveLight');
model.result('pg1').feature.duplicate('surf3', 'surf2');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('surf3').feature('sel1').selection.named('geom1_difsel2');
model.result('pg1').run;
model.result('pg1').feature('surf3').set('coloring', 'uniform');
model.result('pg1').feature('surf3').set('color', 'gray');
model.result('pg1').feature('surf3').create('tran1', 'Transparency');
model.result('pg1').run;
model.result('pg1').run;
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('Speed [Ball]');
model.result('pg3').set('titletype', 'label');
model.result('pg3').set('showlegends', false);
model.result('pg3').create('glob1', 'Global');
model.result('pg3').feature('glob1').set('markerpos', 'datapoints');
model.result('pg3').feature('glob1').set('linewidth', 'preference');
model.result('pg3').feature('glob1').setIndex('expr', 'sqrt(mbd.rd15.u_tx^2+mbd.rd15.u_ty^2+mbd.rd15.u_tz^2)', 0);
model.result('pg3').feature('glob1').setIndex('unit', 'm/s', 0);
model.result('pg3').feature('glob1').setIndex('descr', 'Rigid body speed', 0);
model.result('pg3').run;
model.result('pg3').set('xlabelactive', true);
model.result('pg3').set('ylabelactive', true);
model.result('pg3').run;
model.result.duplicate('pg4', 'pg3');
model.result('pg4').run;
model.result('pg4').label('Angular Speed [Ball]');
model.result('pg4').set('ylabel', 'Rigid body angular speed (rad/s)');
model.result('pg4').run;
model.result('pg4').feature('glob1').setIndex('expr', 'sqrt(mbd.rd15.th_tx^2+mbd.rd15.th_ty^2+mbd.rd15.th_tz^2)', 0);
model.result('pg4').feature('glob1').setIndex('unit', 'rad/s', 0);
model.result('pg4').feature('glob1').setIndex('descr', 'Rigid body angular speed', 0);
model.result('pg4').run;
model.result('pg4').run;
model.result.duplicate('pg5', 'pg4');
model.result('pg5').run;
model.result('pg5').label('Angular Velocity [Ball]');
model.result('pg5').set('ylabel', 'Rigid body angular velocity (rad/s)');
model.result('pg5').set('showlegends', true);
model.result('pg5').run;
model.result('pg5').feature('glob1').setIndex('expr', 'mbd.rd15.th_tx', 0);
model.result('pg5').feature('glob1').setIndex('unit', 'rad/s', 0);
model.result('pg5').feature('glob1').setIndex('descr', 'Rigid body angular velocity, x-component', 0);
model.result('pg5').feature('glob1').setIndex('expr', 'mbd.rd15.th_ty', 1);
model.result('pg5').feature('glob1').setIndex('unit', 'rad/s', 1);
model.result('pg5').feature('glob1').setIndex('descr', 'Rigid body angular velocity, y-component', 1);
model.result('pg5').feature('glob1').setIndex('expr', 'mbd.rd15.th_tz', 2);
model.result('pg5').feature('glob1').setIndex('unit', 'rad/s', 2);
model.result('pg5').feature('glob1').setIndex('descr', 'Rigid body angular velocity, z-component', 2);
model.result('pg5').run;
model.result('pg5').run;
model.result.duplicate('pg6', 'pg5');
model.result('pg6').run;
model.result('pg6').label('Contact & Friction Force [Rollers]');
model.result('pg6').run;
model.result('pg6').feature('glob1').set('expr', {});
model.result('pg6').feature('glob1').set('descr', {});
model.result('pg6').feature('glob1').setIndex('expr', 'mbd.rbc1.Fn', 0);
model.result('pg6').feature('glob1').setIndex('unit', 'N', 0);
model.result('pg6').feature('glob1').setIndex('expr', 'mbd.rbc16.Fn', 1);
model.result('pg6').feature('glob1').setIndex('unit', 'N', 1);
model.result('pg6').feature('glob1').setIndex('expr', 'mbd.rbc30.Fn', 2);
model.result('pg6').feature('glob1').setIndex('unit', 'N', 2);
model.result('pg6').feature('glob1').set('legendmethod', 'manual');
model.result('pg6').feature('glob1').setIndex('legends', 'Contact force - Roller 1', 0);
model.result('pg6').feature('glob1').setIndex('legends', 'Contact force - Roller 16', 1);
model.result('pg6').feature('glob1').setIndex('legends', 'Contact force - Roller 30', 2);
model.result('pg6').feature.duplicate('glob2', 'glob1');
model.result('pg6').run;
model.result('pg6').feature('glob2').setIndex('expr', 'mbd.rbc1.Ff', 0);
model.result('pg6').feature('glob2').setIndex('unit', 'N', 0);
model.result('pg6').feature('glob2').setIndex('descr', 'Friction force', 0);
model.result('pg6').feature('glob2').setIndex('expr', 'mbd.rbc16.Ff', 1);
model.result('pg6').feature('glob2').setIndex('unit', 'N', 1);
model.result('pg6').feature('glob2').setIndex('descr', 'Friction force', 1);
model.result('pg6').feature('glob2').setIndex('expr', 'mbd.rbc30.Ff', 2);
model.result('pg6').feature('glob2').setIndex('unit', 'N', 2);
model.result('pg6').feature('glob2').setIndex('descr', 'Friction force', 2);
model.result('pg6').feature('glob2').set('linestyle', 'dashed');
model.result('pg6').feature('glob2').set('linecolor', 'cyclereset');
model.result('pg6').feature('glob2').setIndex('legends', 'Friction force - Roller 1', 0);
model.result('pg6').feature('glob2').setIndex('legends', 'Friction force - Roller 16', 1);
model.result('pg6').feature('glob2').setIndex('legends', 'Friction force - Roller 30', 2);
model.result('pg6').run;
model.result('pg6').set('ylabel', 'Force (N)');
model.result('pg6').run;
model.result.duplicate('pg7', 'pg6');
model.result('pg7').run;
model.result('pg7').label('Contact & Friction Force [Guides]');
model.result('pg7').run;
model.result('pg7').feature('glob1').set('expr', {});
model.result('pg7').feature('glob1').set('descr', {});
model.result('pg7').feature('glob1').setIndex('expr', 'mbd.rbc33.Fn', 0);
model.result('pg7').feature('glob1').setIndex('unit', 'N', 0);
model.result('pg7').feature('glob1').setIndex('expr', 'mbd.rbc35.Fn', 1);
model.result('pg7').feature('glob1').setIndex('unit', 'N', 1);
model.result('pg7').feature('glob1').setIndex('expr', 'mbd.rbc39.Fn', 2);
model.result('pg7').feature('glob1').setIndex('unit', 'N', 2);
model.result('pg7').feature('glob1').setIndex('expr', 'mbd.rbc40.Fn', 3);
model.result('pg7').feature('glob1').setIndex('unit', 'N', 3);
model.result('pg7').feature('glob1').setIndex('legends', 'Contact force - Guide L3', 0);
model.result('pg7').feature('glob1').setIndex('legends', 'Contact force - Guide L5', 1);
model.result('pg7').feature('glob1').setIndex('legends', 'Contact force - Guide R4', 2);
model.result('pg7').feature('glob1').setIndex('legends', 'Contact force - Guide R5', 3);
model.result('pg7').run;
model.result('pg7').feature('glob2').setIndex('expr', 'mbd.rbc33.Ff', 0);
model.result('pg7').feature('glob2').setIndex('unit', 'N', 0);
model.result('pg7').feature('glob2').setIndex('descr', 'Friction force', 0);
model.result('pg7').feature('glob2').setIndex('expr', 'mbd.rbc35.Ff', 1);
model.result('pg7').feature('glob2').setIndex('unit', 'N', 1);
model.result('pg7').feature('glob2').setIndex('descr', 'Friction force', 1);
model.result('pg7').feature('glob2').setIndex('expr', 'mbd.rbc39.Ff', 2);
model.result('pg7').feature('glob2').setIndex('unit', 'N', 2);
model.result('pg7').feature('glob2').setIndex('descr', 'Friction force', 2);
model.result('pg7').feature('glob2').setIndex('expr', 'mbd.rbc40.Ff', 3);
model.result('pg7').feature('glob2').setIndex('unit', 'N', 3);
model.result('pg7').feature('glob2').setIndex('descr', 'Friction force', 3);
model.result('pg7').feature('glob2').setIndex('legends', 'Friction force - Guide L3', 0);
model.result('pg7').feature('glob2').setIndex('legends', 'Friction force - Guide L5', 1);
model.result('pg7').feature('glob2').setIndex('legends', 'Friction force - Guide R4', 2);
model.result('pg7').feature('glob2').setIndex('legends', 'Friction force - Guide R5', 3);
model.result('pg7').run;
model.result('pg7').run;
model.result.duplicate('pg8', 'pg7');
model.result('pg8').run;
model.result('pg8').label('Contact & Friction Force [Tray]');
model.result('pg8').run;
model.result('pg8').feature('glob1').set('expr', {});
model.result('pg8').feature('glob1').set('descr', {});
model.result('pg8').feature('glob1').setIndex('expr', 'mbd.rbc41.Fn', 0);
model.result('pg8').feature('glob1').setIndex('unit', 'N', 0);
model.result('pg8').feature('glob1').setIndex('expr', 'mbd.rbc42.Fn', 1);
model.result('pg8').feature('glob1').setIndex('unit', 'N', 1);
model.result('pg8').feature('glob1').remove('legends', [0 1 2 3]);
model.result('pg8').feature('glob1').setIndex('legends', 'Contact force - Tray bottom', 0);
model.result('pg8').feature('glob1').setIndex('legends', 'Contact force - Tray side', 1);
model.result('pg8').run;
model.result('pg8').feature('glob2').set('expr', {});
model.result('pg8').feature('glob2').set('descr', {});
model.result('pg8').feature('glob2').setIndex('expr', 'mbd.rbc41.Ff', 0);
model.result('pg8').feature('glob2').setIndex('unit', 'N', 0);
model.result('pg8').feature('glob2').setIndex('descr', 'Friction force', 0);
model.result('pg8').feature('glob2').setIndex('expr', 'mbd.rbc42.Ff', 1);
model.result('pg8').feature('glob2').setIndex('unit', 'N', 1);
model.result('pg8').feature('glob2').setIndex('descr', 'Friction force', 1);
model.result('pg8').feature('glob2').remove('legends', [0 1 2 3]);
model.result('pg8').feature('glob2').setIndex('legends', 'Friction force - Tray bottom', 0);
model.result('pg8').feature('glob2').setIndex('legends', 'Friction force - Tray side', 1);
model.result('pg8').run;
model.result('pg8').run;
model.result.duplicate('pg9', 'pg8');
model.result('pg9').run;
model.result('pg9').label('Frictional Energy Dissipation Rate [Rollers]');
model.result('pg9').run;
model.result('pg9').feature('glob1').set('expr', {});
model.result('pg9').feature('glob1').set('descr', {});
model.result('pg9').feature('glob1').setIndex('expr', 'mbd.rbc1.Qf', 0);
model.result('pg9').feature('glob1').setIndex('unit', 'W', 0);
model.result('pg9').feature('glob1').setIndex('expr', 'mbd.rbc16.Qf', 1);
model.result('pg9').feature('glob1').setIndex('unit', 'W', 1);
model.result('pg9').feature('glob1').setIndex('expr', 'mbd.rbc30.Qf', 2);
model.result('pg9').feature('glob1').setIndex('unit', 'W', 2);
model.result('pg9').feature('glob1').setIndex('legends', 'Roller 1', 0);
model.result('pg9').feature('glob1').setIndex('legends', 'Roller 16', 1);
model.result('pg9').feature('glob1').setIndex('legends', 'Roller 30', 2);
model.result('pg9').run;
model.result('pg9').feature.remove('glob2');
model.result('pg9').run;
model.result('pg9').run;
model.result('pg9').set('ylabelactive', false);
model.result('pg9').run;
model.result.duplicate('pg10', 'pg9');
model.result('pg10').run;
model.result('pg10').label('Frictional Energy Dissipation Rate [Guides]');
model.result('pg10').run;
model.result('pg10').feature('glob1').set('expr', {});
model.result('pg10').feature('glob1').set('descr', {});
model.result('pg10').feature('glob1').setIndex('expr', 'mbd.rbc33.Qf', 0);
model.result('pg10').feature('glob1').setIndex('unit', 'W', 0);
model.result('pg10').feature('glob1').setIndex('expr', 'mbd.rbc35.Qf', 1);
model.result('pg10').feature('glob1').setIndex('unit', 'W', 1);
model.result('pg10').feature('glob1').setIndex('expr', 'mbd.rbc39.Qf', 2);
model.result('pg10').feature('glob1').setIndex('unit', 'W', 2);
model.result('pg10').feature('glob1').setIndex('expr', 'mbd.rbc40.Qf', 3);
model.result('pg10').feature('glob1').setIndex('unit', 'W', 3);
model.result('pg10').feature('glob1').setIndex('legends', 'Guide L3', 0);
model.result('pg10').feature('glob1').setIndex('legends', 'Guide L5', 1);
model.result('pg10').feature('glob1').setIndex('legends', 'Guide R4', 2);
model.result('pg10').feature('glob1').setIndex('legends', 'Guide R5', 3);
model.result('pg10').run;
model.result('pg10').run;
model.result.duplicate('pg11', 'pg10');
model.result('pg11').run;
model.result('pg11').label('Frictional Energy Dissipation Rate [Tray]');
model.result('pg11').run;
model.result('pg11').feature('glob1').set('expr', {});
model.result('pg11').feature('glob1').set('descr', {});
model.result('pg11').feature('glob1').setIndex('expr', 'mbd.rbc41.Qf', 0);
model.result('pg11').feature('glob1').setIndex('unit', 'W', 0);
model.result('pg11').feature('glob1').setIndex('expr', 'mbd.rbc42.Qf', 1);
model.result('pg11').feature('glob1').setIndex('unit', 'W', 1);
model.result('pg11').feature('glob1').setIndex('legends', 'Tray bottom', 0);
model.result('pg11').feature('glob1').setIndex('legends', 'Tray side', 1);
model.result('pg11').run;
model.result('pg11').run;
model.result('pg3').run;

model.nodeGroup.create('grp6', 'Results');
model.nodeGroup('grp6').set('type', 'plotgroup');
model.nodeGroup('grp6').placeAfter('plotgroup', 'pg2');
model.nodeGroup('grp6').add('plotgroup', 'pg3');
model.nodeGroup('grp6').add('plotgroup', 'pg4');
model.nodeGroup('grp6').add('plotgroup', 'pg5');
model.nodeGroup('grp6').label('Speed [Ball]');

model.result('pg6').run;

model.nodeGroup.create('grp7', 'Results');
model.nodeGroup('grp7').set('type', 'plotgroup');
model.nodeGroup('grp7').placeAfter('plotgroup', 'pg2');
model.nodeGroup.move('grp7', 6);
model.nodeGroup('grp7').add('plotgroup', 'pg6');
model.nodeGroup('grp7').add('plotgroup', 'pg7');
model.nodeGroup('grp7').add('plotgroup', 'pg8');
model.nodeGroup('grp7').label('Contact & Friction Forces');

model.result('pg9').run;

model.nodeGroup.create('grp8', 'Results');
model.nodeGroup('grp8').set('type', 'plotgroup');
model.nodeGroup('grp8').placeAfter('plotgroup', 'pg2');
model.nodeGroup.move('grp8', 7);
model.nodeGroup('grp8').add('plotgroup', 'pg9');
model.nodeGroup('grp8').add('plotgroup', 'pg10');
model.nodeGroup('grp8').add('plotgroup', 'pg11');
model.nodeGroup('grp8').label('Frictional Energy Dissipation Rates');

model.result.export.create('anim1', 'Animation');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('fontsize', '9');
model.result.export('anim1').set('colortheme', 'globaltheme');
model.result.export('anim1').set('customcolor', [1 1 1]);
model.result.export('anim1').set('background', 'color');
model.result.export('anim1').set('gltfincludelines', 'on');
model.result.export('anim1').set('title1d', 'on');
model.result.export('anim1').set('legend1d', 'on');
model.result.export('anim1').set('logo1d', 'on');
model.result.export('anim1').set('options1d', 'on');
model.result.export('anim1').set('title2d', 'on');
model.result.export('anim1').set('legend2d', 'on');
model.result.export('anim1').set('logo2d', 'on');
model.result.export('anim1').set('options2d', 'off');
model.result.export('anim1').set('title3d', 'on');
model.result.export('anim1').set('legend3d', 'on');
model.result.export('anim1').set('logo3d', 'on');
model.result.export('anim1').set('options3d', 'off');
model.result.export('anim1').set('axisorientation', 'on');
model.result.export('anim1').set('grid', 'on');
model.result.export('anim1').set('axes1d', 'on');
model.result.export('anim1').set('axes2d', 'on');
model.result.export('anim1').set('showgrid', 'on');
model.result.export('anim1').showFrame;
model.result.export('anim1').label('Displacement (mbd)');
model.result.export('anim1').set('maxframes', 100);
model.result('pg1').run;

model.title('Dynamics of a Roller Conveyor');

model.description(['This model simulates the dynamics of a roller conveyor transporting a spherical object or a ball. The ball is placed at one end of a roller conveyor and then transported to the other end, where it is collected in a rectangular tray. The conveyor system consists of cylindrical rollers inserted between two frames. Guideways are provided on both the sides of the conveyor to prevent the ball from falling off. All the components of the system are assumed rigid. The rollers are assumed to be connected to a power source to rotate at a prescribed speed whereas frame, guideways, and the tray are fixed.' newline  newline 'The frictional contact is modeled between the ball and rollers using rigid body contact with friction. Similar contacts are also used between the ball and other components namely guideways and tray. The connection between the rollers and frame is simplified using hinge joints. A transient study is performed to analyze the system dynamics and also find the contact forces, friction forces, and energy dissipation due to friction.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;

model.label('roller_conveyor_dynamics.mph');

model.modelNode.label('Components');

out = model;
