function out = model
%
% photonic_crystal_demultiplexer_optimization.m
%
% Model exported on May 26 2025, 21:34 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Wave_Optics_Module/Couplers_Filters_and_Mirrors');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('ewfd', 'ElectromagneticWavesFrequencyDomain', 'geom1');
model.physics('ewfd').model('comp1');

model.study.create('std1');
model.study('std1').create('wave', 'Wavelength');
model.study('std1').feature('wave').set('solnum', 'auto');
model.study('std1').feature('wave').set('notsolnum', 'auto');
model.study('std1').feature('wave').set('outputmap', {});
model.study('std1').feature('wave').set('ngenAUX', '1');
model.study('std1').feature('wave').set('goalngenAUX', '1');
model.study('std1').feature('wave').set('ngenAUX', '1');
model.study('std1').feature('wave').set('goalngenAUX', '1');
model.study('std1').feature('wave').setSolveFor('/physics/ewfd', true);

model.geom('geom1').insertFile('photonic_crystal_demultiplexer_optimization_geom_sequence.mph', 'geom1');
model.geom('geom1').run('fin');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').label('Air');
model.material('mat1').propertyGroup.create('RefractiveIndex', 'Refractive_index');
model.material('mat1').propertyGroup('RefractiveIndex').set('n', {'1'});
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat2').propertyGroup('RefractiveIndex').func.create('int1', 'Interpolation');
model.material('mat2').propertyGroup('RefractiveIndex').func.create('int2', 'Interpolation');
model.material('mat2').label('GaAs (Gallium arsenide) (Papatryfonos et al. 2021: n,k 0.260-1.88 um)');
model.material('mat2').propertyGroup('RefractiveIndex').func('int1').set('funcname', 'nr');
model.material('mat2').propertyGroup('RefractiveIndex').func('int1').set('table', {'0.26049' '3.43205E+00';  ...
'0.26159' '3.49606E+00';  ...
'0.26270' '3.55371E+00';  ...
'0.26381' '3.60654E+00';  ...
'0.26494' '3.65273E+00';  ...
'0.26608' '3.69534E+00';  ...
'0.26723' '3.73572E+00';  ...
'0.26838' '3.77466E+00';  ...
'0.26955' '3.81255E+00';  ...
'0.27073' '3.85100E+00';  ...
'0.27191' '3.88906E+00';  ...
'0.27311' '3.92570E+00';  ...
'0.27432' '3.95920E+00';  ...
'0.27554' '3.98624E+00';  ...
'0.27677' '4.00656E+00';  ...
'0.27801' '4.02017E+00';  ...
'0.27926' '4.02559E+00';  ...
'0.28053' '4.02430E+00';  ...
'0.28180' '4.01657E+00';  ...
'0.28309' '4.00489E+00';  ...
'0.28439' '3.98902E+00';  ...
'0.28570' '3.96990E+00';  ...
'0.28702' '3.94939E+00';  ...
'0.28835' '3.92597E+00';  ...
'0.28970' '3.90179E+00';  ...
'0.29106' '3.87715E+00';  ...
'0.29244' '3.85202E+00';  ...
'0.29382' '3.82681E+00';  ...
'0.29522' '3.80272E+00';  ...
'0.29663' '3.77926E+00';  ...
'0.29806' '3.75660E+00';  ...
'0.29950' '3.73487E+00';  ...
'0.30095' '3.71427E+00';  ...
'0.30242' '3.69528E+00';  ...
'0.30390' '3.67681E+00';  ...
'0.30540' '3.65930E+00';  ...
'0.30691' '3.64294E+00';  ...
'0.30844' '3.62778E+00';  ...
'0.30998' '3.61349E+00';  ...
'0.31154' '3.60025E+00';  ...
'0.31311' '3.58797E+00';  ...
'0.31470' '3.57682E+00';  ...
'0.31631' '3.56678E+00';  ...
'0.31793' '3.55791E+00';  ...
'0.31957' '3.54997E+00';  ...
'0.32122' '3.54276E+00';  ...
'0.32290' '3.53647E+00';  ...
'0.32459' '3.53138E+00';  ...
'0.32630' '3.52709E+00';  ...
'0.32802' '3.52373E+00';  ...
'0.32977' '3.52125E+00';  ...
'0.33153' '3.51961E+00';  ...
'0.33331' '3.51910E+00';  ...
'0.33512' '3.51958E+00';  ...
'0.33694' '3.52105E+00';  ...
'0.33878' '3.52363E+00';  ...
'0.34064' '3.52704E+00';  ...
'0.34252' '3.53132E+00';  ...
'0.34442' '3.53694E+00';  ...
'0.34635' '3.54380E+00';  ...
'0.34829' '3.55161E+00';  ...
'0.35026' '3.56058E+00';  ...
'0.35225' '3.57093E+00';  ...
'0.35426' '3.58246E+00';  ...
'0.35630' '3.59541E+00';  ...
'0.35836' '3.60991E+00';  ...
'0.36044' '3.62589E+00';  ...
'0.36255' '3.64421E+00';  ...
'0.36468' '3.66468E+00';  ...
'0.36684' '3.68747E+00';  ...
'0.36903' '3.71315E+00';  ...
'0.37124' '3.74297E+00';  ...
'0.37347' '3.77707E+00';  ...
'0.37574' '3.81787E+00';  ...
'0.37803' '3.86684E+00';  ...
'0.38035' '3.92505E+00';  ...
'0.38269' '3.99982E+00';  ...
'0.38507' '4.08670E+00';  ...
'0.38748' '4.17867E+00';  ...
'0.38991' '4.26329E+00';  ...
'0.39238' '4.32937E+00';  ...
'0.39488' '4.37664E+00';  ...
'0.39741' '4.41240E+00';  ...
'0.39998' '4.44075E+00';  ...
'0.40257' '4.46702E+00';  ...
'0.40520' '4.49714E+00';  ...
'0.40787' '4.54333E+00';  ...
'0.41057' '4.61656E+00';  ...
'0.41331' '4.72058E+00';  ...
'0.41608' '4.85265E+00';  ...
'0.41889' '4.96468E+00';  ...
'0.42174' '5.02373E+00';  ...
'0.42463' '5.03903E+00';  ...
'0.42756' '5.02004E+00';  ...
'0.43053' '4.98074E+00';  ...
'0.43354' '4.93203E+00';  ...
'0.43659' '4.88076E+00';  ...
'0.43969' '4.82963E+00';  ...
'0.44283' '4.77962E+00';  ...
'0.44602' '4.73089E+00';  ...
'0.44925' '4.68558E+00';  ...
'0.45253' '4.64157E+00';  ...
'0.45586' '4.59938E+00';  ...
'0.45923' '4.55929E+00';  ...
'0.46266' '4.52144E+00';  ...
'0.46614' '4.48543E+00';  ...
'0.46967' '4.45063E+00';  ...
'0.47325' '4.41771E+00';  ...
'0.47689' '4.38605E+00';  ...
'0.48059' '4.35607E+00';  ...
'0.48435' '4.32739E+00';  ...
'0.48816' '4.29988E+00';  ...
'0.49203' '4.27343E+00';  ...
'0.49597' '4.24774E+00';  ...
'0.49997' '4.22320E+00';  ...
'0.50403' '4.19966E+00';  ...
'0.50817' '4.17705E+00';  ...
'0.51237' '4.15524E+00';  ...
'0.51664' '4.13387E+00';  ...
'0.52098' '4.11371E+00';  ...
'0.52539' '4.09432E+00';  ...
'0.52988' '4.07533E+00';  ...
'0.53445' '4.05701E+00';  ...
'0.53910' '4.03901E+00';  ...
'0.54383' '4.02185E+00';  ...
'0.54864' '4.00542E+00';  ...
'0.55354' '3.98939E+00';  ...
'0.55853' '3.97389E+00';  ...
'0.56360' '3.95906E+00';  ...
'0.56877' '3.94467E+00';  ...
'0.57404' '3.93106E+00';  ...
'0.57940' '3.91783E+00';  ...
'0.58487' '3.90469E+00';  ...
'0.59044' '3.89200E+00';  ...
'0.59612' '3.87986E+00';  ...
'0.60191' '3.86815E+00';  ...
'0.60781' '3.85669E+00';  ...
'0.61382' '3.84603E+00';  ...
'0.61996' '3.83524E+00';  ...
'0.62623' '3.82498E+00';  ...
'0.63262' '3.81546E+00';  ...
'0.63914' '3.80690E+00';  ...
'0.64579' '3.79813E+00';  ...
'0.65259' '3.79034E+00';  ...
'0.65954' '3.78184E+00';  ...
'0.66663' '3.77177E+00';  ...
'0.67387' '3.75979E+00';  ...
'0.68128' '3.74792E+00';  ...
'0.68885' '3.73689E+00';  ...
'0.69659' '3.72659E+00';  ...
'0.70450' '3.71666E+00';  ...
'0.71260' '3.70768E+00';  ...
'0.72089' '3.70001E+00';  ...
'0.72937' '3.69257E+00';  ...
'0.73805' '3.68538E+00';  ...
'0.74694' '3.67856E+00';  ...
'0.75605' '3.67249E+00';  ...
'0.76539' '3.66659E+00';  ...
'0.77495' '3.66130E+00';  ...
'0.78476' '3.65752E+00';  ...
'0.79482' '3.65601E+00';  ...
'0.80515' '3.64806E+00';  ...
'0.81574' '3.62635E+00';  ...
'0.82662' '3.60509E+00';  ...
'0.83779' '3.58756E+00';  ...
'0.84926' '3.57142E+00';  ...
'0.86106' '3.56115E+00';  ...
'0.87319' '3.55095E+00';  ...
'0.88566' '3.54215E+00';  ...
'0.89850' '3.53347E+00';  ...
'0.91171' '3.52476E+00';  ...
'0.92532' '3.51557E+00';  ...
'0.93934' '3.50642E+00';  ...
'0.95379' '3.49757E+00';  ...
'0.96869' '3.48877E+00';  ...
'0.98407' '3.48010E+00';  ...
'0.99994' '3.47343E+00';  ...
'1.01633' '3.46678E+00';  ...
'1.03327' '3.46037E+00';  ...
'1.05078' '3.45399E+00';  ...
'1.06890' '3.44767E+00';  ...
'1.08765' '3.44250E+00';  ...
'1.10708' '3.43736E+00';  ...
'1.12721' '3.43236E+00';  ...
'1.14808' '3.42740E+00';  ...
'1.16974' '3.42251E+00';  ...
'1.19224' '3.41848E+00';  ...
'1.21561' '3.41446E+00';  ...
'1.23993' '3.41057E+00';  ...
'1.26523' '3.40731E+00';  ...
'1.29159' '3.40587E+00';  ...
'1.31907' '3.40247E+00';  ...
'1.34775' '3.39611E+00';  ...
'1.37770' '3.39284E+00';  ...
'1.40901' '3.38961E+00';  ...
'1.44177' '3.38641E+00';  ...
'1.47610' '3.38363E+00';  ...
'1.51210' '3.38078E+00';  ...
'1.54991' '3.37793E+00';  ...
'1.58965' '3.37534E+00';  ...
'1.63148' '3.37799E+00';  ...
'1.67558' '3.37666E+00';  ...
'1.72212' '3.37408E+00';  ...
'1.77132' '3.37140E+00';  ...
'1.82342' '3.36872E+00';  ...
'1.87868' '3.36654E+00'});
model.material('mat2').propertyGroup('RefractiveIndex').func('int1').set('fununit', {'1'});
model.material('mat2').propertyGroup('RefractiveIndex').func('int1').set('argunit', {'um'});
model.material('mat2').propertyGroup('RefractiveIndex').func('int2').set('funcname', 'ni');
model.material('mat2').propertyGroup('RefractiveIndex').func('int2').set('table', {'0.26049' '3.70410E+00';  ...
'0.26159' '3.64117E+00';  ...
'0.26270' '3.57757E+00';  ...
'0.26381' '3.51408E+00';  ...
'0.26494' '3.45129E+00';  ...
'0.26608' '3.38972E+00';  ...
'0.26723' '3.32935E+00';  ...
'0.26838' '3.27031E+00';  ...
'0.26955' '3.21369E+00';  ...
'0.27073' '3.15591E+00';  ...
'0.27191' '3.09523E+00';  ...
'0.27311' '3.03074E+00';  ...
'0.27432' '2.96174E+00';  ...
'0.27554' '2.88868E+00';  ...
'0.27677' '2.81381E+00';  ...
'0.27801' '2.73806E+00';  ...
'0.27926' '2.66281E+00';  ...
'0.28053' '2.59006E+00';  ...
'0.28180' '2.52174E+00';  ...
'0.28309' '2.45728E+00';  ...
'0.28439' '2.39759E+00';  ...
'0.28570' '2.34234E+00';  ...
'0.28702' '2.29093E+00';  ...
'0.28835' '2.24486E+00';  ...
'0.28970' '2.20272E+00';  ...
'0.29106' '2.16454E+00';  ...
'0.29244' '2.13020E+00';  ...
'0.29382' '2.09947E+00';  ...
'0.29522' '2.07313E+00';  ...
'0.29663' '2.04943E+00';  ...
'0.29806' '2.02852E+00';  ...
'0.29950' '2.01023E+00';  ...
'0.30095' '1.99379E+00';  ...
'0.30242' '1.97977E+00';  ...
'0.30390' '1.96769E+00';  ...
'0.30540' '1.95727E+00';  ...
'0.30691' '1.94825E+00';  ...
'0.30844' '1.93981E+00';  ...
'0.30998' '1.93311E+00';  ...
'0.31154' '1.92791E+00';  ...
'0.31311' '1.92367E+00';  ...
'0.31470' '1.92011E+00';  ...
'0.31631' '1.91769E+00';  ...
'0.31793' '1.91633E+00';  ...
'0.31957' '1.91573E+00';  ...
'0.32122' '1.91584E+00';  ...
'0.32290' '1.91647E+00';  ...
'0.32459' '1.91829E+00';  ...
'0.32630' '1.92056E+00';  ...
'0.32802' '1.92347E+00';  ...
'0.32977' '1.92716E+00';  ...
'0.33153' '1.93129E+00';  ...
'0.33331' '1.93595E+00';  ...
'0.33512' '1.94137E+00';  ...
'0.33694' '1.94732E+00';  ...
'0.33878' '1.95364E+00';  ...
'0.34064' '1.96036E+00';  ...
'0.34252' '1.96789E+00';  ...
'0.34442' '1.97692E+00';  ...
'0.34635' '1.98420E+00';  ...
'0.34829' '1.99392E+00';  ...
'0.35026' '2.00292E+00';  ...
'0.35225' '2.01410E+00';  ...
'0.35426' '2.02527E+00';  ...
'0.35630' '2.03711E+00';  ...
'0.35836' '2.04836E+00';  ...
'0.36044' '2.05913E+00';  ...
'0.36255' '2.07072E+00';  ...
'0.36468' '2.08308E+00';  ...
'0.36684' '2.09605E+00';  ...
'0.36903' '2.10960E+00';  ...
'0.37124' '2.12445E+00';  ...
'0.37347' '2.14027E+00';  ...
'0.37574' '2.15726E+00';  ...
'0.37803' '2.17578E+00';  ...
'0.38035' '2.19609E+00';  ...
'0.38269' '2.21797E+00';  ...
'0.38507' '2.24157E+00';  ...
'0.38748' '2.26621E+00';  ...
'0.38991' '2.29044E+00';  ...
'0.39238' '2.30642E+00';  ...
'0.39488' '2.30637E+00';  ...
'0.39741' '2.28487E+00';  ...
'0.39998' '2.24214E+00';  ...
'0.40257' '2.18391E+00';  ...
'0.40520' '2.12482E+00';  ...
'0.40787' '2.07205E+00';  ...
'0.41057' '2.02894E+00';  ...
'0.41331' '1.99759E+00';  ...
'0.41608' '1.97753E+00';  ...
'0.41889' '1.97061E+00';  ...
'0.42174' '1.96602E+00';  ...
'0.42463' '1.94662E+00';  ...
'0.42756' '1.88758E+00';  ...
'0.43053' '1.74458E+00';  ...
'0.43354' '1.57944E+00';  ...
'0.43659' '1.41707E+00';  ...
'0.43969' '1.27015E+00';  ...
'0.44283' '1.14610E+00';  ...
'0.44602' '1.04502E+00';  ...
'0.44925' '9.61390E-01';  ...
'0.45253' '8.89840E-01';  ...
'0.45586' '8.28110E-01';  ...
'0.45923' '7.75750E-01';  ...
'0.46266' '7.28640E-01';  ...
'0.46614' '6.88030E-01';  ...
'0.46967' '6.51360E-01';  ...
'0.47325' '6.16930E-01';  ...
'0.47689' '5.86930E-01';  ...
'0.48059' '5.59970E-01';  ...
'0.48435' '5.36110E-01';  ...
'0.48816' '5.13500E-01';  ...
'0.49203' '4.91710E-01';  ...
'0.49597' '4.72080E-01';  ...
'0.49997' '4.53380E-01';  ...
'0.50403' '4.36300E-01';  ...
'0.50817' '4.20600E-01';  ...
'0.51237' '4.05180E-01';  ...
'0.51664' '3.91990E-01';  ...
'0.52098' '3.79230E-01';  ...
'0.52539' '3.66410E-01';  ...
'0.52988' '3.53750E-01';  ...
'0.53445' '3.42790E-01';  ...
'0.53910' '3.30670E-01';  ...
'0.54383' '3.19020E-01';  ...
'0.54864' '3.08750E-01';  ...
'0.55354' '2.98750E-01';  ...
'0.55853' '2.91260E-01';  ...
'0.56360' '2.83600E-01';  ...
'0.56877' '2.74900E-01';  ...
'0.57404' '2.66620E-01';  ...
'0.57940' '2.58370E-01';  ...
'0.58487' '2.50750E-01';  ...
'0.59044' '2.44100E-01';  ...
'0.59612' '2.35830E-01';  ...
'0.60191' '2.27180E-01';  ...
'0.60781' '2.18390E-01';  ...
'0.61382' '2.13400E-01';  ...
'0.61996' '2.07770E-01';  ...
'0.62623' '2.01580E-01';  ...
'0.63262' '1.95820E-01';  ...
'0.63914' '1.89550E-01';  ...
'0.64579' '1.83490E-01';  ...
'0.65259' '1.78060E-01';  ...
'0.65954' '1.72580E-01';  ...
'0.66663' '1.65900E-01';  ...
'0.67387' '1.59260E-01';  ...
'0.68128' '1.51840E-01';  ...
'0.68885' '1.43030E-01';  ...
'0.69659' '1.33120E-01';  ...
'0.70450' '1.25050E-01';  ...
'0.71260' '1.18710E-01';  ...
'0.72089' '1.13340E-01';  ...
'0.72937' '1.08510E-01';  ...
'0.73805' '1.03950E-01';  ...
'0.74694' '1.00230E-01';  ...
'0.75605' '9.59500E-02';  ...
'0.76539' '9.16300E-02';  ...
'0.77495' '8.71100E-02';  ...
'0.78476' '8.19200E-02';  ...
'0.79482' '7.80300E-02';  ...
'0.80515' '7.33100E-02';  ...
'0.81574' '6.75700E-02';  ...
'0.82662' '6.02500E-02';  ...
'0.83779' '5.00900E-02';  ...
'0.84926' '2.51200E-02';  ...
'0.86106' '1.14400E-02';  ...
'0.87319' '6.10000E-03';  ...
'0.88566' '4.05000E-03';  ...
'0.89850' '2.02400E-04';  ...
'0.91171' '9.71111E-05';  ...
'0.92532' '6.13333E-06';  ...
'0.93934' '0.00000E+00';  ...
'0.95379' '0.00000E+00';  ...
'0.96869' '0.00000E+00';  ...
'0.98407' '0.00000E+00';  ...
'0.99994' '0.00000E+00';  ...
'1.01633' '0.00000E+00';  ...
'1.03327' '0.00000E+00';  ...
'1.05078' '0.00000E+00';  ...
'1.06890' '0.00000E+00';  ...
'1.08765' '0.00000E+00';  ...
'1.10708' '0.00000E+00';  ...
'1.12721' '0.00000E+00';  ...
'1.14808' '0.00000E+00';  ...
'1.16974' '0.00000E+00';  ...
'1.19224' '0.00000E+00';  ...
'1.21561' '0.00000E+00';  ...
'1.23993' '0.00000E+00';  ...
'1.26523' '0.00000E+00';  ...
'1.29159' '0.00000E+00';  ...
'1.31907' '0.00000E+00';  ...
'1.34775' '0.00000E+00';  ...
'1.37770' '0.00000E+00';  ...
'1.40901' '0.00000E+00';  ...
'1.44177' '0.00000E+00';  ...
'1.47610' '0.00000E+00';  ...
'1.51210' '0.00000E+00';  ...
'1.54991' '0.00000E+00';  ...
'1.58965' '0.00000E+00';  ...
'1.63148' '0.00000E+00';  ...
'1.67558' '0.00000E+00';  ...
'1.72212' '0.00000E+00';  ...
'1.77132' '0.00000E+00';  ...
'1.82342' '0.00000E+00';  ...
'1.87868' '0.00000E+00'});
model.material('mat2').propertyGroup('RefractiveIndex').func('int2').set('fununit', {'1'});
model.material('mat2').propertyGroup('RefractiveIndex').func('int2').set('argunit', {'um'});
model.material('mat2').propertyGroup('RefractiveIndex').set('n', {'nr(c_const/freq)' '0' '0' '0' 'nr(c_const/freq)' '0' '0' '0' 'nr(c_const/freq)'});
model.material('mat2').propertyGroup('RefractiveIndex').set('ki', {'ni(c_const/freq)' '0' '0' '0' 'ni(c_const/freq)' '0' '0' '0' 'ni(c_const/freq)'});
model.material('mat2').propertyGroup('RefractiveIndex').addInput('frequency');
model.material('mat2').selection.named('geom1_c1_dom');

model.physics('ewfd').prop('components').set('components', 'outofplane');
model.physics('ewfd').create('sctr1', 'Scattering', 1);
model.physics('ewfd').feature('sctr1').selection.all;
model.physics('ewfd').create('sctr2', 'Scattering', 1);
model.physics('ewfd').feature('sctr2').selection.named('geom1_ls1_bnd');
model.physics('ewfd').feature('sctr2').set('IncidentField', 'EField');
model.physics('ewfd').feature('sctr2').set('E0i', [0 0 1]);

model.mesh('mesh1').run;

model.probe.create('bnd1', 'Boundary');
model.probe('bnd1').model('comp1');
model.probe('bnd1').set('intsurface', true);
model.probe('bnd1').label('Power Port 1');
model.probe('bnd1').set('probename', 'obj1');
model.probe('bnd1').set('type', 'integral');
model.probe('bnd1').selection.named('geom1_ls2_bnd');
model.probe('bnd1').set('expr', 'ewfd.nPoav');
model.probe('bnd1').set('descr', 'Power outflow, time average');
model.probe.duplicate('bnd2', 'bnd1');
model.probe('bnd2').label('Power Port 2');
model.probe('bnd2').set('probename', 'obj2');
model.probe('bnd2').selection.named('geom1_ls3_bnd');

model.param.create('par2');
model.param('par2').label('Wave Parameters');
model.param('par2').set('meshsz', 'lambda2/9');
model.param('par2').descr('meshsz', 'Mesh size');
model.param('par2').set('minPower', '0.25[nW/m]');
model.param('par2').descr('minPower', 'Pass band power');
model.param('par2').set('maxPower', 'minPower/5');
model.param('par2').descr('maxPower', 'Minimum out-of-band power');
model.param('par2').set('lambda1', '1[um]');
model.param('par2').descr('lambda1', 'First wavelength');
model.param('par2').set('lambda3', '0.96*lambda1');
model.param('par2').descr('lambda3', 'Out-of-band wavelength (lower)');
model.param('par2').set('lambda4', '1.055*lambda1');
model.param('par2').descr('lambda4', 'Out-of-band wavelength (center)');
model.param('par2').set('lambda5', '1.1175*lambda1');
model.param('par2').descr('lambda5', 'Out-of-band wavelength (higher)');
model.param('par2').set('lambda6', '1.13*lambda1');
model.param('par2').descr('lambda6', 'Out-of-band wavelength (highest)');
model.param('par2').set('dWaveN', '3');
model.param('par2').descr('dWaveN', 'Frequencies per pass band');
model.param('par2').set('dWaveN3', '4');
model.param('par2').descr('dWaveN3', 'Frequencies for first out-of-band constraint');
model.param('par2').set('dWaveN4', '7');
model.param('par2').descr('dWaveN4', 'Frequencies for middle out-of-band constraint');
model.param('par2').set('dWaveN5', '6');
model.param('par2').descr('dWaveN5', 'Frequencies for third out-of-band constraint');
model.param('par2').set('dWaveN6', '5');
model.param('par2').descr('dWaveN6', 'Frequencies for last out-of-band constraint');
model.param('par2').set('dWave', '0.01*lambda1');
model.param('par2').descr('dWave', 'Bandwidth for pass band');
model.param('par2').set('dWave3', '2*dWave');
model.param('par2').descr('dWave3', 'Bandwidth for first out-of-band wavelengths');
model.param('par2').set('dWave4', '2.5*dWave');
model.param('par2').descr('dWave4', 'Bandwidth for middle out-of-band wavelengths');
model.param('par2').set('dWave5', 'dWave/1.5');
model.param('par2').descr('dWave5', 'Bandwidth for third out-of-band wavelengths');
model.param('par2').set('dWave6', '1.5*dWave');
model.param('par2').descr('dWave6', 'Bandwidth for last out-of-band wavelengths');

model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('size').set('hmax', 'meshsz');
model.mesh('mesh1').feature('size').set('hmin', 'meshsz/2');
model.mesh('mesh1').feature('size').set('hcurve', Inf);
model.mesh('mesh1').feature('size1').selection.named('geom1_c1_dom');
model.mesh('mesh1').feature('size1').set('hmax', 'meshsz/2');
model.mesh('mesh1').feature('size1').set('hmin', 'meshsz/4');
model.mesh('mesh1').feature('size1').set('hgradactive', false);
model.mesh('mesh1').feature('size1').set('hcurveactive', false);
model.mesh('mesh1').feature('size1').set('hnarrowactive', false);
model.mesh('mesh1').run;

model.study('std1').feature('wave').set('punit', 'm');
model.study('std1').feature('wave').set('plist', 'range(lambda1-50[nm],1[nm],lambda2+50[nm])');
model.study('std1').feature('wave').set('probesel', 'none');
model.study('std1').label('Initial Design');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'wave');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'wave');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.01);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'lambda0'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(lambda1-50[nm],1[nm],lambda2+50[nm])'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'m'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'Default');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'none');
model.sol('sol1').feature('s1').feature('p1').set('probes', {'bnd1' 'bnd2'});
model.sol('sol1').feature('s1').feature('p1').set('control', 'wave');
model.sol('sol1').feature('s1').set('control', 'wave');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol1').feature('s1').feature('d1').label('Suggested Direct Solver (ewfd)');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').label('Electric Field (ewfd)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 201, 0);
model.result('pg1').set('defaultPlotID', 'ElectromagneticWavesFrequencyDomain/phys1/pdef1/pcond2/pg1');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('smooth', 'internal');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result('pg1').run;

model.common.create('fsd1', 'FreeShapeDomain', 'comp1');
model.common('fsd1').selection.all;
model.common('fsd1').selection.set([2]);
model.common.create('tsf1', 'Transformation', 'comp1');
model.common('tsf1').selection.named('geom1_comsel1');
model.common('tsf1').setIndex('move_lock', false, 0);
model.common('tsf1').setIndex('move_lBound', '-5E-8', 0);
model.common('tsf1').setIndex('move_uBound', '5E-8', 0);
model.common('tsf1').setIndex('move_lock', false, 1);
model.common('tsf1').setIndex('move_lBound', '-5E-8', 1);
model.common('tsf1').setIndex('move_uBound', '5E-8', 1);
model.common('tsf1').set('scalingType', 'No_scaling');

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').label('Objectives');
model.variable('var1').set('objA', 'if(lambda0<(lambda1+lambda2)/2,-obj1/minPower,-obj2/minPower)');
model.variable('var1').descr('objA', 'Pass band objective');
model.variable('var1').set('objB', '(obj1+obj2)/maxPower-2');
model.variable('var1').descr('objB', 'Out-of-band objective');
model.variable('var1').set('obj', 'if(min(abs(lambda0-lambda1),abs(lambda0-lambda2))<dWave/1.99,objA,objB)');
model.variable('var1').descr('obj', 'Objective function');

model.study.create('std2');
model.study('std2').create('wave', 'Wavelength');
model.study('std2').feature('wave').set('plotgroup', 'Default');
model.study('std2').feature('wave').set('solnum', 'auto');
model.study('std2').feature('wave').set('notsolnum', 'auto');
model.study('std2').feature('wave').set('outputmap', {});
model.study('std2').feature('wave').set('ngenAUX', '1');
model.study('std2').feature('wave').set('goalngenAUX', '1');
model.study('std2').feature('wave').set('ngenAUX', '1');
model.study('std2').feature('wave').set('goalngenAUX', '1');
model.study('std2').feature('wave').setSolveFor('/physics/ewfd', true);
model.study.create('std3');
model.study('std1').feature('wave').setEntry('activate', 'ewfd', true);
model.study('std1').feature('wave').setEntry('activate', 'frame:material1', false);
model.study('std2').feature('wave').set('plist', 'range(lambda3-dWave3/2,dWave/(dWaveN3-1),lambda3+dWave3/2) range(lambda1-dWave/2,dWave/(dWaveN-1),lambda1+dWave/2) range(lambda4-dWave4/2,dWave4/(dWaveN4-1),lambda4+dWave4/2) range(lambda2-dWave/2,dWave/(dWaveN-1),lambda2+dWave/2) range(lambda5-dWave5/2,dWave5/(dWaveN5-1),lambda5+dWave5/2) range(lambda6-dWave6/2,dWave6/(dWaveN6-1),lambda6+dWave6/2)');
model.study('std2').feature('wave').set('probesel', 'none');
model.study('std2').create('sho', 'ShapeOptimization');
model.study('std2').feature('sho').set('mmamaxiter', 50);
model.study('std2').feature('sho').set('optobj', {'comp1.obj'});
model.study('std2').feature('sho').set('descr', {'Objective function'});
model.study('std2').feature('sho').set('objectivesolution', 'max');
model.study('std2').feature('sho').set('probesel', 'none');
model.study('std2').label('Shape Optimization');

model.sol.create('sol2');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([2]);

model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'wave');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_material_disp').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_material_disp').set('scaleval', '2.138505319142321E-8');
model.sol('sol2').feature('v1').set('control', 'wave');
model.sol('sol2').create('o1', 'Optimization');
model.sol('sol2').feature('o1').set('control', 'sho');
model.sol('sol2').feature('o1').create('s1', 'StationaryAttrib');
model.sol('sol2').feature('o1').feature('s1').set('stol', 0.001);
model.sol('sol2').feature('o1').feature('s1').create('p1', 'Parametric');
model.sol('sol2').feature('o1').feature('s1').feature.remove('pDef');
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('pname', {'lambda0'});
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('plistarr', {'range(lambda3-dWave3/2,dWave/(dWaveN3-1),lambda3+dWave3/2) range(lambda1-dWave/2,dWave/(dWaveN-1),lambda1+dWave/2) range(lambda4-dWave4/2,dWave4/(dWaveN4-1),lambda4+dWave4/2) range(lambda2-dWave/2,dWave/(dWaveN-1),lambda2+dWave/2) range(lambda5-dWave5/2,dWave5/(dWaveN5-1),lambda5+dWave5/2) range(lambda6-dWave6/2,dWave6/(dWaveN6-1),lambda6+dWave6/2)'});
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('punit', {[native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']});
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('control', 'wave');
model.sol('sol2').feature('o1').feature('s1').set('control', 'wave');
model.sol('sol2').feature('o1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol2').feature('o1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('o1').feature('s1').create('seDef', 'Segregated');
model.sol('sol2').feature('o1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('o1').feature('s1').create('d1', 'Direct');
model.sol('sol2').feature('o1').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol2').feature('o1').feature('s1').feature('d1').label('Suggested Direct Solver (ewfd) (Merged)');
model.sol('sol2').feature('o1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('o1').feature('s1').feature.remove('fcDef');
model.sol('sol2').feature('o1').feature('s1').feature.remove('seDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runFromTo('st1', 'v1');

model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').label('Electric Field (ewfd) 1');
model.result('pg2').set('data', 'dset2');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('data', 'dset2');
model.result('pg2').set('defaultPlotID', 'ElectromagneticWavesFrequencyDomain/phys1/pdef1/pcond2/pg1');
model.result('pg2').feature.create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('smooth', 'internal');
model.result('pg2').feature('surf1').set('data', 'parent');
model.result.create('pg3', 'PlotGroup2D');
model.result.dataset.duplicate('dset2g1', 'dset2');
model.result.dataset('dset2g1').label('Shape Optimization/Solution 2 (2) - Geometry');
model.result.dataset('dset2g1').set('frametype', 'geometry');
model.result('pg3').label('Shape Optimization');
model.result('pg3').set('data', 'dset2');
model.result('pg3').set('frametype', 'geometry');
model.result('pg3').set('edgecolor', 'gray');
model.result('pg3').set('titletype', 'none');
model.result('pg3').create('line1', 'Line');
model.result('pg3').feature('line1').set('expr', '1');
model.result('pg3').feature('line1').set('coloring', 'uniform');
model.result('pg3').feature('line1').set('color', 'fromtheme');
model.result('pg3').create('arwp1', 'ArrowPoint');
model.result('pg3').feature('arwp1').label('Translation (Transformation 1)');
model.result('pg3').feature('arwp1').set('expr', {'tsf1.moveXg' 'tsf1.moveYg'});
model.result('pg3').feature('arwp1').set('arrowbase', 'head');
model.result('pg3').feature('arwp1').set('scaleactive', true);
model.result('pg3').feature('arwp1').set('scale', '1');
model.result('pg3').feature('arwp1').create('def1', 'Deform');
model.result('pg3').feature('arwp1').feature('def1').set('expr', {'-tsf1.scaleXg-tsf1.rotateXg' '-tsf1.scaleYg-tsf1.rotateYg'});
model.result('pg3').feature('arwp1').feature('def1').set('scaleactive', true);
model.result('pg3').feature('arwp1').feature('def1').set('scale', '1');
model.result('pg3').feature('arwp1').create('col1', 'Color');
model.result('pg3').feature('arwp1').feature('col1').set('expr', 'tsf1.rel_move');
model.result('pg3').feature('arwp1').feature('col1').set('rangecoloractive', 'on');
model.result('pg3').feature('arwp1').feature('col1').set('rangecolormin', 0);
model.result('pg3').feature('arwp1').feature('col1').set('rangecolormax', 1);
model.result('pg3').create('arwp2', 'ArrowPoint');
model.result('pg3').feature('arwp2').label('Scaling (Transformation 1)');
model.result('pg3').feature('arwp2').set('expr', {'tsf1.scaleXg' 'tsf1.scaleYg'});
model.result('pg3').feature('arwp2').set('arrowbase', 'head');
model.result('pg3').feature('arwp2').set('scaleactive', true);
model.result('pg3').feature('arwp2').set('scale', '1');
model.result('pg3').feature('arwp2').set('inheritplot', 'arwp1');
model.result('pg3').feature('arwp2').create('def1', 'Deform');
model.result('pg3').feature('arwp2').feature('def1').set('expr', {'-tsf1.rotateXg' '-tsf1.rotateYg'});
model.result('pg3').feature('arwp2').feature('def1').set('scaleactive', true);
model.result('pg3').feature('arwp2').feature('def1').set('scale', '1');
model.result('pg3').feature('arwp2').create('col1', 'Color');
model.result('pg3').feature('arwp2').feature('col1').set('expr', 'tsf1.rel_scale');
model.result('pg3').feature('arwp2').feature('col1').set('rangecoloractive', 'on');
model.result('pg3').feature('arwp2').feature('col1').set('rangecolormin', 0);
model.result('pg3').feature('arwp2').feature('col1').set('rangecolormax', 1);
model.result('pg3').create('arwp3', 'ArrowPoint');
model.result('pg3').feature('arwp3').label('Rotation (Transformation 1)');
model.result('pg3').feature('arwp3').set('expr', {'tsf1.rotateXg' 'tsf1.rotateYg'});
model.result('pg3').feature('arwp3').set('arrowbase', 'head');
model.result('pg3').feature('arwp3').set('scaleactive', true);
model.result('pg3').feature('arwp3').set('scale', '1');
model.result('pg3').feature('arwp3').set('inheritplot', 'arwp1');
model.result('pg3').feature('arwp3').create('col1', 'Color');
model.result('pg3').feature('arwp3').feature('col1').set('expr', 'tsf1.rel_rotate');
model.result('pg3').feature('arwp3').feature('col1').set('rangecoloractive', 'on');
model.result('pg3').feature('arwp3').feature('col1').set('rangecolormin', 0);
model.result('pg3').feature('arwp3').feature('col1').set('rangecolormax', 1);
model.result('pg2').run;

model.study('std2').feature('sho').set('plot', true);
model.study('std2').feature('sho').set('plotgroup', 'pg3');

model.sol('sol2').feature('o1').set('nojacmethod', false);
model.sol('sol2').feature('o1').feature('s1').create('se1', 'Segregated');
model.sol('sol2').feature('o1').feature('s1').feature('se1').set('segterm', 'iter');
model.sol('sol2').feature('o1').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol2').feature('o1').feature('s1').feature('se1').feature('ssDef').label('Optimization');
model.sol('sol2').feature('o1').feature('s1').feature('se1').feature('ssDef').set('segvar', {'comp1_material_disp' 'comp1_tsf1_move'});
model.sol('sol2').feature('o1').feature('s1').feature('se1').feature('ss1').label('Electric Fields');
model.sol('sol2').feature('o1').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_E' 'comp1_tsf1_move'});
model.sol('sol2').runAll;

model.result('pg2').run;
model.result.dataset('dset2').createDeformedConfig('deform1', 'mesh2');

model.study('std3').feature.copy('wave1', 'std1/wave');
model.study('std3').feature('wave1').setEntry('activate', 'frame:material1', false);
model.study('std3').feature('wave1').set('useinitsol', true);
model.study('std3').feature('wave1').set('initmethod', 'sol');
model.study('std3').feature('wave1').set('initstudy', 'std2');
model.study('std3').feature('wave1').set('usesol', true);
model.study('std3').feature('wave1').set('notsolmethod', 'sol');
model.study('std3').feature('wave1').set('notstudy', 'std2');
model.study('std3').feature('wave1').setEntry('outputmap', 'ewfd', 'selection');
model.study('std3').feature('wave1').setEntry('outputselectionmap', 'ewfd', 'geom1_ls2_bnd;geom1_ls3_bnd');
model.study('std3').feature('wave1').setEntry('outputmap', 'frame:material1', 'selection');
model.study('std3').feature('wave1').setEntry('outputselectionmap', 'frame:material1', 'geom1_ls2_bnd;geom1_ls3_bnd');
model.study('std3').feature('wave1').setEntry('mesh', 'geom1', 'mesh2');
model.study('std3').label('Verification');
model.study('std3').setGenPlots(false);

model.sol.create('sol3');

model.mesh('mesh2').stat.selection.geom(2);
model.mesh('mesh2').stat.selection.set([2]);

model.sol('sol3').study('std3');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std3');
model.sol('sol3').feature('st1').set('studystep', 'wave1');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').feature('comp1_material_disp').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_material_disp').set('scaleval', '2.075869456396524E-8');
model.sol('sol3').feature('v1').set('control', 'wave1');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').set('stol', 0.001);
model.sol('sol3').feature('s1').create('p1', 'Parametric');
model.sol('sol3').feature('s1').feature.remove('pDef');
model.sol('sol3').feature('s1').feature('p1').set('pname', {'lambda0'});
model.sol('sol3').feature('s1').feature('p1').set('plistarr', {'range(lambda1-50[nm],1[nm],lambda2+50[nm])'});
model.sol('sol3').feature('s1').feature('p1').set('punit', {'m'});
model.sol('sol3').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol3').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol3').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol3').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol3').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol3').feature('s1').feature('p1').set('probesel', 'none');
model.sol('sol3').feature('s1').feature('p1').set('probes', {'bnd1' 'bnd2'});
model.sol('sol3').feature('s1').feature('p1').set('control', 'wave1');
model.sol('sol3').feature('s1').set('control', 'wave1');
model.sol('sol3').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol3').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('s1').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol3').feature('s1').feature('d1').label('Suggested Direct Solver (ewfd)');
model.sol('sol3').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol('sol3').attach('std3');
model.sol('sol3').runAll;

model.result('pg1').run;
model.result('pg1').label('Electric Field (initial)');
model.result('pg1').run;
model.result('pg1').feature('surf1').set('expr', 'ewfd.Ez');
model.result('pg1').feature('surf1').set('descr', 'Electric field, z-component');
model.result('pg1').feature('surf1').set('colortable', 'WaveLight');
model.result('pg2').run;
model.result('pg2').create('str1', 'Streamline');
model.result('pg2').feature('str1').set('expr', {'ewfd.Poavx' 'ewfd.Poavy'});
model.result('pg2').feature('str1').set('descr', 'Power flow, time average (spatial and material frames)');
model.result('pg2').feature('str1').selection.named('geom1_ls1_bnd');
model.result('pg2').feature('str1').set('linetype', 'tube');
model.result('pg2').feature('str1').set('tuberadiusscaleactive', true);
model.result('pg2').feature('str1').set('radiusexpr', '3e-9');
model.result('pg2').run;
model.result('pg2').feature('surf1').set('expr', 'ewfd.Ez');
model.result('pg2').feature('surf1').set('descr', 'Electric field, z-component');
model.result('pg2').feature('surf1').set('colorscalemode', 'linearsymmetric');
model.result('pg2').feature('surf1').set('colortable', 'WaveLight');
model.result('pg2').run;
model.result('pg2').label('Electric Field (optimized)');
model.result('pg2').setIndex('looplevel', 19, 0);
model.result('pg2').run;
model.result('pg2').setIndex('looplevel', 9, 0);
model.result('pg2').run;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Spectrum');
model.result('pg4').set('data', 'dset4');
model.result('pg4').set('titletype', 'none');
model.result('pg4').set('ylabelactive', true);
model.result('pg4').set('ylabel', 'P (nW/m)');
model.result('pg4').set('legendlayout', 'outside');
model.result('pg4').set('legendposoutside', 'bottom');
model.result('pg4').set('legendrowcount', 2);
model.result('pg4').create('glob1', 'Global');
model.result('pg4').feature('glob1').set('markerpos', 'datapoints');
model.result('pg4').feature('glob1').set('linewidth', 'preference');
model.result('pg4').feature('glob1').set('expr', {'obj1'});
model.result('pg4').feature('glob1').set('descr', {'Power Port 1'});
model.result('pg4').feature('glob1').set('expr', {'obj1' 'obj2'});
model.result('pg4').feature('glob1').set('descr', {'Power Port 1' 'Power Port 2'});
model.result('pg4').feature('glob1').setIndex('unit', 'nW/m', 0);
model.result('pg4').feature('glob1').setIndex('descr', 'Power port 1 (mesh2)', 0);
model.result('pg4').feature('glob1').setIndex('unit', 'nW/m', 1);
model.result('pg4').feature('glob1').setIndex('descr', 'Power port 2 (mesh2)', 1);
model.result('pg4').feature('glob1').set('xdataparamunit', [native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']);
model.result('pg4').feature('glob1').set('linewidth', 2);
model.result('pg4').feature.duplicate('glob2', 'glob1');
model.result('pg4').run;
model.result('pg4').feature('glob2').set('data', 'dset2');
model.result('pg4').feature('glob2').set('linestyle', 'none');
model.result('pg4').feature('glob2').set('linemarker', 'square');
model.result('pg4').feature('glob2').set('linecolor', 'cyclereset');
model.result('pg4').feature('glob2').setIndex('unit', 'nW/m', 0);
model.result('pg4').feature('glob2').setIndex('descr', 'Power port 1', 0);
model.result('pg4').feature('glob2').setIndex('unit', 'nW/m', 1);
model.result('pg4').feature('glob2').setIndex('descr', 'Power port 2', 1);
model.result('pg4').run;
model.result('pg3').run;
model.result.duplicate('pg5', 'pg3');
model.result('pg5').run;
model.result('pg5').label('Thumbnail');
model.result('pg5').set('edges', false);
model.result('pg5').run;
model.result('pg5').feature('line1').set('linetype', 'tube');
model.result('pg5').feature('line1').set('radiusexpr', '5e-9');
model.result('pg5').feature('line1').set('tuberadiusscaleactive', true);
model.result('pg5').feature.duplicate('line2', 'line1');
model.result('pg5').run;
model.result('pg5').feature('line2').set('color', 'gray');
model.result('pg5').feature('line2').create('def1', 'Deform');
model.result('pg5').run;
model.result('pg5').feature('line2').feature('def1').set('expr', {'tsf1.dXg' 'tsf1.dYg'});
model.result('pg5').feature('line2').feature('def1').set('descr', 'Boundary displacement (geometry frame)');
model.result('pg5').feature('line2').feature('def1').set('expr', {'-tsf1.dXg' '-tsf1.dYg'});
model.result('pg5').feature('line2').feature('def1').set('scaleactive', true);
model.result('pg5').feature('line2').feature('def1').set('scale', 1);
model.result('pg5').run;
model.result('pg5').feature('arwp1').feature('col1').set('expr', 'sqrt(material.dX^2+material.dY^2)');
model.result('pg5').feature('arwp1').feature('col1').set('rangecoloractive', false);
model.result('pg5').run;
model.result('pg5').feature('line1').create('filt1', 'Filter');
model.result('pg5').run;
model.result('pg5').feature('line1').feature('filt1').set('expr', '(abs(X)<1e-6)*(abs(Y)<1e-6)');
model.result('pg5').run;
model.result('pg5').feature('arwp1').feature.copy('filt1', 'pg5/line1/filt1');
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').feature('line2').feature.copy('filt1', 'pg5/line1/filt1');
model.result('pg5').run;
model.result('pg5').run;

model.title('Optimization of a Photonic Crystal for Demultiplexing');

model.description('This model simulates the propagation of two frequency bands in a photonic crystal with three ports. The crystal is initially symmetric, so that the two frequency bands is directly equally to either output port. The model optimizes the position of the pillars in order to make the two frequency bands go to different output ports.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;

model.label('photonic_crystal_demultiplexer_optimization.mph');

model.modelNode.label('Components');

out = model;
