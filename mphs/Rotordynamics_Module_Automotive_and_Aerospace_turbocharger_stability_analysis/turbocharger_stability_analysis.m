function out = model
%
% turbocharger_stability_analysis.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Rotordynamics_Module/Automotive_and_Aerospace');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('rotsld', 'SolidRotor', 'geom1');
model.physics('rotsld').model('comp1');

model.study.create('std1');
model.study('std1').create('eig', 'Eigenfrequency');
model.study('std1').feature('eig').setSolveFor('/physics/rotsld', true);

model.geom('geom1').create('imp1', 'Import');
model.geom('geom1').feature('imp1').set('filename', 'turbocharger_stability_analysis.mphbin');
model.geom('geom1').runPre('fin');

model.param.set('p', '0');
model.param.descr('p', 'Parameter to include/exclude cross-coupled stiffness');
model.param.set('Ow', '10000[rpm]');
model.param.descr('Ow', 'Angular speed of the rotor');

model.geom('geom1').run;

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat1').propertyGroup('Enu').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup('Enu').func.create('int2', 'Interpolation');
model.material('mat1').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat1').propertyGroup.create('ElastoplasticModel', 'Elastoplastic material model');
model.material('mat1').propertyGroup('ElastoplasticModel').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('Ludwik', 'Ludwik');
model.material('mat1').propertyGroup('Ludwik').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('JohnsonCook', 'Johnson-Cook');
model.material('mat1').propertyGroup.create('Swift', 'Swift');
model.material('mat1').propertyGroup.create('Voce', 'Voce');
model.material('mat1').propertyGroup('Voce').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('HockettSherby', 'Hockett-Sherby');
model.material('mat1').propertyGroup('HockettSherby').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('ArmstrongFrederick', 'Armstrong-Frederick');
model.material('mat1').propertyGroup('ArmstrongFrederick').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('Norton', 'Norton');
model.material('mat1').propertyGroup.create('Garofalo', 'Garofalo (hyperbolic sine)');
model.material('mat1').propertyGroup.create('ChabocheViscoplasticity', 'Chaboche viscoplasticity');
model.material('mat1').label('Structural steel');
model.material('mat1').set('family', 'custom');
model.material('mat1').set('customspecular', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat1').set('customdiffuse', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat1').set('customambient', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat1').set('noise', true);
model.material('mat1').set('fresnel', 0.9);
model.material('mat1').set('roughness', 0.3);
model.material('mat1').set('metallic', 0);
model.material('mat1').set('pearl', 0);
model.material('mat1').set('diffusewrap', 0);
model.material('mat1').set('clearcoat', 0);
model.material('mat1').set('reflectance', 0);
model.material('mat1').propertyGroup('def').set('lossfactor', '0.02');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('heatcapacity', '475[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]'});
model.material('mat1').propertyGroup('def').set('density', '7850[kg/m^3]');
model.material('mat1').propertyGroup('Enu').func('int1').set('funcname', 'E');
model.material('mat1').propertyGroup('Enu').func('int1').set('table', {'293.15' '200e9'; '793.15' '166.6e9'});
model.material('mat1').propertyGroup('Enu').func('int1').set('extrap', 'linear');
model.material('mat1').propertyGroup('Enu').func('int1').set('fununit', {'Pa'});
model.material('mat1').propertyGroup('Enu').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Enu').func('int2').set('funcname', 'nu');
model.material('mat1').propertyGroup('Enu').func('int2').set('table', {'293.15' '0.30'; '793.15' '0.315'});
model.material('mat1').propertyGroup('Enu').func('int2').set('extrap', 'linear');
model.material('mat1').propertyGroup('Enu').func('int2').set('fununit', {'1'});
model.material('mat1').propertyGroup('Enu').func('int2').set('argunit', {'K'});
model.material('mat1').propertyGroup('Enu').set('E', 'E(T)');
model.material('mat1').propertyGroup('Enu').set('nu', 'nu(T)');
model.material('mat1').propertyGroup('Enu').addInput('temperature');
model.material('mat1').propertyGroup('Murnaghan').set('l', '-3.0e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('m', '-6.2e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('n', '-7.2e11[Pa]');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmags', '350[MPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('Et', '1.045[GPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('Ek', '1.045[GPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmagh', '1.050[GPa]*epe*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').addInput('temperature');
model.material('mat1').propertyGroup('ElastoplasticModel').addInput('effectiveplasticstrain');
model.material('mat1').propertyGroup('Ludwik').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('Ludwik').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('Ludwik').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('Ludwik').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Ludwik').set('k_lud', '560[MPa]*a(T)');
model.material('mat1').propertyGroup('Ludwik').set('n_lud', '0.61');
model.material('mat1').propertyGroup('Ludwik').addInput('temperature');
model.material('mat1').propertyGroup('JohnsonCook').set('k_jcook', '560[MPa]');
model.material('mat1').propertyGroup('JohnsonCook').set('n_jcook', '0.61');
model.material('mat1').propertyGroup('JohnsonCook').set('C_jcook', '0.12');
model.material('mat1').propertyGroup('JohnsonCook').set('epet0_jcook', '1[1/s]');
model.material('mat1').propertyGroup('JohnsonCook').set('m_jcook', '0.6');
model.material('mat1').propertyGroup('Swift').set('e0_swi', '0.021');
model.material('mat1').propertyGroup('Swift').set('n_swi', '0.2');
model.material('mat1').propertyGroup('Voce').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('Voce').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('Voce').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('Voce').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Voce').set('sigma_voc', '249[MPa]*a(T)');
model.material('mat1').propertyGroup('Voce').set('beta_voc', '9.3');
model.material('mat1').propertyGroup('Voce').addInput('temperature');
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('HockettSherby').set('sigma_hoc', '684[MPa]*a(T)');
model.material('mat1').propertyGroup('HockettSherby').set('m_hoc', '3.9');
model.material('mat1').propertyGroup('HockettSherby').set('n_hoc', '0.85');
model.material('mat1').propertyGroup('HockettSherby').addInput('temperature');
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('ArmstrongFrederick').set('Ck', '2.070[GPa]*a(T)');
model.material('mat1').propertyGroup('ArmstrongFrederick').set('gammak', '8.0');
model.material('mat1').propertyGroup('ArmstrongFrederick').addInput('temperature');
model.material('mat1').propertyGroup('Norton').set('A_nor', '1.2e-15[1/s]');
model.material('mat1').propertyGroup('Norton').set('sigRef_nor', '1[MPa]');
model.material('mat1').propertyGroup('Norton').set('n_nor', '4.5');
model.material('mat1').propertyGroup('Garofalo').set('A_gar', '1e-6[1/s]');
model.material('mat1').propertyGroup('Garofalo').set('sigRef_gar', '100[MPa]');
model.material('mat1').propertyGroup('Garofalo').set('n_gar', '4.6');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('A_cha', '1');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('sigRef_cha', '490[MPa]');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('n_cha', '9');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');
model.selection('sel1').set([2]);
model.selection('sel1').label('Compressor');
model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').set([1]);
model.selection('sel2').label('Turbine');

model.physics('rotsld').prop('RotorProperties').set('rpt', 'Ow');
model.physics('rotsld').prop('ShapeProperty').set('order_displacement', 1);
model.physics('rotsld').feature('lemm1').create('dmp1', 'Damping', 3);
model.physics('rotsld').feature('lemm1').feature('dmp1').set('alpha_dM', 6.04);
model.physics('rotsld').feature('lemm1').feature('dmp1').set('beta_dK', '2e-6');
model.physics('rotsld').feature('raxi1').feature('fsup1').selection.set([209 210]);
model.physics('rotsld').feature('raxi1').feature('ssup1').selection.set([251 252]);
model.physics('rotsld').feature('far1').selection.set([6 7 134 136]);
model.physics('rotsld').feature.duplicate('far2', 'far1');
model.physics('rotsld').feature('far2').selection.set([10 11 146 149]);
model.physics('rotsld').create('jrb1', 'JournalBearing', 2);
model.physics('rotsld').feature('jrb1').selection.set([85 86 138 139]);
model.physics('rotsld').feature('jrb1').set('e_aux', [1 0 0]);
model.physics('rotsld').feature('jrb1').set('BearingModel', 'kTot');
model.physics('rotsld').feature('jrb1').set('k_u', {'1e8' '-4e7*p' '4e7*p' '1e8'});
model.physics('rotsld').feature('jrb1').set('k_th', [0 0 0 0]);
model.physics('rotsld').feature.duplicate('jrb2', 'jrb1');
model.physics('rotsld').feature('jrb2').selection.set([91 92 142 143]);
model.physics('rotsld').feature('jrb2').set('k_u', {'1e8' '-1e7*p' '1e7*p' '1e8'});
model.physics('rotsld').feature('jrb2').set('k_th', [0 0 0 0]);
model.physics('rotsld').create('rd1', 'RigidDomain', 3);
model.physics('rotsld').feature('rd1').selection.named('sel2');
model.physics('rotsld').feature('rd1').label('Rigid Material: Turbine');
model.physics('rotsld').feature('rd1').create('af1', 'AppliedForce', -1);
model.physics('rotsld').feature('rd1').feature('af1').set('Ft', {'0' '0' '1e3'});
model.physics('rotsld').feature.duplicate('rd2', 'rd1');
model.physics('rotsld').feature('rd2').label('Rigid Material: Compressor');
model.physics('rotsld').feature('rd2').selection.set([2]);
model.physics('rotsld').feature('rd2').feature('af1').set('Ft', {'1e3' '0' '0'});

model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe1').selection.set([3 4 5 6 7]);
model.mesh('mesh1').create('ftet1', 'FreeTet');
model.mesh('mesh1').feature('swe1').create('size1', 'Size');
model.mesh('mesh1').feature('swe1').feature('size1').set('hauto', 2);
model.mesh('mesh1').run;

model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'p', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', '', 0);
model.study('std1').feature('param').setIndex('pname', 'p', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', '', 0);
model.study('std1').feature('param').setIndex('pname', 'Ow', 1);
model.study('std1').feature('param').setIndex('plistarr', '', 1);
model.study('std1').feature('param').setIndex('punit', '1/s', 1);
model.study('std1').feature('param').setIndex('pname', 'Ow', 1);
model.study('std1').feature('param').setIndex('plistarr', '', 1);
model.study('std1').feature('param').setIndex('punit', '1/s', 1);
model.study('std1').feature('param').setIndex('pname', 'p', 0);
model.study('std1').feature('param').setIndex('plistarr', '0 1', 0);
model.study('std1').feature('param').setIndex('plistarr', 'range(0,5000,100000)', 1);
model.study('std1').feature('param').setIndex('punit', 'rpm', 1);
model.study('std1').feature('param').set('sweeptype', 'filled');
model.study('std1').feature('eig').set('neigsactive', true);
model.study('std1').feature('eig').set('neigs', 9);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'eig');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_rotsld_rd_rot').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_rotsld_rd_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_rotsld_rd_rot').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_rotsld_rd_disp').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_rotsld_rd_rot').set('scaleval', '0.1');
model.sol('sol1').feature('v1').feature('comp1_rotsld_rd_disp').set('scaleval', '0.002195267667914786');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.2195267667914786');
model.sol('sol1').feature('v1').set('control', 'eig');
model.sol('sol1').create('e1', 'Eigenvalue');
model.sol('sol1').feature('e1').set('control', 'eig');
model.sol('sol1').attach('std1');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'p' 'Ow'});
model.batch('p1').set('plistarr', {'0 1' 'range(0,5000,100000)'});
model.batch('p1').set('sweeptype', 'filled');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol.create('sol2');
model.sol('sol2').study('std1');
model.sol('sol2').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').run('compute');

model.result.dataset.create('cln1', 'CutLine3D');
model.result.dataset('cln1').label('Axis');
model.result.dataset('cln1').set('data', 'none');
model.result.dataset('cln1').set('genpoints', {'comp1.rotsld.raxi1.r1x' 'comp1.rotsld.raxi1.r1y' 'comp1.rotsld.raxi1.r1z'; 'comp1.rotsld.raxi1.r2x' 'comp1.rotsld.raxi1.r2y' 'comp1.rotsld.raxi1.r2z'});
model.result.dataset('cln1').set('bounded', false);
model.result.dataset('cln1').set('data', 'dset2');
model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').label('Mode Shape (rotsld)');
model.result('pg1').set('data', 'dset2');
model.result('pg1').setIndex('looplevel', 1, 0);
model.result('pg1').setIndex('looplevel', 21, 1);
model.result('pg1').setIndex('looplevel', 2, 2);
model.result('pg1').set('showlegends', 'off');
model.result('pg1').set('data', 'dset2');
model.result('pg1').setIndex('looplevel', 1, 0);
model.result('pg1').setIndex('looplevel', 21, 1);
model.result('pg1').setIndex('looplevel', 2, 2);
model.result('pg1').set('defaultPlotID', 'modeShape');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('colortable', 'AuroraBorealis');
model.result('pg1').feature('surf1').set('smooth', 'internal');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result('pg1').feature('surf1').feature.create('def1', 'Deform');
model.result('pg1').feature('surf1').feature('def1').label('Deformation');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Whirl (rotsld)');
model.result('pg2').set('data', 'cln1');
model.result('pg2').setIndex('looplevel', 1, 0);
model.result('pg2').setIndex('looplevel', 21, 1);
model.result('pg2').setIndex('looplevel', 2, 2);
model.result('pg2').set('showlegends', 'off');
model.result('pg2').set('data', 'cln1');
model.result('pg2').setIndex('looplevel', 1, 0);
model.result('pg2').setIndex('looplevel', 21, 1);
model.result('pg2').setIndex('looplevel', 2, 2);
model.result('pg2').set('defaultPlotID', 'whirl');
model.result('pg2').feature.create('wp1', 'Whirl');
model.result('pg2').feature('wp1').set('nrings', 10);
model.result('pg2').feature('wp1').set('colortable', 'TrafficLight');
model.result('pg2').feature('wp1').set('smooth', 'internal');
model.result('pg2').feature('wp1').set('data', 'parent');
model.result.evaluationGroup.create('std1EvgFrq', 'EvaluationGroup');
model.result.evaluationGroup('std1EvgFrq').set('defaultPlotID', 'eigenfrequenciesTable_rotsld');
model.result.evaluationGroup('std1EvgFrq').set('data', 'dset2');
model.result.evaluationGroup('std1EvgFrq').label('Eigenfrequencies (Study 1)');
model.result.evaluationGroup('std1EvgFrq').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('expr', '2*pi*freq', 0);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('unit', 'rad/s', 0);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('descr', 'Angular frequency', 0);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('expr', 'imag(freq)/abs(freq)', 1);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('unit', '1', 1);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('descr', 'Damping ratio', 1);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('expr', 'abs(freq)/imag(freq)/2', 2);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('unit', '1', 2);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('descr', 'Quality factor', 2);
model.result.evaluationGroup('std1EvgFrq').run;
model.result('pg1').run;
model.result('pg1').set('looplevel', [4 21 2]);
model.result('pg1').run;
model.result('pg2').run;
model.result('pg2').set('looplevel', [6 21 2]);
model.result('pg2').run;
model.result('pg2').feature('wp1').set('nplanes', 1);
model.result('pg2').feature('wp1').set('nrings', 20);
model.result('pg2').feature('wp1').set('colortable', 'HeatCamera');
model.result('pg2').run;
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').set('data', 'dset2');
model.result('pg3').create('glob1', 'Global');
model.result('pg3').feature('glob1').set('unit', {''});
model.result('pg3').feature('glob1').set('expr', {'rotsld.omegaf'});
model.result('pg3').feature('glob1').set('descr', {'Forward angular frequency'});
model.result('pg3').feature('glob1').set('xdata', 'expr');
model.result('pg3').feature('glob1').set('xdataexpr', 'rotsld.Ovg');
model.result('pg3').feature('glob1').set('xdataunit', 'rad/s');
model.result('pg3').feature('glob1').label('Forward Whirl Mode');
model.result('pg3').feature('glob1').set('linestyle', 'dashed');
model.result('pg3').feature('glob1').set('linecolor', 'blue');
model.result('pg3').feature('glob1').set('linewidth', 3);
model.result('pg3').feature('glob1').set('legend', false);
model.result('pg3').feature('glob1').set('xdatasolnumtype', 'outer');
model.result('pg3').feature('glob1').create('gmrk1', 'GraphMarker');
model.result('pg3').feature('glob1').feature('gmrk1').set('displaymode', 'intersection');
model.result('pg3').feature('glob1').feature('gmrk1').set('intersectionline', 'identity');
model.result('pg3').feature('glob1').feature('gmrk1').set('precision', 4);
model.result('pg3').feature('glob1').feature('gmrk1').set('labelprefix', 'f: ');
model.result('pg3').feature('glob1').feature('gmrk1').set('pointradius', 4);
model.result('pg3').feature('glob1').feature('gmrk1').set('color', 'custom');
model.result('pg3').feature('glob1').feature('gmrk1').set('customcolor', [1 0.501960813999176 0.250980406999588]);
model.result('pg3').feature('glob1').feature('gmrk1').set('anchorpoint', 'lowermiddle');
model.result('pg3').set('defaultPlotID', 'campbellFixedFrame');
model.result('pg3').label('Campbell Plot, Fixed Frame (rotsld)');
model.result('pg3').create('glob2', 'Global');
model.result('pg3').feature('glob2').set('expr', {'rotsld.omegab'});
model.result('pg3').feature('glob2').set('xdata', 'expr');
model.result('pg3').feature('glob2').set('xdataexpr', 'rotsld.Ovg');
model.result('pg3').feature('glob2').set('xdataunit', 'rad/s');
model.result('pg3').feature('glob2').set('linestyle', 'dotted');
model.result('pg3').feature('glob2').set('linecolor', 'blue');
model.result('pg3').feature('glob2').set('linewidth', 3);
model.result('pg3').feature('glob2').set('legend', false);
model.result('pg3').feature('glob2').label('Backward Whirl Mode');
model.result('pg3').feature('glob2').set('xdatasolnumtype', 'outer');
model.result('pg3').feature('glob2').create('gmrk1', 'GraphMarker');
model.result('pg3').feature('glob2').feature('gmrk1').set('displaymode', 'intersection');
model.result('pg3').feature('glob2').feature('gmrk1').set('intersectionline', 'identity');
model.result('pg3').feature('glob2').feature('gmrk1').set('precision', 4);
model.result('pg3').feature('glob2').feature('gmrk1').set('labelprefix', 'b: ');
model.result('pg3').feature('glob2').feature('gmrk1').set('pointradius', 4);
model.result('pg3').feature('glob2').feature('gmrk1').set('color', 'custom');
model.result('pg3').feature('glob2').feature('gmrk1').set('customcolor', [0.7490196228027344 0.1411764770746231 0.3686274588108063]);
model.result('pg3').feature('glob2').feature('gmrk1').set('anchorpoint', 'uppermiddle');
model.result('pg3').create('glob3', 'Global');
model.result('pg3').feature('glob3').set('expr', {'rotsld.omegan'});
model.result('pg3').feature('glob3').set('xdata', 'expr');
model.result('pg3').feature('glob3').set('xdataexpr', 'rotsld.Ovg');
model.result('pg3').feature('glob3').set('xdataunit', 'rad/s');
model.result('pg3').feature('glob3').set('linecolor', 'blue');
model.result('pg3').feature('glob3').set('linewidth', 3);
model.result('pg3').feature('glob3').set('legend', false);
model.result('pg3').feature('glob3').label('Planar or Torsional Mode');
model.result('pg3').feature('glob3').set('xdatasolnumtype', 'outer');
model.result('pg3').feature('glob3').create('gmrk1', 'GraphMarker');
model.result('pg3').feature('glob3').feature('gmrk1').set('displaymode', 'intersection');
model.result('pg3').feature('glob3').feature('gmrk1').set('intersectionline', 'identity');
model.result('pg3').feature('glob3').feature('gmrk1').set('precision', 4);
model.result('pg3').feature('glob3').feature('gmrk1').set('labelprefix', 't,p: ');
model.result('pg3').feature('glob3').feature('gmrk1').set('pointradius', 4);
model.result('pg3').feature('glob3').feature('gmrk1').set('color', 'custom');
model.result('pg3').feature('glob3').feature('gmrk1').set('customcolor', [0.03529411926865578 0.4627451002597809 0.03529411926865578]);
model.result('pg3').feature('glob3').feature('gmrk1').set('anchorpoint', 'uppermiddle');
model.result('pg3').create('glob4', 'Global');
model.result('pg3').feature('glob4').set('expr', {'if(rotsld.Ovg<=1.4*rotsld.omega,rotsld.Ovg,NaN)'});
model.result('pg3').feature('glob4').set('data', 'dset2');
model.result('pg3').feature('glob4').set('xdata', 'expr');
model.result('pg3').feature('glob4').set('xdataexpr', 'rotsld.Ovg');
model.result('pg3').feature('glob4').set('xdataunit', 'rad/s');
model.result('pg3').feature('glob4').set('linecolor', 'red');
model.result('pg3').feature('glob4').set('linewidth', 3);
model.result('pg3').feature('glob4').label('omega=Omega');
model.result('pg3').feature('glob4').set('xdatasolnumtype', 'outer');
model.result('pg3').feature('glob4').set('solutionparams', 'manual');
model.result('pg3').feature('glob4').setIndex('looplevelinput', 'last', 0);
model.result('pg3').feature('glob4').set('legend', true);
model.result('pg3').feature('glob4').set('legendmethod', 'manual');
model.result('pg3').feature('glob4').setIndex('legends', '\omega=\Omega', 0);
model.result('pg3').set('ylabel', 'Angular frequency (rad/s)');
model.result('pg3').set('titletype', 'manual');
model.result('pg3').set('title', 'Campbell plot, fixed frame');
model.result('pg3').label('Campbell Plot, Fixed Frame (rotsld)');
model.result('pg3').run;
model.result('pg3').setIndex('looplevelinput', 'first', 2);
model.result('pg3').run;
model.result('pg3').setIndex('looplevelinput', 'last', 2);
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Logarithmic Decrement');
model.result('pg4').set('data', 'dset2');
model.result('pg4').setIndex('looplevelinput', 'first', 2);
model.result('pg4').set('titletype', 'label');
model.result('pg4').set('showlegends', false);
model.result('pg4').create('glob1', 'Global');
model.result('pg4').feature('glob1').set('markerpos', 'datapoints');
model.result('pg4').feature('glob1').set('linewidth', 'preference');
model.result('pg4').feature('glob1').set('expr', {'rotsld.log_dec'});
model.result('pg4').feature('glob1').set('descr', {'Logarithmic decrement'});
model.result('pg4').feature('glob1').set('unit', {'1'});
model.result('pg4').feature('glob1').set('xdatasolnumtype', 'outer');
model.result('pg4').feature('glob1').set('xdata', 'expr');
model.result('pg4').feature('glob1').set('xdataexpr', 'rotsld.Ovg');
model.result('pg4').feature('glob1').set('linestyle', 'dashed');
model.result('pg4').feature('glob1').set('linecolor', 'blue');
model.result('pg4').feature('glob1').set('linewidth', 2);
model.result('pg4').feature('glob1').set('linemarker', 'circle');
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').setIndex('looplevelinput', 'last', 2);
model.result('pg4').run;
model.result.export.create('anim1', 'Animation');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('fontsize', '9');
model.result.export('anim1').set('colortheme', 'globaltheme');
model.result.export('anim1').set('customcolor', [1 1 1]);
model.result.export('anim1').set('background', 'color');
model.result.export('anim1').set('gltfincludelines', 'on');
model.result.export('anim1').set('title1d', 'on');
model.result.export('anim1').set('legend1d', 'on');
model.result.export('anim1').set('logo1d', 'on');
model.result.export('anim1').set('options1d', 'on');
model.result.export('anim1').set('title2d', 'on');
model.result.export('anim1').set('legend2d', 'on');
model.result.export('anim1').set('logo2d', 'on');
model.result.export('anim1').set('options2d', 'off');
model.result.export('anim1').set('title3d', 'on');
model.result.export('anim1').set('legend3d', 'on');
model.result.export('anim1').set('logo3d', 'on');
model.result.export('anim1').set('options3d', 'off');
model.result.export('anim1').set('axisorientation', 'on');
model.result.export('anim1').set('grid', 'on');
model.result.export('anim1').set('axes1d', 'on');
model.result.export('anim1').set('axes2d', 'on');
model.result.export('anim1').set('showgrid', 'on');
model.result.export('anim1').showFrame;
model.result.export('anim1').set('plotgroup', 'pg2');
model.result.export('anim1').set('sweeptype', 'dde');
model.result.export('anim1').run;

model.study.create('std2');
model.study('std2').create('freq', 'Frequency');
model.study('std2').feature('freq').setSolveFor('/physics/rotsld', true);
model.study('std2').feature('freq').set('plist', 'range(100,100,3000)');
model.study('std2').create('param', 'Parametric');
model.study('std2').feature('param').setIndex('pname', 'p', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', '', 0);
model.study('std2').feature('param').setIndex('pname', 'p', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', '', 0);
model.study('std2').feature('param').setIndex('pname', 'Ow', 1);
model.study('std2').feature('param').setIndex('plistarr', '', 1);
model.study('std2').feature('param').setIndex('punit', '1/s', 1);
model.study('std2').feature('param').setIndex('pname', 'Ow', 1);
model.study('std2').feature('param').setIndex('plistarr', '', 1);
model.study('std2').feature('param').setIndex('punit', '1/s', 1);
model.study('std2').feature('param').setIndex('plistarr', '0 1', 0);
model.study('std2').feature('param').setIndex('plistarr', 'range(2e3,2e3,1e5)', 1);
model.study('std2').feature('param').setIndex('punit', 'rpm', 1);
model.study('std2').feature('param').set('sweeptype', 'filled');

model.sol.create('sol45');
model.sol('sol45').study('std2');
model.sol('sol45').create('st1', 'StudyStep');
model.sol('sol45').feature('st1').set('study', 'std2');
model.sol('sol45').feature('st1').set('studystep', 'freq');
model.sol('sol45').create('v1', 'Variables');
model.sol('sol45').feature('v1').feature('comp1_rotsld_rd_rot').set('scalemethod', 'manual');
model.sol('sol45').feature('v1').feature('comp1_rotsld_rd_disp').set('scalemethod', 'manual');
model.sol('sol45').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol45').feature('v1').feature('comp1_rotsld_rd_rot').set('resscalemethod', 'parent');
model.sol('sol45').feature('v1').feature('comp1_rotsld_rd_disp').set('resscalemethod', 'parent');
model.sol('sol45').feature('v1').feature('comp1_rotsld_rd_rot').set('scaleval', '0.1');
model.sol('sol45').feature('v1').feature('comp1_rotsld_rd_disp').set('scaleval', '0.002195267667914786');
model.sol('sol45').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.2195267667914786');
model.sol('sol45').feature('v1').set('control', 'freq');
model.sol('sol45').create('s1', 'Stationary');
model.sol('sol45').feature('s1').set('stol', 0.001);
model.sol('sol45').feature('s1').create('p1', 'Parametric');
model.sol('sol45').feature('s1').feature.remove('pDef');
model.sol('sol45').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol45').feature('s1').feature('p1').set('plistarr', {'range(100,100,3000)'});
model.sol('sol45').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol45').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol45').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol45').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol45').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol45').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol45').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol45').feature('s1').feature('p1').set('probes', {});
model.sol('sol45').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol45').feature('s1').set('linpmethod', 'sol');
model.sol('sol45').feature('s1').set('linpsol', 'zero');
model.sol('sol45').feature('s1').set('control', 'freq');
model.sol('sol45').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol45').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol45').feature('s1').feature.remove('fcDef');
model.sol('sol45').attach('std2');

model.batch.create('p2', 'Parametric');
model.batch('p2').study('std2');
model.batch('p2').create('so1', 'Solutionseq');
model.batch('p2').feature('so1').set('seq', 'sol45');
model.batch('p2').feature('so1').set('store', 'on');
model.batch('p2').feature('so1').set('clear', 'on');
model.batch('p2').feature('so1').set('psol', 'none');
model.batch('p2').set('pname', {'p' 'Ow'});
model.batch('p2').set('plistarr', {'0 1' 'range(2e3,2e3,1e5)'});
model.batch('p2').set('sweeptype', 'filled');
model.batch('p2').set('probesel', 'all');
model.batch('p2').set('probes', {});
model.batch('p2').set('plot', 'off');
model.batch('p2').set('err', 'on');
model.batch('p2').attach('std2');
model.batch('p2').set('control', 'param');

model.sol.create('sol46');
model.sol('sol46').study('std2');
model.sol('sol46').label('Parametric Solutions 2');

model.batch('p2').feature('so1').set('psol', 'sol46');
model.batch('p2').run('compute');

model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').label('Stress (rotsld)');
model.result('pg5').set('data', 'dset4');
model.result('pg5').setIndex('looplevel', 30, 0);
model.result('pg5').setIndex('looplevel', 50, 1);
model.result('pg5').setIndex('looplevel', 2, 2);
model.result('pg5').set('data', 'dset4');
model.result('pg5').setIndex('looplevel', 30, 0);
model.result('pg5').setIndex('looplevel', 50, 1);
model.result('pg5').setIndex('looplevel', 2, 2);
model.result('pg5').set('defaultPlotID', 'stress');
model.result('pg5').feature.create('surf1', 'Surface');
model.result('pg5').feature('surf1').label('Surface');
model.result('pg5').feature('surf1').set('expr', 'rotsld.mises_peak');
model.result('pg5').feature('surf1').set('colortable', 'Prism');
model.result('pg5').feature('surf1').set('smooth', 'internal');
model.result('pg5').feature('surf1').set('threshold', 'manual');
model.result('pg5').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg5').feature('surf1').set('data', 'parent');
model.result('pg5').feature('surf1').feature.create('def1', 'Deform');
model.result('pg5').feature('surf1').feature('def1').label('Deformation');
model.result('pg5').run;
model.result('pg5').label('Displacement (rotsld)');
model.result('pg5').run;
model.result('pg5').feature('surf1').set('expr', 'rotsld.disp');
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').run;
model.result.dataset.create('cpt1', 'CutPoint3D');
model.result.dataset('cpt1').set('pointx', 0);
model.result.dataset('cpt1').set('pointy', 0.0624);
model.result.dataset('cpt1').set('pointz', 0);
model.result.dataset('cpt1').set('data', 'dset4');
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').run;
model.result('pg6').set('data', 'cpt1');
model.result('pg6').label('Waterfall plot');
model.result('pg6').create('wfp1', 'Waterfall');
model.result('pg6').feature('wfp1').set('data', 'cpt1');
model.result('pg6').feature('wfp1').setIndex('looplevelinput', 'first', 2);
model.result('pg6').feature('wfp1').set('zexpr', 'abs(u)');
model.result('pg6').feature('wfp1').set('xexpr', 'Ow');
model.result('pg6').feature('wfp1').set('yexpr', 'freq');
model.result('pg6').feature('wfp1').set('colortable', 'Prism');
model.result('pg6').run;

model.view('view3').set('scenelight', false);
model.view('view3').camera.set('manualgrid', true);
model.view('view3').camera.set('xspacing', 200);
model.view('view3').camera.set('yspacing', 200);
model.view('view3').camera.set('zspacing', 2);

model.result('pg6').run;
model.result('pg6').feature('wfp1').setIndex('looplevelinput', 'last', 2);
model.result('pg6').run;
model.result.export('anim1').showFrame;
model.result.export.duplicate('anim2', 'anim1');
model.result.export('anim2').showFrame;
model.result.export('anim2').set('plotgroup', 'pg5');
model.result.export('anim2').run;
model.result('pg1').run;

model.title('Stability of a Turbocharger Under the Influence of Cross-Coupled Bearing Forces');

model.description('Cross-coupled forces present in a hydrodynamic bearing often act as a negative damping in a rotor. Near the critical speed, this may lead to uncontrolled vibration of the turbocharger causing a risk of bearing failure. In this example, the influence of the cross-coupling forces on the dynamics of the rotor is analyzed. How to reduce this vibration is also studied.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;
model.sol('sol8').clearSolutionData;
model.sol('sol9').clearSolutionData;
model.sol('sol10').clearSolutionData;
model.sol('sol11').clearSolutionData;
model.sol('sol12').clearSolutionData;
model.sol('sol13').clearSolutionData;
model.sol('sol14').clearSolutionData;
model.sol('sol15').clearSolutionData;
model.sol('sol16').clearSolutionData;
model.sol('sol17').clearSolutionData;
model.sol('sol18').clearSolutionData;
model.sol('sol19').clearSolutionData;
model.sol('sol20').clearSolutionData;
model.sol('sol21').clearSolutionData;
model.sol('sol22').clearSolutionData;
model.sol('sol23').clearSolutionData;
model.sol('sol24').clearSolutionData;
model.sol('sol25').clearSolutionData;
model.sol('sol26').clearSolutionData;
model.sol('sol27').clearSolutionData;
model.sol('sol28').clearSolutionData;
model.sol('sol29').clearSolutionData;
model.sol('sol30').clearSolutionData;
model.sol('sol31').clearSolutionData;
model.sol('sol32').clearSolutionData;
model.sol('sol33').clearSolutionData;
model.sol('sol34').clearSolutionData;
model.sol('sol35').clearSolutionData;
model.sol('sol36').clearSolutionData;
model.sol('sol37').clearSolutionData;
model.sol('sol38').clearSolutionData;
model.sol('sol39').clearSolutionData;
model.sol('sol40').clearSolutionData;
model.sol('sol41').clearSolutionData;
model.sol('sol42').clearSolutionData;
model.sol('sol43').clearSolutionData;
model.sol('sol44').clearSolutionData;
model.sol('sol45').clearSolutionData;
model.sol('sol46').clearSolutionData;
model.sol('sol47').clearSolutionData;
model.sol('sol48').clearSolutionData;
model.sol('sol49').clearSolutionData;
model.sol('sol50').clearSolutionData;
model.sol('sol51').clearSolutionData;
model.sol('sol52').clearSolutionData;
model.sol('sol53').clearSolutionData;
model.sol('sol54').clearSolutionData;
model.sol('sol55').clearSolutionData;
model.sol('sol56').clearSolutionData;
model.sol('sol57').clearSolutionData;
model.sol('sol58').clearSolutionData;
model.sol('sol59').clearSolutionData;
model.sol('sol60').clearSolutionData;
model.sol('sol61').clearSolutionData;
model.sol('sol62').clearSolutionData;
model.sol('sol63').clearSolutionData;
model.sol('sol64').clearSolutionData;
model.sol('sol65').clearSolutionData;
model.sol('sol66').clearSolutionData;
model.sol('sol67').clearSolutionData;
model.sol('sol68').clearSolutionData;
model.sol('sol69').clearSolutionData;
model.sol('sol70').clearSolutionData;
model.sol('sol71').clearSolutionData;
model.sol('sol72').clearSolutionData;
model.sol('sol73').clearSolutionData;
model.sol('sol74').clearSolutionData;
model.sol('sol75').clearSolutionData;
model.sol('sol76').clearSolutionData;
model.sol('sol77').clearSolutionData;
model.sol('sol78').clearSolutionData;
model.sol('sol79').clearSolutionData;
model.sol('sol80').clearSolutionData;
model.sol('sol81').clearSolutionData;
model.sol('sol82').clearSolutionData;
model.sol('sol83').clearSolutionData;
model.sol('sol84').clearSolutionData;
model.sol('sol85').clearSolutionData;
model.sol('sol86').clearSolutionData;
model.sol('sol87').clearSolutionData;
model.sol('sol88').clearSolutionData;
model.sol('sol89').clearSolutionData;
model.sol('sol90').clearSolutionData;
model.sol('sol91').clearSolutionData;
model.sol('sol92').clearSolutionData;
model.sol('sol93').clearSolutionData;
model.sol('sol94').clearSolutionData;
model.sol('sol95').clearSolutionData;
model.sol('sol96').clearSolutionData;
model.sol('sol97').clearSolutionData;
model.sol('sol98').clearSolutionData;
model.sol('sol99').clearSolutionData;
model.sol('sol100').clearSolutionData;
model.sol('sol101').clearSolutionData;
model.sol('sol102').clearSolutionData;
model.sol('sol103').clearSolutionData;
model.sol('sol104').clearSolutionData;
model.sol('sol105').clearSolutionData;
model.sol('sol106').clearSolutionData;
model.sol('sol107').clearSolutionData;
model.sol('sol108').clearSolutionData;
model.sol('sol109').clearSolutionData;
model.sol('sol110').clearSolutionData;
model.sol('sol111').clearSolutionData;
model.sol('sol112').clearSolutionData;
model.sol('sol113').clearSolutionData;
model.sol('sol114').clearSolutionData;
model.sol('sol115').clearSolutionData;
model.sol('sol116').clearSolutionData;
model.sol('sol117').clearSolutionData;
model.sol('sol118').clearSolutionData;
model.sol('sol119').clearSolutionData;
model.sol('sol120').clearSolutionData;
model.sol('sol121').clearSolutionData;
model.sol('sol122').clearSolutionData;
model.sol('sol123').clearSolutionData;
model.sol('sol124').clearSolutionData;
model.sol('sol125').clearSolutionData;
model.sol('sol126').clearSolutionData;
model.sol('sol127').clearSolutionData;
model.sol('sol128').clearSolutionData;
model.sol('sol129').clearSolutionData;
model.sol('sol130').clearSolutionData;
model.sol('sol131').clearSolutionData;
model.sol('sol132').clearSolutionData;
model.sol('sol133').clearSolutionData;
model.sol('sol134').clearSolutionData;
model.sol('sol135').clearSolutionData;
model.sol('sol136').clearSolutionData;
model.sol('sol137').clearSolutionData;
model.sol('sol138').clearSolutionData;
model.sol('sol139').clearSolutionData;
model.sol('sol140').clearSolutionData;
model.sol('sol141').clearSolutionData;
model.sol('sol142').clearSolutionData;
model.sol('sol143').clearSolutionData;
model.sol('sol144').clearSolutionData;
model.sol('sol145').clearSolutionData;
model.sol('sol146').clearSolutionData;

model.label('turbocharger_stability_analysis.mph');

model.modelNode.label('Components');

out = model;
