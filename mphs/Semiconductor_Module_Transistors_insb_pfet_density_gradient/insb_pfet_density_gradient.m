function out = model
%
% insb_pfet_density_gradient.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Semiconductor_Module/Transistors');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('semi', 'Semiconductor', 'geom1');
model.physics('semi').model('comp1');

model.study.create('std1');
model.study('std1').create('semie', 'SemiconductorEquilibrium');
model.study('std1').feature('semie').set('solnum', 'auto');
model.study('std1').feature('semie').set('notsolnum', 'auto');
model.study('std1').feature('semie').set('outputmap', {});
model.study('std1').feature('semie').set('ngenAUX', '1');
model.study('std1').feature('semie').set('goalngenAUX', '1');
model.study('std1').feature('semie').set('ngenAUX', '1');
model.study('std1').feature('semie').set('goalngenAUX', '1');
model.study('std1').feature('semie').setSolveFor('/physics/semi', true);

model.geom('geom1').lengthUnit('nm');

model.param.label('Parameters 1: Geometry');
model.param.set('Lgate', '40[nm]');
model.param.descr('Lgate', 'Gate length');
model.param.set('Lgate2cap', '135[nm]');
model.param.descr('Lgate2cap', 'Gate to cap length');
model.param.set('Lcap', '100[nm]');
model.param.descr('Lcap', 'Cap length');
model.param.set('Hcap', '16[nm]');
model.param.descr('Hcap', 'Cap height');
model.param.set('Htopbar', '10[nm]');
model.param.descr('Htopbar', 'Top barrier height');
model.param.set('Hwell', '5[nm]');
model.param.descr('Hwell', 'Well height');
model.param.set('Hbotbar', '150[nm]');
model.param.descr('Hbotbar', 'Bottom barrier height');
model.param.set('Hstack', 'Htopbar+Hwell+Hbotbar');
model.param.descr('Hstack', 'Total height');
model.param.set('Ltot', 'Lgate+2*(Lgate2cap+Lcap)');
model.param.descr('Ltot', 'Total length');
model.param.set('d0', '1[um]');
model.param.descr('d0', 'Out-of-plane thickness');

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', {'Ltot' 'Hstack'});
model.geom('geom1').feature('r1').set('pos', {'-Ltot/2' '-Hstack'});
model.geom('geom1').feature('r1').setIndex('layername', 'Layer 1', 0);
model.geom('geom1').feature('r1').setIndex('layer', 'Hbotbar', 0);
model.geom('geom1').feature('r1').setIndex('layername', 'Layer 2', 1);
model.geom('geom1').feature('r1').setIndex('layer', 'Hwell', 1);
model.geom('geom1').run('r1');
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').set('size', {'Ltot' 'Hcap'});
model.geom('geom1').feature('r2').set('pos', {'-Ltot/2' '0'});
model.geom('geom1').feature('r2').set('layerbottom', false);
model.geom('geom1').feature('r2').set('layerleft', true);
model.geom('geom1').feature('r2').set('layerright', true);
model.geom('geom1').feature('r2').setIndex('layername', 'Layer 1', 0);
model.geom('geom1').feature('r2').setIndex('layer', 'Lcap', 0);
model.geom('geom1').feature('r2').setIndex('layername', 'Layer 2', 1);
model.geom('geom1').feature('r2').setIndex('layer', 'Lgate2cap', 1);
model.geom('geom1').run('r2');
model.geom('geom1').create('del1', 'Delete');
model.geom('geom1').feature('del1').selection('input').init(2);
model.geom('geom1').feature('del1').selection('input').set('r2', [2 4]);

model.param.create('par2');
model.param('par2').label('Parameters 2: Materials');
model.param('par2').set('cp', '1');
model.param('par2').descr('cp', 'Continuation parameter for heterojunction and doping');
model.param('par2').set('EgW0', '0.17[V]');
model.param('par2').descr('EgW0', 'Band gap, well');
model.param('par2').set('EgB', '0.78[V]');
model.param('par2').descr('EgB', 'Band gap, barrier');
model.param('par2').set('deltaEv', '0.21[V]');
model.param('par2').descr('deltaEv', 'Valence band offset');
model.param('par2').set('chiW0', '4.59[V]');
model.param('par2').descr('chiW0', 'Electron affinity, well');
model.param('par2').set('chiB', 'chiW0+EgW0+deltaEv-EgB');
model.param('par2').descr('chiB', 'Electron affinity, barrier');
model.param('par2').set('EgW', 'EgW0*cp+EgB*(1-cp)');
model.param('par2').descr('EgW', 'Band gap, well');
model.param('par2').set('chiW', 'chiW0*cp+chiB*(1-cp)');
model.param('par2').descr('chiW', 'Electron affinity, well');
model.param('par2').set('epsrW', '17.7');
model.param('par2').descr('epsrW', 'Dielectric constant, well');
model.param('par2').set('epsrB', '15.7');
model.param('par2').descr('epsrB', 'Dielectric constant, barrier');
model.param('par2').set('PhiB', '0.4[V]');
model.param('par2').descr('PhiB', 'Schottky barrier');
model.param('par2').set('Nv0', '7.3e18[cm^-3]');
model.param('par2').descr('Nv0', 'Effective valence band density of states');
model.param('par2').set('Nc0', '4.2e16[cm^-3]');
model.param('par2').descr('Nc0', 'Effective conduction band density of states');
model.param('par2').set('muLFW', '1230[cm^2/V/s]');
model.param('par2').descr('muLFW', 'LF hole mobility, well');
model.param('par2').set('muLFB', '50[cm^2/V/s]');
model.param('par2').descr('muLFB', 'LF hole mobility, barrier');
model.param('par2').set('vSat', '8e6[cm/s]');
model.param('par2').descr('vSat', 'Saturation velocity');
model.param('par2').set('muSS', '100[cm^2/V/s]');
model.param('par2').descr('muSS', 'SS hole mobility, all materials');
model.param('par2').set('ESS', '3e5[V/cm]');
model.param('par2').descr('ESS', 'SS electric field, all materials');
model.param('par2').set('mun0', '7.7e4[cm^2/V/s]');
model.param('par2').descr('mun0', 'Electron mobility');
model.param('par2').set('mpDGperp', '0.04*me_const');
model.param('par2').descr('mpDGperp', 'DG effective mass, perpendicular');
model.param('par2').set('mpDGpara', '0.053*me_const');
model.param('par2').descr('mpDGpara', 'DG effective mass, parallel');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('AroraMobilityModel', 'Arora mobility model');
model.material('mat1').propertyGroup.create('PowerLawMobilityModel', 'Power law mobility model');
model.material('mat1').propertyGroup.create('Auger', 'Auger recombination');
model.material('mat1').propertyGroup.create('Direct', 'Direct recombination');
model.material('mat1').propertyGroup.create('SRH', ['Shockley' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Read' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Hall recombination']);
model.material('mat1').propertyGroup.create('FletcherMobilityModel', 'Fletcher mobility model');
model.material('mat1').propertyGroup.create('CaugheyThomasMobilityModel', ['Caughey' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Thomas mobility model']);
model.material('mat1').propertyGroup.create('SemicondMaterial', 'Semiconductor material');
model.material('mat1').propertyGroup.create('LombardiSurfaceMobilityModel', 'Lombardi surface mobility model');
model.material('mat1').propertyGroup.create('ImpactIonization', 'Impact ionization');
model.material('mat1').propertyGroup.create('SlotboomModel', 'Slotboom model');
model.material('mat1').propertyGroup.create('JainRoulstonModel', ['Jain' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Roulston model']);
model.material('mat1').propertyGroup.create('KlaassenUnifiedMobilityModel', 'Klaassen unified mobility model');
model.material('mat1').label('Si - Silicon');
model.material('mat1').propertyGroup('def').set('relpermittivity', {'11.7' '0' '0' '0' '11.7' '0' '0' '0' '11.7'});
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'131[W/(m*K)]' '0' '0' '0' '131[W/(m*K)]' '0' '0' '0' '131[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('density', '2329[kg/m^3]');
model.material('mat1').propertyGroup('def').set('heatcapacity', '700[J/(kg*K)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mun0_ref_arora', '1252[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mup0_ref_arora', '407[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mun_min_ref_arora', '88[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mup_min_ref_arora', '54.3[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('Nn0_ref_arora', '1.26e17[1/cm^3]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('Np0_ref_arora', '2.35e17[1/cm^3]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('alpha0_arora', '0.88');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta1_arora', '-0.57');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta2_arora', '-2.33');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta3_arora', '-2.33');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta4_arora', '-0.146');
model.material('mat1').propertyGroup('AroraMobilityModel').set('Tref_arora', '300[K]');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('mun0_pl', '1448[cm^2/(V*s)]');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('mup0_pl', '473[cm^2/(V*s)]');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('alphan_pl', '2.33');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('alphap_pl', '2.23');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('Tref_pl', '300[K]');
model.material('mat1').propertyGroup('Auger').set('Cn', '2.8e-31[cm^6/s]');
model.material('mat1').propertyGroup('Auger').set('Cp', '9.9e-32[cm^6/s]');
model.material('mat1').propertyGroup('Direct').set('C', '0[cm^3/s]');
model.material('mat1').propertyGroup('SRH').set('taun', '10[us]');
model.material('mat1').propertyGroup('SRH').set('taup', '10[us]');
model.material('mat1').propertyGroup('FletcherMobilityModel').set('F1_fl', '1.04e21[1/(cm^1*V*s)]');
model.material('mat1').propertyGroup('FletcherMobilityModel').set('F2_fl', '7.45e13[1/cm^2]');
model.material('mat1').propertyGroup('FletcherMobilityModel').set('Tref_fl', '300[K]');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').label(['Caughey' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Thomas mobility model']);
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('alphan0_ct', '1.11');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('alphap0_ct', '1.21');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('vn0_ct', '1e7[cm/s]');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('vp0_ct', '8.37e6[cm/s]');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betan1_ct', '0.66');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betap1_ct', '0.17');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betan2_ct', '-0.87');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betap2_ct', '-0.52');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('Tref_ct', '300[K]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Eg0', '1.12[V]');
model.material('mat1').propertyGroup('SemicondMaterial').set('chi0', '4.05[V]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Nv', '(T/300[K])^(3/2)*1.04e19[1/cm^3]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Nc', '(T/300[K])^(3/2)*2.8e19[1/cm^3]');
model.material('mat1').propertyGroup('SemicondMaterial').set('mun', '1450[cm^2/(V*s)]');
model.material('mat1').propertyGroup('SemicondMaterial').set('mup', '500[cm^2/(V*s)]');
model.material('mat1').propertyGroup('SemicondMaterial').addInput('temperature');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('deltan_ls', '5.82e14[V/s]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('deltap_ls', '2.05e14[V/s]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mun1_ls', '4.75e7[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mup1_ls', '9.93e7[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mun2_ls', '1.74e5[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mup2_ls', '8.84e5[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('alphan_ls', '0.125');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('alphap_ls', '0.0317');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('Tref_ls', '1[K]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('Eref_ls', '1[V/cm]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('Nref_ls', '1[1/cm^3]');
model.material('mat1').propertyGroup('ImpactIonization').set('an', '0.426');
model.material('mat1').propertyGroup('ImpactIonization').set('ap', '0.243');
model.material('mat1').propertyGroup('ImpactIonization').set('bn', '4.81E5[V/cm]');
model.material('mat1').propertyGroup('ImpactIonization').set('bp', '6.53E5[V/cm]');
model.material('mat1').propertyGroup('ImpactIonization').set('cnii', '3.05E-4');
model.material('mat1').propertyGroup('ImpactIonization').set('cpii', '5.35E-4');
model.material('mat1').propertyGroup('ImpactIonization').set('dn', '6.86E-4');
model.material('mat1').propertyGroup('ImpactIonization').set('dp', '5.67E-4');
model.material('mat1').propertyGroup('SlotboomModel').set('Eref_sb', '0.00692[V]');
model.material('mat1').propertyGroup('SlotboomModel').set('Nref_sb', '1.3e17[1/cm^3]');
model.material('mat1').propertyGroup('SlotboomModel').set('alpha_sb', '0.5');
model.material('mat1').propertyGroup('JainRoulstonModel').set('An_jr', '3.5e-8[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Bn_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Cn_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Ap_jr', '3.5e-8[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Bp_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Cp_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Nref_jr', '1[1/cm^3]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('alpha_jr', '0.5');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('T_ref_kl', '300[K]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_e_max_kl', '1414.0[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_h_max_kl', '470.5[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_e_min_kl', '68.5[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_h_min_kl', '44.9[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('theta_e_kl', '2.285');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('theta_h_kl', '2.247');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('alpha_e_1_kl', '0.711');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('alpha_h_1_kl', '0.719');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_e_1_kl', '9.20e16[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_h_1_kl', '2.23e17[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('c_D_kl', '0.21');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('c_A_kl', '0.50');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_D_kl', '4.0e20[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_A_kl', '7.2e20[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('f_BH_kl', '3.828');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('f_CW_kl', '2.459');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_BH_kl', '1.36e20[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('P_CW_kl', '3.97e13');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_1_kl', '0.89233');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_2_kl', '0.41372');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_3_kl', '0.19778');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_4_kl', '0.28227');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_5_kl', '0.005978');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_6_kl', '1.80618');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_7_kl', '0.72169');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_1_kl', '0.7643');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_2_kl', '2.2999');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_3_kl', '6.5502');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_4_kl', '2.3670');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_5_kl', '-0.01552');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_6_kl', '0.6478');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('m_e_kl', 'me_const');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('m_h_kl', '1.258*me_const');

model.geom('geom1').run;

model.material('mat1').label('InSb Well');
model.material('mat1').selection.set([2]);

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');
model.selection('sel1').geom(2);
model.selection('sel1').label('Well domain');
model.selection('sel1').set([2]);

model.material('mat1').selection.named('sel1');
model.material('mat1').propertyGroup('def').set('relpermittivity', {'epsrW'});
model.material('mat1').propertyGroup('SemicondMaterial').set('Eg0', {'EgW'});
model.material('mat1').propertyGroup('SemicondMaterial').set('chi0', {'chiW'});
model.material('mat1').propertyGroup('SemicondMaterial').set('Nv', {'Nv0'});
model.material('mat1').propertyGroup('SemicondMaterial').set('Nc', {'Nc0'});
model.material('mat1').propertyGroup('SemicondMaterial').set('mun', {'mun0'});
model.material('mat1').propertyGroup('SemicondMaterial').set('mup', {'muLFW'});
model.material.duplicate('mat2', 'mat1');
model.material('mat2').label('AlInSb Barrier');
model.material('mat2').selection.set([1 3 4 6]);

model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').geom(2);
model.selection('sel2').label('Barrier domains');
model.selection('sel2').set([1 3 4 6]);

model.material('mat2').selection.named('sel2');
model.material('mat2').propertyGroup('def').set('relpermittivity', {'epsrB'});
model.material('mat2').propertyGroup('SemicondMaterial').set('Eg0', {'EgB'});
model.material('mat2').propertyGroup('SemicondMaterial').set('chi0', {'chiB'});
model.material('mat2').propertyGroup('SemicondMaterial').set('Nv', {'Nv0'});
model.material('mat2').propertyGroup('SemicondMaterial').set('Nc', {'Nc0'});
model.material('mat2').propertyGroup('SemicondMaterial').set('mun', {'mun0'});
model.material('mat2').propertyGroup('SemicondMaterial').set('mup', {'muLFB'});

model.physics('semi').selection.set([1 2 3 4 6]);

model.selection.create('sel3', 'Explicit');
model.selection('sel3').model('comp1');
model.selection('sel3').geom(2);
model.selection('sel3').label('Semiconductor domains');
model.selection('sel3').set([1 2 3 4 6]);

model.physics('semi').selection.named('sel3');
model.physics('semi').prop('d').set('d', 'd0');
model.physics('semi').prop('ModelProperties').set('CarrierStatistics', 'FermiDirac');
model.physics('semi').prop('ModelProperties').set('Compute', 'MajorityPsi');
model.physics('semi').prop('ModelProperties').set('MajorityCarriers', 'Holes');
model.physics('semi').prop('ShapeProperty').set('Formulation', 'FEM2DG');
model.physics('semi').feature('smm1').set('minput_temperature', '300[K]');
model.physics('semi').feature('smm1').set('mhDG', {'mpDGpara' '0' '0' '0' 'mpDGperp' '0' '0' '0' 'me_const'});
model.physics('semi').feature('smm1').set('mup_mat', 'userdef');
model.physics('semi').feature('smm1').set('mup', 'muptot');
model.physics('semi').feature('smm1').create('mmct1', 'CaugheyThomasMobilityModel', 2);

model.param.create('par3');
model.param('par3').label('Parameters 3: Physics');
model.param('par3').set('NaCap', '5e20[cm^-3]');
model.param('par3').descr('NaCap', 'p+ cap doping concentration');
model.param('par3').set('NaDelta', '1e19[cm^-3]');
model.param('par3').descr('NaDelta', 'Delta doping concentration');
model.param('par3').set('Vd', '0[V]');
model.param('par3').descr('Vd', 'Drain voltage');
model.param('par3').set('Vg', '0[V]');
model.param('par3').descr('Vg', 'Gate voltage');

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').label('Variables 1: Low field mobility, well');
model.variable('var1').selection.geom('geom1', 2);
model.variable('var1').selection.named('sel1');
model.variable('var1').set('mupLF', 'muLFW');
model.variable('var1').descr('mupLF', 'Low field mobility');
model.variable.duplicate('var2', 'var1');
model.variable('var2').label('Variables 2: Low field mobility, barrier');
model.variable('var2').selection.named('sel2');
model.variable('var2').set('mupLF', 'muLFB');
model.variable('var2').descr('mupLF', 'Low field mobility');
model.variable.create('var3');
model.variable('var3').model('comp1');
model.variable('var3').label('Variables 3: Mobility model');
model.variable('var3').set('mupFDinv', 'sqrt(1+(mupLF*semi.smm1.mmct1.Epp/vSat)^2)/mupLF');
model.variable('var3').descr('mupFDinv', 'Inverse of field dependent mobility');
model.variable('var3').set('mupSSinv', '(semi.EY/ESS)^4/muSS');
model.variable('var3').descr('mupSSinv', 'Inverse of surface scattering mobility');
model.variable('var3').set('muptot', '1/(mupFDinv+mupSSinv)');
model.variable('var3').descr('muptot', 'Total mobility');

model.physics('semi').create('adm1', 'AnalyticDopingModel', 2);
model.physics('semi').feature('adm1').label('Analytic Doping Model 1: p+ cap');
model.physics('semi').feature('adm1').selection.set([4 6]);
model.physics('semi').feature('adm1').set('NAc', 'NaCap*cp');
model.physics('semi').create('adm2', 'AnalyticDopingModel', 2);
model.physics('semi').feature('adm2').label('Analytic Doping Model 2: Delta doping');
model.physics('semi').feature('adm2').selection.set([3]);
model.physics('semi').feature('adm2').set('impurityDistribution', 'box');
model.physics('semi').feature('adm2').set('NAc', 'NaDelta*cp');
model.physics('semi').feature('adm2').set('rb', {'-Ltot/2' '-0.4*Htopbar' '0'});
model.physics('semi').feature('adm2').set('jwidth', 'Ltot');
model.physics('semi').feature('adm2').set('jdepth', '0.2*Htopbar');
model.physics('semi').feature('adm2').set('JunctionOrLength', 'decay_length');
model.physics('semi').feature('adm2').set('ls', '0.02*Htopbar');
model.physics('semi').create('mc1', 'MetalContact', 1);
model.physics('semi').feature('mc1').label('Metal Contact 1: Source');
model.physics('semi').feature('mc1').selection.set([9]);
model.physics('semi').create('mc2', 'MetalContact', 1);
model.physics('semi').feature('mc2').label('Metal Contact 2: Drain');
model.physics('semi').feature('mc2').selection.set([19]);
model.physics('semi').feature('mc2').set('V0', 'Vd');
model.physics('semi').create('mc3', 'MetalContact', 1);
model.physics('semi').feature('mc3').label('Metal Contact 3: Gate');
model.physics('semi').feature('mc3').selection.set([13]);
model.physics('semi').feature('mc3').set('V0', 'Vg');
model.physics('semi').feature('mc3').set('ContactType', 'Schottky');
model.physics('semi').feature('mc3').set('SpecifyBarrierHeight', 'userdef');
model.physics('semi').feature('mc3').set('Phi_B', 'PhiB');
model.physics('semi').feature('mc3').set('Astar_n', '0[A/(K*cm)^2]');
model.physics('semi').create('ins2', 'Insulation', 1);
model.physics('semi').feature('ins2').selection.set([11 16]);
model.physics('semi').feature('ins2').set('DGexteriorBC', 'barrier');
model.physics('semi').feature('ins2').set('Phi_pOx', '1000[V]');

model.mesh('mesh1').create('edg1', 'Edge');
model.mesh('mesh1').feature('edg1').selection.set([11 16]);
model.mesh('mesh1').feature('edg1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('edg1').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('edg1').feature('dis1').set('elemcount', 20);
model.mesh('mesh1').feature('edg1').feature('dis1').set('elemratio', 5);
model.mesh('mesh1').feature('edg1').feature('dis1').set('symmetric', true);
model.mesh('mesh1').feature.duplicate('edg2', 'edg1');
model.mesh('mesh1').feature('edg2').selection.set([13]);
model.mesh('mesh1').feature('edg2').feature('dis1').set('elemcount', 10);
model.mesh('mesh1').feature('edg2').feature('dis1').set('elemratio', 2.5);
model.mesh('mesh1').feature.duplicate('edg3', 'edg2');
model.mesh('mesh1').feature('edg3').selection.set([8]);
model.mesh('mesh1').feature('edg3').feature('dis1').set('elemcount', 12);
model.mesh('mesh1').feature('edg3').feature('dis1').set('elemratio', 6);
model.mesh('mesh1').feature('edg3').feature('dis1').set('symmetric', false);
model.mesh('mesh1').feature.duplicate('edg4', 'edg3');
model.mesh('mesh1').feature('edg4').selection.set([18]);
model.mesh('mesh1').create('cpe1', 'CopyEdge');
model.mesh('mesh1').feature('cpe1').selection('source').geom(1);
model.mesh('mesh1').feature('cpe1').selection('destination').geom(1);
model.mesh('mesh1').feature('cpe1').selection('source').set([8 11 13 16 18]);
model.mesh('mesh1').feature('cpe1').selection('destination').set([2 4 6]);
model.mesh('mesh1').create('cpe2', 'CopyEdge');
model.mesh('mesh1').feature('cpe2').selection('source').geom(1);
model.mesh('mesh1').feature('cpe2').selection('destination').geom(1);
model.mesh('mesh1').feature('cpe2').selection('source').set([8 18]);
model.mesh('mesh1').feature('cpe2').selection('destination').set([9 19]);
model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('map1').selection.named('sel3');
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([5 22]);
model.mesh('mesh1').feature('map1').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis1').set('elemcount', 20);
model.mesh('mesh1').feature('map1').feature('dis1').set('elemratio', 5);
model.mesh('mesh1').feature('map1').feature('dis1').set('symmetric', true);
model.mesh('mesh1').feature('map1').feature.duplicate('dis2', 'dis1');
model.mesh('mesh1').feature('map1').feature('dis2').selection.set([3 21]);
model.mesh('mesh1').feature('map1').feature('dis2').set('elemcount', 10);
model.mesh('mesh1').feature('map1').feature.duplicate('dis3', 'dis2');
model.mesh('mesh1').feature('map1').feature('dis3').selection.set([7 10 17 23]);
model.mesh('mesh1').feature('map1').feature('dis3').set('elemratio', 10);
model.mesh('mesh1').feature('map1').feature('dis3').set('symmetric', false);
model.mesh('mesh1').feature('map1').feature.duplicate('dis4', 'dis3');
model.mesh('mesh1').feature('map1').feature('dis4').selection.set([1 20]);
model.mesh('mesh1').feature('map1').feature('dis4').set('elemcount', 25);
model.mesh('mesh1').feature('map1').feature('dis4').set('elemratio', 50);
model.mesh('mesh1').feature('map1').feature('dis4').set('reverse', true);
model.mesh('mesh1').run;

model.study('std1').label('Study 1: Ramp doping and band offset');
model.study('std1').setGenPlots(false);
model.study('std1').feature('semie').set('useadvanceddisable', true);
model.study('std1').feature('semie').set('disabledphysics', {'semi/smm1/mmct1'});
model.study('std1').feature('semie').set('useparam', true);
model.study('std1').feature('semie').setIndex('pname', 'chiB', 0);
model.study('std1').feature('semie').setIndex('plistarr', '', 0);
model.study('std1').feature('semie').setIndex('punit', 'V', 0);
model.study('std1').feature('semie').setIndex('pname', 'chiB', 0);
model.study('std1').feature('semie').setIndex('plistarr', '', 0);
model.study('std1').feature('semie').setIndex('punit', 'V', 0);
model.study('std1').feature('semie').setIndex('pname', 'cp', 0);
model.study('std1').feature('semie').setIndex('plistarr', '10^range(-12,4,0)', 0);
model.study('std1').feature('semie').setIndex('punit', '', 0);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'semie');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_V').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_phi_p').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_Efp_').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_V').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_phi_p').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_Efp_').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_V').set('scaleval', '1');
model.sol('sol1').feature('v1').feature('comp1_phi_p').set('scaleval', '1');
model.sol('sol1').feature('v1').feature('comp1_Efp_').set('scaleval', '1');
model.sol('sol1').feature('v1').set('control', 'semie');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 1.0E-6);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol1').feature('s1').feature('p1').set('control', 'semie');
model.sol('sol1').feature('s1').set('control', 'semie');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', false);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').feature('aDef').set('assemtol', 0);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol1').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol1').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol1').feature('s1').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol1').feature('s1').feature('d1').set('ooc', 'auto');
model.sol('sol1').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol1').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol1').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/semi', true);
model.study('std2').feature('stat').set('useinitsol', true);
model.study('std2').feature('stat').set('initmethod', 'sol');
model.study('std2').feature('stat').set('initstudy', 'std1');
model.study('std2').feature('stat').set('solnum', 'last');
model.study('std2').feature('stat').set('useparam', true);
model.study('std2').feature('stat').setIndex('pname', 'chiB', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 'V', 0);
model.study('std2').feature('stat').setIndex('pname', 'chiB', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 'V', 0);
model.study('std2').feature('stat').setIndex('pname', 'Vd', 0);
model.study('std2').feature('stat').setIndex('plistarr', '0 -0.1 -0.3 -0.5', 0);
model.study('std2').feature('stat').setIndex('punit', 'V', 0);
model.study('std2').feature('stat').setIndex('pname', 'chiB', 1);
model.study('std2').feature('stat').setIndex('plistarr', '', 1);
model.study('std2').feature('stat').setIndex('punit', 'V', 1);
model.study('std2').feature('stat').setIndex('pname', 'chiB', 1);
model.study('std2').feature('stat').setIndex('plistarr', '', 1);
model.study('std2').feature('stat').setIndex('punit', 'V', 1);
model.study('std2').feature('stat').setIndex('pname', 'Vg', 1);
model.study('std2').feature('stat').setIndex('plistarr', '0 -0.1 -0.4 -0.6', 1);
model.study('std2').feature('stat').setIndex('punit', 'V', 1);
model.study('std2').feature('stat').set('preusesol', 'yes');
model.study('std2').label('Study 2: Ramp Vd and Vg (only as init cond for next study)');
model.study('std2').setGenPlots(false);

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_V').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_phi_p').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_Efp_').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_V').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_phi_p').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_Efp_').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_V').set('scaleval', '1');
model.sol('sol2').feature('v1').feature('comp1_phi_p').set('scaleval', '1');
model.sol('sol2').feature('v1').feature('comp1_Efp_').set('scaleval', '1');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').set('stol', 1.0E-4);
model.sol('sol2').feature('s1').create('p1', 'Parametric');
model.sol('sol2').feature('s1').feature.remove('pDef');
model.sol('sol2').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol2').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol2').feature('s1').set('control', 'stat');
model.sol('sol2').feature('s1').feature('aDef').set('complexfun', false);
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol2').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol2').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol2').feature('s1').feature('aDef').set('assemtol', 0);
model.sol('sol2').feature('s1').create('se1', 'Segregated');
model.sol('sol2').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol2').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_V' 'comp1_Efp_' 'comp1_phi_p'});
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('usesubminsteprecovery', 'auto');
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('subtermauto', 'tol');
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('subdtech', 'auto');
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('subrstep', 10);
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('subntolfact', 1);
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('subinitstep', 1);
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('subminstep', 1.0E-4);
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('segvarspec', 'all');
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('subminsteprecovery', 0.75);
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('maxsubiter', 50);
model.sol('sol2').feature('s1').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol2').feature('s1').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol2').feature('s1').feature('d1').set('ooc', 'off');
model.sol('sol2').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol2').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol2').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_semi_smm1_mmct1_Epn' 'comp1_semi_smm1_mmct1_Epp'});
model.sol('sol2').feature('s1').feature('se1').feature('ss2').set('subtermconst', 'iter');
model.sol('sol2').feature('s1').feature('se1').feature('ss2').set('subdamp', 1);
model.sol('sol2').feature('s1').feature('se1').feature('ss2').set('subjtech', 'onevery');
model.sol('sol2').feature('s1').feature('se1').feature('ss2').set('subdtech', 'const');
model.sol('sol2').feature('s1').feature('se1').feature('ss2').set('subiter', 1);
model.sol('sol2').feature('s1').feature('se1').feature('ss2').set('segvarspec', 'all');
model.sol('sol2').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd1');
model.sol('sol2').feature('s1').feature('se1').set('segterm', 'iter');
model.sol('sol2').feature('s1').feature('se1').set('segiter', 3);
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.study.create('std3');
model.study('std3').create('stat', 'Stationary');
model.study('std3').feature('stat').setSolveFor('/physics/semi', true);
model.study('std3').feature('stat').set('useinitsol', true);
model.study('std3').feature('stat').set('initmethod', 'sol');
model.study('std3').feature('stat').set('initstudy', 'std2');
model.study('std3').feature('stat').set('solnum', 'last');
model.study('std3').feature('stat').set('useparam', true);
model.study('std3').feature('stat').set('sweeptype', 'filled');
model.study('std3').feature('stat').setIndex('pname', 'chiB', 0);
model.study('std3').feature('stat').setIndex('plistarr', '', 0);
model.study('std3').feature('stat').setIndex('punit', 'V', 0);
model.study('std3').feature('stat').setIndex('pname', 'chiB', 0);
model.study('std3').feature('stat').setIndex('plistarr', '', 0);
model.study('std3').feature('stat').setIndex('punit', 'V', 0);
model.study('std3').feature('stat').setIndex('pname', 'Vd', 0);
model.study('std3').feature('stat').setIndex('plistarr', -0.5, 0);
model.study('std3').feature('stat').setIndex('punit', 'V', 0);
model.study('std3').feature('stat').setIndex('pname', 'chiB', 1);
model.study('std3').feature('stat').setIndex('plistarr', '', 1);
model.study('std3').feature('stat').setIndex('punit', 'V', 1);
model.study('std3').feature('stat').setIndex('pname', 'chiB', 1);
model.study('std3').feature('stat').setIndex('plistarr', '', 1);
model.study('std3').feature('stat').setIndex('punit', 'V', 1);
model.study('std3').feature('stat').setIndex('pname', 'Vg', 1);
model.study('std3').feature('stat').setIndex('plistarr', 'range(-0.6,0.1,0.6)', 1);
model.study('std3').feature('stat').setIndex('punit', 'V', 1);
model.study('std3').label('Study 3: Vg sweep for Id-Vg curve');

model.sol.create('sol3');
model.sol('sol3').study('std3');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std3');
model.sol('sol3').feature('st1').set('studystep', 'stat');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').feature('comp1_V').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_phi_p').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_Efp_').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_V').set('resscalemethod', 'parent');
model.sol('sol3').feature('v1').feature('comp1_phi_p').set('resscalemethod', 'parent');
model.sol('sol3').feature('v1').feature('comp1_Efp_').set('resscalemethod', 'parent');
model.sol('sol3').feature('v1').feature('comp1_V').set('scaleval', '1');
model.sol('sol3').feature('v1').feature('comp1_phi_p').set('scaleval', '1');
model.sol('sol3').feature('v1').feature('comp1_Efp_').set('scaleval', '1');
model.sol('sol3').feature('v1').set('control', 'stat');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').set('stol', 1.0E-4);
model.sol('sol3').feature('s1').create('p1', 'Parametric');
model.sol('sol3').feature('s1').feature.remove('pDef');
model.sol('sol3').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol3').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol3').feature('s1').set('control', 'stat');
model.sol('sol3').feature('s1').feature('aDef').set('complexfun', false);
model.sol('sol3').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol3').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol3').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol3').feature('s1').feature('aDef').set('assemtol', 0);
model.sol('sol3').feature('s1').create('se1', 'Segregated');
model.sol('sol3').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol3').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_V' 'comp1_Efp_' 'comp1_phi_p'});
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('usesubminsteprecovery', 'auto');
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('subtermauto', 'tol');
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('subdtech', 'auto');
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('subrstep', 10);
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('subntolfact', 1);
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('subinitstep', 1);
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('subminstep', 1.0E-4);
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('segvarspec', 'all');
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('subminsteprecovery', 0.75);
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('maxsubiter', 50);
model.sol('sol3').feature('s1').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol3').feature('s1').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol3').feature('s1').feature('d1').set('ooc', 'off');
model.sol('sol3').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol3').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol3').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_semi_smm1_mmct1_Epn' 'comp1_semi_smm1_mmct1_Epp'});
model.sol('sol3').feature('s1').feature('se1').feature('ss2').set('subtermconst', 'iter');
model.sol('sol3').feature('s1').feature('se1').feature('ss2').set('subdamp', 1);
model.sol('sol3').feature('s1').feature('se1').feature('ss2').set('subjtech', 'onevery');
model.sol('sol3').feature('s1').feature('se1').feature('ss2').set('subdtech', 'const');
model.sol('sol3').feature('s1').feature('se1').feature('ss2').set('subiter', 1);
model.sol('sol3').feature('s1').feature('se1').feature('ss2').set('segvarspec', 'all');
model.sol('sol3').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd1');
model.sol('sol3').feature('s1').feature('se1').set('segterm', 'iter');
model.sol('sol3').feature('s1').feature('se1').set('segiter', 3);
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol('sol3').attach('std3');
model.sol('sol3').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').label('Electron Concentration (semi)');
model.result('pg1').set('data', 'dset3');
model.result('pg1').setIndex('looplevel', 13, 0);
model.result('pg1').setIndex('looplevel', 1, 1);
model.result('pg1').set('showlegendsmaxmin', true);
model.result('pg1').set('data', 'dset3');
model.result('pg1').setIndex('looplevel', 13, 0);
model.result('pg1').setIndex('looplevel', 1, 1);
model.result('pg1').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond2/pg1');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('expr', 'semi.N');
model.result('pg1').feature('surf1').set('unit', '1/cm^3');
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').feature('surf1').set('colorscalemode', 'logarithmic');
model.result('pg1').feature('surf1').set('resolution', 'norefine');
model.result('pg1').feature('surf1').set('smooth', 'internal');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').label('Hole Concentration (semi)');
model.result('pg2').set('data', 'dset3');
model.result('pg2').setIndex('looplevel', 13, 0);
model.result('pg2').setIndex('looplevel', 1, 1);
model.result('pg2').set('showlegendsmaxmin', true);
model.result('pg2').set('data', 'dset3');
model.result('pg2').setIndex('looplevel', 13, 0);
model.result('pg2').setIndex('looplevel', 1, 1);
model.result('pg2').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond2/pg2');
model.result('pg2').feature.create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('expr', 'semi.P');
model.result('pg2').feature('surf1').set('unit', '1/cm^3');
model.result('pg2').feature('surf1').set('colortable', 'Prism');
model.result('pg2').feature('surf1').set('colorscalemode', 'logarithmic');
model.result('pg2').feature('surf1').set('resolution', 'norefine');
model.result('pg2').feature('surf1').set('smooth', 'internal');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('data', 'parent');
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').label('Electric Potential (semi)');
model.result('pg3').set('data', 'dset3');
model.result('pg3').setIndex('looplevel', 13, 0);
model.result('pg3').setIndex('looplevel', 1, 1);
model.result('pg3').set('data', 'dset3');
model.result('pg3').setIndex('looplevel', 13, 0);
model.result('pg3').setIndex('looplevel', 1, 1);
model.result('pg3').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond2/pg3');
model.result('pg3').feature.create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('expr', 'V');
model.result('pg3').feature('surf1').set('resolution', 'norefine');
model.result('pg3').feature('surf1').set('smooth', 'internal');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('data', 'parent');
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').label('Quantum Potential, Electron (semi)');
model.result('pg4').set('data', 'dset3');
model.result('pg4').setIndex('looplevel', 13, 0);
model.result('pg4').setIndex('looplevel', 1, 1);
model.result('pg4').set('data', 'dset3');
model.result('pg4').setIndex('looplevel', 13, 0);
model.result('pg4').setIndex('looplevel', 1, 1);
model.result('pg4').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond2/pcond1/pg1');
model.result('pg4').feature.create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('showsolutionparams', 'on');
model.result('pg4').feature('surf1').set('expr', 'semi.VnDG');
model.result('pg4').feature('surf1').set('smooth', 'internal');
model.result('pg4').feature('surf1').set('showsolutionparams', 'on');
model.result('pg4').feature('surf1').set('data', 'parent');
model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').label('Quantum Potential, Hole (semi)');
model.result('pg5').set('data', 'dset3');
model.result('pg5').setIndex('looplevel', 13, 0);
model.result('pg5').setIndex('looplevel', 1, 1);
model.result('pg5').set('data', 'dset3');
model.result('pg5').setIndex('looplevel', 13, 0);
model.result('pg5').setIndex('looplevel', 1, 1);
model.result('pg5').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond2/pcond1/pg2');
model.result('pg5').feature.create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('showsolutionparams', 'on');
model.result('pg5').feature('surf1').set('expr', 'semi.VpDG');
model.result('pg5').feature('surf1').set('smooth', 'internal');
model.result('pg5').feature('surf1').set('showsolutionparams', 'on');
model.result('pg5').feature('surf1').set('data', 'parent');
model.result.create('pg6', 'PlotGroup2D');
model.result('pg6').set('data', 'dset3');
model.result('pg6').create('surf2', 'Surface');
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf2').set('expr', 'semi.Nnetdop');
model.result('pg6').feature('surf2').set('unit', '1/cm^3');
model.result('pg6').feature('surf2').set('coloring', 'gradient');
model.result('pg6').feature('surf2').set('colorscalemode', 'logarithmic');
model.result('pg6').feature('surf2').set('topcolor', 'red');
model.result('pg6').feature('surf2').set('bottomcolor', 'custom');
model.result('pg6').feature('surf2').set('custombottomcolor', [1 0.8 0.8]);
model.result('pg6').feature('surf2').set('smooth', 'internal');
model.result('pg6').feature('surf2').set('showsolutionparams', 'on');
model.result('pg6').feature('surf2').set('data', 'parent');
model.result('pg6').feature('surf2').set('titletype', 'none');
model.result('pg6').feature('surf2').feature.create('filt1', 'Filter');
model.result('pg6').feature('surf2').feature('filt1').set('expr', 'semi.Na-semi.Nd > 1[1/cm^3]');
model.result('pg6').feature('surf2').feature('filt1').set('useder', true);
model.result('pg6').feature('surf1').set('expr', 'semi.Nnetdop');
model.result('pg6').feature('surf1').set('unit', '1/cm^3');
model.result('pg6').feature('surf1').set('coloring', 'gradient');
model.result('pg6').feature('surf1').set('colorscalemode', 'logarithmic');
model.result('pg6').feature('surf1').set('topcolor', 'blue');
model.result('pg6').feature('surf1').set('bottomcolor', 'custom');
model.result('pg6').feature('surf1').set('custombottomcolor', [0.8 0.8 1]);
model.result('pg6').feature('surf1').set('smooth', 'internal');
model.result('pg6').feature('surf1').set('showsolutionparams', 'on');
model.result('pg6').feature('surf1').set('data', 'parent');
model.result('pg6').feature('surf1').set('titletype', 'none');
model.result('pg6').feature('surf1').feature.create('filt1', 'Filter');
model.result('pg6').feature('surf1').feature('filt1').set('expr', 'semi.Nd-semi.Na > 1[1/cm^3]');
model.result('pg6').feature('surf1').feature('filt1').set('useder', true);
model.result('pg6').set('titletype', 'manual');
model.result('pg6').set('title', 'Net Dopant Concentration \vert N<sub>d</sub> - N<sub>a</sub>\vert: P-type (Red), N-type (Blue)');
model.result('pg6').set('showlegendsmaxmin', true);
model.result('pg6').set('showlegendsunit', true);
model.result('pg6').set('legendpos', 'alternating');
model.result('pg6').feature('surf2').label('P-type');
model.result('pg6').feature('surf1').label('N-type');
model.result('pg6').label('Net Dopant Concentration (semi)');
model.result('pg1').run;
model.result('pg6').run;
model.result('pg6').run;
model.result('pg6').feature.remove('surf1');
model.result('pg6').run;
model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').run;
model.result('pg7').label('Id-Vg');
model.result('pg7').set('data', 'dset3');
model.result('pg7').set('axislimits', true);
model.result('pg7').set('xmin', -0.7);
model.result('pg7').set('xmax', 0.6);
model.result('pg7').set('ymin', 0.1);
model.result('pg7').set('ymax', 500);
model.result('pg7').set('ylog', true);
model.result('pg7').create('glob1', 'Global');
model.result('pg7').feature('glob1').set('markerpos', 'datapoints');
model.result('pg7').feature('glob1').set('linewidth', 'preference');
model.result('pg7').feature('glob1').setIndex('expr', '-semi.I0_2/d0', 0);
model.result('pg7').feature('glob1').setIndex('unit', 'mA/mm', 0);
model.result('pg7').feature('glob1').setIndex('descr', 'Current', 0);
model.result('pg7').run;
model.result('pg2').run;
model.result('pg2').setIndex('looplevel', 10, 0);
model.result('pg2').run;
model.result('pg2').feature('surf1').set('rangecoloractive', true);
model.result('pg2').feature('surf1').set('rangecolormin', '10^10');
model.result('pg2').feature('surf1').set('rangecolormax', '10^21');
model.result.dataset.create('grid1', 'Grid1D');
model.result.dataset('grid1').set('source', 'data');
model.result.dataset('grid1').label('Grid 1D 1: Only for adding lines in 2D plot');
model.result.dataset('grid1').set('par1', 's');
model.result.dataset('grid1').set('parmax1', '1e9');
model.result('pg2').run;
model.result('pg2').create('line1', 'Line');
model.result('pg2').feature('line1').set('data', 'grid1');
model.result('pg2').feature('line1').set('expr', '1');
model.result('pg2').feature('line1').set('coloring', 'uniform');
model.result('pg2').feature('line1').set('color', 'black');
model.result('pg2').feature('line1').create('def1', 'Deform');
model.result('pg2').run;
model.result('pg2').feature('line1').feature('def1').set('expr', {'-root.s-Lgate/2' ''});
model.result('pg2').feature('line1').feature('def1').setIndex('expr', 'root.s*Hcap', 1);
model.result('pg2').feature('line1').feature('def1').set('scaleactive', true);
model.result('pg2').feature('line1').feature('def1').set('scale', 1);
model.result('pg2').run;
model.result('pg2').feature.duplicate('line2', 'line1');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('line2').feature('def1').setIndex('expr', '-root.s+Lgate/2', 0);
model.result('pg2').run;
model.result('pg2').feature.duplicate('line3', 'line2');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('line3').feature('def1').setIndex('expr', '-root.s-Lgate/2+root.s*Lgate', 0);
model.result('pg2').feature('line3').feature('def1').setIndex('expr', 'Hcap', 1);
model.result('pg2').run;
model.result.dataset.create('cln1', 'CutLine2D');
model.result.dataset('cln1').set('data', 'dset3');
model.result.dataset('cln1').setIndex('genpoints', '-100[nm]', 0, 0);
model.result.dataset('cln1').setIndex('genpoints', '-100[nm]', 1, 0);
model.result.dataset('cln1').setIndex('genpoints', '-30[nm]', 1, 1);
model.result.create('pg8', 'PlotGroup1D');
model.result('pg8').run;
model.result('pg8').label('Hole Concentration Line Cut');
model.result('pg8').set('data', 'cln1');
model.result('pg8').setIndex('looplevelinput', 'manual', 0);
model.result('pg8').setIndex('looplevel', [10], 0);
model.result('pg8').set('titletype', 'manual');
model.result('pg8').set('title', 'Hole concentration:density-gradient(DG) vs. drift-diffusion(DD), Valence band edge(Ev), Hole quasi-Fermi level(Efp)');
model.result('pg8').set('twoyaxes', true);
model.result('pg8').set('yseclabelactive', true);
model.result('pg8').set('yseclabel', 'Energy levels (eV)');
model.result('pg8').set('legendpos', 'middleleft');
model.result('pg8').create('lngr1', 'LineGraph');
model.result('pg8').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg8').feature('lngr1').set('linewidth', 'preference');
model.result('pg8').feature('lngr1').set('expr', 'semi.P');
model.result('pg8').feature('lngr1').set('unit', '1/cm^3');
model.result('pg8').feature('lngr1').set('xdata', 'expr');
model.result('pg8').feature('lngr1').set('xdataexpr', 'y');
model.result('pg8').feature('lngr1').set('legend', true);
model.result('pg8').feature('lngr1').set('legendmethod', 'manual');
model.result('pg8').feature('lngr1').setIndex('legends', 'P (DG)', 0);
model.result('pg8').feature.duplicate('lngr2', 'lngr1');
model.result('pg8').run;
model.result('pg8').feature('lngr2').set('expr', 'semi.Nv*semi.FD_half((semi.Ev-semi.Efp)/semi.Vth)');
model.result('pg8').feature('lngr2').set('descractive', true);
model.result('pg8').feature('lngr2').set('descr', 'Hole concentration');
model.result('pg8').feature('lngr2').set('linestyle', 'dotted');
model.result('pg8').feature('lngr2').set('linecolor', 'red');
model.result('pg8').feature('lngr2').setIndex('legends', 'P (DD)', 0);
model.result('pg8').feature.duplicate('lngr3', 'lngr2');
model.result('pg8').run;
model.result('pg8').feature('lngr3').set('plotonsecyaxis', true);
model.result('pg8').feature('lngr3').set('expr', 'semi.Ev');
model.result('pg8').feature('lngr3').setIndex('legends', 'Ev', 0);
model.result('pg8').feature('lngr3').set('descractive', false);
model.result('pg8').feature('lngr3').set('linestyle', 'solid');
model.result('pg8').feature('lngr3').set('linecolor', 'cycle');
model.result('pg8').feature.duplicate('lngr4', 'lngr3');
model.result('pg8').run;
model.result('pg8').feature('lngr4').set('expr', 'semi.Efp');
model.result('pg8').feature('lngr4').set('linestyle', 'dashed');
model.result('pg8').feature('lngr4').set('linecolor', 'black');
model.result('pg8').feature('lngr4').setIndex('legends', 'Efp', 0);
model.result('pg8').set('ylog', true);
model.result('pg8').run;

model.title('Density-Gradient Analysis of an InSb p-Channel FET');

model.description('This tutorial analyzes the DC characteristics of an InSb p-Channel FET, using the density-gradient theory to add the effect of quantum confinement to the conventional drift-diffusion formulation, without a large increase of computational resources. The confinement effect is applied both in the quantum well channel and on the top insulator interface, which is close to the channel. The use of an anisotropic density-gradient effective mass matrix is demonstrated, so is the technique to configure a general field-dependent mobility model. The hole density profile and the Id-Vg curve obtained from the 2D model compare well with the published figures in the reference paper.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;

model.label('insb_pfet_density_gradient.mph');

model.modelNode.label('Components');

out = model;
