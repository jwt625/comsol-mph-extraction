function out = model
%
% pin_radiation_effects.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Semiconductor_Module/Photonic_Devices_and_Sensors');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 1);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('semi', 'Semiconductor', 'geom1');
model.physics('semi').model('comp1');
model.physics.create('ev', 'Events', 'geom1');
model.physics('ev').model('comp1');

model.study.create('std1');
model.study('std1').create('semie', 'SemiconductorEquilibrium');
model.study('std1').feature('semie').set('solnum', 'auto');
model.study('std1').feature('semie').set('notsolnum', 'auto');
model.study('std1').feature('semie').set('outputmap', {});
model.study('std1').feature('semie').set('ngenAUX', '1');
model.study('std1').feature('semie').set('goalngenAUX', '1');
model.study('std1').feature('semie').set('ngenAUX', '1');
model.study('std1').feature('semie').set('goalngenAUX', '1');
model.study('std1').feature('semie').setSolveFor('/physics/semi', true);
model.study('std1').feature('semie').setSolveFor('/physics/ev', true);

model.geom('geom1').lengthUnit([native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']);

model.param.set('L', '300[um]');
model.param.descr('L', 'Device length');
model.param.set('V0', '1000[V]');
model.param.descr('V0', 'Applied voltage');
model.param.set('Nds', '1e20[cm^-3]');
model.param.descr('Nds', 'Surface concentration of N-plus and P-plus doping');
model.param.set('dj', '25[um]');
model.param.descr('dj', 'Junction depth of N-plus and P-plus doping');
model.param.set('Npi', '2e12[cm^-3]');
model.param.descr('Npi', 'Intrinsic doping concentration');
model.param.set('tau', '100[us]');
model.param.descr('tau', 'Carrier lifetime');
model.param.set('mup0', '480[cm^2/V/s]');
model.param.descr('mup0', 'Low field, low doping, hole mobility');
model.param.set('mun0', '1350[cm^2/V/s]');
model.param.descr('mun0', 'Low field, low doping, electron mobility');
model.param.set('cp', '1');
model.param.descr('cp', 'Continuation parameter for mobility model');
model.param.set('RadSi', '0');
model.param.descr('RadSi', 'Radiation dose rate in Rad(Si)/s');
model.param.set('t', '0[s]');
model.param.descr('t', 'Time parameter');
model.param.set('tp', '0.5[ns]');
model.param.descr('tp', 'Radiation pulse duration');
model.param.set('gR', '4.03e13*RadSi[1/cm^3/s]*pw1(t/tp)');
model.param.descr('gR', 'Generation rate due to radiation dose');
model.param.set('index', '1');
model.param.descr('index', 'Parameter for solution indexing');
model.param.set('area', '1[mm^2]');
model.param.descr('area', 'Cross-section area of the 1D model');

model.func.create('pw1', 'Piecewise');
model.func('pw1').setIndex('pieces', 0, 0, 0);
model.func('pw1').setIndex('pieces', 1, 0, 1);
model.func('pw1').setIndex('pieces', 'x', 0, 2);
model.func('pw1').setIndex('pieces', 1, 1, 0);
model.func('pw1').setIndex('pieces', 2, 1, 1);
model.func('pw1').setIndex('pieces', 0, 1, 2);
model.func('pw1').set('argunit', '1');
model.func('pw1').set('fununit', '1');

model.geom('geom1').create('i1', 'Interval');
model.geom('geom1').feature('i1').setIndex('coord', 'L', 1);

model.variable.create('var1');
model.variable('var1').model('comp1');

model.geom('geom1').run;

model.variable('var1').set('E', 'semi.normE/1[V/cm]');
model.variable('var1').descr('E', 'Electric field intensity in V/cm');
model.variable('var1').set('alphap', '1.8e7[cm^-1]*exp(-3.2e6/E)');
model.variable('var1').descr('alphap', 'Ionization coefficient, holes');
model.variable('var1').set('alphan', '2.4e7[cm^-1]*exp(-1.6e6/E)');
model.variable('var1').descr('alphan', 'Ionization coefficient, electrons');
model.variable('var1').set('NDt', '(semi.Ndplus+semi.Naminus)/1[cm^-3]');
model.variable('var1').descr('NDt', 'Total ionized dopant concentration in 1/cm^3');
model.variable('var1').set('mun', 'mun0/(1+81*NDt/(NDt+3.24e18))^0.5/(1+cp*(E/8e3)^4.9*(E+1.64e5)/(E+1))^(1/4.9)');
model.variable('var1').descr('mun', 'Electron mobility');
model.variable('var1').set('mup', 'mup0/(1+350*NDt/(NDt+1.05e19))^0.5/(1+cp*(E/8.72e4)^1.15*(E+8.51e5)/(E+8.12e4))^(1/1.15)');
model.variable('var1').descr('mup', 'Hole mobility');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('AroraMobilityModel', 'Arora mobility model');
model.material('mat1').propertyGroup.create('PowerLawMobilityModel', 'Power law mobility model');
model.material('mat1').propertyGroup.create('Auger', 'Auger recombination');
model.material('mat1').propertyGroup.create('Direct', 'Direct recombination');
model.material('mat1').propertyGroup.create('SRH', ['Shockley' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Read' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Hall recombination']);
model.material('mat1').propertyGroup.create('FletcherMobilityModel', 'Fletcher mobility model');
model.material('mat1').propertyGroup.create('CaugheyThomasMobilityModel', ['Caughey' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Thomas mobility model']);
model.material('mat1').propertyGroup.create('SemicondMaterial', 'Semiconductor material');
model.material('mat1').propertyGroup.create('LombardiSurfaceMobilityModel', 'Lombardi surface mobility model');
model.material('mat1').propertyGroup.create('ImpactIonization', 'Impact ionization');
model.material('mat1').propertyGroup.create('SlotboomModel', 'Slotboom model');
model.material('mat1').propertyGroup.create('JainRoulstonModel', ['Jain' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Roulston model']);
model.material('mat1').propertyGroup.create('KlaassenUnifiedMobilityModel', 'Klaassen unified mobility model');
model.material('mat1').label('Si - Silicon');
model.material('mat1').propertyGroup('def').set('relpermittivity', {'11.7' '0' '0' '0' '11.7' '0' '0' '0' '11.7'});
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'131[W/(m*K)]' '0' '0' '0' '131[W/(m*K)]' '0' '0' '0' '131[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('density', '2329[kg/m^3]');
model.material('mat1').propertyGroup('def').set('heatcapacity', '700[J/(kg*K)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mun0_ref_arora', '1252[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mup0_ref_arora', '407[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mun_min_ref_arora', '88[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mup_min_ref_arora', '54.3[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('Nn0_ref_arora', '1.26e17[1/cm^3]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('Np0_ref_arora', '2.35e17[1/cm^3]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('alpha0_arora', '0.88');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta1_arora', '-0.57');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta2_arora', '-2.33');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta3_arora', '-2.33');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta4_arora', '-0.146');
model.material('mat1').propertyGroup('AroraMobilityModel').set('Tref_arora', '300[K]');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('mun0_pl', '1448[cm^2/(V*s)]');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('mup0_pl', '473[cm^2/(V*s)]');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('alphan_pl', '2.33');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('alphap_pl', '2.23');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('Tref_pl', '300[K]');
model.material('mat1').propertyGroup('Auger').set('Cn', '2.8e-31[cm^6/s]');
model.material('mat1').propertyGroup('Auger').set('Cp', '9.9e-32[cm^6/s]');
model.material('mat1').propertyGroup('Direct').set('C', '0[cm^3/s]');
model.material('mat1').propertyGroup('SRH').set('taun', '10[us]');
model.material('mat1').propertyGroup('SRH').set('taup', '10[us]');
model.material('mat1').propertyGroup('FletcherMobilityModel').set('F1_fl', '1.04e21[1/(cm^1*V*s)]');
model.material('mat1').propertyGroup('FletcherMobilityModel').set('F2_fl', '7.45e13[1/cm^2]');
model.material('mat1').propertyGroup('FletcherMobilityModel').set('Tref_fl', '300[K]');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').label(['Caughey' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Thomas mobility model']);
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('alphan0_ct', '1.11');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('alphap0_ct', '1.21');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('vn0_ct', '1e7[cm/s]');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('vp0_ct', '8.37e6[cm/s]');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betan1_ct', '0.66');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betap1_ct', '0.17');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betan2_ct', '-0.87');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betap2_ct', '-0.52');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('Tref_ct', '300[K]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Eg0', '1.12[V]');
model.material('mat1').propertyGroup('SemicondMaterial').set('chi0', '4.05[V]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Nv', '(T/300[K])^(3/2)*1.04e19[1/cm^3]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Nc', '(T/300[K])^(3/2)*2.8e19[1/cm^3]');
model.material('mat1').propertyGroup('SemicondMaterial').set('mun', '1450[cm^2/(V*s)]');
model.material('mat1').propertyGroup('SemicondMaterial').set('mup', '500[cm^2/(V*s)]');
model.material('mat1').propertyGroup('SemicondMaterial').addInput('temperature');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('deltan_ls', '5.82e14[V/s]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('deltap_ls', '2.05e14[V/s]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mun1_ls', '4.75e7[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mup1_ls', '9.93e7[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mun2_ls', '1.74e5[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mup2_ls', '8.84e5[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('alphan_ls', '0.125');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('alphap_ls', '0.0317');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('Tref_ls', '1[K]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('Eref_ls', '1[V/cm]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('Nref_ls', '1[1/cm^3]');
model.material('mat1').propertyGroup('ImpactIonization').set('an', '0.426');
model.material('mat1').propertyGroup('ImpactIonization').set('ap', '0.243');
model.material('mat1').propertyGroup('ImpactIonization').set('bn', '4.81E5[V/cm]');
model.material('mat1').propertyGroup('ImpactIonization').set('bp', '6.53E5[V/cm]');
model.material('mat1').propertyGroup('ImpactIonization').set('cnii', '3.05E-4');
model.material('mat1').propertyGroup('ImpactIonization').set('cpii', '5.35E-4');
model.material('mat1').propertyGroup('ImpactIonization').set('dn', '6.86E-4');
model.material('mat1').propertyGroup('ImpactIonization').set('dp', '5.67E-4');
model.material('mat1').propertyGroup('SlotboomModel').set('Eref_sb', '0.00692[V]');
model.material('mat1').propertyGroup('SlotboomModel').set('Nref_sb', '1.3e17[1/cm^3]');
model.material('mat1').propertyGroup('SlotboomModel').set('alpha_sb', '0.5');
model.material('mat1').propertyGroup('JainRoulstonModel').set('An_jr', '3.5e-8[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Bn_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Cn_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Ap_jr', '3.5e-8[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Bp_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Cp_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Nref_jr', '1[1/cm^3]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('alpha_jr', '0.5');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('T_ref_kl', '300[K]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_e_max_kl', '1414.0[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_h_max_kl', '470.5[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_e_min_kl', '68.5[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_h_min_kl', '44.9[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('theta_e_kl', '2.285');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('theta_h_kl', '2.247');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('alpha_e_1_kl', '0.711');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('alpha_h_1_kl', '0.719');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_e_1_kl', '9.20e16[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_h_1_kl', '2.23e17[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('c_D_kl', '0.21');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('c_A_kl', '0.50');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_D_kl', '4.0e20[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_A_kl', '7.2e20[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('f_BH_kl', '3.828');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('f_CW_kl', '2.459');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_BH_kl', '1.36e20[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('P_CW_kl', '3.97e13');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_1_kl', '0.89233');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_2_kl', '0.41372');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_3_kl', '0.19778');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_4_kl', '0.28227');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_5_kl', '0.005978');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_6_kl', '1.80618');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_7_kl', '0.72169');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_1_kl', '0.7643');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_2_kl', '2.2999');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_3_kl', '6.5502');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_4_kl', '2.3670');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_5_kl', '-0.01552');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_6_kl', '0.6478');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('m_e_kl', 'me_const');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('m_h_kl', '1.258*me_const');

model.physics('semi').prop('d').set('A', 'area');
model.physics('semi').feature('smm1').set('mun_mat', 'userdef');
model.physics('semi').feature('smm1').set('mun', 'mun');
model.physics('semi').feature('smm1').set('mup_mat', 'userdef');
model.physics('semi').feature('smm1').set('mup', 'mup');
model.physics('semi').create('adm1', 'AnalyticDopingModel', 1);
model.physics('semi').feature('adm1').label('Analytic Doping Model 1: Intrinsic');
model.physics('semi').feature('adm1').selection.all;
model.physics('semi').feature('adm1').set('NAc', 'Npi');
model.physics('semi').create('gdm1', 'GeometricDopingModel', 1);
model.physics('semi').feature('gdm1').label('Geometric Doping Model 1: P-plus');
model.physics('semi').feature('gdm1').selection.all;
model.physics('semi').feature('gdm1').set('impurityProfile', 'erf_func');
model.physics('semi').feature('gdm1').set('NAgen', 'Nds');
model.physics('semi').feature('gdm1').set('jd_gen', 'dj');
model.physics('semi').feature('gdm1').set('Nb_gen_src', 'root.comp1.semi.adm1.NAc');
model.physics('semi').feature.duplicate('gdm2', 'gdm1');
model.physics('semi').feature('gdm2').label('Geometric Doping Model 2: N-plus');
model.physics('semi').feature('gdm2').set('impurityType', 'donor');
model.physics('semi').feature('gdm2').set('NDgen', 'Nds');
model.physics('semi').feature('gdm1').feature('gdmbs1').selection.set([2]);
model.physics('semi').feature('gdm2').feature('gdmbs1').selection.set([1]);
model.physics('semi').create('tar1', 'TrapAssistedRecombination', 1);
model.physics('semi').feature('tar1').label('Trap-Assisted Recombination 1: SRH');
model.physics('semi').feature('tar1').selection.all;
model.physics('semi').feature('tar1').set('taun_mat', 'userdef');
model.physics('semi').feature('tar1').set('taun', 'tau');
model.physics('semi').feature('tar1').set('taup_mat', 'userdef');
model.physics('semi').feature('tar1').set('taup', 'tau');
model.physics('semi').create('iig1', 'IIGeneration', 1);
model.physics('semi').feature('iig1').selection.all;
model.physics('semi').feature('iig1').set('iiG_model', 'UserDefined');
model.physics('semi').feature('iig1').set('alpha_n', 'alphan');
model.physics('semi').feature('iig1').set('alpha_p', 'alphap');
model.physics('semi').create('udg1', 'UDGeneration', 1);
model.physics('semi').feature('udg1').label('User-Defined Generation 1: Radiation effect');
model.physics('semi').feature('udg1').selection.all;
model.physics('semi').feature('udg1').set('Gn', 'gR');
model.physics('semi').feature('udg1').set('Gp', 'gR');
model.physics('semi').create('mc1', 'MetalContact', 0);
model.physics('semi').feature('mc1').label('Metal Contact 1: Ground');
model.physics('semi').feature('mc1').selection.set([2]);
model.physics('semi').create('mc2', 'MetalContact', 0);
model.physics('semi').feature('mc2').label('Metal Contact 2: V0');
model.physics('semi').feature('mc2').selection.set([1]);
model.physics('semi').feature('mc2').set('V0', 'V0');
model.physics('ev').create('expl1', 'ExplicitEvent', -1);
model.physics('ev').feature('expl1').set('start', 'tp');

model.mesh('mesh1').autoMeshSize(2);

model.study('std1').label('Study 1a: Ramp V0 with field-independent mobility');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').set('sweeptype', 'filled');
model.study('std1').feature('stat').setIndex('pname', 'L', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'm', 0);
model.study('std1').feature('stat').setIndex('pname', 'L', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'm', 0);
model.study('std1').feature('stat').setIndex('pname', 'cp', 0);
model.study('std1').feature('stat').setIndex('plistarr', 0, 0);
model.study('std1').feature('stat').setIndex('pname', 'L', 1);
model.study('std1').feature('stat').setIndex('plistarr', '', 1);
model.study('std1').feature('stat').setIndex('punit', 'm', 1);
model.study('std1').feature('stat').setIndex('pname', 'L', 1);
model.study('std1').feature('stat').setIndex('plistarr', '', 1);
model.study('std1').feature('stat').setIndex('punit', 'm', 1);
model.study('std1').feature('stat').setIndex('pname', 'V0', 1);
model.study('std1').feature('stat').setIndex('plistarr', '0 0.5 10 50 100 250 1000', 1);
model.study('std1').setGenPlots(false);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'semie');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'semie');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 1.0E-6);
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', false);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').feature('aDef').set('assemtol', 0);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol1').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol1').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol1').feature('s1').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol1').feature('s1').feature('d1').set('ooc', 'off');
model.sol('sol1').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol1').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol1').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'stat');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('initsoluse', 'sol2');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'stat');
model.sol('sol1').create('s2', 'Stationary');
model.sol('sol1').feature('s2').set('stol', 1.0E-6);
model.sol('sol1').feature('s2').create('p1', 'Parametric');
model.sol('sol1').feature('s2').feature.remove('pDef');
model.sol('sol1').feature('s2').feature('p1').set('porder', 'constant');
model.sol('sol1').feature('s2').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s2').set('control', 'stat');
model.sol('sol1').feature('s2').feature('aDef').set('complexfun', false);
model.sol('sol1').feature('s2').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s2').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s2').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s2').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s2').feature('aDef').set('assemtol', 0);
model.sol('sol1').feature('s2').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s2').feature('fc1').set('rstep', 10);
model.sol('sol1').feature('s2').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s2').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s2').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('s2').feature('fc1').set('initstep', 0.1);
model.sol('sol1').feature('s2').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol1').feature('s2').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('d1').set('linsolver', 'mumps');
model.sol('sol1').feature('s2').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol1').feature('s2').feature('d1').set('ooc', 'off');
model.sol('sol1').feature('s2').feature('d1').set('errorchk', 'off');
model.sol('sol1').feature('s2').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s2').feature('fc1').set('rstep', 10);
model.sol('sol1').feature('s2').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s2').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s2').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('s2').feature('fc1').set('initstep', 0.1);
model.sol('sol1').feature('s2').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol1').feature('s2').feature.remove('fcDef');
model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('s2').feature('p1').set('porder', 'linear');
model.sol('sol1').runAll;

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/semi', true);
model.study('std2').feature('stat').setSolveFor('/physics/ev', false);
model.study('std2').feature('stat').set('useinitsol', true);
model.study('std2').feature('stat').set('initmethod', 'sol');
model.study('std2').feature('stat').set('initstudy', 'std1');
model.study('std2').feature('stat').set('solnum', 'manual');
model.study('std2').feature('stat').set('manualsolnum', 'index');
model.study('std2').create('param', 'Parametric');
model.study('std2').feature('param').setIndex('pname', 'L', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', 'm', 0);
model.study('std2').feature('param').setIndex('pname', 'L', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', 'm', 0);
model.study('std2').feature('param').setIndex('pname', 'V0', 0);
model.study('std2').feature('param').setIndex('plistarr', '0 0.5 10 50 100 250 1000', 0);
model.study('std2').feature('param').setIndex('pname', 'L', 1);
model.study('std2').feature('param').setIndex('plistarr', '', 1);
model.study('std2').feature('param').setIndex('punit', 'm', 1);
model.study('std2').feature('param').setIndex('pname', 'L', 1);
model.study('std2').feature('param').setIndex('plistarr', '', 1);
model.study('std2').feature('param').setIndex('punit', 'm', 1);
model.study('std2').feature('param').setIndex('pname', 'index', 1);
model.study('std2').feature('param').setIndex('plistarr', 'range(1,7)', 1);
model.study('std2').label('Study 1b: Ramp V0 with full mobility model');

model.sol.create('sol3');
model.sol('sol3').study('std2');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std2');
model.sol('sol3').feature('st1').set('studystep', 'stat');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').set('control', 'stat');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').set('stol', 1.0E-6);
model.sol('sol3').feature('s1').feature('aDef').set('complexfun', false);
model.sol('sol3').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol3').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol3').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol3').feature('s1').feature('aDef').set('assemtol', 0);
model.sol('sol3').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol3').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol3').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol3').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol3').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol3').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol3').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol3').feature('s1').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol3').feature('s1').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol3').feature('s1').feature('d1').set('ooc', 'off');
model.sol('sol3').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol3').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol3').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol3').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol3').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol3').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol3').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol3').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol3').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol('sol3').attach('std2');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std2');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol3');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'V0' 'index'});
model.batch('p1').set('plistarr', {'0 0.5 10 50 100 250 1000' 'range(1,7)'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std2');
model.batch('p1').set('control', 'param');

model.sol.create('sol4');
model.sol('sol4').study('std2');
model.sol('sol4').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol4');
model.batch('p1').run('compute');

model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').label('Energy Levels (semi)');
model.result('pg1').set('data', 'dset4');
model.result('pg1').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg1').set('titletype', 'manual');
model.result('pg1').set('title', 'Energy Diagram');
model.result('pg1').set('ylabel', 'Energy (eV)');
model.result('pg1').set('data', 'dset4');
model.result('pg1').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond1/pg2');
model.result('pg1').feature.create('lngr1', 'LineGraph');
model.result('pg1').feature('lngr1').label('Conduction Band Energy Level');
model.result('pg1').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr1').set('expr', 'semi.Ec_e');
model.result('pg1').feature('lngr1').set('unit', 'eV');
model.result('pg1').feature('lngr1').set('linecolor', 'blue');
model.result('pg1').feature('lngr1').set('legend', true);
model.result('pg1').feature('lngr1').set('legendmethod', 'manual');
model.result('pg1').feature('lngr1').set('legends', {'Ec'});
model.result('pg1').feature('lngr1').set('resolution', 'norefine');
model.result('pg1').feature('lngr1').set('smooth', 'everywhere');
model.result('pg1').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr1').set('data', 'parent');
model.result('pg1').feature('lngr1').selection.geom('geom1', 1);
model.result('pg1').feature('lngr1').selection.set([1]);
model.result('pg1').feature.create('lngr2', 'LineGraph');
model.result('pg1').feature('lngr2').label('Electron Quasi-Fermi Energy Level');
model.result('pg1').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr2').set('expr', 'semi.Efn_e');
model.result('pg1').feature('lngr2').set('unit', 'eV');
model.result('pg1').feature('lngr2').set('linestyle', 'dashed');
model.result('pg1').feature('lngr2').set('linecolor', 'black');
model.result('pg1').feature('lngr2').set('legend', true);
model.result('pg1').feature('lngr2').set('legendmethod', 'manual');
model.result('pg1').feature('lngr2').set('legends', {'Efn'});
model.result('pg1').feature('lngr2').set('resolution', 'norefine');
model.result('pg1').feature('lngr2').set('smooth', 'everywhere');
model.result('pg1').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr2').set('data', 'parent');
model.result('pg1').feature('lngr2').selection.geom('geom1', 1);
model.result('pg1').feature('lngr2').selection.set([1]);
model.result('pg1').feature.create('lngr3', 'LineGraph');
model.result('pg1').feature('lngr3').label('Hole Quasi-Fermi Energy Level');
model.result('pg1').feature('lngr3').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr3').set('expr', 'semi.Efp_e');
model.result('pg1').feature('lngr3').set('unit', 'eV');
model.result('pg1').feature('lngr3').set('linestyle', 'dotted');
model.result('pg1').feature('lngr3').set('linecolor', 'black');
model.result('pg1').feature('lngr3').set('legend', true);
model.result('pg1').feature('lngr3').set('legendmethod', 'manual');
model.result('pg1').feature('lngr3').set('legends', {'Efp'});
model.result('pg1').feature('lngr3').set('resolution', 'norefine');
model.result('pg1').feature('lngr3').set('smooth', 'everywhere');
model.result('pg1').feature('lngr3').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr3').set('data', 'parent');
model.result('pg1').feature('lngr3').selection.geom('geom1', 1);
model.result('pg1').feature('lngr3').selection.set([1]);
model.result('pg1').feature.create('lngr4', 'LineGraph');
model.result('pg1').feature('lngr4').label('Valence Band Energy Level');
model.result('pg1').feature('lngr4').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr4').set('expr', 'semi.Ev_e');
model.result('pg1').feature('lngr4').set('unit', 'eV');
model.result('pg1').feature('lngr4').set('linecolor', 'green');
model.result('pg1').feature('lngr4').set('legend', true);
model.result('pg1').feature('lngr4').set('legendmethod', 'manual');
model.result('pg1').feature('lngr4').set('legends', {'Ev'});
model.result('pg1').feature('lngr4').set('resolution', 'norefine');
model.result('pg1').feature('lngr4').set('smooth', 'everywhere');
model.result('pg1').feature('lngr4').set('showsolutionparams', 'on');
model.result('pg1').feature('lngr4').set('data', 'parent');
model.result('pg1').feature('lngr4').selection.geom('geom1', 1);
model.result('pg1').feature('lngr4').selection.set([1]);
model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').label('Carrier Concentrations (semi)');
model.result('pg2').set('data', 'dset4');
model.result('pg2').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg2').set('ylabel', 'Carrier concentration (1/cm^3)');
model.result('pg2').set('ylog', true);
model.result('pg2').set('data', 'dset4');
model.result('pg2').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond1/pg3');
model.result('pg2').feature.create('lngr1', 'LineGraph');
model.result('pg2').feature('lngr1').label('Electron Concentration');
model.result('pg2').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg2').feature('lngr1').set('expr', 'semi.N');
model.result('pg2').feature('lngr1').set('unit', '1/cm^3');
model.result('pg2').feature('lngr1').set('legend', true);
model.result('pg2').feature('lngr1').set('legendmethod', 'manual');
model.result('pg2').feature('lngr1').set('legends', {'electrons'});
model.result('pg2').feature('lngr1').set('resolution', 'norefine');
model.result('pg2').feature('lngr1').set('smooth', 'everywhere');
model.result('pg2').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg2').feature('lngr1').set('data', 'parent');
model.result('pg2').feature('lngr1').selection.geom('geom1', 1);
model.result('pg2').feature('lngr1').selection.set([1]);
model.result('pg2').feature.create('lngr2', 'LineGraph');
model.result('pg2').feature('lngr2').label('Hole Concentration');
model.result('pg2').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg2').feature('lngr2').set('expr', 'semi.P');
model.result('pg2').feature('lngr2').set('unit', '1/cm^3');
model.result('pg2').feature('lngr2').set('legend', true);
model.result('pg2').feature('lngr2').set('legendmethod', 'manual');
model.result('pg2').feature('lngr2').set('legends', {'holes'});
model.result('pg2').feature('lngr2').set('resolution', 'norefine');
model.result('pg2').feature('lngr2').set('smooth', 'everywhere');
model.result('pg2').feature('lngr2').set('showsolutionparams', 'on');
model.result('pg2').feature('lngr2').set('data', 'parent');
model.result('pg2').feature('lngr2').selection.geom('geom1', 1);
model.result('pg2').feature('lngr2').selection.set([1]);
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').label('Electric Potential (semi)');
model.result('pg3').set('data', 'dset4');
model.result('pg3').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg3').set('ylabel', 'Electric Potential (V)');
model.result('pg3').set('data', 'dset4');
model.result('pg3').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond1/pg4');
model.result('pg3').feature.create('lngr1', 'LineGraph');
model.result('pg3').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg3').feature('lngr1').set('expr', 'V');
model.result('pg3').feature('lngr1').set('resolution', 'norefine');
model.result('pg3').feature('lngr1').set('smooth', 'everywhere');
model.result('pg3').feature('lngr1').set('showsolutionparams', 'on');
model.result('pg3').feature('lngr1').set('data', 'parent');
model.result('pg3').feature('lngr1').selection.geom('geom1', 1);
model.result('pg3').feature('lngr1').selection.set([1]);
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').set('data', 'dset4');
model.result('pg4').create('lngr1', 'LineGraph');
model.result('pg4').create('lngr2', 'LineGraph');
model.result('pg4').feature('lngr1').selection.all;
model.result('pg4').feature('lngr1').set('xdataexpr', 'X');
model.result('pg4').feature('lngr1').set('expr', 'semi.Nnetdop');
model.result('pg4').feature('lngr1').set('unit', '1/cm^3');
model.result('pg4').feature('lngr1').set('linecolor', 'red');
model.result('pg4').feature('lngr1').set('legend', true);
model.result('pg4').feature('lngr1').set('legendmethod', 'manual');
model.result('pg4').feature('lngr1').set('legends', {'P-type (Red)'});
model.result('pg4').feature('lngr1').feature.create('filt1', 'LineGraphFilter');
model.result('pg4').feature('lngr1').feature('filt1').set('expr', 'semi.Na-semi.Nd > 1[1/cm^3]');
model.result('pg4').feature('lngr2').selection.all;
model.result('pg4').feature('lngr2').set('xdataexpr', 'X');
model.result('pg4').feature('lngr2').set('expr', 'semi.Nnetdop');
model.result('pg4').feature('lngr2').set('unit', '1/cm^3');
model.result('pg4').feature('lngr2').set('linecolor', 'blue');
model.result('pg4').feature('lngr2').set('legend', true);
model.result('pg4').feature('lngr2').set('legendmethod', 'manual');
model.result('pg4').feature('lngr2').set('legends', {'N-type (Blue)'});
model.result('pg4').feature('lngr2').feature.create('filt1', 'LineGraphFilter');
model.result('pg4').feature('lngr2').feature('filt1').set('expr', 'semi.Nd-semi.Na > 1[1/cm^3]');
model.result('pg4').set('titletype', 'none');
model.result('pg4').set('legendpos', 'uppermiddle');
model.result('pg4').set('ylabel', 'Net Dopant Concentration \vert N<sub>d</sub> - N<sub>a</sub>\vert, 1/cm<sup>3</sup>');
model.result('pg4').set('ylog', true);
model.result('pg4').feature('lngr1').label('P-type');
model.result('pg4').feature('lngr2').label('N-type');
model.result('pg4').label('Net Dopant Concentration (semi)');
model.result('pg1').run;
model.result('pg4').run;
model.result.remove('pg4');
model.result('pg3').run;
model.result('pg3').label('Fig. 3  Doping Profile');
model.result('pg3').setIndex('looplevelinput', 'first', 0);
model.result('pg3').run;
model.result('pg3').feature('lngr1').set('expr', 'abs(semi.Ndoping)');
model.result('pg3').feature('lngr1').set('unit', '1/cm^3');
model.result('pg3').feature('lngr1').set('descractive', true);
model.result('pg3').feature('lngr1').set('descr', 'Doping density');
model.result('pg3').feature('lngr1').set('xdata', 'expr');
model.result('pg3').feature('lngr1').set('xdataexpr', 'x');
model.result('pg3').run;
model.result('pg3').set('ylabelactive', false);
model.result('pg3').set('ylog', true);
model.result('pg3').set('axislimits', true);
model.result('pg3').set('xmin', 0);
model.result('pg3').set('xmax', 300);
model.result('pg3').set('ymin', '1e10');
model.result('pg3').set('ymax', '1e20');
model.result('pg3').run;
model.result.duplicate('pg4', 'pg3');
model.result('pg4').run;
model.result('pg4').label('Fig. 4A  Hole Distribution');
model.result('pg4').setIndex('looplevelinput', 'all', 0);
model.result('pg4').set('xmax', 1);
model.result('pg4').set('ymax', '1e19');
model.result('pg4').set('legendpos', 'upperleft');
model.result('pg4').run;
model.result('pg4').feature('lngr1').set('expr', 'semi.P');
model.result('pg4').feature('lngr1').set('descractive', false);
model.result('pg4').feature('lngr1').set('xdataexpr', 'x/L');
model.result('pg4').feature('lngr1').set('xdatadescractive', true);
model.result('pg4').feature('lngr1').set('xdatadescr', 'Fractional distance');
model.result('pg4').feature('lngr1').set('legend', true);
model.result('pg4').run;
model.result('pg4').run;
model.result.duplicate('pg5', 'pg4');
model.result('pg5').run;
model.result('pg5').label('Fig. 4B  Electric Field Distribution');
model.result('pg5').set('ymin', '1e2');
model.result('pg5').set('ymax', '1e5');
model.result('pg5').set('legendpos', 'uppermiddle');
model.result('pg5').run;
model.result('pg5').feature('lngr1').set('expr', 'semi.normE');
model.result('pg5').feature('lngr1').set('unit', 'V/cm');
model.result('pg5').run;

model.study.create('std3');
model.study('std3').create('stat', 'Stationary');
model.study('std3').feature('stat').setSolveFor('/physics/semi', true);
model.study('std3').feature('stat').setSolveFor('/physics/ev', false);
model.study('std3').label('Study 2: Steady-state radiation effect');
model.study('std3').setGenPlots(false);
model.study('std3').feature('stat').set('useinitsol', true);
model.study('std3').feature('stat').set('initmethod', 'sol');
model.study('std3').feature('stat').set('initstudy', 'std2');
model.study('std3').feature('stat').set('useparam', true);
model.study('std3').feature('stat').set('sweeptype', 'filled');
model.study('std3').feature('stat').setIndex('pname', 'L', 0);
model.study('std3').feature('stat').setIndex('plistarr', '', 0);
model.study('std3').feature('stat').setIndex('punit', 'm', 0);
model.study('std3').feature('stat').setIndex('pname', 'L', 0);
model.study('std3').feature('stat').setIndex('plistarr', '', 0);
model.study('std3').feature('stat').setIndex('punit', 'm', 0);
model.study('std3').feature('stat').setIndex('pname', 't', 0);
model.study('std3').feature('stat').setIndex('plistarr', 'tp', 0);
model.study('std3').feature('stat').setIndex('pname', 'L', 1);
model.study('std3').feature('stat').setIndex('plistarr', '', 1);
model.study('std3').feature('stat').setIndex('punit', 'm', 1);
model.study('std3').feature('stat').setIndex('pname', 'L', 1);
model.study('std3').feature('stat').setIndex('plistarr', '', 1);
model.study('std3').feature('stat').setIndex('punit', 'm', 1);
model.study('std3').feature('stat').setIndex('pname', 'RadSi', 1);
model.study('std3').feature('stat').setIndex('plistarr', '{0.25,2.5,5.0,5.7}*1e8', 1);

model.sol.create('sol12');
model.sol('sol12').study('std3');
model.sol('sol12').create('st1', 'StudyStep');
model.sol('sol12').feature('st1').set('study', 'std3');
model.sol('sol12').feature('st1').set('studystep', 'stat');
model.sol('sol12').create('v1', 'Variables');
model.sol('sol12').feature('v1').set('control', 'stat');
model.sol('sol12').create('s1', 'Stationary');
model.sol('sol12').feature('s1').set('stol', 1.0E-6);
model.sol('sol12').feature('s1').create('p1', 'Parametric');
model.sol('sol12').feature('s1').feature.remove('pDef');
model.sol('sol12').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol12').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol12').feature('s1').set('control', 'stat');
model.sol('sol12').feature('s1').feature('aDef').set('complexfun', false);
model.sol('sol12').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol12').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol12').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol12').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol12').feature('s1').feature('aDef').set('assemtol', 0);
model.sol('sol12').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol12').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol12').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol12').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol12').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol12').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol12').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol12').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol12').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol12').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol12').feature('s1').create('d1', 'Direct');
model.sol('sol12').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol12').feature('s1').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol12').feature('s1').feature('d1').set('ooc', 'off');
model.sol('sol12').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol12').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol12').feature('s1').feature('fc1').set('rstep', 10);
model.sol('sol12').feature('s1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol12').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol12').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol12').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol12').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol12').feature('s1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol12').feature('s1').feature('fc1').set('initstep', 0.1);
model.sol('sol12').feature('s1').feature('fc1').set('minsteprecovery', 0.001);
model.sol('sol12').feature('s1').feature.remove('fcDef');
model.sol('sol12').attach('std3');
model.sol('sol12').feature('s1').feature('fc1').set('dtech', 'const');
model.sol('sol12').feature('s1').feature('fc1').set('damp', '0.6');
model.sol('sol12').feature('s1').feature('p1').set('paramtuning', true);
model.sol('sol12').feature('s1').feature('p1').set('pinitstep', '5e7');
model.sol('sol12').feature('s1').feature('p1').set('pmaxstep', '1e8');
model.sol('sol12').feature('s1').feature('p1').set('porder', 'linear');
model.sol('sol12').feature('s1').feature('fc1').set('maxiter', 20);
model.sol('sol12').feature('s1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol12').feature('s1').feature('fc1').set('aaccdim', 5);
model.sol('sol12').runAll;

model.result('pg5').run;
model.result.duplicate('pg6', 'pg5');
model.result('pg6').run;
model.result('pg6').label('Fig. 5A  Steady-State Electric Field Distribution vs. Dose Rate');
model.result('pg6').set('data', 'dset5');
model.result('pg6').set('ymax', '1e6');
model.result('pg6').set('legendpos', 'lowermiddle');
model.result('pg6').run;
model.result('pg4').run;
model.result.duplicate('pg7', 'pg4');
model.result('pg7').run;
model.result('pg7').label('Fig. 5B  Steady-State Hole Distribution vs. Dose Rate');
model.result('pg7').set('data', 'dset5');
model.result('pg7').set('ymin', '1e11');
model.result('pg7').set('ymax', '1e15');
model.result('pg7').set('legendpos', 'lowerright');
model.result('pg7').run;
model.result.duplicate('pg8', 'pg7');
model.result('pg8').run;
model.result('pg8').label('Fig. 2A  Mobility vs. Doping');
model.result('pg8').set('data', 'dset4');
model.result('pg8').set('titletype', 'none');
model.result('pg8').set('xlabelactive', true);
model.result('pg8').set('xlabel', 'Doping (cm<sup>-3</sup>)');
model.result('pg8').set('ylabelactive', true);
model.result('pg8').set('ylabel', 'Mobility (cm<sup>2</sup>/V-s)');
model.result('pg8').set('xlog', true);
model.result('pg8').set('ylog', false);
model.result('pg8').set('xmin', '1e13');
model.result('pg8').set('xmax', '1e20');
model.result('pg8').set('ymin', 0);
model.result('pg8').set('ymax', 1400);
model.result('pg8').set('legendpos', 'upperright');
model.result('pg8').run;
model.result('pg8').feature('lngr1').set('expr', 'semi.mun');
model.result('pg8').feature('lngr1').set('unit', 'cm^2/(V*s)');
model.result('pg8').feature('lngr1').set('xdataexpr', 'NDt');
model.result('pg8').feature('lngr1').set('xdatadescr', 'Ionized impurity concentration');
model.result('pg8').feature('lngr1').set('linestyle', 'none');
model.result('pg8').feature('lngr1').set('linemarker', 'cycle');
model.result('pg8').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg8').feature('lngr1').set('legend', false);
model.result('pg8').feature.duplicate('lngr2', 'lngr1');
model.result('pg8').run;
model.result('pg8').feature('lngr2').set('expr', 'semi.mup');
model.result('pg8').feature('lngr2').set('linemarker', 'cyclereset');
model.result.dataset.create('grid1', 'Grid1D');
model.result.dataset('grid1').set('source', 'data');
model.result.dataset('grid1').label('Grid 1D 1: logNDt');
model.result.dataset('grid1').set('source', 'function');
model.result.dataset('grid1').set('function', 'pw1');
model.result.dataset('grid1').set('par1', 'logNDt');
model.result.dataset('grid1').set('parmin1', 13);
model.result.dataset('grid1').set('parmax1', 20);
model.result('pg8').run;
model.result('pg8').create('lngr3', 'LineGraph');
model.result('pg8').feature('lngr3').set('markerpos', 'datapoints');
model.result('pg8').feature('lngr3').set('linewidth', 'preference');
model.result('pg8').feature('lngr3').set('data', 'grid1');
model.result('pg8').feature('lngr3').set('expr', 'mun0[V*s/cm^2]/(1+81*10^logNDt/(10^logNDt+3.24e18))^0.5');
model.result('pg8').feature('lngr3').set('descractive', true);
model.result('pg8').feature('lngr3').set('descr', 'Electron mobility');
model.result('pg8').feature('lngr3').set('xdata', 'expr');
model.result('pg8').feature('lngr3').set('xdataexpr', '10^logNDt');
model.result('pg8').feature('lngr3').set('linecolor', 'cyan');
model.result('pg8').feature('lngr3').set('linewidth', 2);
model.result('pg8').feature('lngr3').set('legend', true);
model.result('pg8').feature('lngr3').set('autosolution', false);
model.result('pg8').feature('lngr3').set('autodescr', true);
model.result('pg8').feature.duplicate('lngr4', 'lngr3');
model.result('pg8').run;
model.result('pg8').feature('lngr4').set('expr', 'mup0[V*s/cm^2]/(1+350*10^logNDt/(10^logNDt+1.05e19))^0.5');
model.result('pg8').feature('lngr4').set('descr', 'Hole mobility');
model.result('pg8').feature('lngr4').set('linecolor', 'green');
model.result('pg8').run;
model.result('pg8').run;
model.result.duplicate('pg9', 'pg8');
model.result('pg9').run;
model.result('pg9').label('Fig. 2B  Velocity vs. Electric Field');
model.result('pg9').set('data', 'dset5');
model.result('pg9').set('xlabel', 'Electric field (V/cm)');
model.result('pg9').set('ylabel', 'Drift velocity (cm/s)');
model.result('pg9').set('xlog', false);
model.result('pg9').set('xmin', 0);
model.result('pg9').set('xmax', '1e5');
model.result('pg9').set('ymax', '9e6');
model.result('pg9').set('legendpos', 'lowerright');
model.result('pg9').run;
model.result('pg9').feature('lngr1').set('expr', 'semi.mun*semi.normE');
model.result('pg9').feature('lngr1').set('unit', 'cm/s');
model.result('pg9').feature('lngr1').set('xdataexpr', 'semi.normE[cm/V]');
model.result('pg9').feature('lngr1').set('xdatadescractive', false);
model.result('pg9').run;
model.result('pg9').feature('lngr2').set('expr', 'semi.mup*semi.normE');
model.result('pg9').feature('lngr2').set('unit', 'cm/s');
model.result('pg9').feature('lngr2').set('xdataexpr', 'semi.normE[cm/V]');
model.result('pg9').feature('lngr2').set('xdatadescractive', false);
model.result.dataset.duplicate('grid2', 'grid1');
model.result.dataset('grid2').label('Grid 1D 1: E1');
model.result.dataset('grid2').set('par1', 'E1');
model.result.dataset('grid2').set('parmin1', 0);
model.result.dataset('grid2').set('parmax1', '1e5');
model.result('pg9').run;
model.result('pg9').feature('lngr3').set('data', 'grid2');
model.result('pg9').feature('lngr3').set('expr', 'E1*mun0[V*s/cm^2]/(1+(E1/8e3)^4.9*(E1+1.64e5)/(E1+1))^(1/4.9)');
model.result('pg9').feature('lngr3').set('descr', 'Electron velocity');
model.result('pg9').feature('lngr3').set('xdataexpr', 'E1');
model.result('pg9').feature('lngr3').set('xdataunit', 'm');
model.result('pg9').feature('lngr3').set('linecolor', 'red');
model.result('pg9').run;
model.result('pg9').feature('lngr4').set('data', 'grid2');
model.result('pg9').feature('lngr4').set('expr', 'E1*mup0[V*s/cm^2]/(1+(E1/8.72e4)^1.15*(E1+8.51e5)/(E1+8.12e4))^(1/1.15)');
model.result('pg9').feature('lngr4').set('descr', 'Hole velocity');
model.result('pg9').feature('lngr4').set('xdataexpr', 'E1');
model.result('pg9').feature('lngr4').set('xdataunit', 'm');
model.result('pg9').feature('lngr4').set('linecolor', 'magenta');
model.result('pg9').run;

model.study.create('std4');
model.study('std4').create('time', 'Transient');
model.study('std4').feature('time').setSolveFor('/physics/semi', true);
model.study('std4').feature('time').setSolveFor('/physics/ev', true);
model.study('std4').feature('time').set('tunit', 'ns');
model.study('std4').feature('time').set('tlist', '0 0.1 0.2 0.3 0.5 0.6 0.8 1 1.3 1.7 2 2.4 3 3.5 4 4.3 4.7 5 6 7 8 10');
model.study('std4').feature('time').set('usertol', true);
model.study('std4').feature('time').set('rtol', 1.0E-8);
model.study('std4').feature('time').set('useinitsol', true);
model.study('std4').feature('time').set('initmethod', 'sol');
model.study('std4').feature('time').set('initstudy', 'std2');
model.study('std4').feature('time').set('useparam', true);
model.study('std4').feature('time').setIndex('pname', 'L', 0);
model.study('std4').feature('time').setIndex('plistarr', '', 0);
model.study('std4').feature('time').setIndex('punit', 'm', 0);
model.study('std4').feature('time').setIndex('pname', 'L', 0);
model.study('std4').feature('time').setIndex('plistarr', '', 0);
model.study('std4').feature('time').setIndex('punit', 'm', 0);
model.study('std4').feature('time').setIndex('pname', 'RadSi', 0);
model.study('std4').feature('time').setIndex('plistarr', '2.5e8 2.5e10', 0);
model.study('std4').feature('time').setIndex('punit', 's', 0);
model.study('std4').label('Study 3: Pulsed radiation effect');
model.study('std4').setGenPlots(false);

model.sol.create('sol13');
model.sol('sol13').study('std4');
model.sol('sol13').create('st1', 'StudyStep');
model.sol('sol13').feature('st1').set('study', 'std4');
model.sol('sol13').feature('st1').set('studystep', 'time');
model.sol('sol13').create('v1', 'Variables');
model.sol('sol13').feature('v1').set('control', 'time');
model.sol('sol13').create('t1', 'Time');
model.sol('sol13').feature('t1').set('tlist', '0 0.1 0.2 0.3 0.5 0.6 0.8 1 1.3 1.7 2 2.4 3 3.5 4 4.3 4.7 5 6 7 8 10');
model.sol('sol13').feature('t1').set('plot', 'off');
model.sol('sol13').feature('t1').set('plotgroup', 'pg1');
model.sol('sol13').feature('t1').set('plotfreq', 'tout');
model.sol('sol13').feature('t1').set('probesel', 'all');
model.sol('sol13').feature('t1').set('probes', {});
model.sol('sol13').feature('t1').set('probefreq', 'tsteps');
model.sol('sol13').feature('t1').set('rtol', 1.0E-5);
model.sol('sol13').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol13').feature('t1').set('atolglobalmethod', 'scaled');
model.sol('sol13').feature('t1').set('atolglobalfactor', 0.1);
model.sol('sol13').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol13').feature('t1').set('eventtol', 0.01);
model.sol('sol13').feature('t1').set('reacf', true);
model.sol('sol13').feature('t1').set('storeudot', true);
model.sol('sol13').feature('t1').set('tstepsbdf', 'strict');
model.sol('sol13').feature('t1').set('endtimeinterpolation', true);
model.sol('sol13').feature('t1').set('maxorder', 5);
model.sol('sol13').feature('t1').set('minorder', 1);
model.sol('sol13').feature('t1').set('rescaleafterinitbw', false);
model.sol('sol13').feature('t1').set('bwinitstepfrac', '0.001');
model.sol('sol13').feature('t1').create('tp1', 'TimeParametric');
model.sol('sol13').feature('t1').feature.remove('tpDef');
model.sol('sol13').feature('t1').feature('tp1').set('control', 'time');
model.sol('sol13').feature('t1').set('control', 'time');
model.sol('sol13').feature('t1').feature('aDef').set('complexfun', false);
model.sol('sol13').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol13').feature('t1').feature('aDef').set('matherr', true);
model.sol('sol13').feature('t1').feature('aDef').set('blocksizeactive', false);
model.sol('sol13').feature('t1').feature('aDef').set('nullfun', 'auto');
model.sol('sol13').feature('t1').feature('aDef').set('assemtol', 0);
model.sol('sol13').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol13').feature('t1').feature('fc1').set('rstep', 10);
model.sol('sol13').feature('t1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol13').feature('t1').feature('fc1').set('maxiter', 4);
model.sol('sol13').feature('t1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol13').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol13').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol13').feature('t1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol13').feature('t1').feature('fc1').set('initstep', 1);
model.sol('sol13').feature('t1').feature('fc1').set('minsteprecovery', 0.75);
model.sol('sol13').feature('t1').create('d1', 'Direct');
model.sol('sol13').feature('t1').feature('d1').set('linsolver', 'mumps');
model.sol('sol13').feature('t1').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol13').feature('t1').feature('d1').set('ooc', 'off');
model.sol('sol13').feature('t1').feature('d1').set('errorchk', 'off');
model.sol('sol13').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol13').feature('t1').feature('fc1').set('rstep', 10);
model.sol('sol13').feature('t1').feature('fc1').set('useminsteprecovery', 'auto');
model.sol('sol13').feature('t1').feature('fc1').set('maxiter', 4);
model.sol('sol13').feature('t1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol13').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol13').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol13').feature('t1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol13').feature('t1').feature('fc1').set('initstep', 1);
model.sol('sol13').feature('t1').feature('fc1').set('minsteprecovery', 0.75);
model.sol('sol13').feature('t1').feature.remove('fcDef');
model.sol('sol13').attach('std4');
model.sol('sol13').feature('v1').set('scalemethod', 'init');
model.sol('sol13').runAll;

model.result('pg7').run;
model.result.duplicate('pg10', 'pg7');
model.result('pg10').run;
model.result('pg10').label('Fig. 7A  Hole Distribution at Several Times');
model.result('pg10').set('data', 'dset6');
model.result('pg10').setIndex('looplevelinput', 'last', 1);
model.result('pg10').set('ymax', '1e16');
model.result('pg10').setIndex('looplevelinput', 'manual', 0);
model.result('pg10').setIndex('looplevel', [6 8 11 18], 0);
model.result('pg10').run;
model.result.duplicate('pg11', 'pg10');
model.result('pg11').run;
model.result('pg11').label('Fig. 7B  Electron Distribution at Several Times');
model.result('pg11').set('legendpos', 'lowerleft');
model.result('pg11').run;
model.result('pg11').feature('lngr1').set('expr', 'semi.N');
model.result('pg11').run;
model.result('pg11').run;
model.result.duplicate('pg12', 'pg11');
model.result('pg12').run;
model.result('pg12').label('Fig. 7C  Electric Field Distribution at Several Times');
model.result('pg12').setIndex('looplevel', [1 6 8 11 18], 0);
model.result('pg12').set('ymin', '1e2');
model.result('pg12').set('ymax', '1e6');
model.result('pg12').set('legendpos', 'uppermiddle');
model.result('pg12').run;
model.result('pg12').feature('lngr1').set('expr', 'semi.normE');
model.result('pg12').feature('lngr1').set('unit', 'V/cm');
model.result('pg12').run;
model.result.create('pg13', 'PlotGroup1D');
model.result('pg13').run;
model.result('pg13').label('Fig. 8  Transient Photocurrent Response');
model.result('pg13').set('data', 'none');
model.result('pg13').set('twoyaxes', true);
model.result('pg13').create('glob1', 'Global');
model.result('pg13').feature('glob1').set('markerpos', 'datapoints');
model.result('pg13').feature('glob1').set('linewidth', 'preference');
model.result('pg13').feature('glob1').set('data', 'dset6');
model.result('pg13').feature('glob1').setIndex('looplevelinput', 'first', 1);
model.result('pg13').feature('glob1').setIndex('expr', 'semi.I0_2/area', 0);
model.result('pg13').feature('glob1').setIndex('unit', 'A/cm^2', 0);
model.result('pg13').feature('glob1').setIndex('descr', 'Current density', 0);
model.result('pg13').feature('glob1').set('xdatasolnumtype', 'level1');
model.result('pg13').feature.duplicate('glob2', 'glob1');
model.result('pg13').run;
model.result('pg13').feature('glob2').setIndex('looplevelinput', 'last', 1);
model.result('pg13').feature('glob2').set('plotonsecyaxis', true);
model.result('pg13').run;
model.result.dataset.create('par1', 'Parametric1D');
model.result.dataset('par1').set('data', 'dset6');
model.result.dataset('par1').setIndex('looplevelinput', 'last', 1);
model.result.create('pg14', 'PlotGroup2D');
model.result('pg14').run;
model.result('pg14').label('Evolution of Hole Density Profile and Drift Velocity');
model.result('pg14').set('titletype', 'manual');
model.result('pg14').set('title', 'x:Distance  y:Time  z:log<sub>10</sub>(Hole Density(cm<sup>-3</sup>))  color:Drift Velocity(cm/s)');
model.result('pg14').create('surf1', 'Surface');
model.result('pg14').feature('surf1').set('expr', 'semi.normE*semi.mup');
model.result('pg14').feature('surf1').set('unit', 'cm/s');
model.result('pg14').feature('surf1').create('hght1', 'Height');
model.result('pg14').run;
model.result('pg14').feature('surf1').feature('hght1').set('heightdata', 'expr');
model.result('pg14').feature('surf1').feature('hght1').set('expr', 'semi.log10P');
model.result('pg14').run;
model.result('pg14').feature('surf1').create('filt1', 'Filter');
model.result('pg14').run;
model.result('pg14').feature('surf1').feature('filt1').set('expr', 'semi.log10P>11 && semi.log10P<16');
model.result('pg14').run;
model.result('pg14').create('con1', 'Contour');
model.result('pg14').feature('con1').set('expr', 'x');
model.result('pg14').feature('con1').set('number', 10);
model.result('pg14').feature('con1').set('coloring', 'uniform');
model.result('pg14').feature('con1').set('color', 'gray');
model.result('pg14').feature('con1').set('colorlegend', false);
model.result('pg14').run;
model.result('pg14').feature('surf1').feature('hght1').set('scaleactive', true);
model.result('pg14').run;
model.result('pg14').feature('con1').feature.copy('hght1', 'pg14/surf1/hght1');
model.result('pg14').run;
model.result('pg14').run;
model.result('pg14').run;
model.result('pg14').feature('con1').feature.copy('filt1', 'pg14/surf1/filt1');
model.result('pg14').run;
model.result('pg14').run;
model.result('pg14').feature.duplicate('con2', 'con1');
model.result('pg14').run;
model.result('pg14').feature('con2').set('expr', 't');
model.result('pg14').feature('con2').set('unit', 'ns');
model.result('pg14').feature('con2').set('levelmethod', 'levels');
model.result('pg14').feature('con2').set('levels', '0.1 0.2 0.5 1 2 3 4 5 8');
model.result('pg14').feature('con2').set('coloring', 'gradient');
model.result('pg14').feature('con2').set('topcolor', 'cyan');
model.result('pg14').feature('con2').set('bottomcolor', 'magenta');
model.result('pg14').feature('con2').set('colorlegend', true);
model.result('pg14').run;

model.title('Radiation Effects in a PIN Diode');

model.description('This tutorial performs steady-state and transient analysis of the response of a PIN diode to constant and pulsed radiation, respectively. The effect of radiation is modeled as spatially uniform generation of electron-hole pairs within the device. At high dose rates the separation of the generated charges causes the reduction of the interior electric field and prolonged storage of excess carriers. A quantitative prediction of this phenomenon is only possible with numerical simulation, since analytical solution is unattainable. Several techniques for achieving convergence in the cases of high reverse bias, field-dependent mobility, and time-dependent studies are demonstrated. The computed carrier concentrations and electric field distribution agree well with the reference paper.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;
model.sol('sol8').clearSolutionData;
model.sol('sol9').clearSolutionData;
model.sol('sol10').clearSolutionData;
model.sol('sol11').clearSolutionData;
model.sol('sol12').clearSolutionData;
model.sol('sol13').clearSolutionData;

model.label('pin_radiation_effects.mph');

model.modelNode.label('Components');

out = model;
