function out = model
%
% tubular_reactor_surrogate_sampling.m
%
% Model exported on May 26 2025, 21:26 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/COMSOL_Multiphysics/Applications');

model.label('tubular_reactor_surrogate_sampling.mph');

model.param.set('E', '75362[J/mol]', 'Activation energy');
model.param.set('A', '16.96e12[1/h]', 'Frequency factor');
model.param.set('ke', '0.559[W/m/K]', 'Thermal conductivity');
model.param.set('Diff', '1e-9[m^2/s]', 'Diffusion coefficient');
model.param.set('Uk', '1300[W/m^2/K]', 'Overall heat-transfer coefficient');
model.param.set('dHrx', '-84666[J/mol]', 'Heat of reaction');
model.param.set('T0', '312[K]', 'Inlet temperature');
model.param.set('Ta0', '277[K]', 'Inlet temperature of the coolant');
model.param.set('v0', 'v_w0+v_po0+v_m0', 'Total flow rate');
model.param.set('cA0', 'n_po0/v0', 'Propylene oxide concentration, inlet');
model.param.set('cB0', 'n_w0/v0', 'Water concentration, inlet');
model.param.set('cMe0', 'n_m0/v0', 'Methanol concentration, inlet');
model.param.set('Cp0', '(Cp_po*cA0+Cp_m*cMe0+Cp_w*cB0)/rho0', 'Heat capacity at inlet');
model.param.set('rho0', '(cA0*M_po+cB0*M_w+cMe0*M_m)', 'Density at inlet');
model.param.set('Ra', '0.1[m]', 'Reactor radius');
model.param.set('L', '1[m]', 'Reactor length');
model.param.set('M_po', '58.095[g/mol]', 'Molar weight, propylene oxide');
model.param.set('M_m', '32.042[g/mol]', 'Molar weight, methanol');
model.param.set('M_w', '18[g/mol]', 'Molar weight, water');
model.param.set('rho_po_p', '830[kg/m^3]', 'Density, propylene oxide');
model.param.set('rho_m_p', '791.3[kg/m^3]', 'Density, methanol');
model.param.set('rho_w_p', '1000[kg/m^3]', 'Density, water');
model.param.set('Cp_po', '146.54[J/mol/K]', 'Specific heat, po');
model.param.set('Cp_m', '81.095[J/mol/K]', 'Specific heat, m');
model.param.set('Cp_w', '75.36[J/mol/K]', 'Specific heat, w');
model.param.set('Cp_pg', '192.59[J/mol/K]', 'Specific heat, pg');
model.param.set('v_ratio', '3.5', 'Ratio water flow rate / (prop+me) flow rate');
model.param.set('n_po0', '0.1[mol/s]', 'Molar flow rate po in');
model.param.set('n_m0', 'v_po0*rho_m_p/M_m', 'Molar flow rate m in');
model.param.set('v_po0', 'n_po0*M_po/rho_po_p', 'Volumetric flow rate po in');
model.param.set('v_m0', 'v_po0', 'Volumetric flow rate m in');
model.param.set('v_w0', 'v_ratio*(v_po0+v_m0)', 'Volumetric flow rate w in');
model.param.set('n_w0', 'rho_w_p*v_w0/M_w', 'Molar flow rate w in');
model.param.set('Cpc', '4180[J/(kg*K)]', 'Heat capacity, cooling fluid');
model.param.set('mc', '0.1[kg/s]', 'Mass flow rate, cooling fluid');
model.param.set('r0', '0[m]', 'Radial position');
model.param.set('z0', '0[m]', 'Axial position');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.result.table.create('tbl2', 'Table');
model.result.table.create('tbl3', 'Table');

model.func.create('dnn1', 'DNN');
model.func('dnn1').set('outfeatures', [50 40 30 20 2]);
model.func('dnn1').set('activation', {'tanh' 'tanh' 'tanh' 'tanh' 'tanh'});
model.func('dnn1').set('layertype', {'dense' 'dense' 'dense' 'dense' 'dense'});
model.func('dnn1').set('importedname', 'tubular_reactor_data.txt');
model.func('dnn1').set('filecolumns', 7);
model.func('dnn1').set('fileheaders', {'R' 'Z' 'E (J/mol)' 'ke (W/(m*K))' 'dHrx (J/mol)' 'T (K)' 'xA (1)'});
model.func('dnn1').set('columnKeys', {'col1' 'col2' 'col3' 'col4' 'col5' 'col6' 'col7'});
model.func('dnn1').set('columnType', {'col1' 'arg' 'col2' 'arg' 'col3' 'arg' 'col4' 'arg' 'col5' 'arg'  ...
'col6' 'value' 'col7' 'value'});
model.func('dnn1').set('funcs', {'col1' 'dnn1_col1' 'col2' 'dnn1_col2' 'col3' 'dnn1_col3' 'col4' 'dnn1_col4' 'col5' 'dnn1_col5'  ...
'col6' 'dnn1_1' 'col7' 'dnn1_2'});
model.func('dnn1').set('plotfuncname', 'dnn1_1');
model.func('dnn1').set('plotaxis', {'on' 'on' 'on' 'off' 'off'});
model.func('dnn1').set('plotfixedvalue', {'0.05' '0.5' '75360.2' '2.8233' '-84641.2'});
model.func('dnn1').set('plotargs', {'x1' '0.0025' '0.0975';  ...
'x2' '0.025' '0.975';  ...
'x3' '71539.6' '79180.8';  ...
'x4' '0.0904448' '5.55615';  ...
'x5' '-101461' '-67821.2'});
model.func('dnn1').set('filename', 'C:\Users\andersw\AppData\Local\Temp\csjavabridge95519\dj2sq43pqbfh\tubular_reactor_data.txt');
model.func('dnn1').importData;
model.func('dnn1').run;

model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', [0.1 1]);
model.geom('geom1').run;

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').set('u0', 'v0/(pi*Ra^2)', 'Average flow rate');
model.variable('var1').set('uz', '2*u0*(1-(r/Ra)^2)', 'Laminar flow profile');
model.variable('var1').set('xA', '(cA0-cA)/cA0', 'Conversion species A');
model.variable('var1').set('cB', 'cB0-cA0*xA', 'Concentration species B');
model.variable('var1').set('cC', 'cA0*xA', 'Concentration species C');
model.variable('var1').set('rA', '-A*exp(-E/R_const/T)*cA', 'Reaction rate');
model.variable('var1').set('Q', '(-rA)*(-dHrx)', 'Heat production term');
model.variable('var1').set('cpm', '(Cp_po*cA+Cp_m*cMe0+Cp_w*cB)/rho0', 'Mixture specific heat');

model.view.create('view2', 2);
model.view.create('view3', 3);
model.view.create('view4', 3);
model.view.create('view5', 3);

model.physics.create('tds', 'DilutedSpecies', 'geom1');
model.physics('tds').model('comp1');
model.physics('tds').field('concentration').field('cA');
model.physics('tds').field('concentration').component({'cA'});
model.physics('tds').create('reac1', 'Reactions', 2);
model.physics('tds').feature('reac1').selection.set([1]);
model.physics('tds').create('conc1', 'Concentration', 1);
model.physics('tds').feature('conc1').selection.set([2]);
model.physics('tds').create('out1', 'Outflow', 1);
model.physics('tds').feature('out1').selection.set([3]);
model.physics.create('ht', 'HeatTransferInFluids', 'geom1');
model.physics('ht').model('comp1');
model.physics('ht').create('hs1', 'HeatSource', 2);
model.physics('ht').feature('hs1').selection.set([1]);
model.physics('ht').create('temp1', 'TemperatureBoundary', 1);
model.physics('ht').feature('temp1').selection.set([2]);
model.physics('ht').create('hf1', 'HeatFluxBoundary', 1);
model.physics('ht').feature('hf1').selection.set([4]);
model.physics('ht').create('ofl1', 'ConvectiveOutflow', 1);
model.physics('ht').feature('ofl1').selection.set([3]);
model.physics.create('cb', 'CoefficientFormBoundaryPDE', 'geom1');
model.physics('cb').model('comp1');
model.physics('cb').field('dimensionless').component({'Tj'});
model.physics('cb').prop('Units').set('DependentVariableQuantity', 'temperature');
model.physics('cb').selection.set([4]);
model.physics('cb').create('dir1', 'DirichletBoundary', 0);
model.physics('cb').feature('dir1').selection.set([3]);

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([2 3]);
model.mesh('mesh1').feature('map1').feature('dis2').selection.set([1 4]);

model.probe.create('pdom1', 'DomainPoint');
model.probe('pdom1').model('comp1');
model.probe('pdom1').create('ppb2', 'PointExpr');

model.result.table('tbl2').label('Design Data');
model.result.table('tbl3').label('Probe Table 3');

model.view('view1').axis.set('xmin', -0.7317129373550415);
model.view('view1').axis.set('xmax', 0.8317129611968994);
model.view('view1').axis.set('ymin', -0.11576278507709503);
model.view('view1').axis.set('ymax', 1.115762710571289);
model.view('view2').axis.set('xmin', -0.6581693887710571);
model.view('view2').axis.set('xmax', 0.6581693887710571);
model.view('view2').axis.set('ymin', -0.04999998211860657);
model.view('view2').axis.set('ymax', 1.0499999523162842);

model.physics('tds').feature('cdm1').set('u', {'0'; '0'; 'uz'});
model.physics('tds').feature('cdm1').set('D_cA', {'Diff'; '0'; '0'; '0'; 'Diff'; '0'; '0'; '0'; 'Diff'});
model.physics('tds').feature('init1').set('initc', 'cA0');
model.physics('tds').feature('reac1').set('R_cA', 'rA');
model.physics('tds').feature('conc1').set('species', true);
model.physics('tds').feature('conc1').set('c0', 'cA0');
model.physics('ht').feature('fluid1').set('Cp_mat', 'userdef');
model.physics('ht').feature('fluid1').set('Cp', 'cpm');
model.physics('ht').feature('fluid1').set('gamma_not_IG_mat', 'userdef');
model.physics('ht').feature('fluid1').set('rho_mat', 'userdef');
model.physics('ht').feature('fluid1').set('rho', 'rho0');
model.physics('ht').feature('fluid1').set('k_mat', 'userdef');
model.physics('ht').feature('fluid1').set('k', {'ke'; '0'; '0'; '0'; 'ke'; '0'; '0'; '0'; 'ke'});
model.physics('ht').feature('fluid1').set('u', {'0'; '0'; 'uz'});
model.physics('ht').feature('init1').set('Tinit', 'T0');
model.physics('ht').feature('hs1').set('Q0', 'Q');
model.physics('ht').feature('temp1').set('T0', 'T0');
model.physics('ht').feature('hf1').set('q0_input', '-Uk*(T-Tj)');
model.physics('cb').prop('EquationForm').set('form', 'Automatic');
model.physics('cb').prop('Units').set('CustomSourceTermUnit', 'W/m');
model.physics('cb').feature('cfeq1').set('c', [0 0 0 0]);
model.physics('cb').feature('cfeq1').set('f', '2*pi*Ra*Uk*(T-Tj)');
model.physics('cb').feature('cfeq1').set('be', {'0' 'Cpc*mc'});
model.physics('cb').feature('dir1').set('r', 'Ta0');

model.mesh('mesh1').feature('map1').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis1').set('reverse', true);
model.mesh('mesh1').feature('map1').feature('dis1').set('elemcount', 50);
model.mesh('mesh1').feature('map1').feature('dis1').set('elemratio', 0.01);
model.mesh('mesh1').feature('map1').feature('dis1').set('growthrate', 'exponential');
model.mesh('mesh1').feature('map1').feature('dis2').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis2').set('reverse', true);
model.mesh('mesh1').feature('map1').feature('dis2').set('elemcount', 200);
model.mesh('mesh1').feature('map1').feature('dis2').set('elemratio', 0.01);
model.mesh('mesh1').feature('map1').feature('dis2').set('growthrate', 'exponential');
model.mesh('mesh1').run;

model.probe('pdom1').set('coords2', {'r0' 'z0'});
model.probe('pdom1').feature('ppb1').set('expr', 'T');
model.probe('pdom1').feature('ppb1').set('unit', 'K');
model.probe('pdom1').feature('ppb1').set('descr', 'Temperature');
model.probe('pdom1').feature('ppb1').set('table', 'tbl3');
model.probe('pdom1').feature('ppb1').set('window', 'window1');
model.probe('pdom1').feature('ppb2').set('expr', 'xA');
model.probe('pdom1').feature('ppb2').set('unit', '1');
model.probe('pdom1').feature('ppb2').set('descr', 'Conversion species A');
model.probe('pdom1').feature('ppb2').set('table', 'tbl3');
model.probe('pdom1').feature('ppb2').set('window', 'window1');

model.study.create('std1');
model.study('std1').create('sm', 'SurrogateModelTraining');
model.study('std1').create('stat', 'Stationary');
model.study('std1').create('stat2', 'Stationary');
model.study('std1').feature('stat').set('activate', {'tds' 'on' 'ht' 'off' 'cb' 'on' 'frame:spatial1' 'on' 'frame:material1' 'on'});

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').attach('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').create('s2', 'Stationary');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s2').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s2').create('d1', 'Direct');
model.sol('sol1').feature('s2').create('i1', 'Iterative');
model.sol('sol1').feature('s2').create('i2', 'Iterative');
model.sol('sol1').feature('s2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature.remove('fcDef');
model.sol.create('sol3');
model.sol('sol3').study('std1');
model.sol('sol3').label('Parametric Solutions 1');
model.sol.create('sol5');
model.sol('sol5').study('std1');
model.sol('sol5').label('Parametric Solutions 2');

model.batch.create('pd1', 'DesignofExperiments');
model.batch('pd1').create('so1', 'Solutionseq');
model.batch('pd1').create('ex1', 'Exportseq');
model.batch('pd1').study('std1');

model.result.dataset.create('rev1', 'Revolve2D');
model.result.dataset.create('cln1', 'CutLine2D');
model.result.dataset.create('mir1', 'Mirror2D');
model.result.dataset.create('cpt1', 'CutPoint2D');
model.result.dataset.create('rev2', 'Revolve2D');
model.result.dataset.create('grid1', 'Grid2D');
model.result.dataset.create('mir2', 'Mirror2D');
model.result.dataset.create('rev3', 'Revolve2D');
model.result.dataset.create('grid2', 'Grid1D');
model.result.dataset.create('dset5', 'Solution');
model.result.dataset.create('rev4', 'Revolve2D');
model.result.dataset.create('dset6', 'Solution');
model.result.dataset.create('rev5', 'Revolve2D');
model.result.dataset.create('dset7', 'Solution');
model.result.dataset.create('dset8', 'Solution');
model.result.dataset.create('dset9', 'Solution');
model.result.dataset.create('rev6', 'Revolve2D');
model.result.dataset('dset3').set('solution', 'none');
model.result.dataset('dset4').set('probetag', 'pdom1');
model.result.dataset('dset4').set('solution', 'sol1');
model.result.dataset('cpt1').set('probetag', 'pdom1');
model.result.dataset('cpt1').set('data', 'dset4');
model.result.dataset('rev2').set('data', 'dset3');
model.result.dataset('grid1').set('data', 'none');
model.result.dataset('mir2').set('data', 'grid1');
model.result.dataset('rev3').set('data', 'grid1');
model.result.dataset('grid2').set('data', 'none');
model.result.dataset('dset5').set('solution', 'none');
model.result.dataset('rev4').set('data', 'dset5');
model.result.dataset('dset6').set('solution', 'none');
model.result.dataset('rev5').set('data', 'dset6');
model.result.dataset('dset7').set('solution', 'none');
model.result.dataset('dset8').set('solution', 'sol3');
model.result.dataset('dset9').set('solution', 'sol5');
model.result.dataset('rev6').set('data', 'dset9');
model.result.numerical.create('pev1', 'EvalPoint');
model.result.numerical.create('pev2', 'EvalPoint');
model.result.numerical('pev1').set('probetag', 'pdom1/ppb1');
model.result.numerical('pev2').set('probetag', 'pdom1/ppb2');
model.result.create('pg1', 'PlotGroup2D');
model.result.create('pg2', 'PlotGroup3D');
model.result.create('pg3', 'PlotGroup2D');
model.result.create('pg4', 'PlotGroup2D');
model.result.create('pg5', 'PlotGroup2D');
model.result.create('pg6', 'PlotGroup2D');
model.result.create('pg7', 'PlotGroup1D');
model.result.create('pg8', 'PlotGroup1D');
model.result.create('pg9', 'PlotGroup2D');
model.result.create('pg10', 'PlotGroup3D');
model.result.create('pg11', 'PlotGroup2D');
model.result.create('pg12', 'PlotGroup2D');
model.result.create('pg14', 'PlotGroup3D');
model.result.create('pg15', 'PlotGroup3D');
model.result.create('pg16', 'PlotGroup3D');
model.result.create('pg17', 'PlotGroup3D');
model.result.create('pg18', 'PlotGroup2D');
model.result.create('pg19', 'PlotGroup3D');
model.result.create('pg20', 'PlotGroup2D');
model.result.create('pg21', 'PlotGroup2D');
model.result.create('pg22', 'PlotGroup2D');
model.result.create('pg23', 'PlotGroup3D');
model.result.create('pg24', 'PlotGroup2D');
model.result.create('pg25', 'PlotGroup2D');
model.result.create('pg26', 'PlotGroup2D');
model.result.create('pg27', 'PlotGroup2D');
model.result.create('pg28', 'PlotGroup3D');
model.result.create('pg29', 'PlotGroup2D');
model.result.create('pg30', 'PlotGroup2D');
model.result.create('pg31', 'PlotGroup1D');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').create('str1', 'Streamline');
model.result('pg2').create('surf1', 'Surface');
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', 'T');
model.result('pg4').create('line1', 'Line');
model.result('pg4').feature('line1').set('expr', 'Tj');
model.result('pg5').set('data', 'mir1');
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', 'T');
model.result('pg6').set('data', 'mir1');
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', 'xA');
model.result('pg7').create('lngr1', 'LineGraph');
model.result('pg7').create('lngr2', 'LineGraph');
model.result('pg7').feature('lngr1').set('expr', 'T');
model.result('pg7').feature('lngr2').set('expr', 'dnn1_1(x1,L,E,ke,dHrx)');
model.result('pg8').create('lngr1', 'LineGraph');
model.result('pg8').create('lngr2', 'LineGraph');
model.result('pg8').feature('lngr1').set('expr', 'xA');
model.result('pg8').feature('lngr2').set('expr', 'dnn1_2(x1,L,E,ke,dHrx)');
model.result('pg9').set('data', 'dset3');
model.result('pg9').create('surf1', 'Surface');
model.result('pg9').create('str1', 'Streamline');
model.result('pg10').set('data', 'rev2');
model.result('pg10').create('surf1', 'Surface');
model.result('pg11').set('data', 'dset3');
model.result('pg11').create('surf1', 'Surface');
model.result('pg11').feature('surf1').set('expr', 'T');
model.result('pg12').set('data', 'dset3');
model.result('pg12').create('line1', 'Line');
model.result('pg12').feature('line1').set('expr', 'Tj');
model.result('pg14').create('surf1', 'Surface');
model.result('pg14').feature('surf1').set('expr', 'T');
model.result('pg15').create('surf1', 'Surface');
model.result('pg15').feature('surf1').set('expr', 'dnn1_1(x1,x2,E,ke,dHrx)');
model.result('pg16').create('surf1', 'Surface');
model.result('pg16').feature('surf1').set('expr', 'xA');
model.result('pg17').create('surf1', 'Surface');
model.result('pg17').feature('surf1').set('expr', 'dnn1_2(x1,x2,E,ke,dHrx)');
model.result('pg18').set('data', 'dset5');
model.result('pg18').create('surf1', 'Surface');
model.result('pg18').create('str1', 'Streamline');
model.result('pg19').set('data', 'rev4');
model.result('pg19').create('surf1', 'Surface');
model.result('pg20').set('data', 'dset5');
model.result('pg20').create('surf1', 'Surface');
model.result('pg20').feature('surf1').set('expr', 'T');
model.result('pg21').set('data', 'dset5');
model.result('pg21').create('line1', 'Line');
model.result('pg21').feature('line1').set('expr', 'Tj');
model.result('pg22').set('data', 'dset6');
model.result('pg22').create('surf1', 'Surface');
model.result('pg22').create('str1', 'Streamline');
model.result('pg23').set('data', 'rev5');
model.result('pg23').create('surf1', 'Surface');
model.result('pg24').set('data', 'dset6');
model.result('pg24').create('surf1', 'Surface');
model.result('pg24').feature('surf1').set('expr', 'T');
model.result('pg25').set('data', 'dset6');
model.result('pg25').create('line1', 'Line');
model.result('pg25').feature('line1').set('expr', 'Tj');
model.result('pg26').set('data', 'dset8');
model.result('pg26').create('surf1', 'Surface');
model.result('pg26').create('str1', 'Streamline');
model.result('pg27').set('data', 'dset9');
model.result('pg27').create('surf1', 'Surface');
model.result('pg27').create('str1', 'Streamline');
model.result('pg28').set('data', 'rev6');
model.result('pg28').create('surf1', 'Surface');
model.result('pg29').set('data', 'dset9');
model.result('pg29').create('surf1', 'Surface');
model.result('pg29').feature('surf1').set('expr', 'T');
model.result('pg30').set('data', 'dset9');
model.result('pg30').create('line1', 'Line');
model.result('pg30').feature('line1').set('expr', 'Tj');
model.result('pg31').set('probetag', 'window1');
model.result('pg31').create('tblp1', 'Table');
model.result('pg31').feature('tblp1').set('probetag', 'pdom1/ppb1,pdom1/ppb2');
model.result.export.create('data1', 'Data');

model.probe('pdom1').genResult([]);

model.nodeGroup.create('de1', 'Results');
model.nodeGroup('de1').set('type', 'table');
model.nodeGroup('de1').placeAfter([]);

model.study('std1').feature('sm').active(false);
model.study('std1').feature('sm').set('objgrp', 'de1');
model.study('std1').feature('sm').set('qoiexpression', {'1'});
model.study('std1').feature('sm').set('descr', {'Dummy'});
model.study('std1').feature('sm').set('qoisolutionindv', {'parent'});
model.study('std1').feature('sm').set('pname', {'E' 'ke' 'dHrx'});
model.study('std1').feature('sm').set('lboundselection', {'col1' '71518' 'col2' '0.0559' 'col3' '-101600'});
model.study('std1').feature('sm').set('uboundselection', {'col1' '79205' 'col2' '5.6' 'col3' '-67733'});
model.study('std1').feature('sm').set('nsolvenonadp', 100);
model.study('std1').feature('sm').set('errorhandling', 'later');

model.sol('sol1').attach('std1');
model.sol('sol1').feature('st1').label('Compile Equations: Stationary');
model.sol('sol1').feature('v1').label('Dependent Variables 1.1');
model.sol('sol1').feature('s1').label('Stationary Solver 1.1');
model.sol('sol1').feature('s1').feature('dDef').label('Direct 2');
model.sol('sol1').feature('s1').feature('aDef').label('Advanced 1');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').feature('fc1').label('Fully Coupled 1.1');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('d1').label('Direct (Merged)');
model.sol('sol1').feature('s1').feature('i1').label('AMG, concentrations (tds)');
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').feature('ilDef').label('Incomplete LU 1');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').label('Multigrid 1.1');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').label('Presmoother 1');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('soDef').label('SOR 1');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').label('SOR Line 1.1');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').label('Postsmoother 1');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('soDef').label('SOR 1');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').label('SOR Line 1.1');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').label('Coarse Solver 1');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('dDef').label('Direct 2');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').label('Direct 1.1');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('su1').label('Solution Store 1.1');
model.sol('sol1').feature('st2').label('Compile Equations: Stationary 2');
model.sol('sol1').feature('st2').set('studystep', 'stat2');
model.sol('sol1').feature('v2').label('Dependent Variables 2.1');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('initsoluse', 'sol2');
model.sol('sol1').feature('v2').set('solnum', 'auto');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('s2').label('Stationary Solver 2.1');
model.sol('sol1').feature('s2').feature('dDef').label('Direct 2');
model.sol('sol1').feature('s2').feature('aDef').label('Advanced 1');
model.sol('sol1').feature('s2').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s2').feature('fc1').label('Fully Coupled 1.1');
model.sol('sol1').feature('s2').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s2').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s2').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s2').feature('d1').label('Direct (Merged)');
model.sol('sol1').feature('s2').feature('i1').label('AMG, concentrations (tds)');
model.sol('sol1').feature('s2').feature('i1').set('nlinnormuse', true);
model.sol('sol1').feature('s2').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s2').feature('i1').feature('ilDef').label('Incomplete LU 1');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').label('Multigrid 1.1');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').label('Presmoother 1');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('soDef').label('SOR 1');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sl1').label('SOR Line 1.1');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').label('Postsmoother 1');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('soDef').label('SOR 1');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sl1').label('SOR Line 1.1');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').label('Coarse Solver 1');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('dDef').label('Direct 2');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').label('Direct 1.1');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').feature('i2').label('AMG, heat transfer variables (ht)');
model.sol('sol1').feature('s2').feature('i2').set('nlinnormuse', true);
model.sol('sol1').feature('s2').feature('i2').set('rhob', 20);
model.sol('sol1').feature('s2').feature('i2').feature('ilDef').label('Incomplete LU 1');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').label('Multigrid 1.1');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').label('Presmoother 1');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('soDef').label('SOR 2');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('so1').label('SOR 1.1');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').label('Postsmoother 1');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('soDef').label('SOR 2');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('so1').label('SOR 1.1');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('cs').label('Coarse Solver 1');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('cs').feature('dDef').label('Direct 2');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('cs').feature('d1').label('Direct 1.1');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').runAll;

model.batch('pd1').set('control', 'sm');
model.batch('pd1').set('objgrp', 'de1');
model.batch('pd1').set('qoiexpression', {'1'});
model.batch('pd1').set('outputdescr', {'Dummy'});
model.batch('pd1').set('qoisolutionindv', {'parent'});
model.batch('pd1').set('pname', {'E' 'ke' 'dHrx'});
model.batch('pd1').set('columnlabels', {'r0' 'z0' 'E' 'ke' 'dHrx' 'comp1.ppb1' 'comp1.ppb2'});
model.batch('pd1').set('nsolvenonadp', 100);
model.batch('pd1').set('lhssettings', 'auto');
model.batch('pd1').set('convinfo', false);
model.batch('pd1').feature('so1').set('seq', 'sol1');
model.batch('pd1').feature('so1').set('psol', 'sol5');
model.batch('pd1').feature('so1').set('param', {'"E","78502.3569843752","ke","4.75883873615425","dHrx","-86514.9733847001"'});
model.batch('pd1').feature('ex1').set('seq', 'data1');
model.batch('pd1').feature('ex1').set('clear', false);
model.batch('pd1').feature('ex1').set('paramfilename', false);
model.batch('pd1').feature('ex1').set('param', {'"E","78502","ke","4.7588","dHrx","-86515"'});
model.batch('pd1').run;

model.result.dataset('rev1').set('startangle', -90);
model.result.dataset('rev1').set('revangle', 225);
model.result.dataset('cln1').set('genpoints', {'0' 'L'; 'Ra' 'L'});
model.result.dataset('dset4').label('Probe Solution 4');
model.result.dataset('dset4').set('frametype', 'spatial');
model.result.dataset('cpt1').set('data', 'dset4');
model.result.dataset('rev2').set('startangle', -90);
model.result.dataset('rev2').set('revangle', 225);
model.result.dataset('grid1').set('function', 'dnn1');
model.result.dataset('grid1').set('par1', 'x1');
model.result.dataset('grid1').set('parmax1', 0.1);
model.result.dataset('grid1').set('par2', 'x2');
model.result.dataset('grid1').set('res1', 25);
model.result.dataset('grid1').set('res2', 75);
model.result.dataset('rev3').set('startangle', -90);
model.result.dataset('rev3').set('revangle', 225);
model.result.dataset('grid2').set('function', 'dnn1');
model.result.dataset('grid2').set('par1', 'x1');
model.result.dataset('grid2').set('parmax1', 0.1);
model.result.dataset('rev4').set('startangle', -90);
model.result.dataset('rev4').set('revangle', 225);
model.result.dataset('rev5').set('startangle', -90);
model.result.dataset('rev5').set('revangle', 225);
model.result.dataset('rev6').set('startangle', -90);
model.result.dataset('rev6').set('revangle', 225);
model.result.dataset.remove('dset10');
model.result('pg1').label('Concentration (tds)');
model.result('pg1').set('titletype', 'custom');
model.result('pg1').feature('surf1').set('descr', 'Concentration');
model.result('pg1').feature('surf1').set('resolution', 'normal');
model.result('pg1').feature('str1').set('posmethod', 'uniform');
model.result('pg1').feature('str1').set('pointtype', 'arrow');
model.result('pg1').feature('str1').set('arrowcount', 8);
model.result('pg1').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg1').feature('str1').set('arrowscale', 0.012635684494987332);
model.result('pg1').feature('str1').set('color', 'gray');
model.result('pg1').feature('str1').set('recover', 'pprint');
model.result('pg1').feature('str1').set('arrowcountactive', false);
model.result('pg1').feature('str1').set('arrowscaleactive', false);
model.result('pg1').feature('str1').set('resolution', 'normal');
model.result('pg2').label('Concentration, 3D (tds)');
model.result('pg2').set('titletype', 'custom');
model.result('pg2').set('typeintitle', false);
model.result('pg2').feature('surf1').set('descr', 'Concentration');
model.result('pg2').feature('surf1').set('resolution', 'normal');
model.result('pg3').label('Temperature (ht)');
model.result('pg3').feature('surf1').label('Surface');
model.result('pg3').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg3').feature('surf1').set('resolution', 'normal');
model.result('pg4').label('Temperature Cooling Jacket');
model.result('pg4').feature('line1').set('linetype', 'tube');
model.result('pg4').feature('line1').set('radiusexpr', '3');
model.result('pg4').feature('line1').set('tuberadiusscale', 0.0013333333333333333);
model.result('pg4').feature('line1').set('tuberadiusscaleactive', false);
model.result('pg4').feature('line1').set('resolution', 'normal');
model.result('pg5').label('Temperature (Mirrored)');
model.result('pg5').set('titletype', 'manual');
model.result('pg5').set('title', 'Temperature Surface');
model.result('pg5').set('xlabel', 'Radial location (m)');
model.result('pg5').set('xlabelactive', true);
model.result('pg5').set('ylabel', 'Axial location (m)');
model.result('pg5').set('ylabelactive', true);
model.result('pg5').feature('surf1').set('resolution', 'normal');
model.result('pg6').label('Conversion');
model.result('pg6').set('titletype', 'manual');
model.result('pg6').set('title', 'Conversion Surface');
model.result('pg6').set('xlabel', 'Radial location (m)');
model.result('pg6').set('xlabelactive', true);
model.result('pg6').set('ylabel', 'Axial location (m)');
model.result('pg6').set('ylabelactive', true);
model.result('pg6').feature('surf1').set('resolution', 'normal');
model.result('pg7').label('Temperature, 1D');
model.result('pg7').set('data', 'cln1');
model.result('pg7').set('titletype', 'manual');
model.result('pg7').set('title', 'Radial Temperature Profiles');
model.result('pg7').set('xlabel', 'Radial location (m)');
model.result('pg7').set('xlabelactive', true);
model.result('pg7').set('ylabel', 'Temperature (K)');
model.result('pg7').set('ylabelactive', true);
model.result('pg7').set('legendpos', 'lowerleft');
model.result('pg7').feature('lngr1').set('linestyle', 'cycle');
model.result('pg7').feature('lngr1').set('linecolor', 'black');
model.result('pg7').feature('lngr1').set('linewidth', 'preference');
model.result('pg7').feature('lngr1').set('legend', true);
model.result('pg7').feature('lngr1').set('legendmethod', 'manual');
model.result('pg7').feature('lngr1').set('legends', {'Outlet (computed)' 'Half axial location' 'Outlet'});
model.result('pg7').feature('lngr1').set('resolution', 'normal');
model.result('pg7').feature('lngr2').set('data', 'grid2');
model.result('pg7').feature('lngr2').set('solrepresentation', 'solnum');
model.result('pg7').feature('lngr2').set('linestyle', 'dashed');
model.result('pg7').feature('lngr2').set('linecolor', 'blue');
model.result('pg7').feature('lngr2').set('linewidth', 'preference');
model.result('pg7').feature('lngr2').set('legend', true);
model.result('pg7').feature('lngr2').set('legendmethod', 'manual');
model.result('pg7').feature('lngr2').set('legends', {'Outlet (preview)'});
model.result('pg7').feature('lngr2').set('smooth', 'internal');
model.result('pg7').feature('lngr2').set('allowmaterialsmoothing', false);
model.result('pg7').feature('lngr2').set('resolution', 'normal');
model.result('pg8').label('Conversion, 1D');
model.result('pg8').set('data', 'cln1');
model.result('pg8').set('titletype', 'manual');
model.result('pg8').set('title', 'Radial Conversion Profiles');
model.result('pg8').set('xlabel', 'Radial location (m)');
model.result('pg8').set('xlabelactive', true);
model.result('pg8').set('ylabel', 'Conversion');
model.result('pg8').set('ylabelactive', true);
model.result('pg8').set('axislimits', true);
model.result('pg8').set('xmin', 0);
model.result('pg8').set('xmax', 0.1);
model.result('pg8').set('ymin', 0);
model.result('pg8').set('legendpos', 'lowerleft');
model.result('pg8').feature('lngr1').set('linestyle', 'cycle');
model.result('pg8').feature('lngr1').set('linecolor', 'black');
model.result('pg8').feature('lngr1').set('linewidth', 'preference');
model.result('pg8').feature('lngr1').set('legend', true);
model.result('pg8').feature('lngr1').set('legendmethod', 'manual');
model.result('pg8').feature('lngr1').set('legends', {'Inlet' 'Half axial location' 'Outlet'});
model.result('pg8').feature('lngr1').set('resolution', 'normal');
model.result('pg8').feature('lngr2').set('data', 'grid2');
model.result('pg8').feature('lngr2').set('solrepresentation', 'solnum');
model.result('pg8').feature('lngr2').set('linestyle', 'dashed');
model.result('pg8').feature('lngr2').set('linecolor', 'blue');
model.result('pg8').feature('lngr2').set('linewidth', 'preference');
model.result('pg8').feature('lngr2').set('legend', true);
model.result('pg8').feature('lngr2').set('legendmethod', 'manual');
model.result('pg8').feature('lngr2').set('legends', {'Outlet (preview)'});
model.result('pg8').feature('lngr2').set('smooth', 'internal');
model.result('pg8').feature('lngr2').set('allowmaterialsmoothing', false);
model.result('pg8').feature('lngr2').set('resolution', 'normal');
model.result('pg9').label('Concentration (tds) 1');
model.result('pg9').set('titletype', 'custom');
model.result('pg9').feature('surf1').set('descr', 'Concentration');
model.result('pg9').feature('surf1').set('smooth', 'internal');
model.result('pg9').feature('surf1').set('allowmaterialsmoothing', false);
model.result('pg9').feature('surf1').set('resolution', 'normal');
model.result('pg9').feature('str1').set('posmethod', 'uniform');
model.result('pg9').feature('str1').set('pointtype', 'arrow');
model.result('pg9').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg9').feature('str1').set('color', 'gray');
model.result('pg9').feature('str1').set('smooth', 'internal');
model.result('pg9').feature('str1').set('allowmaterialsmoothing', false);
model.result('pg9').feature('str1').set('recover', 'pprint');
model.result('pg9').feature('str1').set('resolution', 'normal');
model.result('pg10').label('Concentration, 3D (tds) 1');
model.result('pg10').set('titletype', 'custom');
model.result('pg10').set('typeintitle', false);
model.result('pg10').feature('surf1').set('descr', 'Concentration');
model.result('pg10').feature('surf1').set('smooth', 'internal');
model.result('pg10').feature('surf1').set('allowmaterialsmoothing', false);
model.result('pg10').feature('surf1').set('resolution', 'normal');
model.result('pg11').label('Temperature (ht) 1');
model.result('pg11').feature('surf1').label('Surface');
model.result('pg11').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg11').feature('surf1').set('smooth', 'internal');
model.result('pg11').feature('surf1').set('allowmaterialsmoothing', false);
model.result('pg11').feature('surf1').set('resolution', 'normal');
model.result('pg12').label('Coefficient Form Boundary PDE');
model.result('pg12').feature('line1').set('smooth', 'internal');
model.result('pg12').feature('line1').set('allowmaterialsmoothing', false);
model.result('pg12').feature('line1').set('resolution', 'normal');
model.result('pg14').label('Temperature, 3D (Revolved)');
model.result('pg14').set('titletype', 'manual');
model.result('pg14').set('title', 'Surface: Temperature (K) (Computed)');
model.result('pg14').set('edges', false);
model.result('pg14').feature('surf1').set('colortable', 'ThermalLight');
model.result('pg14').feature('surf1').set('resolution', 'normal');
model.result('pg15').label('Temperature, 3D, Surrogate (Revolved)');
model.result('pg15').set('data', 'rev3');
model.result('pg15').set('solrepresentation', 'solnum');
model.result('pg15').set('titletype', 'manual');
model.result('pg15').set('title', 'Surface: Temperature (K) (Preview)');
model.result('pg15').set('view', 'view3');
model.result('pg15').set('edges', false);
model.result('pg15').feature('surf1').set('colortable', 'ThermalLight');
model.result('pg15').feature('surf1').set('smooth', 'internal');
model.result('pg15').feature('surf1').set('allowmaterialsmoothing', false);
model.result('pg15').feature('surf1').set('resolution', 'normal');
model.result('pg16').label('Conversion, 3D (Revolved)');
model.result('pg16').set('titletype', 'manual');
model.result('pg16').set('title', 'Surface: Conversion, species A (Computed)');
model.result('pg16').set('edges', false);
model.result('pg16').feature('surf1').set('rangecoloractive', true);
model.result('pg16').feature('surf1').set('rangecolormax', 1);
model.result('pg16').feature('surf1').set('resolution', 'normal');
model.result('pg17').label('Conversion, 3D, Surrogate (Revolved)');
model.result('pg17').set('data', 'rev3');
model.result('pg17').set('solrepresentation', 'solnum');
model.result('pg17').set('titletype', 'manual');
model.result('pg17').set('title', 'Surface: Conversion, species A (Preview)');
model.result('pg17').set('view', 'view3');
model.result('pg17').set('edges', false);
model.result('pg17').feature('surf1').set('rangecoloractive', true);
model.result('pg17').feature('surf1').set('rangecolormax', 1);
model.result('pg17').feature('surf1').set('smooth', 'internal');
model.result('pg17').feature('surf1').set('allowmaterialsmoothing', false);
model.result('pg17').feature('surf1').set('resolution', 'normal');
model.result('pg18').label('Concentration (tds) 2');
model.result('pg18').set('titletype', 'custom');
model.result('pg18').feature('surf1').set('descr', 'Concentration');
model.result('pg18').feature('surf1').set('smooth', 'internal');
model.result('pg18').feature('surf1').set('allowmaterialsmoothing', false);
model.result('pg18').feature('surf1').set('resolution', 'normal');
model.result('pg18').feature('str1').set('posmethod', 'uniform');
model.result('pg18').feature('str1').set('pointtype', 'arrow');
model.result('pg18').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg18').feature('str1').set('color', 'gray');
model.result('pg18').feature('str1').set('smooth', 'internal');
model.result('pg18').feature('str1').set('allowmaterialsmoothing', false);
model.result('pg18').feature('str1').set('recover', 'pprint');
model.result('pg18').feature('str1').set('resolution', 'normal');
model.result('pg19').label('Concentration, 3D (tds) 2');
model.result('pg19').set('titletype', 'custom');
model.result('pg19').set('typeintitle', false);
model.result('pg19').feature('surf1').set('descr', 'Concentration');
model.result('pg19').feature('surf1').set('smooth', 'internal');
model.result('pg19').feature('surf1').set('allowmaterialsmoothing', false);
model.result('pg19').feature('surf1').set('resolution', 'normal');
model.result('pg20').label('Temperature (ht) 2');
model.result('pg20').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg20').feature('surf1').set('smooth', 'internal');
model.result('pg20').feature('surf1').set('allowmaterialsmoothing', false);
model.result('pg20').feature('surf1').set('resolution', 'normal');
model.result('pg21').label('Coefficient Form Boundary PDE 1');
model.result('pg21').feature('line1').set('smooth', 'internal');
model.result('pg21').feature('line1').set('allowmaterialsmoothing', false);
model.result('pg21').feature('line1').set('resolution', 'normal');
model.result('pg22').label('Concentration (tds) 3');
model.result('pg22').set('titletype', 'custom');
model.result('pg22').feature('surf1').set('descr', 'Concentration');
model.result('pg22').feature('surf1').set('smooth', 'internal');
model.result('pg22').feature('surf1').set('allowmaterialsmoothing', false);
model.result('pg22').feature('surf1').set('resolution', 'normal');
model.result('pg22').feature('str1').set('posmethod', 'uniform');
model.result('pg22').feature('str1').set('pointtype', 'arrow');
model.result('pg22').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg22').feature('str1').set('color', 'gray');
model.result('pg22').feature('str1').set('smooth', 'internal');
model.result('pg22').feature('str1').set('allowmaterialsmoothing', false);
model.result('pg22').feature('str1').set('recover', 'pprint');
model.result('pg22').feature('str1').set('resolution', 'normal');
model.result('pg23').label('Concentration, 3D (tds) 3');
model.result('pg23').set('titletype', 'custom');
model.result('pg23').set('typeintitle', false);
model.result('pg23').feature('surf1').set('descr', 'Concentration');
model.result('pg23').feature('surf1').set('smooth', 'internal');
model.result('pg23').feature('surf1').set('allowmaterialsmoothing', false);
model.result('pg23').feature('surf1').set('resolution', 'normal');
model.result('pg24').label('Temperature (ht) 3');
model.result('pg24').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg24').feature('surf1').set('smooth', 'internal');
model.result('pg24').feature('surf1').set('allowmaterialsmoothing', false);
model.result('pg24').feature('surf1').set('resolution', 'normal');
model.result('pg25').label('Coefficient Form Boundary PDE 2');
model.result('pg25').feature('line1').set('smooth', 'internal');
model.result('pg25').feature('line1').set('allowmaterialsmoothing', false);
model.result('pg25').feature('line1').set('resolution', 'normal');
model.result('pg26').label('Concentration (tds) 4');
model.result('pg26').set('titletype', 'custom');
model.result('pg26').feature('surf1').set('descr', 'Concentration');
model.result('pg26').feature('surf1').set('resolution', 'normal');
model.result('pg26').feature('str1').set('posmethod', 'uniform');
model.result('pg26').feature('str1').set('pointtype', 'arrow');
model.result('pg26').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg26').feature('str1').set('color', 'gray');
model.result('pg26').feature('str1').set('recover', 'pprint');
model.result('pg26').feature('str1').set('resolution', 'normal');
model.result('pg27').label('Concentration (tds) 5');
model.result('pg27').set('titletype', 'custom');
model.result('pg27').feature('surf1').set('descr', 'Concentration');
model.result('pg27').feature('surf1').set('resolution', 'normal');
model.result('pg27').feature('str1').set('posmethod', 'uniform');
model.result('pg27').feature('str1').set('pointtype', 'arrow');
model.result('pg27').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg27').feature('str1').set('color', 'gray');
model.result('pg27').feature('str1').set('recover', 'pprint');
model.result('pg27').feature('str1').set('resolution', 'normal');
model.result('pg28').label('Concentration, 3D (tds) 4');
model.result('pg28').set('titletype', 'custom');
model.result('pg28').set('typeintitle', false);
model.result('pg28').feature('surf1').set('descr', 'Concentration');
model.result('pg28').feature('surf1').set('resolution', 'normal');
model.result('pg29').label('Temperature (ht) 4');
model.result('pg29').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg29').feature('surf1').set('resolution', 'normal');
model.result('pg30').label('Coefficient Form Boundary PDE 3');
model.result('pg30').feature('line1').set('resolution', 'normal');
model.result('pg31').label('Probe Plot Group 31');
model.result('pg31').set('xlabel', 'Temperature (K), Point: (r0, z0)');
model.result('pg31').set('windowtitle', 'Probe Plot 1');
model.result('pg31').set('xlabelactive', false);
model.result('pg31').create('tblp1', 'Table');
model.result('pg31').feature('tblp1').label('Probe Table Graph 1');
model.result('pg31').feature('tblp1').set('table', 'tbl3');
model.result('pg31').feature('tblp1').set('plotcolumninput', 'manual');
model.result('pg31').feature('tblp1').set('legend', true);
model.result('pg31').feature.remove('tblp2');
model.result.export('data1').set('expr', {'E' 'ke' 'dHrx' 'T' 'xA'});
model.result.export('data1').set('unit', {'J/mol' 'W/(m*K)' 'J/mol' 'K' '1'});
model.result.export('data1').set('descr', {'Activation energy' 'Thermal conductivity' 'Heat of reaction' 'Temperature' 'Conversion species A'});
model.result.export('data1').set('filename', 'C:\COMSOL\tubular_reactor_data.txt');
model.result.export('data1').set('location', 'regulargrid');
model.result.export('data1').set('regulargridx2', 20);
model.result.export('data1').set('regulargridy2', 20);
model.result.export('data1').set('ifexists', 'append');

model.nodeGroup('de1').label('Design of Experiments');
model.nodeGroup('de1').add('table', 'tbl2');

model.label('tubular_reactor_surrogate_sampling.mph');

model.result.report.create('rpt1', 'Report');
model.result.report('rpt1').set('templatesource', 'brief');
model.result.report('rpt1').set('format', 'docx');
model.result.report('rpt1').set('pagebreaklevel', '2');
model.result.report('rpt1').set('enumlevel', 'none');
model.result.report('rpt1').set('imagesize', 'large');
model.result.report('rpt1').feature.create('tp1', 'TitlePage');
model.result.report('rpt1').feature('tp1').label('Tubular Reactor with Jacket');
model.result.report('rpt1').feature('tp1').set('includeauthor', false);
model.result.report('rpt1').feature('tp1').set('includecompany', false);
model.result.report('rpt1').feature('tp1').set('reportdate', 'none');
model.result.report('rpt1').feature('tp1').set('includeversion', false);
model.result.report('rpt1').feature('tp1').set('summary', 'This example demonstrates how to increase the computational speed of a tubular reactor app by using a surrogate model, as opposed to a finite element model. A surrogate model is a simpler, usually computationally cheaper model, which is used to approximate the behavior of a more complex, and often more computationally expensive, model. The faster model evaluation offered by the surrogate model provides the user of the app a more interactive user experience and makes it easier to spread the use of simulations in an organization.');
model.result.report('rpt1').feature.create('sec1', 'Section');
model.result.report('rpt1').feature('sec1').label('Software Information');
model.result.report('rpt1').feature('sec1').feature.create('root1', 'Model');
model.result.report('rpt1').feature('sec1').feature('root1').label('About the Software');
model.result.report('rpt1').feature('sec1').feature('root1').set('includeunitsystem', true);
model.result.report('rpt1').feature('sec1').feature.create('std1', 'Study');
model.result.report('rpt1').feature('sec1').feature('std1').setIndex('children', false, 1, 1);
model.result.report('rpt1').feature('sec1').feature('std1').setIndex('children', false, 2, 1);
model.result.report('rpt1').feature.create('sec2', 'Section');
model.result.report('rpt1').feature('sec2').label('Model Parameters');
model.result.report('rpt1').feature('sec2').feature.create('param1', 'Parameter');
model.result.report('rpt1').feature('sec2').feature('param1').label('Parameters in the Embedded Model');
model.result.report('rpt1').feature.create('sec3', 'Section');
model.result.report('rpt1').feature('sec3').label('Results');
model.result.report('rpt1').feature('sec3').feature.create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec3').feature('pg1').label('Temperature Surface');
model.result.report('rpt1').feature('sec3').feature('pg1').set('noderef', 'pg5');
model.result.report('rpt1').feature('sec3').feature.create('pg2', 'PlotGroup');
model.result.report('rpt1').feature('sec3').feature('pg2').label('Conversion Surface');
model.result.report('rpt1').feature('sec3').feature('pg2').set('noderef', 'pg6');
model.result.report('rpt1').feature('sec3').feature.create('pg3', 'PlotGroup');
model.result.report('rpt1').feature('sec3').feature('pg3').label('Temperature Profile');
model.result.report('rpt1').feature('sec3').feature('pg3').set('noderef', 'pg7');
model.result.report('rpt1').feature('sec3').feature.create('pg4', 'PlotGroup');
model.result.report('rpt1').feature('sec3').feature('pg4').label('Conversion Profile');
model.result.report('rpt1').feature('sec3').feature('pg4').set('noderef', 'pg8');

model.title('Tubular Reactor Surrogate Model Application with Efficient Geometry Sampling');

model.description('This tubular reactor application, together with its associated embedded model, demonstrates how the computational speed can be increased with the use of a surrogate model, as opposed to a fully-fledged finite element model. A surrogate model is a simpler, usually computationally cheaper model, which is used to approximate the behavior of a more complex, and often more computationally expensive, model. The faster model evaluation offered by the surrogate model provides the user of the app a more interactive user experience and makes it easier to spread the use of simulations in an organization. This version uses a technique for efficient geometry sampling by combining design of experiments with coordinate-based sampling of the solution.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('tubular_reactor_surrogate_sampling.mph');

model.modelNode.label('Components');

out = model;
