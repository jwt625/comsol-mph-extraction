function out = model
%
% carbon_deposition.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Chemical_Reaction_Engineering_Module/Reactors_with_Porous_Catalysts');

model.modelNode.create('comp1', true);

model.physics.create('re', 'ReactionEng');
model.physics('re').model('comp1');

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/re', true);

model.physics('re').create('rch1', 'ReactionChem', -1);
model.physics('re').feature('rch1').set('formula', 'CH4=>C+2H2');
model.physics('re').create('spec1', 'SpeciesChem', -1);
model.physics('re').feature('spec1').set('specName', 'a');

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('u_in', '3[cm/s]', 'Average inlet velocity');
model.param.set('c_CH4in', '15[mol/m^3]', 'Inlet concentration, CH4');
model.param.set('c_H2in', '0[mol/m^3]', 'Inlet concentration, H2');
model.param.set('rho', '1[kg/m^3]', 'Density, fluid');
model.param.set('rho_cat', '3630[kg/m^3]', 'Density, Ni Al2O3 catalyst');
model.param.set('eta', '1e-5[Pa*s]', 'Dynamic viscosity, fluid');
model.param.set('por0', '0.4', 'Porosity, clean catalyst');
model.param.set('kappa0', '1e-9[m^2]', 'Permeability, clean catalyst');
model.param.set('rho_soot', '4e3[kg/m^3]', 'Density, soot deposits');
model.param.set('M_a', '161[g/mol]', 'Molar mass, a');
model.param.set('D_CH4H2', '4e-6[m^2/s]', 'Binary diffusion coefficient');
model.param.set('Cp_CH4', '2230[J/(kg*K)]', 'Specific heat capacity, CH4');
model.param.set('Cp_C', '710[J/(kg*K)]', 'Specific heat capacity, C');
model.param.set('Cp_H2', '14400[J/(kg*K)]', 'Specific heat capacity, H2');
model.param.set('Cp_cat', '500[J/(kg*K)]', 'Specific heat capacity, Ni Al2O3 catalyst');
model.param.set('h_CH4', '-7.46e5[J/mol]', 'Molar enthalpy of formation, CH4');
model.param.set('h_C', '0[J/mol]', 'Molar enthalpy of formation, CH4');
model.param.set('h_H2', '0[J/mol]', 'Molar enthalpy of formation, H2');
model.param.set('s_CH4', '186.4[J/(mol*K)]', 'Molar entropy, CH4');
model.param.set('s_C', '5.74[J/(mol*K)]', 'Molar entropy, C');
model.param.set('s_H2', '130.7[J/(mol*K)]', 'Molar entropy, H2');
model.param.set('kt_CH4', '0.030[W/(m*K)]', 'Thermal conductivity, CH4');
model.param.set('kt_H2', '0.185[W/(m*K)]', 'Thermal conductivity, H2');
model.param.set('kt_C', '3[W/(m*K)]', 'Thermal conductivity, C');
model.param.set('kt_cat', '3[W/(m*K)]', 'Thermal conductivity, Ni Al2O3 catalyst');
model.param.set('amount_cat', '300[g/m^3]');

model.variable.create('var1');
model.variable('var1').model('comp1');

% To import content from file, use:
% model.variable('var1').loadFile('FILENAME');
model.variable('var1').set('k', '2.31e-5*exp(20.492-104200[J/mol]/(R_const*re.T))[s^-1]', 'Arrhenius expression');
model.variable('var1').set('Kp', '5.088e5*exp(-91200[J/mol]/(R_const*re.T))', 'Arrhenius expression');
model.variable('var1').set('kH', 'exp(163200[J/mol]/(R_const*re.T)-22.426)', 'Arrhenius expression');
model.variable('var1').set('ka', '6.238e6*exp(135600[J/mol]/(R_const*re.T)-32.077)[m^9*mol^-3*s]', 'Arrhenius expression');
model.variable('var1').set('P_CH4', 're.c_CH4*R_const*re.T/1[atm]', 'CH4, Partial pressure');
model.variable('var1').set('P_H2', 'max(re.c_H2*R_const*re.T/1[atm],eps)', 'H2, Partial pressure');

model.physics('re').feature('rch1').set('ReactionExpression', 'UserDefined');
model.physics('re').feature('rch1').set('r', 're.c_a*k*(P_CH4-P_H2^2/Kp)/(1+kH*sqrt(P_H2))^2');
model.physics('re').create('add1', 'AdditionalSourceFeature', -1);
model.physics('re').feature('add1').setIndex('AddR', '-ka*re.r_1^2*re.c_C*re.c_a', 3, 0);
model.physics('re').feature('inits1').setIndex('initialValue', 0, 0, 0);
model.physics('re').feature('inits1').setIndex('initialValue', 'c_CH4in', 1, 0);
model.physics('re').feature('inits1').setIndex('initialValue', 'c_H2in', 2, 0);
model.physics('re').feature('inits1').setIndex('initialValue', 1, 3, 0);
model.physics('re').prop('energybalance').set('T', '850[K]');
model.physics('re').prop('mixture').set('psource', 'UserDefined');
model.physics('re').prop('mixture').set('p', 'R_const*re.T*(re.c_CH4+re.c_H2)');

model.study('std1').feature('time').set('tlist', 'range(0,500,20000)');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,500,20000)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('tout', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 1.0E-5);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('consistent', 'off');
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').create('glob1', 'Global');
model.result('pg1').feature('glob1').set('expr', {'re.c_CH4' 're.c_C' 're.c_H2' 're.c_a'});
model.result('pg1').feature('glob1').set('descr', {'Concentration' 'Concentration' 'Concentration' 'Concentration'});
model.result('pg1').feature('glob1').set('unit', {'' '' '' ''});
model.result('pg1').feature('glob1').set('expr', {'re.c_CH4' 're.c_C' 're.c_H2' 're.c_a'});
model.result('pg1').feature('glob1').set('descr', {'Concentration' 'Concentration' 'Concentration' 'Concentration'});
model.result('pg1').label('Concentration (re)');
model.result('pg1').feature('glob1').set('xdatasolnumtype', 'level1');
model.result('pg1').run;

model.sol('sol1').copySolution('sol2');
model.sol('sol2').label('With catalyst deactivation');

model.result('pg1').run;
model.result('pg1').set('data', 'dset2');
model.result('pg1').label('Catalyst Activity (re)');
model.result('pg1').set('titletype', 'manual');
model.result('pg1').set('title', 'Catalyst activity');
model.result('pg1').run;
model.result('pg1').feature('glob1').set('expr', {'re.c_a'});
model.result('pg1').feature('glob1').set('descr', {'Concentration'});
model.result('pg1').feature('glob1').set('unit', {'mol/m^3'});
model.result('pg1').feature('glob1').set('linewidth', 2);
model.result('pg1').feature('glob1').set('legend', false);
model.result('pg1').run;

model.physics('re').feature('a').set('cLock', true);

model.sol('sol1').study('std1');
model.sol('sol1').feature.remove('t1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,500,20000)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'pg1');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('tout', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 1.0E-5);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('consistent', 'off');
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').create('glob1', 'Global');
model.result('pg2').feature('glob1').set('expr', {'re.c_CH4' 're.c_C' 're.c_H2'});
model.result('pg2').feature('glob1').set('descr', {'Concentration' 'Concentration' 'Concentration'});
model.result('pg2').feature('glob1').set('unit', {'' '' ''});
model.result('pg2').feature('glob1').set('expr', {'re.c_CH4' 're.c_C' 're.c_H2'});
model.result('pg2').feature('glob1').set('descr', {'Concentration' 'Concentration' 'Concentration'});
model.result('pg2').label('Concentration (re)');
model.result('pg2').feature('glob1').set('xdatasolnumtype', 'level1');
model.result('pg2').run;

model.sol('sol1').copySolution('sol3');
model.sol('sol3').label('Constant catalyst activity');

model.result('pg2').run;
model.result('pg2').label('Concentration Comparison (re)');
model.result('pg2').set('titletype', 'manual');
model.result('pg2').set('title', 'Concentration comparison');
model.result('pg2').set('legendpos', 'lowerright');
model.result('pg2').run;
model.result('pg2').feature('glob1').label('With catalyst deactivation');
model.result('pg2').feature('glob1').set('data', 'dset2');
model.result('pg2').feature('glob1').set('linewidth', 2);
model.result('pg2').feature('glob1').set('legendmethod', 'manual');
model.result('pg2').feature('glob1').setIndex('legends', 'CH<sub>4</sub> with deactivation', 0);
model.result('pg2').feature('glob1').setIndex('legends', 'C with deactivation', 1);
model.result('pg2').feature('glob1').setIndex('legends', 'H<sub>2</sub> with deactivation', 2);
model.result('pg2').feature.duplicate('glob2', 'glob1');
model.result('pg2').run;
model.result('pg2').feature('glob2').label('Constant catalyst activity');
model.result('pg2').feature('glob2').set('data', 'dset3');
model.result('pg2').feature('glob2').set('linestyle', 'dashed');
model.result('pg2').feature('glob2').set('linecolor', 'cyclereset');
model.result('pg2').feature('glob2').setIndex('legends', 'CH<sub>4</sub> constant activity', 0);
model.result('pg2').feature('glob2').setIndex('legends', 'C constant activity', 1);
model.result('pg2').feature('glob2').setIndex('legends', 'H<sub>2</sub> constant activity', 2);
model.result('pg2').run;

model.physics('re').feature('C').set('cLock', true);
model.physics('re').create('sync1', 'ReactionToMph', -1);
model.physics('re').feature('sync1').set('geomToUse', '2Daxi');
model.physics('re').feature('sync1').set('massbalance', 'ConcentratedSpecies');
model.physics('re').feature('sync1').set('energybalance', 'PorousMediaHeatTransfer');
model.physics('re').feature('sync1').set('momentumbalance', 'LaminarFlow');
model.physics('re').prop('synchronize').set('synchronize', '1');

model.modelNode.create('comp2', true);

model.physics('re').feature('sync1').set('model', {'comp2'});

model.geom.create('geom1', 2);
model.geom('geom1').model('comp2');
model.geom('geom1').axisymmetric(true);
model.geom('geom1').label('Geometry 1(2Daxi)');

model.physics('re').feature('sync1').set('genom', {'geom1'});

model.mesh.create('mesh1', 'geom1');

model.study.create('std2');

model.physics('re').feature('sync1').set('studyname', {'std2'});

model.study('std2').create('stat', 'Stationary');

model.physics.create('chem1', 'Chemistry', 'geom1');
model.physics('chem1').model('comp2');
model.physics('re').feature('sync1').set('Chemistry', {'chem1'});
model.physics.create('tcs', 'ConcentratedSpecies', 'geom1');
model.physics('tcs').model('comp2');
model.physics('tcs').prop('AdvancedSettings').set('UsePseudoTime', true);
model.physics('chem1').prop('TPFeatureInput').set('T_src', 'userdef');
model.physics('chem1').prop('TPFeatureInput').set('T', '850[K]');
model.physics('chem1').prop('mixture').set('mixture', 'gas');
model.physics('chem1').prop('mixture').set('gasDensitySel', 'Automatic');
model.physics('chem1').prop('TPFeatureInput').set('p_src', 'userdef');
model.physics('chem1').prop('TPFeatureInput').set('p', 'R_const*chem.T*(chem.c_CH4+chem.c_H2)');
model.physics('chem1').prop('Activity').set('useActivity', '0');
model.physics('chem1').prop('chemkin').set('chemkin', '0');
model.physics('chem1').prop('ChemistryCommonProperty').set('VolumetricConcentrationGlobalActivityStandardState', '1[mol/m^3]');
model.physics('chem1').prop('ChemistryCommonProperty').set('SurfaceSpeciesConcentrationType', 'SurfaceConcentration');
model.physics('chem1').prop('ChemistryCommonProperty').set('SurfaceGlobalActivityStandardState', '1[mol/m^2]');
model.physics('chem1').prop('ChemistryCommonProperty').set('SpeciesrateUserDefinedList', {'C' 'a'});
model.physics('chem1').prop('ChemistryCommonProperty').set('AdditionalSourceFeature', '1');
model.physics('chem1').prop('ActiveSpecies').set('SumActiveSpecies', '4');
model.physics('chem1').prop('ActiveSpecies').set('NumActiveVolumeSpecies', '4');
model.physics('chem1').prop('ActiveSpecies').set('NumActiveSurfaceSpecies', '0');
model.physics('chem1').prop('ActiveSpecies').set('NumActiveSurfaceSpeciesVariable', '0');
model.physics('chem1').prop('ActiveSpecies').set('surface', '0');
model.physics('chem1').prop('solventIsSet').set('solventIsSet', '0');
model.physics('chem1').create('rch1', 'ReactionChem');
model.physics('chem1').feature('rch1').set('rSequenceNo', '1');
model.physics('chem1').feature('rch1').set('formula', 'CH4 => C + 2 H2');
model.physics('chem1').feature('rch1').set('updatechem', '0');
model.physics('chem1').feature('rch1').set('useArrhenius', '0');
model.physics('chem1').feature('rch1').set('ReactionExpression', 'UserDefined');
model.physics('chem1').feature('rch1').set('r', 'chem.c_a*k*(P_CH4-P_H2^2/Kp)/(1+kH*sqrt(P_H2))^2');
model.physics('chem1').feature('rch1').set('kf', '1');
model.physics('chem1').feature('rch1').set('bulkFwdOrder', '1');
model.physics('chem1').feature('rch1').set('surfFwdOrder', '0');
model.physics('chem1').feature('rch1').label('1: CH4 => C + 2 H2');
model.physics('chem1').feature('rch1').set('rClass', 'volumetric');
model.physics('chem1').feature('CH4').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('CH4').set('sisDef', '1');
model.physics('chem1').feature('CH4').set('specLabel', 'CH4');
model.physics('chem1').feature('CH4').set('speciesNameInput', 'CH4');
model.physics('chem1').feature('CH4').set('specName', 'CH4');
model.physics('chem1').feature('CH4').set('enableChemicalFormulaCheckbox', '1');
model.physics('chem1').feature('CH4').set('chemicalFormula', 'CH4');
model.physics('chem1').feature('CH4').set('sType', 'volumetric');
model.physics('chem1').feature('CH4').set('M', '16.04252[g/mol]');
model.physics('chem1').feature('CH4').set('z', '0');
model.physics('chem1').feature('CH4').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('CH4').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('CH4').set('mu', '0[C*m]');
model.physics('chem1').feature('CH4').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('CH4').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('CH4').set('ActivityCoefficient', '1');
model.physics('chem1').feature('CH4').set('cLock', '0');
model.physics('chem1').feature('CH4').set('Dependent', '0');
model.physics('chem1').feature('CH4').set('dependent', '0');
model.physics('chem1').feature('CH4').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('CH4').set('AdditionalSource', '1');
model.physics('chem1').feature('CH4').set('AddR', '0');
model.physics('chem1').feature('CH4').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('CH4').set('Tlo', '300[K]');
model.physics('chem1').feature('CH4').set('Tmid', '1000[K]');
model.physics('chem1').feature('CH4').set('Thi', '5000[K]');
model.physics('chem1').feature('CH4').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('CH4').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('CH4').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('CH4').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('CH4').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('CH4').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('CH4').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('CH4').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('CH4').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('CH4').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('CH4').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('CH4').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('CH4').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('CH4').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').feature('C').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('C').set('sisDef', '1');
model.physics('chem1').feature('C').set('specLabel', 'C');
model.physics('chem1').feature('C').set('speciesNameInput', 'C');
model.physics('chem1').feature('C').set('specName', 'C');
model.physics('chem1').feature('C').set('enableChemicalFormulaCheckbox', '1');
model.physics('chem1').feature('C').set('chemicalFormula', 'C');
model.physics('chem1').feature('C').set('sType', 'volumetric');
model.physics('chem1').feature('C').set('M', '12.0106[g/mol]');
model.physics('chem1').feature('C').set('z', '0');
model.physics('chem1').feature('C').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('C').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('C').set('mu', '0[C*m]');
model.physics('chem1').feature('C').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('C').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('C').set('ActivityCoefficient', '1');
model.physics('chem1').feature('C').set('cLock', '1');
model.physics('chem1').feature('C').set('Dependent', '0');
model.physics('chem1').feature('C').set('dependent', '0');
model.physics('chem1').feature('C').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('C').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('C').set('Tlo', '300[K]');
model.physics('chem1').feature('C').set('Tmid', '1000[K]');
model.physics('chem1').feature('C').set('Thi', '5000[K]');
model.physics('chem1').feature('C').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('C').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('C').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('C').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('C').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('C').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('C').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('C').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('C').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('C').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('C').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('C').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('C').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('C').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').feature('H2').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('H2').set('sisDef', '1');
model.physics('chem1').feature('H2').set('specLabel', 'H2');
model.physics('chem1').feature('H2').set('speciesNameInput', 'H2');
model.physics('chem1').feature('H2').set('specName', 'H2');
model.physics('chem1').feature('H2').set('enableChemicalFormulaCheckbox', '1');
model.physics('chem1').feature('H2').set('chemicalFormula', 'H2');
model.physics('chem1').feature('H2').set('sType', 'volumetric');
model.physics('chem1').feature('H2').set('M', '2.01596[g/mol]');
model.physics('chem1').feature('H2').set('z', '0');
model.physics('chem1').feature('H2').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('H2').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('H2').set('mu', '0[C*m]');
model.physics('chem1').feature('H2').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('H2').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('H2').set('ActivityCoefficient', '1');
model.physics('chem1').feature('H2').set('cLock', '0');
model.physics('chem1').feature('H2').set('Dependent', '0');
model.physics('chem1').feature('H2').set('dependent', '0');
model.physics('chem1').feature('H2').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('H2').set('AdditionalSource', '1');
model.physics('chem1').feature('H2').set('AddR', '0');
model.physics('chem1').feature('H2').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('H2').set('Tlo', '300[K]');
model.physics('chem1').feature('H2').set('Tmid', '1000[K]');
model.physics('chem1').feature('H2').set('Thi', '5000[K]');
model.physics('chem1').feature('H2').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('H2').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('H2').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('H2').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('H2').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('H2').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('H2').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('H2').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('H2').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('H2').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('H2').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('H2').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('H2').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('H2').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').create('a', 'SpeciesChem');
model.physics('chem1').feature('a').set('SpeciesSource', 'FreeSpecies');
model.physics('chem1').feature('a').set('sisDef', '1');
model.physics('chem1').feature('a').set('specLabel', 'a');
model.physics('chem1').feature('a').set('speciesNameInput', 'a');
model.physics('chem1').feature('a').set('specName', 'a');
model.physics('chem1').feature('a').set('enableChemicalFormulaCheckbox', '0');
model.physics('chem1').feature('a').set('chemicalFormula', '');
model.physics('chem1').feature('a').label('Species: a');
model.physics('chem1').feature('a').active(true);
model.physics('chem1').feature('a').set('sType', 'volumetric');
model.physics('chem1').feature('a').set('M', '0.0[kg/mol]');
model.physics('chem1').feature('a').set('z', '0');
model.physics('chem1').feature('a').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('a').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('a').set('mu', '0[C*m]');
model.physics('chem1').feature('a').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('a').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('a').set('ActivityCoefficient', '1');
model.physics('chem1').feature('a').set('cLock', '1');
model.physics('chem1').feature('a').set('Dependent', '0');
model.physics('chem1').feature('a').set('dependent', '0');
model.physics('chem1').feature('a').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('a').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('a').set('Tlo', '300[K]');
model.physics('chem1').feature('a').set('Tmid', '1000[K]');
model.physics('chem1').feature('a').set('Thi', '5000[K]');
model.physics('chem1').feature('a').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('a').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('a').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('a').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('a').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('a').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('a').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('a').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('a').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('a').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('a').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('a').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('a').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('a').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').prop('simpropChem').set('rSequenceNo', '1');
model.physics('chem1').prop('simpropChem').set('sSequenceNo', '4');
model.physics('chem1').prop('mixture').set('hasPropertyPackage', '0');
model.physics('chem1').prop('mixture').set('PropertyPackage', '');
model.physics('chem1').prop('mixture').set('Thermodynamics', '0');
model.physics('tcs').field('massfraction').component({'wCH4' 'wH2'});
model.physics('tcs').feature('init1').set('w0', {'chem.M_CH4*c_CH4in/(chem.M_CH4*c_CH4in+chem.M_H2*c_H2in)' 'chem.M_H2*c_H2in/(chem.M_CH4*c_CH4in+chem.M_H2*c_H2in)'});
model.physics('tcs').feature.create('reac1', 'ReactionSources');
model.physics('tcs').feature('reac1').selection.all;
model.physics('tcs').feature('reac1').set('MassTransferToOtherPhases', true);
model.physics('tcs').feature('reac1').set('ReactingVolumeType', 'TotalVolume');
model.physics('chem1').prop('mixture').set('ConcentrationType', 'MassFraction');
model.physics('chem1').prop('calcTransport').set('calcTransport', '1');
model.physics('tcs').feature('cdm1').set('rho_src', 'root.comp2.chem.rho_chem');
model.physics('chem1').prop('ChemistryModelInputParameter').set('MassTransfer', 'tcs');
model.physics('chem1').prop('ChemistryModelInputParameter').set('ConcentrationInput', {'UserDefined' 'wCH4' 'wH2' 'UserDefined'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('ConcentrationValue', {'0' 'Solved for' 'Solved for' '1'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('uselog', {'0' 'cCH4' 'cH2' '1'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('SolidConcentration', {});
model.physics('chem1').prop('ChemistryModelInputParameter').set('csurf', {});
model.physics('chem1').prop('ChemistryModelInputParameter').set('AqueousSpeciesConcentration', {});
model.physics('tcs').feature('sp1').set('M_wCH4_src', 'root.comp2.chem.M_CH4');
model.physics('tcs').feature('sp1').set('M_wH2_src', 'root.comp2.chem.M_H2');
model.physics('tcs').feature('sp1').set('z', {'0' '0'});
model.physics('tcs').feature('cdm1').set('Dik', {'1' 'comp2.chem.D_CH4_H2' 'comp2.chem.D_CH4_H2' '1'});
model.physics('tcs').feature('cdm1').setIndex('DiffusivityFrom', 'comp2.chem.D_CH4_H2', 0, 0);
model.physics('tcs').feature('reac1').setIndex('R_wCH4_src', 'root.comp2.chem.Rw_CH4', 0);
model.physics('tcs').feature('reac1').setIndex('R_wH2_src', 'root.comp2.chem.Rw_H2', 0);
model.physics.create('ht1', 'PorousMediaHeatTransfer', 'geom1');
model.physics('ht1').model('comp2');
model.physics('ht1').feature('porous1').feature('fluid1').setIndex('fluidType', 'idealGas', 0);
model.physics('ht1').feature('porous1').feature('fluid1').setIndex('gasConstantType', 'numberAve', 0);
model.physics('ht1').feature('porous1').feature('fluid1').setIndex('gamma_mat', 'userdef', 0);
model.physics('ht1').feature('init1').set('Tinit', '298.15[K]');
model.physics('ht1').feature.create('hs1', 'HeatSource');
model.physics('ht1').feature('hs1').selection.all;
model.physics('ht1').feature('hs1').set('Q0_src', 'root.comp2.chem.Qtot');
model.physics.create('spf1', 'LaminarFlow', 'geom1');
model.physics('spf1').model('comp2');
model.physics('spf1').prop('PhysicalModelProperty').set('Compressibility', 'WeaklyCompressible');
model.physics('re').feature('sync1').set('geomToUse', 'geom1');
model.physics('re').feature('sync1').set('massbalance', 'tcs');
model.physics('tcs').feature('cdm1').set('u_src', 'root.comp2.u');
model.physics('tcs').feature('cdm1').set('minput_temperature_src', 'root.comp2.T');
model.physics('tcs').feature('cdm1').set('minput_pressure_src', 'root.comp2.spf.pA');
model.physics('re').feature('sync1').set('energybalance', 'ht1');
model.physics('ht1').feature('porous1').feature('fluid1').set('minput_pressure_src', 'root.comp2.spf.pA');
model.physics('chem1').prop('TPFeatureInput').set('T_src', 'root.comp2.T');
model.physics('ht1').feature('porous1').feature('fluid1').set('molarmass_mat', 'root.comp2.chem.M_CH4');
model.physics('ht1').feature('porous1').feature('fluid1').set('Cp_mat', 'root.comp2.chem.Cptot');
model.physics('ht1').feature('porous1').feature('fluid1').set('k_mat', 'root.comp2.chem.krr');
model.physics('ht1').feature('porous1').feature('fluid1').set('rho_mat', 'root.comp2.tcs.rho');
model.physics('ht1').feature('porous1').feature('fluid1').set('gamma_not_IG_mat', 'root.comp2.chem.gamma');
model.physics('ht1').feature('porous1').feature('fluid1').set('u_src', 'root.comp2.u');
model.physics('ht1').feature('hs1').setIndex('Q0_src', 'userdef', 0);
model.physics('ht1').feature('hs1').set('Q0', '(1-comp2.ht.porous.pm.theta)*comp2.chem.Qtot');
model.physics('ht1').feature('porous1').feature('fluid1').set('Cp_mat', 'root.comp2.chem.Cptot');
model.physics('ht1').feature('porous1').feature('fluid1').set('heatcapacity_mat', 'root.comp2.chem.Cptot');
model.physics('re').feature('sync1').set('momentumbalance', 'spf1');
model.physics('spf1').feature('fp1').set('rho_mat', 'root.comp2.tcs.rho');
model.physics('spf1').feature('fp1').set('mu_mat', 'root.comp2.chem.eta');
model.physics('chem1').prop('TPFeatureInput').set('p_src', 'root.comp2.spf.pA');
model.physics('re').feature('sync1').set('genom', {'geom1'});
model.physics('re').feature('sync1').set('studyname', {'std2'});
model.physics('chem1').prop('StudyStep').set('StudyStep', 'std2/stat');
model.physics('chem1').feature('dcont1').set('StudyStep', 'std2/stat');
model.physics('chem1').feature('rch1').set('StudyStep', 'std2/stat');
model.physics('chem1').feature('CH4').set('StudyStep', 'std2/stat');
model.physics('chem1').feature('C').set('StudyStep', 'std2/stat');
model.physics('chem1').feature('H2').set('StudyStep', 'std2/stat');
model.physics('chem1').feature('a').set('StudyStep', 'std2/stat');
model.physics('tcs').prop('StudyStep').set('StudyStep', 'std2/stat');
model.physics('tcs').feature('sp1').set('StudyStep', 'std2/stat');
model.physics('tcs').feature('cdm1').set('StudyStep', 'std2/stat');
model.physics('tcs').feature('init1').set('StudyStep', 'std2/stat');
model.physics('tcs').feature('axi1').set('StudyStep', 'std2/stat');
model.physics('tcs').feature('nflx1').set('StudyStep', 'std2/stat');
model.physics('tcs').feature('dcont1').set('StudyStep', 'std2/stat');
model.physics('tcs').feature('reac1').set('StudyStep', 'std2/stat');
model.physics('ht1').prop('StudyStep').set('StudyStep', 'std2/stat');
model.physics('ht1').feature('porous1').set('StudyStep', 'std2/stat');
model.physics('ht1').feature('init1').set('StudyStep', 'std2/stat');
model.physics('ht1').feature('axi1').set('StudyStep', 'std2/stat');
model.physics('ht1').feature('ins1').set('StudyStep', 'std2/stat');
model.physics('ht1').feature('idi1').set('StudyStep', 'std2/stat');
model.physics('ht1').feature('ltneb1').set('StudyStep', 'std2/stat');
model.physics('ht1').feature('os1').set('StudyStep', 'std2/stat');
model.physics('ht1').feature('dcont1').set('StudyStep', 'std2/stat');
model.physics('ht1').feature('hs1').set('StudyStep', 'std2/stat');
model.physics('spf1').prop('StudyStep').set('StudyStep', 'std2/stat');
model.physics('spf1').feature('fp1').set('StudyStep', 'std2/stat');
model.physics('spf1').feature('init1').set('StudyStep', 'std2/stat');
model.physics('spf1').feature('axi1').set('StudyStep', 'std2/stat');
model.physics('spf1').feature('wallbc1').set('StudyStep', 'std2/stat');
model.physics('spf1').feature('grav1').set('StudyStep', 'std2/stat');
model.physics('spf1').feature('dcont1').set('StudyStep', 'std2/stat');

model.study('std1').feature('time').setSolveFor('/physics/chem1', false);
model.study('std1').feature('time').setSolveFor('/physics/tcs', false);
model.study('std1').feature('time').setSolveFor('/physics/ht1', false);
model.study('std1').feature('time').setSolveFor('/physics/spf1', false);
model.study('std2').feature('stat').setSolveFor('/physics/re', false);

model.geom('geom1').run;

model.variable.create('var2');
model.variable('var2').model('comp2');

% To import content from file, use:
% model.variable('var2').loadFile('FILENAME');
model.variable('var2').set('k', '2.31e-5*amount_cat*1e3*exp(20.492-104200[J/mol]/(R_const*chem.T))[m^3*s^-1*kg^-1]', 'Arrhenius expression');
model.variable('var2').set('Kp', '5.088e5*exp(-91200[J/mol]/(R_const*chem.T))', 'Arrhenius expression');
model.variable('var2').set('kH', 'exp(163200[J/mol]/(R_const*chem.T)-22.426)', 'Arrhenius expression');
model.variable('var2').set('P_CH4', 'chem.c_CH4*R_const*chem.T/1[atm]', 'CH4, Partial pressure');
model.variable('var2').set('P_H2', 'max(chem.c_H2*R_const*chem.T/1[atm],eps)', 'H2, Partial pressure');
model.variable('var2').set('kappa', 'kappa0*(por/por0)^3.55', 'permeability');
model.variable('var2').set('Tvar', 'T');

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', [0.01 0.04]);
model.geom('geom1').run('r1');
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').set('size', [0.015 0.12]);
model.geom('geom1').feature('r2').set('pos', [0 0.04]);
model.geom('geom1').run('r2');
model.geom('geom1').create('r3', 'Rectangle');
model.geom('geom1').feature('r3').set('size', [0.01 0.04]);
model.geom('geom1').feature('r3').set('pos', [0 0.16]);
model.geom('geom1').runPre('fin');
model.geom('geom1').create('fil1', 'Fillet');
model.geom('geom1').feature('fil1').selection('pointinsketch').set('r2', [2 3]);
model.geom('geom1').feature('fil1').set('radius', 0.001);
model.geom('geom1').runPre('fin');
model.geom('geom1').create('uni1', 'Union');
model.geom('geom1').feature('uni1').selection('input').set({'fil1' 'r1' 'r3'});
model.geom('geom1').feature('uni1').set('intbnd', false);
model.geom('geom1').runPre('fin');
model.geom('geom1').create('fil2', 'Fillet');
model.geom('geom1').feature('fil2').selection('point').set('uni1', [6 7]);
model.geom('geom1').feature('fil2').set('radius', 0.004);
model.geom('geom1').run('fil2');
model.geom('geom1').create('r4', 'Rectangle');
model.geom('geom1').feature('r4').set('size', [0.015 0.112]);
model.geom('geom1').feature('r4').set('pos', [0 0.044]);
model.geom('geom1').runPre('fin');

model.physics.create('dode', 'DomainODE', 'geom1', {'u2'});

model.study('std1').feature('time').setSolveFor('/physics/dode', true);
model.study('std2').feature('stat').setSolveFor('/physics/dode', true);

model.physics('dode').prop('EquationForm').set('form', 'Automatic');

model.geom('geom1').run;

model.physics('dode').label('Porosity Change');
model.physics('dode').selection.set([2]);
model.physics('dode').prop('Units').setIndex('CustomSourceTermUnit', '1/s', 0, 0);
model.physics('dode').field('dimensionless').field('por');
model.physics('dode').field('dimensionless').component(1, 'por');
model.physics('dode').feature('dode1').setIndex('f', '-por*chem.r_1*chem.M_C/rho_soot', 0);
model.physics('dode').feature('init1').set('por', 'por0');
model.physics('chem1').feature('CH4').set('GasThermalConductivitySel', 'UserDefined');
model.physics('chem1').feature('CH4').set('kgas', 'kt_CH4');
model.physics('chem1').feature('CH4').set('speciesEnthalpy', 'UserDefined');
model.physics('chem1').feature('CH4').set('Cp', 'Cp_CH4*chem.M_CH4');
model.physics('chem1').feature('CH4').set('h', 'h_CH4');
model.physics('chem1').feature('CH4').set('s', 's_CH4');
model.physics('chem1').feature('H2').set('GasThermalConductivitySel', 'UserDefined');
model.physics('chem1').feature('H2').set('kgas', 'kt_H2');
model.physics('chem1').feature('H2').set('speciesEnthalpy', 'UserDefined');
model.physics('chem1').feature('H2').set('Cp', 'Cp_H2*chem.M_H2');
model.physics('chem1').feature('H2').set('h', 'h_H2');
model.physics('chem1').feature('H2').set('s', 's_H2');
model.physics('chem1').feature('C').set('GasThermalConductivitySel', 'UserDefined');
model.physics('chem1').feature('C').set('kgas', 'kt_C');
model.physics('chem1').feature('C').set('speciesEnthalpy', 'UserDefined');
model.physics('chem1').feature('C').set('Cp', 'Cp_C*chem.M_C');
model.physics('chem1').feature('C').set('h', 'h_C');
model.physics('chem1').feature('C').set('s', 's_C');
model.physics('chem1').feature('a').set('M', 'M_a');
model.physics('chem1').feature('a').set('GasThermalConductivitySel', 'UserDefined');
model.physics('chem1').feature('a').set('kgas', 'kt_cat');
model.physics('tcs').prop('TransportMechanism').set('MassTransferInPorousMedia', true);
model.physics('tcs').feature('cdm1').setIndex('DiffusivityFrom', 'UserDefined', 0, 0);
model.physics('tcs').feature('cdm1').setIndex('DF', 'D_CH4H2', 0, 0);
model.physics('tcs').feature('reac1').selection.set([2]);
model.physics('tcs').feature('reac1').set('ReactingVolumeType', 'PoreVolume');
model.physics('tcs').create('in1', 'Inflow', 1);
model.physics('tcs').feature('in1').selection.set([2]);
model.physics('tcs').feature('in1').setIndex('wbnd', 0, 1);
model.physics('tcs').create('out1', 'Outflow', 1);
model.physics('tcs').feature('out1').selection.set([9]);
model.physics('tcs').create('porous1', 'PorousMedium', 2);
model.physics('tcs').feature('porous1').selection.set([2]);
model.physics('tcs').feature('porous1').feature('fluid1').set('minput_pressure_src', 'root.comp2.spf.pA');
model.physics('tcs').feature('porous1').feature('fluid1').set('u_src', 'root.comp2.u');
model.physics('tcs').feature('porous1').feature('fluid1').setIndex('DiffusivityFrom', 'UserDefined', 0, 0);
model.physics('tcs').feature('porous1').feature('fluid1').setIndex('DF', 'D_CH4H2', 0, 0);
model.physics('tcs').feature('porous1').feature('pm1').set('epsilon_p', 'por');
model.physics('ht1').feature('porous1').feature('fluid1').set('molarmass_mat', 'root.comp2.chem.Mn');
model.physics('ht1').feature('porous1').feature('pm1').set('poro_mat', 'userdef');
model.physics('ht1').feature('porous1').feature('pm1').set('poro', 'por');
model.physics('ht1').feature('porous1').feature('pm1').set('porousMatrixPropertiesType', 'solidPhaseProperties');
model.physics('ht1').feature('porous1').feature('pm1').set('k_sp_mat', 'userdef');
model.physics('ht1').feature('porous1').feature('pm1').set('k_sp', {'kt_cat' '0' '0' '0' 'kt_cat' '0' '0' '0' 'kt_cat'});
model.physics('ht1').feature('porous1').feature('pm1').set('rho_sp_mat', 'userdef');
model.physics('ht1').feature('porous1').feature('pm1').set('rho_sp', 'rho_cat');
model.physics('ht1').feature('porous1').feature('pm1').set('Cp_sp_mat', 'userdef');
model.physics('ht1').feature('porous1').feature('pm1').set('Cp_sp', 'Cp_cat');
model.physics('ht1').feature('hs1').selection.set([2]);
model.physics('ht1').feature('hs1').set('Q0', 'chem.Qtot*por');
model.physics('ht1').create('temp1', 'TemperatureBoundary', 1);
model.physics('ht1').feature('temp1').selection.set([2]);
model.physics('ht1').create('ofl1', 'ConvectiveOutflow', 1);
model.physics('ht1').feature('ofl1').selection.set([9]);
model.physics('ht1').create('temp2', 'TemperatureBoundary', 1);
model.physics('ht1').feature('temp2').selection.set([13]);
model.physics('ht1').feature('temp2').set('T0', '850[K]');
model.physics('ht1').create('fluid1', 'FluidHeatTransferModel', 2);
model.physics('ht1').feature('fluid1').selection.set([1 3]);
model.physics('ht1').feature('fluid1').set('u_src', 'root.comp2.u');
model.physics('ht1').feature('fluid1').set('k_mat', 'root.comp2.chem.krr');
model.physics('ht1').feature('fluid1').set('fluidType', 'gasLiquid');
model.physics('ht1').feature('fluid1').set('rho_mat', 'root.comp2.chem.rho');
model.physics('ht1').feature('fluid1').set('Cp_mat', 'root.comp2.chem.Cptot');
model.physics('ht1').feature('fluid1').set('gamma_not_IG_mat', 'userdef');
model.physics('spf1').prop('PhysicalModelProperty').set('EnablePorousMediaDomains', true);
model.physics('spf1').feature('fp1').set('rho_mat', 'root.comp2.chem.rho');
model.physics('spf1').create('porous1', 'PorousMedium', 2);
model.physics('spf1').feature('porous1').selection.set([2]);
model.physics('spf1').feature('porous1').feature('fluid1').set('rho_mat', 'root.comp2.chem.rho');
model.physics('spf1').feature('porous1').feature('fluid1').set('mu_mat', 'root.comp2.chem.eta');
model.physics('spf1').feature('porous1').feature('pm1').set('epsilon_p_mat', 'userdef');
model.physics('spf1').feature('porous1').feature('pm1').set('epsilon_p', 'por');
model.physics('spf1').feature('porous1').feature('pm1').set('kappa_mat', 'userdef');
model.physics('spf1').feature('porous1').feature('pm1').set('kappa', {'kappa' '0' '0' '0' 'kappa' '0' '0' '0' 'kappa'});
model.physics('spf1').create('inl1', 'InletBoundary', 1);
model.physics('spf1').feature('inl1').selection.set([2]);
model.physics('spf1').feature('inl1').set('BoundaryCondition', 'FullyDevelopedFlow');
model.physics('spf1').feature('inl1').set('Uavfdf', 'u_in');
model.physics('spf1').create('out1', 'OutletBoundary', 1);
model.physics('spf1').feature('out1').selection.set([9]);
model.physics('spf1').create('ms1', 'MassSource', 2);
model.physics('spf1').feature('ms1').selection.set([2]);
model.physics('spf1').feature('ms1').set('Qm', '(chem.Rw_CH4+chem.Rw_H2)*por');

model.study('std2').feature('stat').setEntry('activate', 'chem1', false);
model.study('std2').feature('stat').setEntry('activate', 'tcs', false);
model.study('std2').feature('stat').setEntry('activate', 'ht1', false);
model.study('std2').feature('stat').setEntry('activate', 'dode', false);
model.study('std2').create('time', 'Transient');
model.study('std2').feature('time').set('tlist', 'range(0,50,1000) range(2000,1000,20000)');
model.study('std2').feature('time').setEntry('activate', 're', false);

model.sol.create('sol4');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1 2 3]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1 2 3]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1 2 3]);

model.sol('sol4').study('std2');
model.sol('sol4').create('st1', 'StudyStep');
model.sol('sol4').feature('st1').set('study', 'std2');
model.sol('sol4').feature('st1').set('studystep', 'stat');
model.sol('sol4').create('v1', 'Variables');
model.sol('sol4').feature('v1').set('control', 'stat');
model.sol('sol4').create('s1', 'Stationary');
model.sol('sol4').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol4').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol4').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol4').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol4').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol4').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol4').feature('s1').create('d1', 'Direct');
model.sol('sol4').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('s1').feature('d1').label('Direct, fluid flow variables (spf1)');
model.sol('sol4').feature('s1').create('i1', 'Iterative');
model.sol('sol4').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol4').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol4').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol4').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol4').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol4').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol4').feature('s1').feature('i1').label('AMG, fluid flow variables (spf1)');
model.sol('sol4').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp2_spf_inl1_Pinlfdf'});
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp2_spf_inl1_Pinlfdf'});
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol4').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol4').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol4').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol4').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol4').feature('s1').feature.remove('fcDef');
model.sol('sol4').create('su1', 'StoreSolution');
model.sol('sol4').create('st2', 'StudyStep');
model.sol('sol4').feature('st2').set('study', 'std2');
model.sol('sol4').feature('st2').set('studystep', 'time');
model.sol('sol4').create('v2', 'Variables');
model.sol('sol4').feature('v2').set('initmethod', 'sol');
model.sol('sol4').feature('v2').set('initsol', 'sol4');
model.sol('sol4').feature('v2').set('initsoluse', 'sol5');
model.sol('sol4').feature('v2').set('notsolmethod', 'sol');
model.sol('sol4').feature('v2').set('notsol', 'sol4');
model.sol('sol4').feature('v2').set('notsoluse', 'sol5');
model.sol('sol4').feature('v2').set('control', 'time');
model.sol('sol4').create('t1', 'Time');
model.sol('sol4').feature('t1').set('tlist', 'range(0,50,1000) range(2000,1000,20000)');
model.sol('sol4').feature('t1').set('plot', 'off');
model.sol('sol4').feature('t1').set('plotgroup', 'pg1');
model.sol('sol4').feature('t1').set('plotfreq', 'tout');
model.sol('sol4').feature('t1').set('probesel', 'all');
model.sol('sol4').feature('t1').set('probes', {});
model.sol('sol4').feature('t1').set('probefreq', 'tsteps');
model.sol('sol4').feature('t1').set('rtol', 0.005);
model.sol('sol4').feature('t1').set('atolglobalmethod', 'scaled');
model.sol('sol4').feature('t1').set('atolglobalfactor', 0.05);
model.sol('sol4').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol4').feature('t1').set('atolmethod', {'comp2_p' 'scaled' 'comp2_por' 'global' 'comp2_T' 'global' 'comp2_u' 'global' 'comp2_wH2' 'global'  ...
'comp1_ODE1' 'global' 'comp1_ODE2' 'global' 'comp2_spf_inl1_Pinlfdf' 'global'});
model.sol('sol4').feature('t1').set('atol', {'comp2_p' '1e-3' 'comp2_por' '1e-3' 'comp2_T' '1e-3' 'comp2_u' '1e-3' 'comp2_wH2' '1e-3'  ...
'comp1_ODE1' '1e-3' 'comp1_ODE2' '1e-3' 'comp2_spf_inl1_Pinlfdf' '1e-3'});
model.sol('sol4').feature('t1').set('atolvaluemethod', {'comp2_p' 'factor' 'comp2_por' 'factor' 'comp2_T' 'factor' 'comp2_u' 'factor' 'comp2_wH2' 'factor'  ...
'comp1_ODE1' 'factor' 'comp1_ODE2' 'factor' 'comp2_spf_inl1_Pinlfdf' 'factor'});
model.sol('sol4').feature('t1').set('atolfactor', {'comp2_p' '1' 'comp2_por' '0.1' 'comp2_T' '0.1' 'comp2_u' '0.1' 'comp2_wH2' '0.1'  ...
'comp1_ODE1' '0.1' 'comp1_ODE2' '0.1' 'comp2_spf_inl1_Pinlfdf' '0.1'});
model.sol('sol4').feature('t1').set('reacf', true);
model.sol('sol4').feature('t1').set('storeudot', true);
model.sol('sol4').feature('t1').set('endtimeinterpolation', true);
model.sol('sol4').feature('t1').set('estrat', 'exclude');
model.sol('sol4').feature('t1').set('rhoinf', 0.5);
model.sol('sol4').feature('t1').set('predictor', 'constant');
model.sol('sol4').feature('t1').set('maxorder', 2);
model.sol('sol4').feature('t1').set('stabcntrl', true);
model.sol('sol4').feature('t1').set('bwinitstepfrac', '0.01');
model.sol('sol4').feature('t1').set('control', 'time');
model.sol('sol4').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol4').feature('t1').create('seDef', 'Segregated');
model.sol('sol4').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol4').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol4').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol4').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol4').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol4').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol4').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol4').feature('t1').feature('fc1').set('ntolfact', 0.5);
model.sol('sol4').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol4').feature('t1').create('d1', 'Direct');
model.sol('sol4').feature('t1').feature('d1').set('linsolver', 'mumps');
model.sol('sol4').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('t1').feature('d1').label('Direct (Merged)');
model.sol('sol4').feature('t1').create('i1', 'Iterative');
model.sol('sol4').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol4').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol4').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol4').feature('t1').feature('i1').set('rhob', 20);
model.sol('sol4').feature('t1').feature('i1').set('maxlinit', 100);
model.sol('sol4').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol4').feature('t1').feature('i1').label('AMG, fluid flow variables (spf1)');
model.sol('sol4').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp2_spf_inl1_Pinlfdf'});
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp2_spf_inl1_Pinlfdf'});
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('t1').create('i2', 'Iterative');
model.sol('sol4').feature('t1').feature('i2').set('linsolver', 'gmres');
model.sol('sol4').feature('t1').feature('i2').set('prefuntype', 'left');
model.sol('sol4').feature('t1').feature('i2').set('itrestart', 50);
model.sol('sol4').feature('t1').feature('i2').set('rhob', 400);
model.sol('sol4').feature('t1').feature('i2').set('maxlinit', 50);
model.sol('sol4').feature('t1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol4').feature('t1').feature('i2').label('AMG, mass fractions (tcs)');
model.sol('sol4').feature('t1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol4').feature('t1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol4').feature('t1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol4').feature('t1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol4').feature('t1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol4').feature('t1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol4').feature('t1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol4').feature('t1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol4').feature('t1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol4').feature('t1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol4').feature('t1').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol4').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol4').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol4').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol4').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol4').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol4').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol4').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol4').feature('t1').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol4').feature('t1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol4').feature('t1').feature('i2').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol4').feature('t1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol4').feature('t1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol4').feature('t1').feature('i2').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol4').feature('t1').feature('i2').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol4').feature('t1').feature('i2').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol4').feature('t1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol4').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('t1').create('i3', 'Iterative');
model.sol('sol4').feature('t1').feature('i3').set('linsolver', 'gmres');
model.sol('sol4').feature('t1').feature('i3').set('prefuntype', 'left');
model.sol('sol4').feature('t1').feature('i3').set('itrestart', 50);
model.sol('sol4').feature('t1').feature('i3').set('rhob', 20);
model.sol('sol4').feature('t1').feature('i3').set('maxlinit', 10000);
model.sol('sol4').feature('t1').feature('i3').set('nlinnormuse', 'on');
model.sol('sol4').feature('t1').feature('i3').label('AMG, heat transfer variables (ht1)');
model.sol('sol4').feature('t1').feature('i3').create('mg1', 'Multigrid');
model.sol('sol4').feature('t1').feature('i3').feature('mg1').set('prefun', 'saamg');
model.sol('sol4').feature('t1').feature('i3').feature('mg1').set('mgcycle', 'v');
model.sol('sol4').feature('t1').feature('i3').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol4').feature('t1').feature('i3').feature('mg1').set('strconn', 0.01);
model.sol('sol4').feature('t1').feature('i3').feature('mg1').set('nullspace', 'constant');
model.sol('sol4').feature('t1').feature('i3').feature('mg1').set('usesmooth', false);
model.sol('sol4').feature('t1').feature('i3').feature('mg1').set('saamgcompwise', true);
model.sol('sol4').feature('t1').feature('i3').feature('mg1').set('loweramg', true);
model.sol('sol4').feature('t1').feature('i3').feature('mg1').set('compactaggregation', false);
model.sol('sol4').feature('t1').feature('i3').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol4').feature('t1').feature('i3').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol4').feature('t1').feature('i3').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol4').feature('t1').feature('i3').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol4').feature('t1').feature('i3').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol4').feature('t1').feature('i3').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol4').feature('t1').feature('i3').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol4').feature('t1').feature('i3').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('t1').feature('i3').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol4').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol4').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol4').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol4').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol4').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol4').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol4').feature('t1').feature('fc1').set('ntolfact', 0.5);
model.sol('sol4').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol4').feature('t1').feature.remove('fcDef');
model.sol('sol4').feature('t1').feature.remove('seDef');
model.sol('sol4').attach('std2');
model.sol('sol4').runAll;

model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').set('data', 'dset4');
model.result('pg3').setIndex('looplevel', 40, 0);
model.result('pg3').label('Concentration, CH4 (tcs)');
model.result('pg3').set('titletype', 'custom');
model.result('pg3').set('prefixintitle', 'Species CH4:');
model.result('pg3').set('expressionintitle', false);
model.result('pg3').set('typeintitle', true);
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', {'tcs.c_wCH4'});
model.result('pg3').create('str1', 'Streamline');
model.result('pg3').feature('str1').set('expr', {'tcs.tflux_wCH4r' 'tcs.tflux_wCH4z'});
model.result('pg3').feature('str1').set('posmethod', 'uniform');
model.result('pg3').feature('str1').set('recover', 'pprint');
model.result('pg3').feature('str1').set('pointtype', 'arrow');
model.result('pg3').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg3').feature('str1').set('color', 'gray');
model.result.dataset.create('rev1', 'Revolve2D');
model.result.dataset('rev1').set('data', 'dset4');
model.result.dataset('rev1').set('revangle', 225);
model.result.dataset('rev1').set('startangle', -90);
model.result.dataset('rev1').set('hasspacevars', false);
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').set('data', 'rev1');
model.result('pg4').setIndex('looplevel', 40, 0);
model.result('pg4').label('Concentration, CH4, 3D (tcs)');
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', {'tcs.c_wCH4'});
model.result('pg4').set('titletype', 'custom');
model.result('pg4').set('typeintitle', false);
model.result('pg4').set('prefixintitle', 'Species CH4:');
model.result('pg4').set('expressionintitle', false);
model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').set('data', 'dset4');
model.result('pg5').setIndex('looplevel', 40, 0);
model.result('pg5').label('Concentration, H2 (tcs)');
model.result('pg5').set('titletype', 'custom');
model.result('pg5').set('prefixintitle', 'Species H2:');
model.result('pg5').set('expressionintitle', false);
model.result('pg5').set('typeintitle', true);
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', {'tcs.c_wH2'});
model.result('pg5').create('str1', 'Streamline');
model.result('pg5').feature('str1').set('expr', {'tcs.tflux_wH2r' 'tcs.tflux_wH2z'});
model.result('pg5').feature('str1').set('posmethod', 'uniform');
model.result('pg5').feature('str1').set('recover', 'pprint');
model.result('pg5').feature('str1').set('pointtype', 'arrow');
model.result('pg5').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg5').feature('str1').set('color', 'gray');
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').set('data', 'rev1');
model.result('pg6').setIndex('looplevel', 40, 0);
model.result('pg6').label('Concentration, H2, 3D (tcs)');
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', {'tcs.c_wH2'});
model.result('pg6').set('titletype', 'custom');
model.result('pg6').set('typeintitle', false);
model.result('pg6').set('prefixintitle', 'Species H2:');
model.result('pg6').set('expressionintitle', false);
model.result.create('pg7', 'PlotGroup2D');
model.result('pg7').label('Temperature (ht1)');
model.result('pg7').set('dataisaxisym', 'off');
model.result('pg7').set('data', 'dset4');
model.result('pg7').setIndex('looplevel', 40, 0);
model.result('pg7').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pg2');
model.result('pg7').feature.create('surf1', 'Surface');
model.result('pg7').feature('surf1').set('showsolutionparams', 'on');
model.result('pg7').feature('surf1').set('solutionparams', 'parent');
model.result('pg7').feature('surf1').set('expr', 'T');
model.result('pg7').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg7').feature('surf1').set('showsolutionparams', 'on');
model.result('pg7').feature('surf1').set('data', 'parent');
model.result.dataset('dset4').set('geom', 'geom1');
model.result.create('pg8', 'PlotGroup2D');
model.result('pg8').label('Velocity (spf1)');
model.result('pg8').set('dataisaxisym', 'off');
model.result('pg8').set('frametype', 'spatial');
model.result('pg8').set('data', 'dset4');
model.result('pg8').setIndex('looplevel', 40, 0);
model.result('pg8').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg1');
model.result('pg8').feature.create('surf1', 'Surface');
model.result('pg8').feature('surf1').label('Surface');
model.result('pg8').feature('surf1').set('showsolutionparams', 'on');
model.result('pg8').feature('surf1').set('expr', 'spf.U');
model.result('pg8').feature('surf1').set('smooth', 'internal');
model.result('pg8').feature('surf1').set('showsolutionparams', 'on');
model.result('pg8').feature('surf1').set('data', 'parent');
model.result.create('pg9', 'PlotGroup2D');
model.result('pg9').label('Pressure (spf1)');
model.result('pg9').set('dataisaxisym', 'off');
model.result('pg9').set('frametype', 'spatial');
model.result('pg9').set('data', 'dset4');
model.result('pg9').setIndex('looplevel', 40, 0);
model.result('pg9').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg2');
model.result('pg9').feature.create('con1', 'Contour');
model.result('pg9').feature('con1').label('Contour');
model.result('pg9').feature('con1').set('showsolutionparams', 'on');
model.result('pg9').feature('con1').set('expr', 'p');
model.result('pg9').feature('con1').set('number', 40);
model.result('pg9').feature('con1').set('levelrounding', false);
model.result('pg9').feature('con1').set('smooth', 'internal');
model.result('pg9').feature('con1').set('showsolutionparams', 'on');
model.result('pg9').feature('con1').set('data', 'parent');
model.result.dataset('rev1').set('data', 'dset4');
model.result.create('pg10', 'PlotGroup3D');
model.result('pg10').label('Velocity, 3D (spf1)');
model.result('pg10').set('frametype', 'spatial');
model.result('pg10').set('data', 'rev1');
model.result('pg10').setIndex('looplevel', 40, 0);
model.result('pg10').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pcond1/pg1');
model.result('pg10').feature.create('surf1', 'Surface');
model.result('pg10').feature('surf1').label('Surface');
model.result('pg10').feature('surf1').set('showsolutionparams', 'on');
model.result('pg10').feature('surf1').set('expr', 'spf.U');
model.result('pg10').feature('surf1').set('smooth', 'internal');
model.result('pg10').feature('surf1').set('showsolutionparams', 'on');
model.result('pg10').feature('surf1').set('data', 'parent');
model.result.create('pg11', 'PlotGroup2D');
model.result('pg11').set('data', 'dset4');
model.result('pg11').setIndex('looplevel', 40, 0);
model.result('pg11').create('surf1', 'Surface');
model.result('pg11').label('Porosity Change');
model.result('pg11').feature('surf1').set('expr', 'por');
model.result.create('pg12', 'PlotGroup3D');
model.result('pg12').set('data', 'rev1');
model.result('pg12').setIndex('looplevel', 40, 0);
model.result('pg12').create('surf1', 'Surface');
model.result('pg12').label('Porosity Change 1');
model.result('pg12').feature('surf1').set('expr', 'por');
model.result('pg3').run;
model.result('pg7').run;
model.result('pg7').label('Temperature');
model.result('pg7').setIndex('looplevel', 2, 0);
model.result('pg7').set('edges', false);
model.result('pg7').run;
model.result('pg7').feature('surf1').set('colortable', 'ThermalDark');
model.result('pg7').feature('surf1').set('expr', 'T');
model.result('pg7').feature('surf1').set('descr', 'Temperature');
model.result('pg7').run;
model.result('pg7').run;
model.result('pg7').setIndex('looplevel', 11, 0);
model.result('pg7').run;
model.result('pg4').run;
model.result('pg4').setIndex('looplevel', 2, 0);
model.result('pg4').set('edges', false);
model.result('pg4').run;
model.result('pg4').setIndex('looplevel', 11, 0);
model.result('pg4').run;

model.view('view2').camera.set('zoomanglefull', 12.14366);
model.view('view2').camera.setIndex('position', -2.64613, 0);
model.view('view2').camera.setIndex('position', -3.37801, 1);
model.view('view2').camera.setIndex('position', -2.6879, 2);
model.view('view2').camera.setIndex('target', 0.01094, 0);
model.view('view2').camera.setIndex('target', -1.19209E-5, 1);
model.view('view2').camera.setIndex('up', -0.86769, 0);
model.view('view2').camera.setIndex('up', 0.37943, 1);
model.view('view2').camera.setIndex('up', 0.32115, 2);
model.view('view2').camera.setIndex('rotationpoint', 0.01094, 0);
model.view('view2').camera.setIndex('rotationpoint', -1.20401E-5, 1);
model.view('view2').camera.setIndex('viewoffset', -0.03767, 0);
model.view('view2').camera.set('viewoffset', {'-0.03767' '-9.78809e-4'});

model.result('pg10').run;
model.result('pg10').set('edges', false);
model.result('pg10').create('con1', 'Contour');
model.result('pg10').feature('con1').set('expr', 'p');
model.result('pg10').feature('con1').set('descr', 'Pressure');
model.result('pg10').feature('con1').set('contourtype', 'tubes');
model.result('pg10').feature('con1').set('colortable', 'Spectrum');
model.result('pg10').run;
model.result('pg10').feature('surf1').set('colortable', 'Twilight');
model.result('pg10').feature('surf1').set('colortabletrans', 'reverse');
model.result('pg10').run;
model.result('pg10').set('showlegendsunit', true);
model.result('pg10').run;
model.result.dataset.create('cln1', 'CutLine3D');
model.result.dataset('cln1').setIndex('genpoints', 0.044, 0, 2);
model.result.dataset('cln1').setIndex('genpoints', 0, 1, 0);
model.result.dataset('cln1').setIndex('genpoints', 0.156, 1, 2);
model.result.create('pg13', 'PlotGroup1D');
model.result('pg13').run;
model.result('pg13').label('Concentration CH4, Porous Catalyst Bed Center');
model.result('pg13').set('data', 'cln1');
model.result('pg13').setIndex('looplevelinput', 'manual', 0);
model.result('pg13').setIndex('looplevel', [2 11], 0);
model.result('pg13').set('titletype', 'manual');
model.result('pg13').set('title', 'Methane concentration, porous catalyst bed center');
model.result('pg13').set('xlabelactive', true);
model.result('pg13').set('xlabel', 'Length porous catalytic bed (m)');
model.result('pg13').set('ylabelactive', true);
model.result('pg13').set('ylabel', 'Concentration (mol/m<sup>3</sup>)');
model.result('pg13').set('legendpos', 'middleleft');
model.result('pg13').create('lngr1', 'LineGraph');
model.result('pg13').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg13').feature('lngr1').set('linewidth', 'preference');
model.result('pg13').feature('lngr1').set('expr', 'tcs.c_wCH4');
model.result('pg13').feature('lngr1').set('descr', 'Molar concentration');
model.result('pg13').feature('lngr1').set('linewidth', 2);
model.result('pg13').feature('lngr1').set('legend', true);
model.result('pg13').feature('lngr1').set('legendmethod', 'evaluated');
model.result('pg13').feature('lngr1').set('legendpattern', 'CH<sub>4</sub> eval(t,s) s');
model.result('pg13').feature.duplicate('lngr2', 'lngr1');
model.result('pg13').run;
model.result('pg13').feature('lngr2').set('expr', 'tcs.c_wH2');
model.result('pg13').feature('lngr2').set('descr', 'Molar concentration');
model.result('pg13').feature('lngr2').set('linestyle', 'dashed');
model.result('pg13').feature('lngr2').set('linecolor', 'cyclereset');
model.result('pg13').feature('lngr2').set('legendpattern', 'H<sub>2</sub> eval(t,s) s');
model.result('pg13').run;
model.result('pg12').run;
model.result('pg12').label('Porosity Distribution');
model.result('pg12').set('titletype', 'manual');
model.result('pg12').set('title', 'Porosity within porous catalyst bed');
model.result('pg12').run;

model.study('std1').feature('time').setEntry('activate', 'chem1', false);
model.study('std1').feature('time').setEntry('activate', 'tcs', false);
model.study('std1').feature('time').setEntry('activate', 'ht1', false);
model.study('std1').feature('time').setEntry('activate', 'spf1', false);
model.study('std1').feature('time').setEntry('activate', 'dode', false);

model.result('pg11').run;
model.result.remove('pg11');
model.result('pg12').run;
model.result('pg3').run;
model.result.remove('pg3');
model.result.remove('pg5');
model.result('pg4').run;

model.title('Carbon Deposition in Heterogeneous Catalysis');

model.description(['This example investigates the thermal decomposition of methane over a solid Ni-Al' native2unicode(hex2dec({'20' '82'}), 'unicode') 'O' native2unicode(hex2dec({'20' '83'}), 'unicode') ' catalyst. Hydrogen gas and solid carbon are formed as products. Carbon deposits inhibit the catalyst activity and decrease the permeability of the reactor. The process is modeled both with the Reaction Engineering interface in a perfectly mixed environment and with a space-dependent model.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;

model.label('carbon_deposition.mph');

model.modelNode.label('Components');

out = model;
