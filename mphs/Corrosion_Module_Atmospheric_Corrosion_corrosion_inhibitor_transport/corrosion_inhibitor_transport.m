function out = model
%
% corrosion_inhibitor_transport.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Corrosion_Module/Atmospheric_Corrosion');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 1);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('chem', 'Chemistry', 'geom1');
model.physics('chem').model('comp1');
model.physics.create('tcd', 'TertiaryCurrentDistributionNernstPlanck', 'geom1', {'cNa' 'cCl' 'cH' 'cOH' 'cAl' 'cAlOH' 'cAlOH2' 'cAlOH3' 'cAlOH4' 'cCe'  ...
'cCo'});

model.study.create('std1');
model.study('std1').create('cdi', 'CurrentDistributionInitialization');
model.study('std1').feature('cdi').set('solnum', 'auto');
model.study('std1').feature('cdi').set('notsolnum', 'auto');
model.study('std1').feature('cdi').set('outputmap', {});
model.study('std1').feature('cdi').set('ngenAUX', '1');
model.study('std1').feature('cdi').set('goalngenAUX', '1');
model.study('std1').feature('cdi').set('ngenAUX', '1');
model.study('std1').feature('cdi').set('goalngenAUX', '1');
model.study('std1').feature('cdi').setSolveFor('/physics/chem', true);
model.study('std1').feature('cdi').setSolveFor('/physics/tcd', true);
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').set('initialtime', '0');
model.study('std1').feature('time').set('solnum', 'auto');
model.study('std1').feature('time').set('notsolnum', 'auto');
model.study('std1').feature('time').set('outputmap', {});
model.study('std1').feature('time').setSolveFor('/physics/chem', true);
model.study('std1').feature('time').setSolveFor('/physics/tcd', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('d_film', '100e-6[m]', 'Electrolyte film thickness');
model.param.set('DNa', '5.379e-13[mol*m^2/J/s]*R_const*T', 'Diffusivity of Na');
model.param.set('DCl', '8.197e-13[mol*m^2/J/s]*R_const*T', 'Diffusivity of Cl');
model.param.set('DH', '3.756e-12[mol*m^2/J/s]*R_const*T', 'Diffusivity of H');
model.param.set('DOH', '2.127e-12[mol*m^2/J/s]*R_const*T', 'Diffusivity of OH');
model.param.set('DAl', '2.184e-13[mol*m^2/J/s]*R_const*T', 'Diffusivity of Al');
model.param.set('DAlOH', '4.78e-13[mol*m^2/J/s]*R_const*T', 'Diffusivity of AlOH');
model.param.set('DAlOH2', '4.78e-13[mol*m^2/J/s]*R_const*T', 'Diffusivity of AlOH2');
model.param.set('DAlOH3', '4.78e-13[mol*m^2/J/s]*R_const*T', 'Diffusivity of AlOH3');
model.param.set('DAlOH4', '4.78e-13[mol*m^2/J/s]*R_const*T', 'Diffusivity of AlOH4');
model.param.set('DCe', '1.6e-13[mol*m^2/J/s]*R_const*T', 'Diffusivity of AlCl');
model.param.set('DCo', '2.92e-13[mol*m^2/J/s]*R_const*T', 'Diffusivity of AlOHCl');
model.param.set('c0Cl', '0.05[M]', 'Initial concentration of Cl');
model.param.set('c0H', '10^(-pH0)[M]', 'Initial concentration of H');
model.param.set('c0OH', '10^(-pKw+pH0)[M]', 'Initial concentration of OH');
model.param.set('zNa', '1', 'Charge number of Na');
model.param.set('zCl', '-1', 'Charge number of Cl');
model.param.set('zH', '1', 'Charge number of H');
model.param.set('zOH', '-1', 'Charge number of OH');
model.param.set('zAl', '3', 'Charge number of Al');
model.param.set('zAlOH', '2', 'Charge number of AlOH');
model.param.set('zAlOH2', '1', 'Charge number of AlOH2');
model.param.set('zAlOH3', '0', 'Charge number of AlOH3');
model.param.set('zAlOH4', '-1', 'Charge number of AlOH4');
model.param.set('zCe', '3', 'Charge number of AlCl');
model.param.set('zCo', '2', 'Charge number of AlOHCl');
model.param.set('kfH2O', '1e-8[1/s]', 'Forward rate constant for H2O');
model.param.set('kfAlOH', '4.2e4[m^3/mol/s]', 'Forward rate constant for AlOH');
model.param.set('krAlOH', '4.6e6[m^3/mol/s]', 'Reverse rate constant for AlOH');
model.param.set('kfAlOH2', '4.2e4[m^3/mol/s]', 'Forward rate constant for AlOH2');
model.param.set('krAlOH2', '3.6e6[m^3/mol/s]', 'Reverse rate constant for AlOH2');
model.param.set('kfAlOH3', '5.6e4[m^3/mol/s]', 'Forward rate constant for AlOH3');
model.param.set('krAlOH3', '2.8e6[m^3/mol/s]', 'Reverse rate constant for AlOH3');
model.param.set('kfAlOH4', '1e-8[m^3/mol/s]', 'Forward rate constant for AlOH4');
model.param.set('krAlOH4', '1[m^3/mol/s]', 'Reverse rate constant for AlOH4');
model.param.set('pH0', '2', 'Initial bulk pH');
model.param.set('pKw', '14.94-0.04209*(-273.15+T)/1[K]+1.718E-4*(-273.15+T)^2/1[K^2]', 'Water dissociation constant');
model.param.set('Kw', '10^(6-pKw)', 'Water dissociation equilibrium constant');
model.param.set('T', '298.15[K]', 'Temperature');
model.param.set('cCeCrit', '0.4[mM]', 'Critical concentration of Ce');
model.param.set('S', '1500[um]', 'Scratch size');
model.param.set('idl_AA2024', '-1.6[A/m^2]', 'O2 diffusion limited current density at AA2024');
model.param.set('A_orr_AA2024', '-108[mV]', 'Tafel slope for O2 reduction reaction at AA2024');
model.param.set('A_orr_AlCoCe', '-168[mV]', 'Tafel slope for O2 reduction reaction at AlCoCe');
model.param.set('Eeq_AA2024', '-0.53[V]', 'Equilibrium potential, Al');
model.param.set('idl_AlCoCe', '-1.6[A/m^2]', 'O2 diffusion limited current density at AlCoCe coating');
model.param.set('nuCo', '-8.7', 'Stoichiometric coefficient, Co');
model.param.set('nuAl', '-87', 'Stoichiometric coefficient, Al');
model.param.set('nuCe', '-100-nuCo-nuAl', 'Stoichiometric coefficient, Ce');
model.param.set('nAlCoCe', '-(nuCo*zCo+nuCe*zCe+nuAl*zAl)', 'Stoichiometric coefficient, effective');
model.param.set('cH2O', '1[mol/m^3]', 'Water reference concentration');

model.geom('geom1').create('i1', 'Interval');
model.geom('geom1').feature('i1').setIndex('coord', 0, 0);
model.geom('geom1').feature('i1').setIndex('coord', '1[cm]-S', 1);
model.geom('geom1').feature('i1').setIndex('coord', '1[cm]', 2);
model.geom('geom1').runPre('fin');

model.variable.create('var1');
model.variable('var1').model('comp1');

model.geom('geom1').run;

% To import content from file, use:
% model.variable('var1').loadFile('FILENAME');
model.variable('var1').set('i0_AlCoCe', 'ipass_AlCoCe(pH)/(1-abs(ipass_AlCoCe(pH)/idl_AlCoCe))', 'Exchange current density for O2 reduction reaction at AlCoCe');
model.variable('var1').set('i0_AA2024', 'ipass_AA2024(pH)/(1-abs(ipass_AA2024(pH)/idl_AA2024))', 'Exchange current density for O2 reduction reaction at AA2024');
model.variable('var1').set('pH', '-log10(cH/1000[mol/m^3])', 'pH of the electrolyte');

model.func.create('int1', 'Interpolation');
model.func('int1').model('comp1');
model.func('int1').set('source', 'file');
model.func('int1').set('filename', 'corrosion_inhibitor_transport_ipass_AlCoCe_pH.txt');
model.func('int1').importData;
model.func('int1').set('funcname', 'ipass_AlCoCe');
model.func('int1').setIndex('fununit', 'A/m^2', 0);
model.func('int1').setIndex('argunit', 1, 0);
model.func.create('int2', 'Interpolation');
model.func('int2').model('comp1');
model.func('int2').set('source', 'file');
model.func('int2').set('filename', 'corrosion_inhibitor_transport_ipass_AA2024_pH.txt');
model.func('int2').importData;
model.func('int2').set('funcname', 'ipass_AA2024');
model.func('int2').setIndex('fununit', 'A/m^2', 0);
model.func('int2').setIndex('argunit', 1, 0);
model.func.create('int3', 'Interpolation');
model.func('int3').model('comp1');
model.func('int3').set('source', 'file');
model.func('int3').set('filename', 'corrosion_inhibitor_transport_Eeq_AlCoCe_pH.txt');
model.func('int3').importData;
model.func('int3').set('funcname', 'Eeq_AlCoCe');
model.func('int3').setIndex('fununit', 'V', 0);
model.func('int3').setIndex('argunit', 1, 0);

model.physics('chem').create('rch1', 'ReactionChem', 1);
model.physics('chem').feature('rch1').set('formula', 'H2O<=>H+OH');
model.physics('chem').feature('rch1').set('setKeq0', true);
model.physics('chem').feature('rch1').set('kf', 'kfH2O');
model.physics('chem').feature('rch1').set('EquilibriumConstantSettings', 'UserDefined');
model.physics('chem').feature('rch1').set('Keq0', 'Kw');
model.physics('chem').create('rch2', 'ReactionChem', 1);
model.physics('chem').feature('rch2').set('formula', 'Al+H2O<=>AlOH+H');
model.physics('chem').feature('rch2').set('kf', 'kfAlOH');
model.physics('chem').feature('rch2').set('kr', 'krAlOH');
model.physics('chem').create('rch3', 'ReactionChem', 1);
model.physics('chem').feature('rch3').set('formula', 'AlOH+H2O<=>AlOH2+H');
model.physics('chem').feature('rch3').set('kf', 'kfAlOH2');
model.physics('chem').feature('rch3').set('kr', 'krAlOH2');
model.physics('chem').create('rch4', 'ReactionChem', 1);
model.physics('chem').feature('rch4').set('formula', 'AlOH2+H2O<=>AlOH3+H');
model.physics('chem').feature('rch4').set('kf', 'kfAlOH3');
model.physics('chem').feature('rch4').set('kr', 'krAlOH3');
model.physics('chem').create('rch5', 'ReactionChem', 1);
model.physics('chem').feature('rch5').set('formula', 'AlOH3+H2O<=>AlOH4+H');
model.physics('chem').feature('rch5').set('kf', 'kfAlOH4');
model.physics('chem').feature('rch5').set('kr', 'krAlOH4');
model.physics('tcd').feature('sp1').setIndex('z', 'zNa', 0);
model.physics('tcd').feature('sp1').setIndex('z', 'zCl', 1);
model.physics('tcd').feature('sp1').setIndex('z', 'zH', 2);
model.physics('tcd').feature('sp1').setIndex('z', 'zOH', 3);
model.physics('tcd').feature('sp1').setIndex('z', 'zAl', 4);
model.physics('tcd').feature('sp1').setIndex('z', 'zAlOH', 5);
model.physics('tcd').feature('sp1').setIndex('z', 'zAlOH2', 6);
model.physics('tcd').feature('sp1').setIndex('z', 'zAlOH3', 7);
model.physics('tcd').feature('sp1').setIndex('z', 'zAlOH4', 8);
model.physics('tcd').feature('sp1').setIndex('z', 'zCe', 9);
model.physics('tcd').feature('sp1').setIndex('z', 'zCo', 10);
model.physics('tcd').feature('init1').setIndex('initc', 'c0Cl', 1);
model.physics('tcd').feature('init1').setIndex('initc', 'c0H', 2);
model.physics('tcd').feature('init1').setIndex('initc', 'c0OH', 3);
model.physics('tcd').feature('init1').set('initphil', '-Eeq_AA2024');
model.physics('tcd').create('hcpce1', 'HighlyConductivePorousElectrode', 1);
model.physics('tcd').feature('hcpce1').selection.set([1]);
model.physics('tcd').feature('hcpce1').set('D_cNa', {'DNa' '0' '0' '0' 'DNa' '0' '0' '0' 'DNa'});
model.physics('tcd').feature('hcpce1').set('D_cCl', {'DCl' '0' '0' '0' 'DCl' '0' '0' '0' 'DCl'});
model.physics('tcd').feature('hcpce1').set('D_cH', {'DH' '0' '0' '0' 'DH' '0' '0' '0' 'DH'});
model.physics('tcd').feature('hcpce1').set('D_cOH', {'DOH' '0' '0' '0' 'DOH' '0' '0' '0' 'DOH'});
model.physics('tcd').feature('hcpce1').set('D_cAl', {'DAl' '0' '0' '0' 'DAl' '0' '0' '0' 'DAl'});
model.physics('tcd').feature('hcpce1').set('D_cAlOH', {'DAlOH' '0' '0' '0' 'DAlOH' '0' '0' '0' 'DAlOH'});
model.physics('tcd').feature('hcpce1').set('D_cAlOH2', {'DAlOH2' '0' '0' '0' 'DAlOH2' '0' '0' '0' 'DAlOH2'});
model.physics('tcd').feature('hcpce1').set('D_cAlOH3', {'DAlOH3' '0' '0' '0' 'DAlOH3' '0' '0' '0' 'DAlOH3'});
model.physics('tcd').feature('hcpce1').set('D_cAlOH4', {'DAlOH4' '0' '0' '0' 'DAlOH4' '0' '0' '0' 'DAlOH4'});
model.physics('tcd').feature('hcpce1').set('D_cCe', {'DCe' '0' '0' '0' 'DCe' '0' '0' '0' 'DCe'});
model.physics('tcd').feature('hcpce1').set('D_cCo', {'DCo' '0' '0' '0' 'DCo' '0' '0' '0' 'DCo'});
model.physics('tcd').feature('hcpce1').set('epsl', 1);
model.physics('tcd').feature('hcpce1').feature('per1').label('Porous Electrode Reaction - Metal dissolution');
model.physics('tcd').feature('hcpce1').feature('per1').set('nm', 'nAlCoCe');
model.physics('tcd').feature('hcpce1').feature('per1').setIndex('Vi0', 'nuAl', 4);
model.physics('tcd').feature('hcpce1').feature('per1').setIndex('Vi0', 'nuCe', 9);
model.physics('tcd').feature('hcpce1').feature('per1').setIndex('Vi0', 'nuCo', 10);
model.physics('tcd').feature('hcpce1').feature('per1').set('ilocmat_mat', 'userdef');
model.physics('tcd').feature('hcpce1').feature('per1').set('ilocmat', 'ipass_AlCoCe(pH)');
model.physics('tcd').feature('hcpce1').feature('per1').set('Av', '1/d_film');
model.physics('tcd').feature('hcpce1').create('per2', 'PorousElectrodeReaction', 1);
model.physics('tcd').feature('hcpce1').feature('per2').label('Porous Electrode Reaction - Oxygen reduction');
model.physics('tcd').feature('hcpce1').feature('per2').set('nm', 4);
model.physics('tcd').feature('hcpce1').feature('per2').setIndex('Vi0', 4, 3);
model.physics('tcd').feature('hcpce1').feature('per2').set('Eeq_mat', 'userdef');
model.physics('tcd').feature('hcpce1').feature('per2').set('Eeq', 'Eeq_AlCoCe(pH)');
model.physics('tcd').feature('hcpce1').feature('per2').set('ElectrodeKinetics', 'CathodicTafelEquation');
model.physics('tcd').feature('hcpce1').feature('per2').set('i0', 'i0_AlCoCe');
model.physics('tcd').feature('hcpce1').feature('per2').set('Ac', 'A_orr_AlCoCe');
model.physics('tcd').feature('hcpce1').feature('per2').set('LimitingCurrentDensity', true);
model.physics('tcd').feature('hcpce1').feature('per2').set('ilim', 'idl_AlCoCe');
model.physics('tcd').feature('hcpce1').feature('per2').set('Av', '1/d_film');
model.physics('tcd').feature.duplicate('hcpce2', 'hcpce1');
model.physics('tcd').feature('hcpce2').selection.set([2]);
model.physics('tcd').feature('hcpce2').feature('per1').set('nm', 3);
model.physics('tcd').feature('hcpce2').feature('per1').setIndex('Vi0', -1, 4);
model.physics('tcd').feature('hcpce2').feature('per1').setIndex('Vi0', 0, 9);
model.physics('tcd').feature('hcpce2').feature('per1').setIndex('Vi0', 0, 10);
model.physics('tcd').feature('hcpce2').feature('per1').set('ilocmat', 'ipass_AA2024(pH)');
model.physics('tcd').feature('hcpce2').feature('per2').set('Eeq', 'Eeq_AA2024');
model.physics('tcd').feature('hcpce2').feature('per2').set('i0', 'i0_AA2024');
model.physics('tcd').feature('hcpce2').feature('per2').set('Ac', 'A_orr_AA2024');
model.physics('tcd').feature('hcpce2').feature('per2').set('ilim', 'idl_AA2024');
model.physics('tcd').create('reac1', 'Reactions', 1);
model.physics('tcd').feature('reac1').selection.set([1 2]);
model.physics('tcd').feature('reac1').setIndex('R_cH_src', 'root.comp1.chem.R_H', 0);
model.physics('tcd').feature('reac1').setIndex('R_cOH_src', 'root.comp1.chem.R_OH', 0);
model.physics('tcd').feature('reac1').setIndex('R_cAl_src', 'root.comp1.chem.R_Al', 0);
model.physics('tcd').feature('reac1').setIndex('R_cAlOH_src', 'root.comp1.chem.R_AlOH', 0);
model.physics('tcd').feature('reac1').setIndex('R_cAlOH2_src', 'root.comp1.chem.R_AlOH2', 0);
model.physics('tcd').feature('reac1').setIndex('R_cAlOH3_src', 'root.comp1.chem.R_AlOH3', 0);
model.physics('tcd').feature('reac1').setIndex('R_cAlOH4_src', 'root.comp1.chem.R_AlOH4', 0);

model.mesh('mesh1').create('edg1', 'Edge');
model.mesh('mesh1').feature('edg1').selection.geom('geom1', 1);
model.mesh('mesh1').feature('edg1').selection.set([1 2]);
model.mesh('mesh1').feature('edg1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('edg1').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('edg1').feature('dis1').set('elemcount', 1000);
model.mesh('mesh1').feature('edg1').feature('dis1').set('elemratio', 10);
model.mesh('mesh1').feature('edg1').feature('dis1').set('reverse', true);
model.mesh('mesh1').feature('edg1').feature.duplicate('dis2', 'dis1');
model.mesh('mesh1').feature('edg1').feature('dis2').selection.set([2]);
model.mesh('mesh1').feature('edg1').feature('dis2').set('elemcount', 300);
model.mesh('mesh1').feature('edg1').feature('dis2').set('reverse', false);
model.mesh('mesh1').run;

model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'd_film', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);
model.study('std1').feature('param').setIndex('pname', 'd_film', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);
model.study('std1').feature('param').setIndex('pname', 'S', 0);
model.study('std1').feature('param').setIndex('plistarr', '1500[um]/2 1500[um]', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);
model.study('std1').feature('param').setIndex('pname', 'd_film', 1);
model.study('std1').feature('param').setIndex('plistarr', '', 1);
model.study('std1').feature('param').setIndex('punit', 'm', 1);
model.study('std1').feature('param').setIndex('pname', 'd_film', 1);
model.study('std1').feature('param').setIndex('plistarr', '', 1);
model.study('std1').feature('param').setIndex('punit', 'm', 1);
model.study('std1').feature('param').setIndex('pname', 'pH0', 1);
model.study('std1').feature('param').setIndex('plistarr', '2 6', 1);
model.study('std1').feature('param').setIndex('punit', '', 1);
model.study('std1').feature('param').set('sweeptype', 'filled');
model.study('std1').feature('cdi').set('initType', 'secondary');
model.study('std1').feature('time').set('tunit', 'h');
model.study('std1').feature('time').set('tlist', 'range(0,1,10)');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'cdi');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_phil').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_phil').set('scaleval', '1');
model.sol('sol1').feature('v1').set('control', 'cdi');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 1.0E-4);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').label('Direct (tcd)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('Algebraic Multigrid (tcd)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').create('i2', 'Iterative');
model.sol('sol1').feature('s1').feature('i2').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i2').label('Geometric Multigrid (tcd)');
model.sol('sol1').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'time');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').feature('comp1_phil').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_phil').set('scaleval', '1');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('initsoluse', 'sol2');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('notsoluse', 'sol2');
model.sol('sol1').feature('v2').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,1,10)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('eventout', true);
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').label('Direct (tcd)');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i1').label('Algebraic Multigrid (tcd)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('compactaggregation', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').create('i2', 'Iterative');
model.sol('sol1').feature('t1').feature('i2').set('maxlinit', 1000);
model.sol('sol1').feature('t1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i2').label('Geometric Multigrid (tcd)');
model.sol('sol1').feature('t1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'S' 'pH0'});
model.batch('p1').set('plistarr', {'1500[um]/2 1500[um]' '2 6'});
model.batch('p1').set('sweeptype', 'filled');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol.create('sol3');
model.sol('sol3').study('std1');
model.sol('sol3').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol3');
model.batch('p1').run('compute');

model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').set('data', 'dset3');
model.result('pg1').label('Electrolyte Potential (tcd)');
model.result('pg1').create('lngr1', 'LineGraph');
model.result('pg1').feature('lngr1').set('xdata', 'expr');
model.result('pg1').feature('lngr1').set('xdataexpr', 'x');
model.result('pg1').feature('lngr1').selection.geom('geom1', 1);
model.result('pg1').feature('lngr1').selection.set([1 2]);
model.result('pg1').feature('lngr1').set('expr', {'phil'});
model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').set('data', 'dset3');
model.result('pg2').set('titletype', 'manual');
model.result('pg2').set('title', 'Concentrations, All Species');
model.result('pg2').label('Concentrations, All Species (tcd)');
model.result('pg2').create('lngr1', 'LineGraph');
model.result('pg2').feature('lngr1').set('xdata', 'expr');
model.result('pg2').feature('lngr1').set('xdataexpr', 'x');
model.result('pg2').feature('lngr1').selection.geom('geom1', 1);
model.result('pg2').feature('lngr1').selection.set([1 2]);
model.result('pg2').feature('lngr1').set('expr', {'cNa'});
model.result('pg2').feature('lngr1').label('Species Na');
model.result('pg2').feature('lngr1').set('legend', true);
model.result('pg2').feature('lngr1').set('autosolution', false);
model.result('pg2').feature('lngr1').set('autoexpr', false);
model.result('pg2').feature('lngr1').set('autodescr', false);
model.result('pg2').feature('lngr1').set('legendprefix', 'Na ');
model.result('pg2').create('lngr2', 'LineGraph');
model.result('pg2').feature('lngr2').set('xdata', 'expr');
model.result('pg2').feature('lngr2').set('xdataexpr', 'x');
model.result('pg2').feature('lngr2').selection.geom('geom1', 1);
model.result('pg2').feature('lngr2').selection.set([1 2]);
model.result('pg2').feature('lngr2').set('expr', {'cCl'});
model.result('pg2').feature('lngr2').label('Species Cl');
model.result('pg2').feature('lngr2').set('legend', true);
model.result('pg2').feature('lngr2').set('autosolution', false);
model.result('pg2').feature('lngr2').set('autoexpr', false);
model.result('pg2').feature('lngr2').set('autodescr', false);
model.result('pg2').feature('lngr2').set('legendprefix', 'Cl ');
model.result('pg2').create('lngr3', 'LineGraph');
model.result('pg2').feature('lngr3').set('xdata', 'expr');
model.result('pg2').feature('lngr3').set('xdataexpr', 'x');
model.result('pg2').feature('lngr3').selection.geom('geom1', 1);
model.result('pg2').feature('lngr3').selection.set([1 2]);
model.result('pg2').feature('lngr3').set('expr', {'cH'});
model.result('pg2').feature('lngr3').label('Species H');
model.result('pg2').feature('lngr3').set('legend', true);
model.result('pg2').feature('lngr3').set('autosolution', false);
model.result('pg2').feature('lngr3').set('autoexpr', false);
model.result('pg2').feature('lngr3').set('autodescr', false);
model.result('pg2').feature('lngr3').set('legendprefix', 'H ');
model.result('pg2').create('lngr4', 'LineGraph');
model.result('pg2').feature('lngr4').set('xdata', 'expr');
model.result('pg2').feature('lngr4').set('xdataexpr', 'x');
model.result('pg2').feature('lngr4').selection.geom('geom1', 1);
model.result('pg2').feature('lngr4').selection.set([1 2]);
model.result('pg2').feature('lngr4').set('expr', {'cOH'});
model.result('pg2').feature('lngr4').label('Species OH');
model.result('pg2').feature('lngr4').set('legend', true);
model.result('pg2').feature('lngr4').set('autosolution', false);
model.result('pg2').feature('lngr4').set('autoexpr', false);
model.result('pg2').feature('lngr4').set('autodescr', false);
model.result('pg2').feature('lngr4').set('legendprefix', 'OH ');
model.result('pg2').create('lngr5', 'LineGraph');
model.result('pg2').feature('lngr5').set('xdata', 'expr');
model.result('pg2').feature('lngr5').set('xdataexpr', 'x');
model.result('pg2').feature('lngr5').selection.geom('geom1', 1);
model.result('pg2').feature('lngr5').selection.set([1 2]);
model.result('pg2').feature('lngr5').set('expr', {'cAl'});
model.result('pg2').feature('lngr5').label('Species Al');
model.result('pg2').feature('lngr5').set('legend', true);
model.result('pg2').feature('lngr5').set('autosolution', false);
model.result('pg2').feature('lngr5').set('autoexpr', false);
model.result('pg2').feature('lngr5').set('autodescr', false);
model.result('pg2').feature('lngr5').set('legendprefix', 'Al ');
model.result('pg2').create('lngr6', 'LineGraph');
model.result('pg2').feature('lngr6').set('xdata', 'expr');
model.result('pg2').feature('lngr6').set('xdataexpr', 'x');
model.result('pg2').feature('lngr6').selection.geom('geom1', 1);
model.result('pg2').feature('lngr6').selection.set([1 2]);
model.result('pg2').feature('lngr6').set('expr', {'cAlOH'});
model.result('pg2').feature('lngr6').label('Species AlOH');
model.result('pg2').feature('lngr6').set('legend', true);
model.result('pg2').feature('lngr6').set('autosolution', false);
model.result('pg2').feature('lngr6').set('autoexpr', false);
model.result('pg2').feature('lngr6').set('autodescr', false);
model.result('pg2').feature('lngr6').set('legendprefix', 'AlOH ');
model.result('pg2').create('lngr7', 'LineGraph');
model.result('pg2').feature('lngr7').set('xdata', 'expr');
model.result('pg2').feature('lngr7').set('xdataexpr', 'x');
model.result('pg2').feature('lngr7').selection.geom('geom1', 1);
model.result('pg2').feature('lngr7').selection.set([1 2]);
model.result('pg2').feature('lngr7').set('expr', {'cAlOH2'});
model.result('pg2').feature('lngr7').label('Species AlOH2');
model.result('pg2').feature('lngr7').set('legend', true);
model.result('pg2').feature('lngr7').set('autosolution', false);
model.result('pg2').feature('lngr7').set('autoexpr', false);
model.result('pg2').feature('lngr7').set('autodescr', false);
model.result('pg2').feature('lngr7').set('legendprefix', 'AlOH2 ');
model.result('pg2').create('lngr8', 'LineGraph');
model.result('pg2').feature('lngr8').set('xdata', 'expr');
model.result('pg2').feature('lngr8').set('xdataexpr', 'x');
model.result('pg2').feature('lngr8').selection.geom('geom1', 1);
model.result('pg2').feature('lngr8').selection.set([1 2]);
model.result('pg2').feature('lngr8').set('expr', {'cAlOH3'});
model.result('pg2').feature('lngr8').label('Species AlOH3');
model.result('pg2').feature('lngr8').set('legend', true);
model.result('pg2').feature('lngr8').set('autosolution', false);
model.result('pg2').feature('lngr8').set('autoexpr', false);
model.result('pg2').feature('lngr8').set('autodescr', false);
model.result('pg2').feature('lngr8').set('legendprefix', 'AlOH3 ');
model.result('pg2').create('lngr9', 'LineGraph');
model.result('pg2').feature('lngr9').set('xdata', 'expr');
model.result('pg2').feature('lngr9').set('xdataexpr', 'x');
model.result('pg2').feature('lngr9').selection.geom('geom1', 1);
model.result('pg2').feature('lngr9').selection.set([1 2]);
model.result('pg2').feature('lngr9').set('expr', {'cAlOH4'});
model.result('pg2').feature('lngr9').label('Species AlOH4');
model.result('pg2').feature('lngr9').set('legend', true);
model.result('pg2').feature('lngr9').set('autosolution', false);
model.result('pg2').feature('lngr9').set('autoexpr', false);
model.result('pg2').feature('lngr9').set('autodescr', false);
model.result('pg2').feature('lngr9').set('legendprefix', 'AlOH4 ');
model.result('pg2').create('lngr10', 'LineGraph');
model.result('pg2').feature('lngr10').set('xdata', 'expr');
model.result('pg2').feature('lngr10').set('xdataexpr', 'x');
model.result('pg2').feature('lngr10').selection.geom('geom1', 1);
model.result('pg2').feature('lngr10').selection.set([1 2]);
model.result('pg2').feature('lngr10').set('expr', {'cCe'});
model.result('pg2').feature('lngr10').label('Species Ce');
model.result('pg2').feature('lngr10').set('legend', true);
model.result('pg2').feature('lngr10').set('autosolution', false);
model.result('pg2').feature('lngr10').set('autoexpr', false);
model.result('pg2').feature('lngr10').set('autodescr', false);
model.result('pg2').feature('lngr10').set('legendprefix', 'Ce ');
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').set('data', 'dset3');
model.result('pg3').label('Concentration, Na (tcd)');
model.result('pg3').set('titletype', 'custom');
model.result('pg3').set('prefixintitle', 'Species Na:');
model.result('pg3').set('expressionintitle', false);
model.result('pg3').set('typeintitle', false);
model.result('pg3').create('lngr1', 'LineGraph');
model.result('pg3').feature('lngr1').set('xdata', 'expr');
model.result('pg3').feature('lngr1').set('xdataexpr', 'x');
model.result('pg3').feature('lngr1').selection.geom('geom1', 1);
model.result('pg3').feature('lngr1').selection.set([1 2]);
model.result('pg3').feature('lngr1').set('expr', {'cNa'});
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').set('data', 'dset3');
model.result('pg4').label('Concentration, Cl (tcd)');
model.result('pg4').set('titletype', 'custom');
model.result('pg4').set('prefixintitle', 'Species Cl:');
model.result('pg4').set('expressionintitle', false);
model.result('pg4').set('typeintitle', false);
model.result('pg4').create('lngr1', 'LineGraph');
model.result('pg4').feature('lngr1').set('xdata', 'expr');
model.result('pg4').feature('lngr1').set('xdataexpr', 'x');
model.result('pg4').feature('lngr1').selection.geom('geom1', 1);
model.result('pg4').feature('lngr1').selection.set([1 2]);
model.result('pg4').feature('lngr1').set('expr', {'cCl'});
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').set('data', 'dset3');
model.result('pg5').label('Concentration, H (tcd)');
model.result('pg5').set('titletype', 'custom');
model.result('pg5').set('prefixintitle', 'Species H:');
model.result('pg5').set('expressionintitle', false);
model.result('pg5').set('typeintitle', false);
model.result('pg5').create('lngr1', 'LineGraph');
model.result('pg5').feature('lngr1').set('xdata', 'expr');
model.result('pg5').feature('lngr1').set('xdataexpr', 'x');
model.result('pg5').feature('lngr1').selection.geom('geom1', 1);
model.result('pg5').feature('lngr1').selection.set([1 2]);
model.result('pg5').feature('lngr1').set('expr', {'cH'});
model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').set('data', 'dset3');
model.result('pg6').label('Concentration, OH (tcd)');
model.result('pg6').set('titletype', 'custom');
model.result('pg6').set('prefixintitle', 'Species OH:');
model.result('pg6').set('expressionintitle', false);
model.result('pg6').set('typeintitle', false);
model.result('pg6').create('lngr1', 'LineGraph');
model.result('pg6').feature('lngr1').set('xdata', 'expr');
model.result('pg6').feature('lngr1').set('xdataexpr', 'x');
model.result('pg6').feature('lngr1').selection.geom('geom1', 1);
model.result('pg6').feature('lngr1').selection.set([1 2]);
model.result('pg6').feature('lngr1').set('expr', {'cOH'});
model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').set('data', 'dset3');
model.result('pg7').label('Concentration, Al (tcd)');
model.result('pg7').set('titletype', 'custom');
model.result('pg7').set('prefixintitle', 'Species Al:');
model.result('pg7').set('expressionintitle', false);
model.result('pg7').set('typeintitle', false);
model.result('pg7').create('lngr1', 'LineGraph');
model.result('pg7').feature('lngr1').set('xdata', 'expr');
model.result('pg7').feature('lngr1').set('xdataexpr', 'x');
model.result('pg7').feature('lngr1').selection.geom('geom1', 1);
model.result('pg7').feature('lngr1').selection.set([1 2]);
model.result('pg7').feature('lngr1').set('expr', {'cAl'});
model.result.create('pg8', 'PlotGroup1D');
model.result('pg8').set('data', 'dset3');
model.result('pg8').label('Concentration, AlOH (tcd)');
model.result('pg8').set('titletype', 'custom');
model.result('pg8').set('prefixintitle', 'Species AlOH:');
model.result('pg8').set('expressionintitle', false);
model.result('pg8').set('typeintitle', false);
model.result('pg8').create('lngr1', 'LineGraph');
model.result('pg8').feature('lngr1').set('xdata', 'expr');
model.result('pg8').feature('lngr1').set('xdataexpr', 'x');
model.result('pg8').feature('lngr1').selection.geom('geom1', 1);
model.result('pg8').feature('lngr1').selection.set([1 2]);
model.result('pg8').feature('lngr1').set('expr', {'cAlOH'});
model.result.create('pg9', 'PlotGroup1D');
model.result('pg9').set('data', 'dset3');
model.result('pg9').label('Concentration, AlOH2 (tcd)');
model.result('pg9').set('titletype', 'custom');
model.result('pg9').set('prefixintitle', 'Species AlOH2:');
model.result('pg9').set('expressionintitle', false);
model.result('pg9').set('typeintitle', false);
model.result('pg9').create('lngr1', 'LineGraph');
model.result('pg9').feature('lngr1').set('xdata', 'expr');
model.result('pg9').feature('lngr1').set('xdataexpr', 'x');
model.result('pg9').feature('lngr1').selection.geom('geom1', 1);
model.result('pg9').feature('lngr1').selection.set([1 2]);
model.result('pg9').feature('lngr1').set('expr', {'cAlOH2'});
model.result.create('pg10', 'PlotGroup1D');
model.result('pg10').set('data', 'dset3');
model.result('pg10').label('Concentration, AlOH3 (tcd)');
model.result('pg10').set('titletype', 'custom');
model.result('pg10').set('prefixintitle', 'Species AlOH3:');
model.result('pg10').set('expressionintitle', false);
model.result('pg10').set('typeintitle', false);
model.result('pg10').create('lngr1', 'LineGraph');
model.result('pg10').feature('lngr1').set('xdata', 'expr');
model.result('pg10').feature('lngr1').set('xdataexpr', 'x');
model.result('pg10').feature('lngr1').selection.geom('geom1', 1);
model.result('pg10').feature('lngr1').selection.set([1 2]);
model.result('pg10').feature('lngr1').set('expr', {'cAlOH3'});
model.result.create('pg11', 'PlotGroup1D');
model.result('pg11').set('data', 'dset3');
model.result('pg11').label('Concentration, AlOH4 (tcd)');
model.result('pg11').set('titletype', 'custom');
model.result('pg11').set('prefixintitle', 'Species AlOH4:');
model.result('pg11').set('expressionintitle', false);
model.result('pg11').set('typeintitle', false);
model.result('pg11').create('lngr1', 'LineGraph');
model.result('pg11').feature('lngr1').set('xdata', 'expr');
model.result('pg11').feature('lngr1').set('xdataexpr', 'x');
model.result('pg11').feature('lngr1').selection.geom('geom1', 1);
model.result('pg11').feature('lngr1').selection.set([1 2]);
model.result('pg11').feature('lngr1').set('expr', {'cAlOH4'});
model.result.create('pg12', 'PlotGroup1D');
model.result('pg12').set('data', 'dset3');
model.result('pg12').label('Concentration, Ce (tcd)');
model.result('pg12').set('titletype', 'custom');
model.result('pg12').set('prefixintitle', 'Species Ce:');
model.result('pg12').set('expressionintitle', false);
model.result('pg12').set('typeintitle', false);
model.result('pg12').create('lngr1', 'LineGraph');
model.result('pg12').feature('lngr1').set('xdata', 'expr');
model.result('pg12').feature('lngr1').set('xdataexpr', 'x');
model.result('pg12').feature('lngr1').selection.geom('geom1', 1);
model.result('pg12').feature('lngr1').selection.set([1 2]);
model.result('pg12').feature('lngr1').set('expr', {'cCe'});
model.result('pg1').run;
model.result('pg12').run;
model.result('pg12').setIndex('looplevelinput', 'manual', 2);
model.result('pg12').setIndex('looplevel', [1], 2);
model.result('pg12').setIndex('looplevelinput', 'manual', 1);
model.result('pg12').setIndex('looplevel', [1], 1);
model.result('pg12').set('xlabelactive', true);
model.result('pg12').set('ylabelactive', true);
model.result('pg12').set('ylabel', 'Concentration, Ce (mol/m<sup>3</sup>)');
model.result('pg12').set('legendpos', 'upperleft');
model.result('pg12').run;
model.result('pg12').feature('lngr1').set('linestyle', 'cycle');
model.result('pg12').feature('lngr1').set('legend', true);
model.result('pg12').feature('lngr1').set('legendmethod', 'evaluated');
model.result('pg12').feature('lngr1').set('legendpattern', 't=eval(t,h) h');
model.result('pg12').run;
model.result('pg12').create('lngr2', 'LineGraph');
model.result('pg12').feature('lngr2').set('markerpos', 'datapoints');
model.result('pg12').feature('lngr2').set('linewidth', 'preference');
model.result('pg12').feature('lngr2').set('data', 'dset1');
model.result('pg12').feature('lngr2').setIndex('looplevelinput', 'first', 0);
model.result('pg12').feature('lngr2').selection.all;
model.result('pg12').feature('lngr2').set('expr', 'cCeCrit');
model.result('pg12').feature('lngr2').set('linestyle', 'dashdot');
model.result('pg12').feature('lngr2').set('linecolor', 'black');
model.result('pg12').feature('lngr2').set('linewidth', 2);
model.result('pg12').feature('lngr2').set('legend', true);
model.result('pg12').feature('lngr2').set('legendmethod', 'manual');
model.result('pg12').feature('lngr2').setIndex('legends', 'c<sub>critical</sub>', 0);
model.result('pg12').run;
model.result('pg12').run;
model.result('pg12').setIndex('looplevel', [2], 1);
model.result('pg12').run;
model.result('pg12').setIndex('looplevel', [1], 1);
model.result('pg12').setIndex('looplevel', [2], 2);
model.result('pg12').run;
model.result('pg12').setIndex('looplevel', [2], 1);
model.result('pg12').run;
model.result.create('pg13', 'PlotGroup1D');
model.result('pg13').run;
model.result('pg13').label('pH');
model.result('pg13').set('data', 'dset3');
model.result('pg13').setIndex('looplevelinput', 'manual', 2);
model.result('pg13').setIndex('looplevel', [2], 2);
model.result('pg13').setIndex('looplevelinput', 'manual', 1);
model.result('pg13').setIndex('looplevel', [2], 1);
model.result('pg13').set('xlabelactive', true);
model.result('pg13').set('xlabel', 'x-coordinate (m)');
model.result('pg13').set('legendpos', 'upperleft');
model.result('pg13').create('lngr1', 'LineGraph');
model.result('pg13').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg13').feature('lngr1').set('linewidth', 'preference');
model.result('pg13').feature('lngr1').selection.all;
model.result('pg13').feature('lngr1').set('expr', 'pH');
model.result('pg13').feature('lngr1').set('linestyle', 'cycle');
model.result('pg13').feature('lngr1').set('legend', true);
model.result('pg13').feature('lngr1').set('legendmethod', 'evaluated');
model.result('pg13').feature('lngr1').set('legendpattern', 't=eval(t,h) h');
model.result('pg13').run;

model.title('Corrosion Inhibitor Transport');

model.description(['This example simulates atmospheric corrosion of a galvanic couple, comprising of an Al-Co-Ce metallic coating and an aluminum alloy, which is in contact with electrolyte film of 100' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'micrometer thickness.' newline  newline 'The corrosion inhibitors are released from the metallic coating and are transported to the aluminum scratch surface by diffusion and migration. The model presented here accounts for charge transport as well mass transport involving 11' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'species and 5' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'homogeneous reactions.' newline  newline 'The model computes the transient and spatial distribution of species in the film, estimating the time required for accumulation of critical inhibitor concentration over the aluminum scratch surface. The effect of scratch size and initial pH of the electrolyte is also demonstrated in the model.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;

model.label('corrosion_inhibitor_transport.mph');

model.modelNode.label('Components');

out = model;
