function out = model
%
% cubic_autocatalysis.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Chemical_Reaction_Engineering_Module/Ideal_Tank_Reactors');

model.modelNode.create('comp1', true);

model.physics.create('re', 'ReactionEng');
model.physics('re').model('comp1');

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/re', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('k', '0.0609[1/s]', 'rate constant');
model.param.set('f', '0.06[1/s]', 'feed rate');
model.param.set('l', '1[m]', 'length');
model.param.set('c0', '1[mol/m^3]', 'reference concentration');
model.param.set('DA', '2e-5[m^2/s]', 'diffusion coefficient for A');
model.param.set('DB', '1e-5[m^2/s]', 'diffusion coefficient for B');

model.physics('re').create('rch1', 'ReactionChem', -1);
model.physics('re').feature('rch1').set('formula', 'A+2B=>3B');
model.physics('re').feature('B').set('enableChemicalFormulaCheckbox', false);
model.physics('re').create('rch2', 'ReactionChem', -1);
model.physics('re').feature('rch2').set('formula', 'B=>0B');
model.physics('re').feature('rch2').set('kf', 'f+k');
model.physics('re').create('rch3', 'ReactionChem', -1);
model.physics('re').feature('rch3').set('formula', 'A=>0A');
model.physics('re').feature('rch3').set('kf', 'f');
model.physics('re').create('add1', 'AdditionalSourceFeature', -1);
model.physics('re').feature('add1').setIndex('AddR', 'f', 0, 0);
model.physics('re').feature('inits1').setIndex('initialValue', 1, 1, 0);

model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'k', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', '1/s', 0);
model.study('std1').feature('param').setIndex('pname', 'k', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', '1/s', 0);
model.study('std1').feature('param').setIndex('plistarr', 'range(0.0602, 1e-5, 0.0603)', 0);
model.study('std1').feature('param').setIndex('punit', '1/s', 0);
model.study('std1').feature('time').set('tlist', 'range(0,5,500)');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,5,500)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('tout', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 1.0E-5);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('consistent', 'off');
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'k'});
model.batch('p1').set('plistarr', {'range(0.0602, 1e-5, 0.0603)'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol.create('sol2');
model.sol('sol2').study('std1');
model.sol('sol2').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').run('compute');

model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').set('data', 'dset2');
model.result('pg1').create('glob1', 'Global');
model.result('pg1').feature('glob1').set('expr', {'re.c_A' 're.c_B'});
model.result('pg1').feature('glob1').set('descr', {'Concentration' 'Concentration'});
model.result('pg1').feature('glob1').set('unit', {'' ''});
model.result('pg1').feature('glob1').set('expr', {'re.c_A' 're.c_B'});
model.result('pg1').feature('glob1').set('descr', {'Concentration' 'Concentration'});
model.result('pg1').label('Concentration (re)');
model.result('pg1').feature('glob1').set('xdatasolnumtype', 'level1');
model.result('pg1').run;
model.result('pg1').set('titletype', 'none');
model.result('pg1').run;
model.result('pg1').feature('glob1').create('col1', 'Color');
model.result('pg1').run;
model.result('pg1').feature('glob1').feature('col1').set('expr', 'k-0.0602');
model.result('pg1').feature('glob1').feature('col1').set('colortable', 'Viridis');
model.result('pg1').feature('glob1').feature('col1').set('colortabletrans', 'reverse');
model.result('pg1').run;
model.result('pg1').feature('glob1').set('expr', {});
model.result('pg1').feature('glob1').set('descr', {});
model.result('pg1').feature('glob1').setIndex('expr', 're.c_A', 0);
model.result('pg1').feature('glob1').setIndex('unit', 'mol/m^3', 0);
model.result('pg1').feature('glob1').setIndex('descr', 'Concentration', 0);
model.result('pg1').feature('glob1').set('legend', false);
model.result('pg1').feature.duplicate('glob2', 'glob1');
model.result('pg1').run;
model.result('pg1').feature('glob2').setIndex('expr', 're.c_B', 0);
model.result('pg1').feature('glob2').setIndex('unit', 'mol/m^3', 0);
model.result('pg1').feature('glob2').setIndex('descr', 'Concentration', 0);
model.result('pg1').feature('glob2').set('linestyle', 'dashdot');
model.result('pg1').run;
model.result('pg1').feature('glob2').feature('col1').set('colorlegend', false);
model.result('pg1').run;
model.result('pg1').create('ann1', 'Annotation');
model.result('pg1').feature('ann1').set('posxexpr', 150);
model.result('pg1').feature('ann1').set('posyexpr', 0.6);
model.result('pg1').feature('ann1').set('text', 'solid lines: [A]');
model.result('pg1').feature.duplicate('ann2', 'ann1');
model.result('pg1').run;
model.result('pg1').feature('ann2').set('text', 'dashed lines: [B]');
model.result('pg1').feature('ann2').set('posyexpr', 0.2);
model.result('pg1').run;

model.physics('re').create('sync1', 'ReactionToMph', -1);
model.physics('re').feature('sync1').set('geomToUse', '2D');
model.physics('re').feature('sync1').set('study', 'Transient');
model.physics('re').prop('synchronize').set('synchronize', '1');

model.modelNode.create('comp2', true);

model.physics('re').feature('sync1').set('model', {'comp2'});

model.geom.create('geom1', 2);
model.geom('geom1').model('comp2');
model.geom('geom1').axisymmetric(false);
model.geom('geom1').label('Geometry 1(2D)');

model.physics('re').feature('sync1').set('genom', {'geom1'});

model.mesh.create('mesh1', 'geom1');

model.study.create('std2');

model.physics('re').feature('sync1').set('studyname', {'std2'});

model.study('std2').create('time', 'Transient');

model.physics.create('chem1', 'Chemistry', 'geom1');
model.physics('chem1').model('comp2');
model.physics('re').feature('sync1').set('Chemistry', {'chem1'});
model.physics.create('tds', 'DilutedSpecies', 'geom1');
model.physics('tds').model('comp2');
model.physics('chem1').prop('TPFeatureInput').set('T_src', 'userdef');
model.physics('chem1').prop('TPFeatureInput').set('T', '293.15[K]');
model.physics('chem1').prop('mixture').set('mixture', 'gas');
model.physics('chem1').prop('mixture').set('gasDensitySel', 'Automatic');
model.physics('chem1').prop('Activity').set('useActivity', '0');
model.physics('chem1').prop('chemkin').set('chemkin', '0');
model.physics('chem1').prop('ChemistryCommonProperty').set('VolumetricConcentrationGlobalActivityStandardState', '1[mol/m^3]');
model.physics('chem1').prop('ChemistryCommonProperty').set('SurfaceSpeciesConcentrationType', 'SurfaceConcentration');
model.physics('chem1').prop('ChemistryCommonProperty').set('SurfaceGlobalActivityStandardState', '1[mol/m^2]');
model.physics('chem1').prop('ChemistryCommonProperty').set('SpeciesrateUserDefinedList', {});
model.physics('chem1').prop('ChemistryCommonProperty').set('AdditionalSourceFeature', '1');
model.physics('chem1').prop('ActiveSpecies').set('SumActiveSpecies', '2');
model.physics('chem1').prop('ActiveSpecies').set('NumActiveVolumeSpecies', '2');
model.physics('chem1').prop('ActiveSpecies').set('NumActiveSurfaceSpecies', '0');
model.physics('chem1').prop('ActiveSpecies').set('NumActiveSurfaceSpeciesVariable', '0');
model.physics('chem1').prop('ActiveSpecies').set('surface', '0');
model.physics('chem1').prop('solventIsSet').set('solventIsSet', '0');
model.physics('chem1').create('rch1', 'ReactionChem');
model.physics('chem1').feature('rch1').set('rSequenceNo', '1');
model.physics('chem1').feature('rch1').set('formula', 'A + 2 B => 3 B');
model.physics('chem1').feature('rch1').set('updatechem', '0');
model.physics('chem1').feature('rch1').set('useArrhenius', '0');
model.physics('chem1').feature('rch1').set('kf', '1');
model.physics('chem1').feature('rch1').set('bulkFwdOrder', '3');
model.physics('chem1').feature('rch1').set('surfFwdOrder', '0');
model.physics('chem1').feature('rch1').label('1: A + 2 B => 3 B');
model.physics('chem1').feature('rch1').set('rClass', 'volumetric');
model.physics('chem1').create('rch2', 'ReactionChem');
model.physics('chem1').feature('rch2').set('rSequenceNo', '2');
model.physics('chem1').feature('rch2').set('formula', 'B => 0 B');
model.physics('chem1').feature('rch2').set('updatechem', '0');
model.physics('chem1').feature('rch2').set('useArrhenius', '0');
model.physics('chem1').feature('rch2').set('kf', 'f+k');
model.physics('chem1').feature('rch2').set('bulkFwdOrder', '1');
model.physics('chem1').feature('rch2').set('surfFwdOrder', '0');
model.physics('chem1').feature('rch2').label('2: B => 0 B');
model.physics('chem1').feature('rch2').set('rClass', 'volumetric');
model.physics('chem1').create('rch3', 'ReactionChem');
model.physics('chem1').feature('rch3').set('rSequenceNo', '3');
model.physics('chem1').feature('rch3').set('formula', 'A => 0 A');
model.physics('chem1').feature('rch3').set('updatechem', '0');
model.physics('chem1').feature('rch3').set('useArrhenius', '0');
model.physics('chem1').feature('rch3').set('kf', 'f');
model.physics('chem1').feature('rch3').set('bulkFwdOrder', '1');
model.physics('chem1').feature('rch3').set('surfFwdOrder', '0');
model.physics('chem1').feature('rch3').label('3: A => 0 A');
model.physics('chem1').feature('rch3').set('rClass', 'volumetric');
model.physics('chem1').feature('A').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('A').set('sisDef', '1');
model.physics('chem1').feature('A').set('specLabel', 'A');
model.physics('chem1').feature('A').set('speciesNameInput', 'A');
model.physics('chem1').feature('A').set('specName', 'A');
model.physics('chem1').feature('A').set('enableChemicalFormulaCheckbox', '0');
model.physics('chem1').feature('A').set('chemicalFormula', '');
model.physics('chem1').feature('A').set('sType', 'volumetric');
model.physics('chem1').feature('A').set('M', '0.0[kg/mol]');
model.physics('chem1').feature('A').set('z', '0');
model.physics('chem1').feature('A').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('A').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('A').set('mu', '0[C*m]');
model.physics('chem1').feature('A').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('A').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('A').set('ActivityCoefficient', '1');
model.physics('chem1').feature('A').set('cLock', '0');
model.physics('chem1').feature('A').set('Dependent', '0');
model.physics('chem1').feature('A').set('dependent', '0');
model.physics('chem1').feature('A').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('A').set('AdditionalSource', '1');
model.physics('chem1').feature('A').set('AddR', 'f');
model.physics('chem1').feature('A').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('A').set('Tlo', '300[K]');
model.physics('chem1').feature('A').set('Tmid', '1000[K]');
model.physics('chem1').feature('A').set('Thi', '5000[K]');
model.physics('chem1').feature('A').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('A').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('A').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('A').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('A').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('A').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('A').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('A').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('A').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('A').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('A').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('A').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('A').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('A').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').feature('B').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('B').set('sisDef', '1');
model.physics('chem1').feature('B').set('specLabel', 'B');
model.physics('chem1').feature('B').set('speciesNameInput', 'B');
model.physics('chem1').feature('B').set('specName', 'B');
model.physics('chem1').feature('B').set('enableChemicalFormulaCheckbox', '0');
model.physics('chem1').feature('B').set('chemicalFormula', 'B');
model.physics('chem1').feature('B').set('sType', 'volumetric');
model.physics('chem1').feature('B').set('M', '10.8135[g/mol]');
model.physics('chem1').feature('B').set('z', '0');
model.physics('chem1').feature('B').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('B').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('B').set('mu', '0[C*m]');
model.physics('chem1').feature('B').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('B').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('B').set('ActivityCoefficient', '1');
model.physics('chem1').feature('B').set('cLock', '0');
model.physics('chem1').feature('B').set('Dependent', '0');
model.physics('chem1').feature('B').set('dependent', '0');
model.physics('chem1').feature('B').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('B').set('AdditionalSource', '1');
model.physics('chem1').feature('B').set('AddR', '0');
model.physics('chem1').feature('B').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('B').set('Tlo', '300[K]');
model.physics('chem1').feature('B').set('Tmid', '1000[K]');
model.physics('chem1').feature('B').set('Thi', '5000[K]');
model.physics('chem1').feature('B').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('B').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('B').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('B').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('B').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('B').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('B').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('B').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('B').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('B').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('B').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('B').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('B').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('B').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').prop('simpropChem').set('rSequenceNo', '3');
model.physics('chem1').prop('simpropChem').set('sSequenceNo', '2');
model.physics('chem1').prop('mixture').set('hasPropertyPackage', '0');
model.physics('chem1').prop('mixture').set('PropertyPackage', '');
model.physics('chem1').prop('mixture').set('Thermodynamics', '0');
model.physics('tds').field('concentration').component({'cA' 'cB'});
model.physics('tds').feature('init1').set('initc', {'0' '1'});
model.physics('tds').feature.create('reac1', 'Reactions');
model.physics('tds').feature('reac1').selection.all;
model.physics('tds').feature('reac1').set('ReactingVolumeType', 'TotalVolume');
model.physics('chem1').prop('ChemistryModelInputParameter').set('MassTransfer', 'tds');
model.physics('chem1').prop('ChemistryModelInputParameter').set('ConcentrationInput', {'cA' 'cB'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('ConcentrationValue', {'Solved for' 'Solved for'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('uselog', {'cA' 'cB'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('SolidConcentration', {});
model.physics('chem1').prop('ChemistryModelInputParameter').set('csurf', {});
model.physics('chem1').prop('ChemistryModelInputParameter').set('AqueousSpeciesConcentration', {});
model.physics('tds').feature('sp1').set('z', {'0' '0'});
model.physics('tds').feature('cdm1').set('Dchem_cA', '1e-5[m^2/s]');
model.physics('tds').feature('cdm1').set('D_cA', '1e-5[m^2/s]');
model.physics('tds').feature('cdm1').set('Dchem_cB', '1e-5[m^2/s]');
model.physics('tds').feature('cdm1').set('D_cB', '1e-5[m^2/s]');
model.physics('tds').feature('reac1').setIndex('R_cA_src', 'root.comp2.chem.R_A', 0);
model.physics('tds').feature('reac1').setIndex('R_cB_src', 'root.comp2.chem.R_B', 0);
model.physics('re').feature('sync1').set('geomToUse', 'geom1');
model.physics('re').feature('sync1').set('massbalance', 'tds');
model.physics('re').feature('sync1').set('genom', {'geom1'});
model.physics('re').feature('sync1').set('studyname', {'std2'});
model.physics('chem1').prop('StudyStep').set('StudyStep', 'std2/time');
model.physics('chem1').feature('dcont1').set('StudyStep', 'std2/time');
model.physics('chem1').feature('rch1').set('StudyStep', 'std2/time');
model.physics('chem1').feature('A').set('StudyStep', 'std2/time');
model.physics('chem1').feature('B').set('StudyStep', 'std2/time');
model.physics('chem1').feature('rch2').set('StudyStep', 'std2/time');
model.physics('chem1').feature('rch3').set('StudyStep', 'std2/time');
model.physics('tds').prop('StudyStep').set('StudyStep', 'std2/time');
model.physics('tds').feature('sp1').set('StudyStep', 'std2/time');
model.physics('tds').feature('cdm1').set('StudyStep', 'std2/time');
model.physics('tds').feature('nflx1').set('StudyStep', 'std2/time');
model.physics('tds').feature('init1').set('StudyStep', 'std2/time');
model.physics('tds').feature('dcont1').set('StudyStep', 'std2/time');
model.physics('tds').feature('reac1').set('StudyStep', 'std2/time');

model.study('std1').feature('param').setSolveFor('/physics/chem1', false);
model.study('std1').feature('time').setSolveFor('/physics/chem1', false);
model.study('std1').feature('param').setSolveFor('/physics/tds', false);
model.study('std1').feature('time').setSolveFor('/physics/tds', false);
model.study('std2').feature('time').setSolveFor('/physics/re', false);

model.geom('geom1').run;

model.variable.create('var1');
model.variable('var1').model('comp2');

% To import content from file, use:
% model.variable('var1').loadFile('FILENAME');
model.variable('var1').set('cA0', 'c0*(0.4201+0.2*(sa1+sa2+sb+sc))', 'Initial conc. A');
model.variable('var1').set('cB0', 'c0*0.34 - 0.1*cA0', 'Initial conc. B');
model.variable('var1').set('ra', 'sqrt((x-0.5)^2+(y-0.5)^2)', 'radius a (from center)');
model.variable('var1').set('rb', 'sqrt((x-0.25)^2+(y-0.97)^2)', 'radius b (from 1st smaller loci)');
model.variable('var1').set('rc', 'sqrt((x-0.75)^2+(y-0.97)^2)', 'radius c (from 2nd smaller loci)');
model.variable('var1').set('sa1', 'exp(-(20*(ra-0.13*l))^4/l^4)', 'inner annular front');
model.variable('var1').set('sa2', 'exp(-(20*(ra-0.3*l))^4/l^4)', 'outer annular front');
model.variable('var1').set('sb', 'exp(-(20*(rb-0.11*l))^4/l^4)', 'satellite b');
model.variable('var1').set('sc', 'exp(-(20*(rc-0.11*l))^4/l^4)', 'satellite c');

model.geom('geom1').create('sq1', 'Square');
model.geom('geom1').feature('sq1').set('size', '2*l');
model.geom('geom1').feature('sq1').set('pos', {'-l/2' '-l/2'});
model.geom('geom1').run;

model.physics('chem1').prop('calcTransport').set('calcTransport', false);
model.physics('tds').feature('init1').setIndex('initc', 'cA0', 0);
model.physics('tds').feature('init1').setIndex('initc', 'cB0', 1);
model.physics('tds').create('pc1', 'PeriodicCondition', 1);
model.physics('tds').feature('pc1').selection.set([2 3]);
model.physics('tds').create('pc2', 'PeriodicCondition', 1);
model.physics('tds').feature('pc2').selection.set([1 4]);
model.physics('tds').feature('cdm1').set('D_cA', {'DA' '0' '0' '0' 'DA' '0' '0' '0' 'DA'});
model.physics('tds').feature('cdm1').set('D_cB', {'DB' '0' '0' '0' 'DB' '0' '0' '0' 'DB'});

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 200);
model.mesh('mesh1').feature('map1').feature('dis1').selection.all;
model.mesh('mesh1').run;

model.study('std2').create('param', 'Parametric');
model.study('std2').feature('param').setIndex('pname', 'k', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', '1/s', 0);
model.study('std2').feature('param').setIndex('pname', 'k', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', '1/s', 0);
model.study('std2').feature('param').setIndex('plistarr', '0.0609 0.06105 0.0611', 0);
model.study('std2').feature('param').setIndex('punit', '1/s', 0);

model.sol.create('sol14');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol14').study('std2');
model.sol('sol14').create('st1', 'StudyStep');
model.sol('sol14').feature('st1').set('study', 'std2');
model.sol('sol14').feature('st1').set('studystep', 'time');
model.sol('sol14').create('v1', 'Variables');
model.sol('sol14').feature('v1').set('control', 'time');
model.sol('sol14').create('t1', 'Time');
model.sol('sol14').feature('t1').set('tlist', 'range(0,0.1,1)');
model.sol('sol14').feature('t1').set('plot', 'off');
model.sol('sol14').feature('t1').set('plotgroup', 'pg1');
model.sol('sol14').feature('t1').set('plotfreq', 'tout');
model.sol('sol14').feature('t1').set('probesel', 'all');
model.sol('sol14').feature('t1').set('probes', {});
model.sol('sol14').feature('t1').set('probefreq', 'tsteps');
model.sol('sol14').feature('t1').set('rtol', 0.005);
model.sol('sol14').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol14').feature('t1').set('reacf', true);
model.sol('sol14').feature('t1').set('storeudot', true);
model.sol('sol14').feature('t1').set('endtimeinterpolation', true);
model.sol('sol14').feature('t1').set('maxorder', 2);
model.sol('sol14').feature('t1').set('stabcntrl', true);
model.sol('sol14').feature('t1').set('control', 'time');
model.sol('sol14').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol14').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol14').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol14').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol14').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol14').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol14').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol14').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol14').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol14').feature('t1').create('d1', 'Direct');
model.sol('sol14').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol14').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol14').feature('t1').feature('d1').label('Direct, concentrations (tds)');
model.sol('sol14').feature('t1').create('i1', 'Iterative');
model.sol('sol14').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol14').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol14').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol14').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol14').feature('t1').feature('i1').set('maxlinit', 50);
model.sol('sol14').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol14').feature('t1').feature('i1').label('AMG, concentrations (tds)');
model.sol('sol14').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol14').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol14').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol14').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol14').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol14').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol14').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol14').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol14').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol14').feature('t1').feature.remove('fcDef');
model.sol('sol14').attach('std2');

model.batch.create('p2', 'Parametric');
model.batch('p2').study('std2');
model.batch('p2').create('so1', 'Solutionseq');
model.batch('p2').feature('so1').set('seq', 'sol14');
model.batch('p2').feature('so1').set('store', 'on');
model.batch('p2').feature('so1').set('clear', 'on');
model.batch('p2').feature('so1').set('psol', 'none');
model.batch('p2').set('pname', {'k'});
model.batch('p2').set('plistarr', {'0.0609 0.06105 0.0611'});
model.batch('p2').set('sweeptype', 'sparse');
model.batch('p2').set('probesel', 'all');
model.batch('p2').set('probes', {});
model.batch('p2').set('plot', 'off');
model.batch('p2').set('err', 'on');
model.batch('p2').attach('std2');
model.batch('p2').set('control', 'param');

model.sol.create('sol15');
model.sol('sol15').study('std2');
model.sol('sol15').label('Parametric Solutions 2');

model.batch('p2').feature('so1').set('psol', 'sol15');

model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').set('data', 'dset4');
model.result('pg2').label('Concentration, A (tds)');
model.result('pg2').set('titletype', 'custom');
model.result('pg2').set('prefixintitle', 'Species A:');
model.result('pg2').set('expressionintitle', false);
model.result('pg2').set('typeintitle', true);
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'cA'});
model.result('pg2').create('str1', 'Streamline');
model.result('pg2').feature('str1').set('expr', {'tds.tflux_cAx' 'tds.tflux_cAy'});
model.result('pg2').feature('str1').set('posmethod', 'uniform');
model.result('pg2').feature('str1').set('recover', 'pprint');
model.result('pg2').feature('str1').set('pointtype', 'arrow');
model.result('pg2').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg2').feature('str1').set('color', 'gray');
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').set('data', 'dset4');
model.result('pg3').label('Concentration, B (tds)');
model.result('pg3').set('titletype', 'custom');
model.result('pg3').set('prefixintitle', 'Species B:');
model.result('pg3').set('expressionintitle', false);
model.result('pg3').set('typeintitle', true);
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', {'cB'});
model.result('pg3').create('str1', 'Streamline');
model.result('pg3').feature('str1').set('expr', {'tds.tflux_cBx' 'tds.tflux_cBy'});
model.result('pg3').feature('str1').set('posmethod', 'uniform');
model.result('pg3').feature('str1').set('recover', 'pprint');
model.result('pg3').feature('str1').set('pointtype', 'arrow');
model.result('pg3').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg3').feature('str1').set('color', 'gray');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature.remove('str1');
model.result('pg2').run;
model.result('pg3').run;
model.result.remove('pg3');
model.result('pg2').run;
model.result('pg2').set('plotarrayenable', true);
model.result('pg2').set('arrayshape', 'square');
model.result('pg2').feature('surf1').set('arraydim', '2');
model.result('pg2').run;
model.result('pg2').feature('surf1').label('cA');
model.result('pg2').feature('surf1').set('manualindexing', true);
model.result('pg2').feature('surf1').set('colindex', 1);
model.result('pg2').feature('surf1').create('hght1', 'Height');
model.result('pg2').run;
model.result('pg2').feature('surf1').feature('hght1').set('scaleactive', true);
model.result('pg2').feature('surf1').feature('hght1').set('scale', '1.0');
model.result('pg2').feature('surf1').set('arraydim', '2');
model.result('pg2').run;
model.result('pg2').feature('surf1').set('colortable', 'Cividis');
model.result('pg2').feature.duplicate('surf2', 'surf1');
model.result('pg2').feature('surf2').set('arraydim', '2');
model.result('pg2').run;
model.result('pg2').feature('surf2').label('cB');
model.result('pg2').feature('surf2').set('expr', 'cB');
model.result('pg2').feature('surf2').set('colortable', 'Viridis');
model.result('pg2').feature('surf2').set('colindex', 0);

model.study('std2').feature('time').set('tlist', 'range(0, 1, 10-1) range(10, 10, 300-10) range(300, 100, 1000-100) range(1e3, 1e3, 2e4-1e3) range(2e4, 2.5e3, 5e4-2.5e3) range(5e4, 1e4, 1e5-1e4) range(1e5, 2.5e4, 6e5)');
model.study('std2').feature('time').set('usertol', true);
model.study('std2').feature('time').set('rtol', 0.001);
model.study('std2').feature('time').set('plot', true);
model.study('std2').feature('time').set('plotgroup', 'pg2');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol14').study('std2');
model.sol('sol14').feature.remove('t1');
model.sol('sol14').feature.remove('v1');
model.sol('sol14').feature.remove('st1');
model.sol('sol14').create('st1', 'StudyStep');
model.sol('sol14').feature('st1').set('study', 'std2');
model.sol('sol14').feature('st1').set('studystep', 'time');
model.sol('sol14').create('v1', 'Variables');
model.sol('sol14').feature('v1').set('control', 'time');
model.sol('sol14').create('t1', 'Time');
model.sol('sol14').feature('t1').set('tlist', 'range(0, 1, 10-1) range(10, 10, 300-10) range(300, 100, 1000-100) range(1e3, 1e3, 2e4-1e3) range(2e4, 2.5e3, 5e4-2.5e3) range(5e4, 1e4, 1e5-1e4) range(1e5, 2.5e4, 6e5)');
model.sol('sol14').feature('t1').set('plot', 'on');
model.sol('sol14').feature('t1').set('plotgroup', 'pg2');
model.sol('sol14').feature('t1').set('plotfreq', 'tout');
model.sol('sol14').feature('t1').set('probesel', 'all');
model.sol('sol14').feature('t1').set('probes', {});
model.sol('sol14').feature('t1').set('probefreq', 'tsteps');
model.sol('sol14').feature('t1').set('rtol', 0.005);
model.sol('sol14').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol14').feature('t1').set('reacf', true);
model.sol('sol14').feature('t1').set('storeudot', true);
model.sol('sol14').feature('t1').set('endtimeinterpolation', true);
model.sol('sol14').feature('t1').set('maxorder', 2);
model.sol('sol14').feature('t1').set('stabcntrl', true);
model.sol('sol14').feature('t1').set('control', 'time');
model.sol('sol14').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol14').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol14').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol14').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol14').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol14').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol14').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol14').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol14').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol14').feature('t1').create('d1', 'Direct');
model.sol('sol14').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol14').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol14').feature('t1').feature('d1').label('Direct, concentrations (tds)');
model.sol('sol14').feature('t1').create('i1', 'Iterative');
model.sol('sol14').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol14').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol14').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol14').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol14').feature('t1').feature('i1').set('maxlinit', 50);
model.sol('sol14').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol14').feature('t1').feature('i1').label('AMG, concentrations (tds)');
model.sol('sol14').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol14').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol14').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol14').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol14').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol14').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol14').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol14').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol14').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol14').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol14').feature('t1').feature.remove('fcDef');
model.sol('sol14').attach('std2');

model.batch('p2').feature.remove('so1');
model.batch('p2').create('so1', 'Solutionseq');
model.batch('p2').feature('so1').set('seq', 'sol14');
model.batch('p2').feature('so1').set('store', 'on');
model.batch('p2').feature('so1').set('clear', 'on');
model.batch('p2').feature('so1').set('psol', 'sol15');
model.batch('p2').set('pname', {'k'});
model.batch('p2').set('plistarr', {'0.0609 0.06105 0.0611'});
model.batch('p2').set('sweeptype', 'sparse');
model.batch('p2').set('probesel', 'all');
model.batch('p2').set('probes', {});
model.batch('p2').set('plot', 'off');
model.batch('p2').set('err', 'on');
model.batch('p2').attach('std2');
model.batch('p2').set('control', 'param');
model.batch('p2').run('compute');

model.result('pg2').run;
model.result('pg2').set('titletype', 'none');
model.result('pg2').set('showlegendsunit', true);
model.result('pg2').set('legendpos', 'alternating');
model.result.export.create('anim1', 'Animation');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('plotgroup', 'pg2');
model.result.export('anim1').run;
model.result.export('anim1').set('framesel', 'all');
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 2, 1);
model.result.export('anim1').run;

model.title(['Cubic Autocatalysis: Exploring the Gray' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Scott Model']);

model.description('A deceptively simple system of two species and two reactions, describing the autocatalytic conversion of a substance, is shown to display a surprisingly exotic behavior. Starting from a 0D CSTR description, a 2D reaction-diffusion problem is formulated showing rich patterns stemming from the multistability of the underlying reaction network.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;
model.sol('sol8').clearSolutionData;
model.sol('sol9').clearSolutionData;
model.sol('sol10').clearSolutionData;
model.sol('sol11').clearSolutionData;
model.sol('sol12').clearSolutionData;
model.sol('sol13').clearSolutionData;
model.sol('sol14').clearSolutionData;
model.sol('sol15').clearSolutionData;
model.sol('sol16').clearSolutionData;
model.sol('sol17').clearSolutionData;
model.sol('sol18').clearSolutionData;

model.label('cubic_autocatalysis.mph');

model.modelNode.label('Components');

out = model;
