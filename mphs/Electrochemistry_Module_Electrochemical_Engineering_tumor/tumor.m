function out = model
%
% tumor.m
%
% Model exported on May 26 2025, 21:28 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Electrochemistry_Module/Electrochemical_Engineering');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 1);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('tcd', 'TertiaryCurrentDistributionNernstPlanck', 'geom1', {'Na' 'H' 'Cl'});

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/tcd', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('r_a', '1[mm]', 'Anode radius');
model.param.set('D_Na', '1.33e-9[m^2/s]', 'Diffusivity, Na');
model.param.set('D_H', '9.31e-9[m^2/s]', 'Diffusivity, H');
model.param.set('D_Cl', '2.03e-9[m^2/s]', 'Diffusivity, Cl');
model.param.set('T', '298[K]', 'Temperature');
model.param.set('Na0', '0.16[mol/liter]', 'Initial concentration, Na');
model.param.set('H0', '1e-7[mol/liter]', 'Initial concentration, H');
model.param.set('Cl0', '0.16[mol/liter]', 'Initial concentration, Cl');
model.param.set('z_Na', '1[1]', 'Charge number, Na');
model.param.set('z_H', '1[1]', 'Charge number, H');
model.param.set('z_Cl', '-1[1]', 'Charge number, Cl');
model.param.set('j_tot0', '100[A/m^2]', 'Initial total current density');
model.param.set('j_I0', '1e-6[A/m^2]', 'Exchange current density, reaction I');
model.param.set('j_II0', '10[A/m^2]', 'Exchange current density, reaction II');
model.param.set('V_ra0', '-1.4787[V]', 'Initial anode potential');
model.param.set('E_eqI', '1.23[V]', 'Equilibrium potential, reaction I');
model.param.set('E_eqII', '1.36[V]', 'Equilibrium potential, reaction II');
model.param.set('kappa0', 'F_const^2*(D_Na*Na0+D_H*H0+D_Cl*Cl0)/(R_const*T)', 'Initial conductivity');
model.param.set('r_ext', '60[mm]', 'Exterior boundary radius');

model.variable.create('var1');
model.variable('var1').model('comp1');

model.geom('geom1').run;

% To import content from file, use:
% model.variable('var1').loadFile('FILENAME');
model.variable('var1').set('E_cell', '(0.4977+0.2567*log(100+t/1[s]))[V]', 'Cell voltage');
model.variable('var1').set('pH', '-log10(H/1[mol/liter])', 'pH expression');

model.geom('geom1').create('i1', 'Interval');
model.geom('geom1').feature('i1').setIndex('coord', 'r_a', 0);
model.geom('geom1').feature('i1').setIndex('coord', 'r_ext', 1);
model.geom('geom1').run('i1');
model.geom('geom1').run;

model.physics('tcd').feature('sp1').setIndex('z', 'z_Na', 0);
model.physics('tcd').feature('sp1').setIndex('z', 'z_H', 1);
model.physics('tcd').feature('sp1').setIndex('z', 'z_Cl', 2);
model.physics('tcd').feature('ice1').set('D_Na', {'D_Na' '0' '0' '0' 'D_Na' '0' '0' '0' 'D_Na'});
model.physics('tcd').feature('ice1').set('D_H', {'D_H' '0' '0' '0' 'D_H' '0' '0' '0' 'D_H'});
model.physics('tcd').feature('ice1').set('D_Cl', {'D_Cl' '0' '0' '0' 'D_Cl' '0' '0' '0' 'D_Cl'});
model.physics('tcd').create('eip1', 'ElectrolytePotential', 0);
model.physics('tcd').feature('eip1').selection.set([2]);
model.physics('tcd').create('conc1', 'Concentration', 0);
model.physics('tcd').feature('conc1').selection.set([2]);
model.physics('tcd').feature('conc1').setIndex('species', true, 1);
model.physics('tcd').feature('conc1').setIndex('c0', 'H0', 1);
model.physics('tcd').feature('conc1').setIndex('species', true, 2);
model.physics('tcd').feature('conc1').setIndex('c0', 'Cl0', 2);
model.physics('tcd').create('es1', 'ElectrodeSurface', 0);
model.physics('tcd').feature('es1').selection.set([1]);
model.physics('tcd').feature('es1').set('phisext0', 'E_cell');
model.physics('tcd').feature('es1').feature('er1').setIndex('Vi0', -1, 1);
model.physics('tcd').feature('es1').feature('er1').set('Eeq_ref', 'E_eqI');
model.physics('tcd').feature('es1').feature('er1').setIndex('cref', 'H0', 1, 0);
model.physics('tcd').feature('es1').feature('er1').set('i0_ref', 'j_I0');
model.physics('tcd').feature('es1').create('er2', 'ElectrodeReaction', 0);
model.physics('tcd').feature('es1').feature('er2').setIndex('Vi0', 1, 2);
model.physics('tcd').feature('es1').feature('er2').set('Eeq_ref', 'E_eqII');
model.physics('tcd').feature('es1').feature('er2').setIndex('cref', 'Cl0', 2, 0);
model.physics('tcd').feature('es1').feature('er2').set('i0_ref', 'j_II0');
model.physics('tcd').feature('init1').setIndex('initc', 'H0', 1);
model.physics('tcd').feature('init1').setIndex('initc', 'Cl0', 2);

model.common('cminpt').set('modified', {'temperature' 'T'});

model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('size').set('hauto', 2);
model.mesh('mesh1').feature('edg1').create('size1', 'Size');
model.mesh('mesh1').feature('edg1').feature('size1').selection.geom('geom1', 0);
model.mesh('mesh1').feature('edg1').feature('size1').selection.set([1]);
model.mesh('mesh1').feature('edg1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('edg1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('edg1').feature('size1').set('hmax', '1e-8');
model.mesh('mesh1').feature('edg1').feature('size1').set('hgradactive', true);
model.mesh('mesh1').feature('edg1').feature('size1').set('hgrad', 1.1);
model.mesh('mesh1').run;

model.study('std1').feature('time').set('tlist', '0 3600');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_phil').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_phil').set('scaleval', '1');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', '0 3600');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('eventout', true);
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').label('Direct (tcd)');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i1').label('Algebraic Multigrid (tcd)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('compactaggregation', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').create('i2', 'Iterative');
model.sol('sol1').feature('t1').feature('i2').set('maxlinit', 1000);
model.sol('sol1').feature('t1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i2').label('Geometric Multigrid (tcd)');
model.sol('sol1').feature('t1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('t1').set('tout', 'tsteps');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').label('Electrolyte Potential (tcd)');
model.result('pg1').create('lngr1', 'LineGraph');
model.result('pg1').feature('lngr1').set('xdata', 'expr');
model.result('pg1').feature('lngr1').set('xdataexpr', 'r');
model.result('pg1').feature('lngr1').selection.geom('geom1', 1);
model.result('pg1').feature('lngr1').selection.set([1]);
model.result('pg1').feature('lngr1').set('expr', {'phil'});
model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').set('titletype', 'manual');
model.result('pg2').set('title', 'Concentrations, All Species');
model.result('pg2').label('Concentrations, All Species (tcd)');
model.result('pg2').create('lngr1', 'LineGraph');
model.result('pg2').feature('lngr1').set('xdata', 'expr');
model.result('pg2').feature('lngr1').set('xdataexpr', 'r');
model.result('pg2').feature('lngr1').selection.geom('geom1', 1);
model.result('pg2').feature('lngr1').selection.set([1]);
model.result('pg2').feature('lngr1').set('expr', {'Na'});
model.result('pg2').feature('lngr1').label('Species Na');
model.result('pg2').feature('lngr1').set('legend', true);
model.result('pg2').feature('lngr1').set('autosolution', false);
model.result('pg2').feature('lngr1').set('autoexpr', false);
model.result('pg2').feature('lngr1').set('autodescr', false);
model.result('pg2').feature('lngr1').set('legendprefix', 'Na ');
model.result('pg2').create('lngr2', 'LineGraph');
model.result('pg2').feature('lngr2').set('xdata', 'expr');
model.result('pg2').feature('lngr2').set('xdataexpr', 'r');
model.result('pg2').feature('lngr2').selection.geom('geom1', 1);
model.result('pg2').feature('lngr2').selection.set([1]);
model.result('pg2').feature('lngr2').set('expr', {'H'});
model.result('pg2').feature('lngr2').label('Species H');
model.result('pg2').feature('lngr2').set('legend', true);
model.result('pg2').feature('lngr2').set('autosolution', false);
model.result('pg2').feature('lngr2').set('autoexpr', false);
model.result('pg2').feature('lngr2').set('autodescr', false);
model.result('pg2').feature('lngr2').set('legendprefix', 'H ');
model.result('pg2').create('lngr3', 'LineGraph');
model.result('pg2').feature('lngr3').set('xdata', 'expr');
model.result('pg2').feature('lngr3').set('xdataexpr', 'r');
model.result('pg2').feature('lngr3').selection.geom('geom1', 1);
model.result('pg2').feature('lngr3').selection.set([1]);
model.result('pg2').feature('lngr3').set('expr', {'Cl'});
model.result('pg2').feature('lngr3').label('Species Cl');
model.result('pg2').feature('lngr3').set('legend', true);
model.result('pg2').feature('lngr3').set('autosolution', false);
model.result('pg2').feature('lngr3').set('autoexpr', false);
model.result('pg2').feature('lngr3').set('autodescr', false);
model.result('pg2').feature('lngr3').set('legendprefix', 'Cl ');
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').set('data', 'dset1');
model.result('pg3').label('Concentration, Na (tcd)');
model.result('pg3').set('titletype', 'custom');
model.result('pg3').set('prefixintitle', 'Species Na:');
model.result('pg3').set('expressionintitle', false);
model.result('pg3').set('typeintitle', false);
model.result('pg3').create('lngr1', 'LineGraph');
model.result('pg3').feature('lngr1').set('xdata', 'expr');
model.result('pg3').feature('lngr1').set('xdataexpr', 'r');
model.result('pg3').feature('lngr1').selection.geom('geom1', 1);
model.result('pg3').feature('lngr1').selection.set([1]);
model.result('pg3').feature('lngr1').set('expr', {'Na'});
model.result.dataset.create('rev1', 'Revolve1D');
model.result.dataset('rev1').set('data', 'dset1');
model.result.dataset('rev1').set('revangle', 225);
model.result.dataset('rev1').set('startangle', -90);
model.result.dataset('rev1').set('hasspacevars', true);
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').set('data', 'rev1');
model.result('pg4').setIndex('looplevel', 96, 0);
model.result('pg4').label('Concentration, Na, 2D (tcd)');
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', {'Na'});
model.result('pg4').create('arws1', 'ArrowSurface');
model.result('pg4').feature('arws1').set('expr', {'tcd.tflux_Nar' 'tcd.tflux_Naz'});
model.result('pg4').feature('arws1').set('xnumber', 16);
model.result('pg4').feature('arws1').set('ynumber', 15);
model.result('pg4').feature('arws1').set('color', 'gray');
model.result('pg4').feature('arws1').set('revcoordsys', 'cylindrical');
model.result('pg4').set('titletype', 'custom');
model.result('pg4').set('typeintitle', true);
model.result('pg4').set('prefixintitle', 'Species Na:');
model.result('pg4').set('expressionintitle', false);
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').set('data', 'dset1');
model.result('pg5').label('Concentration, H (tcd)');
model.result('pg5').set('titletype', 'custom');
model.result('pg5').set('prefixintitle', 'Species H:');
model.result('pg5').set('expressionintitle', false);
model.result('pg5').set('typeintitle', false);
model.result('pg5').create('lngr1', 'LineGraph');
model.result('pg5').feature('lngr1').set('xdata', 'expr');
model.result('pg5').feature('lngr1').set('xdataexpr', 'r');
model.result('pg5').feature('lngr1').selection.geom('geom1', 1);
model.result('pg5').feature('lngr1').selection.set([1]);
model.result('pg5').feature('lngr1').set('expr', {'H'});
model.result.create('pg6', 'PlotGroup2D');
model.result('pg6').set('data', 'rev1');
model.result('pg6').setIndex('looplevel', 96, 0);
model.result('pg6').label('Concentration, H, 2D (tcd)');
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', {'H'});
model.result('pg6').create('arws1', 'ArrowSurface');
model.result('pg6').feature('arws1').set('expr', {'tcd.tflux_Hr' 'tcd.tflux_Hz'});
model.result('pg6').feature('arws1').set('xnumber', 16);
model.result('pg6').feature('arws1').set('ynumber', 15);
model.result('pg6').feature('arws1').set('color', 'gray');
model.result('pg6').feature('arws1').set('revcoordsys', 'cylindrical');
model.result('pg6').set('titletype', 'custom');
model.result('pg6').set('typeintitle', true);
model.result('pg6').set('prefixintitle', 'Species H:');
model.result('pg6').set('expressionintitle', false);
model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').set('data', 'dset1');
model.result('pg7').label('Concentration, Cl (tcd)');
model.result('pg7').set('titletype', 'custom');
model.result('pg7').set('prefixintitle', 'Species Cl:');
model.result('pg7').set('expressionintitle', false);
model.result('pg7').set('typeintitle', false);
model.result('pg7').create('lngr1', 'LineGraph');
model.result('pg7').feature('lngr1').set('xdata', 'expr');
model.result('pg7').feature('lngr1').set('xdataexpr', 'r');
model.result('pg7').feature('lngr1').selection.geom('geom1', 1);
model.result('pg7').feature('lngr1').selection.set([1]);
model.result('pg7').feature('lngr1').set('expr', {'Cl'});
model.result.create('pg8', 'PlotGroup2D');
model.result('pg8').set('data', 'rev1');
model.result('pg8').setIndex('looplevel', 96, 0);
model.result('pg8').label('Concentration, Cl, 2D (tcd)');
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').feature('surf1').set('expr', {'Cl'});
model.result('pg8').create('arws1', 'ArrowSurface');
model.result('pg8').feature('arws1').set('expr', {'tcd.tflux_Clr' 'tcd.tflux_Clz'});
model.result('pg8').feature('arws1').set('xnumber', 16);
model.result('pg8').feature('arws1').set('ynumber', 15);
model.result('pg8').feature('arws1').set('color', 'gray');
model.result('pg8').feature('arws1').set('revcoordsys', 'cylindrical');
model.result('pg8').set('titletype', 'custom');
model.result('pg8').set('typeintitle', true);
model.result('pg8').set('prefixintitle', 'Species Cl:');
model.result('pg8').set('expressionintitle', false);
model.result('pg1').run;
model.result('pg5').run;
model.result('pg5').setIndex('looplevelinput', 'interp', 0);
model.result('pg5').setIndex('interp', 'range(0,600,3600)', 0);
model.result('pg5').run;
model.result('pg5').feature('lngr1').set('legend', true);
model.result('pg5').feature('lngr1').set('linemarker', 'cycle');
model.result('pg5').run;
model.result('pg7').run;
model.result('pg7').setIndex('looplevelinput', 'interp', 0);
model.result('pg7').setIndex('interp', 'range(0,600,3600)', 0);
model.result('pg7').set('legendpos', 'lowerright');
model.result('pg7').run;
model.result('pg7').feature('lngr1').set('legend', true);
model.result('pg7').feature('lngr1').set('linemarker', 'cycle');
model.result('pg7').run;
model.result('pg5').run;
model.result.duplicate('pg9', 'pg5');
model.result('pg9').run;
model.result('pg9').label('pH');
model.result('pg9').set('legendpos', 'lowerright');
model.result('pg9').run;
model.result('pg9').feature('lngr1').set('expr', 'pH');
model.result('pg9').run;
model.result.create('pg10', 'PlotGroup1D');
model.result('pg10').run;
model.result('pg10').label('Electrode reaction current densities');
model.result('pg10').create('ptgr1', 'PointGraph');
model.result('pg10').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg10').feature('ptgr1').set('linewidth', 'preference');
model.result('pg10').feature('ptgr1').selection.set([1]);
model.result('pg10').feature('ptgr1').set('expr', 'tcd.iloc_er1');
model.result('pg10').feature('ptgr1').set('descr', 'Local current density');
model.result('pg10').feature('ptgr1').set('legend', true);
model.result('pg10').feature('ptgr1').set('legendmethod', 'manual');
model.result('pg10').feature('ptgr1').setIndex('legends', 'Oxygen evolution', 0);
model.result('pg10').feature.duplicate('ptgr2', 'ptgr1');
model.result('pg10').run;
model.result('pg10').feature('ptgr2').set('expr', 'tcd.iloc_er2');
model.result('pg10').feature('ptgr2').set('titletype', 'none');
model.result('pg10').feature('ptgr2').set('linestyle', 'dashdot');
model.result('pg10').feature('ptgr2').setIndex('legends', 'Chlorine evolution', 0);
model.result('pg10').run;
model.result('pg10').feature.duplicate('ptgr3', 'ptgr2');
model.result('pg10').run;
model.result('pg10').feature('ptgr3').set('expr', 'tcd.itot');
model.result('pg10').feature('ptgr3').set('descr', 'Total interface current density');
model.result('pg10').feature('ptgr3').set('linestyle', 'dashed');
model.result('pg10').feature('ptgr3').setIndex('legends', 'Total electrode current density', 0);
model.result('pg10').run;
model.result('pg2').run;
model.result.remove('pg2');
model.result('pg3').run;

model.title('Electrochemical Treatment of Tumors');

model.description('This example treats the transport and reaction in the electrolysis of tumor tissue in a liver. The species in the model are the protons, chloride, and sodium. The reactions accounted for at the surface of the anode are the chlorine and oxygen evolution reactions.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;

model.label('tumor.mph');

model.modelNode.label('Components');

out = model;
