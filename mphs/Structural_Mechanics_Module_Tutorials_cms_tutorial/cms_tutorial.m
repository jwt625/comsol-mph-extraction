function out = model
%
% cms_tutorial.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Structural_Mechanics_Module/Tutorials');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/solid', true);

model.geom('geom1').create('blk1', 'Block');
model.geom('geom1').feature('blk1').set('size', [1 0.15 0.2]);
model.geom('geom1').run('blk1');
model.geom('geom1').create('arr1', 'Array');
model.geom('geom1').feature('arr1').selection('input').set({'blk1'});
model.geom('geom1').feature('arr1').set('fullsize', [3 1 1]);
model.geom('geom1').feature('arr1').set('displ', [1 0 0]);
model.geom('geom1').feature('fin').set('action', 'assembly');
model.geom('geom1').feature('fin').set('createpairs', false);
model.geom('geom1').run('fin');

model.physics('solid').feature('lemm1').create('dmp1', 'Damping', 3);
model.physics('solid').feature('lemm1').feature('dmp1').set('DampingType', 'ViscousDamping');
model.physics('solid').feature('lemm1').feature('dmp1').set('etab', '5e7');
model.physics('solid').feature('lemm1').feature('dmp1').set('etav', '2e7');
model.physics('solid').create('fix1', 'Fixed', 2);
model.physics('solid').feature('fix1').selection.set([1]);
model.physics('solid').create('att1', 'Attachment', 2);
model.physics('solid').feature('att1').selection.set([6]);
model.physics('solid').feature.duplicate('att2', 'att1');
model.physics('solid').feature('att2').selection.set([7]);
model.physics('solid').create('fxj1', 'FixedJoint', -1);
model.physics('solid').feature('fxj1').set('Source', 'att1');
model.physics('solid').feature('fxj1').set('Destination', 'att2');
model.physics('solid').create('att3', 'Attachment', 2);
model.physics('solid').feature('att3').selection.set([12]);
model.physics('solid').feature.duplicate('att4', 'att3');
model.physics('solid').feature('att4').selection.set([13]);
model.physics('solid').create('fxj2', 'FixedJoint', -1);
model.physics('solid').feature('fxj2').set('Source', 'att3');
model.physics('solid').feature('fxj2').set('Destination', 'att4');
model.physics('solid').create('att5', 'Attachment', 2);
model.physics('solid').feature('att5').selection.set([18]);

model.param.set('load', '0[Pa]');
model.param.descr('load', 'Load parameter');

model.physics('solid').create('bndl1', 'BoundaryLoad', 2);
model.physics('solid').feature('bndl1').selection.set([18]);
model.physics('solid').feature('bndl1').set('FperArea', {'0' '0' 'load'});
model.physics('solid').create('bndl2', 'BoundaryLoad', 2);
model.physics('solid').feature('bndl2').selection.set([2 8 14]);
model.physics('solid').feature('bndl2').set('FperArea', {'0' '1e5' '0'});

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').label('Material, Linear');
model.material('mat1').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat1').propertyGroup('Enu').set('E', {'200e9'});
model.material('mat1').propertyGroup('Enu').set('nu', {'0.3'});
model.material('mat1').propertyGroup('def').set('density', {'7850'});
model.material.duplicate('mat2', 'mat1');
model.material('mat2').selection.set([2]);

model.func.create('step1', 'Step');
model.func('step1').model('comp1');
model.func('step1').set('from', 0.8);
model.func('step1').set('to', 1.2);
model.func('step1').set('smooth', '1e-3');

model.material('mat2').label('Material, Nonlinear');
model.material('mat2').propertyGroup('Enu').set('E', {'200e9*step1(solid.eXX)'});

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.set([1 7 13]);
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.all;
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 4);
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis1').set('numelem', 12);
model.mesh('mesh1').run;

model.study('std1').label('Study, Full Model');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').set('tlist', 'range(0,0.05,1)');
model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 'load', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'Pa', 0);
model.study('std1').feature('stat').setIndex('pname', 'load', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'Pa', 0);
model.study('std1').feature('stat').setIndex('plistarr', 1, 0);
model.study('std1').feature('stat').setIndex('punit', 'MPa', 0);
model.study('std1').feature('stat').set('pcontinuationmode', 'no');
model.study('std1').feature('time').set('useparam', true);
model.study('std1').feature('time').setIndex('pname', 'load', 0);
model.study('std1').feature('time').setIndex('plistarr', '', 0);
model.study('std1').feature('time').setIndex('punit', 'Pa', 0);
model.study('std1').feature('time').setIndex('pname', 'load', 0);
model.study('std1').feature('time').setIndex('plistarr', '', 0);
model.study('std1').feature('time').setIndex('punit', 'Pa', 0);
model.study('std1').feature('time').setIndex('plistarr', 0, 0);
model.study('std1').feature('time').setIndex('punit', '', 0);

model.probe.create('point1', 'Point');
model.probe('point1').model('comp1');
model.probe('point1').selection.set([21]);
model.probe('point1').set('expr', 'w');
model.probe('point1').set('descractive', true);
model.probe('point1').set('descr', 'Full model');

model.study('std1').feature('stat').set('probesel', 'none');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_solid_att_rot').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_att_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_att_rot').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_att_disp').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_att_rot').set('scaleval', '0.1');
model.sol('sol1').feature('v1').feature('comp1_solid_att_disp').set('scaleval', '0.03010398644698074');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s1').set('control', 'stat');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('s1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol1').feature('s1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'time');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').feature('comp1_solid_att_rot').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_solid_att_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_solid_att_rot').set('resscalemethod', 'parent');
model.sol('sol1').feature('v2').feature('comp1_solid_att_disp').set('resscalemethod', 'parent');
model.sol('sol1').feature('v2').feature('comp1_solid_att_rot').set('scaleval', '0.1');
model.sol('sol1').feature('v2').feature('comp1_solid_att_disp').set('scaleval', '0.03010398644698074');
model.sol('sol1').feature('v2').feature('comp1_u').set('scaleval', '1e-2*3.010398644698074');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('initsoluse', 'sol2');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('notsoluse', 'sol2');
model.sol('sol1').feature('v2').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.05,1)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {'point1'});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('timemethod', 'genalpha');
model.sol('sol1').feature('t1').create('tp1', 'TimeParametric');
model.sol('sol1').feature('t1').feature.remove('tpDef');
model.sol('sol1').feature('t1').feature('tp1').set('control', 'time');
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('t1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', true);
model.sol('sol1').feature('t1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');

model.probe('point1').genResult('none');

model.sol('sol1').runAll;

model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 21, 0);
model.result('pg2').setIndex('looplevel', 1, 1);
model.result('pg2').set('defaultPlotID', 'stress');
model.result('pg2').label('Stress (solid)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').create('vol1', 'Volume');
model.result('pg2').feature('vol1').set('expr', {'solid.misesGp'});
model.result('pg2').feature('vol1').set('threshold', 'manual');
model.result('pg2').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg2').feature('vol1').set('colortable', 'Rainbow');
model.result('pg2').feature('vol1').set('colortabletrans', 'none');
model.result('pg2').feature('vol1').set('colorscalemode', 'linear');
model.result('pg2').feature('vol1').set('resolution', 'custom');
model.result('pg2').feature('vol1').set('refine', 2);
model.result('pg2').feature('vol1').set('colortable', 'Prism');
model.result('pg2').feature('vol1').create('def', 'Deform');
model.result('pg2').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg2').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result('pg2').run;

model.physics('solid').create('rfc1', 'ReducedFlexibleComponents', 3);
model.physics('solid').feature('rfc1').selection.set([1 3]);

model.common.create('grmi1', 'GlobalReducedModelInputs', '');
model.common('grmi1').setIndex('name', 'load', 0);

model.physics('solid').feature('rfc1').set('nModes', 6);
model.physics('solid').feature('rfc1').runCommand('createCMSModel');

model.study('std_rfc1_solid').feature('mr_rfc1_solid').feature('time_rfc1_solid').set('disabledphysics', {'solid/fxj1' 'solid/fxj2' 'solid/bndl2'});

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std_rfc1_solid');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol3');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'n_rfc1_solid'});
model.batch('p1').set('plistarr', {'range(1,1,2)'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'none');
model.batch('p1').set('probes', {'point1'});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std_rfc1_solid');
model.batch('p1').set('control', 'param_rfc1_solid');

model.sol.create('sol6');
model.sol('sol6').study('std_rfc1_solid');
model.sol('sol6').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol6');
model.batch('p1').run('compute');

model.study.create('std2');
model.study('std2').label('Study, Reduced Model');
model.study('std2').feature.copy('stat1', 'std1/stat');
model.study('std2').feature.copy('time1', 'std1/time');
model.study('std2').feature('stat1').set('useadvanceddisable', true);
model.study('std2').feature('stat1').set('disabledphysics', {'solid/bndl1'});
model.study('std2').feature('time1').set('useadvanceddisable', true);
model.study('std2').feature('time1').set('disabledphysics', {'solid/bndl1'});

model.probe.duplicate('point2', 'point1');
model.probe('point2').set('descr', 'Reduced model');
model.probe('point2').set('table', 'new');

model.study('std2').feature('time1').set('probesel', 'manual');
model.study('std2').feature('time1').set('probes', {'point2'});

model.sol.create('sol9');
model.sol('sol9').study('std2');
model.sol('sol9').create('st1', 'StudyStep');
model.sol('sol9').feature('st1').set('study', 'std2');
model.sol('sol9').feature('st1').set('studystep', 'stat1');
model.sol('sol9').create('v1', 'Variables');
model.sol('sol9').feature('v1').feature('comp1_solid_att_rot').set('scalemethod', 'manual');
model.sol('sol9').feature('v1').feature('rom1_n_rfc1_solid_2_state').set('scalemethod', 'manual');
model.sol('sol9').feature('v1').feature('comp1_solid_att_disp').set('scalemethod', 'manual');
model.sol('sol9').feature('v1').feature('rom1_n_rfc1_solid_1_state').set('scalemethod', 'manual');
model.sol('sol9').feature('v1').feature('comp1_solid_att_rot').set('resscalemethod', 'parent');
model.sol('sol9').feature('v1').feature('comp1_solid_att_disp').set('resscalemethod', 'parent');
model.sol('sol9').feature('v1').feature('comp1_solid_att_rot').set('scaleval', '0.1');
model.sol('sol9').feature('v1').feature('rom1_n_rfc1_solid_2_state').set('scaleval', '1e-2*3.010398644698074');
model.sol('sol9').feature('v1').feature('comp1_solid_att_disp').set('scaleval', '0.03010398644698074');
model.sol('sol9').feature('v1').feature('rom1_n_rfc1_solid_1_state').set('scaleval', '1e-2*3.010398644698074');
model.sol('sol9').feature('v1').set('control', 'stat1');
model.sol('sol9').create('s1', 'Stationary');
model.sol('sol9').feature('s1').create('p1', 'Parametric');
model.sol('sol9').feature('s1').feature.remove('pDef');
model.sol('sol9').feature('s1').feature('p1').set('control', 'stat1');
model.sol('sol9').feature('s1').set('control', 'stat1');
model.sol('sol9').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol9').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol9').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol9').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol9').feature('s1').create('d1', 'Direct');
model.sol('sol9').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol9').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol9').feature('s1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol9').feature('s1').create('i1', 'Iterative');
model.sol('sol9').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol9').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol9').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol9').feature('s1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol9').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol9').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol9').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol9').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol9').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol9').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol9').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol9').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol9').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol9').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol9').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol9').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol9').feature('s1').feature.remove('fcDef');
model.sol('sol9').create('su1', 'StoreSolution');
model.sol('sol9').create('st2', 'StudyStep');
model.sol('sol9').feature('st2').set('study', 'std2');
model.sol('sol9').feature('st2').set('studystep', 'time1');
model.sol('sol9').create('v2', 'Variables');
model.sol('sol9').feature('v2').feature('comp1_solid_att_rot').set('scalemethod', 'manual');
model.sol('sol9').feature('v2').feature('rom1_n_rfc1_solid_2_state').set('scalemethod', 'manual');
model.sol('sol9').feature('v2').feature('comp1_solid_att_disp').set('scalemethod', 'manual');
model.sol('sol9').feature('v2').feature('rom1_n_rfc1_solid_1_state').set('scalemethod', 'manual');
model.sol('sol9').feature('v2').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol9').feature('v2').feature('comp1_solid_att_rot').set('resscalemethod', 'parent');
model.sol('sol9').feature('v2').feature('comp1_solid_att_disp').set('resscalemethod', 'parent');
model.sol('sol9').feature('v2').feature('comp1_solid_att_rot').set('scaleval', '0.1');
model.sol('sol9').feature('v2').feature('rom1_n_rfc1_solid_2_state').set('scaleval', '1e-2*3.010398644698074');
model.sol('sol9').feature('v2').feature('comp1_solid_att_disp').set('scaleval', '0.03010398644698074');
model.sol('sol9').feature('v2').feature('rom1_n_rfc1_solid_1_state').set('scaleval', '1e-2*3.010398644698074');
model.sol('sol9').feature('v2').feature('comp1_u').set('scaleval', '1e-2*3.010398644698074');
model.sol('sol9').feature('v2').set('initmethod', 'sol');
model.sol('sol9').feature('v2').set('initsol', 'sol9');
model.sol('sol9').feature('v2').set('initsoluse', 'sol10');
model.sol('sol9').feature('v2').set('notsolmethod', 'sol');
model.sol('sol9').feature('v2').set('notsol', 'sol9');
model.sol('sol9').feature('v2').set('notsoluse', 'sol10');
model.sol('sol9').feature('v2').set('control', 'time1');
model.sol('sol9').create('t1', 'Time');
model.sol('sol9').feature('t1').set('tlist', 'range(0,0.05,1)');
model.sol('sol9').feature('t1').set('plot', 'off');
model.sol('sol9').feature('t1').set('plotgroup', 'pg2');
model.sol('sol9').feature('t1').set('plotfreq', 'tout');
model.sol('sol9').feature('t1').set('probesel', 'manual');
model.sol('sol9').feature('t1').set('probes', {'point2'});
model.sol('sol9').feature('t1').set('probefreq', 'tsteps');
model.sol('sol9').feature('t1').set('rtol', 0.001);
model.sol('sol9').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol9').feature('t1').set('reacf', true);
model.sol('sol9').feature('t1').set('storeudot', true);
model.sol('sol9').feature('t1').set('endtimeinterpolation', true);
model.sol('sol9').feature('t1').set('timemethod', 'genalpha');
model.sol('sol9').feature('t1').create('tp1', 'TimeParametric');
model.sol('sol9').feature('t1').feature.remove('tpDef');
model.sol('sol9').feature('t1').feature('tp1').set('control', 'time1');
model.sol('sol9').feature('t1').set('control', 'time1');
model.sol('sol9').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol9').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol9').feature('t1').create('d1', 'Direct');
model.sol('sol9').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol9').feature('t1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol9').feature('t1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol9').feature('t1').create('i1', 'Iterative');
model.sol('sol9').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol9').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol9').feature('t1').feature('i1').set('nlinnormuse', true);
model.sol('sol9').feature('t1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol9').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol9').feature('t1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol9').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol9').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol9').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol9').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol9').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol9').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol9').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol9').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol9').feature('t1').feature.remove('fcDef');
model.sol('sol9').attach('std2');

model.probe('point2').genResult('none');

model.sol('sol9').runAll;

model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').set('data', 'dset11');
model.result('pg3').setIndex('looplevel', 21, 0);
model.result('pg3').setIndex('looplevel', 1, 1);
model.result('pg3').set('defaultPlotID', 'stress');
model.result('pg3').label('Stress (solid) 1');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').create('vol1', 'Volume');
model.result('pg3').feature('vol1').set('expr', {'solid.misesGp'});
model.result('pg3').feature('vol1').set('threshold', 'manual');
model.result('pg3').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg3').feature('vol1').set('colortable', 'Rainbow');
model.result('pg3').feature('vol1').set('colortabletrans', 'none');
model.result('pg3').feature('vol1').set('colorscalemode', 'linear');
model.result('pg3').feature('vol1').set('resolution', 'custom');
model.result('pg3').feature('vol1').set('refine', 2);
model.result('pg3').feature('vol1').set('colortable', 'Prism');
model.result('pg3').feature('vol1').create('def', 'Deform');
model.result('pg3').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg3').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').run;
model.result('pg4').label('Constrained Eigenmodes');
model.result('pg4').set('data', 'dset6');
model.result('pg4').set('titletype', 'none');
model.result('pg4').set('showlegends', false);
model.result('pg4').set('plotarrayenable', true);
model.result('pg4').set('arrayshape', 'square');
model.result('pg4').set('order', 'columnmajor');
model.result('pg4').create('vol1', 'Volume');
model.result('pg4').feature('vol1').set('arraydim', '2');
model.result('pg4').feature('vol1').set('colortable', 'DiscoLight');
model.result('pg4').feature('vol1').create('def1', 'Deform');
model.result('pg4').run;
model.result('pg4').feature('vol1').set('arraydim', '2');
model.result('pg4').run;
model.result('pg4').feature.duplicate('vol2', 'vol1');
model.result('pg4').feature('vol2').set('arraydim', '2');
model.result('pg4').run;
model.result('pg4').feature('vol2').set('data', 'dset6');
model.result('pg4').feature('vol2').set('looplevel', [2]);
model.result('pg4').feature.duplicate('vol3', 'vol2');
model.result('pg4').feature('vol3').set('arraydim', '2');
model.result('pg4').run;
model.result('pg4').feature('vol3').set('looplevel', [3]);
model.result('pg4').feature.duplicate('vol4', 'vol3');
model.result('pg4').feature('vol4').set('arraydim', '2');
model.result('pg4').run;
model.result('pg4').feature('vol4').set('looplevel', [4]);
model.result('pg4').feature.duplicate('vol5', 'vol4');
model.result('pg4').feature('vol5').set('arraydim', '2');
model.result('pg4').run;
model.result('pg4').feature('vol5').set('looplevel', [5]);
model.result('pg4').feature.duplicate('vol6', 'vol5');
model.result('pg4').feature('vol6').set('arraydim', '2');
model.result('pg4').run;
model.result('pg4').feature('vol6').set('looplevel', [6]);
model.result('pg4').run;

model.view('view1').set('showgrid', false);

model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').run;
model.result('pg5').label('Constraint Modes');
model.result('pg5').set('data', 'dset5');
model.result('pg5').set('titletype', 'none');
model.result('pg5').set('showlegends', false);
model.result('pg5').set('plotarrayenable', true);
model.result('pg5').set('arrayshape', 'square');
model.result('pg5').set('order', 'columnmajor');
model.result('pg5').create('vol1', 'Volume');
model.result('pg5').feature('vol1').set('arraydim', '2');
model.result('pg5').feature('vol1').set('data', 'dset5');
model.result('pg5').feature('vol1').setIndex('looplevel', 1, 0);
model.result('pg5').feature('vol1').set('colortable', 'SpectrumLight');
model.result('pg5').feature('vol1').create('def1', 'Deform');
model.result('pg5').run;
model.result('pg5').feature('vol1').set('arraydim', '2');
model.result('pg5').run;
model.result('pg5').feature.duplicate('vol2', 'vol1');
model.result('pg5').feature('vol2').set('arraydim', '2');
model.result('pg5').run;
model.result('pg5').feature('vol2').setIndex('looplevel', 2, 0);
model.result('pg5').feature.duplicate('vol3', 'vol2');
model.result('pg5').feature('vol3').set('arraydim', '2');
model.result('pg5').run;
model.result('pg5').feature('vol3').setIndex('looplevel', 3, 0);
model.result('pg5').feature.duplicate('vol4', 'vol3');
model.result('pg5').feature('vol4').set('arraydim', '2');
model.result('pg5').run;
model.result('pg5').feature('vol4').setIndex('looplevel', 4, 0);
model.result('pg5').feature.duplicate('vol5', 'vol4');
model.result('pg5').feature('vol5').set('arraydim', '2');
model.result('pg5').run;
model.result('pg5').feature('vol5').setIndex('looplevel', 5, 0);
model.result('pg5').feature.duplicate('vol6', 'vol5');
model.result('pg5').feature('vol6').set('arraydim', '2');
model.result('pg5').run;
model.result('pg5').feature('vol6').setIndex('looplevel', 6, 0);
model.result('pg5').run;
model.result('pg2').run;
model.result('pg2').setIndex('looplevel', 1, 0);
model.result('pg2').run;
model.result('pg3').run;
model.result('pg3').setIndex('looplevel', 1, 0);
model.result('pg3').run;
model.result('pg1').set('window', 'window1');
model.result('pg1').run;
model.result('pg1').set('xlabelactive', true);
model.result('pg1').set('xlabel', 'Time (s)');
model.result('pg1').set('ylabelactive', true);
model.result('pg1').set('ylabel', 'Tip displacement (m)');
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').run;
model.result('pg6').set('data', 'dset2');
model.result('pg6').set('titletype', 'none');
model.result('pg6').create('vol1', 'Volume');
model.result('pg6').feature('vol1').set('coloring', 'uniform');
model.result('pg6').feature('vol1').set('color', 'yellow');
model.result('pg6').feature('vol1').create('sel1', 'Selection');
model.result('pg6').feature('vol1').feature('sel1').selection.set([1]);
model.result('pg6').run;
model.result('pg6').feature.duplicate('vol2', 'vol1');
model.result('pg6').run;
model.result('pg6').feature('vol2').set('color', 'green');
model.result('pg6').run;
model.result('pg6').feature('vol2').feature('sel1').selection.set([2]);
model.result('pg6').run;
model.result('pg6').feature.duplicate('vol3', 'vol2');
model.result('pg6').run;
model.result('pg6').feature('vol3').set('color', 'blue');
model.result('pg6').run;
model.result('pg6').feature('vol3').feature('sel1').selection.set([3]);
model.result('pg6').run;
model.result('pg6').create('arws1', 'ArrowSurface');
model.result('pg6').feature('arws1').set('expr', {'solid.bndl1.F_Ax' 'v' 'w'});
model.result('pg6').feature('arws1').setIndex('expr', 'solid.bndl1.F_Ay', 1);
model.result('pg6').feature('arws1').setIndex('expr', 'solid.bndl1.F_Az', 2);
model.result('pg6').feature('arws1').set('placement', 'elements');
model.result('pg6').run;
model.result('pg6').create('arws2', 'ArrowSurface');
model.result('pg6').feature('arws2').set('expr', {'solid.bndl2.F_Ax' 'v' 'w'});
model.result('pg6').feature('arws2').setIndex('expr', 'solid.bndl2.F_Ay', 1);
model.result('pg6').feature('arws2').setIndex('expr', 'solid.bndl2.F_Az', 2);
model.result('pg6').feature('arws2').set('placement', 'elements');
model.result('pg6').feature('arws2').set('arrowbase', 'head');
model.result('pg6').run;
model.result('pg6').create('tlan1', 'TableAnnotation');
model.result('pg6').feature('tlan1').set('source', 'localtable');
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 0.25, 0, 0);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 0, 0, 1);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 0, 0, 2);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 'Component 1', 0, 3);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 1.25, 1, 0);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 0, 1, 1);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 0, 1, 2);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 'Component 2', 1, 3);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 2.25, 2, 0);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 0, 2, 1);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 0, 2, 2);
model.result('pg6').feature('tlan1').setIndex('localtablematrix', 'Component 3', 2, 3);
model.result('pg6').feature('tlan1').set('showpoint', false);
model.result('pg6').run;
model.result('pg6').run;
model.result.remove('pg6');

model.study('std1').feature('stat').set('useadvanceddisable', true);
model.study('std1').feature('stat').setSolveFor('/reduced/rom1_n_rfc1_solid_1', false);
model.study('std1').feature('stat').setSolveFor('/reduced/rom1_n_rfc1_solid_2', false);
model.study('std1').feature('stat').set('disabledreduced', {'rom1_n_rfc1_solid_1' 'rom1_n_rfc1_solid_2'});
model.study('std1').feature('stat').setSolveFor('/reduced/rom1_n_rfc1_solid_1', false);
model.study('std1').feature('stat').setSolveFor('/reduced/rom1_n_rfc1_solid_2', false);
model.study('std1').feature('stat').set('disabledphysics', {'solid/rfc1'});
model.study('std1').feature('time').set('probesel', 'manual');
model.study('std1').feature('time').set('probes', {'point1'});
model.study('std1').feature('time').set('useadvanceddisable', true);
model.study('std1').feature('time').setSolveFor('/reduced/rom1_n_rfc1_solid_1', false);
model.study('std1').feature('time').setSolveFor('/reduced/rom1_n_rfc1_solid_2', false);
model.study('std1').feature('time').set('disabledreduced', {'rom1_n_rfc1_solid_1' 'rom1_n_rfc1_solid_2'});
model.study('std1').feature('time').setSolveFor('/reduced/rom1_n_rfc1_solid_1', false);
model.study('std1').feature('time').setSolveFor('/reduced/rom1_n_rfc1_solid_2', false);
model.study('std1').feature('time').set('disabledphysics', {'solid/rfc1'});

model.result('pg5').run;
model.result('pg5').run;

model.title('Component Mode Synthesis Tutorial');

model.description('In this tutorial example, the concepts of Component Mode Synthesis (CMS) are introduced through a simple solid model of a beam. Parts of the beam are reduced into CMS components. Dynamic as well as stationary analyses are performed. Moreover, you will learn how to apply loads directly on a CMS component and how to work with such components during result evaluation. The results from the full and the reduced versions of the model are compared.');

model.label('cms_tutorial.mph');

model.modelNode.label('Components');

out = model;
