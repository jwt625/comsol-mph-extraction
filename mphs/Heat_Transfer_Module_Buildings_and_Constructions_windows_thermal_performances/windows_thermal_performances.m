function out = model
%
% windows_thermal_performances.m
%
% Model exported on May 26 2025, 21:28 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Heat_Transfer_Module/Buildings_and_Constructions');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('ht', 'HeatTransferInSolidsAndFluids', 'geom1');
model.physics('ht').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/ht', true);

model.modelNode('comp1').label('First Window');

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('C1', '0.025[W/(m*K)]', 'First constant for convective heat transfer coefficient calculation');
model.param.set('C2', '0.73[W/(m^2*K)]', 'Second constant for convective heat transfer coefficient calculation');
model.param.set('epsilon', '0.90', 'Surface emissivity');
model.param.set('Ti', '20[degC]', 'Internal temperature');
model.param.set('Te', '0[degC]', 'External temperature');
model.param.set('Rsi_n', '0.13[m^2*K/W]', 'Internal surface resistance (normal)');
model.param.set('Rsi_p', '0.20[m^2*K/W]', 'Internal surface resistance (protected)');
model.param.set('Rse', '0.04[m^2*K/W]', 'External surface resistance');
model.param.set('lambda_p', '0.035[W/(m*K)]', '  Thermal conductivity of the insulation panel');

model.func.create('an1', 'Analytic');
model.func('an1').set('funcname', 'ha_1');
model.func('an1').set('expr', 'C1[(m*K)/W]/d');
model.func('an1').set('args', 'd');
model.func('an1').setIndex('argunit', 'm', 0);
model.func('an1').set('fununit', 'W/(m^2*K)');
model.func.create('an2', 'Analytic');
model.func('an2').set('funcname', 'ha_2');
model.func('an2').set('expr', 'max(C1[(m*K)/W]/d,C2[(m^2*K)/W]*delta^(1/3))');
model.func('an2').set('args', 'd, delta');
model.func('an2').setIndex('argunit', 'm', 0);
model.func('an2').setIndex('argunit', 'K', 1);
model.func('an2').set('fununit', 'W/(m^2*K)');
model.func.create('an3', 'Analytic');
model.func('an3').set('funcname', 'hr');
model.func('an3').set('expr', '4*sigma_const[(K^4*m^2)/W]*Tm^3/(1/e1+1/e2-1)*(1+sqrt(1+(d/b)^2)-d/b)/2');
model.func('an3').set('args', 'd, b, Tm, e1, e2');
model.func('an3').setIndex('argunit', 'm', 0);
model.func('an3').setIndex('argunit', 'm', 1);
model.func('an3').setIndex('argunit', 'K', 2);
model.func('an3').setIndex('argunit', 1, 3);
model.func('an3').setIndex('argunit', 1, 4);
model.func('an3').set('fununit', 'W/(m^2*K)');
model.func.create('an4', 'Analytic');
model.func('an4').set('funcname', 'h_resized');
model.func('an4').set('expr', 'sqrt(A*d/b)');
model.func('an4').set('args', 'A, d, b');
model.func('an4').setIndex('argunit', 'm^2', 0);
model.func('an4').setIndex('argunit', 'm', 1);
model.func('an4').setIndex('argunit', 'm', 2);
model.func('an4').set('fununit', 'm');
model.func('an4').setIndex('plotargs', 0.1, 2, 1);

model.geom('geom1').create('imp1', 'Import');
model.geom('geom1').feature('imp1').set('filename', 'windows_thermal_performances_first_window.mphbin');
model.geom('geom1').feature('imp1').importData;
model.geom('geom1').run('fin');
model.geom('geom1').create('ige1', 'IgnoreEdges');
model.geom('geom1').feature('ige1').selection('input').set('fin', [66 104 116 144 152 175 179]);
model.geom('geom1').run('ige1');
model.geom('geom1').create('igv1', 'IgnoreVertices');
model.geom('geom1').feature('igv1').selection('input').set('ige1', [30 53 74 75 81 146 151]);
model.geom('geom1').run('igv1');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');
model.selection('sel1').label('Unventilated Cavity 1');
model.selection('sel1').geom(1);
model.selection('sel1').set([3 4 6 8 9 10 11 14]);
model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').label('Unventilated Cavity 2');
model.selection('sel2').geom(1);
model.selection('sel2').set([17 18 19 51]);
model.selection.create('sel3', 'Explicit');
model.selection('sel3').model('comp1');
model.selection('sel3').label('Unventilated Cavity 3');
model.selection('sel3').geom(1);
model.selection('sel3').set([21 22 24 25 26 27 28 30 31 32 33 41]);
model.selection.create('sel4', 'Explicit');
model.selection('sel4').model('comp1');
model.selection('sel4').label('Unventilated Cavity 4');
model.selection('sel4').geom(1);
model.selection('sel4').set([61 62 63 64 65 69 72 73 80 82 96]);
model.selection.create('sel5', 'Explicit');
model.selection('sel5').model('comp1');
model.selection('sel5').label('Unventilated Cavity 5');
model.selection('sel5').geom(1);
model.selection('sel5').set([105 106 107 132]);
model.selection.create('sel6', 'Explicit');
model.selection('sel6').model('comp1');
model.selection('sel6').label('Unventilated Cavity 6');
model.selection('sel6').geom(1);
model.selection('sel6').set([137 138 139 159]);
model.selection.create('sel7', 'Explicit');
model.selection('sel7').model('comp1');
model.selection('sel7').label('Unventilated Cavity 7');
model.selection('sel7').geom(1);
model.selection('sel7').set([128 129 131 133 134 135 136 140 141 142 143 144 147 149]);
model.selection.create('sel8', 'Explicit');
model.selection('sel8').model('comp1');
model.selection('sel8').label('Unventilated Cavity 8');
model.selection('sel8').geom(1);
model.selection('sel8').set([109 110 112 113 114 115 116 117 118 119 120 123]);
model.selection.create('sel9', 'Explicit');
model.selection('sel9').model('comp1');
model.selection('sel9').label('Unventilated Cavity 9');
model.selection('sel9').geom(1);
model.selection('sel9').set([97 98 99 126]);
model.selection.create('sel10', 'Explicit');
model.selection('sel10').model('comp1');
model.selection('sel10').label('Unventilated Cavity 10');
model.selection('sel10').geom(1);
model.selection('sel10').set([47 48 50 54 55 56 57 67 70 71 74 75 76 77 78 79 83 88 89 92 93 94 95 102]);
model.selection.create('sel11', 'Explicit');
model.selection('sel11').model('comp1');
model.selection('sel11').label('Slightly Ventilated Cavity');
model.selection('sel11').geom(1);
model.selection('sel11').set([84 87 90]);
model.selection.create('sel12', 'Explicit');
model.selection('sel12').model('comp1');
model.selection('sel12').label('Exterior Side');
model.selection('sel12').geom(1);
model.selection('sel12').set([2 85 91 160 161 162]);
model.selection.create('sel13', 'Explicit');
model.selection('sel13').model('comp1');
model.selection('sel13').label('Interior Side (Flat Area)');
model.selection('sel13').geom(1);
model.selection('sel13').set([7 38 166]);
model.selection.create('sel14', 'Explicit');
model.selection('sel14').model('comp1');
model.selection('sel14').label('Interior Side (Corner Area)');
model.selection('sel14').geom(1);
model.selection('sel14').set([29 34 36 163 164 165]);
model.selection.create('sel15', 'Explicit');
model.selection('sel15').model('comp1');
model.selection('sel15').label('Interior Side');
model.selection('sel15').geom(1);
model.selection('sel15').set([7 29 34 36 38 163 164 165 166]);

model.cpl.create('maxop1', 'Maximum', 'geom1');
model.cpl('maxop1').set('opname', 'max_uc1');
model.cpl('maxop1').selection.set([2]);
model.cpl.create('minop1', 'Minimum', 'geom1');
model.cpl('minop1').set('opname', 'min_uc1');
model.cpl('minop1').selection.set([2]);
model.cpl.create('aveop1', 'Average', 'geom1');
model.cpl('aveop1').set('axisym', true);
model.cpl('aveop1').set('opname', 'ave_uc1');
model.cpl('aveop1').selection.geom('geom1', 1);
model.cpl('aveop1').selection.named('sel1');
model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl('intop1').set('axisym', true);
model.cpl('intop1').set('opname', 'int_uc1');
model.cpl('intop1').selection.set([2]);
model.cpl.create('maxop2', 'Maximum', 'geom1');
model.cpl('maxop2').set('opname', 'max_uc2');
model.cpl('maxop2').selection.set([5]);
model.cpl.create('minop2', 'Minimum', 'geom1');
model.cpl('minop2').set('opname', 'min_uc2');
model.cpl('minop2').selection.set([5]);
model.cpl.create('aveop2', 'Average', 'geom1');
model.cpl('aveop2').set('axisym', true);
model.cpl('aveop2').set('opname', 'ave_uc2');
model.cpl('aveop2').selection.geom('geom1', 1);
model.cpl('aveop2').selection.named('sel2');
model.cpl.create('maxop3', 'Maximum', 'geom1');
model.cpl('maxop3').set('opname', 'max_uc3');
model.cpl('maxop3').selection.set([6]);
model.cpl.create('minop3', 'Minimum', 'geom1');
model.cpl('minop3').set('opname', 'min_uc3');
model.cpl('minop3').selection.set([6]);
model.cpl.create('aveop3', 'Average', 'geom1');
model.cpl('aveop3').set('axisym', true);
model.cpl('aveop3').set('opname', 'ave_uc3');
model.cpl('aveop3').selection.geom('geom1', 1);
model.cpl('aveop3').selection.named('sel3');
model.cpl.create('intop2', 'Integration', 'geom1');
model.cpl('intop2').set('axisym', true);
model.cpl('intop2').set('opname', 'int_uc3');
model.cpl('intop2').selection.set([6]);
model.cpl.create('maxop4', 'Maximum', 'geom1');
model.cpl('maxop4').set('opname', 'max_uc4');
model.cpl('maxop4').selection.set([12]);
model.cpl.create('minop4', 'Minimum', 'geom1');
model.cpl('minop4').set('opname', 'min_uc4');
model.cpl('minop4').selection.set([12]);
model.cpl.create('aveop4', 'Average', 'geom1');
model.cpl('aveop4').set('axisym', true);
model.cpl('aveop4').set('opname', 'ave_uc4');
model.cpl('aveop4').selection.geom('geom1', 1);
model.cpl('aveop4').selection.named('sel4');
model.cpl.create('intop3', 'Integration', 'geom1');
model.cpl('intop3').set('axisym', true);
model.cpl('intop3').set('opname', 'int_uc4');
model.cpl('intop3').selection.set([12]);
model.cpl.create('maxop5', 'Maximum', 'geom1');
model.cpl('maxop5').set('opname', 'max_uc5');
model.cpl('maxop5').selection.set([17]);
model.cpl.create('minop5', 'Minimum', 'geom1');
model.cpl('minop5').set('opname', 'min_uc5');
model.cpl('minop5').selection.set([17]);
model.cpl.create('aveop5', 'Average', 'geom1');
model.cpl('aveop5').set('axisym', true);
model.cpl('aveop5').set('opname', 'ave_uc5');
model.cpl('aveop5').selection.geom('geom1', 1);
model.cpl('aveop5').selection.named('sel5');
model.cpl.create('maxop6', 'Maximum', 'geom1');
model.cpl('maxop6').set('opname', 'max_uc6');
model.cpl('maxop6').selection.set([21]);
model.cpl.create('minop6', 'Minimum', 'geom1');
model.cpl('minop6').set('opname', 'min_uc6');
model.cpl('minop6').selection.set([21]);
model.cpl.create('aveop6', 'Average', 'geom1');
model.cpl('aveop6').set('axisym', true);
model.cpl('aveop6').set('opname', 'ave_uc6');
model.cpl('aveop6').selection.geom('geom1', 1);
model.cpl('aveop6').selection.named('sel6');
model.cpl.create('maxop7', 'Maximum', 'geom1');
model.cpl('maxop7').set('opname', 'max_uc7');
model.cpl('maxop7').selection.set([20]);
model.cpl.create('minop7', 'Minimum', 'geom1');
model.cpl('minop7').set('opname', 'min_uc7');
model.cpl('minop7').selection.set([20]);
model.cpl.create('aveop7', 'Average', 'geom1');
model.cpl('aveop7').set('axisym', true);
model.cpl('aveop7').set('opname', 'ave_uc7');
model.cpl('aveop7').selection.geom('geom1', 1);
model.cpl('aveop7').selection.named('sel7');
model.cpl.create('intop4', 'Integration', 'geom1');
model.cpl('intop4').set('axisym', true);
model.cpl('intop4').set('opname', 'int_uc7');
model.cpl('intop4').selection.set([20]);
model.cpl.create('maxop8', 'Maximum', 'geom1');
model.cpl('maxop8').set('opname', 'max_uc8');
model.cpl('maxop8').selection.set([18]);
model.cpl.create('minop8', 'Minimum', 'geom1');
model.cpl('minop8').set('opname', 'min_uc8');
model.cpl('minop8').selection.set([18]);
model.cpl.create('aveop8', 'Average', 'geom1');
model.cpl('aveop8').set('axisym', true);
model.cpl('aveop8').set('opname', 'ave_uc8');
model.cpl('aveop8').selection.geom('geom1', 1);
model.cpl('aveop8').selection.named('sel8');
model.cpl.create('intop5', 'Integration', 'geom1');
model.cpl('intop5').set('axisym', true);
model.cpl('intop5').set('opname', 'int_uc8');
model.cpl('intop5').selection.set([18]);
model.cpl.create('maxop9', 'Maximum', 'geom1');
model.cpl('maxop9').set('opname', 'max_uc9');
model.cpl('maxop9').selection.set([15]);
model.cpl.create('minop9', 'Minimum', 'geom1');
model.cpl('minop9').set('opname', 'min_uc9');
model.cpl('minop9').selection.set([15]);
model.cpl.create('aveop9', 'Average', 'geom1');
model.cpl('aveop9').set('axisym', true);
model.cpl('aveop9').set('opname', 'ave_uc9');
model.cpl('aveop9').selection.geom('geom1', 1);
model.cpl('aveop9').selection.named('sel9');
model.cpl.create('maxop10', 'Maximum', 'geom1');
model.cpl('maxop10').set('opname', 'max_uc10');
model.cpl('maxop10').selection.set([10]);
model.cpl.create('minop10', 'Minimum', 'geom1');
model.cpl('minop10').set('opname', 'min_uc10');
model.cpl('minop10').selection.set([10]);
model.cpl.create('aveop10', 'Average', 'geom1');
model.cpl('aveop10').set('axisym', true);
model.cpl('aveop10').set('opname', 'ave_uc10');
model.cpl('aveop10').selection.geom('geom1', 1);
model.cpl('aveop10').selection.named('sel10');
model.cpl.create('intop6', 'Integration', 'geom1');
model.cpl('intop6').set('axisym', true);
model.cpl('intop6').set('opname', 'int_uc10');
model.cpl('intop6').selection.set([10]);
model.cpl.create('maxop11', 'Maximum', 'geom1');
model.cpl('maxop11').set('opname', 'max_svc');
model.cpl('maxop11').selection.set([14]);
model.cpl.create('minop11', 'Minimum', 'geom1');
model.cpl('minop11').set('opname', 'min_svc');
model.cpl('minop11').selection.set([14]);
model.cpl.create('aveop11', 'Average', 'geom1');
model.cpl('aveop11').set('axisym', true);
model.cpl('aveop11').set('opname', 'ave_svc');
model.cpl('aveop11').selection.geom('geom1', 1);
model.cpl('aveop11').selection.named('sel11');
model.cpl.create('intop7', 'Integration', 'geom1');
model.cpl('intop7').set('axisym', true);
model.cpl('intop7').set('opname', 'int_internal');
model.cpl('intop7').selection.geom('geom1', 1);
model.cpl('intop7').selection.named('sel15');

model.variable.create('var1');
model.variable('var1').model('comp1');

% To import content from file, use:
% model.variable('var1').loadFile('FILENAME');
model.variable('var1').set('f_htot', '63[mm]', 'Total height of the frame');
model.variable('var1').set('f_hl1', '53[mm]', 'Height of the first left part of the frame');
model.variable('var1').set('f_hl2', '10[mm]', 'Height of the second left part of the frame');
model.variable('var1').set('f_hr1', '10[mm]', 'Height of the first right part of the frame');
model.variable('var1').set('f_hr2', '28[mm]', 'Height of the second right part of the frame (insulation panel thickness)');
model.variable('var1').set('f_hr3', '25[mm]', 'Height of the third right part of the frame');
model.variable('var1').set('f_wtot', '110[mm]', 'Total width of the frame');
model.variable('var1').set('f_wt1', '40[mm]', 'Width of the first top part of the frame');
model.variable('var1').set('f_wt2', '70[mm]', 'Width of the second top part of the frame');
model.variable('var1').set('f_wb1', '65[mm]', 'Width of the first bottom part of the frame');
model.variable('var1').set('f_wb2', '5[mm]', 'Width of the second bottom part of the frame');
model.variable('var1').set('f_wb3', '40[mm]', 'Width of the third bottom part of the frame');
model.variable('var1').set('at', '2[mm]', 'Aluminum thickness');
model.variable('var1').set('aw1', '4[mm]', 'Smaller aluminum wedge length');
model.variable('var1').set('aw2', '5[mm]', 'Aluminum wedge length');
model.variable('var1').set('aw3', '6[mm]', 'Longer aluminum wedge length');
model.variable('var1').set('uc1_w', '9[mm]', 'Width of the first unventilated cavity');
model.variable('var1').set('uc1_h', '49[mm]', 'Height of the first unventilated cavity');
model.variable('var1').set('uc2_w', '35[mm]', 'Width of the second unventilated cavity');
model.variable('var1').set('uc2_h', '24[mm]', 'Height of the second unventilated cavity');
model.variable('var1').set('uc3_w', '31[mm]', 'Width of the third unventilated cavity');
model.variable('var1').set('uc3_h', '23[mm]', 'Height of the third unventilated cavity');
model.variable('var1').set('uc4_w', '24[mm]', 'Width of the fourth unventilated cavity');
model.variable('var1').set('uc4_h', '29[mm]', 'Height of the fourth unventilated cavity');
model.variable('var1').set('uc5_w', '16[mm]', 'Width of the fifth unventilated cavity');
model.variable('var1').set('uc5_h', '27[mm]', 'Height of the fifth unventilated cavity');
model.variable('var1').set('uc6_w', '18[mm]', 'Width of the sixth unventilated cavity');
model.variable('var1').set('uc6_h', '15[mm]', 'Height of the sixth unventilated cavity');
model.variable('var1').set('uc7_w', '14[mm]', 'Width of the seventh unventilated cavity');
model.variable('var1').set('uc7_h', '42[mm]', 'Height of the seventh unventilated cavity');
model.variable('var1').set('uc8_w', '12[mm]', 'Width of the eighth unventilated cavity');
model.variable('var1').set('uc8_h', '22[mm]', 'Height of the eighth unventilated cavity');
model.variable('var1').set('uc9_w', '16[mm]', 'Width of the ninth unventilated cavity');
model.variable('var1').set('uc9_h', '6[mm]', 'Height of the ninth unventilated cavity');
model.variable('var1').set('uc10_w', '28[mm]', 'Width of the tenth unventilated cavity');
model.variable('var1').set('uc10_h', '30[mm]', 'Height of the tenth unventilated cavity');
model.variable('var1').set('svc_w', '5[mm]', 'Width of the slightly ventilated cavity');
model.variable('var1').set('svc_h', '8[mm]', 'Height of the slightly ventilated cavity');
model.variable('var1').set('pp', '15[mm]', 'Panel penetration');
model.variable('var1').set('pvl', '190[mm]', 'Panel visible length');
model.variable('var1').set('Rp', 'f_hr2/lambda_p', 'Thermal resistance of the central area of the panel');
model.variable('var1').set('Up_n', '1/(Rsi_n+Rse+Rp)', 'Thermal transmittance od the panel (normal)');
model.variable('var1').set('Up_p', '1/(Rsi_p+Rse+Rp)', 'Thermal transmittance of the panel (protected)');
model.variable('var1').set('Up', '(f_hr3*Up_p+(pvl-f_hr3)*Up_n)/pvl', 'Thermal transmittance of the panel');
model.variable('var1').set('R_uc1', '1/(ha_2(uc1_h2,max_uc1(T)-min_uc1(T))+hr(uc1_h,uc1_w,ave_uc1(T),epsilon,epsilon))', 'Thermal resistance of the first unventilated cavity');
model.variable('var1').set('R_uc2', '1/(ha_2(uc2_h,max_uc2(T)-min_uc2(T))+hr(uc2_h,uc2_w,ave_uc2(T),epsilon,epsilon))', 'Thermal resistance of the second unventilated cavity');
model.variable('var1').set('R_uc3', '1/(ha_2(uc3_h2,max_uc3(T)-min_uc3(T))+hr(uc3_h,uc3_w,ave_uc3(T),epsilon,epsilon))', 'Thermal resistance of the third unventilated cavity');
model.variable('var1').set('R_uc4', '1/(ha_2(uc4_h2,max_uc4(T)-min_uc4(T))+hr(uc4_h,uc4_w,ave_uc4(T),epsilon,epsilon))', 'Thermal resistance of the fourth unventilated cavity');
model.variable('var1').set('R_uc5', '1/(ha_2(uc5_h,max_uc5(T)-min_uc5(T))+hr(uc5_h,uc5_w,ave_uc5(T),epsilon,epsilon))', 'Thermal resistance of the fifth unventilated cavity');
model.variable('var1').set('R_uc6', '1/(ha_2(uc6_h,max_uc6(T)-min_uc6(T))+hr(uc6_h,uc6_w,ave_uc6(T),epsilon,epsilon))', 'Thermal resistance of the sixth unventilated cavity');
model.variable('var1').set('R_uc7', '1/(ha_2(uc7_h2,max_uc7(T)-min_uc7(T))+hr(uc7_h,uc7_w,ave_uc7(T),epsilon,epsilon))', 'Thermal resistance of the seventh unventilated cavity');
model.variable('var1').set('R_uc8', '1/(ha_2(uc8_h2,max_uc8(T)-min_uc8(T))+hr(uc8_h,uc8_w,ave_uc8(T),epsilon,epsilon))', 'Thermal resistance of the eighth unventilated cavity');
model.variable('var1').set('R_uc9', '1/(ha_2(uc9_h,max_uc9(T)-min_uc9(T))+hr(uc9_h,uc9_w,ave_uc9(T),epsilon,epsilon))', 'Thermal resistance of the ninth unventilated cavity');
model.variable('var1').set('R_uc10', '1/(ha_2(uc10_h2,max_uc10(T)-min_uc10(T))+hr(uc10_h,uc10_w,ave_uc10(T),epsilon,epsilon))', 'Thermal resistance of the tenth unventilated cavity');
model.variable('var1').set('R_svc', '1/(ha_2(svc_h,max_svc(T)-min_svc(T))+hr(svc_h,svc_w,ave_svc(T),epsilon,epsilon))', 'Thermal resistance of the slightly ventilated cavity');
model.variable('var1').set('A_uc1', 'int_uc1(1)', 'Unventilated cavity 1 area');
model.variable('var1').set('A_uc3', 'int_uc3(1)', 'Unventilated cavity 3 area');
model.variable('var1').set('A_uc4', 'int_uc4(1)', 'Unventilated cavity 4 area');
model.variable('var1').set('A_uc7', 'int_uc7(1)', 'Unventilated cavity 7 area');
model.variable('var1').set('A_uc8', 'int_uc8(1)', 'Unventilated cavity 8 area');
model.variable('var1').set('A_uc10', 'int_uc10(1)', 'Unventilated cavity 10 area');
model.variable('var1').set('uc1_h2', 'h_resized(A_uc1,uc1_h,uc1_w)', 'Equivalent height for the first unventilated cavity');
model.variable('var1').set('uc3_h2', 'h_resized(A_uc3,uc3_h,uc3_w)', 'Equivalent height for the third unventilated cavity');
model.variable('var1').set('uc4_h2', 'h_resized(A_uc4,uc4_h,uc4_w)', 'Equivalent height for the fourth unventilated cavity');
model.variable('var1').set('uc7_h2', 'h_resized(A_uc7,uc7_h,uc7_w)', 'Equivalent height for the seventh unventilated cavity');
model.variable('var1').set('uc8_h2', 'h_resized(A_uc8,uc8_h,uc8_w)', 'Equivalent height for the eighth unventilated cavity');
model.variable('var1').set('uc10_h2', 'h_resized(A_uc10,uc10_h,uc10_w)', 'Equivalent height for the tenth unventilated cavity');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').label('Aluminum');
model.material('mat1').selection.set([1 3 8 13]);
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'160'});
model.material('mat1').propertyGroup('def').set('density', {'2800'});
model.material('mat1').propertyGroup('def').set('heatcapacity', {'880'});
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').label('EPDM');
model.material('mat2').selection.set([7 11 23 24]);
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'0.25'});
model.material('mat2').propertyGroup('def').set('density', {'1150'});
model.material('mat2').propertyGroup('def').set('heatcapacity', {'1000'});
model.material.create('mat3', 'Common', 'comp1');
model.material('mat3').label('Polyamide');
model.material('mat3').selection.set([4 9 16 19]);
model.material('mat3').propertyGroup('def').set('thermalconductivity', {'0.30'});
model.material('mat3').propertyGroup('def').set('density', {'1450'});
model.material('mat3').propertyGroup('def').set('heatcapacity', {'1600'});
model.material.create('mat4', 'Common', 'comp1');
model.material('mat4').label('Insulation Panel');
model.material('mat4').selection.set([22]);
model.material('mat4').propertyGroup('def').set('thermalconductivity', {'lambda_p'});
model.material('mat4').propertyGroup('def').set('density', {'50'});
model.material('mat4').propertyGroup('def').set('heatcapacity', {'1030'});
model.material.create('mat5', 'Common', 'comp1');
model.material('mat5').label('Unventilated Cavity 1');
model.material('mat5').selection.set([2]);
model.material('mat5').propertyGroup('def').set('thermalconductivity', {'uc1_h2/R_uc1'});
model.material('mat5').propertyGroup('def').set('density', {'1.23'});
model.material('mat5').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat6', 'Common', 'comp1');
model.material('mat6').label('Unventilated Cavity 2');
model.material('mat6').selection.set([5]);
model.material('mat6').propertyGroup('def').set('thermalconductivity', {'uc2_h/R_uc2'});
model.material('mat6').propertyGroup('def').set('density', {'1.23'});
model.material('mat6').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat7', 'Common', 'comp1');
model.material('mat7').label('Unventilated Cavity 3');
model.material('mat7').selection.set([6]);
model.material('mat7').propertyGroup('def').set('thermalconductivity', {'uc3_h2/R_uc3'});
model.material('mat7').propertyGroup('def').set('density', {'1.23'});
model.material('mat7').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat8', 'Common', 'comp1');
model.material('mat8').label('Unventilated Cavity 4');
model.material('mat8').selection.set([12]);
model.material('mat8').propertyGroup('def').set('thermalconductivity', {'uc4_h2/R_uc4'});
model.material('mat8').propertyGroup('def').set('density', {'1.23'});
model.material('mat8').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat9', 'Common', 'comp1');
model.material('mat9').label('Unventilated Cavity 5');
model.material('mat9').selection.set([17]);
model.material('mat9').propertyGroup('def').set('thermalconductivity', {'uc5_h/R_uc5'});
model.material('mat9').propertyGroup('def').set('density', {'1.23'});
model.material('mat9').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat10', 'Common', 'comp1');
model.material('mat10').label('Unventilated Cavity 6');
model.material('mat10').selection.set([21]);
model.material('mat10').propertyGroup('def').set('thermalconductivity', {'uc6_h/R_uc6'});
model.material('mat10').propertyGroup('def').set('density', {'1.23'});
model.material('mat10').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat11', 'Common', 'comp1');
model.material('mat11').label('Unventilated Cavity 7');
model.material('mat11').selection.set([20]);
model.material('mat11').propertyGroup('def').set('thermalconductivity', {'uc7_h2/R_uc7'});
model.material('mat11').propertyGroup('def').set('density', {'1.23'});
model.material('mat11').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat12', 'Common', 'comp1');
model.material('mat12').label('Unventilated Cavity 8');
model.material('mat12').selection.set([18]);
model.material('mat12').propertyGroup('def').set('thermalconductivity', {'uc8_h2/R_uc8'});
model.material('mat12').propertyGroup('def').set('density', {'1.23'});
model.material('mat12').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat13', 'Common', 'comp1');
model.material('mat13').label('Unventilated Cavity 9');
model.material('mat13').selection.set([15]);
model.material('mat13').propertyGroup('def').set('thermalconductivity', {'uc9_h/R_uc9'});
model.material('mat13').propertyGroup('def').set('density', {'1.23'});
model.material('mat13').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat14', 'Common', 'comp1');
model.material('mat14').label('Unventilated Cavity 10');
model.material('mat14').selection.set([10]);
model.material('mat14').propertyGroup('def').set('thermalconductivity', {'uc10_h2/R_uc10'});
model.material('mat14').propertyGroup('def').set('density', {'1.23'});
model.material('mat14').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat15', 'Common', 'comp1');
model.material('mat15').label('Slightly Ventilated Cavity');
model.material('mat15').selection.set([14]);
model.material('mat15').propertyGroup('def').set('thermalconductivity', {'2*svc_h/R_svc'});
model.material('mat15').propertyGroup('def').set('density', {'1.23'});
model.material('mat15').propertyGroup('def').set('heatcapacity', {'1008'});

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, heat transfer variables (ht)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 10000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, heat transfer variables (ht)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('s1').set('stol', '1e-6');

model.modelNode.create('comp2', true);

model.geom.create('geom2', 2);
model.geom('geom2').model('comp2');

model.mesh.create('mesh2', 'geom2');

model.modelNode('comp2').label('Second Window');

model.physics.create('ht2', 'HeatTransferInSolidsAndFluids', 'geom2');
model.physics('ht2').model('comp2');

model.study('std1').feature('stat').setSolveFor('/physics/ht2', false);

model.geom('geom2').run;
model.geom('geom2').create('imp1', 'Import');
model.geom('geom2').feature('imp1').set('filename', 'windows_thermal_performances_second_window.mphbin');
model.geom('geom2').feature('imp1').importData;
model.geom('geom2').run('fin');
model.geom('geom2').create('ige1', 'IgnoreEdges');
model.geom('geom2').feature('ige1').selection('input').set('fin', [8 24 48 77]);
model.geom('geom2').run('ige1');
model.geom('geom2').create('igv1', 'IgnoreVertices');
model.geom('geom2').feature('igv1').selection('input').set('ige1', [9 14 18 21 22 31 32 38 48 52 55]);
model.geom('geom2').run('igv1');

model.selection.create('sel16', 'Explicit');
model.selection('sel16').model('comp2');
model.selection('sel16').label('Unventilated Cavity 1');
model.selection('sel16').geom(1);
model.selection('sel16').set([3 4 6 20]);
model.selection.create('sel17', 'Explicit');
model.selection('sel17').model('comp2');
model.selection('sel17').label('Unventilated Cavity 2');
model.selection('sel17').geom(1);
model.selection('sel17').set([26 27 28 32]);
model.selection.create('sel18', 'Explicit');
model.selection('sel18').model('comp2');
model.selection('sel18').label('Unventilated Cavity 3');
model.selection('sel18').geom(1);
model.selection('sel18').set([29 30 31 39 40 51]);
model.selection.create('sel19', 'Explicit');
model.selection('sel19').model('comp2');
model.selection('sel19').label('Unventilated Cavity 4');
model.selection('sel19').geom(1);
model.selection('sel19').set([48 49 50 52 53 55]);
model.selection.create('sel20', 'Explicit');
model.selection('sel20').model('comp2');
model.selection('sel20').label('Unventilated Cavity 5');
model.selection('sel20').geom(1);
model.selection('sel20').set([36 37 38 41 43 45]);
model.selection.create('sel21', 'Explicit');
model.selection('sel21').model('comp2');
model.selection('sel21').label('Unventilated Cavity 6');
model.selection('sel21').geom(1);
model.selection('sel21').set([14 15 16 17 18 19 22 23 24 25 58]);
model.selection.create('sel22', 'Explicit');
model.selection('sel22').model('comp2');
model.selection('sel22').label('Interior Side (Flat Area)');
model.selection('sel22').geom(1);
model.selection('sel22').set([7 13 64]);
model.selection.create('sel23', 'Explicit');
model.selection('sel23').model('comp2');
model.selection('sel23').label('Interior Side (Corner Area)');
model.selection('sel23').geom(1);
model.selection('sel23').set([8 9 11 61 62 63]);
model.selection.create('sel24', 'Explicit');
model.selection('sel24').model('comp2');
model.selection('sel24').label('Exterior Side');
model.selection('sel24').geom(1);
model.selection('sel24').set([2 33 34 35 54 56]);
model.selection.create('sel25', 'Explicit');
model.selection('sel25').model('comp2');
model.selection('sel25').label('Interior Side');
model.selection('sel25').geom(1);
model.selection('sel25').set([7 8 9 11 13 61 62 63 64]);

model.cpl.create('maxop12', 'Maximum', 'geom2');
model.cpl('maxop12').set('opname', 'max_uc1');
model.cpl('maxop12').selection.set([2]);
model.cpl.create('minop12', 'Minimum', 'geom2');
model.cpl('minop12').set('opname', 'min_uc1');
model.cpl('minop12').selection.set([2]);
model.cpl.create('aveop12', 'Average', 'geom2');
model.cpl('aveop12').set('axisym', true);
model.cpl('aveop12').set('opname', 'ave_uc1');
model.cpl('aveop12').selection.geom('geom2', 1);
model.cpl('aveop12').selection.named('sel16');
model.cpl.create('maxop13', 'Maximum', 'geom2');
model.cpl('maxop13').set('opname', 'max_uc2');
model.cpl('maxop13').selection.set([8]);
model.cpl.create('minop13', 'Minimum', 'geom2');
model.cpl('minop13').set('opname', 'min_uc2');
model.cpl('minop13').selection.set([8]);
model.cpl.create('aveop13', 'Average', 'geom2');
model.cpl('aveop13').set('axisym', true);
model.cpl('aveop13').set('opname', 'ave_uc2');
model.cpl('aveop13').selection.geom('geom2', 1);
model.cpl('aveop13').selection.named('sel17');
model.cpl.create('maxop14', 'Maximum', 'geom2');
model.cpl('maxop14').set('opname', 'max_uc3');
model.cpl('maxop14').selection.set([9]);
model.cpl.create('minop14', 'Minimum', 'geom2');
model.cpl('minop14').set('opname', 'min_uc3');
model.cpl('minop14').selection.set([9]);
model.cpl.create('aveop14', 'Average', 'geom2');
model.cpl('aveop14').set('axisym', true);
model.cpl('aveop14').set('opname', 'ave_uc3');
model.cpl('aveop14').selection.geom('geom2', 1);
model.cpl('aveop14').selection.named('sel18');
model.cpl.create('intop8', 'Integration', 'geom2');
model.cpl('intop8').set('axisym', true);
model.cpl('intop8').set('opname', 'int_uc3');
model.cpl('intop8').selection.set([9]);
model.cpl.create('maxop15', 'Maximum', 'geom2');
model.cpl('maxop15').set('opname', 'max_uc4');
model.cpl('maxop15').selection.set([14]);
model.cpl.create('minop15', 'Minimum', 'geom2');
model.cpl('minop15').set('opname', 'min_uc4');
model.cpl('minop15').selection.set([14]);
model.cpl.create('aveop15', 'Average', 'geom2');
model.cpl('aveop15').set('axisym', true);
model.cpl('aveop15').set('opname', 'ave_uc4');
model.cpl('aveop15').selection.geom('geom2', 1);
model.cpl('aveop15').selection.named('sel19');
model.cpl.create('intop9', 'Integration', 'geom2');
model.cpl('intop9').set('axisym', true);
model.cpl('intop9').set('opname', 'int_uc4');
model.cpl('intop9').selection.set([14]);
model.cpl.create('maxop16', 'Maximum', 'geom2');
model.cpl('maxop16').set('opname', 'max_uc5');
model.cpl('maxop16').selection.set([10]);
model.cpl.create('minop16', 'Minimum', 'geom2');
model.cpl('minop16').set('opname', 'min_uc5');
model.cpl('minop16').selection.set([10]);
model.cpl.create('aveop16', 'Average', 'geom2');
model.cpl('aveop16').set('axisym', true);
model.cpl('aveop16').set('opname', 'ave_uc5');
model.cpl('aveop16').selection.geom('geom2', 1);
model.cpl('aveop16').selection.named('sel20');
model.cpl.create('maxop17', 'Maximum', 'geom2');
model.cpl('maxop17').set('opname', 'max_uc6');
model.cpl('maxop17').selection.set([6]);
model.cpl.create('minop17', 'Minimum', 'geom2');
model.cpl('minop17').set('opname', 'min_uc6');
model.cpl('minop17').selection.set([6]);
model.cpl.create('aveop17', 'Average', 'geom2');
model.cpl('aveop17').set('axisym', true);
model.cpl('aveop17').set('opname', 'ave_uc6');
model.cpl('aveop17').selection.geom('geom2', 1);
model.cpl('aveop17').selection.named('sel21');
model.cpl.create('intop10', 'Integration', 'geom2');
model.cpl('intop10').set('axisym', true);
model.cpl('intop10').set('opname', 'int_uc6');
model.cpl('intop10').selection.set([6]);
model.cpl.create('intop11', 'Integration', 'geom2');
model.cpl('intop11').set('axisym', true);
model.cpl('intop11').set('opname', 'int_internal');
model.cpl('intop11').selection.geom('geom2', 1);
model.cpl('intop11').selection.named('sel25');

model.variable.create('var2');
model.variable('var2').model('comp2');

% To import content from file, use:
% model.variable('var2').loadFile('FILENAME');
model.variable('var2').set('f_htot', '119[mm]', 'Total height of the frame');
model.variable('var2').set('f_hl1', '100[mm]', 'Height of the first left part of the frame');
model.variable('var2').set('f_hl2', '19[mm]', 'Height of the second left part of the frame');
model.variable('var2').set('f_hr1', '26[mm]', 'Height of the first right part of the frame');
model.variable('var2').set('f_hr2', '14[mm]', 'Height of the second right part of the frame');
model.variable('var2').set('f_hr3', '58[mm]', 'Height of the third right part of the frame (insulation panel thickness)');
model.variable('var2').set('f_hr4', '19[mm]', 'Height of the fourth right part of the frame');
model.variable('var2').set('f_wtot', '110[mm]', 'Total width of the frame');
model.variable('var2').set('f_wb1', '90[mm]', 'Width of the first bottom part of the frame');
model.variable('var2').set('f_wb2', '20[mm]', 'Width of the second bottom part of the frame');
model.variable('var2').set('f_wt1', '47[mm]', 'Width of the first top part of the frame');
model.variable('var2').set('f_wt2', '63[mm]', 'Width of the second top part of the frame');
model.variable('var2').set('wb1_h', '92[mm]', 'Height of the first wood block');
model.variable('var2').set('wb1_w', '76[mm]', 'Width of the first wood block');
model.variable('var2').set('wb2_h', '54[mm]', 'Height of the second wood block');
model.variable('var2').set('wb2_w', '63[mm]', 'Width of the second wood block');
model.variable('var2').set('wb2_h2', '12[mm]', 'Height of the second wood block under the insulation panel');
model.variable('var2').set('at', '2[mm]', 'Aluminum thickness');
model.variable('var2').set('et', '3[mm]', 'EPDM thickness');
model.variable('var2').set('e1_w', '12[mm]', 'Width of the first EPDM block');
model.variable('var2').set('uc1_h', '6[mm]', 'Height of the first unventilated cavity');
model.variable('var2').set('uc1_w', '76[mm]', 'Width of the first unventilated cavity');
model.variable('var2').set('uc2_h', '22[mm]', 'Height of the second unventilated cavity');
model.variable('var2').set('uc2_w', '10[mm]', 'Width of the second unventilated cavity');
model.variable('var2').set('uc3_h', '27[mm]', 'Height of the third unventilated cavity');
model.variable('var2').set('uc3_w', '30[mm]', 'Width of the third unventilated cavity');
model.variable('var2').set('uc4_h', '15[mm]', 'Height of the fourth unventilated cavity');
model.variable('var2').set('uc4_w', '13[mm]', 'Width of the fourth unventilated cavity');
model.variable('var2').set('uc5_h', '26[mm]', 'Height of the fifth unventilated cavity');
model.variable('var2').set('uc5_w', '5[mm]', 'Width of the fifth unventilated cavity');
model.variable('var2').set('uc6_h', '77[mm]', 'Height of the sixth unventilated cavity');
model.variable('var2').set('uc6_w', '51[mm]', 'Width of the sixth unventilated cavity');
model.variable('var2').set('cc_w1', '17[mm]', 'Width of the first part of the central cavity');
model.variable('var2').set('cc_w2', '4[mm]', 'Width of the second part of the central cavity');
model.variable('var2').set('cc_h', '6[mm]', 'Height of the central cavity (between wood block 2 and the aluminum block)');
model.variable('var2').set('pp', '15[mm]', 'Insulation panel penetration');
model.variable('var2').set('pvl', '190[mm]', 'Insulation panel visible length');
model.variable('var2').set('Rp', 'f_hr3/lambda_p', 'Thermal resistance of the central area of the insulation panel');
model.variable('var2').set('Up_n', '1/(Rsi_n+Rse+Rp)', 'Thermal transmittance of the insulation panel (normal)');
model.variable('var2').set('Up_p', '1/(Rsi_p+Rse+Rp)', 'Thermal transmittance of the insulation panel (protected)');
model.variable('var2').set('Up', '(f_hr4*Up_p+(pvl-f_hr4)*Up_n)/pvl', 'Thermal transmittance of the insulation panel');
model.variable('var2').set('A_uc3', 'int_uc3(1)', 'Area of the third unventilated cavity');
model.variable('var2').set('A_uc4', 'int_uc4(1)', 'Area of the fourth unventilated cavity');
model.variable('var2').set('A_uc6', 'int_uc6(1)', 'Area of the sixth unventilated cavity');
model.variable('var2').set('uc3_h2', 'h_resized(A_uc3,uc3_h,uc3_w)', 'Equivalent height for the third unventilated cavity');
model.variable('var2').set('uc4_h2', 'h_resized(A_uc4,uc4_h,uc4_w)', 'Equivalent height for the fourth unventilated cavity');
model.variable('var2').set('uc6_h2', 'h_resized(A_uc6,uc6_h,uc6_w)', 'Equivalent height for the sixth unventilated cavity');
model.variable('var2').set('R_uc1', '1/(ha_2(uc1_h,max_uc1(T2)-min_uc1(T2))+hr(uc1_h,uc1_w,ave_uc1(T2),epsilon,epsilon))', 'Thermal resistance of the first unventilated cavity');
model.variable('var2').set('R_uc2', '1/(ha_2(uc2_h,max_uc2(T2)-min_uc2(T2))+hr(uc2_h,uc2_w,ave_uc2(T2),epsilon,epsilon))', 'Thermal resistance of the second unventilated cavity');
model.variable('var2').set('R_uc3', '1/(ha_2(uc3_h2,max_uc3(T2)-min_uc3(T2))+hr(uc3_h,uc3_w,ave_uc3(T2),epsilon,epsilon))', 'Thermal resistance of the third unventilated cavity');
model.variable('var2').set('R_uc4', '1/(ha_2(uc4_h2,max_uc4(T2)-min_uc4(T2))+hr(uc4_h,uc4_w,ave_uc4(T2),epsilon,epsilon))', 'Thermal resistance of the fourth unventilated cavity');
model.variable('var2').set('R_uc5', '1/(ha_2(uc5_h,max_uc5(T2)-min_uc5(T2))+hr(uc5_h,uc5_w,ave_uc5(T2),epsilon,epsilon))', 'Thermal resistance of the fifth unventilated cavity');
model.variable('var2').set('R_uc6', '1/(ha_2(uc6_h2,max_uc6(T2)-min_uc6(T2))+hr(uc6_h,uc6_w,ave_uc6(T2),epsilon,epsilon))', 'Thermal resistance of the sixth unventilated cavity');

model.material.create('mat16', 'Common', 'comp2');
model.material('mat16').label('Aluminum');
model.material('mat16').selection.set([1 7]);
model.material('mat16').propertyGroup('def').set('thermalconductivity', {'160'});
model.material('mat16').propertyGroup('def').set('density', {'2800'});
model.material('mat16').propertyGroup('def').set('heatcapacity', {'880'});
model.material.create('mat17', 'Common', 'comp2');
model.material('mat17').label('EPDM');
model.material('mat17').selection.set([4 11 13]);
model.material('mat17').propertyGroup('def').set('thermalconductivity', {'0.25'});
model.material('mat17').propertyGroup('def').set('density', {'1150'});
model.material('mat17').propertyGroup('def').set('heatcapacity', {'1000'});
model.material.create('mat18', 'Common', 'comp2');
model.material('mat18').label('Insulation Panel');
model.material('mat18').selection.set([12]);
model.material('mat18').propertyGroup('def').set('thermalconductivity', {'lambda_p'});
model.material('mat18').propertyGroup('def').set('density', {'50'});
model.material('mat18').propertyGroup('def').set('heatcapacity', {'1030'});
model.material.create('mat19', 'Common', 'comp2');
model.material('mat19').label('Soft Wood');
model.material('mat19').selection.set([3 5]);
model.material('mat19').propertyGroup('def').set('thermalconductivity', {'0.13'});
model.material('mat19').propertyGroup('def').set('density', {'500'});
model.material('mat19').propertyGroup('def').set('heatcapacity', {'1600'});
model.material.create('mat20', 'Common', 'comp2');
model.material('mat20').label('Unventilated Cavity 1');
model.material('mat20').selection.set([2]);
model.material('mat20').propertyGroup('def').set('thermalconductivity', {'uc1_h/R_uc1'});
model.material('mat20').propertyGroup('def').set('density', {'1.23'});
model.material('mat20').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat21', 'Common', 'comp2');
model.material('mat21').label('Unventilated Cavity 2');
model.material('mat21').selection.set([8]);
model.material('mat21').propertyGroup('def').set('thermalconductivity', {'uc2_h/R_uc2'});
model.material('mat21').propertyGroup('def').set('density', {'1.23'});
model.material('mat21').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat22', 'Common', 'comp2');
model.material('mat22').label('Unventilated Cavity 3');
model.material('mat22').selection.set([9]);
model.material('mat22').propertyGroup('def').set('thermalconductivity', {'uc3_h2/R_uc3'});
model.material('mat22').propertyGroup('def').set('density', {'1.23'});
model.material('mat22').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat23', 'Common', 'comp2');
model.material('mat23').label('Unventilated Cavity 4');
model.material('mat23').selection.set([14]);
model.material('mat23').propertyGroup('def').set('thermalconductivity', {'uc4_h2/R_uc4'});
model.material('mat23').propertyGroup('def').set('density', {'1.23'});
model.material('mat23').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat24', 'Common', 'comp2');
model.material('mat24').label('Unventilated Cavity 5');
model.material('mat24').selection.set([10]);
model.material('mat24').propertyGroup('def').set('thermalconductivity', {'uc5_h/R_uc5'});
model.material('mat24').propertyGroup('def').set('density', {'1.23'});
model.material('mat24').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat25', 'Common', 'comp2');
model.material('mat25').label('Unventilated Cavity 6');
model.material('mat25').selection.set([6]);
model.material('mat25').propertyGroup('def').set('thermalconductivity', {'uc6_h2/R_uc6'});
model.material('mat25').propertyGroup('def').set('density', {'1.23'});
model.material('mat25').propertyGroup('def').set('heatcapacity', {'1008'});

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/ht', false);
model.study('std2').feature('stat').setSolveFor('/physics/ht2', true);

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol2').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol2').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol2').feature('s1').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s1').feature('d1').label('Direct, heat transfer variables (ht2)');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol2').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol2').feature('s1').feature('i1').set('maxlinit', 10000);
model.sol('sol2').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol2').feature('s1').feature('i1').label('AMG, heat transfer variables (ht2)');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol2').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol2').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol2').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').feature('s1').set('stol', '1e-6');

model.modelNode.create('comp3', true);

model.geom.create('geom3', 2);
model.geom('geom3').model('comp3');

model.mesh.create('mesh3', 'geom3');

model.modelNode('comp3').label('Third Window');

model.physics.create('ht3', 'HeatTransferInSolidsAndFluids', 'geom3');
model.physics('ht3').model('comp3');

model.study('std1').feature('stat').setSolveFor('/physics/ht3', false);
model.study('std2').feature('stat').setSolveFor('/physics/ht3', false);

model.geom('geom3').run;
model.geom('geom3').create('imp1', 'Import');
model.geom('geom3').feature('imp1').set('filename', 'windows_thermal_performances_third_window.mphbin');
model.geom('geom3').feature('imp1').importData;
model.geom('geom3').run('fin');
model.geom('geom3').create('ige1', 'IgnoreEdges');
model.geom('geom3').feature('ige1').selection('input').set('fin', [51 76 86 94 96 98 100 102 106 107 108 110 112 143]);
model.geom('geom3').run('ige1');
model.geom('geom3').create('igv1', 'IgnoreVertices');
model.geom('geom3').feature('igv1').selection('input').set('ige1', [15 16 22 23 40 60 64 67 73 76 84 85 106 107 112 113]);
model.geom('geom3').run('igv1');

model.selection.create('sel26', 'Explicit');
model.selection('sel26').model('comp3');
model.selection('sel26').label('Unventilated Cavity 1');
model.selection('sel26').geom(1);
model.selection('sel26').set([3 4 6 8]);
model.selection.create('sel27', 'Explicit');
model.selection('sel27').model('comp3');
model.selection('sel27').label('Unventilated Cavity 2');
model.selection('sel27').geom(1);
model.selection('sel27').set([15 16 17 36]);
model.selection.create('sel28', 'Explicit');
model.selection('sel28').model('comp3');
model.selection('sel28').label('Unventilated Cavity 3');
model.selection('sel28').geom(1);
model.selection('sel28').set([12 13 14 35]);
model.selection.create('sel29', 'Explicit');
model.selection('sel29').model('comp3');
model.selection('sel29').label('Unventilated Cavity 4');
model.selection('sel29').geom(1);
model.selection('sel29').set([32 33 34 56]);
model.selection.create('sel30', 'Explicit');
model.selection('sel30').model('comp3');
model.selection('sel30').label('Unventilated Cavity 5');
model.selection('sel30').geom(1);
model.selection('sel30').set([43 44 45 46 50 53 55 67]);
model.selection.create('sel31', 'Explicit');
model.selection('sel31').model('comp3');
model.selection('sel31').label('Unventilated Cavity 6');
model.selection('sel31').geom(1);
model.selection('sel31').set([37 38 39 48 51 52 60 61 65 66]);
model.selection.create('sel32', 'Explicit');
model.selection('sel32').model('comp3');
model.selection('sel32').label('Unventilated Cavity 7');
model.selection('sel32').geom(1);
model.selection('sel32').set([57 58 59 72 73 85]);
model.selection.create('sel33', 'Explicit');
model.selection('sel33').model('comp3');
model.selection('sel33').label('Unventilated Cavity 8');
model.selection('sel33').geom(1);
model.selection('sel33').set([69 70 71 84]);
model.selection.create('sel34', 'Explicit');
model.selection('sel34').model('comp3');
model.selection('sel34').label('Unventilated Cavity 9');
model.selection('sel34').geom(1);
model.selection('sel34').set([92 93 94 103]);
model.selection.create('sel35', 'Explicit');
model.selection('sel35').model('comp3');
model.selection('sel35').label('Unventilated Cavity 10');
model.selection('sel35').geom(1);
model.selection('sel35').set([89 90 91 95 97 99]);
model.selection.create('sel36', 'Explicit');
model.selection('sel36').model('comp3');
model.selection('sel36').label('Unventilated Cavity 11');
model.selection('sel36').geom(1);
model.selection('sel36').set([86 87 88 102]);
model.selection.create('sel37', 'Explicit');
model.selection('sel37').model('comp3');
model.selection('sel37').label('Unventilated Cavity 12');
model.selection('sel37').geom(1);
model.selection('sel37').set([9 10 11 68]);
model.selection.create('sel38', 'Explicit');
model.selection('sel38').model('comp3');
model.selection('sel38').label('Exterior Side');
model.selection('sel38').geom(1);
model.selection('sel38').set([2 77 78 79 104 105 106]);
model.selection.create('sel39', 'Explicit');
model.selection('sel39').model('comp3');
model.selection('sel39').label('Interior Side (Corner Area)');
model.selection('sel39').geom(1);
model.selection('sel39').set([18 25 27 107 108 109]);
model.selection.create('sel40', 'Explicit');
model.selection('sel40').model('comp3');
model.selection('sel40').label('Interior Side (Flat Area)');
model.selection('sel40').geom(1);
model.selection('sel40').set([7 29 110]);
model.selection.create('sel41', 'Explicit');
model.selection('sel41').model('comp3');
model.selection('sel41').label('Interior Side');
model.selection('sel41').geom(1);
model.selection('sel41').set([7 18 25 27 29 107 108 109 110]);

model.cpl.create('maxop18', 'Maximum', 'geom3');
model.cpl('maxop18').set('opname', 'max_uc1');
model.cpl('maxop18').selection.set([2]);
model.cpl.create('minop18', 'Minimum', 'geom3');
model.cpl('minop18').set('opname', 'min_uc1');
model.cpl('minop18').selection.set([2]);
model.cpl.create('aveop18', 'Average', 'geom3');
model.cpl('aveop18').set('axisym', true);
model.cpl('aveop18').set('opname', 'ave_uc1');
model.cpl('aveop18').selection.geom('geom3', 1);
model.cpl('aveop18').selection.named('sel26');
model.cpl.create('maxop19', 'Maximum', 'geom3');
model.cpl('maxop19').set('opname', 'max_uc2');
model.cpl('maxop19').selection.set([5]);
model.cpl.create('minop19', 'Minimum', 'geom3');
model.cpl('minop19').set('opname', 'min_uc2');
model.cpl('minop19').selection.set([5]);
model.cpl.create('aveop19', 'Average', 'geom3');
model.cpl('aveop19').set('axisym', true);
model.cpl('aveop19').set('opname', 'ave_uc2');
model.cpl('aveop19').selection.geom('geom3', 1);
model.cpl('aveop19').selection.named('sel27');
model.cpl.create('maxop20', 'Maximum', 'geom3');
model.cpl('maxop20').set('opname', 'max_uc3');
model.cpl('maxop20').selection.set([4]);
model.cpl.create('minop20', 'Minimum', 'geom3');
model.cpl('minop20').set('opname', 'min_uc3');
model.cpl('minop20').selection.set([4]);
model.cpl.create('aveop20', 'Average', 'geom3');
model.cpl('aveop20').set('axisym', true);
model.cpl('aveop20').set('opname', 'ave_uc3');
model.cpl('aveop20').selection.geom('geom3', 1);
model.cpl('aveop20').selection.named('sel28');
model.cpl.create('intop12', 'Integration', 'geom3');
model.cpl('intop12').set('axisym', true);
model.cpl('intop12').set('opname', 'int_uc3');
model.cpl('intop12').selection.set([4]);
model.cpl.create('maxop21', 'Maximum', 'geom3');
model.cpl('maxop21').set('opname', 'max_uc4');
model.cpl('maxop21').selection.set([9]);
model.cpl.create('minop21', 'Minimum', 'geom3');
model.cpl('minop21').set('opname', 'min_uc4');
model.cpl('minop21').selection.set([9]);
model.cpl.create('aveop21', 'Average', 'geom3');
model.cpl('aveop21').set('axisym', true);
model.cpl('aveop21').set('opname', 'ave_uc4');
model.cpl('aveop21').selection.geom('geom3', 1);
model.cpl('aveop21').selection.named('sel29');
model.cpl.create('maxop22', 'Maximum', 'geom3');
model.cpl('maxop22').set('opname', 'max_uc5');
model.cpl('maxop22').selection.set([12]);
model.cpl.create('minop22', 'Minimum', 'geom3');
model.cpl('minop22').set('opname', 'min_uc5');
model.cpl('minop22').selection.set([12]);
model.cpl.create('aveop22', 'Average', 'geom3');
model.cpl('aveop22').set('axisym', true);
model.cpl('aveop22').set('opname', 'ave_uc5');
model.cpl('aveop22').selection.geom('geom3', 1);
model.cpl('aveop22').selection.named('sel30');
model.cpl.create('intop13', 'Integration', 'geom3');
model.cpl('intop13').set('axisym', true);
model.cpl('intop13').set('opname', 'int_uc5');
model.cpl('intop13').selection.set([12]);
model.cpl.create('maxop23', 'Maximum', 'geom3');
model.cpl('maxop23').set('opname', 'max_uc6');
model.cpl('maxop23').selection.set([10]);
model.cpl.create('minop23', 'Minimum', 'geom3');
model.cpl('minop23').set('opname', 'min_uc6');
model.cpl('minop23').selection.set([10]);
model.cpl.create('aveop23', 'Average', 'geom3');
model.cpl('aveop23').set('axisym', true);
model.cpl('aveop23').set('opname', 'ave_uc6');
model.cpl('aveop23').selection.geom('geom3', 1);
model.cpl('aveop23').selection.named('sel31');
model.cpl.create('intop14', 'Integration', 'geom3');
model.cpl('intop14').set('axisym', true);
model.cpl('intop14').set('opname', 'int_uc6');
model.cpl('intop14').selection.set([10]);
model.cpl.create('maxop24', 'Maximum', 'geom3');
model.cpl('maxop24').set('opname', 'max_uc7');
model.cpl('maxop24').selection.set([13]);
model.cpl.create('minop24', 'Minimum', 'geom3');
model.cpl('minop24').set('opname', 'min_uc7');
model.cpl('minop24').selection.set([13]);
model.cpl.create('aveop24', 'Average', 'geom3');
model.cpl('aveop24').set('axisym', true);
model.cpl('aveop24').set('opname', 'ave_uc7');
model.cpl('aveop24').selection.geom('geom3', 1);
model.cpl('aveop24').selection.named('sel32');
model.cpl.create('intop15', 'Integration', 'geom3');
model.cpl('intop15').set('axisym', true);
model.cpl('intop15').set('opname', 'int_uc7');
model.cpl('intop15').selection.set([13]);
model.cpl.create('maxop25', 'Maximum', 'geom3');
model.cpl('maxop25').set('opname', 'max_uc8');
model.cpl('maxop25').selection.set([15]);
model.cpl.create('minop25', 'Minimum', 'geom3');
model.cpl('minop25').set('opname', 'min_uc8');
model.cpl('minop25').selection.set([15]);
model.cpl.create('aveop25', 'Average', 'geom3');
model.cpl('aveop25').set('axisym', true);
model.cpl('aveop25').set('opname', 'ave_uc8');
model.cpl('aveop25').selection.geom('geom3', 1);
model.cpl('aveop25').selection.named('sel33');
model.cpl.create('maxop26', 'Maximum', 'geom3');
model.cpl('maxop26').set('opname', 'max_uc9');
model.cpl('maxop26').selection.set([18]);
model.cpl.create('minop26', 'Minimum', 'geom3');
model.cpl('minop26').set('opname', 'min_uc9');
model.cpl('minop26').selection.set([18]);
model.cpl.create('aveop26', 'Average', 'geom3');
model.cpl('aveop26').set('axisym', true);
model.cpl('aveop26').set('opname', 'ave_uc9');
model.cpl('aveop26').selection.geom('geom3', 1);
model.cpl('aveop26').selection.named('sel34');
model.cpl.create('maxop27', 'Maximum', 'geom3');
model.cpl('maxop27').set('opname', 'max_uc10');
model.cpl('maxop27').selection.set([17]);
model.cpl.create('minop27', 'Minimum', 'geom3');
model.cpl('minop27').set('opname', 'min_uc10');
model.cpl('minop27').selection.set([17]);
model.cpl.create('aveop27', 'Average', 'geom3');
model.cpl('aveop27').set('axisym', true);
model.cpl('aveop27').set('opname', 'ave_uc10');
model.cpl('aveop27').selection.geom('geom3', 1);
model.cpl('aveop27').selection.named('sel35');
model.cpl.create('maxop28', 'Maximum', 'geom3');
model.cpl('maxop28').set('opname', 'max_uc11');
model.cpl('maxop28').selection.set([16]);
model.cpl.create('minop28', 'Minimum', 'geom3');
model.cpl('minop28').set('opname', 'min_uc11');
model.cpl('minop28').selection.set([16]);
model.cpl.create('aveop28', 'Average', 'geom3');
model.cpl('aveop28').set('axisym', true);
model.cpl('aveop28').set('opname', 'ave_uc11');
model.cpl('aveop28').selection.geom('geom3', 1);
model.cpl('aveop28').selection.named('sel36');
model.cpl.create('maxop29', 'Maximum', 'geom3');
model.cpl('maxop29').set('opname', 'max_uc12');
model.cpl('maxop29').selection.set([3]);
model.cpl.create('minop29', 'Minimum', 'geom3');
model.cpl('minop29').set('opname', 'min_uc12');
model.cpl('minop29').selection.set([3]);
model.cpl.create('aveop29', 'Average', 'geom3');
model.cpl('aveop29').set('axisym', true);
model.cpl('aveop29').set('opname', 'ave_uc12');
model.cpl('aveop29').selection.geom('geom3', 1);
model.cpl('aveop29').selection.named('sel37');
model.cpl.create('intop16', 'Integration', 'geom3');
model.cpl('intop16').set('axisym', true);
model.cpl('intop16').set('opname', 'int_internal');
model.cpl('intop16').selection.geom('geom3', 1);
model.cpl('intop16').selection.named('sel41');

model.variable.create('var3');
model.variable('var3').model('comp3');

% To import content from file, use:
% model.variable('var3').loadFile('FILENAME');
model.variable('var3').set('f_htot', '83[mm]', 'Total height of the frame');
model.variable('var3').set('f_hl1', '66[mm]', 'Height of the first left part of the frame');
model.variable('var3').set('f_hl2', '17[mm]', 'Height of the second left part of the frame');
model.variable('var3').set('f_hr1', '11[mm]', 'Height of the first right part of the frame');
model.variable('var3').set('f_hr2', '19[mm]', 'Height of the second right part of the frame');
model.variable('var3').set('f_hr3', '28[mm]', 'Height of the third right part of the frame (insulation panel thickness)');
model.variable('var3').set('f_hr4', '25[mm]', 'Height of the fourth right part of the frame');
model.variable('var3').set('f_wtot', '110[mm]', 'Total width of the frame');
model.variable('var3').set('f_wb1', '68[mm]', 'Width of the first bottom part of the frame');
model.variable('var3').set('f_wb2', '42[mm]', 'Width of the second bottom part of the frame');
model.variable('var3').set('f_wt1', '28[mm]', 'Width of the first top part of the frame');
model.variable('var3').set('f_wt2', '82[mm]', 'Width of the second top part of the frame');
model.variable('var3').set('uc1_h', '60[mm]', 'Height of the first unventilated cavity');
model.variable('var3').set('uc1_w', '8[mm]', 'Width of the first unventilated cavity');
model.variable('var3').set('uc2_h', '11[mm]', 'Height of the second unventilated cavity');
model.variable('var3').set('uc2_w', '22[mm]', 'Width of the second unventilated cavity');
model.variable('var3').set('uc3_h', '39[mm]', 'Height of the third unventilated cavity');
model.variable('var3').set('uc3_w', '22[mm]', 'Width of the third unventilated cavity');
model.variable('var3').set('uc4_h', '8[mm]', 'Height of the fourth unventilated cavity');
model.variable('var3').set('uc4_w', '15[mm]', 'Width of the fourth unventilated cavity');
model.variable('var3').set('uc5_h', '20[mm]', 'Height of the fifth unventilated cavity');
model.variable('var3').set('uc5_w', '26[mm]', 'Width of the fifth unventilated cavity');
model.variable('var3').set('uc6_h', '39[mm]', 'Height of the sixth unventilated cavity');
model.variable('var3').set('uc6_w', '26[mm]', 'Width of the sixth unventilated cavity');
model.variable('var3').set('uc7_h', '53[mm]', 'Height of the seventh unventilated cavity');
model.variable('var3').set('uc7_w', '34[mm]', 'Width of the seventh unventilated cavity');
model.variable('var3').set('uc8_h', '10[mm]', 'Height of the eighth unventilated cavity');
model.variable('var3').set('uc8_w', '17[mm]', 'Width of the eighth unventilated cavity');
model.variable('var3').set('uc9_h', '14[mm]', 'Height of the ninth unventilated cavity');
model.variable('var3').set('uc9_w', '22[mm]', 'Width of the ninth unventilated cavity');
model.variable('var3').set('uc10_h', '36[mm]', 'Height of the tenth unventilated cavity');
model.variable('var3').set('uc10_w', '10[mm]', 'Width of the tenth unventilated cavity');
model.variable('var3').set('uc11_h', '10[mm]', 'Height of the eleventh unventilated cavity');
model.variable('var3').set('uc11_w', '22[mm]', 'Width of the eleventh unventilated cavity');
model.variable('var3').set('uc12_h', '4[mm]', 'Height of the twelfth unventilated cavity');
model.variable('var3').set('uc12_w', '54[mm]', 'Width of the twelfth unventilated cavity');
model.variable('var3').set('epdm_t1', '3[mm]', 'First epdm thickness');
model.variable('var3').set('epdm_t2', '5[mm]', 'Second epdm thickness');
model.variable('var3').set('epdm_w1', '8[mm]', 'First width of epdm');
model.variable('var3').set('epdm_w2', '10[mm]', 'Second width of epdm');
model.variable('var3').set('s_t', '2[mm]', 'Steel thickness');
model.variable('var3').set('sp1', '1[mm]', 'Space between PVC and steel');
model.variable('var3').set('sp2', '6[mm]', 'Useful space');
model.variable('var3').set('sp3', '16[mm]', 'Useful space');
model.variable('var3').set('pvc_t1', '2[mm]', 'First pvc thickness');
model.variable('var3').set('pvc_t2', '3[mm]', 'Second pvc thickness');
model.variable('var3').set('pvc_w', '4[mm]', 'PVC wedge length');
model.variable('var3').set('pp', '15[mm]', 'Panel penetration');
model.variable('var3').set('pvl', '190[mm]', 'Panel visible length');
model.variable('var3').set('Rp', 'f_hr3/lambda_p', 'Thermal resistance of the central area of the panel');
model.variable('var3').set('Up_n', '1/(Rp+Rse+Rsi_n)', 'Thermal transmittance of the insulation panel (normal)');
model.variable('var3').set('Up_p', '1/(Rp+Rse+Rsi_p)', 'Thermal transmittance of the insulation panel (protected)');
model.variable('var3').set('Up', '(Up_p*f_hr4+Up_n*(pvl-f_hr4))/pvl', 'Thermal transmittance of the panel');
model.variable('var3').set('A_uc3', 'int_uc3(1)', 'Area of the third unventilated cavity');
model.variable('var3').set('A_uc5', 'int_uc5(1)', 'Area of the fifth unventilated cavity');
model.variable('var3').set('A_uc6', 'int_uc6(1)', 'Area of the sixth unventilated cavity');
model.variable('var3').set('A_uc7', 'int_uc7(1)', 'Area of the seventh unventilated cavity');
model.variable('var3').set('uc3_h2', 'h_resized(A_uc3,uc3_h,uc3_w)', 'Equivalent height of the third unventilated cavity');
model.variable('var3').set('uc5_h2', 'h_resized(A_uc5,uc5_h,uc5_w)', 'Equivalent height of the fifth unventilated cavity');
model.variable('var3').set('uc6_h2', 'h_resized(A_uc6,uc6_h,uc6_w)', 'Equivalent height of the sixth unventilated cavity');
model.variable('var3').set('uc7_h2', 'h_resized(A_uc7,uc7_h,uc7_w)', 'Equivalent height of the seventh unventilated cavity');
model.variable('var3').set('R_uc1', '1/(ha_2(uc1_h,max_uc1(T3)-min_uc1(T3))+hr(uc1_h,uc1_w,ave_uc1(T3),epsilon,epsilon))', 'Thermal resistance of the first unventilated cavity');
model.variable('var3').set('R_uc2', '1/(ha_2(uc2_h,max_uc2(T3)-min_uc2(T3))+hr(uc2_h,uc2_w,ave_uc2(T3),epsilon,epsilon))', 'Thermal resistance of the second unventilated cavity');
model.variable('var3').set('R_uc3', '1/(ha_2(uc3_h2,max_uc3(T3)-min_uc3(T3))+hr(uc3_h,uc3_w,ave_uc3(T3),epsilon,epsilon))', 'Thermal resistance of the third unventilated cavity');
model.variable('var3').set('R_uc4', '1/(ha_2(uc4_h,max_uc4(T3)-min_uc4(T3))+hr(uc4_h,uc4_w,ave_uc4(T3),epsilon,epsilon))', 'Thermal resistance of the fourth unventilated cavity');
model.variable('var3').set('R_uc5', '1/(ha_2(uc5_h2,max_uc5(T3)-min_uc5(T3))+hr(uc5_h,uc5_w,ave_uc5(T3),epsilon,epsilon))', 'Thermal resistance of the fifth unventilated cavity');
model.variable('var3').set('R_uc6', '1/(ha_2(uc6_h2,max_uc6(T3)-min_uc6(T3))+hr(uc6_h,uc6_w,ave_uc6(T3),epsilon,epsilon))', 'Thermal resistance of the sixth unventilated cavity');
model.variable('var3').set('R_uc7', '1/(ha_2(uc7_h2,max_uc7(T3)-min_uc7(T3))+hr(uc7_h,uc7_w,ave_uc7(T3),epsilon,epsilon))', 'Thermal resistance of the seventh unventilated cavity');
model.variable('var3').set('R_uc8', '1/(ha_2(uc8_h,max_uc8(T3)-min_uc8(T3))+hr(uc8_h,uc8_w,ave_uc8(T3),epsilon,epsilon))', 'Thermal resistance of the eighth unventilated cavity');
model.variable('var3').set('R_uc9', '1/(ha_2(uc9_h,max_uc9(T3)-min_uc9(T3))+hr(uc9_h,uc9_w,ave_uc9(T3),epsilon,epsilon))', 'Thermal resistance of the ninth unventilated cavity');
model.variable('var3').set('R_uc10', '1/(ha_2(uc10_h,max_uc10(T3)-min_uc10(T3))+hr(uc10_h,uc10_w,ave_uc10(T3),epsilon,epsilon))', 'Thermal resistance of the tenth unventilated cavity');
model.variable('var3').set('R_uc11', '1/(ha_2(uc11_h,max_uc11(T3)-min_uc11(T3))+hr(uc11_h,uc11_w,ave_uc11(T3),epsilon,epsilon))', 'Thermal resistance of the eleventh unventilated cavity');
model.variable('var3').set('R_uc12', '1/(ha_2(uc12_h,max_uc12(T3)-min_uc12(T3))+hr(uc12_h,uc12_w,ave_uc12(T3),epsilon,epsilon))', 'Thermal resistance of the twelfth unventilated cavity');

model.material.create('mat26', 'Common', 'comp3');
model.material('mat26').label('Steel');
model.material('mat26').selection.set([6 14]);
model.material('mat26').propertyGroup('def').set('thermalconductivity', {'50'});
model.material('mat26').propertyGroup('def').set('density', {'7800'});
model.material('mat26').propertyGroup('def').set('heatcapacity', {'450'});
model.material.create('mat27', 'Common', 'comp3');
model.material('mat27').label('EPDM');
model.material('mat27').selection.set([7 11 19 21]);
model.material('mat27').propertyGroup('def').set('thermalconductivity', {'0.25'});
model.material('mat27').propertyGroup('def').set('density', {'1150'});
model.material('mat27').propertyGroup('def').set('heatcapacity', {'1000'});
model.material.create('mat28', 'Common', 'comp3');
model.material('mat28').label('PVC');
model.material('mat28').selection.set([1 8]);
model.material('mat28').propertyGroup('def').set('thermalconductivity', {'0.17'});
model.material('mat28').propertyGroup('def').set('density', {'1390'});
model.material('mat28').propertyGroup('def').set('heatcapacity', {'1900'});
model.material.create('mat29', 'Common', 'comp3');
model.material('mat29').label('Insulation Panel');
model.material('mat29').selection.set([20]);
model.material('mat29').propertyGroup('def').set('thermalconductivity', {'lambda_p'});
model.material('mat29').propertyGroup('def').set('density', {'50'});
model.material('mat29').propertyGroup('def').set('heatcapacity', {'1030'});
model.material.create('mat30', 'Common', 'comp3');
model.material('mat30').label('Unventilated Cavity 1');
model.material('mat30').selection.set([2]);
model.material('mat30').propertyGroup('def').set('thermalconductivity', {'uc1_h/R_uc1'});
model.material('mat30').propertyGroup('def').set('density', {'1.23'});
model.material('mat30').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat31', 'Common', 'comp3');
model.material('mat31').label('Unventilated Cavity 2');
model.material('mat31').selection.set([5]);
model.material('mat31').propertyGroup('def').set('thermalconductivity', {'uc2_h/R_uc2'});
model.material('mat31').propertyGroup('def').set('density', {'1.23'});
model.material('mat31').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat32', 'Common', 'comp3');
model.material('mat32').label('Unventilated Cavity 3');
model.material('mat32').selection.set([4]);
model.material('mat32').propertyGroup('def').set('thermalconductivity', {'uc3_h2/R_uc3'});
model.material('mat32').propertyGroup('def').set('density', {'1.23'});
model.material('mat32').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat33', 'Common', 'comp3');
model.material('mat33').label('Unventilated Cavity 4');
model.material('mat33').selection.set([9]);
model.material('mat33').propertyGroup('def').set('thermalconductivity', {'uc4_h/R_uc4'});
model.material('mat33').propertyGroup('def').set('density', {'1.23'});
model.material('mat33').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat34', 'Common', 'comp3');
model.material('mat34').label('Unventilated Cavity 5');
model.material('mat34').selection.set([12]);
model.material('mat34').propertyGroup('def').set('thermalconductivity', {'uc5_h2/R_uc5'});
model.material('mat34').propertyGroup('def').set('density', {'1.23'});
model.material('mat34').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat35', 'Common', 'comp3');
model.material('mat35').label('Unventilated Cavity 6');
model.material('mat35').selection.set([10]);
model.material('mat35').propertyGroup('def').set('thermalconductivity', {'uc6_h2/R_uc6'});
model.material('mat35').propertyGroup('def').set('density', {'1.23'});
model.material('mat35').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat36', 'Common', 'comp3');
model.material('mat36').label('Unventilated Cavity 7');
model.material('mat36').selection.set([13]);
model.material('mat36').propertyGroup('def').set('thermalconductivity', {'uc7_h2/R_uc7'});
model.material('mat36').propertyGroup('def').set('density', {'1.23'});
model.material('mat36').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat37', 'Common', 'comp3');
model.material('mat37').label('Unventilated Cavity 8');
model.material('mat37').selection.set([15]);
model.material('mat37').propertyGroup('def').set('thermalconductivity', {'uc8_h/R_uc8'});
model.material('mat37').propertyGroup('def').set('density', {'1.23'});
model.material('mat37').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat38', 'Common', 'comp3');
model.material('mat38').label('Unventilated Cavity 9');
model.material('mat38').selection.set([18]);
model.material('mat38').propertyGroup('def').set('thermalconductivity', {'uc9_h/R_uc9'});
model.material('mat38').propertyGroup('def').set('density', {'1.23'});
model.material('mat38').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat39', 'Common', 'comp3');
model.material('mat39').label('Unventilated Cavity 10');
model.material('mat39').selection.set([17]);
model.material('mat39').propertyGroup('def').set('thermalconductivity', {'uc10_h/R_uc10'});
model.material('mat39').propertyGroup('def').set('density', {'1.23'});
model.material('mat39').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat40', 'Common', 'comp3');
model.material('mat40').label('Unventilated Cavity 11');
model.material('mat40').selection.set([16]);
model.material('mat40').propertyGroup('def').set('thermalconductivity', {'uc11_h/R_uc11'});
model.material('mat40').propertyGroup('def').set('density', {'1.23'});
model.material('mat40').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat41', 'Common', 'comp3');
model.material('mat41').label('Unventilated Cavity 12');
model.material('mat41').selection.set([3]);
model.material('mat41').propertyGroup('def').set('thermalconductivity', {'uc12_h/R_uc12'});
model.material('mat41').propertyGroup('def').set('density', {'1.23'});
model.material('mat41').propertyGroup('def').set('heatcapacity', {'1008'});

model.study.create('std3');
model.study('std3').create('stat', 'Stationary');
model.study('std3').feature('stat').setSolveFor('/physics/ht', false);
model.study('std3').feature('stat').setSolveFor('/physics/ht2', false);
model.study('std3').feature('stat').setSolveFor('/physics/ht3', true);

model.sol.create('sol3');
model.sol('sol3').study('std3');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std3');
model.sol('sol3').feature('st1').set('studystep', 'stat');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').set('control', 'stat');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol3').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol3').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol3').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol3').feature('s1').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s1').feature('d1').label('Direct, heat transfer variables (ht3)');
model.sol('sol3').feature('s1').create('i1', 'Iterative');
model.sol('sol3').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol3').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol3').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol3').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol3').feature('s1').feature('i1').set('maxlinit', 10000);
model.sol('sol3').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol3').feature('s1').feature('i1').label('AMG, heat transfer variables (ht3)');
model.sol('sol3').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol3').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol3').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol3').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol3').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol('sol3').attach('std3');
model.sol('sol3').feature('s1').set('stol', '1e-6');

model.modelNode.create('comp4', true);

model.geom.create('geom4', 2);
model.geom('geom4').model('comp4');

model.mesh.create('mesh4', 'geom4');

model.modelNode('comp4').label('Fourth Window');

model.physics.create('ht4', 'HeatTransferInSolidsAndFluids', 'geom4');
model.physics('ht4').model('comp4');

model.study('std1').feature('stat').setSolveFor('/physics/ht4', false);
model.study('std2').feature('stat').setSolveFor('/physics/ht4', false);
model.study('std3').feature('stat').setSolveFor('/physics/ht4', false);

model.geom('geom4').run;
model.geom('geom4').create('imp1', 'Import');
model.geom('geom4').feature('imp1').set('filename', 'windows_thermal_performances_fourth_window.mphbin');
model.geom('geom4').feature('imp1').importData;
model.geom('geom4').run('fin');
model.geom('geom4').create('ige1', 'IgnoreEdges');
model.geom('geom4').feature('ige1').selection('input').set('fin', [9 12 22 25 27 33 35 42 53 60 100 101]);
model.geom('geom4').run('ige1');
model.geom('geom4').create('igv1', 'IgnoreVertices');
model.geom('geom4').feature('igv1').selection('input').set('ige1', [7 14 17 21 29 41 48 57 62 66 72 74 77]);
model.geom('geom4').run('igv1');

model.selection.create('sel42', 'Explicit');
model.selection('sel42').model('comp4');
model.selection('sel42').label('Unventilated Cavity 1');
model.selection('sel42').geom(1);
model.selection('sel42').set([3 4 5 11 12 14 15 17 18]);
model.selection.create('sel43', 'Explicit');
model.selection('sel43').model('comp4');
model.selection('sel43').label('Unventilated Cavity 2');
model.selection('sel43').geom(1);
model.selection('sel43').set([40 41 43 50]);
model.selection.create('sel44', 'Explicit');
model.selection('sel44').model('comp4');
model.selection('sel44').label('Unventilated Cavity 3');
model.selection('sel44').geom(1);
model.selection('sel44').set([76 77 78 79 80 82 84]);
model.selection.create('sel45', 'Explicit');
model.selection('sel45').model('comp4');
model.selection('sel45').label('Slightly Ventilated Cavity 1');
model.selection('sel45').geom(1);
model.selection('sel45').set([44 45 53]);
model.selection.create('sel46', 'Explicit');
model.selection('sel46').model('comp4');
model.selection('sel46').label('Slightly Ventilated Cavity 2');
model.selection('sel46').geom(1);
model.selection('sel46').set([25 26 27 28 29 30 31 32 33 35 37]);
model.selection.create('sel47', 'Explicit');
model.selection('sel47').model('comp4');
model.selection('sel47').label('Slightly Ventilated Cavity 3');
model.selection('sel47').geom(1);
model.selection('sel47').set([58 59 60 63 64 66 67 68 69 71 73]);
model.selection.create('sel48', 'Explicit');
model.selection('sel48').model('comp4');
model.selection('sel48').label('Slightly Ventilated Cavity 4');
model.selection('sel48').geom(1);
model.selection('sel48').set([9 10 16]);
model.selection.create('sel49', 'Explicit');
model.selection('sel49').model('comp4');
model.selection('sel49').label('Exterior Side');
model.selection('sel49').geom(1);
model.selection('sel49').set([2 6 7 8 22 23 24 70 72 74 90 91 92]);
model.selection.create('sel50', 'Explicit');
model.selection('sel50').model('comp4');
model.selection('sel50').label('Interior Side (Corner Area)');
model.selection('sel50').geom(1);
model.selection('sel50').set([46 47 55 87 88 93 94 95]);
model.selection.create('sel51', 'Explicit');
model.selection('sel51').model('comp4');
model.selection('sel51').label('Interior Side (Flat Area)');
model.selection('sel51').geom(1);
model.selection('sel51').set([21 75 89 96]);
model.selection.create('sel52', 'Explicit');
model.selection('sel52').model('comp4');
model.selection('sel52').label('Interior Side');
model.selection('sel52').geom(1);
model.selection('sel52').set([21 46 47 55 75 87 88 89 93 94 95 96]);

model.cpl.create('maxop30', 'Maximum', 'geom4');
model.cpl('maxop30').set('opname', 'max_uc1');
model.cpl('maxop30').selection.set([2]);
model.cpl.create('minop30', 'Minimum', 'geom4');
model.cpl('minop30').set('opname', 'min_uc1');
model.cpl('minop30').selection.set([2]);
model.cpl.create('aveop30', 'Average', 'geom4');
model.cpl('aveop30').set('axisym', true);
model.cpl('aveop30').set('opname', 'ave_uc1');
model.cpl('aveop30').selection.geom('geom4', 1);
model.cpl('aveop30').selection.named('sel42');
model.cpl.create('intop17', 'Integration', 'geom4');
model.cpl('intop17').set('axisym', true);
model.cpl('intop17').set('opname', 'int_uc1');
model.cpl('intop17').selection.set([2]);
model.cpl.create('aveop31', 'Average', 'geom4');
model.cpl('aveop31').set('axisym', true);
model.cpl('aveop31').set('opname', 'ave_uc2');
model.cpl('aveop31').selection.geom('geom4', 1);
model.cpl('aveop31').selection.named('sel43');
model.cpl.create('maxop31', 'Maximum', 'geom4');
model.cpl('maxop31').set('opname', 'max_uc3');
model.cpl('maxop31').selection.set([15]);
model.cpl.create('minop31', 'Minimum', 'geom4');
model.cpl('minop31').set('opname', 'min_uc3');
model.cpl('minop31').selection.set([15]);
model.cpl.create('aveop32', 'Average', 'geom4');
model.cpl('aveop32').set('axisym', true);
model.cpl('aveop32').set('opname', 'ave_uc3');
model.cpl('aveop32').selection.geom('geom4', 1);
model.cpl('aveop32').selection.named('sel44');
model.cpl.create('aveop33', 'Average', 'geom4');
model.cpl('aveop33').set('axisym', true);
model.cpl('aveop33').set('opname', 'ave_svc1');
model.cpl('aveop33').selection.geom('geom4', 1);
model.cpl('aveop33').selection.named('sel45');
model.cpl.create('maxop32', 'Maximum', 'geom4');
model.cpl('maxop32').set('opname', 'max_svc2');
model.cpl('maxop32').selection.set([7]);
model.cpl.create('minop32', 'Minimum', 'geom4');
model.cpl('minop32').set('opname', 'min_svc2');
model.cpl('minop32').selection.set([7]);
model.cpl.create('aveop34', 'Average', 'geom4');
model.cpl('aveop34').set('axisym', true);
model.cpl('aveop34').set('opname', 'ave_svc2');
model.cpl('aveop34').selection.geom('geom4', 1);
model.cpl('aveop34').selection.named('sel46');
model.cpl.create('intop18', 'Integration', 'geom4');
model.cpl('intop18').set('axisym', true);
model.cpl('intop18').set('opname', 'int_svc2');
model.cpl('intop18').selection.set([7]);
model.cpl.create('maxop33', 'Maximum', 'geom4');
model.cpl('maxop33').set('opname', 'max_svc3');
model.cpl('maxop33').selection.set([13]);
model.cpl.create('minop33', 'Minimum', 'geom4');
model.cpl('minop33').set('opname', 'min_svc3');
model.cpl('minop33').selection.set([13]);
model.cpl.create('aveop35', 'Average', 'geom4');
model.cpl('aveop35').set('axisym', true);
model.cpl('aveop35').set('opname', 'ave_svc3');
model.cpl('aveop35').selection.geom('geom4', 1);
model.cpl('aveop35').selection.named('sel47');
model.cpl.create('intop19', 'Integration', 'geom4');
model.cpl('intop19').set('axisym', true);
model.cpl('intop19').set('opname', 'int_svc3');
model.cpl('intop19').selection.set([13]);
model.cpl.create('aveop36', 'Average', 'geom4');
model.cpl('aveop36').set('axisym', true);
model.cpl('aveop36').set('opname', 'ave_svc4');
model.cpl('aveop36').selection.geom('geom4', 1);
model.cpl('aveop36').selection.named('sel48');
model.cpl.create('intop20', 'Integration', 'geom4');
model.cpl('intop20').set('axisym', true);
model.cpl('intop20').set('opname', 'int_internal');
model.cpl('intop20').selection.geom('geom4', 1);
model.cpl('intop20').selection.named('sel52');

model.variable.create('var4');
model.variable('var4').model('comp4');

% To import content from file, use:
% model.variable('var4').loadFile('FILENAME');
model.variable('var4').set('f_htot', '145[mm]', 'Total height of the frame');
model.variable('var4').set('f_hl1', '12[mm]', 'Height of the first left part of the frame');
model.variable('var4').set('f_hl2', '3[mm]', 'Height of the second left part of the frame');
model.variable('var4').set('f_hl3', '63[mm]', 'Height of the third left part of the frame');
model.variable('var4').set('f_hl4', '10[mm]', 'Height of the fourth left part of the frame');
model.variable('var4').set('f_hl5', '8[mm]', 'Height of the fifth left part of the frame');
model.variable('var4').set('f_hl6', '49[mm]', 'Height of the sixth left part of the frame');
model.variable('var4').set('f_hr1', '6[mm]', 'Height of the first right part of the frame');
model.variable('var4').set('f_hr2', '3[mm]', 'Height of the second right part of the frame');
model.variable('var4').set('f_hr3', '24[mm]', 'Height of the third right part of the frame (insulation panel thickness)');
model.variable('var4').set('f_hr4', '56[mm]', 'Height of the fourth right part of the frame');
model.variable('var4').set('f_hr5', '7[mm]', 'Height of the fifth right part of the frame');
model.variable('var4').set('f_hr6', '49[mm]', 'Height of the sixth right part of the frame');
model.variable('var4').set('f_wtot', '89[mm]', 'Total width of the frame (use for calculation)');
model.variable('var4').set('f_wb1', '10[mm]', 'Width of the first bottom part of the frame');
model.variable('var4').set('f_wb2', '20[mm]', 'Width of the second bottom part of the frame');
model.variable('var4').set('f_wb3', '54[mm]', 'Width of the third bottom part of the frame');
model.variable('var4').set('f_wb4', '5[mm]', 'Width of the fourth bottom part of the frame');
model.variable('var4').set('f_wb5', '19[mm]', 'Width of the fifth bottom part of the frame');
model.variable('var4').set('f_wt1', '19[mm]', 'Width of the first top part of the frame');
model.variable('var4').set('f_wt2', '40[mm]', 'Width of the second top part of the frame');
model.variable('var4').set('f_wt3', '3[mm]', 'Width of the third top part of the frame');
model.variable('var4').set('f_wt4', '33[mm]', 'Width of the fourth top part of the frame');
model.variable('var4').set('f_wT4', '13[mm]', 'Width of the fifth part of the frame');
model.variable('var4').set('uc1_h', '80[mm]', 'Height of the first unventilated cavity');
model.variable('var4').set('uc1_w', '19[mm]', 'Width of the first unventilated cavity');
model.variable('var4').set('uc2_h', '20[mm]', 'Height of the second unventilated cavity');
model.variable('var4').set('uc2_w', '3[mm]', 'Width of the second unventilated cavity');
model.variable('var4').set('uc3_h', '28[mm]', 'Height of the third unventilated cavity');
model.variable('var4').set('uc3_w', '5[mm]', 'Width of the third unventilated cavity');
model.variable('var4').set('svc1_h', '7[mm]', 'Height of the first slightly ventilated cavity');
model.variable('var4').set('svc1_w', '3[mm]', 'Width of the first slightly ventilated cavity');
model.variable('var4').set('svc2_h', '63[mm]', 'Height of the second slightly ventilated cavity');
model.variable('var4').set('svc2_w', '26[mm]', 'Width of the second slightly ventilated cavity');
model.variable('var4').set('svc3_h', '15[mm]', 'Height of the third slightly ventilated cavity');
model.variable('var4').set('svc3_w', '18[mm]', 'Width of the third slightly ventilated cavity');
model.variable('var4').set('svc4_h', '10[mm]', 'Height of the fourth slightly ventilated cavity');
model.variable('var4').set('svc4_w', '3[mm]', 'Width of the fourth slightly ventilated cavity');
model.variable('var4').set('pp', '13[mm]', 'Panel penetration');
model.variable('var4').set('pvl', '190[mm]', 'Panel visible length');
model.variable('var4').set('epdm_t1', '2[mm]', 'First EPDM block thickness');
model.variable('var4').set('epdm_t2', '3[mm]', 'Second EPDM block thickness');
model.variable('var4').set('wb1_h', '130[mm]', 'Height of the first wood block');
model.variable('var4').set('wb1_w', '40[mm]', 'Width of the first wood block');
model.variable('var4').set('wb2_h', '95[mm]', 'Height of the second wood block');
model.variable('var4').set('wb2_w1', '15[mm]', 'First width of the second wood block');
model.variable('var4').set('wb2_w2', '34[mm]', 'Second width of the second wood block');
model.variable('var4').set('wb2_w3', '52[mm]', 'Third width of the second wood block');
model.variable('var4').set('a_t', '1[mm]', 'Aluminum thickness');
model.variable('var4').set('a_h', '48[mm]', 'Height of the aluminum block on the left of the frame');
model.variable('var4').set('sp1', '2[mm]', 'Useful space');
model.variable('var4').set('sp2', '3[mm]', 'Useful thickness');
model.variable('var4').set('sp3', '5[mm]', 'Useful thickness');
model.variable('var4').set('sp4', '6[mm]', 'Useful thickness');
model.variable('var4').set('sp5', '8[mm]', 'Useful space');
model.variable('var4').set('A_uc1', 'int_uc1(1)', 'Area of the first unventilated cavity');
model.variable('var4').set('A_svc2', 'int_svc2(1)', 'Area of the second slightly ventilated cavity');
model.variable('var4').set('A_svc3', 'int_svc3(1)', 'Area of the third slightly ventilated cavity');
model.variable('var4').set('uc1_h2', 'h_resized(A_uc1,uc1_h,uc1_w)', 'Equivalent height of the first unventilated cavity');
model.variable('var4').set('svc2_h2', 'h_resized(A_svc2,svc2_h,svc2_w)', 'Equivalent height of the second slightly ventilated cavity');
model.variable('var4').set('svc3_h2', 'h_resized(A_svc3,svc3_h,svc3_w)', 'Equivalent height of the third slightly ventilated cavity');
model.variable('var4').set('R_uc1', '1/(ha_2(uc1_h2,max_uc1(T4)-min_uc1(T4))+hr(uc1_h,uc1_w,ave_uc1(T4),epsilon,epsilon))', 'Thermal resistance of the first unventilated cavity');
model.variable('var4').set('R_uc2', '1/(ha_1(uc2_h)+hr(uc2_h,uc2_w,ave_uc2(T4),epsilon,epsilon))', 'Thermal resistance of the second unventilated cavity');
model.variable('var4').set('R_uc3', '1/(ha_2(uc3_h,max_uc3(T4)-min_uc3(T4))+hr(uc3_h,uc3_w,ave_uc3(T4),epsilon,epsilon))', 'Thermal resistance of the third unventilated cavity');
model.variable('var4').set('R_svc1', '1/(ha_1(svc1_h)+hr(svc1_h,svc1_w,ave_svc1(T4),epsilon,epsilon))', 'Thermal resistance of the first slightly ventilated cavity');
model.variable('var4').set('R_svc2', '1/(ha_2(svc2_h2,max_svc2(T4)-min_svc2(T4))+hr(svc2_h,svc2_w,ave_svc2(T4),epsilon,epsilon))', 'Thermal resistance of the second slightly ventilated cavity');
model.variable('var4').set('R_svc3', '1/(ha_2(svc3_h2,max_svc3(T4)-min_svc3(T4))+hr(svc3_h,svc3_w,ave_svc3(T4),epsilon,epsilon))', 'Thermal resistance of the third slightly ventilated cavity');
model.variable('var4').set('R_svc4', '1/(ha_1(svc4_h)+hr(svc4_h,svc4_w,ave_svc4(T4),epsilon,epsilon))', 'Thermal resistance of the fourth slightly ventilated cavity');
model.variable('var4').set('Rp', 'f_hr3/lambda_p', 'Thermal resistance of the central area of the panel');
model.variable('var4').set('Up_n', '1/(Rsi_n+Rse+Rp)', 'Thermal transmittance of the panel (normal)');
model.variable('var4').set('Up_p', '1/(Rsi_p+Rse+Rp)', 'Thermal transmittance of the panel (protected)');
model.variable('var4').set('Up', '(30[mm]*Up_p+(pvl-30[mm])*Up_n)/pvl', 'Thermal transmittance of the panel');

model.material.create('mat42', 'Common', 'comp4');
model.material('mat42').label('Soft Wood');
model.material('mat42').selection.set([5 9]);
model.material('mat42').propertyGroup('def').set('thermalconductivity', {'0.13'});
model.material('mat42').propertyGroup('def').set('density', {'500'});
model.material('mat42').propertyGroup('def').set('heatcapacity', {'1600'});
model.material.create('mat43', 'Common', 'comp4');
model.material('mat43').label('EPDM');
model.material('mat43').selection.set([8 11 16 18]);
model.material('mat43').propertyGroup('def').set('thermalconductivity', {'0.25'});
model.material('mat43').propertyGroup('def').set('density', {'1150'});
model.material('mat43').propertyGroup('def').set('heatcapacity', {'1000'});
model.material.create('mat44', 'Common', 'comp4');
model.material('mat44').label('Insulation Panel');
model.material('mat44').selection.set([17]);
model.material('mat44').propertyGroup('def').set('thermalconductivity', {'lambda_p'});
model.material('mat44').propertyGroup('def').set('density', {'50'});
model.material('mat44').propertyGroup('def').set('heatcapacity', {'1030'});
model.material.create('mat45', 'Common', 'comp4');
model.material('mat45').label('Aluminum');
model.material('mat45').selection.set([1 3 6 14]);
model.material('mat45').propertyGroup('def').set('thermalconductivity', {'160'});
model.material('mat45').propertyGroup('def').set('density', {'2800'});
model.material('mat45').propertyGroup('def').set('heatcapacity', {'880'});
model.material.create('mat46', 'Common', 'comp4');
model.material('mat46').label('Unventilated Cavity 1');
model.material('mat46').selection.set([2]);
model.material('mat46').propertyGroup('def').set('thermalconductivity', {'uc1_h2/R_uc1'});
model.material('mat46').propertyGroup('def').set('density', {'1.23'});
model.material('mat46').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat47', 'Common', 'comp4');
model.material('mat47').label('Unventilated Cavity 2');
model.material('mat47').selection.set([10]);
model.material('mat47').propertyGroup('def').set('thermalconductivity', {'uc2_h/R_uc2'});
model.material('mat47').propertyGroup('def').set('density', {'1.23'});
model.material('mat47').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat48', 'Common', 'comp4');
model.material('mat48').label('Unventilated Cavity 3');
model.material('mat48').selection.set([15]);
model.material('mat48').propertyGroup('def').set('thermalconductivity', {'uc3_h/R_uc3'});
model.material('mat48').propertyGroup('def').set('density', {'1.23'});
model.material('mat48').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat49', 'Common', 'comp4');
model.material('mat49').label('Slightly Ventilated Cavity 1');
model.material('mat49').selection.set([12]);
model.material('mat49').propertyGroup('def').set('thermalconductivity', {'2*svc1_h/R_svc1'});
model.material('mat49').propertyGroup('def').set('density', {'1.23'});
model.material('mat49').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat50', 'Common', 'comp4');
model.material('mat50').label('Slightly Ventilated Cavity 2');
model.material('mat50').selection.set([7]);
model.material('mat50').propertyGroup('def').set('thermalconductivity', {'2*svc2_h2/R_svc2'});
model.material('mat50').propertyGroup('def').set('density', {'1.23'});
model.material('mat50').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat51', 'Common', 'comp4');
model.material('mat51').label('Slightly Ventilated Cavity 3');
model.material('mat51').selection.set([13]);
model.material('mat51').propertyGroup('def').set('thermalconductivity', {'2*svc3_h2/R_svc3'});
model.material('mat51').propertyGroup('def').set('density', {'1.23'});
model.material('mat51').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat52', 'Common', 'comp4');
model.material('mat52').label('Slightly Ventilated Cavity 4');
model.material('mat52').selection.set([4]);
model.material('mat52').propertyGroup('def').set('thermalconductivity', {'2*svc4_h/R_svc4'});
model.material('mat52').propertyGroup('def').set('density', {'1.23'});
model.material('mat52').propertyGroup('def').set('heatcapacity', {'1008'});

model.study.create('std4');
model.study('std4').create('stat', 'Stationary');
model.study('std4').feature('stat').setSolveFor('/physics/ht', false);
model.study('std4').feature('stat').setSolveFor('/physics/ht2', false);
model.study('std4').feature('stat').setSolveFor('/physics/ht3', false);
model.study('std4').feature('stat').setSolveFor('/physics/ht4', true);

model.sol.create('sol4');
model.sol('sol4').study('std4');
model.sol('sol4').create('st1', 'StudyStep');
model.sol('sol4').feature('st1').set('study', 'std4');
model.sol('sol4').feature('st1').set('studystep', 'stat');
model.sol('sol4').create('v1', 'Variables');
model.sol('sol4').feature('v1').set('control', 'stat');
model.sol('sol4').create('s1', 'Stationary');
model.sol('sol4').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol4').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol4').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol4').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol4').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol4').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol4').feature('s1').create('d1', 'Direct');
model.sol('sol4').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('s1').feature('d1').label('Direct, heat transfer variables (ht4)');
model.sol('sol4').feature('s1').create('i1', 'Iterative');
model.sol('sol4').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol4').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol4').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol4').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol4').feature('s1').feature('i1').set('maxlinit', 10000);
model.sol('sol4').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol4').feature('s1').feature('i1').label('AMG, heat transfer variables (ht4)');
model.sol('sol4').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol4').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol4').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol4').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol4').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol4').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol4').feature('s1').feature.remove('fcDef');
model.sol('sol4').attach('std4');
model.sol('sol4').feature('s1').set('stol', '1e-6');

model.modelNode.create('comp5', true);

model.geom.create('geom5', 2);
model.geom('geom5').model('comp5');

model.mesh.create('mesh5', 'geom5');

model.modelNode('comp5').label('Fifth Window');

model.physics.create('ht5', 'HeatTransferInSolidsAndFluids', 'geom5');
model.physics('ht5').model('comp5');

model.study('std1').feature('stat').setSolveFor('/physics/ht5', false);
model.study('std2').feature('stat').setSolveFor('/physics/ht5', false);
model.study('std3').feature('stat').setSolveFor('/physics/ht5', false);
model.study('std4').feature('stat').setSolveFor('/physics/ht5', false);

model.geom('geom5').run;
model.geom('geom5').create('imp1', 'Import');
model.geom('geom5').feature('imp1').set('filename', 'windows_thermal_performances_fifth_window.mphbin');
model.geom('geom5').feature('imp1').importData;
model.geom('geom5').run('fin');
model.geom('geom5').create('ige1', 'IgnoreEdges');
model.geom('geom5').feature('ige1').set('ignorevtx', false);
model.geom('geom5').feature('ige1').selection('input').set('fin', [15 25 27 57 59 63 89 154]);
model.geom('geom5').run('ige1');
model.geom('geom5').create('igv1', 'IgnoreVertices');
model.geom('geom5').feature('igv1').selection('input').set('ige1', [3 11 16 19 49 56 60 76 100 103 123 126]);
model.geom('geom5').run('igv1');

model.selection.create('sel53', 'Explicit');
model.selection('sel53').model('comp5');
model.selection('sel53').label('Unventilated Cavity 1');
model.selection('sel53').geom(1);
model.selection('sel53').set([3 4 6 8 9 10 11 12 13 14 17 30]);
model.selection.create('sel54', 'Explicit');
model.selection('sel54').model('comp5');
model.selection('sel54').label('Unventilated Cavity 2');
model.selection('sel54').geom(1);
model.selection('sel54').set([23 24 26 27 29 31 32 33 37 38 44 45 46 47 53]);
model.selection.create('sel55', 'Explicit');
model.selection('sel55').model('comp5');
model.selection('sel55').label('Unventilated Cavity 3');
model.selection('sel55').geom(1);
model.selection('sel55').set([34 35 36 61 62 63 66 67 68 69 70 71 72 73 80 84 101 102 106 107 108 109 110 111 114 117 123]);
model.selection.create('sel56', 'Explicit');
model.selection('sel56').model('comp5');
model.selection('sel56').label('Unventilated Cavity 4');
model.selection('sel56').geom(1);
model.selection('sel56').set([119 120 122 124 125 126 127 128]);
model.selection.create('sel57', 'Explicit');
model.selection('sel57').model('comp5');
model.selection('sel57').label('Unventilated Cavity 5');
model.selection('sel57').geom(1);
model.selection('sel57').set([94 95 96]);
model.selection.create('sel58', 'Explicit');
model.selection('sel58').model('comp5');
model.selection('sel58').label('Unventilated Cavity 6');
model.selection('sel58').geom(1);
model.selection('sel58').set([90 91 92]);
model.selection.create('sel59', 'Explicit');
model.selection('sel59').model('comp5');
model.selection('sel59').label('Slightly Ventilated Cavity');
model.selection('sel59').geom(1);
model.selection('sel59').set([58 60 64 65 74]);
model.selection.create('sel60', 'Explicit');
model.selection('sel60').model('comp5');
model.selection('sel60').label('Exterior Side');
model.selection('sel60').geom(1);
model.selection('sel60').set([2 20 21 22 39 40 41 49 50 56 57 59 75 86 88 97 98 99 100 134 135 136]);
model.selection.create('sel61', 'Explicit');
model.selection('sel61').model('comp5');
model.selection('sel61').label('Interior Side (Flat Area)');
model.selection('sel61').geom(1);
model.selection('sel61').set([7 103 104 105 140]);
model.selection.create('sel62', 'Explicit');
model.selection('sel62').model('comp5');
model.selection('sel62').label('Interior Side (Corner Area)');
model.selection('sel62').geom(1);
model.selection('sel62').set([137 138 139]);
model.selection.create('sel63', 'Explicit');
model.selection('sel63').model('comp5');
model.selection('sel63').label('Interior Side');
model.selection('sel63').geom(1);
model.selection('sel63').set([7 103 104 105 137 138 139 140]);

model.cpl.create('maxop34', 'Maximum', 'geom5');
model.cpl('maxop34').set('opname', 'max_uc1');
model.cpl('maxop34').selection.set([2]);
model.cpl.create('minop34', 'Minimum', 'geom5');
model.cpl('minop34').set('opname', 'min_uc1');
model.cpl('minop34').selection.set([2]);
model.cpl.create('aveop37', 'Average', 'geom5');
model.cpl('aveop37').set('axisym', true);
model.cpl('aveop37').set('opname', 'ave_uc1');
model.cpl('aveop37').selection.geom('geom5', 1);
model.cpl('aveop37').selection.named('sel53');
model.cpl.create('intop21', 'Integration', 'geom5');
model.cpl('intop21').set('axisym', true);
model.cpl('intop21').set('opname', 'int_uc1');
model.cpl('intop21').selection.set([2]);
model.cpl.create('maxop35', 'Maximum', 'geom5');
model.cpl('maxop35').set('opname', 'max_uc2');
model.cpl('maxop35').selection.set([5]);
model.cpl.create('minop35', 'Minimum', 'geom5');
model.cpl('minop35').set('opname', 'min_uc2');
model.cpl('minop35').selection.set([5]);
model.cpl.create('aveop38', 'Average', 'geom5');
model.cpl('aveop38').set('axisym', true);
model.cpl('aveop38').set('opname', 'ave_uc2');
model.cpl('aveop38').selection.geom('geom5', 1);
model.cpl('aveop38').selection.named('sel54');
model.cpl.create('intop22', 'Integration', 'geom5');
model.cpl('intop22').set('axisym', true);
model.cpl('intop22').set('opname', 'int_uc2');
model.cpl('intop22').selection.set([5]);
model.cpl.create('maxop36', 'Maximum', 'geom5');
model.cpl('maxop36').set('opname', 'max_uc3');
model.cpl('maxop36').selection.set([6]);
model.cpl.create('minop36', 'Minimum', 'geom5');
model.cpl('minop36').set('opname', 'min_uc3');
model.cpl('minop36').selection.set([6]);
model.cpl.create('aveop39', 'Average', 'geom5');
model.cpl('aveop39').set('axisym', true);
model.cpl('aveop39').set('opname', 'ave_uc3');
model.cpl('aveop39').selection.geom('geom5', 1);
model.cpl('aveop39').selection.named('sel55');
model.cpl.create('intop23', 'Integration', 'geom5');
model.cpl('intop23').set('axisym', true);
model.cpl('intop23').set('opname', 'int_uc3');
model.cpl('intop23').selection.set([6]);
model.cpl.create('aveop40', 'Average', 'geom5');
model.cpl('aveop40').set('axisym', true);
model.cpl('aveop40').set('opname', 'ave_uc4');
model.cpl('aveop40').selection.geom('geom5', 1);
model.cpl('aveop40').selection.named('sel56');
model.cpl.create('intop24', 'Integration', 'geom5');
model.cpl('intop24').set('axisym', true);
model.cpl('intop24').set('opname', 'int_uc4');
model.cpl('intop24').selection.set([17]);
model.cpl.create('aveop41', 'Average', 'geom5');
model.cpl('aveop41').set('axisym', true);
model.cpl('aveop41').set('opname', 'ave_uc5');
model.cpl('aveop41').selection.geom('geom5', 1);
model.cpl('aveop41').selection.named('sel57');
model.cpl.create('aveop42', 'Average', 'geom5');
model.cpl('aveop42').set('axisym', true);
model.cpl('aveop42').set('opname', 'ave_uc6');
model.cpl('aveop42').selection.geom('geom5', 1);
model.cpl('aveop42').selection.named('sel58');
model.cpl.create('aveop43', 'Average', 'geom5');
model.cpl('aveop43').set('axisym', true);
model.cpl('aveop43').set('opname', 'ave_svc');
model.cpl('aveop43').selection.geom('geom5', 1);
model.cpl('aveop43').selection.named('sel59');
model.cpl.create('intop25', 'Integration', 'geom5');
model.cpl('intop25').set('axisym', true);
model.cpl('intop25').set('opname', 'int_svc');
model.cpl('intop25').selection.set([8]);
model.cpl.create('intop26', 'Integration', 'geom5');
model.cpl('intop26').set('axisym', true);
model.cpl('intop26').set('opname', 'int_internal');
model.cpl('intop26').selection.geom('geom5', 1);
model.cpl('intop26').selection.named('sel63');

model.variable.create('var5');
model.variable('var5').model('comp5');

% To import content from file, use:
% model.variable('var5').loadFile('FILENAME');
model.variable('var5').set('f_htot', '85[mm]', 'Total height of the frame');
model.variable('var5').set('f_hl1', '46[mm]', 'Height of the first left part of the frame');
model.variable('var5').set('f_hl2', '6[mm]', 'Height of the second left part of the frame');
model.variable('var5').set('f_hl3', '33[mm]', 'Height of the third left part of the frame');
model.variable('var5').set('f_hr1', '48[mm]', 'Height of the first right part of the frame');
model.variable('var5').set('f_hr2', '4[mm]', 'Height of the second right part of the frame');
model.variable('var5').set('f_hr3', '25[mm]', 'Height of the third right part of the frame (insulation panel height)');
model.variable('var5').set('f_hr4', '4[mm]', 'Height of the fourth right part of the frame');
model.variable('var5').set('f_hr5', '4[mm]', 'Height of the fifth right part of the frame');
model.variable('var5').set('f_wtot', '95[mm]', 'Total width of the frame');
model.variable('var5').set('f_wt1', '43[mm]', 'Width of the first top part of the frame');
model.variable('var5').set('f_wt2', '52[mm]', 'Width of the second top right part of the frame');
model.variable('var5').set('f_wb1', '7[mm]', 'Width of the first bottom part of the frame');
model.variable('var5').set('f_wb2', '15[mm]', 'Width of the second bottom part of the frame');
model.variable('var5').set('f_wb3', '21[mm]', 'Width of the third bottom part of the frame');
model.variable('var5').set('f_wb4', '52[mm]', 'Width of the fourth bottom part of the frame');
model.variable('var5').set('uc1_h', '81[mm]', 'Height of the first unventilated cavity');
model.variable('var5').set('uc1_w', '13[mm]', 'Width of the first unventilated cavity');
model.variable('var5').set('uc2_h', '45[mm]', 'Height of the second unventilated cavity');
model.variable('var5').set('uc2_w', '14[mm]', 'Width of the second unventilated cavity');
model.variable('var5').set('uc3_h', '33[mm]', 'Height of the third unventilated cavity');
model.variable('var5').set('uc3_w', '58[mm]', 'Width of the third unventilated cavity');
model.variable('var5').set('uc4_h', '29[mm]', 'Height of the fourth unventilated cavity');
model.variable('var5').set('uc4_w', '4[mm]', 'Width of the fourth unventilated cavity');
model.variable('var5').set('uc5_h', '2[mm]', 'Height of the fifth unventilated cavity');
model.variable('var5').set('uc5_w', '2[mm]', 'Width of the fifth unventilated cavity');
model.variable('var5').set('uc6_h', '2[mm]', 'Height of the sixth unventilated cavity');
model.variable('var5').set('uc6_w', '2[mm]', 'Width of the sixth unventilated cavity');
model.variable('var5').set('svc_h', '6[mm]', 'Height of the slightly ventilated cavity');
model.variable('var5').set('svc_w', '6[mm]', 'Width of the slightly ventilated cavity');
model.variable('var5').set('wvc_h', '15[mm]', 'Height of the well ventilated cavity');
model.variable('var5').set('wvc_w', '17[mm]', 'Width of the well ventilated cavity');
model.variable('var5').set('pu1_h', '10[mm]', 'Height of the first polyurethane (pu) block');
model.variable('var5').set('pu1_w', '8[mm]', 'Width of the first polyurethane (pu) block');
model.variable('var5').set('pu2_h', '13[mm]', 'Height of the second polyurethane (pu) block');
model.variable('var5').set('pu2_w', '9[mm]', 'Width of the second polyurethane (pu) block');
model.variable('var5').set('pws_h', '4[mm]', 'Height of pile weather stripping blocks');
model.variable('var5').set('pws_w', '8[mm]', 'Height of pile weather stripping blocks');
model.variable('var5').set('p_h1', '11[mm]', 'First height of the polyamide block');
model.variable('var5').set('p_h2', '33[mm]', 'Second height of the polyamide block');
model.variable('var5').set('p_w1', '2[mm]', 'First width of the polyamide block');
model.variable('var5').set('p_w2', '3[mm]', 'Second width of the polyamide block');
model.variable('var5').set('pp', '15[mm]', 'Insulation panel penetration');
model.variable('var5').set('pvl', '190[mm]', 'Panel visible length');
model.variable('var5').set('a_t', '2[mm]', 'Aluminum thickness');
model.variable('var5').set('a_w1', '4[mm]', 'First length of aluminum wedges');
model.variable('var5').set('a_w2', '12[mm]', 'Second length for aluminum wedges');
model.variable('var5').set('epdm_w', '3[mm]', 'Width of the EPDM block');
model.variable('var5').set('sp1', '3[mm]', 'Useful space');
model.variable('var5').set('sp2', '4[mm]', 'Useful space');
model.variable('var5').set('sp3', '5[mm]', 'Useful space');
model.variable('var5').set('sp4', '7[mm]', 'Useful space');
model.variable('var5').set('A_uc1', 'int_uc1(1)', 'Area of the first unventilated cavity');
model.variable('var5').set('A_uc2', 'int_uc2(1)', 'Area of the second unventilated cavity');
model.variable('var5').set('A_uc3', 'int_uc3(1)', 'Area of the third unventilated cavity');
model.variable('var5').set('A_uc4', 'int_uc4(1)', 'Area of the fourth unventilated cavity');
model.variable('var5').set('A_svc', 'int_svc(1)', 'Area of the slightly ventilated cavity');
model.variable('var5').set('uc1_h2', 'h_resized(A_uc1,uc1_h,uc1_w)', 'Equivalent height for the first unventilated cavity');
model.variable('var5').set('uc2_h2', 'h_resized(A_uc2,uc2_h,uc2_w)', 'Equivalent height of the second unventilated cavity');
model.variable('var5').set('uc3_h2', 'h_resized(A_uc3,uc3_h,uc3_w)', 'Equivalent height for the third unventilated cavity');
model.variable('var5').set('uc4_h2', 'h_resized(A_uc4,uc4_h,uc4_w)', 'Equivalent height for the fourth unventilated cavity');
model.variable('var5').set('svc_h2', 'h_resized(A_svc,svc_h,svc_w)', 'Equivalent height for the slightly ventilated cavity');
model.variable('var5').set('R_uc1', '1/(ha_2(uc1_h2,max_uc1(T5)-min_uc1(T5))+hr(uc1_h,uc1_w,ave_uc1(T5),epsilon,epsilon))', 'Thermal resistance of the first unventilated cavity');
model.variable('var5').set('R_uc2', '1/(ha_2(uc2_h2,max_uc2(T5)-min_uc2(T5))+hr(uc2_h,uc2_w,ave_uc2(T5),epsilon,epsilon))', 'Thermal resistance of the second unventilated cavity');
model.variable('var5').set('R_uc3', '1/(ha_2(uc3_h2,max_uc3(T5)-min_uc3(T5))+hr(uc3_h,uc3_w,ave_uc3(T5),epsilon,epsilon))', 'Thermal resistance of the third unventilated cavity');
model.variable('var5').set('R_uc4', '1/(ha_1(uc4_h2)+hr(uc4_h,uc4_w,ave_uc4(T5),epsilon,epsilon))', 'Thermal resistance of the fourth unventilated cavity');
model.variable('var5').set('R_uc5', '1/(ha_1(uc5_h)+hr(uc5_h,uc5_w,ave_uc5(T5),epsilon,epsilon))', 'Thermal resistance of the fifth unventilated cavity');
model.variable('var5').set('R_uc6', '1/(ha_1(uc6_h)+hr(uc6_h,uc6_w,ave_uc6(T5),epsilon,epsilon))', 'Thermal resistance of the sixth unventilated cavity');
model.variable('var5').set('R_svc', '1/(ha_1(svc_h2)+hr(svc_h,svc_w,ave_svc(T5),epsilon,epsilon))', 'Thermal resistance of the slightly ventilated cavity');
model.variable('var5').set('Rp', 'f_hr3/lambda_p', 'Thermal resistance of the central area of the panel');
model.variable('var5').set('Up_n', '1/(Rse+Rp+Rsi_n)', 'Thermal transmittance of the insulation panel (normal)');
model.variable('var5').set('Up_p', '1/(Rse+Rp+Rsi_p)', 'Thermal transmittance of the insulation panel (protected)');
model.variable('var5').set('Up', '(Up_p*f_hr4+Up_n*(pvl-f_hr4))/pvl', 'Thermal transmittance of the insulation panel');

model.material.create('mat53', 'Common', 'comp5');
model.material('mat53').label('Aluminum');
model.material('mat53').selection.set([1 3 9 10]);
model.material('mat53').propertyGroup('def').set('thermalconductivity', {'160'});
model.material('mat53').propertyGroup('def').set('density', {'2800'});
model.material('mat53').propertyGroup('def').set('heatcapacity', {'880'});
model.material.create('mat54', 'Common', 'comp5');
model.material('mat54').label('EPDM');
model.material('mat54').selection.set([18]);
model.material('mat54').propertyGroup('def').set('thermalconductivity', {'0.25'});
model.material('mat54').propertyGroup('def').set('density', {'1150'});
model.material('mat54').propertyGroup('def').set('heatcapacity', {'1000'});
model.material.create('mat55', 'Common', 'comp5');
model.material('mat55').label('Insulation Panel');
model.material('mat55').selection.set([19]);
model.material('mat55').propertyGroup('def').set('thermalconductivity', {'lambda_p'});
model.material('mat55').propertyGroup('def').set('density', {'50'});
model.material('mat55').propertyGroup('def').set('heatcapacity', {'1030'});
model.material.create('mat56', 'Common', 'comp5');
model.material('mat56').label('Pile Weather Stripping (polyester mohair)');
model.material('mat56').selection.set([11 12 13]);
model.material('mat56').propertyGroup('def').set('thermalconductivity', {'0.14'});
model.material('mat56').propertyGroup('def').set('density', {'1380'});
model.material('mat56').propertyGroup('def').set('heatcapacity', {'1000'});
model.material.create('mat57', 'Common', 'comp5');
model.material('mat57').label('Polyamide');
model.material('mat57').selection.set([7]);
model.material('mat57').propertyGroup('def').set('thermalconductivity', {'0.25'});
model.material('mat57').propertyGroup('def').set('density', {'1150'});
model.material('mat57').propertyGroup('def').set('heatcapacity', {'1600'});
model.material.create('mat58', 'Common', 'comp5');
model.material('mat58').label('Polyurethane, rigid');
model.material('mat58').selection.set([4 16]);
model.material('mat58').propertyGroup('def').set('thermalconductivity', {'0.25'});
model.material('mat58').propertyGroup('def').set('density', {'1200'});
model.material('mat58').propertyGroup('def').set('heatcapacity', {'1800'});
model.material.create('mat59', 'Common', 'comp5');
model.material('mat59').label('Unventilated Cavity 1');
model.material('mat59').selection.set([2]);
model.material('mat59').propertyGroup('def').set('thermalconductivity', {'uc1_h2/R_uc1'});
model.material('mat59').propertyGroup('def').set('density', {'1.23'});
model.material('mat59').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat60', 'Common', 'comp5');
model.material('mat60').label('Unventilated Cavity 2');
model.material('mat60').selection.set([5]);
model.material('mat60').propertyGroup('def').set('thermalconductivity', {'uc2_h2/R_uc2'});
model.material('mat60').propertyGroup('def').set('density', {'1.23'});
model.material('mat60').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat61', 'Common', 'comp5');
model.material('mat61').label('Unventilated Cavity 3');
model.material('mat61').selection.set([6]);
model.material('mat61').propertyGroup('def').set('thermalconductivity', {'uc3_h2/R_uc3'});
model.material('mat61').propertyGroup('def').set('density', {'1.23'});
model.material('mat61').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat62', 'Common', 'comp5');
model.material('mat62').label('Unventilated Cavity 4');
model.material('mat62').selection.set([17]);
model.material('mat62').propertyGroup('def').set('thermalconductivity', {'uc4_h2/R_uc4'});
model.material('mat62').propertyGroup('def').set('density', {'1.23'});
model.material('mat62').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat63', 'Common', 'comp5');
model.material('mat63').label('Unventilated Cavity 5');
model.material('mat63').selection.set([15]);
model.material('mat63').propertyGroup('def').set('thermalconductivity', {'uc5_h/R_uc5'});
model.material('mat63').propertyGroup('def').set('density', {'1.23'});
model.material('mat63').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat64', 'Common', 'comp5');
model.material('mat64').label('Unventilated Cavity 6');
model.material('mat64').selection.set([14]);
model.material('mat64').propertyGroup('def').set('thermalconductivity', {'uc6_h/R_uc6'});
model.material('mat64').propertyGroup('def').set('density', {'1.23'});
model.material('mat64').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat65', 'Common', 'comp5');
model.material('mat65').label('Slightly Ventilated Cavity');
model.material('mat65').selection.set([8]);
model.material('mat65').propertyGroup('def').set('thermalconductivity', {'2*svc_h2/R_svc'});
model.material('mat65').propertyGroup('def').set('density', {'1.23'});
model.material('mat65').propertyGroup('def').set('heatcapacity', {'1008'});

model.study.create('std5');
model.study('std5').create('stat', 'Stationary');
model.study('std5').feature('stat').setSolveFor('/physics/ht', false);
model.study('std5').feature('stat').setSolveFor('/physics/ht2', false);
model.study('std5').feature('stat').setSolveFor('/physics/ht3', false);
model.study('std5').feature('stat').setSolveFor('/physics/ht4', false);
model.study('std5').feature('stat').setSolveFor('/physics/ht5', true);

model.sol.create('sol5');
model.sol('sol5').study('std5');
model.sol('sol5').create('st1', 'StudyStep');
model.sol('sol5').feature('st1').set('study', 'std5');
model.sol('sol5').feature('st1').set('studystep', 'stat');
model.sol('sol5').create('v1', 'Variables');
model.sol('sol5').feature('v1').set('control', 'stat');
model.sol('sol5').create('s1', 'Stationary');
model.sol('sol5').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol5').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol5').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol5').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol5').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol5').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol5').feature('s1').create('d1', 'Direct');
model.sol('sol5').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s1').feature('d1').label('Direct, heat transfer variables (ht5)');
model.sol('sol5').feature('s1').create('i1', 'Iterative');
model.sol('sol5').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol5').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol5').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol5').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol5').feature('s1').feature('i1').set('maxlinit', 10000);
model.sol('sol5').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol5').feature('s1').feature('i1').label('AMG, heat transfer variables (ht5)');
model.sol('sol5').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol5').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol5').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol5').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol5').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol5').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol5').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol5').feature('s1').feature.remove('fcDef');
model.sol('sol5').attach('std5');
model.sol('sol5').feature('s1').set('stol', '1e-6');

model.modelNode.create('comp6', true);

model.geom.create('geom6', 2);
model.geom('geom6').model('comp6');

model.mesh.create('mesh6', 'geom6');

model.modelNode('comp6').label('Sixth Window');

model.physics.create('ht6', 'HeatTransferInSolidsAndFluids', 'geom6');
model.physics('ht6').model('comp6');

model.study('std1').feature('stat').setSolveFor('/physics/ht6', false);
model.study('std2').feature('stat').setSolveFor('/physics/ht6', false);
model.study('std3').feature('stat').setSolveFor('/physics/ht6', false);
model.study('std4').feature('stat').setSolveFor('/physics/ht6', false);
model.study('std5').feature('stat').setSolveFor('/physics/ht6', false);

model.geom('geom6').run;
model.geom('geom6').create('imp1', 'Import');
model.geom('geom6').feature('imp1').set('filename', 'windows_thermal_performances_sixth_window.mphbin');
model.geom('geom6').feature('imp1').importData;
model.geom('geom6').run('fin');
model.geom('geom6').create('ige1', 'IgnoreEdges');
model.geom('geom6').feature('ige1').set('ignorevtx', false);
model.geom('geom6').feature('ige1').selection('input').set('fin', 78);
model.geom('geom6').run('ige1');
model.geom('geom6').create('igv1', 'IgnoreVertices');
model.geom('geom6').feature('igv1').selection('input').set('ige1', [11 13 20 21 25 29 45 48 52 54 57 64 67]);
model.geom('geom6').run('igv1');

model.selection.create('sel64', 'Explicit');
model.selection('sel64').model('comp6');
model.selection('sel64').label('Unventilated Cavity 1');
model.selection('sel64').geom(1);
model.selection('sel64').set([13 14 15 23 24 41]);
model.selection.create('sel65', 'Explicit');
model.selection('sel65').model('comp6');
model.selection('sel65').label('Unventilated Cavity 2');
model.selection('sel65').geom(1);
model.selection('sel65').set([26 27 28 33 35 39]);
model.selection.create('sel66', 'Explicit');
model.selection('sel66').model('comp6');
model.selection('sel66').label('Unventilated Cavity 3');
model.selection('sel66').geom(1);
model.selection('sel66').set([51 52 53 62]);
model.selection.create('sel67', 'Explicit');
model.selection('sel67').model('comp6');
model.selection('sel67').label('Unventilated Cavity 4');
model.selection('sel67').geom(1);
model.selection('sel67').set([10 11 12 31 32 38]);
model.selection.create('sel68', 'Explicit');
model.selection('sel68').model('comp6');
model.selection('sel68').label('Unventilated Cavity 5');
model.selection('sel68').geom(1);
model.selection('sel68').set([44 45 47 54 56 58]);
model.selection.create('sel69', 'Explicit');
model.selection('sel69').model('comp6');
model.selection('sel69').label('Unventilated Cavity 6');
model.selection('sel69').geom(1);
model.selection('sel69').set([7 8 9 21 25]);
model.selection.create('sel70', 'Explicit');
model.selection('sel70').model('comp6');
model.selection('sel70').label('Unventilated Cavity 7');
model.selection('sel70').geom(1);
model.selection('sel70').set([18 19 20 22 29 30 36 37 42]);
model.selection.create('sel71', 'Explicit');
model.selection('sel71').model('comp6');
model.selection('sel71').label('Slightly Ventilated Cavity');
model.selection('sel71').geom(1);
model.selection('sel71').set([4 6 16]);
model.selection.create('sel72', 'Explicit');
model.selection('sel72').model('comp6');
model.selection('sel72').label('Exterior Side');
model.selection('sel72').geom(1);
model.selection('sel72').set([2 5 17 43 63 64 65]);
model.selection.create('sel73', 'Explicit');
model.selection('sel73').model('comp6');
model.selection('sel73').label('Interior Side (Flat Area)');
model.selection('sel73').geom(1);
model.selection('sel73').set([3 61 69]);
model.selection.create('sel74', 'Explicit');
model.selection('sel74').model('comp6');
model.selection('sel74').label('Internal (Corner Area)');
model.selection('sel74').geom(1);
model.selection('sel74').set([49 50 66 67 68]);
model.selection.create('sel75', 'Explicit');
model.selection('sel75').model('comp6');
model.selection('sel75').label('Interior Side');
model.selection('sel75').geom(1);
model.selection('sel75').set([3 49 50 61 66 67 68 69]);

model.cpl.create('maxop37', 'Maximum', 'geom6');
model.cpl('maxop37').set('opname', 'max_uc1');
model.cpl('maxop37').selection.set([5]);
model.cpl.create('minop37', 'Minimum', 'geom6');
model.cpl('minop37').set('opname', 'min_uc1');
model.cpl('minop37').selection.set([5]);
model.cpl.create('aveop44', 'Average', 'geom6');
model.cpl('aveop44').set('axisym', true);
model.cpl('aveop44').set('opname', 'ave_uc1');
model.cpl('aveop44').selection.geom('geom6', 1);
model.cpl('aveop44').selection.named('sel64');
model.cpl.create('intop27', 'Integration', 'geom6');
model.cpl('intop27').set('axisym', true);
model.cpl('intop27').set('opname', 'int_uc1');
model.cpl('intop27').selection.set([5]);
model.cpl.create('maxop38', 'Maximum', 'geom6');
model.cpl('maxop38').set('opname', 'max_uc2');
model.cpl('maxop38').selection.set([7]);
model.cpl.create('minop38', 'Minimum', 'geom6');
model.cpl('minop38').set('opname', 'min_uc2');
model.cpl('minop38').selection.set([7]);
model.cpl.create('aveop45', 'Average', 'geom6');
model.cpl('aveop45').set('axisym', true);
model.cpl('aveop45').set('opname', 'ave_uc2');
model.cpl('aveop45').selection.geom('geom6', 1);
model.cpl('aveop45').selection.named('sel65');
model.cpl.create('intop28', 'Integration', 'geom6');
model.cpl('intop28').set('axisym', true);
model.cpl('intop28').set('opname', 'int_uc2');
model.cpl('intop28').selection.set([7]);
model.cpl.create('maxop39', 'Maximum', 'geom6');
model.cpl('maxop39').set('opname', 'max_uc3');
model.cpl('maxop39').selection.set([10]);
model.cpl.create('minop39', 'Minimum', 'geom6');
model.cpl('minop39').set('opname', 'min_uc3');
model.cpl('minop39').selection.set([10]);
model.cpl.create('aveop46', 'Average', 'geom6');
model.cpl('aveop46').set('axisym', true);
model.cpl('aveop46').set('opname', 'ave_uc3');
model.cpl('aveop46').selection.geom('geom6', 1);
model.cpl('aveop46').selection.named('sel66');
model.cpl.create('maxop40', 'Maximum', 'geom6');
model.cpl('maxop40').set('opname', 'max_uc4');
model.cpl('maxop40').selection.set([4]);
model.cpl.create('minop40', 'Minimum', 'geom6');
model.cpl('minop40').set('opname', 'min_uc4');
model.cpl('minop40').selection.set([4]);
model.cpl.create('aveop47', 'Average', 'geom6');
model.cpl('aveop47').set('axisym', true);
model.cpl('aveop47').set('opname', 'ave_uc4');
model.cpl('aveop47').selection.geom('geom6', 1);
model.cpl('aveop47').selection.named('sel67');
model.cpl.create('intop29', 'Integration', 'geom6');
model.cpl('intop29').set('axisym', true);
model.cpl('intop29').set('opname', 'int_uc4');
model.cpl('intop29').selection.set([4]);
model.cpl.create('maxop41', 'Maximum', 'geom6');
model.cpl('maxop41').set('opname', 'max_uc5');
model.cpl('maxop41').selection.set([9]);
model.cpl.create('minop41', 'Minimum', 'geom6');
model.cpl('minop41').set('opname', 'min_uc5');
model.cpl('minop41').selection.set([9]);
model.cpl.create('aveop48', 'Average', 'geom6');
model.cpl('aveop48').set('axisym', true);
model.cpl('aveop48').set('opname', 'ave_uc5');
model.cpl('aveop48').selection.geom('geom6', 1);
model.cpl('aveop48').selection.named('sel68');
model.cpl.create('maxop42', 'Maximum', 'geom6');
model.cpl('maxop42').set('opname', 'max_uc6');
model.cpl('maxop42').selection.set([3]);
model.cpl.create('minop42', 'Minimum', 'geom6');
model.cpl('minop42').set('opname', 'min_uc6');
model.cpl('minop42').selection.set([3]);
model.cpl.create('aveop49', 'Average', 'geom6');
model.cpl('aveop49').set('axisym', true);
model.cpl('aveop49').set('opname', 'ave_uc6');
model.cpl('aveop49').selection.geom('geom6', 1);
model.cpl('aveop49').selection.named('sel69');
model.cpl.create('intop30', 'Integration', 'geom6');
model.cpl('intop30').set('axisym', true);
model.cpl('intop30').set('opname', 'int_uc6');
model.cpl('intop30').selection.set([3]);
model.cpl.create('maxop43', 'Maximum', 'geom6');
model.cpl('maxop43').set('opname', 'max_uc7');
model.cpl('maxop43').selection.set([6]);
model.cpl.create('minop43', 'Minimum', 'geom6');
model.cpl('minop43').set('opname', 'min_uc7');
model.cpl('minop43').selection.set([6]);
model.cpl.create('aveop50', 'Average', 'geom6');
model.cpl('aveop50').set('axisym', true);
model.cpl('aveop50').set('opname', 'ave_uc7');
model.cpl('aveop50').selection.geom('geom6', 1);
model.cpl('aveop50').selection.named('sel70');
model.cpl.create('intop31', 'Integration', 'geom6');
model.cpl('intop31').set('axisym', true);
model.cpl('intop31').set('opname', 'int_uc7');
model.cpl('intop31').selection.set([6]);
model.cpl.create('aveop51', 'Average', 'geom6');
model.cpl('aveop51').set('axisym', true);
model.cpl('aveop51').set('opname', 'ave_svc');
model.cpl('aveop51').selection.geom('geom6', 1);
model.cpl('aveop51').selection.named('sel71');
model.cpl.create('intop32', 'Integration', 'geom6');
model.cpl('intop32').set('axisym', true);
model.cpl('intop32').set('opname', 'int_internal');
model.cpl('intop32').selection.geom('geom6', 1);
model.cpl('intop32').selection.named('sel75');

model.variable.create('var6');
model.variable('var6').model('comp6');

% To import content from file, use:
% model.variable('var6').loadFile('FILENAME');
model.variable('var6').set('f_htot', '99[mm]', 'Total height of the frame');
model.variable('var6').set('f_hr1', '29[mm]', 'Height of the first right part of the frame');
model.variable('var6').set('f_hr2', '6[mm]', 'Height of the second right part of the frame');
model.variable('var6').set('f_hr3', '24[mm]', 'Height of the third right part of the frame (insulation panel thickness)');
model.variable('var6').set('f_hr4', '28[mm]', 'Height of the fourth right part of the frame');
model.variable('var6').set('f_hr5', '12[mm]', 'Height of the fifth right part of the frame');
model.variable('var6').set('f_wtot', '48[mm]', 'Total width of the frame');
model.variable('var6').set('f_wb1', '31[mm]', 'Width of the first bottom part of the frame');
model.variable('var6').set('f_wb2', '17[mm]', 'Width of the second bottom part of the frame');
model.variable('var6').set('f_wt1', '31[mm]', 'Width of the first top part of the frame');
model.variable('var6').set('f_wt2', '17[mm]', 'Width of the second top part of the frame');
model.variable('var6').set('uc1_h', '31[mm]', 'Height of the first unventilated cavity');
model.variable('var6').set('uc1_w', '25[mm]', 'Width of the first unventilated cavity');
model.variable('var6').set('uc2_h', '9[mm]', 'Height of the second unventilated cavity');
model.variable('var6').set('uc2_w', '10[mm]', 'Width of the second unventilated cavity');
model.variable('var6').set('uc3_h', '19[mm]', 'Height of the third unventilated cavity');
model.variable('var6').set('uc3_w', '12[mm]', 'Width of the third unventilated cavity');
model.variable('var6').set('uc4_h', '19[mm]', 'Height of the fourth unventilated cavity');
model.variable('var6').set('uc4_w', '25[mm]', 'Width of the fourth unventilated cavity');
model.variable('var6').set('uc5_h', '30[mm]', 'Height of the fifth unventilated cavity');
model.variable('var6').set('uc5_w', '5[mm]', 'Width of the fifth unventilated cavity');
model.variable('var6').set('uc6_h', '35[mm]', 'Height of the sixth unventilated cavity');
model.variable('var6').set('uc6_w', '15[mm]', 'Width of the sixth unventilated cavity');
model.variable('var6').set('uc7_h', '37[mm]', 'Height of the seventh unventilated cavity');
model.variable('var6').set('uc7_w', '36[mm]', 'Width of the seventh unventilated cavity');
model.variable('var6').set('svc_h', '8[mm]', 'Height of the slightly ventilated cavity');
model.variable('var6').set('svc_w', '3[mm]', 'Width of the slightly ventilated cavity');
model.variable('var6').set('pvc_t', '3[mm]', 'PVC thickness');
model.variable('var6').set('epdm_t', '3[mm]', 'EPDM thickness');
model.variable('var6').set('m_t1', '2[mm]', 'First thickness of the unknown material');
model.variable('var6').set('m_t2', '3[mm]', 'Second thickness of the unknown material');
model.variable('var6').set('m_t3', '6[mm]', 'Third thickness of the unknown material');
model.variable('var6').set('pvl', '190[mm]', 'Panel visible length');
model.variable('var6').set('pp', '12[mm]', 'Panel Penetration');
model.variable('var6').set('sp1', '2[mm]', 'Useful space');
model.variable('var6').set('sp2', '5[mm]', 'Useful space');
model.variable('var6').set('sp3', '6[mm]', 'Useful space');
model.variable('var6').set('sp4', '7[mm]', 'Useful space');
model.variable('var6').set('A_uc1', 'int_uc1(1)', 'Area of the first unventilated cavity');
model.variable('var6').set('A_uc2', 'int_uc2(1)', 'Area of the second unventilated cavity');
model.variable('var6').set('A_uc4', 'int_uc4(1)', 'Area of the fourth unventilated cavity');
model.variable('var6').set('A_uc6', 'int_uc6(1)', 'Area of the sixth unventilated cavity');
model.variable('var6').set('A_uc7', 'int_uc7(1)', 'Area of the seventh unventilated cavity');
model.variable('var6').set('uc1_h2', 'h_resized(A_uc1,uc1_h,uc1_w)', 'Equivalent height for the first unventilated cavity');
model.variable('var6').set('uc2_h2', 'h_resized(A_uc2,uc2_h,uc2_w)', 'Equivalent height for the second unventilated cavity');
model.variable('var6').set('uc4_h2', 'h_resized(A_uc4,uc4_h,uc4_w)', 'Equivalent height for the fourth unventilated cavity');
model.variable('var6').set('uc6_h2', 'h_resized(A_uc6,uc6_h,uc6_w)', 'Equivalent height for the sixth unventilated cavity');
model.variable('var6').set('uc7_h2', 'h_resized(A_uc7,uc7_h,uc7_w)', 'Equivalent height for the seventh unventilated cavity');
model.variable('var6').set('R_uc1', '1/(ha_2(uc1_h2,max_uc1(T6)-min_uc1(T6))+hr(uc1_h,uc1_w,ave_uc1(T6),epsilon,epsilon))', 'Thermal resistance of the first unventilated cavity');
model.variable('var6').set('R_uc2', '1/(ha_2(uc2_h2,max_uc2(T6)-min_uc2(T6))+hr(uc2_h,uc2_w,ave_uc2(T6),epsilon,epsilon))', 'Thermal resistance of the second unventilated cavity');
model.variable('var6').set('R_uc3', '1/(ha_2(uc3_h,max_uc3(T6)-min_uc3(T6))+hr(uc3_h,uc3_w,ave_uc3(T6),epsilon,epsilon))', 'Thermal resistance of the third unventilated cavity');
model.variable('var6').set('R_uc4', '1/(ha_2(uc4_h2,max_uc4(T6)-min_uc4(T6))+hr(uc4_h,uc4_w,ave_uc4(T6),epsilon,epsilon))', 'Thermal resistance of the fourth unventilated cavity');
model.variable('var6').set('R_uc5', '1/(ha_2(uc5_h,max_uc5(T6)-min_uc5(T6))+hr(uc5_h,uc5_w,ave_uc5(T6),epsilon,epsilon))', 'Thermal resistance of the fifth unventilated cavity');
model.variable('var6').set('R_uc6', '1/(ha_2(uc6_h2,max_uc6(T6)-min_uc6(T6))+hr(uc6_h,uc6_w,ave_uc6(T6),epsilon,epsilon))', 'Thermal resistance of the sixth unventilated cavity');
model.variable('var6').set('R_uc7', '1/(ha_2(uc7_h2,max_uc7(T6)-min_uc7(T6))+hr(uc7_h,uc7_w,ave_uc7(T6),epsilon,epsilon))', 'Thermal resistance of the seventh unventilated cavity');
model.variable('var6').set('R_svc', '1/(ha_1(svc_h)+hr(svc_h,svc_w,ave_svc(T6),epsilon,epsilon))', 'Thermal resistance of the slightly ventilated cavity');
model.variable('var6').set('Rp', 'f_hr3/lambda_p', 'Thermal resistance of the central area of the insulation panel');
model.variable('var6').set('Up_n', '1/(Rsi_n+Rp+Rse)', 'Thermal transmittance of the insulation panel (normal)');
model.variable('var6').set('Up_p', '1/(Rsi_p+Rp+Rse)', 'Thermal transmittance of the insulation panel (protected)');
model.variable('var6').set('Up', '(Up_p*f_hr4+Up_n*(pvl-f_hr4))/pvl', 'Thermal transmittance of the panel');

model.material.create('mat66', 'Common', 'comp6');
model.material('mat66').label('PVC');
model.material('mat66').selection.set([1]);
model.material('mat66').propertyGroup('def').set('thermalconductivity', {'0.17'});
model.material('mat66').propertyGroup('def').set('density', {'1390'});
model.material('mat66').propertyGroup('def').set('heatcapacity', {'1900'});
model.material.create('mat67', 'Common', 'comp6');
model.material('mat67').label('EPDM');
model.material('mat67').selection.set([11 13]);
model.material('mat67').propertyGroup('def').set('thermalconductivity', {'0.25'});
model.material('mat67').propertyGroup('def').set('density', {'1150'});
model.material('mat67').propertyGroup('def').set('heatcapacity', {'1000'});
model.material.create('mat68', 'Common', 'comp6');
model.material('mat68').label('Insulation Panel');
model.material('mat68').selection.set([12]);
model.material('mat68').propertyGroup('def').set('thermalconductivity', {'lambda_p'});
model.material('mat68').propertyGroup('def').set('density', {'50'});
model.material('mat68').propertyGroup('def').set('heatcapacity', {'1030'});
model.material.create('mat69', 'Common', 'comp6');
model.material('mat69').label('Polyamide');
model.material('mat69').selection.set([8]);
model.material('mat69').propertyGroup('def').set('thermalconductivity', {'0.25'});
model.material('mat69').propertyGroup('def').set('density', {'1150'});
model.material('mat69').propertyGroup('def').set('heatcapacity', {'1600'});
model.material.create('mat70', 'Common', 'comp6');
model.material('mat70').label('Unventilated Cavity 1');
model.material('mat70').selection.set([5]);
model.material('mat70').propertyGroup('def').set('thermalconductivity', {'uc1_h2/R_uc1'});
model.material('mat70').propertyGroup('def').set('density', {'1.23'});
model.material('mat70').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat71', 'Common', 'comp6');
model.material('mat71').label('Unventilated Cavity 2');
model.material('mat71').selection.set([7]);
model.material('mat71').propertyGroup('def').set('thermalconductivity', {'uc2_h2/R_uc2'});
model.material('mat71').propertyGroup('def').set('density', {'1.23'});
model.material('mat71').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat72', 'Common', 'comp6');
model.material('mat72').label('Unventilated Cavity 3');
model.material('mat72').selection.set([10]);
model.material('mat72').propertyGroup('def').set('thermalconductivity', {'uc3_h/R_uc3'});
model.material('mat72').propertyGroup('def').set('density', {'1.23'});
model.material('mat72').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat73', 'Common', 'comp6');
model.material('mat73').label('Unventilated Cavity 4');
model.material('mat73').selection.set([4]);
model.material('mat73').propertyGroup('def').set('thermalconductivity', {'uc4_h2/R_uc4'});
model.material('mat73').propertyGroup('def').set('density', {'1.23'});
model.material('mat73').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat74', 'Common', 'comp6');
model.material('mat74').label('Unventilated Cavity 5');
model.material('mat74').selection.set([9]);
model.material('mat74').propertyGroup('def').set('thermalconductivity', {'uc5_h/R_uc5'});
model.material('mat74').propertyGroup('def').set('density', {'1.23'});
model.material('mat74').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat75', 'Common', 'comp6');
model.material('mat75').label('Unventilated Cavity 6');
model.material('mat75').selection.set([3]);
model.material('mat75').propertyGroup('def').set('thermalconductivity', {'uc6_h2/R_uc6'});
model.material('mat75').propertyGroup('def').set('density', {'1.23'});
model.material('mat75').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat76', 'Common', 'comp6');
model.material('mat76').label('Unventilated Cavity 7');
model.material('mat76').selection.set([6]);
model.material('mat76').propertyGroup('def').set('thermalconductivity', {'uc7_h2/R_uc7'});
model.material('mat76').propertyGroup('def').set('density', {'1.23'});
model.material('mat76').propertyGroup('def').set('heatcapacity', {'1008'});
model.material.create('mat77', 'Common', 'comp6');
model.material('mat77').label('Slightly Ventilated Cavity');
model.material('mat77').selection.set([2]);
model.material('mat77').propertyGroup('def').set('thermalconductivity', {'2*svc_h/R_svc'});
model.material('mat77').propertyGroup('def').set('density', {'1.23'});
model.material('mat77').propertyGroup('def').set('heatcapacity', {'1008'});

model.study.create('std6');
model.study('std6').create('stat', 'Stationary');
model.study('std6').feature('stat').setSolveFor('/physics/ht', false);
model.study('std6').feature('stat').setSolveFor('/physics/ht2', false);
model.study('std6').feature('stat').setSolveFor('/physics/ht3', false);
model.study('std6').feature('stat').setSolveFor('/physics/ht4', false);
model.study('std6').feature('stat').setSolveFor('/physics/ht5', false);
model.study('std6').feature('stat').setSolveFor('/physics/ht6', true);

model.sol.create('sol6');
model.sol('sol6').study('std6');
model.sol('sol6').create('st1', 'StudyStep');
model.sol('sol6').feature('st1').set('study', 'std6');
model.sol('sol6').feature('st1').set('studystep', 'stat');
model.sol('sol6').create('v1', 'Variables');
model.sol('sol6').feature('v1').set('control', 'stat');
model.sol('sol6').create('s1', 'Stationary');
model.sol('sol6').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol6').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol6').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol6').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol6').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol6').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol6').feature('s1').create('d1', 'Direct');
model.sol('sol6').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol6').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol6').feature('s1').feature('d1').label('Direct, heat transfer variables (ht6)');
model.sol('sol6').feature('s1').create('i1', 'Iterative');
model.sol('sol6').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol6').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol6').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol6').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol6').feature('s1').feature('i1').set('maxlinit', 10000);
model.sol('sol6').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol6').feature('s1').feature('i1').label('AMG, heat transfer variables (ht6)');
model.sol('sol6').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol6').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol6').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol6').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol6').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol6').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol6').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol6').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol6').feature('s1').feature.remove('fcDef');
model.sol('sol6').attach('std6');
model.sol('sol6').feature('s1').set('stol', '1e-6');

model.result.dataset.remove('dset1');
model.result.dataset.remove('dset2');
model.result.dataset.remove('dset3');
model.result.dataset.remove('dset4');
model.result.dataset.remove('dset5');
model.result.dataset.remove('dset6');
model.result.dataset.remove('dset7');
model.result.dataset.remove('dset8');
model.result.dataset.remove('dset9');
model.result.dataset.remove('dset10');
model.result.dataset.remove('dset11');
model.result.dataset.remove('dset12');
model.result.dataset.remove('dset13');
model.result.dataset.remove('dset14');
model.result.dataset.remove('dset15');
model.result.dataset.remove('dset16');
model.result.dataset.remove('dset17');
model.result.dataset.remove('dset18');
model.result.dataset.remove('dset19');
model.result.dataset.remove('dset20');
model.result.dataset.remove('dset21');

model.title('Parameterized Window, Preset Model');

model.description('This is a template MPH-file containing the physics interfaces and the parameterized geometry for the model Thermal Performances of Windows.');

model.label('windows_thermal_performances_preset.mph');

model.variable('var1').set('L2D', 'int_internal(ht.ntflux/(Te-Ti))');
model.variable('var1').descr('L2D', 'Thermal conductance of the frame');

model.physics('ht').feature('fluid1').selection.set([2 5 6 10 12 14 15 17 18 20 21]);
model.physics('ht').create('hf1', 'HeatFluxBoundary', 1);
model.physics('ht').feature('hf1').selection.named('sel12');
model.physics('ht').feature('hf1').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht').feature('hf1').set('h', '1/Rse');
model.physics('ht').feature('hf1').set('Text', 'Te');
model.physics('ht').create('hf2', 'HeatFluxBoundary', 1);
model.physics('ht').feature('hf2').selection.named('sel13');
model.physics('ht').feature('hf2').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht').feature('hf2').set('h', '1/Rsi_n');
model.physics('ht').feature('hf2').set('Text', 'Ti');
model.physics('ht').create('hf3', 'HeatFluxBoundary', 1);
model.physics('ht').feature('hf3').selection.named('sel14');
model.physics('ht').feature('hf3').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht').feature('hf3').set('h', '1/Rsi_p');
model.physics('ht').feature('hf3').set('Text', 'Ti');

model.result.dataset.create('dset1', 'Solution');
model.result.dataset('dset1').set('solution', 'sol1');
model.result.dataset('dset1').set('comp', 'none');
model.result.dataset('dset1').set('geom', 'geom1');
model.result.dataset.create('dset2', 'Solution');
model.result.dataset('dset2').set('solution', 'sol1');
model.result.dataset('dset2').set('geom', 'geom2');
model.result.dataset.create('dset3', 'Solution');
model.result.dataset('dset3').set('solution', 'sol1');
model.result.dataset('dset3').set('geom', 'geom3');
model.result.dataset.create('dset4', 'Solution');
model.result.dataset('dset4').set('solution', 'sol1');
model.result.dataset('dset4').set('geom', 'geom4');
model.result.dataset.create('dset5', 'Solution');
model.result.dataset('dset5').set('solution', 'sol1');
model.result.dataset('dset5').set('geom', 'geom5');
model.result.dataset.create('dset6', 'Solution');
model.result.dataset('dset6').set('solution', 'sol1');
model.result.dataset('dset6').set('geom', 'geom6');
model.result.dataset('dset6').set('comp', 'comp6');

model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').label('Temperature (ht)');
model.result('pg1').set('data', 'dset1');
model.result('pg1').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pg2');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('solutionparams', 'parent');
model.result('pg1').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result('pg1').run;
model.result.numerical.create('gev1', 'EvalGlobal');
model.result.numerical('gev1').label('Thermal Conductance of the Section (L2D) 1');
model.result.numerical('gev1').setIndex('expr', 'L2D', 0);
model.result.numerical('gev1').setIndex('descr', 'Thermal Conductance of the Section (L2D)', 0);
model.result.numerical('gev1').setIndex('expr', '(L2D-Up*pvl)/f_wtot', 1);
model.result.numerical('gev1').setIndex('descr', 'Thermal Transmittance of the Frame (Uf)', 1);
model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').comments('Thermal Conductance of the Section (L2D) 1');
model.result.numerical('gev1').set('table', 'tbl1');
model.result.numerical('gev1').setResult;
model.result('pg1').run;
model.result('pg1').feature('surf1').set('unit', 'degC');
model.result('pg1').run;

model.variable('var2').set('L2D', 'int_internal(ht2.ntflux/(Te-Ti))', 'Thermal conductance of the frame');
model.variable('var2').descr('L2D', 'Thermal conductance of the frame');

model.physics('ht2').feature('fluid1').selection.set([2 6 8 9 10 14]);
model.physics('ht2').create('hf1', 'HeatFluxBoundary', 1);
model.physics('ht2').feature('hf1').selection.named('sel24');
model.physics('ht2').feature('hf1').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht2').feature('hf1').set('h', '1/Rse');
model.physics('ht2').feature('hf1').set('Text', 'Te');
model.physics('ht2').create('hf2', 'HeatFluxBoundary', 1);
model.physics('ht2').feature('hf2').selection.named('sel22');
model.physics('ht2').feature('hf2').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht2').feature('hf2').set('h', '1/Rsi_n');
model.physics('ht2').feature('hf2').set('Text', 'Ti');
model.physics('ht2').create('hf3', 'HeatFluxBoundary', 1);
model.physics('ht2').feature('hf3').selection.named('sel23');
model.physics('ht2').feature('hf3').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht2').feature('hf3').set('h', '1/Rsi_p');
model.physics('ht2').feature('hf3').set('Text', 'Ti');

model.result.dataset.create('dset7', 'Solution');
model.result.dataset('dset7').set('solution', 'sol2');
model.result.dataset('dset7').set('comp', 'none');
model.result.dataset('dset7').set('geom', 'geom1');
model.result.dataset.create('dset8', 'Solution');
model.result.dataset('dset8').set('solution', 'sol2');
model.result.dataset('dset8').set('geom', 'geom2');
model.result.dataset.create('dset9', 'Solution');
model.result.dataset('dset9').set('solution', 'sol2');
model.result.dataset('dset9').set('geom', 'geom3');
model.result.dataset.create('dset10', 'Solution');
model.result.dataset('dset10').set('solution', 'sol2');
model.result.dataset('dset10').set('geom', 'geom4');
model.result.dataset.create('dset11', 'Solution');
model.result.dataset('dset11').set('solution', 'sol2');
model.result.dataset('dset11').set('geom', 'geom5');
model.result.dataset.create('dset12', 'Solution');
model.result.dataset('dset12').set('solution', 'sol2');
model.result.dataset('dset12').set('geom', 'geom6');
model.result.dataset('dset12').set('comp', 'comp6');
model.result.dataset.move('dset7', 6);
model.result.dataset('dset7').tag('dset7');
model.result.dataset.move('dset8', 7);
model.result.dataset('dset8').tag('dset8');
model.result.dataset.move('dset9', 8);
model.result.dataset('dset9').tag('dset9');
model.result.dataset.move('dset10', 9);
model.result.dataset('dset10').tag('dset10');
model.result.dataset.move('dset11', 10);
model.result.dataset('dset11').tag('dset11');
model.result.dataset.move('dset12', 11);
model.result.dataset('dset12').tag('dset12');

model.sol('sol2').runAll;

model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').label('Temperature (ht2)');
model.result('pg2').set('data', 'dset8');
model.result('pg2').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pg2');
model.result('pg2').feature.create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('solutionparams', 'parent');
model.result('pg2').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('data', 'parent');
model.result('pg2').run;
model.result.numerical.create('gev2', 'EvalGlobal');
model.result.numerical('gev2').label('Thermal Conductance of the Section (L2D) 2');
model.result.numerical('gev2').set('data', 'dset8');
model.result.numerical('gev2').setIndex('expr', 'L2D', 0);
model.result.numerical('gev2').setIndex('descr', 'Thermal Conductance of the Section (L2D)', 0);
model.result.numerical('gev2').setIndex('expr', '(L2D-Up*pvl)/f_wtot', 1);
model.result.numerical('gev2').setIndex('descr', 'Thermal Transmittance of the Frame (Uf)', 1);
model.result.table.create('tbl2', 'Table');
model.result.table('tbl2').comments('Thermal Conductance of the Section (L2D) 2');
model.result.numerical('gev2').set('table', 'tbl2');
model.result.numerical('gev2').setResult;
model.result('pg2').run;
model.result('pg2').feature('surf1').set('unit', 'degC');
model.result('pg2').run;

model.variable('var3').set('L2D', 'int_internal(ht3.ntflux/(Te-Ti))', 'Thermal conductance of the frame');
model.variable('var3').descr('L2D', 'Thermal conductance of the frame');

model.physics('ht3').feature('fluid1').selection.set([2 3 4 5 9 10 12 13 15 16 17 18]);
model.physics('ht3').create('hf1', 'HeatFluxBoundary', 1);
model.physics('ht3').feature('hf1').selection.named('sel38');
model.physics('ht3').feature('hf1').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht3').feature('hf1').set('h', '1/Rse');
model.physics('ht3').feature('hf1').set('Text', 'Te');
model.physics('ht3').create('hf2', 'HeatFluxBoundary', 1);
model.physics('ht3').feature('hf2').selection.named('sel40');
model.physics('ht3').feature('hf2').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht3').feature('hf2').set('h', '1/Rsi_n');
model.physics('ht3').feature('hf2').set('Text', 'Ti');
model.physics('ht3').create('hf3', 'HeatFluxBoundary', 1);
model.physics('ht3').feature('hf3').selection.named('sel39');
model.physics('ht3').feature('hf3').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht3').feature('hf3').set('h', '1/Rsi_p');
model.physics('ht3').feature('hf3').set('Text', 'Ti');

model.mesh('mesh3').automatic(false);
model.mesh('mesh3').feature('size').set('hnarrow', 2);

model.result.dataset.create('dset13', 'Solution');
model.result.dataset('dset13').set('solution', 'sol3');
model.result.dataset('dset13').set('comp', 'none');
model.result.dataset('dset13').set('geom', 'geom1');
model.result.dataset.create('dset14', 'Solution');
model.result.dataset('dset14').set('solution', 'sol3');
model.result.dataset('dset14').set('geom', 'geom2');
model.result.dataset.create('dset15', 'Solution');
model.result.dataset('dset15').set('solution', 'sol3');
model.result.dataset('dset15').set('geom', 'geom3');
model.result.dataset.create('dset16', 'Solution');
model.result.dataset('dset16').set('solution', 'sol3');
model.result.dataset('dset16').set('geom', 'geom4');
model.result.dataset.create('dset17', 'Solution');
model.result.dataset('dset17').set('solution', 'sol3');
model.result.dataset('dset17').set('geom', 'geom5');
model.result.dataset.create('dset18', 'Solution');
model.result.dataset('dset18').set('solution', 'sol3');
model.result.dataset('dset18').set('geom', 'geom6');
model.result.dataset('dset18').set('comp', 'comp6');
model.result.dataset.move('dset13', 12);
model.result.dataset('dset13').tag('dset13');
model.result.dataset.move('dset14', 13);
model.result.dataset('dset14').tag('dset14');
model.result.dataset.move('dset15', 14);
model.result.dataset('dset15').tag('dset15');
model.result.dataset.move('dset16', 15);
model.result.dataset('dset16').tag('dset16');
model.result.dataset.move('dset17', 16);
model.result.dataset('dset17').tag('dset17');
model.result.dataset.move('dset18', 17);
model.result.dataset('dset18').tag('dset18');

model.sol('sol3').runAll;

model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').label('Temperature (ht3)');
model.result('pg3').set('data', 'dset15');
model.result('pg3').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pg2');
model.result('pg3').feature.create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('solutionparams', 'parent');
model.result('pg3').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('data', 'parent');
model.result('pg3').run;
model.result.numerical.create('gev3', 'EvalGlobal');
model.result.numerical('gev3').label('Thermal Conductance of the Section (L2D) 3');
model.result.numerical('gev3').set('data', 'dset15');
model.result.numerical('gev3').setIndex('expr', 'L2D', 0);
model.result.numerical('gev3').setIndex('descr', 'Thermal Conductance of the Section (L2D)', 0);
model.result.numerical('gev3').setIndex('expr', '(L2D-Up*pvl)/f_wtot', 1);
model.result.numerical('gev3').setIndex('descr', 'Thermal Transmittance of the Frame (Uf)', 1);
model.result.table.create('tbl3', 'Table');
model.result.table('tbl3').comments('Thermal Conductance of the Section (L2D) 3');
model.result.numerical('gev3').set('table', 'tbl3');
model.result.numerical('gev3').setResult;
model.result('pg3').run;
model.result('pg3').feature('surf1').set('unit', 'degC');
model.result('pg3').run;

model.variable('var4').set('L2D', 'int_internal(ht4.ntflux/(Te-Ti))', 'Thermal conductance of the frame');
model.variable('var4').descr('L2D', 'Thermal conductance of the frame');

model.physics('ht4').prop('ShapeProperty').set('order_temperature', 2);
model.physics('ht4').feature('fluid1').selection.set([2 4 7 10 12 13 15]);
model.physics('ht4').create('hf1', 'HeatFluxBoundary', 1);
model.physics('ht4').feature('hf1').selection.named('sel49');
model.physics('ht4').feature('hf1').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht4').feature('hf1').set('h', '1/Rse');
model.physics('ht4').feature('hf1').set('Text', 'Te');
model.physics('ht4').create('hf2', 'HeatFluxBoundary', 1);
model.physics('ht4').feature('hf2').selection.named('sel51');
model.physics('ht4').feature('hf2').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht4').feature('hf2').set('h', '1/Rsi_n');
model.physics('ht4').feature('hf2').set('Text', 'Ti');
model.physics('ht4').create('hf3', 'HeatFluxBoundary', 1);
model.physics('ht4').feature('hf3').selection.named('sel50');
model.physics('ht4').feature('hf3').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht4').feature('hf3').set('h', '1/Rsi_p');
model.physics('ht4').feature('hf3').set('Text', 'Ti');

model.mesh('mesh4').automatic(false);
model.mesh('mesh4').feature('size').set('hnarrow', 2);

model.result.dataset.create('dset19', 'Solution');
model.result.dataset('dset19').set('solution', 'sol4');
model.result.dataset('dset19').set('comp', 'none');
model.result.dataset('dset19').set('geom', 'geom1');
model.result.dataset.create('dset20', 'Solution');
model.result.dataset('dset20').set('solution', 'sol4');
model.result.dataset('dset20').set('geom', 'geom2');
model.result.dataset.create('dset21', 'Solution');
model.result.dataset('dset21').set('solution', 'sol4');
model.result.dataset('dset21').set('geom', 'geom3');
model.result.dataset.create('dset22', 'Solution');
model.result.dataset('dset22').set('solution', 'sol4');
model.result.dataset('dset22').set('geom', 'geom4');
model.result.dataset.create('dset23', 'Solution');
model.result.dataset('dset23').set('solution', 'sol4');
model.result.dataset('dset23').set('geom', 'geom5');
model.result.dataset.create('dset24', 'Solution');
model.result.dataset('dset24').set('solution', 'sol4');
model.result.dataset('dset24').set('geom', 'geom6');
model.result.dataset('dset24').set('comp', 'comp6');
model.result.dataset.move('dset19', 18);
model.result.dataset('dset19').tag('dset19');
model.result.dataset.move('dset20', 19);
model.result.dataset('dset20').tag('dset20');
model.result.dataset.move('dset21', 20);
model.result.dataset('dset21').tag('dset21');
model.result.dataset.move('dset22', 21);
model.result.dataset('dset22').tag('dset22');
model.result.dataset.move('dset23', 22);
model.result.dataset('dset23').tag('dset23');
model.result.dataset.move('dset24', 23);
model.result.dataset('dset24').tag('dset24');

model.sol('sol4').runAll;

model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').label('Temperature (ht4)');
model.result('pg4').set('data', 'dset22');
model.result('pg4').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pg2');
model.result('pg4').feature.create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('showsolutionparams', 'on');
model.result('pg4').feature('surf1').set('solutionparams', 'parent');
model.result('pg4').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg4').feature('surf1').set('showsolutionparams', 'on');
model.result('pg4').feature('surf1').set('data', 'parent');
model.result('pg4').run;
model.result.numerical.create('gev4', 'EvalGlobal');
model.result.numerical('gev4').label('Thermal Conductance of the Section (L2D) 4');
model.result.numerical('gev4').set('data', 'dset22');
model.result.numerical('gev4').setIndex('expr', 'L2D', 0);
model.result.numerical('gev4').setIndex('descr', 'Thermal Conductance of the Section (L2D)', 0);
model.result.numerical('gev4').setIndex('expr', '(L2D-Up*pvl)/f_wtot', 1);
model.result.numerical('gev4').setIndex('descr', 'Thermal Transmittance of the Frame (Uf)', 1);
model.result.table.create('tbl4', 'Table');
model.result.table('tbl4').comments('Thermal Conductance of the Section (L2D) 4');
model.result.numerical('gev4').set('table', 'tbl4');
model.result.numerical('gev4').setResult;
model.result('pg4').run;
model.result('pg4').feature('surf1').set('unit', 'degC');
model.result('pg4').run;

model.variable('var5').set('L2D', 'int_internal(ht5.ntflux/(Te-Ti))', 'Thermal conductance of the frame');
model.variable('var5').descr('L2D', 'Thermal conductance of the frame');

model.physics('ht5').feature('fluid1').selection.set([2 5 6 8 14 15 17]);
model.physics('ht5').create('hf1', 'HeatFluxBoundary', 1);
model.physics('ht5').feature('hf1').selection.named('sel60');
model.physics('ht5').feature('hf1').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht5').feature('hf1').set('h', '1/Rse');
model.physics('ht5').feature('hf1').set('Text', 'Te');
model.physics('ht5').create('hf2', 'HeatFluxBoundary', 1);
model.physics('ht5').feature('hf2').selection.named('sel61');
model.physics('ht5').feature('hf2').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht5').feature('hf2').set('h', '1/Rsi_n');
model.physics('ht5').feature('hf2').set('Text', 'Ti');
model.physics('ht5').create('hf3', 'HeatFluxBoundary', 1);
model.physics('ht5').feature('hf3').selection.named('sel62');
model.physics('ht5').feature('hf3').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht5').feature('hf3').set('h', '1/Rsi_p');
model.physics('ht5').feature('hf3').set('Text', 'Ti');

model.result.dataset.create('dset25', 'Solution');
model.result.dataset('dset25').set('solution', 'sol5');
model.result.dataset('dset25').set('comp', 'none');
model.result.dataset('dset25').set('geom', 'geom1');
model.result.dataset.create('dset26', 'Solution');
model.result.dataset('dset26').set('solution', 'sol5');
model.result.dataset('dset26').set('geom', 'geom2');
model.result.dataset.create('dset27', 'Solution');
model.result.dataset('dset27').set('solution', 'sol5');
model.result.dataset('dset27').set('geom', 'geom3');
model.result.dataset.create('dset28', 'Solution');
model.result.dataset('dset28').set('solution', 'sol5');
model.result.dataset('dset28').set('geom', 'geom4');
model.result.dataset.create('dset29', 'Solution');
model.result.dataset('dset29').set('solution', 'sol5');
model.result.dataset('dset29').set('geom', 'geom5');
model.result.dataset.create('dset30', 'Solution');
model.result.dataset('dset30').set('solution', 'sol5');
model.result.dataset('dset30').set('geom', 'geom6');
model.result.dataset('dset30').set('comp', 'comp6');
model.result.dataset.move('dset25', 24);
model.result.dataset('dset25').tag('dset25');
model.result.dataset.move('dset26', 25);
model.result.dataset('dset26').tag('dset26');
model.result.dataset.move('dset27', 26);
model.result.dataset('dset27').tag('dset27');
model.result.dataset.move('dset28', 27);
model.result.dataset('dset28').tag('dset28');
model.result.dataset.move('dset29', 28);
model.result.dataset('dset29').tag('dset29');
model.result.dataset.move('dset30', 29);
model.result.dataset('dset30').tag('dset30');

model.sol('sol5').runAll;

model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').label('Temperature (ht5)');
model.result('pg5').set('data', 'dset29');
model.result('pg5').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pg2');
model.result('pg5').feature.create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('showsolutionparams', 'on');
model.result('pg5').feature('surf1').set('solutionparams', 'parent');
model.result('pg5').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg5').feature('surf1').set('showsolutionparams', 'on');
model.result('pg5').feature('surf1').set('data', 'parent');
model.result('pg5').run;
model.result.numerical.create('gev5', 'EvalGlobal');
model.result.numerical('gev5').label('Thermal Conductance of the Section (L2D) 5');
model.result.numerical('gev5').set('data', 'dset29');
model.result.numerical('gev5').setIndex('expr', 'L2D', 0);
model.result.numerical('gev5').setIndex('descr', 'Thermal Conductance of the Section (L2D)', 0);
model.result.numerical('gev5').setIndex('expr', '(L2D-Up*pvl)/f_wtot', 1);
model.result.numerical('gev5').setIndex('descr', 'Thermal Transmittance of the Frame (Uf)', 1);
model.result.table.create('tbl5', 'Table');
model.result.table('tbl5').comments('Thermal Conductance of the Section (L2D) 5');
model.result.numerical('gev5').set('table', 'tbl5');
model.result.numerical('gev5').setResult;
model.result('pg5').run;
model.result('pg5').feature('surf1').set('unit', 'degC');
model.result('pg5').run;

model.variable('var6').set('L2D', 'int_internal(ht6.ntflux/(Te-Ti))', 'Thermal conductance of the frame');
model.variable('var6').descr('L2D', 'Thermal conductance of the frame');

model.physics('ht6').feature('fluid1').selection.set([2 3 4 5 6 7 9 10]);
model.physics('ht6').create('hf1', 'HeatFluxBoundary', 1);
model.physics('ht6').feature('hf1').selection.named('sel72');
model.physics('ht6').feature('hf1').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht6').feature('hf1').set('h', '1/Rse');
model.physics('ht6').feature('hf1').set('Text', 'Te');
model.physics('ht6').create('hf2', 'HeatFluxBoundary', 1);
model.physics('ht6').feature('hf2').selection.named('sel73');
model.physics('ht6').feature('hf2').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht6').feature('hf2').set('h', '1/Rsi_n');
model.physics('ht6').feature('hf2').set('Text', 'Ti');
model.physics('ht6').create('hf3', 'HeatFluxBoundary', 1);
model.physics('ht6').feature('hf3').selection.named('sel74');
model.physics('ht6').feature('hf3').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht6').feature('hf3').set('h', '1/Rsi_p');
model.physics('ht6').feature('hf3').set('Text', 'Ti');

model.result.dataset.create('dset31', 'Solution');
model.result.dataset('dset31').set('solution', 'sol6');
model.result.dataset('dset31').set('comp', 'none');
model.result.dataset('dset31').set('geom', 'geom1');
model.result.dataset.create('dset32', 'Solution');
model.result.dataset('dset32').set('solution', 'sol6');
model.result.dataset('dset32').set('geom', 'geom2');
model.result.dataset.create('dset33', 'Solution');
model.result.dataset('dset33').set('solution', 'sol6');
model.result.dataset('dset33').set('geom', 'geom3');
model.result.dataset.create('dset34', 'Solution');
model.result.dataset('dset34').set('solution', 'sol6');
model.result.dataset('dset34').set('geom', 'geom4');
model.result.dataset.create('dset35', 'Solution');
model.result.dataset('dset35').set('solution', 'sol6');
model.result.dataset('dset35').set('geom', 'geom5');
model.result.dataset.create('dset36', 'Solution');
model.result.dataset('dset36').set('solution', 'sol6');
model.result.dataset('dset36').set('geom', 'geom6');
model.result.dataset('dset36').set('comp', 'comp6');
model.result.dataset.move('dset31', 30);
model.result.dataset('dset31').tag('dset31');
model.result.dataset.move('dset32', 31);
model.result.dataset('dset32').tag('dset32');
model.result.dataset.move('dset33', 32);
model.result.dataset('dset33').tag('dset33');
model.result.dataset.move('dset34', 33);
model.result.dataset('dset34').tag('dset34');
model.result.dataset.move('dset35', 34);
model.result.dataset('dset35').tag('dset35');
model.result.dataset.move('dset36', 35);
model.result.dataset('dset36').tag('dset36');

model.sol('sol6').runAll;

model.result.create('pg6', 'PlotGroup2D');
model.result('pg6').label('Temperature (ht6)');
model.result('pg6').set('data', 'dset36');
model.result('pg6').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pg2');
model.result('pg6').feature.create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('showsolutionparams', 'on');
model.result('pg6').feature('surf1').set('solutionparams', 'parent');
model.result('pg6').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg6').feature('surf1').set('showsolutionparams', 'on');
model.result('pg6').feature('surf1').set('data', 'parent');
model.result('pg6').run;
model.result.numerical.create('gev6', 'EvalGlobal');
model.result.numerical('gev6').label('Thermal Conductance of the Section (L2D) 6');
model.result.numerical('gev6').set('data', 'dset36');
model.result.numerical('gev6').setIndex('expr', 'L2D', 0);
model.result.numerical('gev6').setIndex('descr', 'Thermal Conductance of the Section (L2D)', 0);
model.result.numerical('gev6').setIndex('expr', '(L2D-Up*pvl)/f_wtot', 1);
model.result.numerical('gev6').setIndex('descr', 'Thermal Transmittance of the Frame (Uf)', 1);
model.result.table.create('tbl6', 'Table');
model.result.table('tbl6').comments('Thermal Conductance of the Section (L2D) 6');
model.result.numerical('gev6').set('table', 'tbl6');
model.result.numerical('gev6').setResult;
model.result('pg6').run;
model.result('pg6').feature('surf1').set('unit', 'degC');
model.result('pg6').run;
model.result('pg6').run;

model.title('Thermal Performances of Windows');

model.description('This benchmark reproduces the six test cases from the ISO 10077-2:2012 standard related to windows. The thermal performance of each window is evaluated from its thermal conductance and thermal transmittance. Finally, the results are compared with given data for validation.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;

model.label('windows_thermal_performances.mph');

model.modelNode.label('Components');

out = model;
