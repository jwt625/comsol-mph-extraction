function out = model
%
% porous_reactor.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Chemical_Reaction_Engineering_Module/Reactors_with_Porous_Catalysts');

model.modelNode.create('comp1', true);

model.physics.create('re', 'ReactionEng');
model.physics('re').model('comp1');

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/re', true);

model.param.label('Parameters 1, reaction');

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('kf1', '7.5e6[m^5/(s*mol^2)]', 'Forward reaction rate constant');
model.param.set('kr1', '2.9e10[m^2/(s*mol)]', 'Backward reaction rate constant');
model.param.set('kf2', '6.3e5[m^5/(s*mol^2)]', 'Forward reaction rate constant');
model.param.set('kr2', '0[m^2/(s*mol)]', 'Backward reaction rate constant');
model.param.set('kf3', '2.3e2[m^3/(s*mol)]', 'Forward reaction rate constant');
model.param.set('kr3', '4.0e9[1/s]', 'Backward reaction rate constant');
model.param.set('kf4', '3.3e10[m^2/(s*mol)]', 'Forward reaction rate constant');
model.param.set('kr4', '2.2e12[m^2/(s*mol)]', 'Backward reaction rate constant');
model.param.set('kf5', '5.5e13[m^2/(s*mol)]', 'Forward reaction rate constant');
model.param.set('kr5', '2.1e9[m^2/(s*mol)]', 'Backward reaction rate constant');
model.param.set('kf6', '2.8e4[m^2/(s*mol)]', 'Forward reaction rate constant');
model.param.set('kr6', '1.5e-2[m^2/(s*mol)]', 'Backward reaction rate constant');
model.param.set('T_iso', '525[K]', 'Temperature');
model.param.set('cat_area', '6e4[1/m]', 'Specific surface reaction area');
model.param.set('c0H2_inflow', '10[mol/m^3]', 'Molar concentration, inflow');
model.param.set('c0O2_inflow', '1[mol/m^3]', 'Molar concentration, inflow');
model.param.set('c0N2', '100[mol/m^3]', 'Molar concentration');
model.param.set('c0H_surf', '0[mol/m^2]', 'Initial concentration, surface species');
model.param.set('c0H2O_surf', '0[mol/m^2]', 'Initial concentration, surface species');
model.param.set('c0O_surf', '0[mol/m^2]', 'Initial concentration, surface species');
model.param.set('c0OH_surf', '0[mol/m^2]', 'Initial concentration, surface species');
model.param.set('c0Rh_surf', '2.7E-5[mol/m^2]', 'Initial concentration, surface species');

model.physics('re').prop('energybalance').set('T', 'T_iso');
model.physics('re').create('rch1', 'ReactionChem', -1);
model.physics('re').feature('rch1').set('formula', 'H2+2Rh(ads)<=>2H(ads)');
model.physics('re').feature('rch1').set('kf', 'kf1');
model.physics('re').feature('rch1').set('kr', 'kr1');
model.physics('re').create('rch2', 'ReactionChem', -1);
model.physics('re').feature('rch2').set('formula', 'O2+2Rh(ads)<=>2O(ads)');
model.physics('re').feature('rch2').set('kf', 'kf2');
model.physics('re').feature('rch2').set('kr', 'kr2');
model.physics('re').create('rch3', 'ReactionChem', -1);
model.physics('re').feature('rch3').set('formula', 'H2O+Rh(ads)<=>H2O(ads)');
model.physics('re').feature('rch3').set('kf', 'kf3');
model.physics('re').feature('rch3').set('kr', 'kr3');
model.physics('re').create('rch4', 'ReactionChem', -1);
model.physics('re').feature('rch4').set('formula', 'O(ads)+H(ads)<=>OH(ads)+Rh(ads)');
model.physics('re').feature('rch4').set('kf', 'kf4');
model.physics('re').feature('rch4').set('kr', 'kr4');
model.physics('re').create('rch5', 'ReactionChem', -1);
model.physics('re').feature('rch5').set('formula', 'OH(ads)+H(ads)<=>H2O(ads)+Rh(ads)');
model.physics('re').feature('rch5').set('kf', 'kf5');
model.physics('re').feature('rch5').set('kr', 'kr5');
model.physics('re').create('rch6', 'ReactionChem', -1);
model.physics('re').feature('rch6').set('formula', 'OH(ads)+OH(ads)<=>O(ads)+H2O(ads)');
model.physics('re').feature('rch6').set('kf', 'kf6');
model.physics('re').feature('rch6').set('kr', 'kr6');
model.physics('re').create('spec1', 'SpeciesChem', -1);
model.physics('re').feature('spec1').set('specName', 'N2');
model.physics('re').feature('N2').set('sType', 'solvent');
model.physics('re').prop('reactor').set('surfaceAreaOptions', 'surfaceAreaToVolumeRatio');
model.physics('re').prop('reactor').set('as', 'cat_area');
model.physics('re').feature('inits1').setIndex('initialValue', 'c0H2_inflow', 0, 0);
model.physics('re').feature('inits1').setIndex('initialValue', 'c0N2', 2, 0);
model.physics('re').feature('inits1').setIndex('initialValue', 'c0O2_inflow', 3, 0);
model.physics('re').feature('inits1').set('gamman0', 2.72E-5);
model.physics('re').feature('inits1').setIndex('initialValues', 'c0H_surf', 0, 0);
model.physics('re').feature('inits1').setIndex('initialValues', 'c0H2O_surf', 1, 0);
model.physics('re').feature('inits1').setIndex('initialValues', 'c0O_surf', 2, 0);
model.physics('re').feature('inits1').setIndex('initialValues', 'c0OH_surf', 3, 0);
model.physics('re').feature('inits1').setIndex('initialValues', 'c0Rh_surf', 4, 0);

model.study('std1').feature('time').set('tlist', 'range(0,0.01,0.2)');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.01,0.2)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('tout', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 1.0E-5);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('consistent', 'off');
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').create('glob1', 'Global');
model.result('pg1').feature('glob1').set('expr', {'re.c_H2' 're.csurf_Rh_surf' 're.csurf_H_surf' 're.c_O2' 're.csurf_O_surf' 're.c_H2O' 're.csurf_H2O_surf' 're.csurf_OH_surf'});
model.result('pg1').feature('glob1').set('descr', {'Concentration' 'Surface concentration' 'Surface concentration' 'Concentration' 'Surface concentration' 'Concentration' 'Surface concentration' 'Surface concentration'});
model.result('pg1').feature('glob1').set('unit', {'' '' '' '' '' '' '' ''});
model.result('pg1').feature('glob1').set('expr', {'re.c_H2' 're.csurf_Rh_surf' 're.csurf_H_surf' 're.c_O2' 're.csurf_O_surf' 're.c_H2O' 're.csurf_H2O_surf' 're.csurf_OH_surf'});
model.result('pg1').feature('glob1').set('descr', {'Concentration' 'Surface concentration' 'Surface concentration' 'Concentration' 'Surface concentration' 'Concentration' 'Surface concentration' 'Surface concentration'});
model.result('pg1').label('Concentration (re)');
model.result('pg1').feature('glob1').set('xdatasolnumtype', 'level1');
model.result('pg1').run;
model.result('pg1').label('Concentration (re), bulk species');
model.result('pg1').run;
model.result('pg1').feature('glob1').set('expr', {});
model.result('pg1').feature('glob1').set('descr', {});
model.result('pg1').feature('glob1').set('expr', {'re.c_H2'});
model.result('pg1').feature('glob1').set('descr', {'Concentration'});
model.result('pg1').feature('glob1').set('expr', {'re.c_H2' 're.c_H2O'});
model.result('pg1').feature('glob1').set('descr', {'Concentration' 'Concentration'});
model.result('pg1').feature('glob1').set('expr', {'re.c_H2' 're.c_H2O' 're.c_O2'});
model.result('pg1').feature('glob1').set('descr', {'Concentration' 'Concentration' 'Concentration'});
model.result('pg1').run;
model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').run;
model.result('pg2').label('Concentration (re), surface species');
model.result('pg2').create('glob1', 'Global');
model.result('pg2').feature('glob1').set('markerpos', 'datapoints');
model.result('pg2').feature('glob1').set('linewidth', 'preference');
model.result('pg2').feature('glob1').set('expr', {});
model.result('pg2').feature('glob1').set('descr', {});
model.result('pg2').feature('glob1').set('expr', {'re.csurf_H_surf'});
model.result('pg2').feature('glob1').set('descr', {'Surface concentration'});
model.result('pg2').feature('glob1').set('expr', {'re.csurf_H_surf' 're.csurf_O_surf'});
model.result('pg2').feature('glob1').set('descr', {'Surface concentration' 'Surface concentration'});
model.result('pg2').feature('glob1').set('expr', {'re.csurf_H_surf' 're.csurf_O_surf' 're.csurf_OH_surf'});
model.result('pg2').feature('glob1').set('descr', {'Surface concentration' 'Surface concentration' 'Surface concentration'});
model.result('pg2').feature('glob1').set('expr', {'re.csurf_H_surf' 're.csurf_O_surf' 're.csurf_OH_surf' 're.csurf_H2O_surf'});
model.result('pg2').feature('glob1').set('descr', {'Surface concentration' 'Surface concentration' 'Surface concentration' 'Surface concentration'});
model.result('pg2').feature('glob1').set('expr', {'re.csurf_H_surf' 're.csurf_O_surf' 're.csurf_OH_surf' 're.csurf_H2O_surf' 're.csurf_Rh_surf'});
model.result('pg2').feature('glob1').set('descr', {'Surface concentration' 'Surface concentration' 'Surface concentration' 'Surface concentration' 'Surface concentration'});
model.result('pg2').set('xlog', true);
model.result('pg2').set('ylog', true);
model.result('pg2').run;

model.physics('re').create('sync1', 'ReactionToMph', -1);
model.physics('re').feature('sync1').set('massbalance', 'DilutedSpeciesInPorousCatalysts');
model.physics('re').feature('sync1').set('study', 'Transient');
model.physics('re').prop('synchronize').set('synchronize', '1');

model.modelNode.create('comp2', true);

model.physics('re').feature('sync1').set('model', {'comp2'});

model.geom.create('geom1', 3);
model.geom('geom1').model('comp2');
model.geom('geom1').axisymmetric(false);
model.geom('geom1').label('Geometry 1(3D)');

model.physics('re').feature('sync1').set('genom', {'geom1'});

model.mesh.create('mesh1', 'geom1');

model.study.create('std2');

model.physics('re').feature('sync1').set('studyname', {'std2'});

model.study('std2').create('time', 'Transient');

model.physics.create('chem1', 'Chemistry', 'geom1');
model.physics('chem1').model('comp2');
model.physics('re').feature('sync1').set('Chemistry', {'chem1'});
model.physics.create('tds', 'DilutedSpeciesInPorousCatalysts', 'geom1');
model.physics('tds').model('comp2');
model.physics('chem1').prop('TPFeatureInput').set('T_src', 'userdef');
model.physics('chem1').prop('TPFeatureInput').set('T', 'T_iso');
model.physics('chem1').prop('mixture').set('mixture', 'gas');
model.physics('chem1').prop('mixture').set('gasDensitySel', 'Automatic');
model.physics('chem1').prop('Activity').set('useActivity', '0');
model.physics('chem1').prop('chemkin').set('chemkin', '0');
model.physics('chem1').prop('ChemistryCommonProperty').set('VolumetricConcentrationGlobalActivityStandardState', '1[mol/m^3]');
model.physics('chem1').prop('ChemistryCommonProperty').set('SurfaceSpeciesConcentrationType', 'SurfaceConcentration');
model.physics('chem1').prop('ChemistryCommonProperty').set('SurfaceGlobalActivityStandardState', '1[mol/m^2]');
model.physics('chem1').prop('ChemistryCommonProperty').set('SpeciesrateUserDefinedList', {'N2'});
model.physics('chem1').prop('ChemistryCommonProperty').set('AdditionalSourceFeature', '0');
model.physics('chem1').prop('ActiveSpecies').set('SumActiveSpecies', '9');
model.physics('chem1').prop('ActiveSpecies').set('NumActiveVolumeSpecies', '4');
model.physics('chem1').prop('ActiveSpecies').set('NumActiveSurfaceSpecies', '5');
model.physics('chem1').prop('ActiveSpecies').set('NumActiveSurfaceSpeciesVariable', '5');
model.physics('chem1').prop('ActiveSpecies').set('surface', '1');
model.physics('chem1').prop('solventIsSet').set('solventIsSet', '1');
model.physics('chem1').prop('solventIsSet').set('solventTag', 'N2');
model.physics('chem1').create('rch1', 'ReactionChem');
model.physics('chem1').feature('rch1').set('rSequenceNo', '1');
model.physics('chem1').feature('rch1').set('formula', 'H2 + 2 Rh(ads) <=> 2 H(ads)');
model.physics('chem1').feature('rch1').set('updatechem', '0');
model.physics('chem1').feature('rch1').set('useArrhenius', '0');
model.physics('chem1').feature('rch1').set('kf', 'kf1');
model.physics('chem1').feature('rch1').set('bulkFwdOrder', '1');
model.physics('chem1').feature('rch1').set('surfFwdOrder', '2');
model.physics('chem1').feature('rch1').set('setKeq0', '0');
model.physics('chem1').feature('rch1').set('kr', 'kr1');
model.physics('chem1').feature('rch1').set('bulkRevOrder', '0');
model.physics('chem1').feature('rch1').set('surfRevOrder', '2');
model.physics('chem1').feature('rch1').label('1: Surface: H2 + 2 Rh(ads) <=> 2 H(ads)');
model.physics('chem1').feature('rch1').set('rClass', 'surface');
model.physics('chem1').create('rch2', 'ReactionChem');
model.physics('chem1').feature('rch2').set('rSequenceNo', '2');
model.physics('chem1').feature('rch2').set('formula', 'O2 + 2 Rh(ads) <=> 2 O(ads)');
model.physics('chem1').feature('rch2').set('updatechem', '0');
model.physics('chem1').feature('rch2').set('useArrhenius', '0');
model.physics('chem1').feature('rch2').set('kf', 'kf2');
model.physics('chem1').feature('rch2').set('bulkFwdOrder', '1');
model.physics('chem1').feature('rch2').set('surfFwdOrder', '2');
model.physics('chem1').feature('rch2').set('setKeq0', '0');
model.physics('chem1').feature('rch2').set('kr', 'kr2');
model.physics('chem1').feature('rch2').set('bulkRevOrder', '0');
model.physics('chem1').feature('rch2').set('surfRevOrder', '2');
model.physics('chem1').feature('rch2').label('2: Surface: O2 + 2 Rh(ads) <=> 2 O(ads)');
model.physics('chem1').feature('rch2').set('rClass', 'surface');
model.physics('chem1').create('rch3', 'ReactionChem');
model.physics('chem1').feature('rch3').set('rSequenceNo', '3');
model.physics('chem1').feature('rch3').set('formula', 'H2O + Rh(ads) <=> H2O(ads)');
model.physics('chem1').feature('rch3').set('updatechem', '0');
model.physics('chem1').feature('rch3').set('useArrhenius', '0');
model.physics('chem1').feature('rch3').set('kf', 'kf3');
model.physics('chem1').feature('rch3').set('bulkFwdOrder', '1');
model.physics('chem1').feature('rch3').set('surfFwdOrder', '1');
model.physics('chem1').feature('rch3').set('setKeq0', '0');
model.physics('chem1').feature('rch3').set('kr', 'kr3');
model.physics('chem1').feature('rch3').set('bulkRevOrder', '0');
model.physics('chem1').feature('rch3').set('surfRevOrder', '1');
model.physics('chem1').feature('rch3').label('3: Surface: H2O + Rh(ads) <=> H2O(ads)');
model.physics('chem1').feature('rch3').set('rClass', 'surface');
model.physics('chem1').create('rch4', 'ReactionChem');
model.physics('chem1').feature('rch4').set('rSequenceNo', '4');
model.physics('chem1').feature('rch4').set('formula', 'O(ads) + H(ads) <=> OH(ads) + Rh(ads)');
model.physics('chem1').feature('rch4').set('updatechem', '0');
model.physics('chem1').feature('rch4').set('useArrhenius', '0');
model.physics('chem1').feature('rch4').set('kf', 'kf4');
model.physics('chem1').feature('rch4').set('bulkFwdOrder', '0');
model.physics('chem1').feature('rch4').set('surfFwdOrder', '2');
model.physics('chem1').feature('rch4').set('setKeq0', '0');
model.physics('chem1').feature('rch4').set('kr', 'kr4');
model.physics('chem1').feature('rch4').set('bulkRevOrder', '0');
model.physics('chem1').feature('rch4').set('surfRevOrder', '2');
model.physics('chem1').feature('rch4').label('4: Surface: O(ads) + H(ads) <=> OH(ads) + Rh(ads)');
model.physics('chem1').feature('rch4').set('rClass', 'surface');
model.physics('chem1').create('rch5', 'ReactionChem');
model.physics('chem1').feature('rch5').set('rSequenceNo', '5');
model.physics('chem1').feature('rch5').set('formula', 'OH(ads) + H(ads) <=> H2O(ads) + Rh(ads)');
model.physics('chem1').feature('rch5').set('updatechem', '0');
model.physics('chem1').feature('rch5').set('useArrhenius', '0');
model.physics('chem1').feature('rch5').set('kf', 'kf5');
model.physics('chem1').feature('rch5').set('bulkFwdOrder', '0');
model.physics('chem1').feature('rch5').set('surfFwdOrder', '2');
model.physics('chem1').feature('rch5').set('setKeq0', '0');
model.physics('chem1').feature('rch5').set('kr', 'kr5');
model.physics('chem1').feature('rch5').set('bulkRevOrder', '0');
model.physics('chem1').feature('rch5').set('surfRevOrder', '2');
model.physics('chem1').feature('rch5').label('5: Surface: OH(ads) + H(ads) <=> H2O(ads) + Rh(ads)');
model.physics('chem1').feature('rch5').set('rClass', 'surface');
model.physics('chem1').create('rch6', 'ReactionChem');
model.physics('chem1').feature('rch6').set('rSequenceNo', '6');
model.physics('chem1').feature('rch6').set('formula', '2 OH(ads) <=> O(ads) + H2O(ads)');
model.physics('chem1').feature('rch6').set('updatechem', '0');
model.physics('chem1').feature('rch6').set('useArrhenius', '0');
model.physics('chem1').feature('rch6').set('kf', 'kf6');
model.physics('chem1').feature('rch6').set('bulkFwdOrder', '0');
model.physics('chem1').feature('rch6').set('surfFwdOrder', '2');
model.physics('chem1').feature('rch6').set('setKeq0', '0');
model.physics('chem1').feature('rch6').set('kr', 'kr6');
model.physics('chem1').feature('rch6').set('bulkRevOrder', '0');
model.physics('chem1').feature('rch6').set('surfRevOrder', '2');
model.physics('chem1').feature('rch6').label('6: Surface: 2 OH(ads) <=> O(ads) + H2O(ads)');
model.physics('chem1').feature('rch6').set('rClass', 'surface');
model.physics('chem1').feature('H2').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('H2').set('sisDef', '1');
model.physics('chem1').feature('H2').set('specLabel', 'H2');
model.physics('chem1').feature('H2').set('speciesNameInput', 'H2');
model.physics('chem1').feature('H2').set('specName', 'H2');
model.physics('chem1').feature('H2').set('enableChemicalFormulaCheckbox', '1');
model.physics('chem1').feature('H2').set('chemicalFormula', 'H2');
model.physics('chem1').feature('H2').set('sType', 'volumetric');
model.physics('chem1').feature('H2').set('M', '2.01596[g/mol]');
model.physics('chem1').feature('H2').set('z', '0');
model.physics('chem1').feature('H2').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('H2').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('H2').set('mu', '0[C*m]');
model.physics('chem1').feature('H2').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('H2').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('H2').set('ActivityCoefficient', '1');
model.physics('chem1').feature('H2').set('cLock', '0');
model.physics('chem1').feature('H2').set('Dependent', '0');
model.physics('chem1').feature('H2').set('dependent', '0');
model.physics('chem1').feature('H2').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('H2').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('H2').set('Tlo', '300[K]');
model.physics('chem1').feature('H2').set('Tmid', '1000[K]');
model.physics('chem1').feature('H2').set('Thi', '5000[K]');
model.physics('chem1').feature('H2').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('H2').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('H2').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('H2').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('H2').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('H2').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('H2').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('H2').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('H2').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('H2').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('H2').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('H2').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('H2').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('H2').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').feature('Rh_surf').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('Rh_surf').set('sisDef', '1');
model.physics('chem1').feature('Rh_surf').set('specLabel', 'Rh(ads)');
model.physics('chem1').feature('Rh_surf').set('speciesNameInput', 'Rh(ads)');
model.physics('chem1').feature('Rh_surf').set('specName', 'Rh(ads)');
model.physics('chem1').feature('Rh_surf').set('enableChemicalFormulaCheckbox', '1');
model.physics('chem1').feature('Rh_surf').set('chemicalFormula', 'Rh(ads)');
model.physics('chem1').feature('Rh_surf').set('sType', 'surface');
model.physics('chem1').feature('Rh_surf').set('M', '102.90549[g/mol]');
model.physics('chem1').feature('Rh_surf').set('z', '0');
model.physics('chem1').feature('Rh_surf').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('Rh_surf').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('Rh_surf').set('mu', '0[C*m]');
model.physics('chem1').feature('Rh_surf').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('Rh_surf').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('Rh_surf').set('ActivityCoefficient', '1');
model.physics('chem1').feature('Rh_surf').set('cLock', '0');
model.physics('chem1').feature('Rh_surf').set('Dependent', '0');
model.physics('chem1').feature('Rh_surf').set('dependent', '2');
model.physics('chem1').feature('Rh_surf').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('Rh_surf').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('Rh_surf').set('Tlo', '300[K]');
model.physics('chem1').feature('Rh_surf').set('Tmid', '1000[K]');
model.physics('chem1').feature('Rh_surf').set('Thi', '5000[K]');
model.physics('chem1').feature('Rh_surf').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('Rh_surf').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('Rh_surf').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('Rh_surf').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('Rh_surf').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('Rh_surf').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('Rh_surf').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('Rh_surf').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('Rh_surf').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('Rh_surf').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('Rh_surf').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('Rh_surf').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('Rh_surf').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('Rh_surf').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').feature('H_surf').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('H_surf').set('sisDef', '1');
model.physics('chem1').feature('H_surf').set('specLabel', 'H(ads)');
model.physics('chem1').feature('H_surf').set('speciesNameInput', 'H(ads)');
model.physics('chem1').feature('H_surf').set('specName', 'H(ads)');
model.physics('chem1').feature('H_surf').set('enableChemicalFormulaCheckbox', '1');
model.physics('chem1').feature('H_surf').set('chemicalFormula', 'H(ads)');
model.physics('chem1').feature('H_surf').set('sType', 'surface');
model.physics('chem1').feature('H_surf').set('M', '1.00798[g/mol]');
model.physics('chem1').feature('H_surf').set('z', '0');
model.physics('chem1').feature('H_surf').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('H_surf').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('H_surf').set('mu', '0[C*m]');
model.physics('chem1').feature('H_surf').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('H_surf').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('H_surf').set('ActivityCoefficient', '1');
model.physics('chem1').feature('H_surf').set('cLock', '0');
model.physics('chem1').feature('H_surf').set('Dependent', '0');
model.physics('chem1').feature('H_surf').set('dependent', '2');
model.physics('chem1').feature('H_surf').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('H_surf').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('H_surf').set('Tlo', '300[K]');
model.physics('chem1').feature('H_surf').set('Tmid', '1000[K]');
model.physics('chem1').feature('H_surf').set('Thi', '5000[K]');
model.physics('chem1').feature('H_surf').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('H_surf').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('H_surf').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('H_surf').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('H_surf').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('H_surf').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('H_surf').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('H_surf').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('H_surf').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('H_surf').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('H_surf').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('H_surf').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('H_surf').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('H_surf').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').feature('O2').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('O2').set('sisDef', '1');
model.physics('chem1').feature('O2').set('specLabel', 'O2');
model.physics('chem1').feature('O2').set('speciesNameInput', 'O2');
model.physics('chem1').feature('O2').set('specName', 'O2');
model.physics('chem1').feature('O2').set('enableChemicalFormulaCheckbox', '1');
model.physics('chem1').feature('O2').set('chemicalFormula', 'O2');
model.physics('chem1').feature('O2').set('sType', 'volumetric');
model.physics('chem1').feature('O2').set('M', '31.9988[g/mol]');
model.physics('chem1').feature('O2').set('z', '0');
model.physics('chem1').feature('O2').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('O2').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('O2').set('mu', '0[C*m]');
model.physics('chem1').feature('O2').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('O2').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('O2').set('ActivityCoefficient', '1');
model.physics('chem1').feature('O2').set('cLock', '0');
model.physics('chem1').feature('O2').set('Dependent', '0');
model.physics('chem1').feature('O2').set('dependent', '0');
model.physics('chem1').feature('O2').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('O2').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('O2').set('Tlo', '300[K]');
model.physics('chem1').feature('O2').set('Tmid', '1000[K]');
model.physics('chem1').feature('O2').set('Thi', '5000[K]');
model.physics('chem1').feature('O2').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('O2').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('O2').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('O2').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('O2').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('O2').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('O2').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('O2').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('O2').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('O2').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('O2').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('O2').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('O2').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('O2').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').feature('O_surf').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('O_surf').set('sisDef', '1');
model.physics('chem1').feature('O_surf').set('specLabel', 'O(ads)');
model.physics('chem1').feature('O_surf').set('speciesNameInput', 'O(ads)');
model.physics('chem1').feature('O_surf').set('specName', 'O(ads)');
model.physics('chem1').feature('O_surf').set('enableChemicalFormulaCheckbox', '1');
model.physics('chem1').feature('O_surf').set('chemicalFormula', 'O(ads)');
model.physics('chem1').feature('O_surf').set('sType', 'surface');
model.physics('chem1').feature('O_surf').set('M', '15.9994[g/mol]');
model.physics('chem1').feature('O_surf').set('z', '0');
model.physics('chem1').feature('O_surf').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('O_surf').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('O_surf').set('mu', '0[C*m]');
model.physics('chem1').feature('O_surf').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('O_surf').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('O_surf').set('ActivityCoefficient', '1');
model.physics('chem1').feature('O_surf').set('cLock', '0');
model.physics('chem1').feature('O_surf').set('Dependent', '0');
model.physics('chem1').feature('O_surf').set('dependent', '2');
model.physics('chem1').feature('O_surf').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('O_surf').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('O_surf').set('Tlo', '300[K]');
model.physics('chem1').feature('O_surf').set('Tmid', '1000[K]');
model.physics('chem1').feature('O_surf').set('Thi', '5000[K]');
model.physics('chem1').feature('O_surf').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('O_surf').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('O_surf').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('O_surf').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('O_surf').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('O_surf').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('O_surf').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('O_surf').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('O_surf').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('O_surf').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('O_surf').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('O_surf').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('O_surf').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('O_surf').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').feature('H2O').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('H2O').set('sisDef', '1');
model.physics('chem1').feature('H2O').set('specLabel', 'H2O');
model.physics('chem1').feature('H2O').set('speciesNameInput', 'H2O');
model.physics('chem1').feature('H2O').set('specName', 'H2O');
model.physics('chem1').feature('H2O').set('enableChemicalFormulaCheckbox', '1');
model.physics('chem1').feature('H2O').set('chemicalFormula', 'H2O');
model.physics('chem1').feature('H2O').set('sType', 'volumetric');
model.physics('chem1').feature('H2O').set('M', '18.01536[g/mol]');
model.physics('chem1').feature('H2O').set('z', '0');
model.physics('chem1').feature('H2O').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('H2O').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('H2O').set('mu', '0[C*m]');
model.physics('chem1').feature('H2O').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('H2O').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('H2O').set('ActivityCoefficient', '1');
model.physics('chem1').feature('H2O').set('cLock', '0');
model.physics('chem1').feature('H2O').set('Dependent', '0');
model.physics('chem1').feature('H2O').set('dependent', '0');
model.physics('chem1').feature('H2O').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('H2O').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('H2O').set('Tlo', '300[K]');
model.physics('chem1').feature('H2O').set('Tmid', '1000[K]');
model.physics('chem1').feature('H2O').set('Thi', '5000[K]');
model.physics('chem1').feature('H2O').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('H2O').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('H2O').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('H2O').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('H2O').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('H2O').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('H2O').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('H2O').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('H2O').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('H2O').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('H2O').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('H2O').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('H2O').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('H2O').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').feature('H2O_surf').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('H2O_surf').set('sisDef', '1');
model.physics('chem1').feature('H2O_surf').set('specLabel', 'H2O(ads)');
model.physics('chem1').feature('H2O_surf').set('speciesNameInput', 'H2O(ads)');
model.physics('chem1').feature('H2O_surf').set('specName', 'H2O(ads)');
model.physics('chem1').feature('H2O_surf').set('enableChemicalFormulaCheckbox', '1');
model.physics('chem1').feature('H2O_surf').set('chemicalFormula', 'H2O(ads)');
model.physics('chem1').feature('H2O_surf').set('sType', 'surface');
model.physics('chem1').feature('H2O_surf').set('M', '18.01536[g/mol]');
model.physics('chem1').feature('H2O_surf').set('z', '0');
model.physics('chem1').feature('H2O_surf').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('H2O_surf').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('H2O_surf').set('mu', '0[C*m]');
model.physics('chem1').feature('H2O_surf').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('H2O_surf').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('H2O_surf').set('ActivityCoefficient', '1');
model.physics('chem1').feature('H2O_surf').set('cLock', '0');
model.physics('chem1').feature('H2O_surf').set('Dependent', '0');
model.physics('chem1').feature('H2O_surf').set('dependent', '2');
model.physics('chem1').feature('H2O_surf').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('H2O_surf').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('H2O_surf').set('Tlo', '300[K]');
model.physics('chem1').feature('H2O_surf').set('Tmid', '1000[K]');
model.physics('chem1').feature('H2O_surf').set('Thi', '5000[K]');
model.physics('chem1').feature('H2O_surf').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('H2O_surf').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('H2O_surf').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('H2O_surf').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('H2O_surf').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('H2O_surf').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('H2O_surf').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('H2O_surf').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('H2O_surf').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('H2O_surf').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('H2O_surf').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('H2O_surf').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('H2O_surf').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('H2O_surf').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').feature('OH_surf').set('SpeciesSource', 'Reaction');
model.physics('chem1').feature('OH_surf').set('sisDef', '1');
model.physics('chem1').feature('OH_surf').set('specLabel', 'OH(ads)');
model.physics('chem1').feature('OH_surf').set('speciesNameInput', 'OH(ads)');
model.physics('chem1').feature('OH_surf').set('specName', 'OH(ads)');
model.physics('chem1').feature('OH_surf').set('enableChemicalFormulaCheckbox', '1');
model.physics('chem1').feature('OH_surf').set('chemicalFormula', 'OH(ads)');
model.physics('chem1').feature('OH_surf').set('sType', 'surface');
model.physics('chem1').feature('OH_surf').set('M', '17.00738[g/mol]');
model.physics('chem1').feature('OH_surf').set('z', '0');
model.physics('chem1').feature('OH_surf').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('OH_surf').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('OH_surf').set('mu', '0[C*m]');
model.physics('chem1').feature('OH_surf').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('OH_surf').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('OH_surf').set('ActivityCoefficient', '1');
model.physics('chem1').feature('OH_surf').set('cLock', '0');
model.physics('chem1').feature('OH_surf').set('Dependent', '0');
model.physics('chem1').feature('OH_surf').set('dependent', '2');
model.physics('chem1').feature('OH_surf').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('OH_surf').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('OH_surf').set('Tlo', '300[K]');
model.physics('chem1').feature('OH_surf').set('Tmid', '1000[K]');
model.physics('chem1').feature('OH_surf').set('Thi', '5000[K]');
model.physics('chem1').feature('OH_surf').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('OH_surf').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('OH_surf').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('OH_surf').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('OH_surf').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('OH_surf').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('OH_surf').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('OH_surf').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('OH_surf').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('OH_surf').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('OH_surf').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('OH_surf').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('OH_surf').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('OH_surf').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').create('N2', 'SpeciesChem');
model.physics('chem1').feature('N2').set('SpeciesSource', 'FreeSpecies');
model.physics('chem1').feature('N2').set('sisDef', '1');
model.physics('chem1').feature('N2').set('specLabel', 'N2');
model.physics('chem1').feature('N2').set('speciesNameInput', 'N2');
model.physics('chem1').feature('N2').set('specName', 'N2');
model.physics('chem1').feature('N2').set('enableChemicalFormulaCheckbox', '1');
model.physics('chem1').feature('N2').set('chemicalFormula', 'N2');
model.physics('chem1').feature('N2').label('Species: N2');
model.physics('chem1').feature('N2').active(true);
model.physics('chem1').feature('N2').set('sType', 'solvent');
model.physics('chem1').feature('N2').set('M', '28.0137[g/mol]');
model.physics('chem1').feature('N2').set('z', '0');
model.physics('chem1').feature('N2').set('sigma', '3.458[angstrom]');
model.physics('chem1').feature('N2').set('epsilonkb', '107.4[K]');
model.physics('chem1').feature('N2').set('mu', '0[C*m]');
model.physics('chem1').feature('N2').set('rho', '1000[kg/m^3]');
model.physics('chem1').feature('N2').set('k', '0.02[W/(m*K)]');
model.physics('chem1').feature('N2').set('ActivityCoefficient', '1');
model.physics('chem1').feature('N2').set('cLock', '1');
model.physics('chem1').feature('N2').set('Dependent', '0');
model.physics('chem1').feature('N2').set('dependent', '0');
model.physics('chem1').feature('N2').set('SpeciesrateSelection', 'Automatic');
model.physics('chem1').feature('N2').set('speciesEnthalpy', 'NASA');
model.physics('chem1').feature('N2').set('Tlo', '300[K]');
model.physics('chem1').feature('N2').set('Tmid', '1000[K]');
model.physics('chem1').feature('N2').set('Thi', '5000[K]');
model.physics('chem1').feature('N2').set('SpeciesThermoaLo1', {'0'});
model.physics('chem1').feature('N2').set('SpeciesThermoaLo2', {'0'});
model.physics('chem1').feature('N2').set('SpeciesThermoaLo3', {'0'});
model.physics('chem1').feature('N2').set('SpeciesThermoaLo4', {'0'});
model.physics('chem1').feature('N2').set('SpeciesThermoaLo5', {'0'});
model.physics('chem1').feature('N2').set('SpeciesThermoaLo6', {'0'});
model.physics('chem1').feature('N2').set('SpeciesThermoaLo7', {'0'});
model.physics('chem1').feature('N2').set('SpeciesThermoaHi1', {'0'});
model.physics('chem1').feature('N2').set('SpeciesThermoaHi2', {'0'});
model.physics('chem1').feature('N2').set('SpeciesThermoaHi3', {'0'});
model.physics('chem1').feature('N2').set('SpeciesThermoaHi4', {'0'});
model.physics('chem1').feature('N2').set('SpeciesThermoaHi5', {'0'});
model.physics('chem1').feature('N2').set('SpeciesThermoaHi6', {'0'});
model.physics('chem1').feature('N2').set('SpeciesThermoaHi7', {'0'});
model.physics('chem1').prop('simpropChem').set('rSequenceNo', '6');
model.physics('chem1').prop('simpropChem').set('sSequenceNo', '9');
model.physics('chem1').prop('mixture').set('hasPropertyPackage', '0');
model.physics('chem1').prop('mixture').set('PropertyPackage', '');
model.physics('chem1').prop('mixture').set('Thermodynamics', '0');
model.physics('tds').field('concentration').component({'cH2' 'cH2O' 'cO2'});
model.physics('tds').feature('cat1').set('enableAdsorption', true);
model.physics('tds').feature('cat1').setIndex('species', true, 0);
model.physics('tds').feature('cat1').setIndex('species', true, 1);
model.physics('tds').feature('cat1').setIndex('species', true, 2);
model.physics('tds').feature('cat1').feature.create('srcc1', 'SurfaceReactionCatalyst');
model.physics('tds').feature('cat1').feature('fluid1').set('DiffusionCoefficientSource', 'chem');
model.physics('tds').feature('cat1').set('SurfaceSpecies', {'H' 'H2O' 'O' 'OH' 'Rh'});
model.physics('tds').feature('cat1').set('M', {'comp2.chem.M_H_surf' 'comp2.chem.M_H2O_surf' 'comp2.chem.M_O_surf' 'comp2.chem.M_OH_surf' 'comp2.chem.M_Rh_surf'});
model.physics('tds').feature('cat1').set('initialValues', {'1e-5[mol/m^2]' '1e-5[mol/m^2]' '1e-5[mol/m^2]' '1e-5[mol/m^2]' '1e-5[mol/m^2]'});
model.physics('tds').feature('cat1').set('Sarea', 'cat_area');
model.physics('tds').feature('cat1').feature('srcc1').set('Rsurf_cH2_src', 'root.comp2.chem.Rsurf_H2');
model.physics('tds').feature('cat1').feature('srcc1').set('Rsurf_cH2O_src', 'root.comp2.chem.Rsurf_H2O');
model.physics('tds').feature('cat1').feature('srcc1').set('Rsurf_cO2_src', 'root.comp2.chem.Rsurf_O2');
model.physics('tds').feature('cat1').feature('srcc1').setIndex('Rssurf_src', 'comp2.chem.R_H_surf', 0, 0);
model.physics('tds').feature('cat1').feature('srcc1').setIndex('Rssurf_src', 'comp2.chem.R_H2O_surf', 1, 0);
model.physics('tds').feature('cat1').feature('srcc1').setIndex('Rssurf_src', 'comp2.chem.R_O_surf', 2, 0);
model.physics('tds').feature('cat1').feature('srcc1').setIndex('Rssurf_src', 'comp2.chem.R_OH_surf', 3, 0);
model.physics('tds').feature('cat1').feature('srcc1').setIndex('Rssurf_src', 'comp2.chem.R_Rh_surf', 4, 0);
model.physics('tds').feature('init1').set('initc', {'c0H2_inflow' '0' 'c0O2_inflow'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('MassTransfer', 'tds');
model.physics('chem1').prop('ChemistryModelInputParameter').set('ConcentrationInput', {'cH2' 'cH2O' 'UserDefined' 'cO2'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('ConcentrationValue', {'Solved for' 'Solved for' 'c0N2' 'Solved for'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('uselog', {'cH2' 'cH2O' 'c0N2' 'cO2'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('SolidConcentration', {});
model.physics('chem1').prop('ChemistryModelInputParameter').set('csurf', {'tds.csurf_H' 'tds.csurf_H2O' 'tds.csurf_O' 'tds.csurf_OH' 'tds.csurf_Rh'});
model.physics('chem1').prop('ChemistryModelInputParameter').set('AqueousSpeciesConcentration', {});
model.physics('tds').feature('sp1').set('z', {'0' '0' '0'});
model.physics('tds').feature('cat1').feature('fluid1').set('DiffusionCoefficientSource', 'chem');
model.physics('tds').feature('cat1').feature('fluid1').set('Dchem_cH2_src', 'userdef');
model.physics('tds').feature('cat1').feature('fluid1').set('Dchem_cH2O_src', 'userdef');
model.physics('tds').feature('cat1').feature('fluid1').set('Dchem_cO2_src', 'userdef');
model.physics('re').feature('sync1').set('geomToUse', 'geom1');
model.physics('re').feature('sync1').set('massbalance', 'tds');
model.physics('re').feature('sync1').set('genom', {'geom1'});
model.physics('re').feature('sync1').set('studyname', {'std2'});
model.physics('chem1').prop('StudyStep').set('StudyStep', 'std2/time');
model.physics('chem1').feature('dcont1').set('StudyStep', 'std2/time');
model.physics('chem1').feature('rch1').set('StudyStep', 'std2/time');
model.physics('chem1').feature('H2').set('StudyStep', 'std2/time');
model.physics('chem1').feature('Rh_surf').set('StudyStep', 'std2/time');
model.physics('chem1').feature('H_surf').set('StudyStep', 'std2/time');
model.physics('chem1').feature('rch2').set('StudyStep', 'std2/time');
model.physics('chem1').feature('O2').set('StudyStep', 'std2/time');
model.physics('chem1').feature('O_surf').set('StudyStep', 'std2/time');
model.physics('chem1').feature('rch3').set('StudyStep', 'std2/time');
model.physics('chem1').feature('H2O').set('StudyStep', 'std2/time');
model.physics('chem1').feature('H2O_surf').set('StudyStep', 'std2/time');
model.physics('chem1').feature('rch4').set('StudyStep', 'std2/time');
model.physics('chem1').feature('OH_surf').set('StudyStep', 'std2/time');
model.physics('chem1').feature('rch5').set('StudyStep', 'std2/time');
model.physics('chem1').feature('rch6').set('StudyStep', 'std2/time');
model.physics('chem1').feature('N2').set('StudyStep', 'std2/time');
model.physics('tds').prop('StudyStep').set('StudyStep', 'std2/time');
model.physics('tds').feature('sp1').set('StudyStep', 'std2/time');
model.physics('tds').feature('cat1').set('StudyStep', 'std2/time');
model.physics('tds').feature('nflx1').set('StudyStep', 'std2/time');
model.physics('tds').feature('init1').set('StudyStep', 'std2/time');
model.physics('tds').feature('dcont1').set('StudyStep', 'std2/time');

model.study('std1').feature('time').setSolveFor('/physics/chem1', false);
model.study('std1').feature('time').setSolveFor('/physics/tds', false);
model.study('std2').feature('time').setSolveFor('/physics/re', false);

model.param.create('par2');
model.param('par2').label('Parameters 2, catalyst');

% To import content from file, use:
% model.param('par2').loadFile('FILENAME');
model.param('par2').set('do_reac', '12[mm]', 'Outer diameter, reactor');
model.param('par2').set('do_needle', '4[mm]', 'Outer diameter, needle');
model.param('par2').set('wt_needle', '0.5[mm]', 'Wall thickness, needle');
model.param('par2').set('wt_reac', '0.8[mm]', 'Wall thickness, reactor');
model.param('par2').set('v_inlet', '20[cm/s]', 'Inlet velocity');
model.param('par2').set('klH2_ads', '0.3[m^3/mol]', 'Langmuir constant, A');
model.param('par2').set('cplH2_ads', '0.02[mol/kg]', 'Adsorption maximum, A');
model.param('par2').set('kfH2_ads', '2e-2[1/s]', 'Mass transfer constant, A');
model.param('par2').set('klO2_ads', '0.2[m^3/mol]', 'Langmuir constant, B');
model.param('par2').set('cplO2_ads', '0.01[mol/kg]', 'Adsorption maximum, B');
model.param('par2').set('kfO2_ads', '2e-2[1/s]', 'Mass transfer constant, B');
model.param('par2').set('klH2O_ads', '0.1[m^3/mol]', 'Langmuir constant, C');
model.param('par2').set('cplH2O_ads', '0.01[mol/kg]', 'Adsorption maximum, C');
model.param('par2').set('kfH2O_ads', '1e-2[1/s]', 'Mass transfer constant, C');
model.param('par2').set('cH2_ads_scale', '5e-7[mol/m^2]', 'Initial concentration, absorbed species');
model.param('par2').set('cH2O_ads_scale', '1e-12[mol/m^2]', 'Initial concentration, absorbed species');
model.param('par2').set('cO2_ads_scale', '5e-9[mol/m^2]', 'Initial concentration, absorbed species');
model.param('par2').set('cH_surf_scale', '1E-6[mol/m^2]', 'Initial concentration, surface species');
model.param('par2').set('cO_surf_scale', '1E-8[mol/m^2]', 'Initial concentration, surface species');
model.param('par2').set('cOH_surf_scale', '1E-11[mol/m^2]', 'Initial concentration, surface species');
model.param('par2').set('cRh_surf_scale', '2.7E-5[mol/m^2]', 'Initial concentration, surface species');

model.geom('geom1').run;
model.geom('geom1').lengthUnit('mm');
model.geom('geom1').create('cyl1', 'Cylinder');
model.geom('geom1').feature('cyl1').set('r', 'do_reac/2');
model.geom('geom1').feature('cyl1').set('h', '5*do_reac');
model.geom('geom1').feature('cyl1').set('axistype', 'cartesian');
model.geom('geom1').feature('cyl1').set('ax3', [1 0 0]);
model.geom('geom1').feature('cyl1').setIndex('layername', 'Layer 1', 0);
model.geom('geom1').feature('cyl1').setIndex('layer', 'wt_reac', 0);
model.geom('geom1').run('cyl1');
model.geom('geom1').create('cyl2', 'Cylinder');
model.geom('geom1').feature('cyl2').set('r', 'do_reac/2-wt_reac');
model.geom('geom1').feature('cyl2').set('h', '0.7*do_reac');
model.geom('geom1').feature('cyl2').set('pos', {'3*do_reac' '0' '0'});
model.geom('geom1').feature('cyl2').set('axistype', 'cartesian');
model.geom('geom1').feature('cyl2').set('ax3', [1 0 0]);
model.geom('geom1').run('cyl2');
model.geom('geom1').create('cyl3', 'Cylinder');
model.geom('geom1').feature('cyl3').set('r', 'do_needle/2');
model.geom('geom1').feature('cyl3').set('h', 'do_reac');
model.geom('geom1').feature('cyl3').set('pos', {'2.7*do_reac/2' '0' '0'});
model.geom('geom1').feature('cyl3').setIndex('layername', 'Layer 1', 0);
model.geom('geom1').feature('cyl3').setIndex('layer', 'wt_needle', 0);
model.geom('geom1').run('cyl3');
model.geom('geom1').create('dif1', 'Difference');
model.geom('geom1').feature('dif1').selection('input').set({'cyl1'});
model.geom('geom1').feature('dif1').selection('input2').set({'cyl3'});
model.geom('geom1').feature('dif1').set('keepsubtract', true);
model.geom('geom1').run('dif1');
model.geom('geom1').create('uni1', 'Union');
model.geom('geom1').feature('uni1').selection('input').set({'cyl2' 'cyl3' 'dif1'});
model.geom('geom1').run('uni1');
model.geom('geom1').create('blk1', 'Block');
model.geom('geom1').feature('blk1').set('size', {'5*do_reac' '2*do_reac' '1'});
model.geom('geom1').feature('blk1').setIndex('size', '3*do_reac', 2);
model.geom('geom1').feature('blk1').set('pos', {'0' '-2*do_reac' '0'});
model.geom('geom1').feature('blk1').setIndex('pos', '-1.5*do_reac', 2);
model.geom('geom1').run('blk1');
model.geom('geom1').create('dif2', 'Difference');
model.geom('geom1').feature('dif2').selection('input').set({'uni1'});
model.geom('geom1').feature('dif2').selection('input2').set({'blk1'});
model.geom('geom1').run('fin');
model.geom('geom1').create('mcf1', 'MeshControlFaces');
model.geom('geom1').feature('mcf1').selection('input').set('fin', [19 20]);
model.geom('geom1').run('mcf1');
model.geom('geom1').create('igf1', 'IgnoreFaces');
model.geom('geom1').feature('igf1').selection('input').set('mcf1', [11 20]);
model.geom('geom1').run('igf1');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp2');
model.selection('sel1').label('Catalyst Bed');
model.selection('sel1').set([4]);
model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp2');
model.selection('sel2').label('Symmetry plane');
model.selection('sel2').geom(2);
model.selection('sel2').set([5 19 22]);
model.selection.create('sel3', 'Explicit');
model.selection('sel3').model('comp2');
model.selection('sel3').label('Inlet species O2');
model.selection('sel3').geom(2);
model.selection('sel3').set([4]);
model.selection.create('sel4', 'Explicit');
model.selection('sel4').model('comp2');
model.selection('sel4').label('Inlet species H2');
model.selection('sel4').geom(2);
model.selection('sel4').set([15]);
model.selection.create('sel5', 'Explicit');
model.selection('sel5').model('comp2');
model.selection('sel5').label('Outlet');
model.selection('sel5').geom(2);
model.selection('sel5').set([25]);
model.selection.create('cyl1', 'Cylinder');
model.selection('cyl1').model('comp2');
model.selection('cyl1').label('First Free-Porous Interface');
model.selection('cyl1').set('entitydim', 2);
model.selection('cyl1').set('top', '0.5*do_reac');
model.selection('cyl1').set('bottom', 0);
model.selection('cyl1').set('pos', {'2.5*do_reac' '0' '0'});
model.selection('cyl1').setIndex('pos', '0.25*do_reac', 1);
model.selection('cyl1').set('axistype', 'x');
model.selection.create('sel6', 'Explicit');
model.selection('sel6').model('comp2');
model.selection('sel6').label('Free Flow Domains');
model.selection('sel6').set([2 5]);
model.selection.create('uni1', 'Union');
model.selection('uni1').model('comp2');
model.selection('uni1').label('Free and Porous Media Domains');
model.selection('uni1').set('input', {'sel1' 'sel6'});
model.selection.create('adj1', 'Adjacent');
model.selection('adj1').model('comp2');
model.selection('adj1').label('Solid Domains');
model.selection('adj1').set('input', {'uni1'});
model.selection('adj1').set('outputdim', 3);
model.selection.create('adj2', 'Adjacent');
model.selection('adj2').model('comp2');
model.selection('adj2').label('Solid Bnds');
model.selection('adj2').set('input', {'adj1'});
model.selection.create('adj3', 'Adjacent');
model.selection('adj3').model('comp2');
model.selection('adj3').label('Porous Bed Bnds');
model.selection('adj3').set('input', {'sel1'});
model.selection.create('dif1', 'Difference');
model.selection('dif1').model('comp2');
model.selection('dif1').label('Outer Bnds');
model.selection('dif1').set('entitydim', 2);
model.selection('dif1').set('add', {'adj2'});
model.selection('dif1').set('subtract', {'adj3'});
model.selection.create('sel7', 'Explicit');
model.selection('sel7').model('comp2');
model.selection('sel7').label('Bed Bnds');
model.selection('sel7').geom(2);
model.selection('sel7').set([18 20 21]);

model.physics.create('br', 'PorousMediaFlowBrinkman', 'geom1');
model.physics('br').model('comp2');

model.study('std1').feature('time').setSolveFor('/physics/br', true);
model.study('std2').feature('time').setSolveFor('/physics/br', true);

model.material.create('mat1', 'Common', 'comp2');
model.material('mat1').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('rho', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat1').propertyGroup.create('idealGas', 'Ideal gas');
model.material('mat1').propertyGroup('idealGas').func.create('Cp', 'Piecewise');
model.material('mat1').label('Nitrogen');
model.material('mat1').set('family', 'air');
model.material('mat1').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('eta').set('pieces', {'200.0' '1200.0' '1.77230303E-6+6.27427545E-8*T^1-3.47278555E-11*T^2+1.01243201E-14*T^3'});
model.material('mat1').propertyGroup('def').func('eta').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('Cp').set('pieces', {'200.0' '1200.0' '1088.22121-0.365941919*T^1+7.88715035E-4*T^2-3.749223E-7*T^3+3.17599068E-11*T^4'});
model.material('mat1').propertyGroup('def').func('Cp').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('def').func('rho').set('expr', 'pA*0.02801/R_const[K*mol/J]/T');
model.material('mat1').propertyGroup('def').func('rho').set('args', {'pA' 'T'});
model.material('mat1').propertyGroup('def').func('rho').set('dermethod', 'manual');
model.material('mat1').propertyGroup('def').func('rho').set('argders', {'pA' 'd(pA*0.02801/R_const/T,pA)'; 'T' 'd(pA*0.02801/R_const/T,T)'});
model.material('mat1').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.material('mat1').propertyGroup('def').func('rho').set('argunit', {'Pa' 'K'});
model.material('mat1').propertyGroup('def').func('rho').set('plotaxis', {'off' 'on'});
model.material('mat1').propertyGroup('def').func('rho').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat1').propertyGroup('def').func('rho').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '293.15'});
model.material('mat1').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('k').set('pieces', {'200.0' '1200.0' '3.6969697E-4+9.74353924E-5*T^1-4.07587413E-8*T^2+7.68453768E-12*T^3'});
model.material('mat1').propertyGroup('def').func('k').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.material('mat1').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.material('mat1').propertyGroup('def').set('ratioofspecificheat', '1.4');
model.material('mat1').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.material('mat1').propertyGroup('def').set('density', 'rho(pA,T)');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.material('mat1').propertyGroup('def').addInput('temperature');
model.material('mat1').propertyGroup('def').addInput('pressure');
model.material('mat1').propertyGroup('idealGas').func('Cp').label('Piecewise 2');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('pieces', {'200.0' '1200.0' '1088.22121-0.365941919*T^1+7.88715035E-4*T^2-3.749223E-7*T^3+3.17599068E-11*T^4'});
model.material('mat1').propertyGroup('idealGas').func('Cp').set('argunit', 'K');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('idealGas').set('Rs', 'R_const/Mn');
model.material('mat1').propertyGroup('idealGas').set('heatcapacity', 'Cp(T)');
model.material('mat1').propertyGroup('idealGas').set('ratioofspecificheat', '1.4');
model.material('mat1').propertyGroup('idealGas').set('molarmass', '0.02801');
model.material('mat1').propertyGroup('idealGas').addInput('temperature');
model.material('mat1').propertyGroup('idealGas').addInput('pressure');
model.material.create('pmat1', 'PorousMedia', 'comp2');
model.material('pmat1').selection.set([4]);
model.material('pmat1').feature.create('fluid1', 'Fluid', 'comp2');
model.material('pmat1').feature('fluid1').set('link', 'mat1');
model.material('pmat1').feature.create('solid1', 'Solid', 'comp2');
model.material('pmat1').feature('solid1').set('vfrac', '0.7');
model.material('pmat1').feature('solid1').propertyGroup('def').set('density', {'2800'});
model.material('pmat1').propertyGroup('def').set('hydraulicpermeability', {'1e-9'});

model.multiphysics.create('rfd1', 'ReactingFlowDS', 'geom1', 3);

model.physics('tds').selection.named('uni1');
model.physics('tds').feature('cat1').setIndex('gamman0', 0, 0);
model.physics('tds').feature('cat1').setIndex('gamman0', 0, 1);
model.physics('tds').feature('cat1').setIndex('gamman0', 0, 2);
model.physics('tds').feature('cat1').set('SurfaceSpecies', {'H'; 'O'; 'OH'; 'Rh'});
model.physics('tds').feature('cat1').set('initialValues', {'1e-5[mol/m^2]'; '1e-5[mol/m^2]'; '1e-5[mol/m^2]'; '1e-5[mol/m^2]'});
model.physics('tds').feature('cat1').setIndex('initialValues', 'c0H_surf', 0, 0);
model.physics('tds').feature('cat1').setIndex('initialValues', 'c0O_surf', 1, 0);
model.physics('tds').feature('cat1').setIndex('initialValues', 'c0OH_surf', 2, 0);
model.physics('tds').feature('cat1').setIndex('initialValues', 'c0Rh_surf', 3, 0);
model.physics('tds').feature('cat1').feature('fluid1').set('Dchem_cH2_src', 'root.comp2.chem.DXX_H2');
model.physics('tds').feature('cat1').feature('fluid1').set('Dchem_cH2O_src', 'root.comp2.chem.DXX_H2O');
model.physics('tds').feature('cat1').feature('fluid1').set('Dchem_cO2_src', 'root.comp2.chem.DXX_O2');
model.physics('tds').feature('cat1').feature('fluid1').set('FluidDiffusivityModelType', 'BruggemanModel');
model.physics('tds').feature('cat1').feature('adsc1').setIndex('species', true, 0);
model.physics('tds').feature('cat1').feature('adsc1').setIndex('KL', 'klH2_ads', 0);
model.physics('tds').feature('cat1').feature('adsc1').setIndex('cPmax', 'cplH2_ads', 0);
model.physics('tds').feature('cat1').feature('adsc1').setIndex('hLDF', 'kfH2_ads', 0);
model.physics('tds').feature('cat1').feature('adsc1').setIndex('species', true, 1);
model.physics('tds').feature('cat1').feature('adsc1').setIndex('KL', 'klH2O_ads', 1);
model.physics('tds').feature('cat1').feature('adsc1').setIndex('cPmax', 'cplH2O_ads', 1);
model.physics('tds').feature('cat1').feature('adsc1').setIndex('hLDF', 'kfH2O_ads', 1);
model.physics('tds').feature('cat1').feature('adsc1').setIndex('species', true, 2);
model.physics('tds').feature('cat1').feature('adsc1').setIndex('KL', 'klO2_ads', 2);
model.physics('tds').feature('cat1').feature('adsc1').setIndex('cPmax', 'cplO2_ads', 2);
model.physics('tds').feature('cat1').feature('adsc1').setIndex('hLDF', 'kfO2_ads', 2);
model.physics('tds').feature('cat1').feature('srcc1').setIndex('Rsads_cH2O_src', 'root.comp2.chem.R_H2O_surf', 0);
model.physics('chem1').prop('ChemistryModelInputParameter').setIndex('csurf', 'tds.cads_cH2O', 1, 0);

model.variable.create('var1');
model.variable('var1').model('comp2');
model.variable('var1').label('Variables 1, bulk concentration defined from surface concentration');
model.variable('var1').selection.geom('geom1', 3);
model.variable('var1').selection.set([4]);

% To import content from file, use:
% model.variable('var1').loadFile('FILENAME');
model.variable('var1').set('cs_Rh', 'tds.csurf_Rh*cat_area');
model.variable('var1').set('cs_H', 'tds.csurf_H*cat_area');
model.variable('var1').set('cs_O', 'tds.csurf_O*cat_area');
model.variable('var1').set('cs_OH', 'tds.csurf_OH*cat_area');
model.variable('var1').set('cads_cH2', 'tds.cads_cH2*cat_area');
model.variable('var1').set('cads_cO2', 'tds.cads_cO2*cat_area');
model.variable('var1').set('cads_cH2O', 'tds.cads_cH2O*cat_area');

model.physics('tds').feature('init1').setIndex('initc', 0, 0);
model.physics('tds').feature('init1').setIndex('initc', 0, 2);
model.physics('tds').create('cdm1', 'ConvectionDiffusionMigration', 3);
model.physics('tds').feature('cdm1').selection.set([2 5]);
model.physics('tds').feature('cdm1').set('DiffusionCoefficientSource', 'chem');
model.physics('tds').feature('cdm1').set('Dchem_cH2_src', 'root.comp2.chem.DXX_H2');
model.physics('tds').feature('cdm1').set('Dchem_cH2O_src', 'root.comp2.chem.DXX_H2O');
model.physics('tds').feature('cdm1').set('Dchem_cO2_src', 'root.comp2.chem.DXX_O2');
model.physics('tds').create('sym1', 'Symmetry', 2);
model.physics('tds').feature('sym1').selection.named('sel2');
model.physics('tds').create('in1', 'Inflow', 2);
model.physics('tds').feature('in1').selection.named('sel3');
model.physics('tds').feature('in1').setIndex('c0', 'c0O2_inflow', 2);
model.physics('tds').create('in2', 'Inflow', 2);
model.physics('tds').feature('in2').selection.named('sel4');
model.physics('tds').feature('in2').setIndex('c0', 'c0H2_inflow', 0);
model.physics('tds').create('out1', 'Outflow', 2);
model.physics('tds').feature('out1').selection.named('sel5');
model.physics('br').selection.named('uni1');
model.physics('br').prop('PhysicalModelProperty').set('StokesFlowProp', false);
model.physics('br').prop('ShapeProperty').set('order_fluid', 1);
model.physics('br').create('fp1', 'FluidProperties', 3);
model.physics('br').feature('fp1').selection.set([2 5]);
model.physics('br').create('inl1', 'InletBoundary', 2);
model.physics('br').feature('inl1').selection.named('sel3');
model.physics('br').feature('inl1').set('BoundaryCondition', 'FullyDevelopedFlow');
model.physics('br').feature('inl1').set('Uavfdf', 'v_inlet');
model.physics('br').create('inl2', 'InletBoundary', 2);
model.physics('br').feature('inl2').selection.named('sel4');
model.physics('br').feature('inl2').set('BoundaryCondition', 'FullyDevelopedFlow');
model.physics('br').feature('inl2').set('Uavfdf', 'v_inlet');
model.physics('br').create('out1', 'OutletBoundary', 2);
model.physics('br').feature('out1').selection.named('sel5');
model.physics('br').create('sym1', 'Symmetry', 2);
model.physics('br').feature('sym1').selection.named('sel2');

model.mesh('mesh1').create('size1', 'Size');
model.mesh('mesh1').feature('size1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('size1').selection.set([5]);
model.mesh('mesh1').feature('size1').set('table', 'cfd');
model.mesh('mesh1').feature('size1').set('hauto', 7);
model.mesh('mesh1').feature('size').set('table', 'cfd');
model.mesh('mesh1').feature('size').set('hauto', 6);
model.mesh('mesh1').create('size2', 'Size');
model.mesh('mesh1').feature('size2').selection.geom('geom1', 2);
model.mesh('mesh1').feature('size2').selection.set([6 9 10 14 20 23]);
model.mesh('mesh1').feature('size2').set('table', 'cfd');
model.mesh('mesh1').feature('size2').set('hauto', 4);
model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.named('cyl1');
model.mesh('mesh1').feature('ftri1').create('size1', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size1').set('table', 'cfd');
model.mesh('mesh1').feature('ftri1').feature('size1').set('hauto', 4);
model.mesh('mesh1').feature('ftri1').create('size2', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size2').selection.geom('geom1', 1);
model.mesh('mesh1').feature('ftri1').feature('size2').selection.set([31 32]);
model.mesh('mesh1').feature('ftri1').feature('size2').set('table', 'cfd');
model.mesh('mesh1').feature('ftri1').feature('size2').set('custom', true);
model.mesh('mesh1').feature('ftri1').feature('size2').set('hmaxactive', true);
model.mesh('mesh1').feature('ftri1').feature('size2').set('hmax', 0.5);
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe1').selection.named('sel1');
model.mesh('mesh1').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('swe1').feature('dis1').set('elemcount', 30);
model.mesh('mesh1').create('cr1', 'CornerRefinement');
model.mesh('mesh1').feature('cr1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('cr1').selection.set([2 4 5 6]);
model.mesh('mesh1').feature('cr1').selection('boundary').set([6 9 10 14 20 23]);
model.mesh('mesh1').create('ftet1', 'FreeTet');
model.mesh('mesh1').feature('ftet1').create('size1', 'Size');
model.mesh('mesh1').feature('ftet1').feature('size1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('ftet1').feature('size1').selection.set([26]);
model.mesh('mesh1').feature('ftet1').feature('size1').set('table', 'cfd');
model.mesh('mesh1').feature('ftet1').create('size2', 'Size');
model.mesh('mesh1').feature('ftet1').feature('size2').selection.geom('geom1', 3);
model.mesh('mesh1').feature('ftet1').feature('size2').selection.set([2 6]);
model.mesh('mesh1').feature('ftet1').feature('size2').set('table', 'cfd');
model.mesh('mesh1').feature('ftet1').feature('size2').set('custom', true);
model.mesh('mesh1').feature('ftet1').feature('size2').set('hmaxactive', true);
model.mesh('mesh1').feature('ftet1').feature('size2').set('hmax', 0.9);
model.mesh('mesh1').create('bl1', 'BndLayer');
model.mesh('mesh1').feature('bl1').create('blp', 'BndLayerProp');
model.mesh('mesh1').feature('bl1').selection.geom(3);
model.mesh('mesh1').feature('bl1').selection.set([]);
model.mesh('mesh1').feature('bl1').selection.allGeom;
model.mesh('mesh1').feature('bl1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('bl1').selection.named('sel6');
model.mesh('mesh1').feature('bl1').set('sharpcorners', 'trim');
model.mesh('mesh1').feature('bl1').feature('blp').selection.set([6 9 10 14 18 21 23]);
model.mesh('mesh1').feature('bl1').feature('blp').set('blnlayers', 2);
model.mesh('mesh1').feature('bl1').feature('blp').set('blstretch', 1.75);
model.mesh('mesh1').feature('bl1').feature('blp').set('blhminfact', 4.5);
model.mesh('mesh1').create('bl2', 'BndLayer');
model.mesh('mesh1').feature('bl2').create('blp', 'BndLayerProp');
model.mesh('mesh1').feature('bl2').selection.geom('geom1', 3);
model.mesh('mesh1').feature('bl2').selection.named('sel1');
model.mesh('mesh1').feature('bl2').set('sharpcorners', 'trim');
model.mesh('mesh1').feature('bl2').set('smoothtransition', false);
model.mesh('mesh1').feature('bl2').feature('blp').selection.set([18 20 21]);
model.mesh('mesh1').feature('bl2').feature('blp').set('blnlayers', 4);
model.mesh('mesh1').feature('bl2').feature('blp').set('blstretch', 1.25);
model.mesh('mesh1').feature('bl2').feature('blp').set('blhminfact', 2.75);
model.mesh('mesh1').run;

model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setEntry('activate', 'chem1', true);
model.study('std2').feature('stat').setEntry('activate', 'tds', false);
model.study('std2').feature('stat').setEntry('activate', 'br', true);
model.study('std2').feature('stat').setEntry('activateCoupling', 'rfd1', false);
model.study('std2').feature.move('stat', 0);
model.study('std2').feature('time').set('tlist', 'range(0,0.05,1)');
model.study('std2').feature('time').setEntry('activate', 're', false);
model.study('std2').feature('time').setEntry('activate', 'chem1', true);
model.study('std2').feature('time').setEntry('activate', 'tds', true);
model.study('std2').feature('time').setEntry('activate', 'br', false);

model.sol.create('sol2');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([2 4 5]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([2 4 5]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([2 4 5]);

model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol2').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol2').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol2').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol2').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol2').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol2').feature('s1').feature('i1').label('AMG, fluid flow variables (br)');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp2_br_inl1_Pinlfdf' 'comp2_br_inl2_Pinlfdf'});
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp2_br_inl1_Pinlfdf' 'comp2_br_inl2_Pinlfdf'});
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s1').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s1').feature('d1').label('Direct, fluid flow variables (br)');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol2').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol2').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol2').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').create('su1', 'StoreSolution');
model.sol('sol2').create('st2', 'StudyStep');
model.sol('sol2').feature('st2').set('study', 'std2');
model.sol('sol2').feature('st2').set('studystep', 'time');
model.sol('sol2').create('v2', 'Variables');
model.sol('sol2').feature('v2').set('initmethod', 'sol');
model.sol('sol2').feature('v2').set('initsol', 'sol2');
model.sol('sol2').feature('v2').set('initsoluse', 'sol3');
model.sol('sol2').feature('v2').set('notsolmethod', 'sol');
model.sol('sol2').feature('v2').set('notsol', 'sol2');
model.sol('sol2').feature('v2').set('notsoluse', 'sol3');
model.sol('sol2').feature('v2').set('control', 'time');
model.sol('sol2').create('t1', 'Time');
model.sol('sol2').feature('t1').set('tlist', 'range(0,0.05,1)');
model.sol('sol2').feature('t1').set('plot', 'off');
model.sol('sol2').feature('t1').set('plotgroup', 'pg1');
model.sol('sol2').feature('t1').set('plotfreq', 'tout');
model.sol('sol2').feature('t1').set('probesel', 'all');
model.sol('sol2').feature('t1').set('probes', {});
model.sol('sol2').feature('t1').set('probefreq', 'tsteps');
model.sol('sol2').feature('t1').set('rtol', 0.005);
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol2').feature('t1').set('reacf', true);
model.sol('sol2').feature('t1').set('storeudot', true);
model.sol('sol2').feature('t1').set('endtimeinterpolation', true);
model.sol('sol2').feature('t1').set('maxorder', 2);
model.sol('sol2').feature('t1').set('stabcntrl', true);
model.sol('sol2').feature('t1').set('control', 'time');
model.sol('sol2').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol2').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol2').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol2').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol2').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol2').feature('t1').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t1').feature('d1').label('Direct, concentrations (tds)');
model.sol('sol2').feature('t1').create('i1', 'Iterative');
model.sol('sol2').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol2').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol2').feature('t1').feature('i1').set('maxlinit', 50);
model.sol('sol2').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol2').feature('t1').feature('i1').label('AMG, concentrations (tds)');
model.sol('sol2').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol2').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol2').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol2').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol2').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol2').feature('t1').feature.remove('fcDef');
model.sol('sol2').attach('std2');

model.study('std2').feature('time').set('usesol', true);

model.sol('sol2').feature('v2').feature('comp2_cH2').set('scalemethod', 'manual');
model.sol('sol2').feature('v2').feature('comp2_cH2O').set('scalemethod', 'manual');
model.sol('sol2').feature('v2').feature('comp2_cO2').set('scalemethod', 'manual');
model.sol('sol2').feature('v2').feature('comp2_tds_cads_cH2').set('scalemethod', 'manual');
model.sol('sol2').feature('v2').feature('comp2_tds_cads_cH2').set('scaleval', 'cH2_ads_scale');
model.sol('sol2').feature('v2').feature('comp2_tds_cads_cH2O').set('scalemethod', 'manual');
model.sol('sol2').feature('v2').feature('comp2_tds_cads_cH2O').set('scaleval', 'cH2O_ads_scale');
model.sol('sol2').feature('v2').feature('comp2_tds_cads_cO2').set('scalemethod', 'manual');
model.sol('sol2').feature('v2').feature('comp2_tds_cads_cO2').set('scaleval', 'cO2_ads_scale');
model.sol('sol2').feature('v2').feature('comp2_tds_csurf_H').set('scalemethod', 'manual');
model.sol('sol2').feature('v2').feature('comp2_tds_csurf_H').set('scaleval', 'cH_surf_scale');
model.sol('sol2').feature('v2').feature('comp2_tds_csurf_O').set('scalemethod', 'manual');
model.sol('sol2').feature('v2').feature('comp2_tds_csurf_O').set('scaleval', 'cO_surf_scale');
model.sol('sol2').feature('v2').feature('comp2_tds_csurf_OH').set('scalemethod', 'manual');
model.sol('sol2').feature('v2').feature('comp2_tds_csurf_OH').set('scaleval', 'cOH_surf_scale');
model.sol('sol2').feature('v2').feature('comp2_tds_csurf_Rh').set('scalemethod', 'manual');
model.sol('sol2').feature('v2').feature('comp2_tds_csurf_Rh').set('scaleval', 'cRh_surf_scale');
model.sol('sol2').feature('t1').set('atolglobalfactor', 0.05);
model.sol('sol2').feature('t1').set('estrat', 'exclude');
model.sol('sol2').feature('t1').create('se1', 'Segregated');
model.sol('sol2').feature('t1').feature('se1').set('segstabacc', 'segaacc');
model.sol('sol2').feature('t1').feature('se1').set('segaaccdim', 5);
model.sol('sol2').feature('t1').feature('se1').set('segaaccmix', 0.9);
model.sol('sol2').feature('t1').feature('se1').set('segaaccdelay', 1);
model.sol('sol2').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol2').feature('t1').feature('se1').feature('ss1').label('Concentrations');
model.sol('sol2').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp2_cH2' 'comp2_cH2O' 'comp2_cO2'});
model.sol('sol2').feature('t1').feature('se1').feature('ss1').set('subjtech', 'once');
model.sol('sol2').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol2').feature('t1').feature('se1').feature('ss2').label('Surface concentrations');
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp2_tds_cads_cH2' 'comp2_tds_cads_cH2O' 'comp2_tds_cads_cO2' 'comp2_tds_csurf_H' 'comp2_tds_csurf_O' 'comp2_tds_csurf_OH' 'comp2_tds_csurf_Rh'});
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('subjtech', 'once');
model.sol('sol2').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol2').feature('t1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol2').feature('t1').feature('se1').feature('ll1').set('lowerlimit', 'comp2.tds.csurf_Rh 1e-16 comp2.tds.csurf_H 1e-16 comp2.tds.csurf_O 1e-16 comp2.tds.csurf_OH 1e-16');
model.sol('sol2').runAll;

model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').set('data', 'dset2');
model.result('pg3').setIndex('looplevel', 21, 0);
model.result('pg3').label('Concentration, H2, Streamline (tds)');
model.result('pg3').set('titletype', 'custom');
model.result('pg3').set('typeintitle', true);
model.result('pg3').set('prefixintitle', 'Species H2:');
model.result('pg3').create('str1', 'Streamline');
model.result('pg3').feature('str1').set('expr', {'tds.tflux_cH2x' 'tds.tflux_cH2y' 'tds.tflux_cH2z'});
model.result('pg3').feature('str1').set('posmethod', 'start');
model.result('pg3').feature('str1').set('pointtype', 'arrow');
model.result('pg3').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg3').feature('str1').set('color', 'gray');
model.result('pg3').feature('str1').create('col', 'Color');
model.result('pg3').feature('str1').feature('col').set('expr', 'cH2');
model.result('pg3').feature('str1').feature('col').set('titletype', 'custom');
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').set('data', 'dset2');
model.result('pg4').setIndex('looplevel', 21, 0);
model.result('pg4').label('Concentration, H2, Surface (tds)');
model.result('pg4').set('titletype', 'custom');
model.result('pg4').set('prefixintitle', 'Species H2:');
model.result('pg4').set('expressionintitle', false);
model.result('pg4').set('typeintitle', false);
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', {'cH2'});
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').set('data', 'dset2');
model.result('pg5').setIndex('looplevel', 21, 0);
model.result('pg5').label('Concentration, H2O, Streamline (tds)');
model.result('pg5').set('titletype', 'custom');
model.result('pg5').set('typeintitle', true);
model.result('pg5').set('prefixintitle', 'Species H2O:');
model.result('pg5').create('str1', 'Streamline');
model.result('pg5').feature('str1').set('expr', {'tds.tflux_cH2Ox' 'tds.tflux_cH2Oy' 'tds.tflux_cH2Oz'});
model.result('pg5').feature('str1').set('posmethod', 'start');
model.result('pg5').feature('str1').set('pointtype', 'arrow');
model.result('pg5').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg5').feature('str1').set('color', 'gray');
model.result('pg5').feature('str1').create('col', 'Color');
model.result('pg5').feature('str1').feature('col').set('expr', 'cH2O');
model.result('pg5').feature('str1').feature('col').set('titletype', 'custom');
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').set('data', 'dset2');
model.result('pg6').setIndex('looplevel', 21, 0);
model.result('pg6').label('Concentration, H2O, Surface (tds)');
model.result('pg6').set('titletype', 'custom');
model.result('pg6').set('prefixintitle', 'Species H2O:');
model.result('pg6').set('expressionintitle', false);
model.result('pg6').set('typeintitle', false);
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', {'cH2O'});
model.result.create('pg7', 'PlotGroup3D');
model.result('pg7').set('data', 'dset2');
model.result('pg7').setIndex('looplevel', 21, 0);
model.result('pg7').label('Concentration, O2, Streamline (tds)');
model.result('pg7').set('titletype', 'custom');
model.result('pg7').set('typeintitle', true);
model.result('pg7').set('prefixintitle', 'Species O2:');
model.result('pg7').create('str1', 'Streamline');
model.result('pg7').feature('str1').set('expr', {'tds.tflux_cO2x' 'tds.tflux_cO2y' 'tds.tflux_cO2z'});
model.result('pg7').feature('str1').set('posmethod', 'start');
model.result('pg7').feature('str1').set('pointtype', 'arrow');
model.result('pg7').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg7').feature('str1').set('color', 'gray');
model.result('pg7').feature('str1').create('col', 'Color');
model.result('pg7').feature('str1').feature('col').set('expr', 'cO2');
model.result('pg7').feature('str1').feature('col').set('titletype', 'custom');
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').set('data', 'dset2');
model.result('pg8').setIndex('looplevel', 21, 0);
model.result('pg8').label('Concentration, O2, Surface (tds)');
model.result('pg8').set('titletype', 'custom');
model.result('pg8').set('prefixintitle', 'Species O2:');
model.result('pg8').set('expressionintitle', false);
model.result('pg8').set('typeintitle', false);
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').feature('surf1').set('expr', {'cO2'});
model.result.dataset('dset2').set('geom', 'geom1');
model.result.create('pg9', 'PlotGroup3D');
model.result('pg9').label('Velocity (br)');
model.result('pg9').set('frametype', 'spatial');
model.result('pg9').set('data', 'dset2');
model.result('pg9').setIndex('looplevel', 21, 0);
model.result('pg9').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pg1');
model.result('pg9').feature.create('slc1', 'Slice');
model.result('pg9').feature('slc1').label('Slice');
model.result('pg9').feature('slc1').set('showsolutionparams', 'on');
model.result('pg9').feature('slc1').set('expr', 'br.U');
model.result('pg9').feature('slc1').set('smooth', 'internal');
model.result('pg9').feature('slc1').set('showsolutionparams', 'on');
model.result('pg9').feature('slc1').set('data', 'parent');
model.result.dataset.create('surf1', 'Surface');
model.result.dataset('surf1').label('Exterior Walls');
model.result.dataset('surf1').set('data', 'dset2');
model.result.dataset('surf1').selection.geom('geom1', 2);
model.result.dataset('surf1').selection.set([6 9 10 14 20 23]);
model.result.create('pg10', 'PlotGroup3D');
model.result('pg10').label('Pressure (br)');
model.result('pg10').set('data', 'surf1');
model.result('pg10').setIndex('looplevel', 21, 0);
model.result('pg10').set('frametype', 'spatial');
model.result('pg10').set('data', 'surf1');
model.result('pg10').setIndex('looplevel', 21, 0);
model.result('pg10').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pcond2/pcond1/pg4');
model.result('pg10').feature.create('surf1', 'Surface');
model.result('pg10').feature('surf1').label('Surface');
model.result('pg10').feature('surf1').set('showsolutionparams', 'on');
model.result('pg10').feature('surf1').set('expr', 'p');
model.result('pg10').feature('surf1').set('colortable', 'Dipole');
model.result('pg10').feature('surf1').set('smooth', 'internal');
model.result('pg10').feature('surf1').set('showsolutionparams', 'on');
model.result('pg10').feature('surf1').set('data', 'parent');
model.result('pg10').feature('surf1').feature.create('tran1', 'Transparency');
model.result('pg3').run;
model.result.dataset.create('cpl1', 'CutPlane');
model.result.dataset('cpl1').set('data', 'dset3');
model.result.dataset('cpl1').set('quickplane', 'xy');
model.result.dataset('cpl1').set('quickz', -0.5);
model.result.dataset.create('cln1', 'CutLine3D');
model.result.dataset('cln1').setIndex('genpoints', '3*do_reac', 0, 0);
model.result.dataset('cln1').setIndex('genpoints', '3.7*do_reac', 1, 0);
model.result('pg9').run;
model.result('pg9').set('showlegendsunit', true);
model.result('pg9').run;
model.result('pg9').feature('slc1').set('quickxnumber', 8);
model.result('pg9').feature('slc1').set('colortable', 'Spectrum');
model.result('pg9').run;
model.result('pg9').label('Velocity, Surface');
model.result('pg9').create('surf1', 'Surface');
model.result('pg9').feature('surf1').set('expr', 'br.U*1[cm]/br.nu');
model.result('pg9').feature('surf1').create('sel1', 'Selection');
model.result('pg9').feature('surf1').feature('sel1').selection.named('sel2');
model.result('pg9').run;
model.result('pg9').feature('surf1').create('tran1', 'Transparency');
model.result('pg9').run;
model.result('pg9').feature('surf1').feature('tran1').set('transparency', 0);
model.result('pg9').run;
model.result('pg9').create('arws1', 'ArrowSurface');
model.result('pg9').feature('arws1').set('data', 'cpl1');
model.result('pg9').feature('arws1').setIndex('expr', 'u', 0);
model.result('pg9').feature('arws1').setIndex('expr', 'v', 1);
model.result('pg9').feature('arws1').set('expr', {'u' 'v' 'w'});
model.result('pg9').feature('arws1').set('arrowcount', 300);
model.result('pg9').feature('arws1').set('color', 'gray');
model.result('pg9').run;
model.result('pg10').run;
model.result('pg10').run;
model.result('pg4').run;
model.result('pg4').set('titletype', 'auto');
model.result('pg4').set('edges', false);
model.result('pg4').run;
model.result('pg4').feature('surf1').label('Surface: pipe');
model.result('pg4').feature('surf1').set('expr', '1');
model.result('pg4').feature('surf1').set('titletype', 'none');
model.result('pg4').feature('surf1').set('coloring', 'uniform');
model.result('pg4').feature('surf1').set('color', 'gray');
model.result('pg4').feature('surf1').create('sel1', 'Selection');
model.result('pg4').feature('surf1').feature('sel1').selection.named('dif1');
model.result('pg4').run;
model.result('pg4').create('surf2', 'Surface');
model.result('pg4').feature('surf2').label('Surface: Catalyst');
model.result('pg4').feature('surf2').set('expr', '1');
model.result('pg4').feature('surf2').set('titletype', 'none');
model.result('pg4').feature('surf2').set('coloring', 'uniform');
model.result('pg4').feature('surf2').set('color', 'gray');
model.result('pg4').feature('surf2').create('sel1', 'Selection');
model.result('pg4').feature('surf2').feature('sel1').selection.named('sel7');
model.result('pg4').run;
model.result('pg4').feature('surf2').create('mtrl1', 'MaterialAppearance');
model.result('pg4').run;
model.result('pg4').feature('surf2').feature('mtrl1').set('appearance', 'custom');
model.result('pg4').feature('surf2').feature('mtrl1').set('family', 'wood');
model.result('pg4').run;
model.result('pg4').create('str1', 'Streamline');
model.result('pg4').feature('str1').set('selnumber', 10);
model.result('pg4').feature('str1').selection.set([18]);
model.result('pg4').feature('str1').set('linetype', 'ribbon');
model.result('pg4').feature('str1').set('widthexpr', 'br.U*1[s]');
model.result('pg4').feature('str1').set('color', 'white');
model.result('pg4').run;
model.result('pg4').create('iso1', 'Isosurface');
model.result('pg4').feature('iso1').label('Concentration, cH2, Isosurface');
model.result('pg4').feature('iso1').set('levelmethod', 'levels');
model.result('pg4').feature('iso1').set('levels', 'range(0.1,0.1,2)');
model.result('pg4').feature('iso1').set('colortable', 'Prism');
model.result('pg4').feature('iso1').create('tran1', 'Transparency');
model.result('pg4').run;
model.result('pg4').run;
model.result('pg6').run;
model.result('pg6').feature('surf1').set('colortable', 'Prism');
model.result('pg8').run;
model.result('pg8').set('titletype', 'auto');
model.result('pg8').set('edges', false);
model.result('pg8').run;
model.result('pg8').feature('surf1').label('Surface: Pipe');
model.result('pg8').feature('surf1').set('expr', '1');
model.result('pg8').feature('surf1').set('titletype', 'none');
model.result('pg8').feature('surf1').set('coloring', 'uniform');
model.result('pg8').feature('surf1').set('color', 'gray');
model.result('pg8').feature('surf1').create('sel1', 'Selection');
model.result('pg8').feature('surf1').feature('sel1').selection.named('dif1');
model.result('pg8').run;
model.result('pg8').create('surf2', 'Surface');
model.result('pg8').feature('surf2').label('Surface: Catalyst');
model.result('pg8').feature('surf2').set('expr', '1');
model.result('pg8').feature('surf2').set('titletype', 'none');
model.result('pg8').feature('surf2').create('sel1', 'Selection');
model.result('pg8').feature('surf2').feature('sel1').selection.named('sel7');
model.result('pg8').run;
model.result('pg8').feature('surf2').create('mtrl1', 'MaterialAppearance');
model.result('pg8').run;
model.result('pg8').feature('surf2').feature('mtrl1').set('appearance', 'custom');
model.result('pg8').feature('surf2').feature('mtrl1').set('family', 'wood');
model.result('pg8').run;
model.result('pg8').create('str1', 'Streamline');
model.result('pg8').feature('str1').setIndex('expr', 'tds.tflux_cO2x', 0);
model.result('pg8').feature('str1').setIndex('expr', 'tds.tflux_cO2y', 1);
model.result('pg8').feature('str1').setIndex('expr', 'tds.tflux_cO2z', 2);
model.result('pg8').feature('str1').set('selnumber', 10);
model.result('pg8').feature('str1').selection.set([18]);
model.result('pg8').feature('str1').set('linetype', 'ribbon');
model.result('pg8').feature('str1').set('widthexpr', 'br.U*1[s]');
model.result('pg8').feature('str1').set('color', 'white');
model.result('pg8').run;
model.result('pg8').create('iso1', 'Isosurface');
model.result('pg8').feature('iso1').set('expr', 'cO2');
model.result('pg8').feature('iso1').label('Concentration, cO2, Isosurface');
model.result('pg8').feature('iso1').set('levelmethod', 'levels');
model.result('pg8').feature('iso1').set('levels', 'range(0.5,0.025,0.9)');
model.result('pg8').feature('iso1').set('colortable', 'TrafficFlow');
model.result('pg8').feature('iso1').create('tran1', 'Transparency');
model.result('pg8').run;
model.result('pg8').run;
model.result.create('pg11', 'PlotGroup1D');
model.result('pg11').run;
model.result('pg11').label('Porous domain: bulk species');
model.result('pg11').set('data', 'cln1');
model.result('pg11').setIndex('looplevelinput', 'manual', 0);
model.result('pg11').setIndex('looplevel', [21], 0);
model.result('pg11').create('lngr1', 'LineGraph');
model.result('pg11').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg11').feature('lngr1').set('linewidth', 'preference');
model.result('pg11').feature('lngr1').set('titletype', 'manual');
model.result('pg11').feature('lngr1').set('title', 'Molar concentration, bulk');
model.result('pg11').feature('lngr1').set('legend', true);
model.result('pg11').feature('lngr1').set('autosolution', false);
model.result('pg11').feature('lngr1').set('autoexpr', true);
model.result('pg11').run;
model.result('pg11').create('lngr2', 'LineGraph');
model.result('pg11').feature('lngr2').set('markerpos', 'datapoints');
model.result('pg11').feature('lngr2').set('linewidth', 'preference');
model.result('pg11').feature('lngr2').set('expr', 'cO2');
model.result('pg11').feature('lngr2').set('titletype', 'none');
model.result('pg11').feature('lngr2').set('legend', true);
model.result('pg11').feature('lngr2').set('autosolution', false);
model.result('pg11').feature('lngr2').set('autoexpr', true);
model.result('pg11').run;
model.result('pg11').create('lngr3', 'LineGraph');
model.result('pg11').feature('lngr3').set('markerpos', 'datapoints');
model.result('pg11').feature('lngr3').set('linewidth', 'preference');
model.result('pg11').feature('lngr3').set('expr', 'cH2O');
model.result('pg11').feature('lngr3').set('titletype', 'none');
model.result('pg11').feature('lngr3').set('legend', true);
model.result('pg11').feature('lngr3').set('autosolution', false);
model.result('pg11').feature('lngr3').set('autoexpr', true);
model.result('pg11').run;
model.result('pg11').run;
model.result.duplicate('pg12', 'pg11');
model.result('pg12').run;
model.result('pg12').label('Porous domain: surface species');
model.result('pg12').run;
model.result('pg12').feature('lngr1').set('expr', 'cs_Rh');
model.result('pg12').feature('lngr1').set('title', 'Molar concentration, surface');
model.result('pg12').run;
model.result('pg12').feature('lngr2').set('expr', 'cs_H');
model.result('pg12').run;
model.result('pg12').feature('lngr3').set('expr', 'cs_O');
model.result('pg12').feature.duplicate('lngr4', 'lngr3');
model.result('pg12').run;
model.result('pg12').feature('lngr4').set('expr', 'cs_OH');
model.result('pg12').run;
model.result('pg11').run;
model.result.duplicate('pg13', 'pg11');
model.result('pg13').run;
model.result('pg13').label('Porous domain: adsorbed species');
model.result('pg13').run;
model.result('pg13').feature('lngr1').set('expr', 'cads_cH2');
model.result('pg13').feature('lngr1').set('title', 'Molar concentration, adsorbed');
model.result('pg13').run;
model.result('pg13').feature('lngr2').set('expr', 'cads_cO2');
model.result('pg13').run;
model.result('pg13').feature('lngr3').set('expr', 'cads_cH2O');
model.result('pg13').run;
model.result('pg11').run;
model.result.duplicate('pg14', 'pg11');
model.result('pg14').run;
model.result('pg14').label('Porous domain: all species');
model.result('pg14').run;
model.result('pg14').feature('lngr1').label('Bulk: cH2');
model.result('pg14').feature('lngr1').set('title', 'Molar concentration');
model.result('pg14').run;
model.result('pg14').feature('lngr2').label('Bulk: cO2');
model.result('pg14').run;
model.result('pg14').feature('lngr3').label('Bulk: cH2O');
model.result('pg14').run;
model.result('pg14').feature.duplicate('lngr4', 'lngr2');
model.result('pg14').feature.duplicate('lngr5', 'lngr3');
model.result('pg14').run;
model.result('pg14').feature('lngr4').label('Surface: cs_Rh');
model.result('pg14').feature('lngr4').set('expr', 'cs_Rh');
model.result('pg14').run;
model.result('pg14').feature('lngr5').label('Surface: cs_H');
model.result('pg14').feature('lngr5').set('expr', 'cs_H');
model.result('pg14').run;
model.result('pg14').feature.duplicate('lngr6', 'lngr4');
model.result('pg14').feature.duplicate('lngr7', 'lngr5');
model.result('pg14').run;
model.result('pg14').feature('lngr6').label('Surface: cs_O');
model.result('pg14').feature('lngr6').set('expr', 'cs_O');
model.result('pg14').run;
model.result('pg14').feature('lngr7').label('Surface: cs_OH');
model.result('pg14').feature('lngr7').set('expr', 'cs_OH');
model.result('pg14').feature.duplicate('lngr8', 'lngr7');
model.result('pg14').run;
model.result('pg14').feature('lngr8').label('Adsorbed: cads_cH2');
model.result('pg14').feature('lngr8').set('expr', 'cads_cH2');
model.result('pg14').feature.duplicate('lngr9', 'lngr8');
model.result('pg14').run;
model.result('pg14').feature('lngr9').label('Adsorbed: cads_cO2');
model.result('pg14').feature('lngr9').set('expr', 'cads_cO2');
model.result('pg14').feature.duplicate('lngr10', 'lngr9');
model.result('pg14').run;
model.result('pg14').feature('lngr10').label('Adsorbed: cads_cH2O');
model.result('pg14').feature('lngr10').set('expr', 'cads_cH2O');
model.result('pg14').run;

model.study('std1').feature('time').setEntry('activate', 're', true);
model.study('std1').feature('time').setEntry('activate', 'chem1', false);
model.study('std1').feature('time').setEntry('activate', 'tds', false);
model.study('std1').feature('time').setEntry('activate', 'br', false);
model.study('std1').feature('time').setEntry('activateCoupling', 'rfd1', false);

model.result('pg8').run;
model.result('pg8').feature('surf1').create('mtrl1', 'MaterialAppearance');
model.result('pg8').run;
model.result('pg8').feature('surf1').feature('mtrl1').set('appearance', 'custom');
model.result('pg8').feature('surf1').feature('mtrl1').set('family', 'custom');
model.result('pg8').feature('surf1').feature('mtrl1').set('basis', true);
model.result('pg8').feature('surf1').feature('mtrl1').setIndex('basisx', '0.0', 0);
model.result('pg8').feature('surf1').feature('mtrl1').setIndex('basisx', 1, 1);
model.result('pg8').feature('surf1').feature('mtrl1').setIndex('basisx', '0.0', 2);
model.result('pg8').feature('surf1').feature('mtrl1').set('scale', 7);
model.result('pg8').feature('surf1').feature('mtrl1').set('colornoise', true);
model.result('pg8').feature('surf1').feature('mtrl1').set('colornoisescale', 1);
model.result('pg8').feature('surf1').feature('mtrl1').set('colornoisefrequency', 2);
model.result('pg8').feature('surf1').feature('mtrl1').set('customnoisecolor', [0.7411764860153198 0.7882353067398071 0.8470588326454163]);
model.result('pg8').feature('surf1').feature('mtrl1').set('colornoisenormalscale', 3);
model.result('pg8').feature('surf1').feature('mtrl1').set('roughness', 0.5);
model.result('pg8').feature('surf1').feature('mtrl1').set('anisotropy', 0.05);
model.result('pg8').feature('surf1').feature('mtrl1').set('metallic', 0.4);
model.result('pg8').feature('surf1').feature('mtrl1').set('diffusewrap', 0.1);
model.result('pg8').feature('surf1').feature('mtrl1').set('customdiffuse', [0.7098039388656616 0.7098039388656616 0.7098039388656616]);
model.result('pg8').feature('surf1').feature('mtrl1').set('customambient', [0.6196078658103943 0.6196078658103943 0.6196078658103943]);
model.result('pg3').run;
model.result.remove('pg3');
model.result.remove('pg5');
model.result.remove('pg7');
model.result('pg4').run;
model.result('pg8').run;

model.title('Porous Catalytic Reactor with Injection Needle');

model.description(['Modeling catalytic heterogeneous reactors is substantially simplified with the Transport of Diluted Species in Porous Catalysts multiphysics interface. This defines the diffusion, convection, migration, bulk reaction in the porous media flow, and heterogenous reactions (adsorption, desorption and other gas-solid surface reaction) in the porous catalyst for the chemical species. The multiphysics interface automatically combines all of the couplings and physics interfaces required for the modeling of heterogeneous catalysis together with porous media flow and dilute chemical species transport.' newline  newline 'Heterogeneous catalytic reactors have been widely used in the chemical engineering industry. This type of gas-solid catalytic reactors, where gas phase species are catalyzed by a solid catalyst, have widespread applications in the areas such as, catalytic oxidation, selective catalytic reduction, etc. This example illustrates the modeling of a porous catalytic reactor with a chemical system of hydrogen being oxidized on a noble metal Rh catalyst. The model investigates the kinetics of the heterogeneous catalytic reaction system, the species concentration distribution (both the species in bulk gas phase and absorbed on the catalytic surface) and the velocity field in the pore volume.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;

model.label('porous_reactor.mph');

model.modelNode.label('Components');

out = model;
