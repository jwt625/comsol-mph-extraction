function out = model
%
% icp_coil_optimization.m
%
% Model exported on May 26 2025, 21:32 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Plasma_Module/Inductively_Coupled_Plasmas');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('plas', 'ColdPlasma', 'geom1');
model.physics('plas').model('comp1');
model.physics.create('mf', 'InductionCurrents', 'geom1');
model.physics('mf').model('comp1');
model.physics('mf').prop('ShapeProperty').set('order_magneticvectorpotential', '1');
model.physics('mf').create('alf1', 'AmperesLawFluid');
model.physics('mf').feature('alf1').selection.all;

model.multiphysics.create('pcc1', 'PlasmaConductivityMultiphysicsCoupling', 'geom1', 2);
model.multiphysics('pcc1').set('elm_physics', 'mf');
model.multiphysics('pcc1').set('plas_physics', 'plas');
model.multiphysics.create('ehs1', 'ElectronHeatSourceMultiphysicsCoupling', 'geom1', 2);
model.multiphysics('ehs1').set('elm_physics', 'mf');
model.multiphysics('ehs1').set('plas_physics', 'plas');

model.study.create('std1');
model.study('std1').create('fstat', 'FrequencyStationary');
model.study('std1').feature('fstat').set('freq', '1000000');
model.study('std1').feature('fstat').set('solnum', 'auto');
model.study('std1').feature('fstat').set('notsolnum', 'auto');
model.study('std1').feature('fstat').set('outputmap', {});
model.study('std1').feature('fstat').set('ngenAUX', '1');
model.study('std1').feature('fstat').set('goalngenAUX', '1');
model.study('std1').feature('fstat').set('ngenAUX', '1');
model.study('std1').feature('fstat').set('goalngenAUX', '1');
model.study('std1').feature('fstat').setSolveFor('/physics/plas', true);
model.study('std1').feature('fstat').setSolveFor('/physics/mf', true);
model.study('std1').feature('fstat').setSolveFor('/multiphysics/pcc1', true);
model.study('std1').feature('fstat').setSolveFor('/multiphysics/ehs1', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('Psp', '1500[W]', 'Power input');
model.param.set('mueN', '4E24[1/(m*V*s)]', 'Reduced electron mobility');
model.param.set('T0', '300[K]', 'Gas temperature');
model.param.set('p0', '0.02[torr]', 'Gas pressure');
model.param.set('Wc', '30[cm]', 'Chamber width');
model.param.set('Hc', '22[cm]', 'Chamber height');
model.param.set('Ws', '15[cm]', 'Substrate width');
model.param.set('Hs', '2[cm]', 'Substrate height');
model.param.set('Wd', '5[cm]', 'Dielectric block width');
model.param.set('Hd', 'Hs', 'Dielectric block height');
model.param.set('Ww', 'Wc', 'Dielectric window width');
model.param.set('Hw', '2[cm]', 'Dielectric window height');
model.param.set('dplasma', '10[cm]', 'Distance between substrate and window');
model.param.set('Lcoil', '0.7[cm]', 'Coil cross section length');
model.param.set('rc', '5[cm]', 'Coil radius');
model.param.set('Zcoil', 'dplasma+Hw+Hs', 'Coil height');
model.param.set('nCoil', '4', 'Number of coils');
model.param.set('coilSpace', '5[cm]', 'Coil spacing');

model.geom('geom1').lengthUnit('cm');
model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', {'Wc' 'Hc'});
model.geom('geom1').run('r1');
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').set('size', {'Ws' 'Hs'});
model.geom('geom1').feature('r2').set('selresult', true);
model.geom('geom1').run('r2');
model.geom('geom1').create('r3', 'Rectangle');
model.geom('geom1').feature('r3').set('size', {'Wd' 'Hd'});
model.geom('geom1').feature('r3').set('pos', {'Ws' '0'});
model.geom('geom1').feature('r3').set('selresult', true);
model.geom('geom1').run('r3');
model.geom('geom1').create('r4', 'Rectangle');
model.geom('geom1').feature('r4').set('size', {'Ww' 'Hw'});
model.geom('geom1').feature('r4').set('pos', {'0' 'Hs+dplasma'});
model.geom('geom1').feature('r4').set('selresult', true);
model.geom('geom1').run('r4');
model.geom('geom1').create('r5', 'Rectangle');
model.geom('geom1').feature('r5').set('size', {'Ww' 'Hs+dplasma'});
model.geom('geom1').feature('r5').set('selresult', true);
model.geom('geom1').run('r5');
model.geom('geom1').create('r6', 'Rectangle');
model.geom('geom1').feature('r6').set('size', {'Ww' 'Hc-dplasma-Hw-Hs'});
model.geom('geom1').feature('r6').set('pos', {'0' 'Hs+dplasma+Hw'});
model.geom('geom1').feature('r6').set('selresult', true);
model.geom('geom1').run('r6');
model.geom('geom1').create('r7', 'Rectangle');
model.geom('geom1').feature('r7').label('Coils');
model.geom('geom1').feature('r7').set('size', {'Lcoil' 'Lcoil'});
model.geom('geom1').feature('r7').set('pos', {'rc' 'Zcoil'});
model.geom('geom1').feature('r7').set('selresult', true);
model.geom('geom1').run('r7');
model.geom('geom1').create('ls1', 'LineSegment');
model.geom('geom1').feature('ls1').set('specify1', 'coord');
model.geom('geom1').feature('ls1').set('coord1', [0 7]);
model.geom('geom1').feature('ls1').set('specify2', 'coord');
model.geom('geom1').feature('ls1').set('coord2', [18 7]);
model.geom('geom1').run('ls1');
model.geom('geom1').create('arr1', 'Array');
model.geom('geom1').feature('arr1').selection('input').named('r7');
model.geom('geom1').feature('arr1').set('fullsize', {'nCoil' '1'});
model.geom('geom1').feature('arr1').set('displ', {'coilSpace' '0'});
model.geom('geom1').run('fin');
model.geom('geom1').create('difsel1', 'DifferenceSelection');
model.geom('geom1').feature('difsel1').label('Plasma');
model.geom('geom1').feature('difsel1').set('add', {'r5'});
model.geom('geom1').feature('difsel1').set('subtract', {'r2' 'r3'});
model.geom('geom1').run('difsel1');
model.geom('geom1').create('boxsel1', 'BoxSelection');
model.geom('geom1').feature('boxsel1').set('entitydim', 1);
model.geom('geom1').feature('boxsel1').set('xmax', 'eps');
model.geom('geom1').feature('boxsel1').set('condition', 'inside');
model.geom('geom1').feature('boxsel1').label('Axis');
model.geom('geom1').run('boxsel1');
model.geom('geom1').create('adjsel1', 'AdjacentSelection');
model.geom('geom1').feature('adjsel1').set('input', {'difsel1'});
model.geom('geom1').run('adjsel1');
model.geom('geom1').create('difsel2', 'DifferenceSelection');
model.geom('geom1').feature('difsel2').label('Walls');
model.geom('geom1').feature('difsel2').set('entitydim', 1);
model.geom('geom1').feature('difsel2').set('add', {'adjsel1'});
model.geom('geom1').feature('difsel2').set('subtract', {'boxsel1'});
model.geom('geom1').run('difsel2');
model.geom('geom1').create('adjsel2', 'AdjacentSelection');
model.geom('geom1').feature('adjsel2').label('Adjacent Domains to Coils');
model.geom('geom1').feature('adjsel2').set('input', {'r7'});
model.geom('geom1').feature('adjsel2').set('outputdim', 2);
model.geom('geom1').run('adjsel2');
model.geom('geom1').create('adjsel3', 'AdjacentSelection');
model.geom('geom1').feature('adjsel3').label('Coil Boundaries');
model.geom('geom1').feature('adjsel3').set('input', {'r7'});
model.geom('geom1').run('adjsel3');
model.geom('geom1').create('unisel1', 'UnionSelection');
model.geom('geom1').feature('unisel1').label('Magnetic Fields');
model.geom('geom1').feature('unisel1').set('input', {'r4' 'r7' 'difsel1' 'adjsel2'});
model.geom('geom1').run('unisel1');
model.geom('geom1').create('intsel1', 'IntersectionSelection');
model.geom('geom1').feature('intsel1').set('entitydim', 1);
model.geom('geom1').feature('intsel1').set('input', {'r4' 'r6'});
model.geom('geom1').feature('intsel1').label('Top Dielectric');
model.geom('geom1').run('intsel1');
model.geom('geom1').create('difsel3', 'DifferenceSelection');
model.geom('geom1').feature('difsel3').set('entitydim', 1);
model.geom('geom1').feature('difsel3').set('add', {'intsel1'});
model.geom('geom1').feature('difsel3').set('subtract', {'r7'});
model.geom('geom1').feature('difsel3').label('Roller');
model.geom('geom1').run('difsel3');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').selection.named('geom1_r7_dom');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'6e7'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1'});
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').selection.set([2 4]);
model.material('mat2').propertyGroup('def').set('relpermeability', {'1'});
model.material('mat2').propertyGroup('def').set('electricconductivity', {'0'});
model.material('mat2').propertyGroup('def').set('relpermittivity', {'1'});
model.material.create('mat3', 'Common', 'comp1');
model.material('mat3').selection.set([3]);
model.material('mat3').propertyGroup('def').set('relpermeability', {'1'});
model.material('mat3').propertyGroup('def').set('electricconductivity', {'0'});
model.material('mat3').propertyGroup('def').set('relpermittivity', {'4.2'});

model.physics('plas').selection.named('geom1_difsel1');
model.physics('plas').prop('ElectronProperties').set('ReducedProps', true);
model.physics('plas').create('xsec1', 'CrossSectionImport', -1);
model.physics('plas').feature('xsec1').set('Filepath', 'Ar_xsecs.txt');
model.physics('plas').feature('xsec1').runCommand('importData');
model.physics('plas').create('rxn1', 'Reaction', 2);
model.physics('plas').feature('rxn1').set('formula', 'Ars+Ars=>e+Ar+Ar+');
model.physics('plas').feature('rxn1').set('kf', '3.734E8');
model.physics('plas').feature.duplicate('rxn2', 'rxn1');
model.physics('plas').feature('rxn2').set('formula', 'Ars+Ar=>Ar+Ar');
model.physics('plas').feature('rxn2').set('kf', 1807);
model.physics('plas').feature('Ar').set('FromMassConstraint', true);
model.physics('plas').feature('Ar').set('PresetSpeciesData', 'Ar');
model.physics('plas').feature('Ars').set('PresetSpeciesData', 'Ar');
model.physics('plas').feature('Ar_1p').set('InitIon', true);
model.physics('plas').feature('Ar_1p').set('PresetSpeciesData', 'Ar');
model.physics('plas').feature('pes1').set('T', 'T0');
model.physics('plas').feature('pes1').set('pA', 'p0');
model.physics('plas').feature('pes1').set('muN', {'mueN' '0' '0' '0' 'mueN' '0' '0' '0' 'mueN'});
model.physics('plas').feature('init1').set('neinit', '1E16[1/m^3]');
model.physics('plas').feature('init1').set('ebarinit', '2[V]');
model.physics('plas').create('wall1', 'WallDriftDiffusion', 1);
model.physics('plas').feature('wall1').selection.named('geom1_difsel2');
model.physics('plas').feature('wall1').set('re', 0.2);
model.physics('plas').create('gnd1', 'Ground', 1);
model.physics('plas').feature('gnd1').selection.named('geom1_difsel2');
model.physics('plas').create('sr1', 'SurfaceReaction', 1);
model.physics('plas').feature('sr1').set('formula', 'Ars=>Ar');
model.physics('plas').feature('sr1').selection.named('geom1_difsel2');
model.physics('plas').feature.duplicate('sr2', 'sr1');
model.physics('plas').feature('sr2').set('formula', 'Ar+=>Ar');
model.physics('mf').selection.named('geom1_unisel1');
model.physics('mf').create('coil1', 'Coil', 2);
model.physics('mf').feature('coil1').selection.named('geom1_r7_dom');
model.physics('mf').feature('coil1').set('coilGroup', true);
model.physics('mf').feature('coil1').set('CoilExcitation', 'Power');
model.physics('mf').feature('coil1').set('PCoil', 'Psp');

model.mesh('mesh1').contribute('physics/plas', false);
model.mesh('mesh1').contribute('physics/mf', false);
model.mesh('mesh1').contribute('multiphysics/pcc1', false);
model.mesh('mesh1').contribute('multiphysics/ehs1', false);
model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('size').set('hauto', 3);
model.mesh('mesh1').feature('ftri1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('ftri1').selection.named('geom1_difsel1');
model.mesh('mesh1').feature('ftri1').create('size1', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size1').set('hauto', 3);
model.mesh('mesh1').create('edg1', 'Edge');
model.mesh('mesh1').feature('edg1').selection.named('geom1_difsel2');
model.mesh('mesh1').feature('edg1').create('size1', 'Size');
model.mesh('mesh1').feature('edg1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('edg1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('edg1').feature('size1').set('hmax', '2E-3[m]');
model.mesh('mesh1').create('bl1', 'BndLayer');
model.mesh('mesh1').feature('bl1').create('blp', 'BndLayerProp');
model.mesh('mesh1').feature('bl1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('bl1').selection.named('geom1_difsel1');
model.mesh('mesh1').feature('bl1').set('smoothtransition', false);
model.mesh('mesh1').feature('bl1').feature('blp').selection.named('geom1_difsel2');
model.mesh('mesh1').feature('bl1').feature('blp').set('blnlayers', 5);
model.mesh('mesh1').feature('bl1').feature('blp').set('blstretch', 1.4);
model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('map1').selection.named('geom1_r7_dom');
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.named('geom1_adjsel3');
model.mesh('mesh1').feature('map1').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis1').set('elemcount', 25);
model.mesh('mesh1').feature('map1').feature('dis1').set('elemratio', 20);
model.mesh('mesh1').feature('map1').feature('dis1').set('symmetric', true);
model.mesh('mesh1').create('ftri2', 'FreeTri');
model.mesh('mesh1').feature.move('edg1', 1);
model.mesh('mesh1').run;

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'fstat');
model.sol('sol1').feature('st1').set('splitcomplex', 'on');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'fstat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 1.0E-4);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', false);
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-8);
model.sol('sol1').feature('s1').feature('fc1').set('rstep', 1.5);
model.sol('sol1').feature('s1').feature('fc1').set('minsteprecovery', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 500);
model.sol('sol1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s1').feature('fc1').set('termonres', false);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol1').feature('s1').feature('d1').label('Suggested Direct Solver (ehs1) (Merged)');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-8);
model.sol('sol1').feature('s1').feature('fc1').set('rstep', 1.5);
model.sol('sol1').feature('s1').feature('fc1').set('minsteprecovery', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 500);
model.sol('sol1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s1').feature('fc1').set('termonres', false);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runFromTo('st1', 'v1');

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 1, 0);
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'plas.ne'});
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 1, 0);
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'plas.Te'});
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').set('data', 'dset1');
model.result('pg3').setIndex('looplevel', 1, 0);
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', {'V'});
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg2').feature('surf1').set('colortable', 'Prism');
model.result('pg3').feature('surf1').set('colortable', 'Dipole');
model.result('pg1').label('Electron Density (plas)');
model.result('pg2').label('Electron Temperature (plas)');
model.result('pg3').label('Electric Potential (plas)');
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').label('Magnetic Flux Density Norm (mf)');
model.result('pg4').set('dataisaxisym', 'off');
model.result('pg4').set('frametype', 'spatial');
model.result('pg4').set('showlegendsmaxmin', true);
model.result('pg4').set('data', 'dset1');
model.result('pg4').setIndex('looplevel', 1, 0);
model.result('pg4').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom6/pdef1/pcond2/pcond2/pg1');
model.result('pg4').feature.create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('showsolutionparams', 'on');
model.result('pg4').feature('surf1').set('solutionparams', 'parent');
model.result('pg4').feature('surf1').set('expr', 'mf.normB');
model.result('pg4').feature('surf1').set('colortabletrans', 'nonlinear');
model.result('pg4').feature('surf1').set('colorcalibration', -0.8);
model.result('pg4').feature('surf1').set('showsolutionparams', 'on');
model.result('pg4').feature('surf1').set('data', 'parent');
model.result('pg4').feature.create('str1', 'Streamline');
model.result('pg4').feature('str1').set('showsolutionparams', 'on');
model.result('pg4').feature('str1').set('solutionparams', 'parent');
model.result('pg4').feature('str1').set('expr', {'mf.Br' 'mf.Bz'});
model.result('pg4').feature('str1').set('titletype', 'none');
model.result('pg4').feature('str1').set('posmethod', 'uniform');
model.result('pg4').feature('str1').set('udist', 0.03);
model.result('pg4').feature('str1').set('maxlen', 0.4);
model.result('pg4').feature('str1').set('maxtime', Inf);
model.result('pg4').feature('str1').set('inheritcolor', false);
model.result('pg4').feature('str1').set('showsolutionparams', 'on');
model.result('pg4').feature('str1').set('maxtime', Inf);
model.result('pg4').feature('str1').set('showsolutionparams', 'on');
model.result('pg4').feature('str1').set('maxtime', Inf);
model.result('pg4').feature('str1').set('showsolutionparams', 'on');
model.result('pg4').feature('str1').set('maxtime', Inf);
model.result('pg4').feature('str1').set('showsolutionparams', 'on');
model.result('pg4').feature('str1').set('maxtime', Inf);
model.result('pg4').feature('str1').set('data', 'parent');
model.result('pg4').feature('str1').selection.geom('geom1', 1);
model.result('pg4').feature('str1').selection.set([3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39]);
model.result('pg4').feature('str1').set('inheritplot', 'surf1');
model.result('pg4').feature('str1').feature.create('col1', 'Color');
model.result('pg4').feature('str1').feature('col1').set('expr', 'mf.normB');
model.result('pg4').feature('str1').feature('col1').set('colortable', 'PrismDark');
model.result('pg4').feature('str1').feature('col1').set('colorlegend', false);
model.result('pg4').feature('str1').feature('col1').set('colortabletrans', 'nonlinear');
model.result('pg4').feature('str1').feature('col1').set('colorcalibration', -0.8);
model.result('pg4').feature('str1').feature.create('filt1', 'Filter');
model.result('pg4').feature('str1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result('pg4').feature.create('con1', 'Contour');
model.result('pg4').feature('con1').set('showsolutionparams', 'on');
model.result('pg4').feature('con1').set('solutionparams', 'parent');
model.result('pg4').feature('con1').set('expr', 'r*mf.Aphi');
model.result('pg4').feature('con1').set('titletype', 'none');
model.result('pg4').feature('con1').set('number', 10);
model.result('pg4').feature('con1').set('levelrounding', false);
model.result('pg4').feature('con1').set('coloring', 'uniform');
model.result('pg4').feature('con1').set('colorlegend', false);
model.result('pg4').feature('con1').set('color', 'custom');
model.result('pg4').feature('con1').set('customcolor', [0.3764705955982208 0.3764705955982208 0.3764705955982208]);
model.result('pg4').feature('con1').set('resolution', 'fine');
model.result('pg4').feature('con1').set('inheritcolor', false);
model.result('pg4').feature('con1').set('showsolutionparams', 'on');
model.result('pg4').feature('con1').set('data', 'parent');
model.result('pg4').feature('con1').set('inheritplot', 'surf1');
model.result('pg4').feature('con1').feature.create('filt1', 'Filter');
model.result('pg4').feature('con1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result.dataset.create('rev1', 'Revolve2D');
model.result.dataset('rev1').set('data', 'none');
model.result.dataset('rev1').set('startangle', -90);
model.result.dataset('rev1').set('revangle', 225);
model.result.dataset('rev1').set('data', 'dset1');
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').label('Magnetic Flux Density Norm, Revolved Geometry (mf)');
model.result('pg5').set('frametype', 'spatial');
model.result('pg5').set('showlegendsmaxmin', true);
model.result('pg5').set('data', 'rev1');
model.result('pg5').setIndex('looplevel', 1, 0);
model.result('pg5').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom6/pdef1/pcond2/pcond3/pg1');
model.result('pg5').feature.create('vol1', 'Volume');
model.result('pg5').feature('vol1').set('showsolutionparams', 'on');
model.result('pg5').feature('vol1').set('solutionparams', 'parent');
model.result('pg5').feature('vol1').set('expr', 'mf.normB');
model.result('pg5').feature('vol1').set('colortabletrans', 'nonlinear');
model.result('pg5').feature('vol1').set('colorcalibration', -0.8);
model.result('pg5').feature('vol1').set('showsolutionparams', 'on');
model.result('pg5').feature('vol1').set('data', 'parent');
model.result('pg5').feature.create('con1', 'Contour');
model.result('pg5').feature('con1').set('showsolutionparams', 'on');
model.result('pg5').feature('con1').set('solutionparams', 'parent');
model.result('pg5').feature('con1').set('expr', 'r*mf.Aphi');
model.result('pg5').feature('con1').set('titletype', 'none');
model.result('pg5').feature('con1').set('number', 10);
model.result('pg5').feature('con1').set('levelrounding', false);
model.result('pg5').feature('con1').set('coloring', 'uniform');
model.result('pg5').feature('con1').set('colorlegend', false);
model.result('pg5').feature('con1').set('color', 'custom');
model.result('pg5').feature('con1').set('customcolor', [0.3764705955982208 0.3764705955982208 0.3764705955982208]);
model.result('pg5').feature('con1').set('resolution', 'fine');
model.result('pg5').feature('con1').set('inheritcolor', false);
model.result('pg5').feature('con1').set('showsolutionparams', 'on');
model.result('pg5').feature('con1').set('data', 'parent');
model.result('pg5').feature('con1').set('inheritplot', 'vol1');
model.result('pg5').feature('con1').feature.create('filt1', 'Filter');
model.result('pg5').feature('con1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result('pg5').feature('con1').feature('filt1').set('shownodespec', 'on');
model.result('pg1').run;

model.nodeGroup.create('grp1', 'Results');
model.nodeGroup('grp1').set('type', 'plotgroup');
model.nodeGroup('grp1').add('plotgroup', 'pg1');
model.nodeGroup('grp1').add('plotgroup', 'pg2');
model.nodeGroup('grp1').add('plotgroup', 'pg3');
model.nodeGroup('grp1').add('plotgroup', 'pg4');
model.nodeGroup('grp1').add('plotgroup', 'pg5');
model.nodeGroup('grp1').label('Initial Design');

model.study('std1').feature('fstat').set('freq', '13.56[MHz]');

model.sol('sol1').feature('s1').feature('fc1').set('plot', true);
model.sol('sol1').runAll;

model.result('pg1').run;

model.study('std1').label('Initial Design');

model.probe.create('bnd1', 'Boundary');
model.probe('bnd1').model('comp1');
model.probe('bnd1').set('intsurface', true);
model.probe('bnd1').label('Gradient Minimization');
model.probe('bnd1').set('probename', 'int_grad_ne');
model.probe('bnd1').selection.set([6]);
model.probe('bnd1').set('type', 'integral');
model.probe('bnd1').set('expr', 'sqrt(d(plas.ne,r)^2)');
model.probe('bnd1').set('intsurface', false);
model.probe.create('point1', 'Point');
model.probe('point1').model('comp1');
model.probe('point1').label('Constraint for Electron Density at the Center');
model.probe('point1').set('probename', 'ne_center');
model.probe('point1').selection.set([3]);
model.probe('point1').set('expr', 'plas.ne/ne0');

model.common.create('fsd1', 'FreeShapeDomain', 'comp1');
model.common('fsd1').selection.all;
model.common('fsd1').selection.named('geom1_adjsel2');
model.common.create('tsf1', 'Transformation', 'comp1');
model.common('tsf1').setIndex('move_lock', false, 0);
model.common('tsf1').setIndex('move_lBound', '-3[cm]', 0);
model.common('tsf1').setIndex('move_uBound', '3[cm]', 0);
model.common('tsf1').set('scalingType', 'No_scaling');
model.common('tsf1').selection.named('geom1_r7_dom');
model.common.create('fsr1', 'FreeShapeSymmetry', 'comp1');
model.common('fsr1').selection.named('geom1_difsel3');

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').set('ne0', '3.5E17[m^-3]');
model.variable('var1').descr('ne0', '');
model.variable('var1').set('obj_negrad', 'int_grad_ne/ne0');
model.variable('var1').descr('obj_negrad', 'Objective gradient');

model.study.create('std2');
model.study('std2').create('fstat', 'FrequencyStationary');
model.study('std2').feature('fstat').set('plotgroup', 'Default');
model.study('std2').feature('fstat').set('freq', '1000000');
model.study('std2').feature('fstat').set('solnum', 'auto');
model.study('std2').feature('fstat').set('notsolnum', 'auto');
model.study('std2').feature('fstat').set('outputmap', {});
model.study('std2').feature('fstat').set('ngenAUX', '1');
model.study('std2').feature('fstat').set('goalngenAUX', '1');
model.study('std2').feature('fstat').set('ngenAUX', '1');
model.study('std2').feature('fstat').set('goalngenAUX', '1');
model.study('std2').feature('fstat').setSolveFor('/physics/plas', true);
model.study('std2').feature('fstat').setSolveFor('/physics/mf', true);
model.study('std2').feature('fstat').setSolveFor('/multiphysics/pcc1', true);
model.study('std2').feature('fstat').setSolveFor('/multiphysics/ehs1', true);
model.study('std2').feature('fstat').set('freq', '13.56[MHz]');
model.study('std2').label('Optimization');
model.study('std2').create('opt', 'Optimization');
model.study('std2').feature('opt').set('optsolver', 'ipopt');
model.study('std2').feature('opt').set('opttolinner', '0.0005');
model.study('std2').feature('opt').set('nsolvemax', 20);
model.study('std2').feature('opt').set('optobj', {'comp1.obj_negrad'});
model.study('std2').feature('opt').set('descr', {'Objective gradient'});
model.study('std2').feature('opt').setIndex('pname', 'Psp', 0);
model.study('std2').feature('opt').setIndex('initval', '1500[W]', 0);
model.study('std2').feature('opt').setIndex('scale', 1, 0);
model.study('std2').feature('opt').setIndex('lbound', '', 0);
model.study('std2').feature('opt').setIndex('ubound', '', 0);
model.study('std2').feature('opt').setIndex('pname', 'Psp', 0);
model.study('std2').feature('opt').setIndex('initval', '1500[W]', 0);
model.study('std2').feature('opt').setIndex('scale', 1, 0);
model.study('std2').feature('opt').setIndex('lbound', '', 0);
model.study('std2').feature('opt').setIndex('ubound', '', 0);
model.study('std2').feature('opt').setIndex('initval', '1500[W]', 0);
model.study('std2').feature('opt').setIndex('scale', '1000[W]', 0);
model.study('std2').feature('opt').setIndex('lbound', '500[W]', 0);
model.study('std2').feature('opt').setIndex('ubound', '5000[W]', 0);
model.study('std2').feature('opt').setIndex('constraintExpression', 'comp1.ne_center', 0);
model.study('std2').feature('opt').setIndex('constraintLbound', 1, 0);
model.study('std2').feature('opt').setIndex('constraintUbound', 1.1, 0);

model.sol.create('sol2');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([3 4]);

model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'fstat');
model.sol('sol2').feature('st1').set('splitcomplex', 'on');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_material_disp').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_material_disp').set('scaleval', '3.26486600031303E-5');
model.sol('sol2').feature('v1').set('control', 'fstat');
model.sol('sol2').create('o1', 'Optimization');
model.sol('sol2').feature('o1').set('control', 'opt');
model.sol('sol2').feature('o1').create('s1', 'StationaryAttrib');
model.sol('sol2').feature('o1').feature('s1').set('stol', 1.0E-4);
model.sol('sol2').feature('o1').feature('s1').set('control', 'fstat');
model.sol('sol2').feature('o1').feature('s1').feature('aDef').set('matherr', false);
model.sol('sol2').feature('o1').feature('s1').create('seDef', 'Segregated');
model.sol('sol2').feature('o1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('o1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('o1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol2').feature('o1').feature('s1').feature('fc1').set('maxiter', 500);
model.sol('sol2').feature('o1').feature('s1').feature('fc1').set('initstep', 1.0E-4);
model.sol('sol2').feature('o1').feature('s1').feature('fc1').set('minstep', 1.0E-8);
model.sol('sol2').feature('o1').feature('s1').feature('fc1').set('rstep', 1.5);
model.sol('sol2').feature('o1').feature('s1').create('d1', 'Direct');
model.sol('sol2').feature('o1').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol2').feature('o1').feature('s1').feature('d1').label('Direct (Merged)');
model.sol('sol2').feature('o1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('o1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('o1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol2').feature('o1').feature('s1').feature('fc1').set('maxiter', 500);
model.sol('sol2').feature('o1').feature('s1').feature('fc1').set('initstep', 1.0E-4);
model.sol('sol2').feature('o1').feature('s1').feature('fc1').set('minstep', 1.0E-8);
model.sol('sol2').feature('o1').feature('s1').feature('fc1').set('rstep', 1.5);
model.sol('sol2').feature('o1').feature('s1').feature.remove('fcDef');
model.sol('sol2').feature('o1').feature('s1').feature.remove('seDef');
model.sol('sol2').attach('std2');

model.probe('bnd1').genResult('none');
model.probe('point1').genResult('none');

model.sol('sol2').runFromTo('st1', 'v1');

model.result.create('pg7', 'PlotGroup2D');
model.result('pg7').set('data', 'dset2');
model.result('pg7').create('surf1', 'Surface');
model.result('pg7').feature('surf1').set('expr', {'plas.ne'});
model.result.create('pg8', 'PlotGroup2D');
model.result('pg8').set('data', 'dset2');
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').feature('surf1').set('expr', {'plas.Te'});
model.result.create('pg9', 'PlotGroup2D');
model.result('pg9').set('data', 'dset2');
model.result('pg9').create('surf1', 'Surface');
model.result('pg9').feature('surf1').set('expr', {'V'});
model.result('pg7').feature('surf1').set('colortable', 'Prism');
model.result('pg8').feature('surf1').set('colortable', 'Prism');
model.result('pg9').feature('surf1').set('colortable', 'Dipole');
model.result('pg7').label('Electron Density (plas) 1');
model.result('pg8').label('Electron Temperature (plas) 1');
model.result('pg9').label('Electric Potential (plas) 1');
model.result.create('pg10', 'PlotGroup2D');
model.result('pg10').label('Magnetic Flux Density Norm (mf) 1');
model.result('pg10').set('data', 'dset2');
model.result('pg10').set('dataisaxisym', 'off');
model.result('pg10').set('frametype', 'spatial');
model.result('pg10').set('showlegendsmaxmin', true);
model.result('pg10').set('data', 'dset2');
model.result('pg10').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom6/pdef1/pcond2/pcond2/pg1');
model.result('pg10').feature.create('surf1', 'Surface');
model.result('pg10').feature('surf1').set('showsolutionparams', 'on');
model.result('pg10').feature('surf1').set('solutionparams', 'parent');
model.result('pg10').feature('surf1').set('expr', 'mf.normB');
model.result('pg10').feature('surf1').set('colortabletrans', 'nonlinear');
model.result('pg10').feature('surf1').set('colorcalibration', -0.8);
model.result('pg10').feature('surf1').set('showsolutionparams', 'on');
model.result('pg10').feature('surf1').set('data', 'parent');
model.result('pg10').feature.create('str1', 'Streamline');
model.result('pg10').feature('str1').set('showsolutionparams', 'on');
model.result('pg10').feature('str1').set('solutionparams', 'parent');
model.result('pg10').feature('str1').set('expr', {'mf.Br' 'mf.Bz'});
model.result('pg10').feature('str1').set('titletype', 'none');
model.result('pg10').feature('str1').set('posmethod', 'uniform');
model.result('pg10').feature('str1').set('udist', 0.03);
model.result('pg10').feature('str1').set('maxlen', 0.4);
model.result('pg10').feature('str1').set('maxtime', Inf);
model.result('pg10').feature('str1').set('inheritcolor', false);
model.result('pg10').feature('str1').set('showsolutionparams', 'on');
model.result('pg10').feature('str1').set('maxtime', Inf);
model.result('pg10').feature('str1').set('showsolutionparams', 'on');
model.result('pg10').feature('str1').set('maxtime', Inf);
model.result('pg10').feature('str1').set('showsolutionparams', 'on');
model.result('pg10').feature('str1').set('maxtime', Inf);
model.result('pg10').feature('str1').set('showsolutionparams', 'on');
model.result('pg10').feature('str1').set('maxtime', Inf);
model.result('pg10').feature('str1').set('data', 'parent');
model.result('pg10').feature('str1').selection.geom('geom1', 1);
model.result('pg10').feature('str1').selection.set([3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39]);
model.result('pg10').feature('str1').set('inheritplot', 'surf1');
model.result('pg10').feature('str1').feature.create('col1', 'Color');
model.result('pg10').feature('str1').feature('col1').set('expr', 'mf.normB');
model.result('pg10').feature('str1').feature('col1').set('colortable', 'PrismDark');
model.result('pg10').feature('str1').feature('col1').set('colorlegend', false);
model.result('pg10').feature('str1').feature('col1').set('colortabletrans', 'nonlinear');
model.result('pg10').feature('str1').feature('col1').set('colorcalibration', -0.8);
model.result('pg10').feature('str1').feature.create('filt1', 'Filter');
model.result('pg10').feature('str1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result('pg10').feature.create('con1', 'Contour');
model.result('pg10').feature('con1').set('showsolutionparams', 'on');
model.result('pg10').feature('con1').set('solutionparams', 'parent');
model.result('pg10').feature('con1').set('expr', 'r*mf.Aphi');
model.result('pg10').feature('con1').set('titletype', 'none');
model.result('pg10').feature('con1').set('number', 10);
model.result('pg10').feature('con1').set('levelrounding', false);
model.result('pg10').feature('con1').set('coloring', 'uniform');
model.result('pg10').feature('con1').set('colorlegend', false);
model.result('pg10').feature('con1').set('color', 'custom');
model.result('pg10').feature('con1').set('customcolor', [0.3764705955982208 0.3764705955982208 0.3764705955982208]);
model.result('pg10').feature('con1').set('resolution', 'fine');
model.result('pg10').feature('con1').set('inheritcolor', false);
model.result('pg10').feature('con1').set('showsolutionparams', 'on');
model.result('pg10').feature('con1').set('data', 'parent');
model.result('pg10').feature('con1').set('inheritplot', 'surf1');
model.result('pg10').feature('con1').feature.create('filt1', 'Filter');
model.result('pg10').feature('con1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result.dataset.create('rev2', 'Revolve2D');
model.result.dataset('rev2').set('data', 'none');
model.result.dataset('rev2').set('startangle', -90);
model.result.dataset('rev2').set('revangle', 225);
model.result.dataset('rev2').set('data', 'dset2');
model.result.create('pg11', 'PlotGroup3D');
model.result('pg11').label('Magnetic Flux Density Norm, Revolved Geometry (mf) 1');
model.result('pg11').set('data', 'rev2');
model.result('pg11').set('frametype', 'spatial');
model.result('pg11').set('showlegendsmaxmin', true);
model.result('pg11').set('data', 'rev2');
model.result('pg11').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom6/pdef1/pcond2/pcond3/pg1');
model.result('pg11').feature.create('vol1', 'Volume');
model.result('pg11').feature('vol1').set('showsolutionparams', 'on');
model.result('pg11').feature('vol1').set('solutionparams', 'parent');
model.result('pg11').feature('vol1').set('expr', 'mf.normB');
model.result('pg11').feature('vol1').set('colortabletrans', 'nonlinear');
model.result('pg11').feature('vol1').set('colorcalibration', -0.8);
model.result('pg11').feature('vol1').set('showsolutionparams', 'on');
model.result('pg11').feature('vol1').set('data', 'parent');
model.result('pg11').feature.create('con1', 'Contour');
model.result('pg11').feature('con1').set('showsolutionparams', 'on');
model.result('pg11').feature('con1').set('solutionparams', 'parent');
model.result('pg11').feature('con1').set('expr', 'r*mf.Aphi');
model.result('pg11').feature('con1').set('titletype', 'none');
model.result('pg11').feature('con1').set('number', 10);
model.result('pg11').feature('con1').set('levelrounding', false);
model.result('pg11').feature('con1').set('coloring', 'uniform');
model.result('pg11').feature('con1').set('colorlegend', false);
model.result('pg11').feature('con1').set('color', 'custom');
model.result('pg11').feature('con1').set('customcolor', [0.3764705955982208 0.3764705955982208 0.3764705955982208]);
model.result('pg11').feature('con1').set('resolution', 'fine');
model.result('pg11').feature('con1').set('inheritcolor', false);
model.result('pg11').feature('con1').set('showsolutionparams', 'on');
model.result('pg11').feature('con1').set('data', 'parent');
model.result('pg11').feature('con1').set('inheritplot', 'vol1');
model.result('pg11').feature('con1').feature.create('filt1', 'Filter');
model.result('pg11').feature('con1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result('pg11').feature('con1').feature('filt1').set('shownodespec', 'on');
model.result.create('pg12', 'PlotGroup2D');
model.result.dataset.duplicate('dset2g1', 'dset2');
model.result.dataset('dset2g1').label('Optimization/Solution 2 (2) - Geometry');
model.result.dataset('dset2g1').set('frametype', 'geometry');
model.result('pg12').label('Shape Optimization');
model.result('pg12').set('data', 'dset2');
model.result('pg12').set('frametype', 'geometry');
model.result('pg12').set('edgecolor', 'gray');
model.result('pg12').set('titletype', 'none');
model.result('pg12').create('line1', 'Line');
model.result('pg12').feature('line1').set('expr', '1');
model.result('pg12').feature('line1').set('coloring', 'uniform');
model.result('pg12').feature('line1').set('color', 'fromtheme');
model.result('pg12').create('arwp1', 'ArrowPoint');
model.result('pg12').feature('arwp1').label('Translation (Transformation 1)');
model.result('pg12').feature('arwp1').set('expr', {'tsf1.moveRg' 'tsf1.moveZg'});
model.result('pg12').feature('arwp1').set('arrowbase', 'head');
model.result('pg12').feature('arwp1').set('scaleactive', true);
model.result('pg12').feature('arwp1').set('scale', '1');
model.result('pg12').feature('arwp1').create('def1', 'Deform');
model.result('pg12').feature('arwp1').feature('def1').set('expr', {'-tsf1.scaleRg-tsf1.rotateRg' '-tsf1.scaleZg-tsf1.rotateZg'});
model.result('pg12').feature('arwp1').feature('def1').set('scaleactive', true);
model.result('pg12').feature('arwp1').feature('def1').set('scale', '1');
model.result('pg12').feature('arwp1').create('col1', 'Color');
model.result('pg12').feature('arwp1').feature('col1').set('expr', 'tsf1.rel_move');
model.result('pg12').feature('arwp1').feature('col1').set('rangecoloractive', 'on');
model.result('pg12').feature('arwp1').feature('col1').set('rangecolormin', 0);
model.result('pg12').feature('arwp1').feature('col1').set('rangecolormax', 1);
model.result('pg12').create('arwp2', 'ArrowPoint');
model.result('pg12').feature('arwp2').label('Scaling (Transformation 1)');
model.result('pg12').feature('arwp2').set('expr', {'tsf1.scaleRg' 'tsf1.scaleZg'});
model.result('pg12').feature('arwp2').set('arrowbase', 'head');
model.result('pg12').feature('arwp2').set('scaleactive', true);
model.result('pg12').feature('arwp2').set('scale', '1');
model.result('pg12').feature('arwp2').set('inheritplot', 'arwp1');
model.result('pg12').feature('arwp2').create('def1', 'Deform');
model.result('pg12').feature('arwp2').feature('def1').set('expr', {'-tsf1.rotateRg' '-tsf1.rotateZg'});
model.result('pg12').feature('arwp2').feature('def1').set('scaleactive', true);
model.result('pg12').feature('arwp2').feature('def1').set('scale', '1');
model.result('pg12').feature('arwp2').create('col1', 'Color');
model.result('pg12').feature('arwp2').feature('col1').set('expr', 'tsf1.rel_scale');
model.result('pg12').feature('arwp2').feature('col1').set('rangecoloractive', 'on');
model.result('pg12').feature('arwp2').feature('col1').set('rangecolormin', 0);
model.result('pg12').feature('arwp2').feature('col1').set('rangecolormax', 1);
model.result('pg12').create('arwp3', 'ArrowPoint');
model.result('pg12').feature('arwp3').label('Rotation (Transformation 1)');
model.result('pg12').feature('arwp3').set('expr', {'tsf1.rotateRg' 'tsf1.rotateZg'});
model.result('pg12').feature('arwp3').set('arrowbase', 'head');
model.result('pg12').feature('arwp3').set('scaleactive', true);
model.result('pg12').feature('arwp3').set('scale', '1');
model.result('pg12').feature('arwp3').set('inheritplot', 'arwp1');
model.result('pg12').feature('arwp3').create('col1', 'Color');
model.result('pg12').feature('arwp3').feature('col1').set('expr', 'tsf1.rel_rotate');
model.result('pg12').feature('arwp3').feature('col1').set('rangecoloractive', 'on');
model.result('pg12').feature('arwp3').feature('col1').set('rangecolormin', 0);
model.result('pg12').feature('arwp3').feature('col1').set('rangecolormax', 1);
model.result('pg7').run;
model.result('pg6').set('window', 'window1');
model.result('pg6').run;

model.nodeGroup.create('grp2', 'Results');
model.nodeGroup('grp2').set('type', 'plotgroup');
model.nodeGroup.move('grp2', 1);
model.nodeGroup('grp2').add('plotgroup', 'pg6');
model.nodeGroup('grp2').add('plotgroup', 'pg7');
model.nodeGroup('grp2').add('plotgroup', 'pg8');
model.nodeGroup('grp2').add('plotgroup', 'pg9');
model.nodeGroup('grp2').add('plotgroup', 'pg10');
model.nodeGroup('grp2').add('plotgroup', 'pg11');
model.nodeGroup('grp2').add('plotgroup', 'pg12');
model.nodeGroup('grp2').label('Optimization');

model.study('std2').feature('opt').set('plot', true);
model.study('std2').feature('opt').set('plotgroup', 'pg12');
model.study('std2').feature('opt').set('probesel', 'none');

model.sol('sol2').feature('o1').feature('s1').feature('d1').set('errorchk', false);
model.sol('sol2').runAll;

model.result('pg7').run;

model.study('std2').feature('opt').set('probewindow', '');

model.result.dataset('dset2').createDeformedConfig('deform1', 'mesh2');

model.mesh('mesh2').run;

model.study.create('std3');
model.study('std3').create('fstat', 'FrequencyStationary');
model.study('std3').feature('fstat').set('plotgroup', 'Default');
model.study('std3').feature('fstat').set('freq', '1000000');
model.study('std3').feature('fstat').set('solnum', 'auto');
model.study('std3').feature('fstat').set('notsolnum', 'auto');
model.study('std3').feature('fstat').set('outputmap', {});
model.study('std3').feature('fstat').set('ngenAUX', '1');
model.study('std3').feature('fstat').set('goalngenAUX', '1');
model.study('std3').feature('fstat').set('ngenAUX', '1');
model.study('std3').feature('fstat').set('goalngenAUX', '1');
model.study('std3').feature('fstat').setSolveFor('/physics/plas', true);
model.study('std3').feature('fstat').setSolveFor('/physics/mf', true);
model.study('std3').feature('fstat').setSolveFor('/multiphysics/pcc1', true);
model.study('std3').feature('fstat').setSolveFor('/multiphysics/ehs1', true);
model.study('std3').feature('fstat').set('freq', '13.56[MHz]');
model.study('std3').feature('fstat').setEntry('activate', 'frame:material1', false);
model.study('std3').feature('fstat').set('useinitsol', true);
model.study('std3').feature('fstat').set('initmethod', 'sol');
model.study('std3').feature('fstat').set('initstudy', 'std2');
model.study('std3').feature('fstat').set('usesol', true);
model.study('std3').feature('fstat').set('notsolmethod', 'sol');
model.study('std3').feature('fstat').set('notstudy', 'std2');
model.study('std3').label('Verification');

model.sol.create('sol3');

model.mesh('mesh2').stat.selection.geom(2);
model.mesh('mesh2').stat.selection.set([3 4]);

model.sol('sol3').study('std3');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std3');
model.sol('sol3').feature('st1').set('studystep', 'fstat');
model.sol('sol3').feature('st1').set('splitcomplex', 'on');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').feature('comp1_material_disp').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp1_material_disp').set('scaleval', '3.2117752100668566E-5');
model.sol('sol3').feature('v1').set('control', 'fstat');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').set('stol', 1.0E-4);
model.sol('sol3').feature('s1').feature('aDef').set('matherr', false);
model.sol('sol3').feature('s1').create('seDef', 'Segregated');
model.sol('sol3').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('initstep', 1.0E-4);
model.sol('sol3').feature('s1').feature('fc1').set('minstep', 1.0E-8);
model.sol('sol3').feature('s1').feature('fc1').set('rstep', 1.5);
model.sol('sol3').feature('s1').feature('fc1').set('minsteprecovery', 0.01);
model.sol('sol3').feature('s1').feature('fc1').set('maxiter', 500);
model.sol('sol3').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol3').feature('s1').feature('fc1').set('termonres', false);
model.sol('sol3').feature('s1').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol3').feature('s1').feature('d1').label('Suggested Direct Solver (ehs1) (Merged)');
model.sol('sol3').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol3').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('initstep', 1.0E-4);
model.sol('sol3').feature('s1').feature('fc1').set('minstep', 1.0E-8);
model.sol('sol3').feature('s1').feature('fc1').set('rstep', 1.5);
model.sol('sol3').feature('s1').feature('fc1').set('minsteprecovery', 0.01);
model.sol('sol3').feature('s1').feature('fc1').set('maxiter', 500);
model.sol('sol3').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol3').feature('s1').feature('fc1').set('termonres', false);
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol('sol3').feature('s1').feature.remove('seDef');
model.sol('sol3').attach('std3');

model.probe('bnd1').genResult('none');
model.probe('point1').genResult('none');

model.sol('sol3').runAll;

model.result.create('pg13', 'PlotGroup2D');
model.result('pg13').set('data', 'dset4');
model.result('pg13').create('surf1', 'Surface');
model.result('pg13').feature('surf1').set('expr', {'plas.ne'});
model.result.create('pg14', 'PlotGroup2D');
model.result('pg14').set('data', 'dset4');
model.result('pg14').create('surf1', 'Surface');
model.result('pg14').feature('surf1').set('expr', {'plas.Te'});
model.result.create('pg15', 'PlotGroup2D');
model.result('pg15').set('data', 'dset4');
model.result('pg15').create('surf1', 'Surface');
model.result('pg15').feature('surf1').set('expr', {'V'});
model.result('pg13').feature('surf1').set('colortable', 'Prism');
model.result('pg14').feature('surf1').set('colortable', 'Prism');
model.result('pg15').feature('surf1').set('colortable', 'Dipole');
model.result('pg13').label('Electron Density (plas) 2');
model.result('pg14').label('Electron Temperature (plas) 2');
model.result('pg15').label('Electric Potential (plas) 2');
model.result.create('pg16', 'PlotGroup2D');
model.result('pg16').label('Magnetic Flux Density Norm (mf) 2');
model.result('pg16').set('data', 'dset4');
model.result('pg16').set('dataisaxisym', 'off');
model.result('pg16').set('frametype', 'spatial');
model.result('pg16').set('showlegendsmaxmin', true);
model.result('pg16').set('data', 'dset4');
model.result('pg16').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom6/pdef1/pcond2/pcond2/pg1');
model.result('pg16').feature.create('surf1', 'Surface');
model.result('pg16').feature('surf1').set('showsolutionparams', 'on');
model.result('pg16').feature('surf1').set('solutionparams', 'parent');
model.result('pg16').feature('surf1').set('expr', 'mf.normB');
model.result('pg16').feature('surf1').set('colortabletrans', 'nonlinear');
model.result('pg16').feature('surf1').set('colorcalibration', -0.8);
model.result('pg16').feature('surf1').set('showsolutionparams', 'on');
model.result('pg16').feature('surf1').set('data', 'parent');
model.result('pg16').feature.create('str1', 'Streamline');
model.result('pg16').feature('str1').set('showsolutionparams', 'on');
model.result('pg16').feature('str1').set('solutionparams', 'parent');
model.result('pg16').feature('str1').set('expr', {'mf.Br' 'mf.Bz'});
model.result('pg16').feature('str1').set('titletype', 'none');
model.result('pg16').feature('str1').set('posmethod', 'uniform');
model.result('pg16').feature('str1').set('udist', 0.03);
model.result('pg16').feature('str1').set('maxlen', 0.4);
model.result('pg16').feature('str1').set('maxtime', Inf);
model.result('pg16').feature('str1').set('inheritcolor', false);
model.result('pg16').feature('str1').set('showsolutionparams', 'on');
model.result('pg16').feature('str1').set('maxtime', Inf);
model.result('pg16').feature('str1').set('showsolutionparams', 'on');
model.result('pg16').feature('str1').set('maxtime', Inf);
model.result('pg16').feature('str1').set('showsolutionparams', 'on');
model.result('pg16').feature('str1').set('maxtime', Inf);
model.result('pg16').feature('str1').set('showsolutionparams', 'on');
model.result('pg16').feature('str1').set('maxtime', Inf);
model.result('pg16').feature('str1').set('data', 'parent');
model.result('pg16').feature('str1').selection.geom('geom1', 1);
model.result('pg16').feature('str1').selection.set([3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39]);
model.result('pg16').feature('str1').set('inheritplot', 'surf1');
model.result('pg16').feature('str1').feature.create('col1', 'Color');
model.result('pg16').feature('str1').feature('col1').set('expr', 'mf.normB');
model.result('pg16').feature('str1').feature('col1').set('colortable', 'PrismDark');
model.result('pg16').feature('str1').feature('col1').set('colorlegend', false);
model.result('pg16').feature('str1').feature('col1').set('colortabletrans', 'nonlinear');
model.result('pg16').feature('str1').feature('col1').set('colorcalibration', -0.8);
model.result('pg16').feature('str1').feature.create('filt1', 'Filter');
model.result('pg16').feature('str1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result('pg16').feature.create('con1', 'Contour');
model.result('pg16').feature('con1').set('showsolutionparams', 'on');
model.result('pg16').feature('con1').set('solutionparams', 'parent');
model.result('pg16').feature('con1').set('expr', 'r*mf.Aphi');
model.result('pg16').feature('con1').set('titletype', 'none');
model.result('pg16').feature('con1').set('number', 10);
model.result('pg16').feature('con1').set('levelrounding', false);
model.result('pg16').feature('con1').set('coloring', 'uniform');
model.result('pg16').feature('con1').set('colorlegend', false);
model.result('pg16').feature('con1').set('color', 'custom');
model.result('pg16').feature('con1').set('customcolor', [0.3764705955982208 0.3764705955982208 0.3764705955982208]);
model.result('pg16').feature('con1').set('resolution', 'fine');
model.result('pg16').feature('con1').set('inheritcolor', false);
model.result('pg16').feature('con1').set('showsolutionparams', 'on');
model.result('pg16').feature('con1').set('data', 'parent');
model.result('pg16').feature('con1').set('inheritplot', 'surf1');
model.result('pg16').feature('con1').feature.create('filt1', 'Filter');
model.result('pg16').feature('con1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result.dataset.create('rev3', 'Revolve2D');
model.result.dataset('rev3').set('data', 'none');
model.result.dataset('rev3').set('startangle', -90);
model.result.dataset('rev3').set('revangle', 225);
model.result.dataset('rev3').set('data', 'dset4');
model.result.create('pg17', 'PlotGroup3D');
model.result('pg17').label('Magnetic Flux Density Norm, Revolved Geometry (mf) 2');
model.result('pg17').set('data', 'rev3');
model.result('pg17').set('frametype', 'spatial');
model.result('pg17').set('showlegendsmaxmin', true);
model.result('pg17').set('data', 'rev3');
model.result('pg17').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom6/pdef1/pcond2/pcond3/pg1');
model.result('pg17').feature.create('vol1', 'Volume');
model.result('pg17').feature('vol1').set('showsolutionparams', 'on');
model.result('pg17').feature('vol1').set('solutionparams', 'parent');
model.result('pg17').feature('vol1').set('expr', 'mf.normB');
model.result('pg17').feature('vol1').set('colortabletrans', 'nonlinear');
model.result('pg17').feature('vol1').set('colorcalibration', -0.8);
model.result('pg17').feature('vol1').set('showsolutionparams', 'on');
model.result('pg17').feature('vol1').set('data', 'parent');
model.result('pg17').feature.create('con1', 'Contour');
model.result('pg17').feature('con1').set('showsolutionparams', 'on');
model.result('pg17').feature('con1').set('solutionparams', 'parent');
model.result('pg17').feature('con1').set('expr', 'r*mf.Aphi');
model.result('pg17').feature('con1').set('titletype', 'none');
model.result('pg17').feature('con1').set('number', 10);
model.result('pg17').feature('con1').set('levelrounding', false);
model.result('pg17').feature('con1').set('coloring', 'uniform');
model.result('pg17').feature('con1').set('colorlegend', false);
model.result('pg17').feature('con1').set('color', 'custom');
model.result('pg17').feature('con1').set('customcolor', [0.3764705955982208 0.3764705955982208 0.3764705955982208]);
model.result('pg17').feature('con1').set('resolution', 'fine');
model.result('pg17').feature('con1').set('inheritcolor', false);
model.result('pg17').feature('con1').set('showsolutionparams', 'on');
model.result('pg17').feature('con1').set('data', 'parent');
model.result('pg17').feature('con1').set('inheritplot', 'vol1');
model.result('pg17').feature('con1').feature.create('filt1', 'Filter');
model.result('pg17').feature('con1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result('pg17').feature('con1').feature('filt1').set('shownodespec', 'on');
model.result.create('pg18', 'PlotGroup2D');
model.result.dataset.duplicate('dset4g1', 'dset4');
model.result.dataset('dset4g1').label('Verification/Solution 3 (4) - Geometry');
model.result.dataset('dset4g1').set('frametype', 'geometry');
model.result('pg18').label('Shape Optimization 1');
model.result('pg18').set('data', 'dset4');
model.result('pg18').set('frametype', 'geometry');
model.result('pg18').set('edgecolor', 'gray');
model.result('pg18').set('titletype', 'none');
model.result('pg18').create('line1', 'Line');
model.result('pg18').feature('line1').set('expr', '1');
model.result('pg18').feature('line1').set('coloring', 'uniform');
model.result('pg18').feature('line1').set('color', 'fromtheme');
model.result('pg18').create('arwp1', 'ArrowPoint');
model.result('pg18').feature('arwp1').label('Translation (Transformation 1)');
model.result('pg18').feature('arwp1').set('expr', {'tsf1.moveRg' 'tsf1.moveZg'});
model.result('pg18').feature('arwp1').set('arrowbase', 'head');
model.result('pg18').feature('arwp1').set('scaleactive', true);
model.result('pg18').feature('arwp1').set('scale', '1');
model.result('pg18').feature('arwp1').create('def1', 'Deform');
model.result('pg18').feature('arwp1').feature('def1').set('expr', {'-tsf1.scaleRg-tsf1.rotateRg' '-tsf1.scaleZg-tsf1.rotateZg'});
model.result('pg18').feature('arwp1').feature('def1').set('scaleactive', true);
model.result('pg18').feature('arwp1').feature('def1').set('scale', '1');
model.result('pg18').feature('arwp1').create('col1', 'Color');
model.result('pg18').feature('arwp1').feature('col1').set('expr', 'tsf1.rel_move');
model.result('pg18').feature('arwp1').feature('col1').set('rangecoloractive', 'on');
model.result('pg18').feature('arwp1').feature('col1').set('rangecolormin', 0);
model.result('pg18').feature('arwp1').feature('col1').set('rangecolormax', 1);
model.result('pg18').create('arwp2', 'ArrowPoint');
model.result('pg18').feature('arwp2').label('Scaling (Transformation 1)');
model.result('pg18').feature('arwp2').set('expr', {'tsf1.scaleRg' 'tsf1.scaleZg'});
model.result('pg18').feature('arwp2').set('arrowbase', 'head');
model.result('pg18').feature('arwp2').set('scaleactive', true);
model.result('pg18').feature('arwp2').set('scale', '1');
model.result('pg18').feature('arwp2').set('inheritplot', 'arwp1');
model.result('pg18').feature('arwp2').create('def1', 'Deform');
model.result('pg18').feature('arwp2').feature('def1').set('expr', {'-tsf1.rotateRg' '-tsf1.rotateZg'});
model.result('pg18').feature('arwp2').feature('def1').set('scaleactive', true);
model.result('pg18').feature('arwp2').feature('def1').set('scale', '1');
model.result('pg18').feature('arwp2').create('col1', 'Color');
model.result('pg18').feature('arwp2').feature('col1').set('expr', 'tsf1.rel_scale');
model.result('pg18').feature('arwp2').feature('col1').set('rangecoloractive', 'on');
model.result('pg18').feature('arwp2').feature('col1').set('rangecolormin', 0);
model.result('pg18').feature('arwp2').feature('col1').set('rangecolormax', 1);
model.result('pg18').create('arwp3', 'ArrowPoint');
model.result('pg18').feature('arwp3').label('Rotation (Transformation 1)');
model.result('pg18').feature('arwp3').set('expr', {'tsf1.rotateRg' 'tsf1.rotateZg'});
model.result('pg18').feature('arwp3').set('arrowbase', 'head');
model.result('pg18').feature('arwp3').set('scaleactive', true);
model.result('pg18').feature('arwp3').set('scale', '1');
model.result('pg18').feature('arwp3').set('inheritplot', 'arwp1');
model.result('pg18').feature('arwp3').create('col1', 'Color');
model.result('pg18').feature('arwp3').feature('col1').set('expr', 'tsf1.rel_rotate');
model.result('pg18').feature('arwp3').feature('col1').set('rangecoloractive', 'on');
model.result('pg18').feature('arwp3').feature('col1').set('rangecolormin', 0);
model.result('pg18').feature('arwp3').feature('col1').set('rangecolormax', 1);
model.result('pg13').run;

model.nodeGroup.create('grp3', 'Results');
model.nodeGroup('grp3').set('type', 'plotgroup');
model.nodeGroup.move('grp3', 2);
model.nodeGroup('grp3').add('plotgroup', 'pg13');
model.nodeGroup('grp3').add('plotgroup', 'pg14');
model.nodeGroup('grp3').add('plotgroup', 'pg15');
model.nodeGroup('grp3').add('plotgroup', 'pg16');
model.nodeGroup('grp3').add('plotgroup', 'pg17');
model.nodeGroup('grp3').add('plotgroup', 'pg18');
model.nodeGroup('grp3').label('Verification');

model.result.create('pg19', 'PlotGroup1D');
model.result('pg19').run;
model.result('pg19').label('Electron Density: Initial Design vs. Optimization vs. Verification');
model.result('pg19').set('titletype', 'label');
model.result('pg19').create('lngr1', 'LineGraph');
model.result('pg19').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg19').feature('lngr1').set('linewidth', 'preference');
model.result('pg19').feature('lngr1').selection.set([6]);
model.result('pg19').feature('lngr1').set('legend', true);
model.result('pg19').feature('lngr1').set('legendmethod', 'manual');
model.result('pg19').feature('lngr1').setIndex('legends', 'Initial design', 0);
model.result('pg19').run;
model.result('pg19').feature.duplicate('lngr2', 'lngr1');
model.result('pg19').run;
model.result('pg19').feature('lngr2').set('data', 'dset2');
model.result('pg19').feature('lngr2').setIndex('legends', 'Optimization', 0);
model.result('pg19').feature.duplicate('lngr3', 'lngr2');
model.result('pg19').run;
model.result('pg19').feature('lngr3').set('data', 'dset4');
model.result('pg19').feature('lngr3').setIndex('legends', 'Verification', 0);
model.result('pg19').run;
model.result('pg19').run;
model.result('pg19').set('axislimits', true);
model.result('pg19').set('ymin', 0);
model.result('pg19').set('ymax', '7e17');
model.result('pg19').run;
model.result.duplicate('pg20', 'pg19');
model.result('pg20').run;
model.result('pg20').label('Ion Flux: Initial Design vs. Optimization vs. Verification');
model.result('pg20').run;
model.result('pg20').feature('lngr1').selection.set([4]);
model.result('pg20').feature('lngr1').set('expr', 'plas.nJi_wAr_1p');
model.result('pg20').feature('lngr1').set('recover', 'pprint');
model.result('pg20').run;
model.result('pg20').feature('lngr2').selection.set([4]);
model.result('pg20').feature('lngr2').set('expr', 'plas.nJi_wAr_1p');
model.result('pg20').feature('lngr2').set('recover', 'pprint');
model.result('pg20').run;
model.result('pg20').feature('lngr3').selection.set([4]);
model.result('pg20').feature('lngr3').set('expr', 'plas.nJi_wAr_1p');
model.result('pg20').feature('lngr3').set('recover', 'pprint');
model.result('pg20').run;
model.result('pg20').set('ymax', 150);
model.result('pg20').set('ymin', 50);
model.result('pg20').set('xmax', 15.5);
model.result('pg20').run;
model.result.create('pg21', 'PlotGroup2D');
model.result('pg21').run;
model.result('pg21').label('Electron Density: Initial Design vs. Optimization');
model.result('pg21').set('titletype', 'label');
model.result('pg21').create('surf1', 'Surface');
model.result('pg21').feature('surf1').set('data', 'dset1');
model.result('pg21').run;
model.result('pg21').create('surf2', 'Surface');
model.result('pg21').feature('surf2').set('data', 'dset4');
model.result('pg21').feature('surf2').set('inheritplot', 'surf1');
model.result('pg21').feature('surf2').create('def1', 'Deform');
model.result('pg21').run;
model.result('pg21').feature('surf2').feature('def1').set('expr', {'' '-25'});
model.result('pg21').feature('surf2').feature('def1').set('scaleactive', true);
model.result('pg21').feature('surf2').feature('def1').set('scale', 1);
model.result('pg21').run;
model.result('pg21').create('line1', 'Line');
model.result('pg21').feature('line1').set('data', 'dset4');
model.result('pg21').feature('line1').set('expr', '1');
model.result('pg21').feature('line1').set('coloring', 'uniform');
model.result('pg21').feature('line1').set('color', 'black');
model.result('pg21').feature('line1').create('def1', 'Deform');
model.result('pg21').run;
model.result('pg21').feature('line1').feature('def1').set('expr', {'' '-25'});
model.result('pg21').feature('line1').feature('def1').set('scaleactive', true);
model.result('pg21').feature('line1').feature('def1').set('scale', 1);
model.result('pg21').run;
model.result('pg21').run;
model.result.duplicate('pg22', 'pg21');
model.result('pg22').run;
model.result('pg22').label('Absorbed Power Density: Initial Design vs. Optimization');
model.result('pg22').run;
model.result('pg22').feature('surf1').set('expr', 'mf.Qrh');
model.result('pg22').feature('surf1').set('colortable', 'ThermalWave');
model.result('pg22').run;
model.result('pg22').feature('surf2').set('expr', 'mf.Qrh');
model.result('pg22').feature('surf2').create('sel1', 'Selection');
model.result('pg22').feature('surf2').feature('sel1').selection.set([2]);
model.result('pg22').run;
model.result('pg22').feature('surf1').create('sel1', 'Selection');
model.result('pg22').feature('surf1').feature('sel1').selection.set([2]);
model.result('pg22').run;
model.result('pg19').run;
model.result('pg20').run;
model.result('pg21').run;
model.result('pg22').run;

model.title('Coil Optimization of an ICP Reactor');

model.description('This model shows how shape optimization can be used design the coils of an ICP reactor to obtain plasma uniformity. The reactor in study is a planar ICP with the coils distributed along the radial direction. The Optimization study step is used to find the best coil placement so that the gradient of the electron density in the reactor center is minimized. A target electron density in the reactor center is also imposed by varying the coil power.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;

model.label('icp_coil_optimization.mph');

model.modelNode.label('Components');

out = model;
