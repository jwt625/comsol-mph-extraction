function out = model
%
% tire_inflation.m
%
% Model exported on May 26 2025, 21:31 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Nonlinear_Structural_Materials_Module/Hyperelasticity');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/solid', true);

model.geom.create('part1', 'Part', 2);
model.geom('part1').label('Tire Section');
model.geom('part1').create('imp1', 'Import');
model.geom('part1').feature('imp1').set('filename', 'tire_inflation.mphbin');
model.geom('part1').run('imp1');
model.geom.create('part2', 'Part', 3);
model.geom('part2').label('Rim');
model.geom('part2').geomRep('cadps');
model.geom('part2').create('imp1', 'Import');
model.geom('part2').feature('imp1').set('filename', 'wheel_rim.x_b');
model.geom('part2').run('imp1');

model.modelNode('comp1').label('2D Axisymmetric [Tire]');

model.geom('geom1').lengthUnit('cm');
model.geom('geom1').create('pi1', 'PartInstance');
model.geom('geom1').feature('pi1').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi1').set('part', 'part1');
model.geom('geom1').run('pi1');

model.modelNode.create('comp2', true);

model.geom.create('geom2', 3);
model.geom('geom2').model('comp2');

model.mesh.create('mesh2', 'geom2');

model.modelNode('comp2').label('3D [Rim]');

model.geom('geom2').lengthUnit('cm');
model.geom('geom2').geomRep('cadps');
model.geom('geom2').create('pi1', 'PartInstance');
model.geom('geom2').feature('pi1').set('selkeepnoncontr', false);
model.geom('geom2').feature('pi1').set('part', 'part2');
model.geom('geom2').run('pi1');
model.geom('geom2').create('wp1', 'WorkPlane');
model.geom('geom2').feature('wp1').set('unite', true);
model.geom('geom2').feature('wp1').set('quickplane', 'xz');
model.geom('geom2').run('wp1');
model.geom('geom1').create('cro1', 'CrossSection');
model.geom('geom1').run('cro1');
model.geom('geom1').create('del1', 'Delete');
model.geom('geom1').feature('del1').selection('input').init(2);
model.geom('geom1').feature('del1').selection('input').set('cro1', [1 2 3]);
model.geom('geom1').run('del1');
model.geom('geom1').create('ls1', 'LineSegment');
model.geom('geom1').feature('ls1').selection('vertex1').set('pi1', 80);
model.geom('geom1').feature('ls1').set('specify2', 'coord');
model.geom('geom1').feature('ls1').set('coord2', {'20' '-7E-2'});
model.geom('geom1').run('ls1');
model.geom('geom1').create('par1', 'Partition');
model.geom('geom1').feature('par1').selection('input').set({'del1' 'pi1'});
model.geom('geom1').feature('par1').selection('tool').set({'ls1'});
model.geom('geom1').run('par1');
model.geom('geom1').create('del2', 'Delete');
model.geom('geom1').feature('del2').selection('input').init(2);
model.geom('geom1').feature('del2').selection('input').set('par1(1)', 1);
model.geom('geom1').feature('del2').selection('input').set('par1(2)', [1 2 6 8 10]);
model.geom('geom1').run('del2');
model.geom('geom1').create('imp1', 'Import');
model.geom('geom1').feature('imp1').set('filename', 'tire_inflation_meshcontrol.mphbin');
model.geom('geom1').feature('imp1').set('selresult', true);
model.geom('geom1').feature('imp1').set('selresultshow', 'bnd');
model.geom('geom1').run('imp1');
model.geom('geom1').create('uni1', 'Union');
model.geom('geom1').feature('uni1').selection('input').set({'del2(2)' 'imp1'});
model.geom('geom1').run('uni1');
model.geom('geom1').feature('fin').set('action', 'assembly');
model.geom('geom1').feature('fin').set('createpairs', false);
model.geom('geom1').run('fin');
model.geom('geom1').create('mce1', 'MeshControlEdges');
model.geom('geom1').feature('mce1').selection('input').named('imp1');
model.geom('geom1').run('mce1');

model.pair.create('p1', 'Contact', 'geom1');
model.pair('p1').source.set([7 8 10]);
model.pair('p1').destination.set([30 31 44 46]);

model.material.create('mat1', 'Common', '');
model.material('mat1').label('Steel [Bead Wires]');
model.material('mat1').propertyGroup('def').set('youngsmodulus', '');
model.material('mat1').propertyGroup('def').set('poissonsratio', '');
model.material('mat1').propertyGroup('def').set('density', '');
model.material('mat1').propertyGroup('def').set('youngsmodulus', {'210[GPa]'});
model.material('mat1').propertyGroup('def').set('poissonsratio', {'0.3'});
model.material('mat1').propertyGroup('def').set('density', {'7800[kg/m^3]'});
model.material.duplicate('mat2', 'mat1');
model.material('mat2').set('sys', 'none');
model.material('mat2').label('Steel [Cords]');
model.material('mat2').propertyGroup('def').set('youngsmodulus', {'170[GPa]'});
model.material.create('mat3', 'Common', '');
model.material('mat3').label('Rubber [Sidewall and Tread]');
model.material('mat3').propertyGroup.create('Yeoh', 'Yeoh');
model.material('mat3').propertyGroup('Yeoh').set('c1YE', {'1[MPa]'});
model.material('mat3').propertyGroup('Yeoh').set('c2YE', {'-0.3[MPa]'});
model.material('mat3').propertyGroup('Yeoh').set('c3YE', {'0.1[MPa]'});
model.material('mat3').propertyGroup.create('KG', 'Bulk_modulus_and_shear_modulus');
model.material('mat3').propertyGroup('KG').set('K', {'100[MPa]'});
model.material('mat3').propertyGroup('def').set('density', {'1100[kg/m^3]'});
model.material.duplicate('mat4', 'mat3');
model.material('mat4').set('sys', 'none');
model.material('mat4').label('Rubber [Bead]');
model.material('mat4').propertyGroup('Yeoh').set('c1YE', {'1.6[MPa]'});
model.material('mat4').propertyGroup('Yeoh').set('c2YE', {'-1.4[MPa]'});
model.material('mat4').propertyGroup('Yeoh').set('c3YE', {'0.9[MPa]'});
model.material.create('mat5', 'Common', '');
model.material('mat5').label('Reinforced Rubber [Carcass]');
model.material('mat5').propertyGroup.create('TransverseIsotropic', 'Transversely_isotropic');
model.material('mat5').propertyGroup('def').set('density', {'1750[kg/m^3]'});
model.material('mat5').propertyGroup('TransverseIsotropic').set('Evect', {'7[GPa]' '25[MPa]'});
model.material('mat5').propertyGroup('TransverseIsotropic').set('nuvect', {'0.45' '0.4'});
model.material('mat5').propertyGroup('TransverseIsotropic').set('Gvect1', {'4[MPa]'});
model.material.create('matlnk1', 'Link', 'comp1');
model.material('matlnk1').label('Material Link: Steel [Bead Wires]');
model.material('matlnk1').selection.set([7]);

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');
model.selection('sel1').geom(2);
model.selection('sel1').label('Bead Wires');
model.selection('sel1').set([7]);

model.material('matlnk1').selection.named('sel1');
model.material('matlnk1').set('family', 'steel');
model.material.create('matlnk2', 'Link', 'comp1');
model.material('matlnk2').set('link', 'mat3');
model.material('matlnk2').label('Material Link: Rubber [Sidewall and Tread]');
model.material('matlnk2').selection.set([2 3 5]);

model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').geom(2);
model.selection('sel2').label('Sidewall and Tread');
model.selection('sel2').set([2 3 5]);

model.material('matlnk2').selection.named('sel2');
model.material('matlnk2').set('family', 'rubber');
model.material('matlnk2').set('color', 'black');
model.material.create('matlnk3', 'Link', 'comp1');
model.material('matlnk3').label('Material Link: Rubber [Bead]');
model.material('matlnk3').selection.set([6]);
model.material('matlnk3').set('link', 'mat4');

model.selection.create('sel3', 'Explicit');
model.selection('sel3').model('comp1');
model.selection('sel3').geom(2);
model.selection('sel3').label('Bead Rubber');
model.selection('sel3').set([6]);

model.material('matlnk3').selection.named('sel3');
model.material('matlnk3').set('family', 'rubber');
model.material('matlnk3').set('color', 'black');
model.material.create('matlnk4', 'Link', 'comp1');
model.material('matlnk4').label('Material Link: Reinforced Rubber [Carcass]');
model.material('matlnk4').selection.set([4]);
model.material('matlnk4').set('link', 'mat5');

model.selection.create('sel4', 'Explicit');
model.selection('sel4').model('comp1');
model.selection('sel4').geom(2);
model.selection('sel4').label('Carcass');
model.selection('sel4').set([4]);

model.material('matlnk4').selection.named('sel4');
model.material('matlnk4').set('color', 'gray');

model.selection.create('uni1', 'Union');
model.selection('uni1').model('comp1');
model.selection('uni1').label('Hyperelastic Domains');
model.selection('uni1').set('input', {'sel2' 'sel3'});

model.physics('solid').selection.set([2 3 4 5 6 7]);
model.physics('solid').create('hmm1', 'HyperelasticModel', 2);
model.physics('solid').feature('hmm1').selection.named('uni1');
model.physics('solid').feature('hmm1').set('MaterialModel', 'Yeoh');
model.physics('solid').feature('hmm1').set('Compressibility_Yeoh', 'CompressibleUncoupled');
model.physics('solid').create('lemm2', 'LinearElasticModel', 2);
model.physics('solid').feature('lemm2').label('Linear Elastic Material [Carcass]');
model.physics('solid').feature('lemm2').selection.named('sel4');
model.physics('solid').feature('lemm2').set('SolidModel', 'Orthotropic');
model.physics('solid').feature('lemm2').set('TransverseIsotropic', true);
model.physics('solid').feature('lemm1').label('Linear Elastic Material [Bead Wires]');
model.physics.create('cc', 'CurvilinearCoordinates', 'geom1');
model.physics('cc').model('comp1');

model.study('std1').feature('stat').setSolveFor('/physics/cc', true);

model.physics('cc').selection.named('sel4');
model.physics('cc').prop('Settings').set('CreateBasis', true);
model.physics('cc').create('diff1', 'DiffusionMethod', 2);
model.physics('cc').feature('diff1').create('inl1', 'Inlet', 1);
model.physics('cc').feature('diff1').feature('inl1').selection.set([21]);
model.physics('cc').feature('diff1').create('out1', 'Outlet', 1);
model.physics('cc').feature('diff1').feature('out1').selection.set([17]);
model.physics('solid').feature('lemm2').set('coordinateSystem', 'cc_cs');

model.param.set('dcord_belts', '0.5[mm]');
model.param.descr('dcord_belts', 'Diameter of belt cords');
model.param.set('spcord_belts', '1.16[mm]');
model.param.descr('spcord_belts', 'Spacing between belt cords');
model.param.set('alpha_belt', '70[deg]');
model.param.descr('alpha_belt', 'Angle of belt cords');

model.physics('solid').create('tl1', 'ThinLayer', 1);
model.physics('solid').feature('tl1').selection.set([57 58 59]);

model.selection.create('sel5', 'Explicit');
model.selection('sel5').model('comp1');
model.selection('sel5').geom(1);
model.selection('sel5').label('Belts');
model.selection('sel5').set([57 58 59]);

model.physics('solid').feature('tl1').selection.named('sel5');
model.physics('solid').feature('tl1').set('lth', 'dcord_belts');
model.physics('solid').feature('tl1').create('hmm1', 'HyperelasticModel', 1);
model.physics('solid').feature('tl1').feature('hmm1').selection.named('sel5');
model.physics('solid').feature('tl1').feature('hmm1').set('MaterialModel', 'Yeoh');
model.physics('solid').feature('tl1').feature('hmm1').set('Compressibility_Yeoh', 'CompressibleUncoupled');

model.material.duplicate('matlnk5', 'matlnk2');
model.material('matlnk5').label('Material Link: Rubber [Belts]');
model.material('matlnk5').selection.geom('geom1', 1);
model.material('matlnk5').selection.named('sel5');

model.physics('solid').feature('tl1').feature('hmm1').create('fibt1', 'FiberTL', 1);
model.physics('solid').feature('tl1').feature('hmm1').feature('fibt1').label('Fiber [Cords, Belt 1]');
model.physics('solid').feature('tl1').feature('hmm1').feature('fibt1').set('HyperModelSelection', 'LinearElastic');
model.physics('solid').feature('tl1').feature('hmm1').feature('fibt1').set('Fiber_material', 'mat2');
model.physics('solid').feature('tl1').feature('hmm1').feature('fibt1').set('directionSelection', 'userDefinedVector');
model.physics('solid').feature('tl1').feature('hmm1').feature('fibt1').set('direction', {'cos(alpha_belt)' 'sin(alpha_belt)' '0'});
model.physics('solid').feature('tl1').feature('hmm1').feature('fibt1').set('d', 'dcord_belts');
model.physics('solid').feature('tl1').feature('hmm1').feature('fibt1').set('sp', 'spcord_belts');
model.physics('solid').feature('tl1').feature('hmm1').feature('fibt1').selection.set([57]);

model.selection.create('sel6', 'Explicit');
model.selection('sel6').model('comp1');
model.selection('sel6').geom(1);
model.selection('sel6').label('Belt 1');
model.selection('sel6').set([57]);

model.physics('solid').feature('tl1').feature('hmm1').feature('fibt1').selection.named('sel6');
model.physics('solid').feature('tl1').feature('hmm1').feature.duplicate('fibt2', 'fibt1');
model.physics('solid').feature('tl1').feature('hmm1').feature('fibt2').label('Fiber [Cords, Belt 2]');
model.physics('solid').feature('tl1').feature('hmm1').feature('fibt2').selection.set([58]);

model.selection.create('sel7', 'Explicit');
model.selection('sel7').model('comp1');
model.selection('sel7').geom(1);
model.selection('sel7').label('Belt 2');
model.selection('sel7').set([58]);

model.physics('solid').feature('tl1').feature('hmm1').feature('fibt2').selection.named('sel7');
model.physics('solid').feature('tl1').feature('hmm1').feature('fibt2').set('direction', {'-cos(alpha_belt)' 'sin(alpha_belt)' '0'});
model.physics('solid').feature('tl1').feature('hmm1').feature.duplicate('fibt3', 'fibt2');
model.physics('solid').feature('tl1').feature('hmm1').feature('fibt3').label('Fiber [Cords, Belt 3]');
model.physics('solid').feature('tl1').feature('hmm1').feature('fibt3').selection.set([59]);

model.selection.create('sel8', 'Explicit');
model.selection('sel8').model('comp1');
model.selection('sel8').geom(1);
model.selection('sel8').label('Belt 3');
model.selection('sel8').set([59]);

model.physics('solid').feature('tl1').feature('hmm1').feature('fibt3').selection.named('sel8');
model.physics('solid').feature('tl1').feature('hmm1').feature('fibt3').set('directionSelection', 'x2');
model.physics('solid').feature('tl1').create('rollt1', 'RollerTL', 0);
model.physics('solid').feature('tl1').feature('rollt1').selection.set([46 48 49]);
model.physics('solid').prop('Mode2Daxi').set('includeTwist', true);
model.physics('solid').feature('lemm1').create('iss1', 'InitialStressandStrain', 2);
model.physics('solid').feature('lemm1').feature('iss1').set('Sil', {'0' '0' '0' '0' '300[MPa]' '0' '0' '0' '0'});
model.physics('solid').feature('dcnt1').set('penaltyCtrlPenalty', 'ManualTuning');
model.physics('solid').feature('dcnt1').set('fp_penalty', 2);

model.param.set('p0', '200[kPa]');
model.param.descr('p0', 'Inflation pressure');
model.param.set('para', '0');
model.param.descr('para', 'Continuation parameter for inflation');

model.physics('solid').create('bndl1', 'BoundaryLoad', 1);
model.physics('solid').feature('bndl1').label('Inner Pressure');
model.physics('solid').feature('bndl1').selection.set([30 45 48]);
model.physics('solid').feature('bndl1').set('LoadType', 'FollowerPressure');
model.physics('solid').feature('bndl1').set('FollowerPressure', 'p0*para');
model.physics('solid').create('symp1', 'SymmetryPlane', 1);
model.physics('solid').feature('symp1').selection.set([20 21 22 23 25 26]);
model.physics('solid').feature('symp1').set('circumferentialCondition', 'antisymmetry');

model.mesh('mesh1').create('fq1', 'FreeQuad');
model.mesh('mesh1').feature('fq1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('fq1').selection.set([2 3 4 8 19]);
model.mesh('mesh1').feature('fq1').set('smoothcontrol', false);
model.mesh('mesh1').feature('fq1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('fq1').feature('dis1').set('numelem', 1);
model.mesh('mesh1').feature('fq1').feature('dis1').selection.set([15 95 96]);
model.mesh('mesh1').feature('fq1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('fq1').feature('dis2').set('type', 'predefined');
model.mesh('mesh1').feature('fq1').feature('dis2').selection.set([55 56 70]);
model.mesh('mesh1').feature('fq1').feature('dis2').set('elemcount', 6);
model.mesh('mesh1').feature('fq1').feature('dis2').set('elemratio', 1.2);
model.mesh('mesh1').feature('fq1').feature('dis2').set('growthrate', 'exponential');
model.mesh('mesh1').feature('fq1').create('dis3', 'Distribution');
model.mesh('mesh1').feature('fq1').feature('dis3').selection.set([45]);
model.mesh('mesh1').feature('fq1').feature('dis3').set('type', 'predefined');
model.mesh('mesh1').feature('fq1').feature('dis3').set('elemcount', 15);
model.mesh('mesh1').feature('fq1').feature('dis3').set('elemratio', 1.4);
model.mesh('mesh1').feature('fq1').feature('dis3').set('growthrate', 'exponential');
model.mesh('mesh1').feature('fq1').feature('dis3').set('reverse', true);
model.mesh('mesh1').feature('fq1').feature.duplicate('dis4', 'dis3');
model.mesh('mesh1').feature('fq1').feature('dis4').selection.set([71]);
model.mesh('mesh1').feature('fq1').feature('dis4').set('elemratio', 1.6);
model.mesh('mesh1').feature('fq1').feature('dis4').set('reverse', false);
model.mesh('mesh1').feature('fq1').feature.duplicate('dis5', 'dis4');
model.mesh('mesh1').feature('fq1').feature('dis5').selection.set([72]);
model.mesh('mesh1').feature('fq1').feature('dis5').set('elemratio', 1.8);
model.mesh('mesh1').feature('fq1').create('dis6', 'Distribution');
model.mesh('mesh1').feature('fq1').feature('dis6').selection.set([63]);
model.mesh('mesh1').feature('fq1').feature('dis6').set('numelem', 6);
model.mesh('mesh1').feature('fq1').feature('dis6').selection.set([42 43 44 51 52 63]);
model.mesh('mesh1').feature('fq1').create('dis7', 'Distribution');
model.mesh('mesh1').feature('fq1').feature('dis7').selection.set([34 37]);
model.mesh('mesh1').feature('fq1').feature('dis7').set('numelem', 2);
model.mesh('mesh1').feature('fq1').create('dis8', 'Distribution');
model.mesh('mesh1').feature('fq1').feature('dis8').set('type', 'predefined');
model.mesh('mesh1').feature('fq1').feature('dis8').set('elemratio', 1.5);
model.mesh('mesh1').feature('fq1').feature('dis8').selection.set([30]);
model.mesh('mesh1').feature('fq1').create('dis9', 'Distribution');
model.mesh('mesh1').feature('fq1').feature('dis9').selection.set([32 35]);
model.mesh('mesh1').feature('fq1').feature('dis9').set('numelem', 3);
model.mesh('mesh1').feature('fq1').create('dis10', 'Distribution');
model.mesh('mesh1').feature('fq1').feature('dis10').set('type', 'predefined');
model.mesh('mesh1').feature('fq1').feature('dis10').set('elemcount', 10);
model.mesh('mesh1').feature('fq1').feature('dis10').set('elemratio', 1.5);
model.mesh('mesh1').feature('fq1').feature('dis10').set('growthrate', 'exponential');
model.mesh('mesh1').feature('fq1').feature('dis10').set('symmetric', true);
model.mesh('mesh1').feature('fq1').feature('dis10').selection.set([31 33 36]);
model.mesh('mesh1').feature('fq1').create('dis11', 'Distribution');
model.mesh('mesh1').feature('fq1').feature('dis11').selection.set([46 53 54]);
model.mesh('mesh1').feature('fq1').feature('dis11').set('type', 'predefined');
model.mesh('mesh1').feature('fq1').feature('dis11').set('elemcount', 10);
model.mesh('mesh1').feature('fq1').feature('dis11').set('elemratio', 5);
model.mesh('mesh1').feature('fq1').feature('dis11').set('growthrate', 'exponential');
model.mesh('mesh1').run;
model.mesh('mesh1').create('ref1', 'Refine');
model.mesh('mesh1').feature('ref1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('ref1').selection.set([2 3 4]);
model.mesh('mesh1').run('ref1');
model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('map1').selection.set([5 9 10 11 12 13 14 15 16 17 18 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 39 40 41 42 43 44 45]);
model.mesh('mesh1').feature('map1').set('smoothcontrol', false);
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([24 26 27 50 59 60 61 62]);
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 2);
model.mesh('mesh1').feature('map1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis2').set('numelem', 3);
model.mesh('mesh1').feature('map1').feature('dis2').selection.set([49]);
model.mesh('mesh1').feature('map1').create('dis3', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis3').selection.set([47]);
model.mesh('mesh1').feature('map1').create('dis4', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis4').set('numelem', 1);
model.mesh('mesh1').feature('map1').feature('dis4').selection.set([101 102 103]);
model.mesh('mesh1').feature('map1').create('dis5', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis5').set('numelem', 12);
model.mesh('mesh1').feature('map1').feature('dis5').selection.set([131]);
model.mesh('mesh1').feature('map1').create('dis6', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis6').selection.set([130]);
model.mesh('mesh1').feature('map1').feature('dis6').set('type', 'predefined');
model.mesh('mesh1').feature('map1').feature('dis6').set('elemcount', 12);
model.mesh('mesh1').feature('map1').feature('dis6').set('elemratio', 1.2);
model.mesh('mesh1').feature('map1').feature('dis6').set('growthrate', 'exponential');
model.mesh('mesh1').feature('map1').feature('dis6').set('reverse', true);
model.mesh('mesh1').run('map1');
model.mesh('mesh1').create('map2', 'Map');
model.mesh('mesh1').feature('map2').selection.geom('geom1', 2);
model.mesh('mesh1').feature('map2').selection.set([38]);
model.mesh('mesh1').feature('map2').set('smoothcontrol', false);
model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('ftri1').selection.set([7 20]);
model.mesh('mesh1').feature('ftri1').set('smoothcontrol', false);
model.mesh('mesh1').feature('size').set('hauto', 8);
model.mesh('mesh1').feature('ftri1').create('size1', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size1').set('hauto', 7);
model.mesh('mesh1').run('ftri1');
model.mesh('mesh1').create('ftri2', 'FreeTri');
model.mesh('mesh1').feature('ftri2').selection.geom('geom1', 2);
model.mesh('mesh1').feature('ftri2').selection.set([6]);
model.mesh('mesh1').create('edg1', 'Edge');
model.mesh('mesh1').feature('edg1').selection.set([7 8 10]);
model.mesh('mesh1').feature('edg1').create('size1', 'Size');
model.mesh('mesh1').feature('edg1').feature('size1').set('hauto', 1);
model.mesh('mesh1').feature('edg1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('edg1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('edg1').feature('size1').set('hmax', 0.05);
model.mesh('mesh1').run('edg1');
model.mesh('mesh1').create('ftri3', 'FreeTri');
model.mesh('mesh1').feature('ftri3').create('size1', 'Size');
model.mesh('mesh1').feature('ftri3').feature('size1').set('hauto', 9);
model.mesh('mesh1').run;

model.geom('geom2').run('fin');
model.geom('geom2').create('rmd1', 'RemoveDetails');

model.mesh('mesh2').run;
model.mesh('mesh2').autoMeshSize(4);

model.study('std1').label('Study: Fiber Direction');
model.study('std1').feature('stat').set('useadvanceddisable', true);
model.study('std1').feature('stat').set('disabledpair', {'p1'});
model.study('std1').feature('stat').setSolveFor('/physics/solid', false);
model.study('std1').feature('stat').set('disabledphysics', {'solid'});

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').label('Vector Field (cc)');
model.result('pg1').set('titlecolor', 'black');
model.result('pg1').set('edgecolor', 'black');
model.result('pg1').set('legendcolor', 'black');
model.result('pg1').set('defaultPlotID', 'CurvilinearCoordinates/phys1/pdef1/pcond3/pg1');
model.result('pg1').feature.create('str1', 'Streamline');
model.result('pg1').feature('str1').set('posmethod', 'uniform');
model.result('pg1').feature('str1').set('color', 'red');
model.result('pg1').feature('str1').set('smooth', 'internal');
model.result('pg1').feature('str1').set('maxlen', Inf);
model.result('pg1').feature('str1').set('maxtime', Inf);
model.result('pg1').feature('str1').set('maxlen', Inf);
model.result('pg1').feature('str1').set('maxtime', Inf);
model.result('pg1').feature('str1').set('maxlen', Inf);
model.result('pg1').feature('str1').set('maxtime', Inf);
model.result('pg1').feature('str1').set('maxlen', Inf);
model.result('pg1').feature('str1').set('maxtime', Inf);
model.result('pg1').feature('str1').set('maxlen', Inf);
model.result('pg1').feature('str1').set('maxtime', Inf);
model.result('pg1').feature('str1').set('data', 'parent');
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').label('Coordinate system (cc)');
model.result('pg2').create('sys1', 'CoordSysSurface');
model.result('pg2').feature('sys1').set('sys', 'cc_cs');
model.result('pg1').run;
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('sys1').set('placement', 'gausspoints');
model.result('pg2').run;

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/solid', true);
model.study('std2').feature('stat').setSolveFor('/physics/cc', true);
model.study('std2').label('Study: Inflation');
model.study('std2').setGenPlots(false);
model.study('std2').feature('stat').setEntry('activate', 'cc', false);
model.study('std2').feature('stat').set('usesol', true);
model.study('std2').feature('stat').set('notsolmethod', 'sol');
model.study('std2').feature('stat').set('notstudy', 'std1');
model.study('std2').feature('stat').set('useparam', true);
model.study('std2').feature('stat').setIndex('pname', 'dcord_belts', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 'm', 0);
model.study('std2').feature('stat').setIndex('pname', 'dcord_belts', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 'm', 0);
model.study('std2').feature('stat').setIndex('pname', 'para', 0);
model.study('std2').feature('stat').setIndex('plistarr', 'range(0, 0.1, 1)', 0);

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_solid_uext').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_uext').set('scaleval', '1e-2*0.1640483942837476');
model.sol('sol2').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.1640483942837476');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('p1', 'Parametric');
model.sol('sol2').feature('s1').feature.remove('pDef');
model.sol('sol2').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol2').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol2').feature('s1').set('control', 'stat');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('dtech', 'ddog');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol2').feature('s1').feature('fc1').set('dtech', 'ddog');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').set('data', 'dset2');
model.result('pg3').setIndex('looplevel', 11, 0);
model.result('pg3').set('defaultPlotID', 'stress');
model.result('pg3').label('Stress (solid)');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg3').feature('surf1').set('threshold', 'manual');
model.result('pg3').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg3').feature('surf1').set('colortable', 'Prism');
model.result('pg3').feature('surf1').set('colortabletrans', 'none');
model.result('pg3').feature('surf1').set('colorscalemode', 'linear');
model.result('pg3').feature('surf1').set('resolution', 'normal');
model.result('pg3').label('Stress (solid)');
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').set('data', 'dset2');
model.result('pg4').setIndex('looplevel', 11, 0);
model.result('pg4').set('defaultPlotID', 'displacement');
model.result('pg4').label('Displacement (solid)');
model.result('pg4').set('frametype', 'spatial');
model.result('pg4').set('showlegends', true);
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', {'solid.disp'});
model.result('pg4').feature('surf1').set('threshold', 'manual');
model.result('pg4').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg4').feature('surf1').set('colortable', 'SpectrumLight');
model.result('pg4').feature('surf1').set('colortabletrans', 'none');
model.result('pg4').feature('surf1').set('colorscalemode', 'linear');
model.result('pg4').feature('surf1').set('resolution', 'normal');
model.result('pg4').label('Displacement (solid)');
model.result('pg4').run;
model.result('pg3').run;
model.result('pg3').set('showlegendsmaxmin', true);
model.result('pg3').run;
model.result('pg3').feature('surf1').set('unit', 'MPa');
model.result('pg3').feature('surf1').set('rangecoloractive', true);
model.result('pg3').feature('surf1').set('rangecolormax', 15);
model.result('pg3').run;
model.result('pg4').run;
model.result('pg4').label('Out-of-Plane Displacement (solid)');
model.result('pg4').run;
model.result('pg4').feature('surf1').set('expr', 'v');
model.result('pg4').feature('surf1').set('unit', 'mm');
model.result('pg4').run;
model.result.setOnlyPlotWhenRequested(true);
model.result.dataset.create('rev1', 'Revolve2D');
model.result.dataset('rev1').label('Revolution 2D: Tire');
model.result.dataset('rev1').set('data', 'dset2');
model.result.dataset('rev1').set('startangle', -90);
model.result.dataset('rev1').set('revangle', 225);
model.result.dataset('rev1').selection.geom('geom1', 2);
model.result.dataset('rev1').selection.geom('geom1', 2);
model.result.dataset('rev1').selection.set([2 3 4 5 6]);
model.result.dataset.create('mir1', 'Mirror3D');
model.result.dataset('mir1').label('Mirror 3D: Tire');
model.result.dataset('mir1').set('quickplane', 'xy');
model.result.dataset('mir1').set('quickz', '-7E-2');
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').label('Stress, 3D (solid)');
model.result('pg5').set('data', 'mir1');
model.result('pg5').set('titletype', 'manual');
model.result('pg5').set('title', 'von Mises stress (MPa)');
model.result('pg5').set('paramindicator', 'para=eval(para)');
model.result('pg5').set('edges', false);
model.result('pg5').set('showlegendsmaxmin', true);
model.result('pg5').create('vol1', 'Volume');
model.result('pg5').feature('vol1').set('expr', 'solid.misesGp');
model.result('pg5').feature('vol1').set('unit', 'MPa');
model.result('pg5').feature('vol1').set('rangecoloractive', true);
model.result('pg5').feature('vol1').set('rangecolormax', 180);
model.result('pg5').feature('vol1').set('colortable', 'Prism');
model.result('pg5').feature('vol1').label('Tire');
model.result('pg5').feature('vol1').create('def1', 'Deform');
model.result('pg5').feature('vol1').feature('def1').set('revcoordsys', 'cylindrical');
model.result('pg5').feature('vol1').feature('def1').set('scaleactive', true);
model.result.dataset.duplicate('rev2', 'rev1');
model.result.dataset('rev2').label('Revolution 2D: Bead Wires');
model.result.dataset('rev2').set('revangle', 275);
model.result.dataset('rev2').selection.named('sel1');
model.result.dataset.duplicate('mir2', 'mir1');
model.result.dataset('mir2').label('Mirror 3D: Bead Wires');
model.result.dataset('mir2').set('data', 'rev2');
model.result('pg5').feature.duplicate('vol2', 'vol1');
model.result('pg5').feature('vol2').label('Bead Wires');
model.result('pg5').feature('vol2').set('data', 'mir2');
model.result('pg5').feature('vol2').set('solutionparams', 'parent');
model.result('pg5').feature('vol2').set('inheritplot', 'vol1');
model.result.dataset.duplicate('rev3', 'rev2');
model.result.dataset('rev3').label('Revolution 2D: Belt 1');
model.result.dataset('rev3').set('startangle', 135);
model.result.dataset('rev3').set('revangle', 40);
model.result.dataset('rev3').set('layermethod', 'fine');
model.result.dataset('rev3').selection.geom('geom1', 1);
model.result.dataset('rev3').selection.named('sel6');
model.result.dataset.duplicate('mir3', 'mir2');
model.result.dataset('mir3').label('Mirror 3D: Belt 1');
model.result.dataset('mir3').set('hasvar', true);
model.result.dataset('mir3').set('data', 'rev3');
model.result('pg5').create('str1', 'StreamlineSurface');
model.result('pg5').feature('str1').set('revcoordsys', 'cylindrical');
model.result('pg5').feature('str1').label('Belt 1');
model.result('pg5').feature('str1').set('data', 'mir3');
model.result('pg5').feature('str1').set('solutionparams', 'parent');
model.result('pg5').feature('str1').set('expr', {'solid.tl1.hmm1.fibt1.a0R*((mir1side*2)-1)' 'v' 'w'});
model.result('pg5').feature('str1').setIndex('expr', 'solid.tl1.hmm1.fibt1.a0PHI', 1);
model.result('pg5').feature('str1').setIndex('expr', 'solid.tl1.hmm1.fibt1.a0Z*((mir1side*2)-1)', 2);
model.result('pg5').feature('str1').selection.set([5]);
model.result('pg5').feature('str1').set('posmethod', 'uniform');
model.result('pg5').feature('str1').set('udist', 0.02);
model.result('pg5').feature('str1').set('linetype', 'tube');
model.result('pg5').feature('str1').set('radiusexpr', 'solid.tl1.hmm1.fibt1.d/2');
model.result('pg5').feature('str1').set('tuberadiusscaleactive', true);
model.result('pg5').feature('str1').set('tuberadiusscale', 2);
model.result('pg5').feature('str1').set('inheritplot', 'vol1');
model.result('pg5').feature('str1').create('col1', 'Color');
model.result('pg5').feature('str1').feature('col1').set('expr', 'solid.tl1.hmm1.fibt1.mises');
model.result('pg5').feature('str1').feature('col1').set('unit', 'MPa');
model.result('pg5').feature('str1').create('def1', 'Deform');
model.result('pg5').feature('str1').feature('def1').set('revcoordsys', 'cylindrical');
model.result.dataset.duplicate('rev4', 'rev3');
model.result.dataset('rev4').label('Revolution 2D: Belt 2');
model.result.dataset('rev4').set('revangle', 30);
model.result.dataset('rev4').selection.named('sel7');
model.result.dataset.duplicate('mir4', 'mir3');
model.result.dataset('mir4').label('Mirror 3D: Belt 2');
model.result.dataset('mir4').set('data', 'rev4');
model.result('pg5').feature.duplicate('str2', 'str1');
model.result('pg5').feature('str2').label('Belt 2');
model.result('pg5').feature('str2').set('data', 'mir4');
model.result('pg5').feature('str2').setIndex('expr', 'solid.tl1.hmm1.fibt2.a0R*((mir1side*2)-1)', 0);
model.result('pg5').feature('str2').setIndex('expr', 'solid.tl1.hmm1.fibt2.a0PHI', 1);
model.result('pg5').feature('str2').setIndex('expr', 'solid.tl1.hmm1.fibt2.a0Z*((mir1side*2)-1)', 2);
model.result('pg5').feature('str2').set('radiusexpr', 'solid.tl1.hmm1.fibt2.d/2');
model.result('pg5').feature('str2').feature('col1').set('expr', 'solid.tl1.hmm1.fibt2.mises');
model.result('pg5').run;
model.result.dataset.duplicate('rev5', 'rev4');
model.result.dataset('rev5').label('Revolution 2D: Belt 3');
model.result.dataset('rev5').set('revangle', 20);
model.result.dataset('rev5').selection.named('sel8');
model.result.dataset.duplicate('mir5', 'mir4');
model.result.dataset('mir5').set('data', 'rev5');
model.result.dataset('mir5').label('Mirror 2D: Belt 3');
model.result('pg5').feature.duplicate('str3', 'str2');
model.result('pg5').feature('str3').label('Belt 3');
model.result('pg5').feature('str3').set('data', 'mir5');
model.result('pg5').feature('str3').setIndex('expr', 'solid.tl1.hmm1.fibt3.a0R', 0);
model.result('pg5').feature('str3').setIndex('expr', 'solid.tl1.hmm1.fibt3.a0PHI', 1);
model.result('pg5').feature('str3').setIndex('expr', 'solid.tl1.hmm1.fibt3.a0Z', 2);
model.result('pg5').feature('str3').set('udist', 0.008);
model.result('pg5').feature('str3').set('uadv', 'manual');
model.result('pg5').feature('str3').set('udistend', 0.1);
model.result('pg5').feature('str3').set('radiusexpr', 'solid.tl1.hmm1.fibt3.d/2');
model.result('pg5').feature('str3').feature('col1').set('expr', 'solid.tl1.hmm1.fibt3.mises');
model.result('pg5').run;
model.result.dataset.duplicate('dset3', 'dset2');
model.result.dataset('dset3').label('Rim geometry');
model.result.dataset('dset3').set('comp', 'comp2');
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').label('Rim');
model.result('pg5').feature('surf1').set('data', 'dset3');
model.result('pg5').feature('surf1').set('expr', '1');
model.result('pg5').feature('surf1').set('coloring', 'uniform');
model.result('pg5').feature('surf1').set('resolution', 'fine');
model.result('pg5').feature('surf1').create('mtrl1', 'MaterialAppearance');
model.result('pg5').run;
model.result.duplicate('pg6', 'pg5');
model.result('pg6').label('Material and Fiber Direction');
model.result('pg6').set('titletype', 'none');
model.result('pg6').feature('vol1').set('expr', '1');
model.result('pg6').feature('vol1').create('mtrl1', 'MaterialAppearance');
model.result('pg6').feature('vol1').feature('mtrl1').set('material', 'matlnk2');
model.result('pg6').run;
model.result('pg6').feature('vol2').create('mtrl1', 'MaterialAppearance');
model.result('pg6').run;
model.result('pg6').feature('str1').feature.remove('col1');
model.result('pg6').feature('str1').set('inheritplot', 'none');
model.result('pg6').feature('str1').set('color', 'custom');
model.result('pg6').feature('str1').set('customcolor', [0.9921568632125854 0.7254902124404907 0.07450980693101883]);
model.result('pg6').feature('str1').feature('def1').set('scaleactive', true);
model.result('pg6').feature('str1').feature('def1').set('scale', 1);
model.result('pg6').feature('str2').feature.remove('col1');
model.result('pg6').feature('str2').set('inheritplot', 'none');
model.result('pg6').feature('str2').set('color', 'custom');
model.result('pg6').feature('str2').set('customcolor', [0.21176470816135406 0.5490196347236633 0.7960784435272217]);
model.result('pg6').feature('str2').feature('def1').set('scaleactive', true);
model.result('pg6').feature('str2').feature('def1').set('scale', 1);
model.result('pg6').feature('str3').feature.remove('col1');
model.result('pg6').feature('str3').set('inheritplot', 'none');
model.result('pg6').feature('str3').set('color', 'custom');
model.result('pg6').feature('str3').set('customcolor', [0.6509804129600525 0.8392156958580017 0.8156862854957581]);
model.result('pg6').feature('str3').feature('def1').set('scaleactive', true);
model.result('pg6').feature('str3').feature('def1').set('scale', 1);
model.result('pg6').run;
model.result.dataset.duplicate('rev6', 'rev3');
model.result.dataset('rev6').label('Revolution 2D: Carcass');
model.result.dataset('rev6').set('revangle', 50);
model.result.dataset('rev6').selection.geom('geom1', 1);
model.result.dataset('rev6').selection.set([35 36 37 42 52 53 56]);
model.result.dataset.duplicate('mir6', 'mir3');
model.result.dataset('mir6').label('Mirror 3D: Carcass');
model.result.dataset('mir6').set('data', 'rev6');
model.result('pg6').feature.duplicate('str4', 'str1');
model.result('pg6').feature('str4').label('Carcass');
model.result('pg6').feature('str4').set('data', 'mir6');
model.result('pg6').feature('str4').set('expr', {'cc.e1R' 'cc.e1PHI' 'cc.e1Z'});
model.result('pg6').feature('str4').set('descr', 'First basis vector');
model.result('pg6').feature('str4').setIndex('expr', 'cc.e1R*((mir1side*2)-1)', 0);
model.result('pg6').feature('str4').setIndex('expr', 'cc.e1Z*((mir1side*2)-1)', 2);
model.result('pg6').feature('str4').selection.set([4]);
model.result('pg6').feature('str4').set('udist', 0.01);
model.result('pg6').feature('str4').set('radiusexpr', 'dcord_belts/2');
model.result('pg6').feature('str4').set('color', 'red');
model.result('pg6').run;
model.result('pg6').run;
model.result.setOnlyPlotWhenRequested(false);

model.view.create('view8', 3);
model.view('view8').set('showgrid', false);
model.view('view8').set('showaxisorientation', false);
model.view('view8').set('ssao', true);
model.view('view8').set('shadowmapping', true);
model.view('view8').set('environmentmap', 'envmap_meadow');
model.view('view8').set('flooreffect', true);
model.view('view8').camera.set('zoomanglefull', 5);
model.view('view8').camera.set('position', [-263 -195 373]);
model.view('view8').camera.setIndex('target', 0.78, 0);
model.view('view8').camera.setIndex('target', 0, 1);
model.view('view8').camera.set('target', [0.78 0 -0.04]);
model.view('view8').camera.set('up', [-0.7 0.71 -0.12]);
model.view('view8').camera.set('rotationpoint', [0.78 -0.005 0.044]);

model.result('pg6').run;
model.result('pg6').set('view', 'view8');
model.result('pg6').run;
model.result('pg6').run;
model.result('pg6').feature('str1').create('vis1', 'VisualEffects');
model.result('pg6').run;
model.result('pg6').feature('str1').feature('vis1').set('lighting', false);
model.result('pg6').feature('str1').feature('vis1').set('ssaomode', 'manual');
model.result('pg6').feature('str1').feature('vis1').set('ssaocasts', false);
model.result('pg6').feature('str1').feature('vis1').set('ssaoreceives', false);
model.result('pg6').feature('str1').feature('vis1').set('directmode', 'manual');
model.result('pg6').feature('str1').feature('vis1').set('directcasts', false);
model.result('pg6').feature('str1').feature('vis1').set('directreceives', false);
model.result('pg6').run;
model.result('pg6').feature('str2').feature.copy('vis1', 'pg6/str1/vis1');
model.result('pg6').run;
model.result('pg6').run;
model.result('pg6').run;
model.result('pg6').feature('str3').feature.copy('vis1', 'pg6/str1/vis1');
model.result('pg6').run;
model.result('pg6').run;
model.result('pg6').run;
model.result('pg6').feature('str4').feature.copy('vis1', 'pg6/str1/vis1');
model.result('pg6').run;
model.result('pg6').run;
model.result('pg5').run;
model.result('pg5').set('view', 'view8');
model.result('pg5').run;
model.result('pg6').run;
model.result('pg5').run;
model.result('pg5').feature('str1').feature.copy('vis1', 'pg6/str1/vis1');
model.result('pg5').run;
model.result('pg6').run;
model.result('pg5').run;
model.result('pg5').feature('str2').feature.copy('vis1', 'pg6/str1/vis1');
model.result('pg5').run;
model.result('pg6').run;
model.result('pg5').run;
model.result('pg5').feature('str3').feature.copy('vis1', 'pg6/str1/vis1');
model.result('pg5').run;
model.result.dataset('rev1').set('startangle', '-90+180');
model.result.dataset('rev1').set('revangle', '225-180');
model.result.dataset('rev2').set('startangle', '-90+180');
model.result.dataset('rev2').set('revangle', '275-180');
model.result('pg6').run;
model.result('pg6').feature('surf1').active(false);
model.result('pg6').run;
model.result('pg5').run;
model.result('pg5').feature('surf1').active(false);
model.result('pg5').run;
model.result.dataset('rev1').set('startangle', -90);
model.result.dataset('rev1').set('revangle', 225);
model.result.dataset('rev2').set('startangle', -90);
model.result.dataset('rev2').set('revangle', 275);
model.result('pg6').run;
model.result('pg6').feature('surf1').active(true);
model.result('pg6').run;
model.result('pg5').run;
model.result('pg5').feature('surf1').active(true);

model.selection('sel3').set('color', 'custom');
model.selection('sel3').set('customcolor', [0.6352941393852234 0.9411764740943909 0.01568627543747425]);
model.selection('sel4').set('color', '9');
model.selection('sel1').set('color', '4');
model.selection('sel2').set('color', 'custom');
model.selection('sel2').set('customcolor', [0.6509804129600525 0.9411764740943909 0.9921568632125854]);
model.selection('sel3').set('color', 'none');
model.selection('sel4').set('color', 'none');
model.selection('sel1').set('color', 'none');
model.selection('sel2').set('color', 'none');

model.result('pg6').run;

model.title('Tire Inflation');

model.description(['This model showcases how to use fibers in thin layers to model thin anisotropic composites embedded in a solid without explicitly drawing either the layer of material or the reinforcing fibers. In particular, this is used to model steel cords in tire belts that are used to provide structural support to the tire below the tread. Moreover, a curvilinear coordinate system is used to define the anisotropic material properties of the carcass ply.' newline  newline 'The model also makes use of the ' native2unicode(hex2dec({'20' '1c'}), 'unicode') 'twist' native2unicode(hex2dec({'20' '1d'}), 'unicode') ' degree of freedom in 2D axisymmetry to capture the azimuthal displacement induced by the orientation of the cords during inflation of the tire.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('tire_inflation.mph');

model.modelNode.label('Components');

out = model;
