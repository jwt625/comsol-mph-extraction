function out = model
%
% ecm_microbore.m
%
% Model exported on May 26 2025, 21:28 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Electrodeposition_Module/Tutorials');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('cd', 'PrimaryCurrentDistribution', 'geom1');
model.physics('cd').model('comp1');

model.multiphysics.create('ndbdg1', 'NonDeformingBoundaryDeformedGeometry', 'geom1', 1);
model.multiphysics('ndbdg1').set('Echem_physics', 'cd');
model.multiphysics('ndbdg1').selection.all;
model.multiphysics.create('desdg1', 'DeformingElectrodeSurfaceDeformedGeometry', 'geom1', 1);
model.multiphysics('desdg1').set('Echem_physics', 'cd');
model.multiphysics('desdg1').selection.all;

model.common.create('free1', 'DeformingDomainDeformedGeometry', 'comp1');
model.common('free1').set('smoothingType', 'hyperelastic');
model.common('free1').selection.all;

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/cd', true);
model.study('std1').feature('time').setSolveFor('/multiphysics/ndbdg1', true);
model.study('std1').feature('time').setSolveFor('/multiphysics/desdg1', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('a1', '82.5[um]', 'Bore bottom radius');
model.param.set('a2', '64[um]', 'Bore top radius');
model.param.set('sigma', '7[S/m]', 'Electrolyte conductivity');
model.param.set('E_cell', '20[V]', 'Cell voltage');
model.param.set('s_seed', '0.001[mm]', 'Deformation seed layer thickness');
model.param.set('M_Me', '54.94[g/mol]', 'Molar mass. dissolving species');
model.param.set('rho_Me', '7.77[g/cm^3]', 'Density, dissolving species');
model.param.set('n', '2.4', 'Number of electrons per dissolving species');
model.param.set('i_threshold', '10[A/cm^2]', 'Threshold current density for dissolution');

model.geom('geom1').lengthUnit('mm');
model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', [3 3]);
model.geom('geom1').feature('r1').set('pos', [0 -1]);
model.geom('geom1').run('r1');
model.geom('geom1').create('pol1', 'Polygon');
model.geom('geom1').feature('pol1').set('source', 'table');
model.geom('geom1').feature('pol1').setIndex('table', 0, 0, 0);
model.geom('geom1').feature('pol1').setIndex('table', 2, 0, 1);
model.geom('geom1').feature('pol1').setIndex('table', 0.05, 1, 0);
model.geom('geom1').feature('pol1').setIndex('table', 2, 1, 1);
model.geom('geom1').feature('pol1').setIndex('table', 0.05, 2, 0);
model.geom('geom1').feature('pol1').setIndex('table', 0.07, 2, 1);
model.geom('geom1').feature('pol1').setIndex('table', 0, 3, 0);
model.geom('geom1').feature('pol1').setIndex('table', 0.04, 3, 1);
model.geom('geom1').run('pol1');
model.geom('geom1').create('pol2', 'Polygon');
model.geom('geom1').feature('pol2').set('source', 'table');
model.geom('geom1').feature('pol2').setIndex('table', 'a1', 0, 0);
model.geom('geom1').feature('pol2').setIndex('table', -1, 0, 1);
model.geom('geom1').feature('pol2').setIndex('table', 'a2', 1, 0);
model.geom('geom1').feature('pol2').setIndex('table', 0, 1, 1);
model.geom('geom1').feature('pol2').setIndex('table', 3, 2, 0);
model.geom('geom1').feature('pol2').setIndex('table', 0, 2, 1);
model.geom('geom1').feature('pol2').setIndex('table', 3, 3, 0);
model.geom('geom1').feature('pol2').setIndex('table', -1, 3, 1);
model.geom('geom1').run('pol2');
model.geom('geom1').create('pol3', 'Polygon');
model.geom('geom1').feature('pol3').set('source', 'table');
model.geom('geom1').feature('pol3').setIndex('table', 0.25, 0, 0);
model.geom('geom1').feature('pol3').setIndex('table', 0, 0, 1);
model.geom('geom1').feature('pol3').setIndex('table', 1.25, 1, 0);
model.geom('geom1').feature('pol3').setIndex('table', 1, 1, 1);
model.geom('geom1').feature('pol3').setIndex('table', 3, 2, 0);
model.geom('geom1').feature('pol3').setIndex('table', 1, 2, 1);
model.geom('geom1').feature('pol3').setIndex('table', 3, 3, 0);
model.geom('geom1').feature('pol3').setIndex('table', 0, 3, 1);
model.geom('geom1').run('pol3');
model.geom('geom1').create('dif1', 'Difference');
model.geom('geom1').feature('dif1').selection('input').set({'r1'});
model.geom('geom1').feature('dif1').selection('input2').set({'pol1' 'pol2' 'pol3'});
model.geom('geom1').run('dif1');
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').set('size', {'0.25+s_seed*3-a2' '1'});
model.geom('geom1').feature('r2').setIndex('size', 's_seed', 1);
model.geom('geom1').feature('r2').set('pos', {'a2' '-s_seed'});
model.geom('geom1').run('r2');
model.geom('geom1').create('uni1', 'Union');
model.geom('geom1').feature('uni1').selection('input').set({'dif1' 'r2'});
model.geom('geom1').feature('uni1').set('intbnd', false);
model.geom('geom1').runPre('fin');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');

model.geom('geom1').run;

model.selection('sel1').geom(1);
model.selection('sel1').set([6 7 10]);
model.selection('sel1').label('Anode');
model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').geom(1);
model.selection('sel2').set([3 4]);
model.selection('sel2').label('Cathode');
model.selection.create('sel3', 'Explicit');
model.selection('sel3').model('comp1');
model.selection('sel3').geom(1);
model.selection('sel3').set([3]);
model.selection('sel3').label('Cathode tip');

model.func.create('step1', 'Step');
model.func('step1').model('comp1');

model.physics('cd').feature('ice1').set('sigmal_mat', 'userdef');
model.physics('cd').feature('ice1').set('sigmal', {'sigma' '0' '0' '0' 'sigma' '0' '0' '0' 'sigma'});
model.physics('cd').create('es1', 'ElectrodeSurface', 1);
model.physics('cd').feature('es1').selection.named('sel1');
model.physics('cd').feature('es1').set('phisext0', 'E_cell');
model.physics('cd').feature('es1').setIndex('Species', 's1', 0, 0);
model.physics('cd').feature('es1').setIndex('rhos', 8960, 0, 0);
model.physics('cd').feature('es1').setIndex('Ms', 0.06355, 0, 0);
model.physics('cd').feature('es1').setIndex('Species', 's1', 0, 0);
model.physics('cd').feature('es1').setIndex('rhos', 8960, 0, 0);
model.physics('cd').feature('es1').setIndex('Ms', 0.06355, 0, 0);
model.physics('cd').feature('es1').setIndex('rhos', 'rho_Me', 0, 0);
model.physics('cd').feature('es1').setIndex('Ms', 'M_Me', 0, 0);
model.physics('cd').feature('es1').set('SolveForDissolvingDepositingConcentrationVariable', false);
model.physics('cd').feature('es1').feature('er1').set('nm', 'n');
model.physics('cd').feature('es1').feature('er1').setIndex('Vib', '1*step1(cd.itot/i_threshold-1)', 0, 0);
model.physics('cd').create('es2', 'ElectrodeSurface', 1);
model.physics('cd').feature('es2').selection.named('sel2');

model.multiphysics('ndbdg1').set('BoundaryCondition', 'ZeroNormalDisplacement');
model.multiphysics('desdg1').selection.set([1 2 5 6 7 8 9 10 11 12]);

model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('size').set('hauto', 3);
model.mesh('mesh1').feature('size').set('hnarrow', 3);
model.mesh('mesh1').feature('ftri1').create('size1', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size1').selection.geom('geom1', 1);
model.mesh('mesh1').feature('ftri1').feature('size1').selection.named('sel1');
model.mesh('mesh1').feature('ftri1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('ftri1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 0.005);
model.mesh('mesh1').feature('ftri1').create('size2', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size2').selection.geom('geom1', 1);
model.mesh('mesh1').feature('ftri1').feature('size2').selection.named('sel3');
model.mesh('mesh1').feature('ftri1').feature('size2').set('custom', true);
model.mesh('mesh1').feature('ftri1').feature('size2').set('hmaxactive', true);
model.mesh('mesh1').feature('ftri1').feature('size2').set('hmax', 0.005);
model.mesh('mesh1').run;

model.study('std1').feature('time').set('autoremesh', true);

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_phil').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_material_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_phil').set('scaleval', '1');
model.sol('sol1').feature('v1').feature('comp1_material_disp').set('scaleval', '4.2366224755104154E-7');
model.sol('sol1').feature('v1').feature('comp1_material_lm_nv').set('out', 'off');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.1,1)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('eventout', true);
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('arDef').set('autoremeshgeom', 'geom1');
model.sol('sol1').feature('t1').feature('arDef').set('stopcondtype', 'quality');
model.sol('sol1').feature('t1').feature('arDef').set('stopexpr', 'comp1.material.minqual');
model.sol('sol1').feature('t1').feature('arDef').set('stopval', '0.2');
model.sol('sol1').feature('t1').feature('arDef').set('consistentremesh', 'bweuler');
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('mumpsalloc', 1.4);
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol.create('sol2');
model.sol('sol2').label('Remeshed Solution 1');
model.sol('sol2').study('std1');
model.sol('sol1').feature('t1').feature('arDef').set('tadapsol', 'sol2');
model.sol('sol1').runAll;

model.result.dataset.create('rev1', 'Revolve2D');
model.result.dataset('rev1').set('data', 'dset2');
model.result.dataset('rev1').set('revangle', 225);
model.result.dataset('rev1').set('startangle', -90);
model.result.dataset('rev1').set('hasspacevars', true);
model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset2');
model.result('pg1').setIndex('looplevel', 17, 0);
model.result('pg1').label('Electrolyte Potential (cd)');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'phil'});
model.result('pg1').create('str1', 'Streamline');
model.result('pg1').feature('str1').set('expr', {'cd.Ilr' 'cd.Ilz'});
model.result('pg1').feature('str1').set('posmethod', 'uniform');
model.result('pg1').feature('str1').set('recover', 'pprint');
model.result('pg1').feature('str1').set('pointtype', 'arrow');
model.result('pg1').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg1').feature('str1').set('color', 'gray');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'rev1');
model.result('pg2').setIndex('looplevel', 17, 0);
model.result('pg2').label('Electrolyte Potential, 3D (cd)');
model.result('pg2').create('mslc1', 'Multislice');
model.result('pg2').feature('mslc1').set('expr', {'phil'});
model.result('pg2').create('str1', 'Streamline');
model.result('pg2').feature('str1').set('revcoordsys', 'cylindrical');
model.result('pg2').feature('str1').set('expr', {'cd.Ilr' 'cd.Ilphi' 'cd.Ilz'});
model.result('pg2').feature('str1').set('pointtype', 'arrow');
model.result('pg2').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg2').feature('str1').set('color', 'gray');
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').set('data', 'dset2');
model.result('pg3').setIndex('looplevel', 17, 0);
model.result('pg3').label('Electrolyte Current Density (cd)');
model.result('pg3').create('str1', 'Streamline');
model.result('pg3').feature('str1').set('expr', {'cd.Ilr' 'cd.Ilz'});
model.result('pg3').feature('str1').set('posmethod', 'uniform');
model.result('pg3').feature('str1').set('recover', 'pprint');
model.result('pg3').feature('str1').set('pointtype', 'arrow');
model.result('pg3').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg3').feature('str1').set('color', 'gray');
model.result('pg3').feature('str1').create('col1', 'Color');
model.result('pg3').feature('str1').feature('col1').set('expr', 'root.comp1.cd.IlMag');
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').set('data', 'rev1');
model.result('pg4').setIndex('looplevel', 17, 0);
model.result('pg4').label('Electrolyte Current Density, 3D (cd)');
model.result('pg4').create('str1', 'Streamline');
model.result('pg4').feature('str1').set('revcoordsys', 'cylindrical');
model.result('pg4').feature('str1').set('expr', {'cd.Ilr' 'cd.Ilphi' 'cd.Ilz'});
model.result('pg4').feature('str1').set('pointtype', 'arrow');
model.result('pg4').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg4').feature('str1').set('color', 'gray');
model.result('pg4').feature('str1').create('col1', 'Color');
model.result('pg4').feature('str1').feature('col1').set('expr', 'root.comp1.cd.IlMag');
model.result('pg3').create('line1', 'Line');
model.result('pg3').feature('line1').set('expr', {'abs(cd.itot)'});
model.result('pg3').feature('line1').set('linetype', 'tube');
model.result('pg3').feature('line1').set('inherittubescale', false);
model.result('pg3').feature('line1').set('inheritplot', 'str1');
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', {'abs(cd.itot)'});
model.result('pg4').feature('surf1').set('inheritplot', 'str1');
model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').set('data', 'dset2');
model.result('pg5').setIndex('looplevel', 17, 0);
model.result('pg5').label('Electrode Potential with Respect to Ground (cd)');
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').set('data', 'rev1');
model.result('pg6').setIndex('looplevel', 17, 0);
model.result('pg6').label('Electrode Potential with Respect to Ground, 3D (cd)');
model.result('pg5').create('line1', 'Line');
model.result('pg5').feature('line1').set('expr', {'cd.phisext'});
model.result('pg5').feature('line1').set('linetype', 'tube');
model.result('pg5').feature('line1').set('inherittubescale', false);
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', {'cd.phisext'});
model.result.create('pg7', 'PlotGroup2D');
model.result('pg7').set('data', 'dset2');
model.result('pg7').setIndex('looplevel', 17, 0);
model.result('pg7').label('Electrode Potential vs. Adjacent Reference (cd)');
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').set('data', 'rev1');
model.result('pg8').setIndex('looplevel', 17, 0);
model.result('pg8').label('Electrode Potential vs. Adjacent Reference, 3D (cd)');
model.result('pg7').create('str1', 'Streamline');
model.result('pg7').feature('str1').set('expr', {'cd.Ilr' 'cd.Ilz'});
model.result('pg7').feature('str1').set('posmethod', 'uniform');
model.result('pg7').feature('str1').set('recover', 'pprint');
model.result('pg7').feature('str1').set('pointtype', 'arrow');
model.result('pg7').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg7').feature('str1').set('color', 'gray');
model.result('pg8').create('str1', 'Streamline');
model.result('pg8').feature('str1').set('revcoordsys', 'cylindrical');
model.result('pg8').feature('str1').set('expr', {'cd.Ilr' 'cd.Ilphi' 'cd.Ilz'});
model.result('pg8').feature('str1').set('pointtype', 'arrow');
model.result('pg8').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg8').feature('str1').set('color', 'gray');
model.result('pg7').create('line1', 'Line');
model.result('pg7').feature('line1').set('expr', {'cd.Evsref'});
model.result('pg7').feature('line1').set('linetype', 'tube');
model.result('pg7').feature('line1').set('inherittubescale', false);
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').feature('surf1').set('expr', {'cd.Evsref'});
model.result.create('pg9', 'PlotGroup2D');
model.result('pg9').set('data', 'dset2');
model.result('pg9').setIndex('looplevel', 17, 0);
model.result('pg9').label('Deformed Geometry');
model.result('pg9').create('mesh1', 'Mesh');
model.result('pg9').feature('mesh1').set('meshdomain', 'surface');
model.result('pg9').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg9').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg9').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg9').feature('mesh1').create('sel1', 'MeshSelection');
model.result('pg9').feature('mesh1').feature('sel1').selection.set([1]);
model.result('pg9').feature('mesh1').set('qualmeasure', 'custom');
model.result('pg9').feature('mesh1').set('qualexpr', 'comp1.material.relVol');
model.result('pg9').feature('mesh1').set('colorrangeunitinterval', false);
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('str1').set('posmethod', 'magnitude');
model.result('pg1').feature('str1').set('mdist', {'0.0010' '0.030'});
model.result('pg1').run;
model.result.create('pg10', 'PlotGroup1D');
model.result('pg10').run;
model.result('pg10').label('Bore Shape');
model.result('pg10').create('lngr1', 'LineGraph');
model.result('pg10').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg10').feature('lngr1').set('linewidth', 'preference');
model.result('pg10').feature('lngr1').set('data', 'dset2');
model.result('pg10').feature('lngr1').setIndex('looplevelinput', 'first', 0);
model.result('pg10').feature('lngr1').selection.named('sel1');
model.result('pg10').feature('lngr1').set('expr', 'z');
model.result('pg10').feature('lngr1').set('xdata', 'expr');
model.result('pg10').feature('lngr1').set('xdataexpr', 'r');
model.result('pg10').feature('lngr1').set('legend', true);
model.result('pg10').run;
model.result('pg10').feature.duplicate('lngr2', 'lngr1');
model.result('pg10').run;
model.result('pg10').feature('lngr2').setIndex('looplevelinput', 'interp', 0);
model.result('pg10').feature('lngr2').setIndex('interp', 0.5, 0);
model.result('pg10').run;
model.result('pg10').feature.duplicate('lngr3', 'lngr2');
model.result('pg10').run;
model.result('pg10').feature('lngr3').setIndex('interp', 1, 0);
model.result('pg10').feature.duplicate('lngr4', 'lngr3');
model.result('pg10').run;
model.result('pg10').feature('lngr4').set('linecolor', 'black');
model.result('pg10').feature('lngr4').set('legend', false);
model.result('pg10').run;
model.result('pg10').set('titletype', 'manual');
model.result('pg10').set('title', 'Bore shape for t=0, 0.5 and 1 s');
model.result('pg10').set('axislimits', true);
model.result('pg10').set('xmin', 0);
model.result('pg10').set('xmax', 0.3);
model.result('pg10').set('ymin', -0.2);
model.result('pg10').set('ymax', 0.01);
model.result('pg10').set('legendpos', 'lowerright');
model.result('pg10').run;
model.result.dataset.duplicate('dset3', 'dset2');
model.result.dataset('dset3').selection.geom('geom1', 1);
model.result.dataset('dset3').selection.named('sel1');
model.result.dataset.create('rev2', 'Revolve2D');
model.result.dataset('rev2').set('data', 'dset3');
model.result.create('pg11', 'PlotGroup3D');
model.result('pg11').run;
model.result('pg11').label('Current Density on the Bore Surface');
model.result('pg11').set('data', 'rev2');
model.result('pg11').set('edges', false);
model.result('pg11').create('surf1', 'Surface');
model.result('pg11').feature('surf1').set('expr', 'cd.itot');
model.result('pg11').feature('surf1').set('descr', 'Total interface current density');
model.result('pg11').run;
model.result.export.create('anim1', 'Animation');
model.result.export('anim1').set('fontsize', '9');
model.result.export('anim1').set('colortheme', 'globaltheme');
model.result.export('anim1').set('customcolor', [1 1 1]);
model.result.export('anim1').set('background', 'color');
model.result.export('anim1').set('gltfincludelines', 'on');
model.result.export('anim1').set('title1d', 'on');
model.result.export('anim1').set('legend1d', 'on');
model.result.export('anim1').set('logo1d', 'on');
model.result.export('anim1').set('options1d', 'on');
model.result.export('anim1').set('title2d', 'on');
model.result.export('anim1').set('legend2d', 'on');
model.result.export('anim1').set('logo2d', 'on');
model.result.export('anim1').set('options2d', 'off');
model.result.export('anim1').set('title3d', 'on');
model.result.export('anim1').set('legend3d', 'on');
model.result.export('anim1').set('logo3d', 'on');
model.result.export('anim1').set('options3d', 'off');
model.result.export('anim1').set('axisorientation', 'on');
model.result.export('anim1').set('grid', 'on');
model.result.export('anim1').set('axes1d', 'on');
model.result.export('anim1').set('axes2d', 'on');
model.result.export('anim1').set('showgrid', 'on');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('plotgroup', 'pg11');
model.result.export('anim1').set('looplevelinput', 'interp');
model.result.export('anim1').set('interp', 'range(0,0.1,1)');
model.result.export('anim1').run;

model.title('Electrochemical Machining of a Microbore');

model.description('This example models removal of metal by electrochemical machining (ECM). A primary current distribution model is used with a current density threshold condition, below which no material removal occurs. The model geometry is in 2D with axial symmetry.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('ecm_microbore.mph');

model.modelNode.label('Components');

out = model;
