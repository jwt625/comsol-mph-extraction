function out = model
%
% ball_check_valve.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Structural_Mechanics_Module/Fluid-Structure_Interaction');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('spf', 'TurbulentFlowAlgebraicYplus', 'geom1');
model.physics('spf').model('comp1');
model.physics('spf').field('velocity').field('u_fluid');
model.physics('spf').field('velocity').component({'u_fluid' 'v_fluid' 'w_fluid'});
model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');
model.physics('solid').field('displacement').field('u_solid');
model.physics('solid').field('displacement').component({'u_solid' 'v_solid' 'w_solid'});
model.physics('solid').prop('ShapeProperty').set('order_displacement', '2');

model.multiphysics.create('fsi1', 'FluidStructureInteractionBC', 'geom1', 1);
model.multiphysics('fsi1').set('Structure_physics', 'solid');
model.multiphysics('fsi1').selection.all;

model.common.create('free1', 'DeformingDomain', 'comp1');
model.common('free1').set('smoothingType', 'yeoh');
model.common('free1').selection.set([]);

model.study.create('std1');
model.study('std1').create('wdi', 'WallDistanceInitialization');
model.study('std1').feature('wdi').set('solnum', 'auto');
model.study('std1').feature('wdi').set('notsolnum', 'auto');
model.study('std1').feature('wdi').set('outputmap', {});
model.study('std1').feature('wdi').set('ngenAUX', '1');
model.study('std1').feature('wdi').set('goalngenAUX', '1');
model.study('std1').feature('wdi').set('ngenAUX', '1');
model.study('std1').feature('wdi').set('goalngenAUX', '1');
model.study('std1').feature('wdi').setSolveFor('/physics/spf', true);
model.study('std1').feature('wdi').setSolveFor('/physics/solid', true);
model.study('std1').feature('wdi').setSolveFor('/multiphysics/fsi1', true);
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').set('initialtime', '0');
model.study('std1').feature('time').set('solnum', 'auto');
model.study('std1').feature('time').set('notsolnum', 'auto');
model.study('std1').feature('time').set('outputmap', {});
model.study('std1').feature('time').setSolveFor('/physics/spf', true);
model.study('std1').feature('time').setSolveFor('/physics/solid', true);
model.study('std1').feature('time').setSolveFor('/multiphysics/fsi1', true);

model.param.set('r1', '2.5[mm]');
model.param.descr('r1', 'Inner radius');
model.param.set('r2', '4.2[mm]');
model.param.descr('r2', 'Ball chamber inner radius');
model.param.set('r3', '3.6[mm]');
model.param.descr('r3', 'Ball radius');
model.param.set('r4', '5[mm]');
model.param.descr('r4', 'Outer radius');
model.param.set('l', '12[mm]');
model.param.descr('l', 'Ball chamber length');
model.param.set('p0', '25[mbar]');
model.param.descr('p0', 'Maximum inlet pressure');
model.param.set('k0', '4[N/m]');
model.param.descr('k0', 'Spring constant');
model.param.set('l0', '5[mm]');
model.param.descr('l0', 'Spring predeformation');
model.param.set('offset', '5[um]');
model.param.descr('offset', 'Contact offset');

model.geom('geom1').lengthUnit('mm');
model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', {'r4-r1' 'l'});
model.geom('geom1').feature('r1').set('pos', {'r1' '-l'});
model.geom('geom1').run('r1');
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').set('size', {'r4-r2' 'l'});
model.geom('geom1').feature('r2').set('pos', {'r2' '0'});
model.geom('geom1').run('r2');
model.geom('geom1').create('r3', 'Rectangle');
model.geom('geom1').feature('r3').set('size', {'r4-r1' '3/2*l'});
model.geom('geom1').feature('r3').set('pos', {'r1' 'l'});
model.geom('geom1').run('r3');
model.geom('geom1').create('uni1', 'Union');
model.geom('geom1').feature('uni1').selection('input').set({'r1' 'r2' 'r3'});
model.geom('geom1').feature('uni1').set('intbnd', false);
model.geom('geom1').run('uni1');
model.geom('geom1').create('fil1', 'Fillet');
model.geom('geom1').feature('fil1').selection('point').set('uni1', 6);
model.geom('geom1').feature('fil1').set('radius', 'r2-r1');
model.geom('geom1').run('fil1');
model.geom('geom1').create('fil2', 'Fillet');
model.geom('geom1').feature('fil2').selection('point').set('fil1', 3);
model.geom('geom1').feature('fil2').set('radius', 'r2-r1');
model.geom('geom1').run('fil2');
model.geom('geom1').create('sq1', 'Square');
model.geom('geom1').feature('sq1').set('size', 'r2-r1');
model.geom('geom1').feature('sq1').set('pos', {'r1' '0'});
model.geom('geom1').run('sq1');
model.geom('geom1').create('fil3', 'Fillet');
model.geom('geom1').feature('fil3').selection('point').set('sq1', 4);
model.geom('geom1').feature('fil3').set('radius', '(r2-r1)/2');
model.geom('geom1').run('fil3');
model.geom('geom1').create('r4', 'Rectangle');
model.geom('geom1').feature('r4').set('size', {'r4' '7/2*l'});
model.geom('geom1').feature('r4').set('pos', {'0' '-l'});
model.geom('geom1').run('r4');
model.geom('geom1').create('c1', 'Circle');
model.geom('geom1').feature('c1').set('r', 'r3');
model.geom('geom1').feature('c1').set('angle', 180);
model.geom('geom1').feature('c1').set('pos', {'0' 'r3'});
model.geom('geom1').feature('c1').set('rot', -90);
model.geom('geom1').run('c1');
model.geom('geom1').create('pard1', 'PartitionDomains');
model.geom('geom1').feature('pard1').selection('domain').set('c1', 1);
model.geom('geom1').feature('pard1').selection('domain').set('fil3', 1);
model.geom('geom1').feature('pard1').set('partitionwith', 'edges');
model.geom('geom1').feature('pard1').selection('edge').set('c1', 1);
model.geom('geom1').feature('pard1').selection('edge').set('fil3', 5);
model.geom('geom1').run('pard1');
model.geom('geom1').create('mov1', 'Move');
model.geom('geom1').feature('mov1').selection('input').set({'pard1(1)'});
model.geom('geom1').feature('mov1').set('disply', 0.19);
model.geom('geom1').run('mov1');
model.geom('geom1').create('uni2', 'Union');
model.geom('geom1').feature('uni2').selection('input').set({'mov1' 'pard1(2)'});
model.geom('geom1').feature('uni2').set('intbnd', false);
model.geom('geom1').run('uni2');
model.geom('geom1').create('r5', 'Rectangle');
model.geom('geom1').feature('r5').set('size', {'r2' '10'});
model.geom('geom1').run('fin');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('rho', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('cs', 'Interpolation');
model.material('mat1').propertyGroup('def').func.create('an1', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an2', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an3', 'Analytic');
model.material('mat1').label('Water, liquid');
model.material('mat1').set('family', 'water');
model.material('mat1').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('eta').set('pieces', {'273.15' '413.15' '1.3799566804-0.021224019151*T^1+1.3604562827E-4*T^2-4.6454090319E-7*T^3+8.9042735735E-10*T^4-9.0790692686E-13*T^5+3.8457331488E-16*T^6'; '413.15' '553.75' '0.00401235783-2.10746715E-5*T^1+3.85772275E-8*T^2-2.39730284E-11*T^3'});
model.material('mat1').propertyGroup('def').func('eta').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('Cp').set('pieces', {'273.15' '553.75' '12010.1471-80.4072879*T^1+0.309866854*T^2-5.38186884E-4*T^3+3.62536437E-7*T^4'});
model.material('mat1').propertyGroup('def').func('Cp').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('def').func('rho').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('rho').set('smooth', 'contd1');
model.material('mat1').propertyGroup('def').func('rho').set('pieces', {'273.15' '293.15' '0.000063092789034*T^3-0.060367639882855*T^2+18.9229382407066*T-950.704055329848'; '293.15' '373.15' '0.000010335053319*T^3-0.013395065634452*T^2+4.969288832655160*T+432.257114008512'});
model.material('mat1').propertyGroup('def').func('rho').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.material('mat1').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('k').set('pieces', {'273.15' '553.75' '-0.869083936+0.00894880345*T^1-1.58366345E-5*T^2+7.97543259E-9*T^3'});
model.material('mat1').propertyGroup('def').func('k').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.material('mat1').propertyGroup('def').func('cs').set('table', {'273' '1403';  ...
'278' '1427';  ...
'283' '1447';  ...
'293' '1481';  ...
'303' '1507';  ...
'313' '1526';  ...
'323' '1541';  ...
'333' '1552';  ...
'343' '1555';  ...
'353' '1555';  ...
'363' '1550';  ...
'373' '1543'});
model.material('mat1').propertyGroup('def').func('cs').set('interp', 'piecewisecubic');
model.material('mat1').propertyGroup('def').func('cs').set('fununit', {'m/s'});
model.material('mat1').propertyGroup('def').func('cs').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.material('mat1').propertyGroup('def').func('an1').set('expr', '-1/rho(T)*d(rho(T),T)');
model.material('mat1').propertyGroup('def').func('an1').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('an1').set('fununit', '1/K');
model.material('mat1').propertyGroup('def').func('an1').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an1').set('plotfixedvalue', {'273.15'});
model.material('mat1').propertyGroup('def').func('an1').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an2').set('funcname', 'gamma_w');
model.material('mat1').propertyGroup('def').func('an2').set('expr', '1+(T/Cp(T))*(alpha_p(T)*cs(T))^2');
model.material('mat1').propertyGroup('def').func('an2').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('an2').set('fununit', '1');
model.material('mat1').propertyGroup('def').func('an2').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an2').set('plotfixedvalue', {'273.15'});
model.material('mat1').propertyGroup('def').func('an2').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an3').set('funcname', 'muB');
model.material('mat1').propertyGroup('def').func('an3').set('expr', '2.79*eta(T)');
model.material('mat1').propertyGroup('def').func('an3').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('an3').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('an3').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an3').set('plotfixedvalue', {'273.15'});
model.material('mat1').propertyGroup('def').func('an3').set('plotargs', {'T' '273.15' '553.75'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.material('mat1').propertyGroup('def').set('bulkviscosity', '');
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(T)' '0' '0' '0' 'alpha_p(T)' '0' '0' '0' 'alpha_p(T)'});
model.material('mat1').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.material('mat1').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.material('mat1').propertyGroup('def').set('ratioofspecificheat', 'gamma_w(T)');
model.material('mat1').propertyGroup('def').set('electricconductivity', {'5.5e-6[S/m]' '0' '0' '0' '5.5e-6[S/m]' '0' '0' '0' '5.5e-6[S/m]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.material('mat1').propertyGroup('def').set('density', 'rho(T)');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.material('mat1').propertyGroup('def').set('soundspeed', 'cs(T)');
model.material('mat1').propertyGroup('def').addInput('temperature');
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat2').label('Nylon');
model.material('mat2').set('family', 'custom');
model.material('mat2').set('customspecular', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat2').set('customdiffuse', [0.39215686274509803 0.39215686274509803 0.9803921568627451]);
model.material('mat2').set('customambient', [0.39215686274509803 0.39215686274509803 0.7843137254901961]);
model.material('mat2').set('noise', true);
model.material('mat2').set('lighting', 'phong');
model.material('mat2').set('shininess', 500);
model.material('mat2').propertyGroup('def').set('heatcapacity', '1700[J/(kg*K)]');
model.material('mat2').propertyGroup('def').set('relpermittivity', {'4' '0' '0' '0' '4' '0' '0' '0' '4'});
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'280e-6[1/K]' '0' '0' '0' '280e-6[1/K]' '0' '0' '0' '280e-6[1/K]'});
model.material('mat2').propertyGroup('def').set('density', '1150[kg/m^3]');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'0.26[W/(m*K)]' '0' '0' '0' '0.26[W/(m*K)]' '0' '0' '0' '0.26[W/(m*K)]'});
model.material('mat2').propertyGroup('Enu').set('E', '2[GPa]');
model.material('mat2').propertyGroup('Enu').set('nu', '0.4');
model.material.create('mat3', 'Common', 'comp1');
model.material('mat3').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat3').propertyGroup('Enu').func.create('int1', 'Interpolation');
model.material('mat3').propertyGroup('Enu').func.create('int2', 'Interpolation');
model.material('mat3').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat3').propertyGroup.create('ElastoplasticModel', 'Elastoplastic material model');
model.material('mat3').propertyGroup('ElastoplasticModel').func.create('int1', 'Interpolation');
model.material('mat3').propertyGroup.create('Ludwik', 'Ludwik');
model.material('mat3').propertyGroup('Ludwik').func.create('int1', 'Interpolation');
model.material('mat3').propertyGroup.create('JohnsonCook', 'Johnson-Cook');
model.material('mat3').propertyGroup.create('Swift', 'Swift');
model.material('mat3').propertyGroup.create('Voce', 'Voce');
model.material('mat3').propertyGroup('Voce').func.create('int1', 'Interpolation');
model.material('mat3').propertyGroup.create('HockettSherby', 'Hockett-Sherby');
model.material('mat3').propertyGroup('HockettSherby').func.create('int1', 'Interpolation');
model.material('mat3').propertyGroup.create('ArmstrongFrederick', 'Armstrong-Frederick');
model.material('mat3').propertyGroup('ArmstrongFrederick').func.create('int1', 'Interpolation');
model.material('mat3').propertyGroup.create('Norton', 'Norton');
model.material('mat3').propertyGroup.create('Garofalo', 'Garofalo (hyperbolic sine)');
model.material('mat3').propertyGroup.create('ChabocheViscoplasticity', 'Chaboche viscoplasticity');
model.material('mat3').label('Structural steel');
model.material('mat3').set('family', 'custom');
model.material('mat3').set('customspecular', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat3').set('customdiffuse', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat3').set('customambient', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat3').set('noise', true);
model.material('mat3').set('fresnel', 0.9);
model.material('mat3').set('roughness', 0.3);
model.material('mat3').set('metallic', 0);
model.material('mat3').set('pearl', 0);
model.material('mat3').set('diffusewrap', 0);
model.material('mat3').set('clearcoat', 0);
model.material('mat3').set('reflectance', 0);
model.material('mat3').propertyGroup('def').set('lossfactor', '0.02');
model.material('mat3').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('def').set('heatcapacity', '475[J/(kg*K)]');
model.material('mat3').propertyGroup('def').set('thermalconductivity', {'44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]'});
model.material('mat3').propertyGroup('def').set('electricconductivity', {'4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]'});
model.material('mat3').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('def').set('thermalexpansioncoefficient', {'12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]'});
model.material('mat3').propertyGroup('def').set('density', '7850[kg/m^3]');
model.material('mat3').propertyGroup('Enu').func('int1').set('funcname', 'E');
model.material('mat3').propertyGroup('Enu').func('int1').set('table', {'293.15' '200e9'; '793.15' '166.6e9'});
model.material('mat3').propertyGroup('Enu').func('int1').set('extrap', 'linear');
model.material('mat3').propertyGroup('Enu').func('int1').set('fununit', {'Pa'});
model.material('mat3').propertyGroup('Enu').func('int1').set('argunit', {'K'});
model.material('mat3').propertyGroup('Enu').func('int2').set('funcname', 'nu');
model.material('mat3').propertyGroup('Enu').func('int2').set('table', {'293.15' '0.30'; '793.15' '0.315'});
model.material('mat3').propertyGroup('Enu').func('int2').set('extrap', 'linear');
model.material('mat3').propertyGroup('Enu').func('int2').set('fununit', {'1'});
model.material('mat3').propertyGroup('Enu').func('int2').set('argunit', {'K'});
model.material('mat3').propertyGroup('Enu').set('E', 'E(T)');
model.material('mat3').propertyGroup('Enu').set('nu', 'nu(T)');
model.material('mat3').propertyGroup('Enu').addInput('temperature');
model.material('mat3').propertyGroup('Murnaghan').set('l', '-3.0e11[Pa]');
model.material('mat3').propertyGroup('Murnaghan').set('m', '-6.2e11[Pa]');
model.material('mat3').propertyGroup('Murnaghan').set('n', '-7.2e11[Pa]');
model.material('mat3').propertyGroup('ElastoplasticModel').func('int1').set('funcname', 'a');
model.material('mat3').propertyGroup('ElastoplasticModel').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat3').propertyGroup('ElastoplasticModel').func('int1').set('fununit', {'1'});
model.material('mat3').propertyGroup('ElastoplasticModel').func('int1').set('argunit', {'K'});
model.material('mat3').propertyGroup('ElastoplasticModel').set('sigmags', '350[MPa]*a(T)');
model.material('mat3').propertyGroup('ElastoplasticModel').set('Et', '1.045[GPa]*a(T)');
model.material('mat3').propertyGroup('ElastoplasticModel').set('Ek', '1.045[GPa]*a(T)');
model.material('mat3').propertyGroup('ElastoplasticModel').set('sigmagh', '1.050[GPa]*epe*a(T)');
model.material('mat3').propertyGroup('ElastoplasticModel').addInput('temperature');
model.material('mat3').propertyGroup('ElastoplasticModel').addInput('effectiveplasticstrain');
model.material('mat3').propertyGroup('Ludwik').func('int1').set('funcname', 'a');
model.material('mat3').propertyGroup('Ludwik').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat3').propertyGroup('Ludwik').func('int1').set('fununit', {'1'});
model.material('mat3').propertyGroup('Ludwik').func('int1').set('argunit', {'K'});
model.material('mat3').propertyGroup('Ludwik').set('k_lud', '560[MPa]*a(T)');
model.material('mat3').propertyGroup('Ludwik').set('n_lud', '0.61');
model.material('mat3').propertyGroup('Ludwik').addInput('temperature');
model.material('mat3').propertyGroup('JohnsonCook').set('k_jcook', '560[MPa]');
model.material('mat3').propertyGroup('JohnsonCook').set('n_jcook', '0.61');
model.material('mat3').propertyGroup('JohnsonCook').set('C_jcook', '0.12');
model.material('mat3').propertyGroup('JohnsonCook').set('epet0_jcook', '1[1/s]');
model.material('mat3').propertyGroup('JohnsonCook').set('m_jcook', '0.6');
model.material('mat3').propertyGroup('Swift').set('e0_swi', '0.021');
model.material('mat3').propertyGroup('Swift').set('n_swi', '0.2');
model.material('mat3').propertyGroup('Voce').func('int1').set('funcname', 'a');
model.material('mat3').propertyGroup('Voce').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat3').propertyGroup('Voce').func('int1').set('fununit', {'1'});
model.material('mat3').propertyGroup('Voce').func('int1').set('argunit', {'K'});
model.material('mat3').propertyGroup('Voce').set('sigma_voc', '249[MPa]*a(T)');
model.material('mat3').propertyGroup('Voce').set('beta_voc', '9.3');
model.material('mat3').propertyGroup('Voce').addInput('temperature');
model.material('mat3').propertyGroup('HockettSherby').func('int1').set('funcname', 'a');
model.material('mat3').propertyGroup('HockettSherby').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat3').propertyGroup('HockettSherby').func('int1').set('fununit', {'1'});
model.material('mat3').propertyGroup('HockettSherby').func('int1').set('argunit', {'K'});
model.material('mat3').propertyGroup('HockettSherby').set('sigma_hoc', '684[MPa]*a(T)');
model.material('mat3').propertyGroup('HockettSherby').set('m_hoc', '3.9');
model.material('mat3').propertyGroup('HockettSherby').set('n_hoc', '0.85');
model.material('mat3').propertyGroup('HockettSherby').addInput('temperature');
model.material('mat3').propertyGroup('ArmstrongFrederick').func('int1').set('funcname', 'a');
model.material('mat3').propertyGroup('ArmstrongFrederick').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat3').propertyGroup('ArmstrongFrederick').func('int1').set('fununit', {'1'});
model.material('mat3').propertyGroup('ArmstrongFrederick').func('int1').set('argunit', {'K'});
model.material('mat3').propertyGroup('ArmstrongFrederick').set('Ck', '2.070[GPa]*a(T)');
model.material('mat3').propertyGroup('ArmstrongFrederick').set('gammak', '8.0');
model.material('mat3').propertyGroup('ArmstrongFrederick').addInput('temperature');
model.material('mat3').propertyGroup('Norton').set('A_nor', '1.2e-15[1/s]');
model.material('mat3').propertyGroup('Norton').set('sigRef_nor', '1[MPa]');
model.material('mat3').propertyGroup('Norton').set('n_nor', '4.5');
model.material('mat3').propertyGroup('Garofalo').set('A_gar', '1e-6[1/s]');
model.material('mat3').propertyGroup('Garofalo').set('sigRef_gar', '100[MPa]');
model.material('mat3').propertyGroup('Garofalo').set('n_gar', '4.6');
model.material('mat3').propertyGroup('ChabocheViscoplasticity').set('A_cha', '1');
model.material('mat3').propertyGroup('ChabocheViscoplasticity').set('sigRef_cha', '490[MPa]');
model.material('mat3').propertyGroup('ChabocheViscoplasticity').set('n_cha', '9');
model.material('mat2').selection.set([6]);
model.material('mat2').set('family', 'plastic');
model.material('mat3').selection.set([3 5]);
model.material('mat3').set('family', 'steel');

model.view('view1').set('showmaterial', true);

model.common('free1').selection.set([2]);
model.common.create('pnmd1', 'PrescribedNormalMeshDisplacement', 'comp1');
model.common('pnmd1').selection.set([3 7]);

model.func.create('pw1', 'Piecewise');
model.func('pw1').model('comp1');
model.func('pw1').set('funcname', 'p_outlet');
model.func('pw1').set('smooth', 'contd2');
model.func('pw1').set('zonelengthtype', 'absolute');
model.func('pw1').set('smoothzone', 0.45);
model.func('pw1').setIndex('pieces', -1, 0, 0);
model.func('pw1').setIndex('pieces', 0.5, 0, 1);
model.func('pw1').setIndex('pieces', 0, 0, 2);
model.func('pw1').setIndex('pieces', 0.5, 1, 0);
model.func('pw1').setIndex('pieces', 1.5, 1, 1);
model.func('pw1').setIndex('pieces', 'p0', 1, 2);
model.func('pw1').setIndex('pieces', 1.5, 2, 0);
model.func('pw1').setIndex('pieces', 5, 2, 1);
model.func('pw1').setIndex('pieces', 0, 2, 2);
model.func('pw1').set('argunit', 's');
model.func('pw1').set('fununit', 'Pa');
model.func.create('pw2', 'Piecewise');
model.func('pw2').model('comp1');
model.func('pw2').set('funcname', 'p_inlet');
model.func('pw2').set('smooth', 'contd2');
model.func('pw2').set('zonelengthtype', 'absolute');
model.func('pw2').set('smoothzone', 1.5);
model.func('pw2').setIndex('pieces', 0, 0, 0);
model.func('pw2').setIndex('pieces', 3.5, 0, 1);
model.func('pw2').setIndex('pieces', 0, 0, 2);
model.func('pw2').setIndex('pieces', 3.5, 1, 0);
model.func('pw2').setIndex('pieces', 7, 1, 1);
model.func('pw2').setIndex('pieces', 'p0', 1, 2);
model.func('pw2').set('argunit', 's');
model.func('pw2').set('fununit', 'Pa');
model.func.create('step1', 'Step');
model.func('step1').model('comp1');
model.func('step1').set('funcname', 'predef');
model.func('step1').set('location', '0.5[s]');
model.func('step1').set('to', '-l0');
model.func('step1').set('smooth', 1);

model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl('intop1').set('axisym', true);
model.cpl('intop1').selection.geom('geom1', 1);
model.cpl('intop1').selection.set([10]);
model.cpl.create('intop2', 'Integration', 'geom1');
model.cpl('intop2').set('axisym', true);
model.cpl('intop2').selection.geom('geom1', 0);
model.cpl('intop2').selection.set([7]);
model.cpl('intop2').set('axisym', false);

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').set('flow', 'intop1(w_fluid)');
model.variable('var1').descr('flow', 'Flow');

model.physics('spf').selection.set([1 2 4]);
model.physics('spf').prop('TurbulenceModelProperty').set('WallTreatment', 'LowReynoldsNumber');
model.physics('spf').create('inl1', 'InletBoundary', 1);
model.physics('spf').feature('inl1').selection.set([2]);
model.physics('spf').feature('inl1').set('BoundaryCondition', 'Pressure');
model.physics('spf').feature('inl1').set('p0', 'p_inlet(t)');
model.physics('spf').feature('inl1').set('SuppressBackflow', false);
model.physics('spf').create('out1', 'OutletBoundary', 1);
model.physics('spf').feature('out1').selection.set([10]);
model.physics('spf').feature('out1').set('p0', 'p_outlet(t)');
model.physics('spf').feature('out1').set('SuppressBackflow', false);
model.physics('solid').selection.set([3 5 6]);
model.physics('solid').create('fix1', 'Fixed', 2);
model.physics('solid').feature('fix1').selection.set([5]);
model.physics('solid').create('spf1', 'SpringFoundation2', 2);
model.physics('solid').feature('spf1').selection.set([3]);
model.physics('solid').feature('spf1').set('SpringType', 'kTot');
model.physics('solid').feature('spf1').set('kTot', {'0' '0' '0' '0' '0' '0' '0' '0' 'k0'});
model.physics('solid').feature('spf1').create('prd1', 'PreDeformation', 2);
model.physics('solid').feature('spf1').feature('prd1').set('uspring0', {'0' '0' 'predef(t)'});

model.pair.create('p1', 'Contact', 'geom1');
model.pair('p1').source.set([29]);
model.pair('p1').destination.set([28]);

model.physics('solid').feature('dcnt1').set('destination_offset', 'offset');

model.multiphysics('fsi1').set('CouplingType', 'FluidLoading');

model.mesh('mesh1').autoMeshSize(4);
model.mesh('mesh1').run;

model.study('std1').feature('time').set('tlist', 'range(0,5e-2,5)');
model.study('std1').feature('time').set('plot', true);
model.study('std1').feature('time').set('plotfreq', 'tsteps');
model.study('std1').feature('time').set('autoremesh', true);

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1 2 4]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([2]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1 2 4]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1 2 4]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1 2 4]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([2]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'wdi');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_spatial_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_spatial_disp').set('scaleval', '2.6082446204296095E-6');
model.sol('sol1').feature('v1').set('control', 'wdi');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 1.0E-6);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, wall distance ()');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, wall distance ()');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'time');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').feature('comp1_u_solid').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_spatial_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_u_solid').set('scaleval', '1e-2*0.0422965719651132');
model.sol('sol1').feature('v2').feature('comp1_spatial_disp').set('scaleval', '1e-2*0.0422965719651132');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('initsoluse', 'sol2');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('notsoluse', 'sol2');
model.sol('sol1').feature('v2').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,5e-2,5)');
model.sol('sol1').feature('t1').set('plot', 'on');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tsteps');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalmethod', 'scaled');
model.sol('sol1').feature('t1').set('atolglobalfactor', 0.05);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('atolmethod', {'comp1_G' 'global' 'comp1_p' 'scaled' 'comp1_spatial_disp' 'global' 'comp1_u_fluid' 'global' 'comp1_u_solid' 'global'  ...
'comp1_yPlus' 'global'});
model.sol('sol1').feature('t1').set('atolvaluemethod', {'comp1_G' 'factor' 'comp1_p' 'factor' 'comp1_spatial_disp' 'factor' 'comp1_u_fluid' 'factor' 'comp1_u_solid' 'factor'  ...
'comp1_yPlus' 'factor'});
model.sol('sol1').feature('t1').set('atolfactor', {'comp1_G' '0.1' 'comp1_p' '1' 'comp1_spatial_disp' '0.1' 'comp1_u_fluid' '0.1' 'comp1_u_solid' '0.1'  ...
'comp1_yPlus' '0.1'});
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('estrat', 'exclude');
model.sol('sol1').feature('t1').set('rhoinf', 0.5);
model.sol('sol1').feature('t1').set('predictor', 'constant');
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('stabcntrl', true);
model.sol('sol1').feature('t1').set('bwinitstepfrac', '0.01');
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('arDef').set('autoremeshgeom', 'geom1');
model.sol('sol1').feature('t1').feature('arDef').set('stopcondtype', 'quality');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_G'});
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('subdamp', 0.8);
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('subjtech', 'onevery');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('subntolfact', 0.1);
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('subtermconst', 'itertol');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('subiter', 1);
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d1').label('Direct, wall distance (spf)');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Wall Distance');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_u_fluid' 'comp1_p'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('subdamp', 0.8);
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('subjtech', 'once');
model.sol('sol1').feature('t1').create('d2', 'Direct');
model.sol('sol1').feature('t1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d2').label('Direct, fluid flow variables (spf)');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Velocity U_fluid, Pressure p');
model.sol('sol1').feature('t1').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('segvar', {'comp1_yPlus'});
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('subdamp', 0.5);
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('subiter', 2);
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('subtermconst', 'itertol');
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('subjtech', 'onevery');
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('subntolfact', 0.1);
model.sol('sol1').feature('t1').create('d3', 'Direct');
model.sol('sol1').feature('t1').feature('d3').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d3').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d3').label('Direct, turbulence variables (spf)');
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('linsolver', 'd3');
model.sol('sol1').feature('t1').feature('se1').feature('ss3').label('Turbulence Variables');
model.sol('sol1').feature('t1').feature('se1').create('ss4', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss4').set('segvar', {'comp1_u_solid'});
model.sol('sol1').feature('t1').feature('se1').feature('ss4').set('subdtech', 'const');
model.sol('sol1').feature('t1').feature('se1').feature('ss4').set('subdamp', 0.8);
model.sol('sol1').feature('t1').feature('se1').feature('ss4').set('subjtech', 'once');
model.sol('sol1').feature('t1').feature('se1').feature('ss4').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').feature('ss4').label('Displacement Field');
model.sol('sol1').feature('t1').feature('se1').create('ss5', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss5').set('segvar', {'comp1_spatial_disp'});
model.sol('sol1').feature('t1').feature('se1').feature('ss5').set('subdamp', 0.8);
model.sol('sol1').feature('t1').feature('se1').feature('ss5').set('subjtech', 'once');
model.sol('sol1').feature('t1').feature('se1').feature('ss5').set('subiter', 1);
model.sol('sol1').feature('t1').feature('se1').feature('ss5').set('subtermconst', 'iter');
model.sol('sol1').feature('t1').feature('se1').feature('ss5').set('subntolfact', 0.1);
model.sol('sol1').feature('t1').create('d4', 'Direct');
model.sol('sol1').feature('t1').feature('d4').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d4').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d4').label('Direct, spatial mesh displacement (spf)');
model.sol('sol1').feature('t1').feature('se1').feature('ss5').set('linsolver', 'd4');
model.sol('sol1').feature('t1').feature('se1').feature('ss5').label('Spatial Mesh Displacement');
model.sol('sol1').feature('t1').feature('se1').set('ntolfact', 0.5);
model.sol('sol1').feature('t1').feature('se1').set('segstabacc', 'segaacc');
model.sol('sol1').feature('t1').feature('se1').set('segaaccdim', 5);
model.sol('sol1').feature('t1').feature('se1').set('segaaccmix', 0.9);
model.sol('sol1').feature('t1').feature('se1').set('segaaccdelay', 1);
model.sol('sol1').feature('t1').feature('se1').set('maxsegiter', 20);
model.sol('sol1').feature('t1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol1').feature('t1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.yPlus 0 ');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('t1').feature('i1').set('maxlinit', 200);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i1').label('AMG, wall distance (spf)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').create('i2', 'Iterative');
model.sol('sol1').feature('t1').feature('i2').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i2').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i2').set('itrestart', 50);
model.sol('sol1').feature('t1').feature('i2').set('rhob', 20);
model.sol('sol1').feature('t1').feature('i2').set('maxlinit', 100);
model.sol('sol1').feature('t1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i2').label('AMG, fluid flow variables (spf)');
model.sol('sol1').feature('t1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').create('i3', 'Iterative');
model.sol('sol1').feature('t1').feature('i3').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i3').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i3').set('itrestart', 50);
model.sol('sol1').feature('t1').feature('i3').set('rhob', 400);
model.sol('sol1').feature('t1').feature('i3').set('maxlinit', 200);
model.sol('sol1').feature('t1').feature('i3').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i3').label('AMG, turbulence variables (spf)');
model.sol('sol1').feature('t1').feature('i3').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i3').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('v2').feature('comp1_p').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_p').set('scaleval', '1e3');
model.sol('sol1').feature('v2').feature('comp1_spatial_disp').set('scaleval', '1e-3');
model.sol('sol1').feature('v2').feature('comp1_u_fluid').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_u_fluid').set('scaleval', 1);
model.sol('sol1').feature('v2').feature('comp1_u_solid').set('scaleval', '1e-3');
model.sol('sol1').feature('t1').set('tstepsbdf', 'intermediate');
model.sol('sol1').feature('t1').feature('arDef').set('stopcondtype', 'distortion');
model.sol('sol1').feature('t1').feature('arDef').set('consistentremesh', 'bweuler');
model.sol.create('sol3');
model.sol('sol3').label('Remeshed Solution 1');
model.sol('sol3').study('std1');
model.sol('sol1').feature('t1').feature('arDef').set('tadapsol', 'sol3');

model.result.dataset('dset1').set('geom', 'geom1');
model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').label('Velocity (spf)');
model.result('pg1').set('dataisaxisym', 'off');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').set('data', 'dset1');
model.result('pg1').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg1');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').label('Surface');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('smooth', 'internal');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('data', 'parent');

model.sol('sol1').runAll;

model.result.remove('pg1');

model.study('std1').feature('time').set('plotgroup', 'Default');

model.result.dataset('dset3').set('geom', 'geom1');
model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').label('Velocity (spf)');
model.result('pg1').set('data', 'dset3');
model.result('pg1').setIndex('looplevel', 105, 0);
model.result('pg1').set('dataisaxisym', 'off');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').set('data', 'dset3');
model.result('pg1').setIndex('looplevel', 105, 0);
model.result('pg1').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg1');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').label('Surface');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('smooth', 'internal');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').label('Pressure (spf)');
model.result('pg2').set('data', 'dset3');
model.result('pg2').setIndex('looplevel', 105, 0);
model.result('pg2').set('dataisaxisym', 'off');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('data', 'dset3');
model.result('pg2').setIndex('looplevel', 105, 0);
model.result('pg2').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg2');
model.result('pg2').feature.create('con1', 'Contour');
model.result('pg2').feature('con1').label('Contour');
model.result('pg2').feature('con1').set('showsolutionparams', 'on');
model.result('pg2').feature('con1').set('expr', 'p');
model.result('pg2').feature('con1').set('number', 40);
model.result('pg2').feature('con1').set('levelrounding', false);
model.result('pg2').feature('con1').set('smooth', 'internal');
model.result('pg2').feature('con1').set('showsolutionparams', 'on');
model.result('pg2').feature('con1').set('data', 'parent');
model.result.dataset.create('rev1', 'Revolve2D');
model.result.dataset('rev1').label('Revolution 2D');
model.result.dataset('rev1').set('data', 'none');
model.result.dataset('rev1').set('startangle', -90);
model.result.dataset('rev1').set('revangle', 225);
model.result.dataset('rev1').set('data', 'dset3');
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').label('Velocity, 3D (spf)');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').set('data', 'rev1');
model.result('pg3').setIndex('looplevel', 105, 0);
model.result('pg3').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pcond1/pg1');
model.result('pg3').feature.create('surf1', 'Surface');
model.result('pg3').feature('surf1').label('Surface');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('smooth', 'internal');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('data', 'parent');
model.result.dataset.create('edg1', 'Edge2D');
model.result.dataset('edg1').label('Exterior Walls');
model.result.dataset('edg1').set('data', 'dset3');
model.result.dataset('edg1').selection.geom('geom1', 1);
model.result.dataset('edg1').selection.set([11 13 15 17 19 20 24 25 26 27 28 29 30 31 32]);
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').label('Wall Resolution (spf)');
model.result('pg4').set('data', 'dset3');
model.result('pg4').setIndex('looplevel', 105, 0);
model.result('pg4').set('dataisaxisym', 'off');
model.result('pg4').set('frametype', 'spatial');
model.result('pg4').set('data', 'dset3');
model.result('pg4').setIndex('looplevel', 105, 0);
model.result('pg4').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pcond2/pcond4/pg2');
model.result('pg4').feature.create('line1', 'Line');
model.result('pg4').feature('line1').label('Wall Resolution');
model.result('pg4').feature('line1').set('showsolutionparams', 'on');
model.result('pg4').feature('line1').set('expr', 'spf.Delta_wPlus');
model.result('pg4').feature('line1').set('linetype', 'tube');
model.result('pg4').feature('line1').set('smooth', 'internal');
model.result('pg4').feature('line1').set('showsolutionparams', 'on');
model.result('pg4').feature('line1').set('data', 'parent');
model.result('pg4').feature('line1').feature.create('hght1', 'Height');
model.result('pg4').feature('line1').feature('hght1').label('Height Expression');
model.result('pg4').feature('line1').feature('hght1').set('heightdata', 'expr');
model.result('pg4').feature('line1').feature('hght1').set('expr', 'spf.WRHeightExpr');
model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').set('data', 'dset3');
model.result('pg5').setIndex('looplevel', 105, 0);
model.result('pg5').set('defaultPlotID', 'stress');
model.result('pg5').label('Stress (solid)');
model.result('pg5').set('frametype', 'spatial');
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg5').feature('surf1').set('threshold', 'manual');
model.result('pg5').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg5').feature('surf1').set('colortable', 'Rainbow');
model.result('pg5').feature('surf1').set('colortabletrans', 'none');
model.result('pg5').feature('surf1').set('colorscalemode', 'linear');
model.result('pg5').feature('surf1').set('resolution', 'normal');
model.result('pg5').feature('surf1').set('colortable', 'Prism');
model.result.dataset.create('dset3solidrev', 'Revolve2D');
model.result.dataset('dset3solidrev').set('data', 'dset3');
model.result.dataset('dset3solidrev').set('revangle', 225);
model.result.dataset('dset3solidrev').set('startangle', -90);
model.result.dataset('dset3solidrev').set('hasspacevars', true);
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').set('data', 'dset3solidrev');
model.result('pg6').setIndex('looplevel', 105, 0);
model.result('pg6').set('defaultPlotID', 'stress3D');
model.result('pg6').label('Stress, 3D (solid)');
model.result('pg6').set('frametype', 'spatial');
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg6').feature('surf1').set('threshold', 'manual');
model.result('pg6').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg6').feature('surf1').set('colortable', 'Rainbow');
model.result('pg6').feature('surf1').set('colortabletrans', 'none');
model.result('pg6').feature('surf1').set('colorscalemode', 'linear');
model.result('pg6').feature('surf1').set('colortable', 'Prism');
model.result.create('pg7', 'PlotGroup2D');
model.result('pg7').set('data', 'dset3');
model.result('pg7').setIndex('looplevel', 105, 0);
model.result('pg7').label('Moving Mesh');
model.result('pg7').create('mesh1', 'Mesh');
model.result('pg7').feature('mesh1').set('meshdomain', 'surface');
model.result('pg7').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg7').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg7').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg7').feature('mesh1').create('sel1', 'MeshSelection');
model.result('pg7').feature('mesh1').feature('sel1').selection.set([2 3 5 6]);
model.result('pg7').feature('mesh1').set('qualmeasure', 'custom');
model.result('pg7').feature('mesh1').set('qualexpr', 'comp1.spatial.relVol');
model.result('pg7').feature('mesh1').set('colorrangeunitinterval', false);
model.result('pg1').run;
model.result('pg1').create('str1', 'Streamline');
model.result('pg1').feature('str1').set('posmethod', 'uniform');
model.result('pg1').feature('str1').set('udist', 0.01);
model.result('pg1').run;
model.result('pg2').run;
model.result('pg2').feature('con1').set('expr', 'solid.mises');
model.result('pg2').feature('con1').set('colortable', 'PrismDark');
model.result('pg2').run;
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', 'p');
model.result('pg2').run;

model.view('view1').axis.set('ymin', -1);
model.view('view1').axis.set('ymax', 11);

model.result('pg1').run;
model.result('pg2').run;
model.result('pg2').set('looplevel', [21]);

model.view('view1').axis.set('xmin', 2.26);
model.view('view1').axis.set('xmax', 3.2);
model.view('view1').axis.set('ymin', 0.95);
model.view('view1').axis.set('ymax', 1.82);
model.view('view1').set('showmaterial', false);

model.result('pg2').run;
model.result('pg2').run;

model.view('view1').set('showmaterial', true);

model.result.create('pg8', 'PlotGroup1D');
model.result('pg8').run;
model.result('pg8').label('Flow');
model.result('pg8').set('data', 'dset3');
model.result('pg8').set('showlegends', false);
model.result('pg8').create('glob1', 'Global');
model.result('pg8').feature('glob1').set('markerpos', 'datapoints');
model.result('pg8').feature('glob1').set('linewidth', 'preference');
model.result('pg8').feature('glob1').setIndex('expr', 'flow', 0);
model.result('pg8').feature('glob1').setIndex('unit', 'l/min', 0);
model.result('pg8').feature('glob1').setIndex('descr', 'Flow', 0);
model.result('pg8').feature('glob1').set('titletype', 'manual');
model.result('pg8').feature('glob1').set('title', 'Flow (solid)');
model.result('pg8').feature('glob1').set('linewidth', 2);
model.result('pg8').run;
model.result('pg8').create('glob2', 'Global');
model.result('pg8').feature('glob2').set('markerpos', 'datapoints');
model.result('pg8').feature('glob2').set('linewidth', 'preference');
model.result('pg8').feature('glob2').setIndex('expr', 'p_outlet(t)', 0);
model.result('pg8').feature('glob2').setIndex('unit', 'mbar', 0);
model.result('pg8').feature('glob2').setIndex('descr', 'Outlet pressure', 0);
model.result('pg8').feature('glob2').set('linestyle', 'dashed');
model.result('pg8').feature('glob2').set('linewidth', 2);
model.result('pg8').run;
model.result('pg8').create('glob3', 'Global');
model.result('pg8').feature('glob3').set('markerpos', 'datapoints');
model.result('pg8').feature('glob3').set('linewidth', 'preference');
model.result('pg8').feature('glob3').setIndex('expr', 'p_inlet(t)', 0);
model.result('pg8').feature('glob3').setIndex('unit', 'mbar', 0);
model.result('pg8').feature('glob3').setIndex('descr', 'Inlet pressure', 0);
model.result('pg8').feature('glob3').set('linestyle', 'dashed');
model.result('pg8').feature('glob3').set('linewidth', 2);
model.result('pg8').feature('glob3').set('titletype', 'none');
model.result('pg8').run;
model.result('pg8').set('titletype', 'manual');
model.result('pg8').set('title', 'Flow / Inlet pressure');
model.result('pg8').set('twoyaxes', true);
model.result('pg8').setIndex('plotonsecyaxis', true, 1, 1);
model.result('pg8').setIndex('plotonsecyaxis', true, 2, 1);
model.result('pg8').set('yseclabelactive', true);
model.result('pg8').set('yseclabel', 'Inlet pressure (mbar)');
model.result('pg8').set('showlegends', true);
model.result('pg8').set('legendpos', 'uppermiddle');
model.result('pg8').run;
model.result.create('pg9', 'PlotGroup1D');
model.result('pg9').run;
model.result('pg9').label('Ball Displacement');
model.result('pg9').set('data', 'dset3');
model.result('pg9').create('ptgr1', 'PointGraph');
model.result('pg9').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg9').feature('ptgr1').set('linewidth', 'preference');
model.result('pg9').feature('ptgr1').selection.set([4]);
model.result('pg9').feature('ptgr1').set('expr', 'w_solid');
model.result('pg9').feature('ptgr1').set('descractive', true);
model.result('pg9').feature('ptgr1').set('descr', 'Ball displacement');
model.result('pg9').feature('ptgr1').set('linewidth', 2);
model.result('pg9').feature('ptgr1').set('legend', true);
model.result('pg9').feature('ptgr1').set('legendmethod', 'manual');
model.result('pg9').feature('ptgr1').setIndex('legends', 'Ball displacement', 0);
model.result('pg8').run;
model.result('pg9').run;
model.result('pg9').feature.copy('glob2', 'pg8/glob2');
model.result('pg9').feature.copy('glob3', 'pg8/glob3');
model.result('pg9').run;
model.result('pg9').run;
model.result('pg9').set('titletype', 'manual');
model.result('pg9').set('title', 'Ball displacement / Inlet pressure');
model.result('pg9').set('twoyaxes', true);
model.result('pg9').set('yseclabelactive', true);
model.result('pg9').set('yseclabel', 'Inlet pressure (mbar)');
model.result('pg9').setIndex('plotonsecyaxis', true, 1, 1);
model.result('pg9').setIndex('plotonsecyaxis', true, 2, 1);
model.result('pg9').set('legendpos', 'uppermiddle');
model.result('pg9').run;
model.result.create('pg10', 'PlotGroup1D');
model.result('pg10').run;
model.result('pg10').label('Operating Curve');
model.result('pg10').set('data', 'dset3');
model.result('pg10').set('showlegends', false);
model.result('pg10').create('glob1', 'Global');
model.result('pg10').feature('glob1').set('markerpos', 'datapoints');
model.result('pg10').feature('glob1').set('linewidth', 'preference');
model.result('pg10').feature('glob1').setIndex('expr', 'p_inlet(t)', 0);
model.result('pg10').feature('glob1').setIndex('unit', 'mbar', 0);
model.result('pg10').feature('glob1').setIndex('descr', 'Pressure', 0);
model.result('pg10').feature('glob1').set('xdata', 'expr');
model.result('pg10').feature('glob1').set('xdataexpr', 'flow');
model.result('pg10').feature('glob1').set('xdataunit', 'dm^3/s');
model.result('pg10').feature('glob1').set('linewidth', 2);
model.result('pg10').run;
model.result.create('pg11', 'PlotGroup1D');
model.result('pg11').run;
model.result('pg11').label('Pressure Drop');
model.result('pg11').set('data', 'dset3');
model.result('pg11').set('titletype', 'manual');
model.result('pg11').set('title', 'Pressure drop / Inlet Pressure');
model.result('pg11').set('legendpos', 'uppermiddle');
model.result('pg11').create('ptgr1', 'PointGraph');
model.result('pg11').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg11').feature('ptgr1').set('linewidth', 'preference');
model.result('pg11').feature('ptgr1').selection.set([1]);
model.result('pg11').feature('ptgr1').set('expr', 'p-intop2(p)');
model.result('pg11').feature('ptgr1').set('unit', 'mbar');
model.result('pg11').feature('ptgr1').set('descractive', true);
model.result('pg11').feature('ptgr1').set('descr', 'Pressure drop');
model.result('pg11').feature('ptgr1').set('linewidth', 2);
model.result('pg11').feature('ptgr1').set('legend', true);
model.result('pg11').feature('ptgr1').set('legendmethod', 'manual');
model.result('pg11').feature('ptgr1').setIndex('legends', 'Pressure drop', 0);
model.result('pg8').run;
model.result('pg11').run;
model.result('pg11').feature.copy('glob2', 'pg8/glob2');
model.result('pg11').feature.copy('glob3', 'pg8/glob3');
model.result('pg11').run;
model.result('pg11').feature('glob2').setIndex('expr', '-p_outlet(t)', 0);
model.result('pg11').feature('glob2').setIndex('unit', 'mbar', 0);
model.result('pg11').feature('glob2').setIndex('descr', 'Outlet pressure', 0);
model.result('pg11').feature('glob2').set('linestyle', 'none');
model.result('pg11').feature('glob2').set('linemarker', 'cycle');
model.result('pg11').feature('glob2').set('markerpos', 'interp');
model.result('pg11').feature('glob2').set('markers', 20);
model.result('pg11').run;
model.result('pg11').feature('glob3').set('linestyle', 'none');
model.result('pg11').feature('glob3').set('linemarker', 'cycle');
model.result('pg11').feature('glob3').set('markerpos', 'interp');
model.result('pg11').feature('glob3').set('markers', 20);
model.result('pg11').run;
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').feature('surf1').set('expr', 'solid.disp');
model.result('pg3').feature('surf1').set('coloring', 'uniform');
model.result('pg3').feature('surf1').set('color', 'gray');
model.result('pg3').feature('surf1').set('titletype', 'none');
model.result('pg3').run;
model.result('pg3').create('str1', 'Streamline');
model.result('pg3').feature('str1').set('revcoordsys', 'cylindrical');
model.result('pg3').feature('str1').set('posmethod', 'uniform');
model.result('pg3').feature('str1').set('udist', 0.02);
model.result('pg3').feature('str1').set('pointtype', 'arrow');
model.result('pg3').feature('str1').create('col1', 'Color');
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').run;
model.result('pg1').run;

model.title('Ball Check Valve');

model.description(['Using a Fluid' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Solid Interaction multiphysics interface, the behavior of a spring-loaded ball check valve is studied under varying functional and reverse flow. The fluid force acting on the ball opens the valve at the opening pressure. In the case of a reversed pressure, the ball comes into contact with an O-ring, thus preventing the fluid from flowing in the reverse direction. A remeshing technique is used to accurately resolve the fluid domain between the parts getting into contact. As the fluid flow regime is turbulent, the algebraic y-plus turbulence model is used together with a low Reynolds wall treatment.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;

model.label('ball_check_valve.mph');

model.modelNode.label('Components');

out = model;
