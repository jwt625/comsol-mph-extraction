function out = model
%
% elastoplastic_creep.m
%
% Model exported on May 26 2025, 21:31 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Nonlinear_Structural_Materials_Module/Creep');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/solid', true);

model.param.set('m', '0.9');
model.param.descr('m', 'Power law exponent');

model.func.create('int1', 'Interpolation');
model.func('int1').model('comp1');
model.func('int1').set('funcname', 'pressure');
model.func('int1').setIndex('table', 0, 0, 0);
model.func('int1').setIndex('table', 0, 0, 1);
model.func('int1').setIndex('table', 1, 1, 0);
model.func('int1').setIndex('table', 0, 1, 1);
model.func('int1').setIndex('table', 2, 2, 0);
model.func('int1').setIndex('table', 3600, 2, 1);
model.func('int1').setIndex('table', 999, 3, 0);
model.func('int1').setIndex('table', 3600, 3, 1);
model.func('int1').setIndex('table', 1000, 4, 0);
model.func('int1').setIndex('table', -3600, 4, 1);
model.func('int1').setIndex('table', 3000, 5, 0);
model.func('int1').setIndex('table', -3600, 5, 1);
model.func('int1').setIndex('argunit', 's', 0);
model.func('int1').setIndex('fununit', 'Pa', 0);
model.func.create('an1', 'Analytic');
model.func('an1').model('comp1');
model.func('an1').set('funcname', 'T');
model.func('an1').set('expr', '500*t^((r-7e-2)/9e-2)*(t<=0.1)+50*t^((r-0.16)/9e-2)*(t>0.1)*(t<=1)+50*(t>1)');
model.func('an1').set('args', 't, r');
model.func('an1').setIndex('argunit', 's', 0);
model.func('an1').setIndex('argunit', 'm', 1);
model.func('an1').set('fununit', 'K');
model.func.create('int2', 'Interpolation');
model.func('int2').model('comp1');
model.func('int2').set('source', 'file');
model.func('int2').set('filename', 'elastoplastic_creep_target.txt');
model.func('int2').set('nargs', 1);
model.func('int2').importData;
model.func('int2').setIndex('funcs', 'sz_target', 0, 0);
model.func('int2').setIndex('funcs', 1, 0, 1);
model.func('int2').setIndex('funcs', 'sphi_target', 1, 0);
model.func('int2').setIndex('funcs', 2, 1, 1);
model.func('int2').setIndex('funcs', 'mises_target', 2, 0);
model.func('int2').setIndex('funcs', 3, 2, 1);
model.func('int2').setIndex('funcs', 'epe_target', 3, 0);
model.func('int2').setIndex('funcs', 4, 3, 1);
model.func('int2').setIndex('funcs', 'ece_target', 4, 0);
model.func('int2').setIndex('funcs', 5, 4, 1);

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', {'9e-2' '9e-3'});
model.geom('geom1').feature('r1').set('pos', [0.16 0]);
model.geom('geom1').runPre('fin');
model.geom('geom1').run;

model.physics('solid').prop('StructuralTransientBehavior').set('StructuralTransientBehavior', 'Quasistatic');
model.physics('solid').feature('lemm1').create('te1', 'ThermalExpansion', 2);
model.physics('solid').feature('lemm1').feature('te1').set('minput_temperature_src', 'userdef');
model.physics('solid').feature('lemm1').feature('te1').set('minput_temperature', 'T(t,r)');

model.common('cminpt').set('modified', {'strainreferencetemperature' '0'});

model.physics('solid').feature('lemm1').create('plsty1', 'Plasticity', 2);
model.physics('solid').feature('lemm1').feature('plsty1').set('IsotropicHardeningModel', 'HardeningFunction');
model.physics('solid').feature('lemm1').create('cmm1', 'Creep2', 2);
model.physics('solid').feature('lemm1').feature('cmm1').set('A_nor_mat', 'userdef');
model.physics('solid').feature('lemm1').feature('cmm1').set('A_nor', '1e-26/m*(t>2)');
model.physics('solid').feature('lemm1').feature('cmm1').set('sigRef_nor_mat', 'userdef');
model.physics('solid').feature('lemm1').feature('cmm1').set('sigRef_nor', 1);
model.physics('solid').feature('lemm1').feature('cmm1').set('n_nor_mat', 'userdef');
model.physics('solid').feature('lemm1').feature('cmm1').set('n_nor', 5.25);
model.physics('solid').feature('lemm1').feature('cmm1').set('isotropicHardening', 'time');
model.physics('solid').feature('lemm1').feature('cmm1').set('m', 'm');
model.physics('solid').feature('lemm1').feature('cmm1').set('tShift', '1e-3');
model.physics('solid').feature('lemm1').feature('cmm1').set('tRef', 1);
model.physics('solid').feature('lemm1').feature('cmm1').set('timeMethod', 'forwardEuler');
model.physics('solid').feature('lemm1').set('CalculateDissipatedEnergy', true);
model.physics('solid').create('bndl1', 'BoundaryLoad', 1);
model.physics('solid').feature('bndl1').selection.set([1]);
model.physics('solid').feature('bndl1').set('FperArea', {'pressure(t)' '0' '0'});
model.physics('solid').create('disp1', 'Displacement2', 2);
model.physics('solid').feature('disp1').selection.set([1]);
model.physics('solid').feature('disp1').setIndex('Direction', 'prescribed', 2);

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat1').propertyGroup('Enu').set('E', {'22[MPa]'});
model.material('mat1').propertyGroup('Enu').set('nu', {'0.3'});
model.material('mat1').propertyGroup('def').set('density', {'0'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'18.5e-6'});
model.material('mat1').propertyGroup.create('ElastoplasticModel', 'Elastoplastic_material_model');
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmags', {'sigma_yield(0)'});
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmagh', {'sigma_yield(epe)-sigma_yield(0)'});
model.material('mat1').propertyGroup('ElastoplasticModel').addInput('effectiveplasticstrain');
model.material('mat1').propertyGroup('ElastoplasticModel').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('funcname', 'sigma_yield');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').setIndex('table', 0, 0, 0);
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').setIndex('table', 9900, 0, 1);
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').setIndex('table', '3.9e-4', 1, 0);
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').setIndex('table', 12500, 1, 1);
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').setIndex('table', '9.5e-4', 2, 0);
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').setIndex('table', 15200, 2, 1);
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').setIndex('table', '2.95e-3', 3, 0);
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').setIndex('table', 17500, 3, 1);
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').setIndex('table', '6.15e-3', 4, 0);
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').setIndex('table', 20000, 4, 1);
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').setIndex('argunit', 1, 0);
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').setIndex('fununit', 'Pa', 0);

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([1]);
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 1);
model.mesh('mesh1').feature('map1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis2').selection.set([2]);
model.mesh('mesh1').feature('map1').feature('dis2').set('numelem', 10);
model.mesh('mesh1').run;

model.study('std1').feature('time').set('tlist', '0 0.01 0.06 0.1 range(0.4, 0.2, 2) 10 50 100 200 500 range(999, 0.2, 1000) 1002 1004 1010 1025 1050 1100 1160 range(1200, 100, 1500) 2000 3000');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.090448880590088');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', '0 0.01 0.06 0.1 range(0.4, 0.2, 2) 10 50 100 200 500 range(999, 0.2, 1000) 1002 1004 1010 1025 1050 1100 1160 range(1200, 100, 1500) 2000 3000');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('maxstepconstraintbdf', 'expr');
model.sol('sol1').feature('t1').set('maxstepexpressionbdf', 'comp1.solid.lemm1.cmm1.tmax');
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature('fc1').set('minstep', 0.5);
model.sol('sol1').feature('t1').feature('fc1').set('useminsteprecovery', 'on');
model.sol('sol1').feature('t1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 4);
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature('fc1').set('minstep', 0.5);
model.sol('sol1').feature('t1').feature('fc1').set('useminsteprecovery', 'on');
model.sol('sol1').feature('t1').feature('fc1').set('ntermauto', 'tol');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 4);
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('t1').set('tstepsbdf', 'strict');
model.sol('sol1').feature('t1').set('initialstepbdfactive', true);
model.sol('sol1').feature('t1').set('initialstepbdf', 0.01);
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 37, 0);
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('surf1').set('threshold', 'manual');
model.result('pg1').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg1').feature('surf1').set('colortable', 'Rainbow');
model.result('pg1').feature('surf1').set('colortabletrans', 'none');
model.result('pg1').feature('surf1').set('colorscalemode', 'linear');
model.result('pg1').feature('surf1').set('resolution', 'normal');
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg1').feature('surf1').feature('def').set('expr', {'u' 'w'});
model.result('pg1').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result.dataset.create('dset1solidrev', 'Revolve2D');
model.result.dataset('dset1solidrev').set('data', 'dset1');
model.result.dataset('dset1solidrev').set('revangle', 225);
model.result.dataset('dset1solidrev').set('startangle', -90);
model.result.dataset('dset1solidrev').set('hasspacevars', true);
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'dset1solidrev');
model.result('pg2').setIndex('looplevel', 37, 0);
model.result('pg2').set('defaultPlotID', 'stress3D');
model.result('pg2').label('Stress, 3D (solid)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg2').feature('surf1').set('threshold', 'manual');
model.result('pg2').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg2').feature('surf1').set('colortable', 'Rainbow');
model.result('pg2').feature('surf1').set('colortabletrans', 'none');
model.result('pg2').feature('surf1').set('colorscalemode', 'linear');
model.result('pg2').feature('surf1').set('colortable', 'Prism');
model.result('pg2').feature('surf1').create('def', 'Deform');
model.result.dataset('dset1solidrev').set('hasspacevars', true);
model.result('pg2').feature('surf1').feature('def').set('revcoordsys', 'cylindrical');
model.result('pg2').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg2').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg2').feature('surf1').feature('def').set('descractive', true);
model.result('pg1').run;
model.result.dataset.create('cpt1', 'CutPoint2D');
model.result.dataset('cpt1').set('pointx', '0.16 0.205 0.25');
model.result.dataset('cpt1').set('pointy', '5e-3');
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('Equivalent Plastic Strain');
model.result('pg3').set('legendpos', 'upperleft');
model.result('pg3').set('data', 'cpt1');
model.result('pg3').set('titletype', 'label');
model.result('pg3').create('ptgr1', 'PointGraph');
model.result('pg3').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg3').feature('ptgr1').set('linewidth', 'preference');
model.result('pg3').feature('ptgr1').set('expr', 'solid.epeGp');
model.result('pg3').feature('ptgr1').set('descr', 'Equivalent plastic strain');
model.result('pg3').feature('ptgr1').set('linewidth', 2);
model.result('pg3').feature('ptgr1').set('legend', true);
model.result('pg3').feature('ptgr1').set('legendmethod', 'manual');
model.result('pg3').feature('ptgr1').setIndex('legends', 'Computed, inner surface', 0);
model.result('pg3').feature('ptgr1').setIndex('legends', 'Computed, midthickness', 1);
model.result('pg3').feature('ptgr1').setIndex('legends', 'Computed, outer surface', 2);
model.result('pg3').run;
model.result('pg3').create('glob1', 'Global');
model.result('pg3').feature('glob1').set('markerpos', 'datapoints');
model.result('pg3').feature('glob1').set('linewidth', 'preference');
model.result('pg3').feature('glob1').setIndex('expr', 'epe_target(t)', 0);
model.result('pg3').feature('glob1').setIndex('unit', '', 0);
model.result('pg3').feature('glob1').setIndex('descr', '', 0);
model.result('pg3').feature('glob1').set('linestyle', 'none');
model.result('pg3').feature('glob1').set('linemarker', 'circle');
model.result('pg3').feature('glob1').set('linecolor', 'black');
model.result('pg3').feature('glob1').set('legendmethod', 'manual');
model.result('pg3').feature('glob1').setIndex('legends', 'Target, inner surface', 0);
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').set('axislimits', true);
model.result('pg3').set('xmin', 0);
model.result('pg3').set('xmax', 2);
model.result('pg3').run;
model.result.duplicate('pg4', 'pg3');
model.result('pg4').run;
model.result('pg4').label('Equivalent Creep Strain');
model.result('pg4').set('axislimits', false);
model.result('pg4').run;
model.result('pg4').feature('ptgr1').set('expr', 'solid.eceGp');
model.result('pg4').feature('ptgr1').set('descr', 'Equivalent creep strain');
model.result('pg4').run;
model.result('pg4').feature('glob1').setIndex('expr', 'ece_target(t)', 0);
model.result('pg4').feature('glob1').setIndex('unit', '', 0);
model.result('pg4').feature('glob1').setIndex('descr', '', 0);
model.result('pg4').run;
model.result.dataset.create('cpt2', 'CutPoint2D');
model.result.dataset('cpt2').set('pointx', 0.16);
model.result.dataset('cpt2').set('pointy', '5e-3');
model.result('pg4').run;
model.result.duplicate('pg5', 'pg4');
model.result('pg5').run;
model.result('pg5').label('Axial Stress');
model.result('pg5').set('data', 'cpt2');
model.result('pg5').set('legendpos', 'upperright');
model.result('pg5').run;
model.result('pg5').feature('ptgr1').set('expr', 'solid.sGpzz');
model.result('pg5').feature('ptgr1').set('descr', 'Stress tensor, zz-component');
model.result('pg5').feature('ptgr1').setIndex('legends', 'Computed', 0);
model.result('pg5').run;
model.result('pg5').feature('glob1').setIndex('expr', 'sz_target(t)', 0);
model.result('pg5').feature('glob1').setIndex('unit', '', 0);
model.result('pg5').feature('glob1').setIndex('descr', '', 0);
model.result('pg5').feature('glob1').setIndex('legends', 'Target', 0);
model.result('pg5').run;
model.result('pg5').run;
model.result.duplicate('pg6', 'pg5');
model.result('pg6').run;
model.result('pg6').label('Hoop Stress');
model.result('pg6').run;
model.result('pg6').feature('ptgr1').set('expr', 'solid.sGpphiphi');
model.result('pg6').feature('ptgr1').set('descr', 'Stress tensor, phiphi-component');
model.result('pg6').run;
model.result('pg6').feature('glob1').setIndex('expr', 'sphi_target(t)', 0);
model.result('pg6').feature('glob1').setIndex('unit', '', 0);
model.result('pg6').feature('glob1').setIndex('descr', '', 0);
model.result('pg6').run;
model.result('pg6').run;
model.result.duplicate('pg7', 'pg6');
model.result('pg7').run;
model.result('pg7').label('von Mises Stress');
model.result('pg7').run;
model.result('pg7').feature('ptgr1').set('expr', 'solid.misesGp');
model.result('pg7').feature('ptgr1').set('descr', 'von Mises stress');
model.result('pg7').run;
model.result('pg7').feature('glob1').setIndex('expr', 'mises_target(t)', 0);
model.result('pg7').feature('glob1').setIndex('unit', '', 0);
model.result('pg7').feature('glob1').setIndex('descr', '', 0);
model.result('pg7').run;
model.result.create('pg8', 'PlotGroup1D');
model.result('pg8').run;
model.result('pg8').label('Total Energies');
model.result('pg8').set('titletype', 'label');
model.result('pg8').create('glob1', 'Global');
model.result('pg8').feature('glob1').set('markerpos', 'datapoints');
model.result('pg8').feature('glob1').set('linewidth', 'preference');
model.result('pg8').feature('glob1').set('expr', {'solid.Ws_tot'});
model.result('pg8').feature('glob1').set('descr', {'Total elastic strain energy'});
model.result('pg8').feature('glob1').set('expr', {'solid.Ws_tot' 'solid.Wp_tot'});
model.result('pg8').feature('glob1').set('descr', {'Total elastic strain energy' 'Total plastic dissipation'});
model.result('pg8').feature('glob1').set('expr', {'solid.Ws_tot' 'solid.Wp_tot' 'solid.Wc_tot'});
model.result('pg8').feature('glob1').set('descr', {'Total elastic strain energy' 'Total plastic dissipation' 'Total creep dissipation'});
model.result('pg8').run;
model.result('pg8').set('legendpos', 'upperleft');
model.result('pg8').run;
model.result('pg7').run;

model.title('Combining Elastoplastic and Creep Material Models');

model.description('This example shows how to perform a stress analysis of a nonlinear material model including both creep and elastoplasticity. The model is a NAFEMS benchmark.');

model.label('elastoplastic_creep.mph');

model.modelNode.label('Components');

out = model;
