function out = model
%
% ow_microspeaker.m
%
% Model exported on May 26 2025, 21:25 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Acoustics_Module/Electroacoustic_Transducers');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('mf', 'InductionCurrents', 'geom1');
model.physics('mf').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').set('outputmap', {});
model.study('std1').feature('stat').set('ngenAUX', '1');
model.study('std1').feature('stat').set('goalngenAUX', '1');
model.study('std1').feature('stat').set('ngenAUX', '1');
model.study('std1').feature('stat').set('goalngenAUX', '1');
model.study('std1').feature('stat').setSolveFor('/physics/mf', true);
model.study('std1').create('frlin', 'Frequencylinearized');
model.study('std1').feature('frlin').set('outputmap', {});
model.study('std1').feature('frlin').set('ngenAUX', '1');
model.study('std1').feature('frlin').set('goalngenAUX', '1');
model.study('std1').feature('frlin').set('ngenAUX', '1');
model.study('std1').feature('frlin').set('goalngenAUX', '1');
model.study('std1').feature('frlin').setSolveFor('/physics/mf', true);

model.geom('geom1').run;

model.physics('mf').create('alf1', 'AmperesLawFluid', 2);
model.physics('mf').feature('alf1').selection.all;

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('f0', '20[kHz]', 'Driving frequency');
model.param.set('N0', '38', 'Coil turns');
model.param.set('d_wire', '0.07488[mm]', 'Coil wire diameter');
model.param.set('sigma_wire', '3.148e7[S/m]', 'Coil wire conductivity');
model.param.set('V0', '0.356[V]*sqrt(2)', 'Driving voltage');
model.param.set('B0', '1.2[T]', 'Remanent flux density');
model.param.set('dvisc', '0.22 [mm]*sqrt(100 [Hz]/f0)', 'Thickness of the thermoviscous layer');
model.param.set('P0', '0.2 [W]', 'Test power');
model.param.set('c0', '343 [m/s]', 'Speed of sound');
model.param.set('lam0', 'c0/f0', 'Min wavelength');
model.param.set('applied_force', '0[N]', 'Applied force');
model.param.set('m_total', '43[mg]', 'Weight of the coil, glue and diaphragm');
model.param.set('th_gap', '0.085[mm]', 'Thickness of the magnetic gap');
model.param.set('d_diag', '38[um]', 'Thickness of the diaphragm');
model.param.set('BL', '0.76519[Wb/m]', 'Computed BL Factor');
model.param.set('back_slits_w', '4.8[mm]', 'Width of the back slits');
model.param.set('back_slits_h', '0.6[mm]', 'Height of the back slits');
model.param.set('voice_coil_gap1', '0.2[mm]', 'Height of the inner voice coil gap');
model.param.set('voice_coil_gap2', '0.225[mm]', 'Height of the outer voice coil gap');

model.func.create('int1', 'Interpolation');
model.func('int1').label('Measured SPL at 39 mm');
model.func('int1').set('table', {'50' '42.15';  ...
'51.5' '40.57';  ...
'53' '43.2';  ...
'54.5' '42.31';  ...
'56' '41.6';  ...
'58' '44';  ...
'60' '47.03';  ...
'61.5' '42.32';  ...
'63' '45.02';  ...
'65' '44.44';  ...
'67' '43.56';  ...
'69' '46.42';  ...
'71' '47.33';  ...
'73' '48.77';  ...
'75' '44.96';  ...
'77.5' '45.44';  ...
'80' '45.71';  ...
'82.5' '49.76';  ...
'85' '47.87';  ...
'87.5' '50.57';  ...
'90' '51.33';  ...
'92.5' '49.55';  ...
'95' '51.38';  ...
'97.5' '51.8';  ...
'100' '52.1';  ...
'103' '52.69';  ...
'106' '54.42';  ...
'109' '53.63';  ...
'112' '53.26';  ...
'115' '53.29';  ...
'118' '54.53';  ...
'122' '55.88';  ...
'125' '56.15';  ...
'128' '56.43';  ...
'132' '55.94';  ...
'136' '57.16';  ...
'140' '57.67';  ...
'145' '57.94';  ...
'150' '58.73';  ...
'155' '58.56';  ...
'160' '59.62';  ...
'165' '59.56';  ...
'170' '59.95';  ...
'175' '60.1';  ...
'180' '60.24';  ...
'185' '60.75';  ...
'190' '60.83';  ...
'195' '61.42';  ...
'200' '61.64';  ...
'206' '62.57';  ...
'212' '63.1';  ...
'218' '63.47';  ...
'224' '63.93';  ...
'230' '64.55';  ...
'236' '65.39';  ...
'243' '66.07';  ...
'250' '66.6';  ...
'258' '67';  ...
'265' '67.58';  ...
'272' '68';  ...
'280' '68.86';  ...
'290' '69.67';  ...
'300' '70.42';  ...
'307' '70.76';  ...
'315' '71.26';  ...
'325' '71.95';  ...
'335' '72.55';  ...
'345' '73.14';  ...
'355' '73.68';  ...
'365' '74.38';  ...
'375' '75.1';  ...
'387' '75.81';  ...
'400' '76.51';  ...
'412' '77.22';  ...
'425' '77.96';  ...
'437' '78.37';  ...
'450' '79.07';  ...
'462' '79.69';  ...
'475' '80.13';  ...
'487' '80.51';  ...
'500' '80.99';  ...
'515' '82.06';  ...
'530' '82.87';  ...
'545' '83.46';  ...
'560' '84.24';  ...
'580' '85.19';  ...
'600' '86.13';  ...
'615' '86.6';  ...
'630' '86.98';  ...
'650' '87.4';  ...
'670' '88';  ...
'690' '88.88';  ...
'710' '89.77';  ...
'730' '90.36';  ...
'750' '91.2';  ...
'775' '92.46';  ...
'800' '93.43';  ...
'825' '94.65';  ...
'850' '95.78';  ...
'875' '96.77';  ...
'900' '97.68';  ...
'925' '98.26';  ...
'950' '98.7';  ...
'975' '98.96';  ...
'1000' '99';  ...
'1030' '99.06';  ...
'1060' '98.91';  ...
'1090' '98.59';  ...
'1120' '98.24';  ...
'1150' '97.67';  ...
'1180' '97.25';  ...
'1220' '96.56';  ...
'1250' '95.99';  ...
'1280' '95.49';  ...
'1320' '94.99';  ...
'1360' '94.45';  ...
'1400' '93.96';  ...
'1450' '93.61';  ...
'1500' '93.6';  ...
'1550' '93.56';  ...
'1600' '93.47';  ...
'1650' '93.15';  ...
'1700' '92.87';  ...
'1750' '92.22';  ...
'1800' '91.87';  ...
'1850' '91.63';  ...
'1900' '91.55';  ...
'1950' '91.72';  ...
'2000' '92.04';  ...
'2060' '92.21';  ...
'2120' '92.3';  ...
'2180' '92.21';  ...
'2240' '91.91';  ...
'2300' '91.83';  ...
'2360' '91.7';  ...
'2430' '91.65';  ...
'2500' '91.55';  ...
'2580' '91.46';  ...
'2650' '91.49';  ...
'2720' '91.39';  ...
'2800' '90.93';  ...
'2900' '90.13';  ...
'3000' '89.81';  ...
'3070' '89.86';  ...
'3150' '89.79';  ...
'3250' '89.83';  ...
'3350' '90.01';  ...
'3450' '90.12';  ...
'3550' '90.17';  ...
'3650' '90.03';  ...
'3750' '90.15';  ...
'3870' '89.29';  ...
'4000' '88.88';  ...
'4120' '88.53';  ...
'4250' '88.25';  ...
'4370' '88.5';  ...
'4500' '88.39';  ...
'4620' '88.41';  ...
'4750' '88.71';  ...
'4870' '88.8';  ...
'5000' '88.85';  ...
'5150' '88.51';  ...
'5300' '88';  ...
'5450' '87.57';  ...
'5600' '87.26';  ...
'5800' '86.89';  ...
'6000' '86.64';  ...
'6150' '86.62';  ...
'6300' '86.73';  ...
'6500' '86.43';  ...
'6700' '85.6';  ...
'6900' '84.93';  ...
'7100' '87.32';  ...
'7300' '90.9';  ...
'7500' '92.79';  ...
'7750' '94.46';  ...
'8000' '94.97';  ...
'8250' '95.44';  ...
'8500' '94.43';  ...
'8750' '94.7';  ...
'9000' '94.78';  ...
'9250' '95.39';  ...
'9500' '94.86';  ...
'9750' '93.99';  ...
'10000' '93.49';  ...
'10300' '94.35';  ...
'10600' '94.35';  ...
'10900' '93.77';  ...
'11200' '93.01';  ...
'11500' '93.53';  ...
'11800' '93.6';  ...
'12200' '93.12';  ...
'12500' '92.19';  ...
'12800' '91.54';  ...
'13200' '90.26';  ...
'13600' '88.65';  ...
'14000' '86.61';  ...
'14500' '85.05';  ...
'15000' '84.4';  ...
'15500' '84.6';  ...
'16000' '85.34';  ...
'16500' '84.06';  ...
'17000' '81.83';  ...
'17500' '80.3';  ...
'18000' '77.42';  ...
'18500' '81.52';  ...
'19000' '81.73';  ...
'19500' '81.31';  ...
'20000' '83.72'});
model.func('int1').set('funcname', 'SPL_Test');
model.func('int1').setIndex('argunit', 'Hz', 0);
model.func('int1').setIndex('fununit', 'dB', 0);
model.func.create('int2', 'Interpolation');
model.func('int2').label('Measured BL curve');
model.func('int2').set('table', {'-0.46212506' '0.70742142';  ...
'-0.45969209' '0.7082839';  ...
'-0.45725909' '0.70914114';  ...
'-0.45482615' '0.70999306';  ...
'-0.45239314' '0.71083981';  ...
'-0.44996017' '0.71168131';  ...
'-0.4475272' '0.7125175';  ...
'-0.44509423' '0.71334845';  ...
'-0.44266126' '0.71417409';  ...
'-0.44022825' '0.71499443';  ...
'-0.43779531' '0.71580946';  ...
'-0.43536231' '0.71661919';  ...
'-0.43292934' '0.71742356';  ...
'-0.43049636' '0.71822262';  ...
'-0.42806339' '0.71901637';  ...
'-0.42563042' '0.71980476';  ...
'-0.42319742' '0.72058779';  ...
'-0.42076448' '0.72136545';  ...
'-0.41833147' '0.72213775';  ...
'-0.4158985' '0.72290468';  ...
'-0.41346553' '0.72366619';  ...
'-0.41103256' '0.72442234';  ...
'-0.40859956' '0.72517312';  ...
'-0.40616658' '0.72591841';  ...
'-0.40373364' '0.72665834';  ...
'-0.40130064' '0.72739279';  ...
'-0.39886767' '0.72812188';  ...
'-0.39643469' '0.72884548';  ...
'-0.39400172' '0.72956365';  ...
'-0.39156872' '0.73027641';  ...
'-0.38913575' '0.73098367';  ...
'-0.38670278' '0.73168552';  ...
'-0.3842698' '0.73238182';  ...
'-0.38183683' '0.7330727';  ...
'-0.37940386' '0.73375809';  ...
'-0.37697089' '0.734438';  ...
'-0.37453789' '0.73511237';  ...
'-0.37210494' '0.73578131';  ...
'-0.36967194' '0.73644471';  ...
'-0.36723897' '0.73710257';  ...
'-0.36480597' '0.73775494';  ...
'-0.36237302' '0.73840183';  ...
'-0.35994005' '0.73904312';  ...
'-0.35750705' '0.73967892';  ...
'-0.35507411' '0.74030918';  ...
'-0.35264111' '0.7409339';  ...
'-0.35020813' '0.74155301';  ...
'-0.34777513' '0.74216664';  ...
'-0.34534219' '0.74277467';  ...
'-0.34290919' '0.74337715';  ...
'-0.34047621' '0.74397403';  ...
'-0.33804327' '0.74456537';  ...
'-0.33561027' '0.7451511';  ...
'-0.3331773' '0.74573129';  ...
'-0.33074433' '0.74630588';  ...
'-0.32831135' '0.74687481';  ...
'-0.32587835' '0.74743819';  ...
'-0.32344538' '0.74799597';  ...
'-0.32101241' '0.74854815';  ...
'-0.31857944' '0.74909467';  ...
'-0.31614646' '0.74963558';  ...
'-0.31371349' '0.75017089';  ...
'-0.31128052' '0.75070053';  ...
'-0.30884752' '0.75122458';  ...
'-0.30641454' '0.75174296';  ...
'-0.30398157' '0.75225574';  ...
'-0.3015486' '0.75276279';  ...
'-0.2991156' '0.75326425';  ...
'-0.29668266' '0.75376004';  ...
'-0.29424965' '0.75425017';  ...
'-0.29181668' '0.75473464';  ...
'-0.28938371' '0.75521338';  ...
'-0.28695074' '0.75568652';  ...
'-0.28451777' '0.75615394';  ...
'-0.28208476' '0.75661564';  ...
'-0.27965182' '0.75707167';  ...
'-0.27721882' '0.75752205';  ...
'-0.27478585' '0.7579667';  ...
'-0.27235287' '0.75840563';  ...
'-0.2699199' '0.75883883';  ...
'-0.26748693' '0.75926638';  ...
'-0.26505393' '0.75968814';  ...
'-0.26262099' '0.76010418';  ...
'-0.26018798' '0.7605145';  ...
'-0.25775501' '0.76091909';  ...
'-0.25532204' '0.76131797';  ...
'-0.25288907' '0.76171106';  ...
'-0.25045606' '0.76209843';  ...
'-0.24802311' '0.76248002';  ...
'-0.24559014' '0.76285583';  ...
'-0.24315715' '0.76322591';  ...
'-0.24072418' '0.76359022';  ...
'-0.2382912' '0.76394874';  ...
'-0.23585823' '0.76430148';  ...
'-0.23342524' '0.76464844';  ...
'-0.23099227' '0.76498955';  ...
'-0.22855929' '0.76532495';  ...
'-0.22612631' '0.7656545';  ...
'-0.22369334' '0.76597822';  ...
'-0.22126035' '0.76629615';  ...
'-0.21882738' '0.76660824';  ...
'-0.21639441' '0.76691455';  ...
'-0.21396144' '0.76721495';  ...
'-0.21152847' '0.76750958';  ...
'-0.20909548' '0.76779836';  ...
'-0.20666251' '0.76808125';  ...
'-0.20422952' '0.76835829';  ...
'-0.20179655' '0.76862949';  ...
'-0.19936356' '0.76889485';  ...
'-0.19693059' '0.76915431';  ...
'-0.19449763' '0.76940787';  ...
'-0.19206464' '0.76965553';  ...
'-0.18963167' '0.76989734';  ...
'-0.18719868' '0.77013326';  ...
'-0.18476571' '0.77036321';  ...
'-0.18233274' '0.77058733';  ...
'-0.17989975' '0.77080548';  ...
'-0.17746678' '0.77101767';  ...
'-0.17503379' '0.77122396';  ...
'-0.17260084' '0.77142435';  ...
'-0.17016785' '0.77161878';  ...
'-0.16773488' '0.77180719';  ...
'-0.1653019' '0.7719897';  ...
'-0.16286892' '0.77216625';  ...
'-0.16043594' '0.77233684';  ...
'-0.15800296' '0.77250141';  ...
'-0.15556999' '0.77266002';  ...
'-0.15313701' '0.7728126';  ...
'-0.15070404' '0.77295923';  ...
'-0.14827107' '0.77309978';  ...
'-0.14583808' '0.77323437';  ...
'-0.14340511' '0.77336293';  ...
'-0.14097212' '0.77348542';  ...
'-0.13853915' '0.77360189';  ...
'-0.13610618' '0.77371234';  ...
'-0.13367319' '0.7738167';  ...
'-0.13124022' '0.77391499';  ...
'-0.12880723' '0.77400726';  ...
'-0.12637427' '0.77409345';  ...
'-0.12394129' '0.7741735';  ...
'-0.12150832' '0.77424747';  ...
'-0.11907534' '0.77431536';  ...
'-0.11664236' '0.77437711';  ...
'-0.11420938' '0.77443278';  ...
'-0.11177641' '0.77448231';  ...
'-0.10934343' '0.7745257';  ...
'-0.10691045' '0.77456295';  ...
'-0.10447747' '0.77459401';  ...
'-0.1020445' '0.77461898';  ...
'-0.099611528' '0.7746377';  ...
'-0.097178549' '0.77465028';  ...
'-0.094745569' '0.77465671';  ...
'-0.092312589' '0.77465689';  ...
'-0.089879617' '0.77465093';  ...
'-0.087446645' '0.77463871';  ...
'-0.085013665' '0.77462023';  ...
'-0.082580686' '0.77459562';  ...
'-0.080147706' '0.77456468';  ...
'-0.077714734' '0.77452755';  ...
'-0.075281754' '0.77448416';  ...
'-0.072848782' '0.77443445';  ...
'-0.070415802' '0.77437854';  ...
'-0.06798283' '0.77431631';  ...
'-0.06554985' '0.77424777';  ...
'-0.063116871' '0.77417296';  ...
'-0.060683895' '0.77409184';  ...
'-0.058250919' '0.7740044';  ...
'-0.055817943' '0.77391058';  ...
'-0.053384967' '0.77381051';  ...
'-0.050951988' '0.77370399';  ...
'-0.048519015' '0.77359122';  ...
'-0.046086036' '0.77347201';  ...
'-0.043653056' '0.77334642';  ...
'-0.041220084' '0.77321452';  ...
'-0.038787104' '0.77307618';  ...
'-0.036354128' '0.7729314';  ...
'-0.033921152' '0.7727803';  ...
'-0.031488176' '0.7726227';  ...
'-0.029055199' '0.77245873';  ...
'-0.026622221' '0.77228826';  ...
'-0.024189245' '0.77211136';  ...
'-0.021756269' '0.77192801';  ...
'-0.019323291' '0.77173823';  ...
'-0.016890315' '0.77154195';  ...
'-0.014457338' '0.77133918';  ...
'-0.012024362' '0.77112991';  ...
'-0.0095913839' '0.77091414';  ...
'-0.007158407' '0.77069187';  ...
'-0.0047254306' '0.77046305';  ...
'-0.002292454' '0.77022773';  ...
'0.00014052281' '0.76998585';  ...
'0.0025734997' '0.76973742';  ...
'0.0050064763' '0.76948249';  ...
'0.0074394532' '0.76922095';  ...
'0.0098724291' '0.76895279';  ...
'0.012305407' '0.76867813';  ...
'0.014738384' '0.76839685';  ...
'0.017171361' '0.76810896';  ...
'0.019604336' '0.76781446';  ...
'0.022037312' '0.76751333';  ...
'0.02447029' '0.7672056';  ...
'0.026903268' '0.76689124';  ...
'0.029336244' '0.76657021';  ...
'0.03176922' '0.76624256';  ...
'0.034202196' '0.76590824';  ...
'0.036635175' '0.7655673';  ...
'0.039068151' '0.76521963';  ...
'0.041501127' '0.76486528';  ...
'0.043934107' '0.76450425';  ...
'0.046367079' '0.76413655';  ...
'0.048800059' '0.76376212';  ...
'0.051233035' '0.76338094';  ...
'0.05366601' '0.7629931';  ...
'0.056098986' '0.76259851';  ...
'0.058531966' '0.7621972';  ...
'0.060964942' '0.76178914';  ...
'0.063397922' '0.76137435';  ...
'0.065830894' '0.76095277';  ...
'0.068263873' '0.76052445';  ...
'0.070696853' '0.7600894';  ...
'0.073129825' '0.75964749';  ...
'0.075562797' '0.7591989';  ...
'0.077995777' '0.75874346';  ...
'0.080428757' '0.75828123';  ...
'0.082861736' '0.75781226';  ...
'0.085294709' '0.75733644';  ...
'0.087727681' '0.75685382';  ...
'0.09016066' '0.75636441';  ...
'0.09259364' '0.75586814';  ...
'0.09502662' '0.75536507';  ...
'0.097459592' '0.75485522';  ...
'0.099892572' '0.75433844';  ...
'0.10232554' '0.75381494';  ...
'0.10475852' '0.75328451';  ...
'0.1071915' '0.7527473';  ...
'0.10962448' '0.75220323';  ...
'0.11205745' '0.75165224';  ...
'0.11449043' '0.75109446';  ...
'0.11692341' '0.75052983';  ...
'0.11935638' '0.74995834';  ...
'0.12178936' '0.74937999';  ...
'0.12422234' '0.74879473';  ...
'0.12665531' '0.74820262';  ...
'0.1290883' '0.74760371';  ...
'0.13152127' '0.74699783';  ...
'0.13395426' '0.74638516';  ...
'0.13638721' '0.74576557';  ...
'0.13882019' '0.74513912';  ...
'0.14125317' '0.74450582';  ...
'0.14368615' '0.74386561';  ...
'0.14611913' '0.74321854';  ...
'0.1485521' '0.74256462';  ...
'0.15098509' '0.74190378';  ...
'0.15341806' '0.74123609';  ...
'0.15585104' '0.74056154';  ...
'0.15828401' '0.73988014';  ...
'0.16071698' '0.73919183';  ...
'0.16314997' '0.73849666';  ...
'0.16558294' '0.73779464';  ...
'0.16801591' '0.7370857';  ...
'0.1704489' '0.73636997';  ...
'0.17288187' '0.73564732';  ...
'0.17531486' '0.73491788';  ...
'0.17774783' '0.73418152';  ...
'0.1801808' '0.73343837';  ...
'0.18261378' '0.73268837';  ...
'0.18504675' '0.73193151';  ...
'0.18747973' '0.73116779';  ...
'0.18991271' '0.73039728';  ...
'0.19234569' '0.72961998';  ...
'0.19477867' '0.72883582';  ...
'0.19721164' '0.72804487';  ...
'0.19964463' '0.72724706';  ...
'0.20207758' '0.72644252';  ...
'0.20451057' '0.72563112';  ...
'0.20694354' '0.72481298';  ...
'0.20937653' '0.72398806';  ...
'0.2118095' '0.72315639';  ...
'0.21424247' '0.72231793';  ...
'0.21667546' '0.72147274';  ...
'0.21910843' '0.72062081';  ...
'0.22154142' '0.71976215';  ...
'0.22397439' '0.71889675';  ...
'0.22640735' '0.71802467';  ...
'0.22884034' '0.71714586';  ...
'0.23127331' '0.71626037';  ...
'0.2337063' '0.71536821';  ...
'0.23613927' '0.71446937';  ...
'0.23857224' '0.71356386';  ...
'0.24100523' '0.71265173';  ...
'0.2434382' '0.71173298';  ...
'0.24587117' '0.71080762';  ...
'0.24830416' '0.70987564';  ...
'0.25073713' '0.70893705';  ...
'0.2531701' '0.70799196';  ...
'0.25560308' '0.70704025';  ...
'0.25803605' '0.70608205';  ...
'0.26046905' '0.70511729';  ...
'0.26290199' '0.70414597';  ...
'0.26533499' '0.70316821';  ...
'0.26776797' '0.70218402';  ...
'0.27020094' '0.70119327';  ...
'0.27263391' '0.70019615';  ...
'0.27506691' '0.69919258';  ...
'0.27749988' '0.69818264';  ...
'0.27993283' '0.69716626';  ...
'0.28236583' '0.69614357';  ...
'0.2847988' '0.69511449';  ...
'0.28723177' '0.6940791';  ...
'0.28966475' '0.69303739';  ...
'0.29209775' '0.69198942';  ...
'0.29453072' '0.69093519';  ...
'0.29696369' '0.68987471';  ...
'0.29939666' '0.68880796';  ...
'0.30182964' '0.68773508';  ...
'0.30426261' '0.686656';  ...
'0.30669558' '0.68557078';  ...
'0.30912858' '0.68447942';  ...
'0.31156155' '0.68338197';  ...
'0.31399453' '0.68227845';  ...
'0.3164275' '0.68116885';  ...
'0.3188605' '0.68005323';  ...
'0.32129344' '0.67893165';  ...
'0.32372642' '0.67780405';  ...
'0.32615942' '0.67667049';  ...
'0.32859236' '0.67553103';  ...
'0.33102536' '0.67438573';  ...
'0.33345833' '0.67323452';  ...
'0.33589134' '0.67207748';  ...
'0.33832428' '0.67091459';  ...
'0.34075728' '0.66974598';  ...
'0.34319025' '0.66857159';  ...
'0.3456232' '0.66739154';  ...
'0.3480562' '0.6662057';  ...
'0.35048917' '0.66501427';  ...
'0.35292217' '0.66381723';  ...
'0.35535511' '0.66261458';  ...
'0.35778812' '0.66140634';  ...
'0.36022109' '0.66019261';  ...
'0.36265406' '0.6589734';  ...
'0.36508703' '0.6577487';  ...
'0.36752' '0.65651852';  ...
'0.36995298' '0.65528303';  ...
'0.37238595' '0.65404212';  ...
'0.37481895' '0.65279591';  ...
'0.37725192' '0.65154439';  ...
'0.3796849' '0.65028769';  ...
'0.38211787' '0.64902568';  ...
'0.38455087' '0.64775854';  ...
'0.38698381' '0.64648622';  ...
'0.38941681' '0.64520884';  ...
'0.39184979' '0.64392632';  ...
'0.39428276' '0.64263886';  ...
'0.39671573' '0.64134634';  ...
'0.3991487' '0.64004886';  ...
'0.4015817' '0.6387465';  ...
'0.40401465' '0.63743925';  ...
'0.40644765' '0.63612711';  ...
'0.40888062' '0.63481021';  ...
'0.41131362' '0.6334886';  ...
'0.41374657' '0.63216221';  ...
'0.41617954' '0.63083118';  ...
'0.41861254' '0.6294955';  ...
'0.42104548' '0.62815523';  ...
'0.42347848' '0.62681037';  ...
'0.42591146' '0.62546104';  ...
'0.42834443' '0.62410724';  ...
'0.4307774' '0.62274903';  ...
'0.4332104' '0.62138641';  ...
'0.43564337' '0.6200195';  ...
'0.43807632' '0.61864823';  ...
'0.44050932' '0.61727273';  ...
'0.44294229' '0.61589307';  ...
'0.44537526' '0.61450922';  ...
'0.44780824' '0.61312121';  ...
'0.45024124' '0.6117292';  ...
'0.45267421' '0.61033314';  ...
'0.45510718' '0.60893309';  ...
'0.45754015' '0.6075291';  ...
'0.45997313' '0.60612124';  ...
'0.4624061' '0.60470957'});
model.func('int2').set('funcname', 'BL_Test');
model.func('int2').set('interp', 'piecewisecubic');
model.func('int2').set('extrap', 'linear');
model.func('int2').setIndex('argunit', 'mm', 0);
model.func('int2').setIndex('fununit', 'Wb/m', 0);
model.func.create('int3', 'Interpolation');
model.func('int3').label('Measured Z curve');
model.func('int3').set('table', {'50' '7.85';  ...
'51.5' '7.85';  ...
'53' '7.85';  ...
'54.5' '7.85';  ...
'56' '7.85';  ...
'58' '7.85';  ...
'60' '7.85';  ...
'61.5' '7.85';  ...
'63' '7.85';  ...
'65' '7.85';  ...
'67' '7.85';  ...
'69' '7.85';  ...
'71' '7.85';  ...
'73' '7.85';  ...
'75' '7.85';  ...
'77.5' '7.85';  ...
'80' '7.85';  ...
'82.5' '7.85';  ...
'85' '7.85';  ...
'87.5' '7.85';  ...
'90' '7.85';  ...
'92.5' '7.85';  ...
'95' '7.85';  ...
'97.5' '7.85';  ...
'100' '7.85';  ...
'103' '7.85';  ...
'106' '7.85';  ...
'109' '7.85';  ...
'112' '7.85';  ...
'115' '7.85';  ...
'118' '7.85';  ...
'122' '7.85';  ...
'125' '7.85';  ...
'128' '7.85';  ...
'132' '7.85';  ...
'136' '7.85';  ...
'140' '7.85';  ...
'145' '7.85';  ...
'150' '7.85';  ...
'155' '7.85';  ...
'160' '7.85';  ...
'165' '7.85';  ...
'170' '7.86';  ...
'175' '7.86';  ...
'180' '7.86';  ...
'185' '7.86';  ...
'190' '7.86';  ...
'195' '7.86';  ...
'200' '7.86';  ...
'206' '7.86';  ...
'212' '7.86';  ...
'218' '7.86';  ...
'224' '7.87';  ...
'230' '7.87';  ...
'236' '7.87';  ...
'243' '7.87';  ...
'250' '7.87';  ...
'258' '7.88';  ...
'265' '7.88';  ...
'272' '7.88';  ...
'280' '7.89';  ...
'290' '7.89';  ...
'300' '7.89';  ...
'307' '7.9';  ...
'315' '7.9';  ...
'325' '7.91';  ...
'335' '7.91';  ...
'345' '7.92';  ...
'355' '7.93';  ...
'365' '7.93';  ...
'375' '7.94';  ...
'387' '7.95';  ...
'400' '7.96';  ...
'412' '7.97';  ...
'425' '7.98';  ...
'437' '8';  ...
'450' '8.01';  ...
'462' '8.03';  ...
'475' '8.04';  ...
'487' '8.06';  ...
'500' '8.08';  ...
'515' '8.11';  ...
'530' '8.14';  ...
'545' '8.17';  ...
'560' '8.21';  ...
'580' '8.27';  ...
'600' '8.33';  ...
'615' '8.39';  ...
'630' '8.46';  ...
'650' '8.56';  ...
'670' '8.68';  ...
'690' '8.83';  ...
'710' '9.02';  ...
'730' '9.26';  ...
'750' '9.56';  ...
'775' '10.07';  ...
'800' '10.79';  ...
'825' '11.85';  ...
'850' '13.48';  ...
'875' '16.06';  ...
'900' '20.3';  ...
'925' '26.59';  ...
'950' '31.48';  ...
'975' '28.18';  ...
'1000' '21.84';  ...
'1030' '16.72';  ...
'1060' '13.78';  ...
'1090' '12.09';  ...
'1120' '11.01';  ...
'1150' '10.29';  ...
'1180' '9.76';  ...
'1220' '9.29';  ...
'1250' '9.04';  ...
'1280' '8.86';  ...
'1320' '8.68';  ...
'1360' '8.53';  ...
'1400' '8.43';  ...
'1450' '8.3';  ...
'1500' '8.27';  ...
'1550' '8.2';  ...
'1600' '8.14';  ...
'1650' '8.1';  ...
'1700' '8.08';  ...
'1750' '8.06';  ...
'1800' '8.03';  ...
'1850' '8';  ...
'1900' '7.99';  ...
'1950' '7.99';  ...
'2000' '7.98';  ...
'2060' '7.97';  ...
'2120' '7.95';  ...
'2180' '7.94';  ...
'2240' '7.93';  ...
'2300' '7.92';  ...
'2360' '7.92';  ...
'2430' '7.91';  ...
'2500' '7.9';  ...
'2580' '7.9';  ...
'2650' '7.89';  ...
'2720' '7.89';  ...
'2800' '7.89';  ...
'2900' '7.89';  ...
'3000' '7.89';  ...
'3070' '7.89';  ...
'3150' '7.89';  ...
'3250' '7.89';  ...
'3350' '7.89';  ...
'3450' '7.89';  ...
'3550' '7.9';  ...
'3650' '7.9';  ...
'3750' '7.9';  ...
'3870' '7.91';  ...
'4000' '7.91';  ...
'4120' '7.92';  ...
'4250' '7.93';  ...
'4370' '7.93';  ...
'4500' '7.94';  ...
'4620' '7.95';  ...
'4750' '7.95';  ...
'4870' '7.96';  ...
'5000' '7.97';  ...
'5150' '7.97';  ...
'5300' '7.98';  ...
'5450' '8';  ...
'5600' '8';  ...
'5800' '8.02';  ...
'6000' '8.04';  ...
'6150' '8.06';  ...
'6300' '8.08';  ...
'6500' '8.1';  ...
'6700' '8.14';  ...
'6900' '8.2';  ...
'7100' '8.29';  ...
'7300' '8.36';  ...
'7500' '8.37';  ...
'7750' '8.33';  ...
'8000' '8.27';  ...
'8250' '8.21';  ...
'8500' '8.18';  ...
'8750' '8.17';  ...
'9000' '8.18';  ...
'9250' '8.18';  ...
'9500' '8.19';  ...
'9750' '8.2';  ...
'10000' '8.21';  ...
'10300' '8.23';  ...
'10600' '8.25';  ...
'10900' '8.26';  ...
'11200' '8.28';  ...
'11500' '8.3';  ...
'11800' '8.32';  ...
'12200' '8.35';  ...
'12500' '8.36';  ...
'12800' '8.38';  ...
'13200' '8.41';  ...
'13600' '8.43';  ...
'14000' '8.46';  ...
'14500' '8.49';  ...
'15000' '8.52';  ...
'15500' '8.55';  ...
'16000' '8.58';  ...
'16500' '8.61';  ...
'17000' '8.64';  ...
'17500' '8.67';  ...
'18000' '8.71';  ...
'18500' '8.74';  ...
'19000' '8.78';  ...
'19500' '8.81';  ...
'20000' '8.84'});
model.func('int3').set('funcname', 'Z_Test');
model.func('int3').setIndex('argunit', 'Hz', 0);
model.func('int3').setIndex('fununit', 'ohm', 0);
model.func.create('int4', 'Interpolation');
model.func('int4').label('Measured CMS curve');
model.func('int4').set('table', {'0.46212506' '0.64454341';  ...
'0.45969209' '0.64436477';  ...
'0.45725909' '0.64418739';  ...
'0.45482615' '0.64401108';  ...
'0.45239314' '0.64383584';  ...
'0.44996017' '0.64366186';  ...
'0.4475272' '0.64348882';  ...
'0.44509423' '0.64331686';  ...
'0.44266126' '0.64314598';  ...
'0.44022825' '0.64297616';  ...
'0.43779531' '0.64280725';  ...
'0.43536231' '0.64263934';  ...
'0.43292934' '0.64247245';  ...
'0.43049636' '0.64230645';  ...
'0.42806339' '0.64214146';  ...
'0.42563042' '0.64197731';  ...
'0.42319742' '0.64181405';  ...
'0.42076448' '0.64165169';  ...
'0.41833147' '0.64149016';  ...
'0.4158985' '0.64132947';  ...
'0.41346553' '0.64116955';  ...
'0.41103256' '0.64101046';  ...
'0.40859956' '0.64085215';  ...
'0.40616658' '0.64069456';  ...
'0.40373364' '0.64053774';  ...
'0.40130064' '0.64038169';  ...
'0.39886767' '0.6402263';  ...
'0.39643469' '0.64007157';  ...
'0.39400172' '0.63991755';  ...
'0.39156872' '0.63976419';  ...
'0.38913575' '0.63961136';  ...
'0.38670278' '0.63945931';  ...
'0.3842698' '0.63930774';  ...
'0.38183683' '0.63915676';  ...
'0.37940386' '0.63900632';  ...
'0.37697089' '0.63885641';  ...
'0.37453789' '0.6387071';  ...
'0.37210494' '0.63855821';  ...
'0.36967194' '0.63840985';  ...
'0.36723897' '0.63826197';  ...
'0.36480597' '0.63811451';  ...
'0.36237302' '0.63796753';  ...
'0.35994005' '0.6378209';  ...
'0.35750705' '0.63767475';  ...
'0.35507411' '0.63752896';  ...
'0.35264111' '0.63738352';  ...
'0.35020813' '0.63723838';  ...
'0.34777513' '0.63709366';  ...
'0.34534219' '0.63694918';  ...
'0.34290919' '0.63680506';  ...
'0.34047621' '0.63666117';  ...
'0.33804327' '0.63651758';  ...
'0.33561027' '0.63637424';  ...
'0.3331773' '0.63623112';  ...
'0.33074433' '0.63608819';  ...
'0.32831135' '0.6359455';  ...
'0.32587835' '0.63580292';  ...
'0.32344538' '0.63566053';  ...
'0.32101241' '0.63551831';  ...
'0.31857944' '0.63537621';  ...
'0.31614646' '0.63523418';  ...
'0.31371349' '0.63509232';  ...
'0.31128052' '0.63495046';  ...
'0.30884752' '0.63480872';  ...
'0.30641454' '0.63466704';  ...
'0.30398157' '0.63452536';  ...
'0.3015486' '0.63438368';  ...
'0.2991156' '0.63424206';  ...
'0.29668266' '0.63410038';  ...
'0.29424965' '0.6339587';  ...
'0.29181668' '0.63381696';  ...
'0.28938371' '0.6336751';  ...
'0.28695074' '0.63353318';  ...
'0.28451777' '0.6333912';  ...
'0.28208476' '0.63324904';  ...
'0.27965182' '0.63310689';  ...
'0.27721882' '0.63296449';  ...
'0.27478585' '0.63282192';  ...
'0.27235287' '0.63267922';  ...
'0.2699199' '0.63253629';  ...
'0.26748693' '0.63239318';  ...
'0.26505393' '0.63224983';  ...
'0.26262099' '0.63210624';  ...
'0.26018798' '0.63196242';  ...
'0.25775501' '0.63181829';  ...
'0.25532204' '0.63167393';  ...
'0.25288907' '0.63152927';  ...
'0.25045606' '0.63138425';  ...
'0.24802311' '0.631239';  ...
'0.24559014' '0.63109326';  ...
'0.24315715' '0.63094729';  ...
'0.24072418' '0.6308009';  ...
'0.2382912' '0.6306541';  ...
'0.23585823' '0.63050687';  ...
'0.23342524' '0.63035929';  ...
'0.23099227' '0.63021123';  ...
'0.22855929' '0.63006276';  ...
'0.22612631' '0.62991381';  ...
'0.22369334' '0.62976438';  ...
'0.22126035' '0.62961453';  ...
'0.21882738' '0.62946403';  ...
'0.21639441' '0.62931311';  ...
'0.21396144' '0.62916166';  ...
'0.21152847' '0.6290096';  ...
'0.20909548' '0.62885702';  ...
'0.20666251' '0.62870383';  ...
'0.20422952' '0.62855005';  ...
'0.20179655' '0.62839568';  ...
'0.19936356' '0.62824076';  ...
'0.19693059' '0.62808514';  ...
'0.19449763' '0.62792885';  ...
'0.19206464' '0.62777197';  ...
'0.18963167' '0.62761432';  ...
'0.18719868' '0.62745601';  ...
'0.18476571' '0.62729704';  ...
'0.18233274' '0.6271373';  ...
'0.17989975' '0.62697685';  ...
'0.17746678' '0.62681568';  ...
'0.17503379' '0.62665373';  ...
'0.17260084' '0.62649095';  ...
'0.17016785' '0.62632746';  ...
'0.16773488' '0.62616318';  ...
'0.1653019' '0.62599808';  ...
'0.16286892' '0.62583214';  ...
'0.16043594' '0.62566537';  ...
'0.15800296' '0.6254977';  ...
'0.15556999' '0.6253292';  ...
'0.15313701' '0.6251598';  ...
'0.15070404' '0.62498957';  ...
'0.14827107' '0.62481838';  ...
'0.14583808' '0.62464631';  ...
'0.14340511' '0.62447333';  ...
'0.14097212' '0.62429935';  ...
'0.13853915' '0.62412441';  ...
'0.13610618' '0.62394857';  ...
'0.13367319' '0.62377167';  ...
'0.13124022' '0.62359387';  ...
'0.12880723' '0.62341499';  ...
'0.12637427' '0.62323511';  ...
'0.12394129' '0.62305421';  ...
'0.12150832' '0.62287229';  ...
'0.11907534' '0.62268931';  ...
'0.11664236' '0.62250525';  ...
'0.11420938' '0.62232012';  ...
'0.11177641' '0.62213391';  ...
'0.10934343' '0.62194651';  ...
'0.10691045' '0.6217581';  ...
'0.10447747' '0.6215685';  ...
'0.1020445' '0.62137783';  ...
'0.099611528' '0.62118596';  ...
'0.097178549' '0.62099296';  ...
'0.094745569' '0.62079871';  ...
'0.092312589' '0.62060338';  ...
'0.089879617' '0.62040681';  ...
'0.087446645' '0.62020904';  ...
'0.085013665' '0.62001002';  ...
'0.082580686' '0.61980981';  ...
'0.080147706' '0.61960834';  ...
'0.077714734' '0.61940563';  ...
'0.075281754' '0.6192016';  ...
'0.072848782' '0.61899638';  ...
'0.070415802' '0.61878985';  ...
'0.06798283' '0.61858201';  ...
'0.06554985' '0.61837286';  ...
'0.063116871' '0.61816245';  ...
'0.060683895' '0.61795062';  ...
'0.058250919' '0.61773753';  ...
'0.055817943' '0.61752301';  ...
'0.053384967' '0.61730719';  ...
'0.050951988' '0.61709005';  ...
'0.048519015' '0.61687148';  ...
'0.046086036' '0.61665148';  ...
'0.043653056' '0.6164301';  ...
'0.041220084' '0.61620736';  ...
'0.038787104' '0.61598313';  ...
'0.036354128' '0.61575752';  ...
'0.033921152' '0.61553049';  ...
'0.031488176' '0.61530197';  ...
'0.029055199' '0.61507195';  ...
'0.026622221' '0.61484051';  ...
'0.024189245' '0.61460763';  ...
'0.021756269' '0.61437327';  ...
'0.019323291' '0.61413735';  ...
'0.016890315' '0.61389989';  ...
'0.014457338' '0.61366099';  ...
'0.012024362' '0.61342055';  ...
'0.0095913839' '0.61317861';  ...
'0.007158407' '0.61293507';  ...
'0.0047254306' '0.61268997';  ...
'0.002292454' '0.61244339';  ...
'-0.00014052281' '0.61219513';  ...
'-0.0025734997' '0.61194533';  ...
'-0.0050064763' '0.61169398';  ...
'-0.0074394532' '0.61144102';  ...
'-0.0098724291' '0.6111865';  ...
'-0.012305407' '0.61093032';  ...
'-0.014738384' '0.61067253';  ...
'-0.017171361' '0.61041307';  ...
'-0.019604336' '0.61015207';  ...
'-0.022037312' '0.60988939';  ...
'-0.02447029' '0.60962504';  ...
'-0.026903268' '0.60935903';  ...
'-0.029336244' '0.60909134';  ...
'-0.03176922' '0.60882199';  ...
'-0.034202196' '0.60855097';  ...
'-0.036635175' '0.60827827';  ...
'-0.039068151' '0.6080038';  ...
'-0.041501127' '0.60772771';  ...
'-0.043934107' '0.60744989';  ...
'-0.046367079' '0.60717034';  ...
'-0.048800059' '0.60688907';  ...
'-0.051233035' '0.60660607';  ...
'-0.05366601' '0.60632133';  ...
'-0.056098986' '0.60603482';  ...
'-0.058531966' '0.60574657';  ...
'-0.060964942' '0.60545659';  ...
'-0.063397922' '0.60516477';  ...
'-0.065830894' '0.60487127';  ...
'-0.068263873' '0.60457599';  ...
'-0.070696853' '0.60427886';  ...
'-0.073129825' '0.60398';  ...
'-0.075562797' '0.6036793';  ...
'-0.077995777' '0.60337675';  ...
'-0.080428757' '0.60307246';  ...
'-0.082861736' '0.60276634';  ...
'-0.085294709' '0.60245842';  ...
'-0.087727681' '0.60214865';  ...
'-0.09016066' '0.60183704';  ...
'-0.09259364' '0.60152364';  ...
'-0.09502662' '0.60120839';  ...
'-0.097459592' '0.60089123';  ...
'-0.099892572' '0.60057229';  ...
'-0.10232554' '0.60025144';  ...
'-0.10475852' '0.59992874';  ...
'-0.1071915' '0.59960419';  ...
'-0.10962448' '0.59927779';  ...
'-0.11205745' '0.59894943';  ...
'-0.11449043' '0.59861928';  ...
'-0.11692341' '0.59828722';  ...
'-0.11935638' '0.5979532';  ...
'-0.12178936' '0.59761733';  ...
'-0.12422234' '0.59727961';  ...
'-0.12665531' '0.59693992';  ...
'-0.1290883' '0.59659839';  ...
'-0.13152127' '0.59625489';  ...
'-0.13395426' '0.59590954';  ...
'-0.13638721' '0.59556222';  ...
'-0.13882019' '0.595213';  ...
'-0.14125317' '0.59486187';  ...
'-0.14368615' '0.59450877';  ...
'-0.14611913' '0.59415376';  ...
'-0.1485521' '0.59379679';  ...
'-0.15098509' '0.59343791';  ...
'-0.15341806' '0.59307712';  ...
'-0.15585104' '0.59271431';  ...
'-0.15828401' '0.59234965';  ...
'-0.16071698' '0.5919829';  ...
'-0.16314997' '0.59161437';  ...
'-0.16558294' '0.59124374';  ...
'-0.16801591' '0.59087121';  ...
'-0.1704489' '0.59049672';  ...
'-0.17288187' '0.59012026';  ...
'-0.17531486' '0.58974189';  ...
'-0.17774783' '0.58936149';  ...
'-0.1801808' '0.58897918';  ...
'-0.18261378' '0.58859479';  ...
'-0.18504675' '0.58820856';  ...
'-0.18747973' '0.58782023';  ...
'-0.18991271' '0.58743';  ...
'-0.19234569' '0.5870378';  ...
'-0.19477867' '0.58664364';  ...
'-0.19721164' '0.5862475';  ...
'-0.19964463' '0.58584934';  ...
'-0.20207758' '0.58544922';  ...
'-0.20451057' '0.58504713';  ...
'-0.20694354' '0.58464301';  ...
'-0.20937653' '0.58423692';  ...
'-0.2118095' '0.58382887';  ...
'-0.21424247' '0.58341885';  ...
'-0.21667546' '0.5830068';  ...
'-0.21910843' '0.58259279';  ...
'-0.22154142' '0.58217686';  ...
'-0.22397439' '0.58175886';  ...
'-0.22640735' '0.58133888';  ...
'-0.22884034' '0.58091694';  ...
'-0.23127331' '0.58049303';  ...
'-0.2337063' '0.58006704';  ...
'-0.23613927' '0.57963914';  ...
'-0.23857224' '0.57920933';  ...
'-0.24100523' '0.57877737';  ...
'-0.2434382' '0.57834351';  ...
'-0.24587117' '0.57790774';  ...
'-0.24830416' '0.57746989';  ...
'-0.25073713' '0.57703006';  ...
'-0.2531701' '0.57658833';  ...
'-0.25560308' '0.57614458';  ...
'-0.25803605' '0.57569879';  ...
'-0.26046905' '0.5752511';  ...
'-0.26290199' '0.57480139';  ...
'-0.26533499' '0.57434976';  ...
'-0.26776797' '0.57389617';  ...
'-0.27020094' '0.57344049';  ...
'-0.27263391' '0.57298303';  ...
'-0.27506691' '0.57252347';  ...
'-0.27749988' '0.5720619';  ...
'-0.27993283' '0.57159847';  ...
'-0.28236583' '0.57113308';  ...
'-0.2847988' '0.57066572';  ...
'-0.28723177' '0.57019639';  ...
'-0.28966475' '0.5697251';  ...
'-0.29209775' '0.56925189';  ...
'-0.29453072' '0.56877667';  ...
'-0.29696369' '0.56829953';  ...
'-0.29939666' '0.56782049';  ...
'-0.30182964' '0.56733948';  ...
'-0.30426261' '0.56685656';  ...
'-0.30669558' '0.56637174';  ...
'-0.30912858' '0.56588489';  ...
'-0.31156155' '0.56539613';  ...
'-0.31399453' '0.56490552';  ...
'-0.3164275' '0.56441295';  ...
'-0.3188605' '0.56391841';  ...
'-0.32129344' '0.56342202';  ...
'-0.32372642' '0.56292379';  ...
'-0.32615942' '0.56242353';  ...
'-0.32859236' '0.56192148';  ...
'-0.33102536' '0.5614174';  ...
'-0.33345833' '0.56091154';  ...
'-0.33589134' '0.56040376';  ...
'-0.33832428' '0.55989408';  ...
'-0.34075728' '0.55938256';  ...
'-0.34319025' '0.55886918';  ...
'-0.3456232' '0.55835384';  ...
'-0.3480562' '0.55783665';  ...
'-0.35048917' '0.55731767';  ...
'-0.35292217' '0.55679679';  ...
'-0.35535511' '0.55627406';  ...
'-0.35778812' '0.55574954';  ...
'-0.36022109' '0.55522311';  ...
'-0.36265406' '0.55469483';  ...
'-0.36508703' '0.55416477';  ...
'-0.36752' '0.55363286';  ...
'-0.36995298' '0.55309916';  ...
'-0.37238595' '0.55256361';  ...
'-0.37481895' '0.55202627';  ...
'-0.37725192' '0.55148709';  ...
'-0.3796849' '0.55094618';  ...
'-0.38211787' '0.55040342';  ...
'-0.38455087' '0.54985893';  ...
'-0.38698381' '0.54931259';  ...
'-0.38941681' '0.54876447';  ...
'-0.39184979' '0.54821467';  ...
'-0.39428276' '0.54766309';  ...
'-0.39671573' '0.54710972';  ...
'-0.3991487' '0.54655457';  ...
'-0.4015817' '0.54599768';  ...
'-0.40401465' '0.54543912';  ...
'-0.40644765' '0.54487884';  ...
'-0.40888062' '0.54431677';  ...
'-0.41131362' '0.54375297';  ...
'-0.41374657' '0.54318756';  ...
'-0.41617954' '0.54262036';  ...
'-0.41861254' '0.54205149';  ...
'-0.42104548' '0.54148096';  ...
'-0.42347848' '0.54090869';  ...
'-0.42591146' '0.54033476';  ...
'-0.42834443' '0.53975916';  ...
'-0.4307774' '0.53918195';  ...
'-0.4332104' '0.53860307';  ...
'-0.43564337' '0.53802258';  ...
'-0.43807632' '0.53744036';  ...
'-0.44050932' '0.53685653';  ...
'-0.44294229' '0.53627115';  ...
'-0.44537526' '0.53568405';  ...
'-0.44780824' '0.53509539';  ...
'-0.45024124' '0.53450519';  ...
'-0.45267421' '0.53391331';  ...
'-0.45510718' '0.53331989';  ...
'-0.45754015' '0.53272492';  ...
'-0.45997313' '0.53212833';  ...
'-0.4624061' '0.53153026'});
model.func('int4').set('funcname', 'CMS_Test');
model.func('int4').set('interp', 'cubicspline');
model.func('int4').set('extrap', 'linear');
model.func('int4').setIndex('argunit', 'mm', 0);
model.func('int4').setIndex('fununit', 'mm/N', 0);

model.geom('geom1').lengthUnit('mm');
model.geom('geom1').create('imp1', 'Import');
model.geom('geom1').feature('imp1').set('type', 'native');
model.geom('geom1').feature('imp1').set('filename', 'ow_microspeaker_axisymmetric.mphbin');
model.geom('geom1').feature('imp1').importData;

model.variable.create('var1');
model.variable('var1').model('comp1');

model.geom('geom1').run;

% To import content from file, use:
% model.variable('var1').loadFile('FILENAME');
model.variable('var1').set('coil_location_r', '(r>4.5[mm])*(r<4.5[mm]+0.113068969[mm])');
model.variable('var1').set('coil_location_z', '(z>(dest(z)-1.48[mm]/2))*(z<(dest(z)+1.48[mm]/2))');
model.variable('var1').set('BL_integrand', 'mf.Br*N0*2*pi*r/(0.16734 [mm^2])');

model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl('intop1').set('axisym', true);
model.cpl('intop1').label('Area to integrate BL');
model.cpl('intop1').set('opname', 'int_BL');
model.cpl('intop1').selection.set([1 2]);
model.cpl('intop1').set('intorder', 12);
model.cpl('intop1').set('axisym', false);

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('rho', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('cs', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an1', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an2', 'Analytic');
model.material('mat1').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat1').propertyGroup.create('NonlinearModel', 'Nonlinear model');
model.material('mat1').propertyGroup.create('idealGas', 'Ideal gas');
model.material('mat1').propertyGroup('idealGas').func.create('Cp', 'Piecewise');
model.material('mat1').label('Air');
model.material('mat1').set('family', 'air');
model.material('mat1').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('eta').set('pieces', {'200.0' '1600.0' '-8.38278E-7+8.35717342E-8*T^1-7.69429583E-11*T^2+4.6437266E-14*T^3-1.06585607E-17*T^4'});
model.material('mat1').propertyGroup('def').func('eta').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat1').propertyGroup('def').func('Cp').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('def').func('rho').set('expr', 'pA*0.02897/R_const[K*mol/J]/T');
model.material('mat1').propertyGroup('def').func('rho').set('args', {'pA' 'T'});
model.material('mat1').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.material('mat1').propertyGroup('def').func('rho').set('argunit', {'Pa' 'K'});
model.material('mat1').propertyGroup('def').func('rho').set('plotaxis', {'off' 'on'});
model.material('mat1').propertyGroup('def').func('rho').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat1').propertyGroup('def').func('rho').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '293.15'});
model.material('mat1').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('k').set('pieces', {'200.0' '1600.0' '-0.00227583562+1.15480022E-4*T^1-7.90252856E-8*T^2+4.11702505E-11*T^3-7.43864331E-15*T^4'});
model.material('mat1').propertyGroup('def').func('k').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.material('mat1').propertyGroup('def').func('cs').set('expr', 'sqrt(1.4*R_const[K*mol/J]/0.02897*T)');
model.material('mat1').propertyGroup('def').func('cs').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('cs').set('fununit', 'm/s');
model.material('mat1').propertyGroup('def').func('cs').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('cs').set('plotfixedvalue', {'273.15'});
model.material('mat1').propertyGroup('def').func('cs').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.material('mat1').propertyGroup('def').func('an1').set('expr', '-1/rho(pA,T)*d(rho(pA,T),T)');
model.material('mat1').propertyGroup('def').func('an1').set('args', {'pA' 'T'});
model.material('mat1').propertyGroup('def').func('an1').set('fununit', '1/K');
model.material('mat1').propertyGroup('def').func('an1').set('argunit', {'Pa' 'K'});
model.material('mat1').propertyGroup('def').func('an1').set('plotaxis', {'off' 'on'});
model.material('mat1').propertyGroup('def').func('an1').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat1').propertyGroup('def').func('an1').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an2').set('funcname', 'muB');
model.material('mat1').propertyGroup('def').func('an2').set('expr', '0.6*eta(T)');
model.material('mat1').propertyGroup('def').func('an2').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('an2').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('an2').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an2').set('plotfixedvalue', {'200'});
model.material('mat1').propertyGroup('def').func('an2').set('plotargs', {'T' '200' '1600'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.material('mat1').propertyGroup('def').set('molarmass', '');
model.material('mat1').propertyGroup('def').set('bulkviscosity', '');
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)'});
model.material('mat1').propertyGroup('def').set('molarmass', '0.02897[kg/mol]');
model.material('mat1').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.material('mat1').propertyGroup('def').set('ratioofspecificheat', '1.4');
model.material('mat1').propertyGroup('def').set('electricconductivity', {'0[S/m]' '0' '0' '0' '0[S/m]' '0' '0' '0' '0[S/m]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.material('mat1').propertyGroup('def').set('density', 'rho(pA,T)');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.material('mat1').propertyGroup('def').set('soundspeed', 'cs(T)');
model.material('mat1').propertyGroup('def').addInput('temperature');
model.material('mat1').propertyGroup('def').addInput('pressure');
model.material('mat1').propertyGroup('RefractiveIndex').set('n', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('NonlinearModel').set('BA', 'def.gamma-1');
model.material('mat1').propertyGroup('idealGas').func('Cp').label('Piecewise 2');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat1').propertyGroup('idealGas').func('Cp').set('argunit', 'K');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('idealGas').set('Rs', 'R_const/Mn');
model.material('mat1').propertyGroup('idealGas').set('heatcapacity', 'Cp(T)');
model.material('mat1').propertyGroup('idealGas').set('ratioofspecificheat', '1.4');
model.material('mat1').propertyGroup('idealGas').set('molarmass', '0.02897');
model.material('mat1').propertyGroup('idealGas').addInput('temperature');
model.material('mat1').propertyGroup('idealGas').addInput('pressure');
model.material('mat1').materialType('nonSolid');
model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').propertyGroup.create('BHCurve', 'B-H Curve');
model.material('mat2').propertyGroup('BHCurve').func.create('BH', 'Interpolation');
model.material('mat2').propertyGroup.create('EffectiveBHCurve', 'Effective B-H Curve');
model.material('mat2').propertyGroup('EffectiveBHCurve').func.create('BHeff', 'Interpolation');
model.material('mat2').label('Soft Iron (With Losses)');
model.material('mat2').set('family', 'iron');
model.material('mat2').propertyGroup('def').set('electricconductivity', {'1.12e7[S/m]' '0' '0' '0' '1.12e7[S/m]' '0' '0' '0' '1.12e7[S/m]'});
model.material('mat2').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('BHCurve').label('B-H Curve');
model.material('mat2').propertyGroup('BHCurve').func('BH').label('Interpolation 1');
model.material('mat2').propertyGroup('BHCurve').func('BH').set('table', {'0' '0';  ...
'663.146' '1';  ...
'1067.5' '1.1';  ...
'1705.23' '1.2';  ...
'2463.11' '1.3';  ...
'3841.67' '1.4';  ...
'5425.74' '1.5';  ...
'7957.75' '1.6';  ...
'12298.3' '1.7';  ...
'20462.8' '1.8';  ...
'32169.6' '1.9';  ...
'61213.4' '2';  ...
'111408' '2.1';  ...
'188487.757' '2.2';  ...
'267930.364' '2.3';  ...
'347507.836' '2.4'});
model.material('mat2').propertyGroup('BHCurve').func('BH').set('extrap', 'linear');
model.material('mat2').propertyGroup('BHCurve').func('BH').set('fununit', {'T'});
model.material('mat2').propertyGroup('BHCurve').func('BH').set('argunit', {'A/m'});
model.material('mat2').propertyGroup('BHCurve').func('BH').set('defineinv', true);
model.material('mat2').propertyGroup('BHCurve').func('BH').set('defineprimfun', true);
model.material('mat2').propertyGroup('BHCurve').set('normB', 'BH(normHin)');
model.material('mat2').propertyGroup('BHCurve').set('normH', 'BH_inv(normBin)');
model.material('mat2').propertyGroup('BHCurve').set('Wpm', 'BH_prim(normHin)');
model.material('mat2').propertyGroup('BHCurve').descr('normHin', 'Magnetic field norm');
model.material('mat2').propertyGroup('BHCurve').descr('normBin', 'Magnetic flux density norm');
model.material('mat2').propertyGroup('BHCurve').addInput('magneticfield');
model.material('mat2').propertyGroup('BHCurve').addInput('magneticfluxdensity');
model.material('mat2').propertyGroup('EffectiveBHCurve').label('Effective B-H Curve');
model.material('mat2').propertyGroup('EffectiveBHCurve').func('BHeff').label('Interpolation 1');
model.material('mat2').propertyGroup('EffectiveBHCurve').func('BHeff').set('table', {'0' '0';  ...
'663.146' '1.000000051691021';  ...
'1067.5' '1.4936495124126294';  ...
'1705.23' '1.9415328461315795';  ...
'2463.11' '2.257765669366018';  ...
'3841.67' '2.609980642431287';  ...
'5425.74' '2.8664452090837504';  ...
'7957.75' '3.1441438097176118';  ...
'12298.3' '3.448538051654125';  ...
'20462.8' '3.7816711973679054';  ...
'32169.6' '4.058345590113038';  ...
'61213.4' '4.420646552950275';  ...
'111408' '4.721274089545955';  ...
'188487.757' '4.972148140718701';  ...
'267930.364' '5.145510860855953';  ...
'347507.836' '5.245510861426532'});
model.material('mat2').propertyGroup('EffectiveBHCurve').func('BHeff').set('extrap', 'linear');
model.material('mat2').propertyGroup('EffectiveBHCurve').func('BHeff').set('fununit', {'T'});
model.material('mat2').propertyGroup('EffectiveBHCurve').func('BHeff').set('argunit', {'A/m'});
model.material('mat2').propertyGroup('EffectiveBHCurve').func('BHeff').set('defineinv', true);
model.material('mat2').propertyGroup('EffectiveBHCurve').set('normBeff', 'BHeff(normHeffin)');
model.material('mat2').propertyGroup('EffectiveBHCurve').set('normHeff', 'BHeff_inv(normBeffin)');
model.material('mat2').propertyGroup('EffectiveBHCurve').descr('normHeffin', 'Effective magnetic field norm');
model.material('mat2').propertyGroup('EffectiveBHCurve').descr('normBeffin', 'Effective magnetic flux density norm');
model.material('mat2').propertyGroup('EffectiveBHCurve').addInput('magneticfield');
model.material('mat2').propertyGroup('EffectiveBHCurve').addInput('magneticfluxdensity');
model.material('mat1').selection.set([1 2]);
model.material('mat2').selection.set([3 5 7]);
model.material.create('mat3', 'Common', 'comp1');
model.material('mat3').selection.set([4 6]);
model.material('mat3').label('Magnet');
model.material('mat3').propertyGroup.create('RemanentFluxDensity', 'Remanent_flux_density');
model.material('mat3').propertyGroup('RemanentFluxDensity').set('murec', {});
model.material('mat3').propertyGroup('RemanentFluxDensity').set('normBr', {'B0'});
model.material('mat3').propertyGroup('def').set('relpermeability', {'1'});
model.material('mat3').propertyGroup('def').set('electricconductivity', {'0'});
model.material('mat3').propertyGroup('def').set('relpermittivity', {'1'});

model.physics('mf').create('coil1', 'Coil', 2);
model.physics('mf').feature('coil1').selection.set([2]);
model.physics('mf').feature('coil1').set('ConductorModel', 'Multi');
model.physics('mf').feature('coil1').set('CoilExcitation', 'Voltage');
model.physics('mf').feature('coil1').set('VCoil', 'linper(V0)');
model.physics('mf').feature('coil1').set('N', 'N0');
model.physics('mf').feature('coil1').set('sigmaCoil', 'sigma_wire');
model.physics('mf').feature('coil1').set('AreaFrom', 'Diameter');
model.physics('mf').feature('coil1').set('coilWindDiameter', 'd_wire');
model.physics('mf').create('als1', 'AmperesLawSolid', 2);
model.physics('mf').feature('als1').label(['Amp' native2unicode(hex2dec({'00' 'e8'}), 'unicode') 're''s Law First Magnet']);
model.physics('mf').feature('als1').selection.set([6]);
model.physics('mf').feature('als1').set('ConstitutiveRelationBH', 'RemanentFluxDensity');
model.physics('mf').feature('als1').set('e_crel_BH_RemanentFluxDensity', [0 0 1]);
model.physics('mf').create('als2', 'AmperesLawSolid', 2);
model.physics('mf').feature('als2').label(['Amp' native2unicode(hex2dec({'00' 'e8'}), 'unicode') 're''s Law Second Magnet']);
model.physics('mf').feature('als2').selection.set([4]);
model.physics('mf').feature('als2').set('ConstitutiveRelationBH', 'RemanentFluxDensity');
model.physics('mf').feature('als2').set('e_crel_BH_RemanentFluxDensity', [0 0 -1]);
model.physics('mf').create('als3', 'AmperesLawSolid', 2);
model.physics('mf').feature('als3').label(['Amp' native2unicode(hex2dec({'00' 'e8'}), 'unicode') 're''s Law Soft Iron']);
model.physics('mf').feature('als3').selection.set([3 5 7]);
model.physics('mf').feature('als3').set('ConstitutiveRelationBH', 'BHCurve');
model.physics('mf').create('tg1', 'ThinLowPermeabilityGap', 1);
model.physics('mf').feature('tg1').selection.set([13 15 21 23]);
model.physics('mf').feature('tg1').set('mur_mat', 'userdef');
model.physics('mf').feature('tg1').set('ds', 'th_gap');

model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('size').set('custom', true);
model.mesh('mesh1').feature('size').set('hmax', 1);
model.mesh('mesh1').feature('size').set('hgrad', 1.1);
model.mesh('mesh1').run('size');
model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('map1').selection.set([4 6]);
model.mesh('mesh1').feature('map1').create('size1', 'Size');
model.mesh('mesh1').feature('map1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('map1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('map1').feature('size1').set('hmax', 0.1);
model.mesh('mesh1').run('map1');
model.mesh('mesh1').feature('ftri1').create('size1', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size1').selection.geom('geom1', 1);
model.mesh('mesh1').feature('ftri1').feature('size1').selection.set([18 19 22]);
model.mesh('mesh1').feature('ftri1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('ftri1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 0.02);
model.mesh('mesh1').run('ftri1');
model.mesh('mesh1').create('bl1', 'BndLayer');
model.mesh('mesh1').feature('bl1').create('blp', 'BndLayerProp');
model.mesh('mesh1').feature('bl1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('bl1').selection.set([3 5 7]);
model.mesh('mesh1').feature('bl1').feature('blp').selection.set([11 13 15 16 18 19 21 22 23 24 25 27 28]);
model.mesh('mesh1').feature('bl1').feature('blp').set('inittype', 'blhmin');
model.mesh('mesh1').feature('bl1').feature('blp').set('blhmin', 0.005);
model.mesh('mesh1').run;

model.study('std1').label('Study 1 - Axisymmetric Magnetic Analysis');
model.study('std1').feature('frlin').set('plist', '10^{range(log10(100),1/10,log10(20000))}');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'frlin');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('initsoluse', 'sol2');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'frlin');
model.sol('sol1').create('s2', 'Stationary');
model.sol('sol1').feature('s2').create('p1', 'Parametric');
model.sol('sol1').feature('s2').feature.remove('pDef');
model.sol('sol1').feature('s2').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s2').feature('p1').set('plistarr', {'10^{range(log10(100),1/10,log10(20000))}'});
model.sol('sol1').feature('s2').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s2').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s2').feature('p1').set('preusesol', 'no');
model.sol('sol1').feature('s2').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s2').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s2').feature('p1').set('plotgroup', 'Default');
model.sol('sol1').feature('s2').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s2').feature('p1').set('probes', {});
model.sol('sol1').feature('s2').feature('p1').set('control', 'frlin');
model.sol('sol1').feature('s2').set('nonlin', 'linper');
model.sol('sol1').feature('s2').set('storelinpoint', true);
model.sol('sol1').feature('s2').set('linpsolnum', 'all');
model.sol('sol1').feature('s2').set('control', 'frlin');
model.sol('sol1').feature('s2').set('linpmethod', 'sol');
model.sol('sol1').feature('s2').set('linpsol', 'sol1');
model.sol('sol1').feature('s2').set('linpsoluse', 'sol2');
model.sol('sol1').feature('s2').set('control', 'frlin');
model.sol('sol1').feature('s2').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s2').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('s2').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s2').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s2').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s2').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('s2').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s2').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s2').feature.remove('fcDef');
model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').label('Magnetic Flux Density Norm (mf)');
model.result('pg1').set('dataisaxisym', 'off');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').set('showlegendsmaxmin', true);
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 24, 0);
model.result('pg1').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom6/pdef1/pcond2/pcond2/pg1');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('solutionparams', 'parent');
model.result('pg1').feature('surf1').set('evalmethodactive', 'off');
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').feature('surf1').set('colortabletrans', 'nonlinear');
model.result('pg1').feature('surf1').set('colorcalibration', -0.8);
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('evalmethodactive', 'off');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('evalmethodactive', 'off');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('evalmethodactive', 'off');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('evalmethodactive', 'off');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result('pg1').feature.create('str1', 'Streamline');
model.result('pg1').feature('str1').set('showsolutionparams', 'on');
model.result('pg1').feature('str1').set('solutionparams', 'parent');
model.result('pg1').feature('str1').set('evalmethodactive', 'off');
model.result('pg1').feature('str1').set('titletype', 'none');
model.result('pg1').feature('str1').set('posmethod', 'uniform');
model.result('pg1').feature('str1').set('udist', 0.03);
model.result('pg1').feature('str1').set('maxlen', 0.4);
model.result('pg1').feature('str1').set('maxtime', Inf);
model.result('pg1').feature('str1').set('inheritcolor', false);
model.result('pg1').feature('str1').set('showsolutionparams', 'on');
model.result('pg1').feature('str1').set('evalmethodactive', 'off');
model.result('pg1').feature('str1').set('maxtime', Inf);
model.result('pg1').feature('str1').set('showsolutionparams', 'on');
model.result('pg1').feature('str1').set('evalmethodactive', 'off');
model.result('pg1').feature('str1').set('maxtime', Inf);
model.result('pg1').feature('str1').set('showsolutionparams', 'on');
model.result('pg1').feature('str1').set('evalmethodactive', 'off');
model.result('pg1').feature('str1').set('maxtime', Inf);
model.result('pg1').feature('str1').set('showsolutionparams', 'on');
model.result('pg1').feature('str1').set('evalmethodactive', 'off');
model.result('pg1').feature('str1').set('maxtime', Inf);
model.result('pg1').feature('str1').set('data', 'parent');
model.result('pg1').feature('str1').selection.geom('geom1', 1);
model.result('pg1').feature('str1').selection.set([1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28]);
model.result('pg1').feature('str1').set('inheritplot', 'surf1');
model.result('pg1').feature('str1').feature.create('col1', 'Color');
model.result('pg1').feature('str1').feature('col1').set('evalmethodactive', 'off');
model.result('pg1').feature('str1').feature('col1').set('colortable', 'PrismDark');
model.result('pg1').feature('str1').feature('col1').set('colorlegend', false);
model.result('pg1').feature('str1').feature('col1').set('colortabletrans', 'nonlinear');
model.result('pg1').feature('str1').feature('col1').set('colorcalibration', -0.8);
model.result('pg1').feature('str1').feature.create('filt1', 'Filter');
model.result('pg1').feature('str1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result('pg1').feature.create('con1', 'Contour');
model.result('pg1').feature('con1').set('showsolutionparams', 'on');
model.result('pg1').feature('con1').set('solutionparams', 'parent');
model.result('pg1').feature('con1').set('expr', 'r*mf.Aphi');
model.result('pg1').feature('con1').set('evalmethodactive', 'off');
model.result('pg1').feature('con1').set('titletype', 'none');
model.result('pg1').feature('con1').set('number', 10);
model.result('pg1').feature('con1').set('levelrounding', false);
model.result('pg1').feature('con1').set('coloring', 'uniform');
model.result('pg1').feature('con1').set('colorlegend', false);
model.result('pg1').feature('con1').set('color', 'custom');
model.result('pg1').feature('con1').set('customcolor', [0.3764705955982208 0.3764705955982208 0.3764705955982208]);
model.result('pg1').feature('con1').set('resolution', 'fine');
model.result('pg1').feature('con1').set('inheritcolor', false);
model.result('pg1').feature('con1').set('showsolutionparams', 'on');
model.result('pg1').feature('con1').set('evalmethodactive', 'off');
model.result('pg1').feature('con1').set('showsolutionparams', 'on');
model.result('pg1').feature('con1').set('evalmethodactive', 'off');
model.result('pg1').feature('con1').set('showsolutionparams', 'on');
model.result('pg1').feature('con1').set('evalmethodactive', 'off');
model.result('pg1').feature('con1').set('showsolutionparams', 'on');
model.result('pg1').feature('con1').set('evalmethodactive', 'off');
model.result('pg1').feature('con1').set('data', 'parent');
model.result('pg1').feature('con1').set('inheritplot', 'surf1');
model.result('pg1').feature('con1').feature.create('filt1', 'Filter');
model.result('pg1').feature('con1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result.dataset.create('rev1', 'Revolve2D');
model.result.dataset('rev1').set('data', 'none');
model.result.dataset('rev1').set('startangle', -90);
model.result.dataset('rev1').set('revangle', 225);
model.result.dataset('rev1').set('data', 'dset1');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Magnetic Flux Density Norm, Revolved Geometry (mf)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('showlegendsmaxmin', true);
model.result('pg2').set('data', 'rev1');
model.result('pg2').setIndex('looplevel', 24, 0);
model.result('pg2').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom6/pdef1/pcond2/pcond3/pg1');
model.result('pg2').feature.create('vol1', 'Volume');
model.result('pg2').feature('vol1').set('showsolutionparams', 'on');
model.result('pg2').feature('vol1').set('solutionparams', 'parent');
model.result('pg2').feature('vol1').set('evalmethodactive', 'off');
model.result('pg2').feature('vol1').set('colortable', 'Prism');
model.result('pg2').feature('vol1').set('colortabletrans', 'nonlinear');
model.result('pg2').feature('vol1').set('colorcalibration', -0.8);
model.result('pg2').feature('vol1').set('showsolutionparams', 'on');
model.result('pg2').feature('vol1').set('evalmethodactive', 'off');
model.result('pg2').feature('vol1').set('showsolutionparams', 'on');
model.result('pg2').feature('vol1').set('evalmethodactive', 'off');
model.result('pg2').feature('vol1').set('showsolutionparams', 'on');
model.result('pg2').feature('vol1').set('evalmethodactive', 'off');
model.result('pg2').feature('vol1').set('showsolutionparams', 'on');
model.result('pg2').feature('vol1').set('evalmethodactive', 'off');
model.result('pg2').feature('vol1').set('data', 'parent');
model.result('pg2').feature.create('con1', 'Contour');
model.result('pg2').feature('con1').set('showsolutionparams', 'on');
model.result('pg2').feature('con1').set('solutionparams', 'parent');
model.result('pg2').feature('con1').set('expr', 'r*mf.Aphi');
model.result('pg2').feature('con1').set('evalmethodactive', 'off');
model.result('pg2').feature('con1').set('titletype', 'none');
model.result('pg2').feature('con1').set('number', 10);
model.result('pg2').feature('con1').set('levelrounding', false);
model.result('pg2').feature('con1').set('coloring', 'uniform');
model.result('pg2').feature('con1').set('colorlegend', false);
model.result('pg2').feature('con1').set('color', 'custom');
model.result('pg2').feature('con1').set('customcolor', [0.3764705955982208 0.3764705955982208 0.3764705955982208]);
model.result('pg2').feature('con1').set('resolution', 'fine');
model.result('pg2').feature('con1').set('inheritcolor', false);
model.result('pg2').feature('con1').set('showsolutionparams', 'on');
model.result('pg2').feature('con1').set('evalmethodactive', 'off');
model.result('pg2').feature('con1').set('showsolutionparams', 'on');
model.result('pg2').feature('con1').set('evalmethodactive', 'off');
model.result('pg2').feature('con1').set('showsolutionparams', 'on');
model.result('pg2').feature('con1').set('evalmethodactive', 'off');
model.result('pg2').feature('con1').set('showsolutionparams', 'on');
model.result('pg2').feature('con1').set('evalmethodactive', 'off');
model.result('pg2').feature('con1').set('data', 'parent');
model.result('pg2').feature('con1').set('inheritplot', 'vol1');
model.result('pg2').feature('con1').feature.create('filt1', 'Filter');
model.result('pg2').feature('con1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result('pg2').feature('con1').feature('filt1').set('shownodespec', 'on');
model.result('pg1').run;
model.result.dataset.create('cln1', 'CutLine2D');
model.result.dataset('cln1').label('Coil Displacement');
model.result.dataset('cln1').set('data', 'dset2');
model.result.dataset('cln1').setIndex('genpoints', '(4.5+4.61307)/2', 0, 0);
model.result.dataset('cln1').setIndex('genpoints', '(-1.53-0.05)/2-0.5', 0, 1);
model.result.dataset('cln1').setIndex('genpoints', '(4.5+4.61307)/2', 1, 0);
model.result.dataset('cln1').setIndex('genpoints', '(-1.53-0.05)/2+0.5', 1, 1);
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('Coil properties from COMSOL');
model.result('pg3').set('twoyaxes', true);
model.result('pg3').set('xlog', true);
model.result('pg3').set('ylogsec', true);
model.result('pg3').set('legendpos', 'upperleft');
model.result('pg3').create('glob1', 'Global');
model.result('pg3').feature('glob1').set('markerpos', 'datapoints');
model.result('pg3').feature('glob1').set('linewidth', 'preference');
model.result('pg3').feature('glob1').label('Resistance');
model.result('pg3').feature('glob1').setIndex('expr', 'real(mf.VCoil_1/mf.ICoil_1)', 0);
model.result('pg3').feature('glob1').setIndex('unit', ['ohm' ], 0);
model.result('pg3').feature('glob1').setIndex('descr', 'Resistance', 0);
model.result('pg3').run;
model.result('pg3').create('glob2', 'Global');
model.result('pg3').feature('glob2').set('markerpos', 'datapoints');
model.result('pg3').feature('glob2').set('linewidth', 'preference');
model.result('pg3').feature('glob2').label('Reactance');
model.result('pg3').feature('glob2').set('plotonsecyaxis', true);
model.result('pg3').feature('glob2').setIndex('expr', 'imag(mf.VCoil_1/mf.ICoil_1)', 0);
model.result('pg3').feature('glob2').setIndex('unit', ['ohm' ], 0);
model.result('pg3').feature('glob2').setIndex('descr', 'Reactance', 0);
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('BL Factor');
model.result('pg4').set('data', 'cln1');
model.result('pg4').set('xlabelactive', true);
model.result('pg4').set('xlabel', 'Voice coil offset (mm)');
model.result('pg4').set('titletype', 'manual');
model.result('pg4').set('title', 'BL Factor (Wb/m)');
model.result('pg4').set('axislimits', true);
model.result('pg4').set('xmin', -0.5);
model.result('pg4').set('xmax', 0.5);
model.result('pg4').set('ymin', 0);
model.result('pg4').set('ymax', 0.85);
model.result('pg4').set('legendpos', 'lowerright');
model.result('pg4').create('lngr1', 'LineGraph');
model.result('pg4').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg4').feature('lngr1').set('linewidth', 'preference');
model.result('pg4').feature('lngr1').label('BL from test');
model.result('pg4').feature('lngr1').set('expr', 'BL_Test(z-(-1.53[mm]-0.05[mm])/2)');
model.result('pg4').feature('lngr1').set('descractive', true);
model.result('pg4').feature('lngr1').set('descr', 'BL Factor');
model.result('pg4').feature('lngr1').set('xdata', 'expr');
model.result('pg4').feature('lngr1').set('xdataexpr', 'z-(-1.53[mm]-0.05[mm])/2');
model.result('pg4').feature('lngr1').set('xdatadescractive', true);
model.result('pg4').feature('lngr1').set('xdatadescr', 'Coil Offset');
model.result('pg4').feature('lngr1').set('linecolor', 'blue');
model.result('pg4').feature('lngr1').set('legend', true);
model.result('pg4').feature('lngr1').set('autoplotlabel', true);
model.result('pg4').feature('lngr1').set('autosolution', false);
model.result('pg4').run;
model.result('pg4').create('lngr2', 'LineGraph');
model.result('pg4').feature('lngr2').set('markerpos', 'datapoints');
model.result('pg4').feature('lngr2').set('linewidth', 'preference');
model.result('pg4').feature('lngr2').label('BL from test (inverted)');
model.result('pg4').feature('lngr2').set('expr', 'BL_Test(z-(-1.53[mm]-0.05[mm])/2)');
model.result('pg4').feature('lngr2').set('descractive', true);
model.result('pg4').feature('lngr2').set('descr', 'BL Factor');
model.result('pg4').feature('lngr2').set('xdata', 'expr');
model.result('pg4').feature('lngr2').set('xdataexpr', '-(z-(-1.53[mm]-0.05[mm])/2)');
model.result('pg4').feature('lngr2').set('xdatadescractive', true);
model.result('pg4').feature('lngr2').set('xdatadescr', 'Coil Offset');
model.result('pg4').feature('lngr2').set('linestyle', 'dotted');
model.result('pg4').feature('lngr2').set('linecolor', 'blue');
model.result('pg4').run;
model.result('pg4').create('lngr3', 'LineGraph');
model.result('pg4').feature('lngr3').set('markerpos', 'datapoints');
model.result('pg4').feature('lngr3').set('linewidth', 'preference');
model.result('pg4').feature('lngr3').label('BL from COMSOL');
model.result('pg4').feature('lngr3').set('expr', '-int_BL(BL_integrand*coil_location_r*coil_location_z)');
model.result('pg4').feature('lngr3').set('descractive', true);
model.result('pg4').feature('lngr3').set('descr', 'BL Factor');
model.result('pg4').feature('lngr3').set('xdata', 'expr');
model.result('pg4').feature('lngr3').set('xdataexpr', 'z-(-1.53[mm]-0.05[mm])/2');
model.result('pg4').feature('lngr3').set('xdatadescractive', true);
model.result('pg4').feature('lngr3').set('xdatadescr', 'Coil Offset');
model.result('pg4').feature('lngr3').set('linecolor', 'red');
model.result('pg4').feature('lngr3').set('legend', true);
model.result('pg4').feature('lngr3').set('autoplotlabel', true);
model.result('pg4').feature('lngr3').set('autosolution', false);
model.result('pg4').run;
model.result('pg4').create('lngr4', 'LineGraph');
model.result('pg4').feature('lngr4').set('markerpos', 'datapoints');
model.result('pg4').feature('lngr4').set('linewidth', 'preference');
model.result('pg4').feature('lngr4').label('BL from COMSOL (inverted)');
model.result('pg4').feature('lngr4').set('expr', '-int_BL(BL_integrand*coil_location_r*coil_location_z)');
model.result('pg4').feature('lngr4').set('descractive', true);
model.result('pg4').feature('lngr4').set('descr', 'BL Factor');
model.result('pg4').feature('lngr4').set('titletype', 'none');
model.result('pg4').feature('lngr4').set('xdata', 'expr');
model.result('pg4').feature('lngr4').set('xdataexpr', '-(z-(-1.53[mm]-0.05[mm])/2)');
model.result('pg4').feature('lngr4').set('xdatadescractive', true);
model.result('pg4').feature('lngr4').set('xdatadescr', 'Coil Offset');
model.result('pg4').feature('lngr4').set('linestyle', 'dotted');
model.result('pg4').feature('lngr4').set('linecolor', 'red');
model.result('pg4').run;
model.result('pg1').run;

model.nodeGroup.create('grp1', 'Results');
model.nodeGroup('grp1').set('type', 'plotgroup');
model.nodeGroup('grp1').add('plotgroup', 'pg1');
model.nodeGroup('grp1').add('plotgroup', 'pg2');
model.nodeGroup('grp1').add('plotgroup', 'pg3');
model.nodeGroup('grp1').add('plotgroup', 'pg4');
model.nodeGroup('grp1').label('Postprocessing - Electromagnetic analysis');

model.result.evaluationGroup.create('eg1', 'EvaluationGroup');
model.result.evaluationGroup('eg1').label('Evaluation Group - Coil Properties');
model.result.evaluationGroup('eg1').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'real(mf.VCoil_1/mf.ICoil_1)', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', ['ohm' ], 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Resistance', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'imag(mf.VCoil_1/mf.ICoil_1)', 1);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', ['ohm' ], 1);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Reactance', 1);
model.result.evaluationGroup('eg1').run;
model.result.evaluationGroup.create('eg2', 'EvaluationGroup');
model.result.evaluationGroup('eg2').label('Evaluation Group - BL Factor');
model.result.evaluationGroup('eg2').setIndex('looplevelinput', 'first', 0);
model.result.evaluationGroup('eg2').create('av1', 'AvSurface');
model.result.evaluationGroup('eg2').feature('av1').set('intvolume', true);
model.result.evaluationGroup('eg2').feature('av1').selection.set([2]);
model.result.evaluationGroup('eg2').feature('av1').setIndex('expr', '-mf.Br*N0*2*pi*r', 0);
model.result.evaluationGroup('eg2').feature('av1').setIndex('unit', 'Wb/m', 0);
model.result.evaluationGroup('eg2').feature('av1').setIndex('descr', '', 0);
model.result.evaluationGroup('eg2').feature('av1').set('evalmethod', 'linpoint');
model.result.evaluationGroup('eg2').feature('av1').set('intvolume', false);
model.result.evaluationGroup('eg2').run;

model.func.create('int5', 'Interpolation');
model.func('int5').label('Coil inductance from axisymmetric model');
model.func('int5').set('source', 'resultTable');
model.func('int5').setIndex('funcs', 'Zreal', 0, 0);
model.func('int5').setIndex('funcs', 1, 0, 1);
model.func('int5').setIndex('funcs', 'Zimag', 1, 0);
model.func('int5').setIndex('funcs', 2, 1, 1);
model.func('int5').setIndex('fununit', 'ohm', 0);
model.func('int5').setIndex('fununit', 'ohm', 1);
model.func('int5').setIndex('argunit', 'Hz', 0);

model.param.set('BL', '0.76519[Wb/m]', 'Computed BL Factor');
model.param.set('BL', '0.76519[Wb/m]');
model.param.descr('BL', 'Computed BL Factor');

model.modelNode.create('comp2', true);

model.geom.create('geom2', 3);
model.geom('geom2').model('comp2');

model.mesh.create('mesh2', 'geom2');

model.geom('geom2').lengthUnit('mm');
model.geom('geom2').create('imp1', 'Import');
model.geom('geom2').feature('imp1').set('type', 'native');
model.geom('geom2').feature('imp1').set('filename', 'ow_microspeaker_geometry.mphbin');
model.geom('geom2').feature('imp1').importData;

model.view('view2').set('renderwireframe', true);

model.variable.create('var2');
model.variable('var2').model('comp2');

model.geom('geom2').run;

% To import content from file, use:
% model.variable('var2').loadFile('FILENAME');
model.variable('var2').set('rho_coil', '(m_total-m_diaphragm)/mass_coil.volume', 'Coil effective density');
model.variable('var2').set('v0', 'ave_coil(solid.u_tZ)', 'Coil velocity');
model.variable('var2').set('avedisp', 'ave_coil(w)', 'Average Displacement of the coil');
model.variable('var2').set('m_diaphragm', 'mass_diaphragm.mass', 'Mass of the diaphragm');
model.variable('var2').set('I_int', 'down(acpr.Ix)*nx+down(acpr.Iy)*ny+down(acpr.Iz)*nz', 'Energy traveling through boundary');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp2');
model.selection('sel1').label('Diaphragm triangular mesh');
model.selection('sel1').geom(2);
model.selection('sel1').set([31 32 36 37 38 39 40 41 42 43 44 50 53 55 58 59 60 63 64 65 73 74 77 83 84 85 88 89 90 93 94 95 96 97 98 122 123 124 135 136 143 146 147 148 149 150 151 152 153 154 155 156 162 163 164 171 172 173 174 175 176 177 178 179 225 247 251 252 253 254 257 258 270 271 272 273 274 275 276 277 278 279 280 281 283 285 286 291 292 293 294 295 296 299 300 301 309 310 311 312 313 314 316 317 318 319 320 321 323 324 325 326 327 328 329 330 331 332 333 334]);
model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp2');
model.selection('sel2').label('Diaphragm mapped mesh');
model.selection('sel2').geom(2);
model.selection('sel2').set([22 23 110 117 134 191 204 206 211 262]);
model.selection.create('uni1', 'Union');
model.selection('uni1').model('comp2');
model.selection('uni1').label('Diaphragm');
model.selection('uni1').set('entitydim', 2);
model.selection('uni1').set('input', {'sel1' 'sel2'});
model.selection.create('sel3', 'Explicit');
model.selection('sel3').model('comp2');
model.selection('sel3').label('Coil');
model.selection('sel3').set([12 13]);
model.selection.create('sel4', 'Explicit');
model.selection('sel4').model('comp2');
model.selection('sel4').label('Air');
model.selection('sel4').set([1 2 3 4 5 6 7 8 9 10 11 14 15 16 17 18 19 20 21 22 23 24]);
model.selection.create('sel5', 'Explicit');
model.selection('sel5').model('comp2');
model.selection('sel5').label('PML Top');
model.selection('sel5').set([2]);
model.selection.create('sel6', 'Explicit');
model.selection('sel6').model('comp2');
model.selection('sel6').label('PML Bottom');
model.selection('sel6').set([1]);
model.selection.create('sel7', 'Explicit');
model.selection('sel7').model('comp2');
model.selection('sel7').label('Exterior Field');
model.selection('sel7').geom(2);
model.selection('sel7').set([15 16 189 227]);
model.selection.create('dif1', 'Difference');
model.selection('dif1').model('comp2');
model.selection('dif1').label('Air Without PML');
model.selection('dif1').set('add', {'sel4'});
model.selection('dif1').set('subtract', {'sel5' 'sel6'});
model.selection.create('sel8', 'Explicit');
model.selection('sel8').model('comp2');
model.selection('sel8').label('Inner gap');
model.selection('sel8').set([14 15 19 20]);
model.selection.create('sel9', 'Explicit');
model.selection('sel9').model('comp2');
model.selection('sel9').label('Outer gap');
model.selection('sel9').set([10 11 18 21]);
model.selection.create('sel10', 'Explicit');
model.selection('sel10').model('comp2');
model.selection('sel10').label('Outer channels');
model.selection('sel10').set([5 7 8 17 22 23 24]);

model.massProp.create('mass1', 'MassProperties');
model.massProp('mass1').model('comp2');
model.massProp('mass1').label('Coil Mass');
model.massProp('mass1').set('name', 'mass_coil');
model.massProp('mass1').selection.named('sel3');
model.massProp.create('mass2', 'MassProperties');
model.massProp('mass2').model('comp2');
model.massProp('mass2').label('Diaphragm Mass');
model.massProp('mass2').set('name', 'mass_diaphragm');
model.massProp('mass2').selection.geom('geom2', 2);
model.massProp('mass2').selection.named('uni1');
model.massProp('mass2').set('densitySource', 'fromPhysics');

model.cpl.create('aveop1', 'Average', 'geom2');
model.cpl('aveop1').set('axisym', true);
model.cpl('aveop1').label('Coil Average');
model.cpl('aveop1').set('opname', 'ave_coil');
model.cpl('aveop1').selection.named('sel3');
model.cpl.create('intop2', 'Integration', 'geom2');
model.cpl('intop2').set('axisym', true);
model.cpl('intop2').label('PML Top Integral');
model.cpl('intop2').set('opname', 'int_PML_Top');
model.cpl('intop2').selection.geom('geom2', 2);
model.cpl('intop2').selection.set([15 16 189 227]);
model.cpl.create('intop3', 'Integration', 'geom2');
model.cpl('intop3').set('axisym', true);
model.cpl('intop3').label('PML Bottom Integral');
model.cpl('intop3').set('opname', 'int_PML_Bottom');
model.cpl('intop3').selection.geom('geom2', 2);
model.cpl('intop3').selection.set([11 12 187 220]);

model.material.create('mat4', 'Common', 'comp2');
model.material('mat4').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat4').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat4').propertyGroup('def').func.create('rho', 'Analytic');
model.material('mat4').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat4').propertyGroup('def').func.create('cs', 'Analytic');
model.material('mat4').propertyGroup('def').func.create('an1', 'Analytic');
model.material('mat4').propertyGroup('def').func.create('an2', 'Analytic');
model.material('mat4').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat4').propertyGroup.create('NonlinearModel', 'Nonlinear model');
model.material('mat4').propertyGroup.create('idealGas', 'Ideal gas');
model.material('mat4').propertyGroup('idealGas').func.create('Cp', 'Piecewise');
model.material('mat4').label('Air');
model.material('mat4').set('family', 'air');
model.material('mat4').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat4').propertyGroup('def').func('eta').set('pieces', {'200.0' '1600.0' '-8.38278E-7+8.35717342E-8*T^1-7.69429583E-11*T^2+4.6437266E-14*T^3-1.06585607E-17*T^4'});
model.material('mat4').propertyGroup('def').func('eta').set('argunit', 'K');
model.material('mat4').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.material('mat4').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat4').propertyGroup('def').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat4').propertyGroup('def').func('Cp').set('argunit', 'K');
model.material('mat4').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat4').propertyGroup('def').func('rho').set('expr', 'pA*0.02897/R_const[K*mol/J]/T');
model.material('mat4').propertyGroup('def').func('rho').set('args', {'pA' 'T'});
model.material('mat4').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.material('mat4').propertyGroup('def').func('rho').set('argunit', {'Pa' 'K'});
model.material('mat4').propertyGroup('def').func('rho').set('plotaxis', {'off' 'on'});
model.material('mat4').propertyGroup('def').func('rho').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat4').propertyGroup('def').func('rho').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '293.15'});
model.material('mat4').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat4').propertyGroup('def').func('k').set('pieces', {'200.0' '1600.0' '-0.00227583562+1.15480022E-4*T^1-7.90252856E-8*T^2+4.11702505E-11*T^3-7.43864331E-15*T^4'});
model.material('mat4').propertyGroup('def').func('k').set('argunit', 'K');
model.material('mat4').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.material('mat4').propertyGroup('def').func('cs').set('expr', 'sqrt(1.4*R_const[K*mol/J]/0.02897*T)');
model.material('mat4').propertyGroup('def').func('cs').set('args', {'T'});
model.material('mat4').propertyGroup('def').func('cs').set('fununit', 'm/s');
model.material('mat4').propertyGroup('def').func('cs').set('argunit', {'K'});
model.material('mat4').propertyGroup('def').func('cs').set('plotfixedvalue', {'273.15'});
model.material('mat4').propertyGroup('def').func('cs').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat4').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.material('mat4').propertyGroup('def').func('an1').set('expr', '-1/rho(pA,T)*d(rho(pA,T),T)');
model.material('mat4').propertyGroup('def').func('an1').set('args', {'pA' 'T'});
model.material('mat4').propertyGroup('def').func('an1').set('fununit', '1/K');
model.material('mat4').propertyGroup('def').func('an1').set('argunit', {'Pa' 'K'});
model.material('mat4').propertyGroup('def').func('an1').set('plotaxis', {'off' 'on'});
model.material('mat4').propertyGroup('def').func('an1').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat4').propertyGroup('def').func('an1').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '373.15'});
model.material('mat4').propertyGroup('def').func('an2').set('funcname', 'muB');
model.material('mat4').propertyGroup('def').func('an2').set('expr', '0.6*eta(T)');
model.material('mat4').propertyGroup('def').func('an2').set('args', {'T'});
model.material('mat4').propertyGroup('def').func('an2').set('fununit', 'Pa*s');
model.material('mat4').propertyGroup('def').func('an2').set('argunit', {'K'});
model.material('mat4').propertyGroup('def').func('an2').set('plotfixedvalue', {'200'});
model.material('mat4').propertyGroup('def').func('an2').set('plotargs', {'T' '200' '1600'});
model.material('mat4').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.material('mat4').propertyGroup('def').set('molarmass', '');
model.material('mat4').propertyGroup('def').set('bulkviscosity', '');
model.material('mat4').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)'});
model.material('mat4').propertyGroup('def').set('molarmass', '0.02897[kg/mol]');
model.material('mat4').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.material('mat4').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat4').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat4').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.material('mat4').propertyGroup('def').set('ratioofspecificheat', '1.4');
model.material('mat4').propertyGroup('def').set('electricconductivity', {'0[S/m]' '0' '0' '0' '0[S/m]' '0' '0' '0' '0[S/m]'});
model.material('mat4').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.material('mat4').propertyGroup('def').set('density', 'rho(pA,T)');
model.material('mat4').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.material('mat4').propertyGroup('def').set('soundspeed', 'cs(T)');
model.material('mat4').propertyGroup('def').addInput('temperature');
model.material('mat4').propertyGroup('def').addInput('pressure');
model.material('mat4').propertyGroup('RefractiveIndex').set('n', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat4').propertyGroup('NonlinearModel').set('BA', 'def.gamma-1');
model.material('mat4').propertyGroup('idealGas').func('Cp').label('Piecewise 2');
model.material('mat4').propertyGroup('idealGas').func('Cp').set('arg', 'T');
model.material('mat4').propertyGroup('idealGas').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat4').propertyGroup('idealGas').func('Cp').set('argunit', 'K');
model.material('mat4').propertyGroup('idealGas').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat4').propertyGroup('idealGas').set('Rs', 'R_const/Mn');
model.material('mat4').propertyGroup('idealGas').set('heatcapacity', 'Cp(T)');
model.material('mat4').propertyGroup('idealGas').set('ratioofspecificheat', '1.4');
model.material('mat4').propertyGroup('idealGas').set('molarmass', '0.02897');
model.material('mat4').propertyGroup('idealGas').addInput('temperature');
model.material('mat4').propertyGroup('idealGas').addInput('pressure');
model.material('mat4').materialType('nonSolid');
model.material.create('mat5', 'Common', 'comp2');
model.material('mat5').label('PEN 38 um');
model.material('mat5').selection.geom('geom2', 2);
model.material('mat5').selection.named('uni1');
model.material('mat5').propertyGroup('def').set('density', '');
model.material('mat5').propertyGroup('def').set('lossfactor', '');
model.material('mat5').propertyGroup('def').set('poissonsratio', '');
model.material('mat5').propertyGroup('def').set('youngsmodulus', '');
model.material('mat5').propertyGroup('def').set('density', {'1360'});
model.material('mat5').propertyGroup('def').set('lossfactor', {'0.06'});
model.material('mat5').propertyGroup('def').set('poissonsratio', {'0.3'});
model.material('mat5').propertyGroup('def').set('youngsmodulus', {'7.20[GPa]'});
model.material.create('mat6', 'Common', 'comp2');
model.material('mat6').label('Coil');
model.material('mat6').selection.named('sel3');
model.material('mat6').propertyGroup('def').set('density', '');
model.material('mat6').propertyGroup('def').set('poissonsratio', '');
model.material('mat6').propertyGroup('def').set('youngsmodulus', '');
model.material('mat6').propertyGroup('def').set('density', {'rho_coil'});
model.material('mat6').propertyGroup('def').set('poissonsratio', {'0.3'});
model.material('mat6').propertyGroup('def').set('youngsmodulus', {'0.5[GPa]'});

model.physics.create('acpr', 'PressureAcoustics', 'geom2');
model.physics('acpr').model('comp2');

model.study('std1').feature('stat').setSolveFor('/physics/acpr', false);
model.study('std1').feature('frlin').setSolveFor('/physics/acpr', false);

model.physics.create('solid', 'SolidMechanics', 'geom2');
model.physics('solid').model('comp2');

model.study('std1').feature('stat').setSolveFor('/physics/solid', false);
model.study('std1').feature('frlin').setSolveFor('/physics/solid', false);

model.physics.create('shell', 'Shell', 'geom2');
model.physics('shell').model('comp2');

model.study('std1').feature('stat').setSolveFor('/physics/shell', false);
model.study('std1').feature('frlin').setSolveFor('/physics/shell', false);

model.physics.create('cir', 'Circuit', 'geom2');
model.physics('cir').model('comp2');

model.study('std1').feature('stat').setSolveFor('/physics/cir', false);
model.study('std1').feature('frlin').setSolveFor('/physics/cir', false);

model.physics('acpr').selection.named('sel4');
model.physics('acpr').create('efc1', 'ExteriorFieldCalculation', 2);
model.physics('acpr').feature('efc1').selection.named('sel7');
model.physics('acpr').feature('efc1').setIndex('SymmetryCondition2', 1, 0);
model.physics('acpr').create('nra1', 'NarrowRegionAcousticsModel', 3);
model.physics('acpr').feature('nra1').selection.named('sel8');
model.physics('acpr').feature('nra1').set('DuctType', 'Slit');
model.physics('acpr').feature('nra1').set('h', 'voice_coil_gap1');
model.physics('acpr').create('nra2', 'NarrowRegionAcousticsModel', 3);
model.physics('acpr').feature('nra2').selection.named('sel9');
model.physics('acpr').feature('nra2').set('DuctType', 'Slit');
model.physics('acpr').feature('nra2').set('h', 'voice_coil_gap2');
model.physics('acpr').create('nra3', 'NarrowRegionAcousticsModel', 3);
model.physics('acpr').feature('nra3').selection.named('sel10');
model.physics('acpr').feature('nra3').set('DuctType', 'RectangularDuct');
model.physics('acpr').feature('nra3').set('a_rect', 'back_slits_w');
model.physics('acpr').feature('nra3').set('b_rect', 'back_slits_h');
model.physics('solid').selection.named('sel3');
model.physics('solid').create('bl1', 'BodyLoad', 3);
model.physics('solid').feature('bl1').label('Body Load - From Circuit');
model.physics('solid').feature('bl1').selection.named('sel3');
model.physics('solid').feature('bl1').set('LoadType', 'TotalForce');
model.physics('solid').feature('bl1').set('Ftot', {'0' '0' 'BL*cir.R1_i'});
model.physics('solid').create('bl2', 'BodyLoad', 3);
model.physics('solid').feature('bl2').label('Body Load - Applied Force');
model.physics('solid').feature('bl2').selection.named('sel3');
model.physics('solid').feature('bl2').set('LoadType', 'TotalForce');
model.physics('solid').feature('bl2').set('Ftot', {'0' '0' 'applied_force'});
model.physics('shell').selection.named('uni1');
model.physics('shell').feature('emm1').create('dmp1', 'Damping', 2);
model.physics('shell').feature('emm1').feature('dmp1').set('DampingType', 'IsotropicLossFactor');
model.physics('shell').feature('to1').set('d', 'd_diag');
model.physics('shell').feature('to1').set('OffsetDefinition', 'RelativeDistance');
model.physics('shell').feature('to1').set('z_offset_rel', 0.5);
model.physics('shell').create('fix1', 'Fixed', 2);
model.physics('shell').feature('fix1').selection.set([22 23 191 262]);
model.physics('cir').create('V1', 'VoltageSource', -1);
model.physics('cir').feature('V1').setIndex('Connections', 0, 1, 0);
model.physics('cir').feature('V1').set('value', 'V0');
model.physics('cir').create('R1', 'Resistor', -1);
model.physics('cir').feature('R1').setIndex('Connections', 1, 0, 0);
model.physics('cir').feature('R1').setIndex('Connections', 2, 1, 0);
model.physics('cir').feature('R1').set('R', 'Zreal(freq)  + i*Zimag(freq)');
model.physics('cir').create('V2', 'VoltageSource', -1);
model.physics('cir').feature('V2').setIndex('Connections', 2, 0, 0);
model.physics('cir').feature('V2').setIndex('Connections', 0, 1, 0);
model.physics('cir').feature('V2').set('value', 'BL*v0');

model.coordSystem.create('pml1', 'geom2', 'PML');
model.coordSystem('pml1').selection.named('sel5');
model.coordSystem('pml1').set('ScalingType', 'Spherical');
model.coordSystem('pml1').set('PMLgamma', '3');
model.coordSystem.create('pml2', 'geom2', 'PML');
model.coordSystem('pml2').selection.named('sel6');
model.coordSystem('pml2').set('ScalingType', 'Spherical');
model.coordSystem('pml2').set('PMLgamma', '3');

model.multiphysics.create('sshc1', 'SolidShellConnection', 'geom2', -1);
model.multiphysics('sshc1').set('connectionSettings', 'sharedBnd');
model.multiphysics.create('asb1', 'AcousticStructureBoundary', 'geom2', 2);
model.multiphysics('asb1').label('Acoustic-Structure Boundary - Solid');
model.multiphysics('asb1').selection.all;
model.multiphysics.create('asb2', 'AcousticStructureBoundary', 'geom2', 2);
model.multiphysics('asb2').label('Acoustic-Structure Boundary - Shell');
model.multiphysics('asb2').selection.all;
model.multiphysics('asb2').set('Structure_physics', 'shell');

model.mesh('mesh2').create('ftet1', 'FreeTet');
model.mesh('mesh2').feature('size').set('custom', true);
model.mesh('mesh2').feature('size').set('hmax', 'lam0/6');
model.mesh('mesh2').feature('size').set('hmin', '1[mm]');
model.mesh('mesh2').feature('size').set('hcurve', 0.5);
model.mesh('mesh2').run('size');
model.mesh('mesh2').create('map1', 'Map');
model.mesh('mesh2').feature('map1').selection.named('sel2');
model.mesh('mesh2').feature('map1').create('size1', 'Size');
model.mesh('mesh2').feature('map1').feature('size1').set('custom', true);
model.mesh('mesh2').feature('map1').feature('size1').set('hmaxactive', true);
model.mesh('mesh2').feature('map1').feature('size1').set('hmax', '0.6[mm]');
model.mesh('mesh2').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh2').feature('map1').feature('dis1').selection.set([467]);
model.mesh('mesh2').feature('map1').feature('dis1').set('numelem', 2);
model.mesh('mesh2').create('ftri1', 'FreeTri');
model.mesh('mesh2').feature('ftri1').selection.named('sel1');
model.mesh('mesh2').feature('ftri1').create('size1', 'Size');
model.mesh('mesh2').feature('ftri1').feature('size1').set('custom', true);
model.mesh('mesh2').feature('ftri1').feature('size1').set('hmaxactive', true);
model.mesh('mesh2').feature('ftri1').feature('size1').set('hmax', '0.6[mm]');
model.mesh('mesh2').feature('ftri1').feature('size1').set('hminactive', true);
model.mesh('mesh2').feature('ftri1').feature('size1').set('hmin', '0.2[mm]');
model.mesh('mesh2').create('swe1', 'Sweep');
model.mesh('mesh2').feature('swe1').selection.geom('geom2', 3);
model.mesh('mesh2').feature('swe1').selection.named('sel3');
model.mesh('mesh2').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh2').feature('swe1').feature('dis1').set('numelem', 2);
model.mesh('mesh2').create('swe2', 'Sweep');
model.mesh('mesh2').feature('swe2').selection.geom('geom2', 3);
model.mesh('mesh2').feature('swe2').selection.named('sel8');
model.mesh('mesh2').feature('swe2').create('dis1', 'Distribution');
model.mesh('mesh2').feature('swe2').feature('dis1').set('numelem', 2);
model.mesh('mesh2').create('swe3', 'Sweep');
model.mesh('mesh2').feature('swe3').selection.geom('geom2', 3);
model.mesh('mesh2').feature('swe3').selection.named('sel9');
model.mesh('mesh2').feature('swe3').create('dis1', 'Distribution');
model.mesh('mesh2').feature('swe3').feature('dis1').set('numelem', 2);
model.mesh('mesh2').feature('ftet1').selection.geom('geom2', 3);
model.mesh('mesh2').feature('ftet1').selection.set([3 4 5 6 7 8 9 16 17 22 23 24]);
model.mesh('mesh2').run;
model.mesh('mesh2').create('swe4', 'Sweep');
model.mesh('mesh2').feature('swe4').create('dis1', 'Distribution');
model.mesh('mesh2').feature('swe4').feature('dis1').set('numelem', 8);
model.mesh('mesh2').run('swe4');
model.mesh('mesh2').create('bl1', 'BndLayer');
model.mesh('mesh2').feature('bl1').create('blp', 'BndLayerProp');
model.mesh('mesh2').feature('bl1').selection.geom(3);
model.mesh('mesh2').feature('bl1').selection.set([]);
model.mesh('mesh2').feature('bl1').selection.allGeom;
model.mesh('mesh2').feature('bl1').selection.geom('geom2', 3);
model.mesh('mesh2').feature('bl1').selection.set([3 4]);
model.mesh('mesh2').feature('bl1').set('smoothtransition', false);
model.mesh('mesh2').feature('bl1').feature('blp').selection.set([11 12 15 16 187 189 220 227]);
model.mesh('mesh2').feature('bl1').feature('blp').set('blnlayers', 1);
model.mesh('mesh2').run('bl1');

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/mf', false);
model.study('std2').feature('stat').setSolveFor('/physics/acpr', false);
model.study('std2').feature('stat').setSolveFor('/physics/solid', true);
model.study('std2').feature('stat').setSolveFor('/physics/shell', true);
model.study('std2').feature('stat').setSolveFor('/physics/cir', false);
model.study('std2').feature('stat').setSolveFor('/multiphysics/sshc1', true);
model.study('std2').feature('stat').setSolveFor('/multiphysics/asb1', false);
model.study('std2').feature('stat').setSolveFor('/multiphysics/asb2', false);
model.study('std2').label('Study 2 - CMS Extraction');
model.study('std2').feature('stat').set('geometricNonlinearity', true);
model.study('std2').feature('stat').setEntry('mesh', 'geom1', 'nomesh');
model.study('std2').feature('stat').set('useparam', true);
model.study('std2').feature('stat').setIndex('pname', 'f0', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 'Hz', 0);
model.study('std2').feature('stat').setIndex('pname', 'f0', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 'Hz', 0);
model.study('std2').feature('stat').setIndex('pname', 'applied_force', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 'N', 0);
model.study('std2').feature('stat').setIndex('plistarr', 'range(-1,0.1,1)', 0);
model.study('std2').feature('stat').setIndex('punit', 'N', 0);

model.sol.create('sol3');
model.sol('sol3').study('std2');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std2');
model.sol('sol3').feature('st1').set('studystep', 'stat');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').feature('comp2_ar').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp2_ar').set('resscalemethod', 'parent');
model.sol('sol3').feature('v1').feature('comp2_ar').set('scaleval', '0.01');
model.sol('sol3').feature('v1').set('control', 'stat');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').create('p1', 'Parametric');
model.sol('sol3').feature('s1').feature.remove('pDef');
model.sol('sol3').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol3').feature('s1').set('control', 'stat');
model.sol('sol3').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('s1').create('seDef', 'Segregated');
model.sol('sol3').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol3').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol3').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol('sol3').feature('s1').feature.remove('seDef');
model.sol('sol3').attach('std2');
model.sol('sol3').runFromTo('st1', 'v1');

model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').set('data', 'dset4');
model.result('pg5').setIndex('looplevel', 1, 0);
model.result('pg5').set('defaultPlotID', 'stress');
model.result('pg5').label('Stress (solid)');
model.result('pg5').set('frametype', 'spatial');
model.result('pg5').create('vol1', 'Volume');
model.result('pg5').feature('vol1').set('expr', {'solid.misesGp'});
model.result('pg5').feature('vol1').set('threshold', 'manual');
model.result('pg5').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg5').feature('vol1').set('colortable', 'Rainbow');
model.result('pg5').feature('vol1').set('colortabletrans', 'none');
model.result('pg5').feature('vol1').set('colorscalemode', 'linear');
model.result('pg5').feature('vol1').set('resolution', 'custom');
model.result('pg5').feature('vol1').set('refine', 2);
model.result('pg5').feature('vol1').set('colortable', 'Prism');
model.result.dataset.create('dset4shellshl', 'Shell');
model.result.dataset('dset4shellshl').set('data', 'dset4');
model.result.dataset('dset4shellshl').setIndex('topconst', '1', 6, 1);
model.result.dataset('dset4shellshl').setIndex('bottomconst', '-1', 6, 1);
model.result.dataset('dset4shellshl').setIndex('orientationexpr', 'shell.nlX', 0);
model.result.dataset('dset4shellshl').setIndex('displacementexpr', 'arx', 0);
model.result.dataset('dset4shellshl').setIndex('orientationexpr', 'shell.nlY', 1);
model.result.dataset('dset4shellshl').setIndex('displacementexpr', 'ary', 1);
model.result.dataset('dset4shellshl').setIndex('orientationexpr', 'shell.nlZ', 2);
model.result.dataset('dset4shellshl').setIndex('displacementexpr', 'arz', 2);
model.result.dataset('dset4shellshl').set('distanceexpr', 'shell.z_pos');
model.result.dataset('dset4shellshl').set('seplevels', false);
model.result.dataset('dset4shellshl').set('resolution', 2);
model.result.dataset('dset4shellshl').set('areascalefactor', 'shell.ASF');
model.result.dataset('dset4shellshl').set('linescalefactor', 'shell.LSF');
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').set('data', 'dset4shellshl');
model.result('pg6').setIndex('looplevel', 1, 0);
model.result('pg6').set('defaultPlotID', 'stress');
model.result('pg6').label('Stress (shell)');
model.result('pg6').set('showlegends', true);
model.result('pg6').set('frametype', 'spatial');
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', {'shell.misesGp'});
model.result('pg6').feature('surf1').set('threshold', 'manual');
model.result('pg6').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg6').feature('surf1').set('colortable', 'Rainbow');
model.result('pg6').feature('surf1').set('colortabletrans', 'none');
model.result('pg6').feature('surf1').set('colorscalemode', 'linear');
model.result('pg6').feature('surf1').set('descr', 'von Mises stress');
model.result('pg6').feature('surf1').set('colortable', 'Prism');
model.result('pg5').run;

model.sol('sol3').feature('s1').set('stol', '1e-5');
model.sol('sol3').runAll;

model.result('pg5').run;
model.result.evaluationGroup.create('eg3', 'EvaluationGroup');
model.result.evaluationGroup('eg3').label('Evaluation Group - Force Displacement Curve');
model.result.evaluationGroup('eg3').set('data', 'dset4');
model.result.evaluationGroup('eg3').set('includeparameters', false);
model.result.evaluationGroup('eg3').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg3').feature('gev1').setIndex('expr', 'ave_coil(w)', 0);
model.result.evaluationGroup('eg3').feature('gev1').setIndex('unit', '', 0);
model.result.evaluationGroup('eg3').feature('gev1').setIndex('descr', 'Average coil displacement', 0);
model.result.evaluationGroup('eg3').feature('gev1').setIndex('expr', 'applied_force', 1);
model.result.evaluationGroup('eg3').feature('gev1').setIndex('unit', 'N', 1);
model.result.evaluationGroup('eg3').feature('gev1').setIndex('descr', 'Applied force', 1);
model.result.evaluationGroup('eg3').run;

model.func.create('int6', 'Interpolation');
model.func('int6').label('Force displacement from COMSOL');
model.func('int6').set('source', 'resultTable');
model.func('int6').set('resultTable', 'evalGroup:eg3');
model.func('int6').setIndex('funcs', 'Force', 0, 0);
model.func('int6').setIndex('funcs', 1, 0, 1);
model.func('int6').set('interp', 'piecewisecubic');
model.func('int6').set('extrap', 'interior');
model.func('int6').setIndex('argunit', 'mm', 0);
model.func('int6').setIndex('fununit', 'N', 0);

model.sol('sol3').updateSolution;

model.result('pg5').run;
model.result.dataset.create('grid1', 'Grid1D');
model.result.dataset('grid1').set('source', 'data');
model.result.dataset('grid1').set('data', 'dset4');
model.result.dataset('grid1').set('parmin1', -0.5);
model.result.dataset('grid1').set('parmax1', 0.5);
model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').run;
model.result('pg7').label('CMS vs Displacement');
model.result('pg7').set('data', 'grid1');
model.result('pg7').setIndex('looplevelinput', 'last', 0);
model.result('pg7').set('titletype', 'manual');
model.result('pg7').set('title', 'CMS (mm/N) vs Displacement (mm)');
model.result('pg7').set('xlabelactive', true);
model.result('pg7').set('xlabel', 'Voice coil offset (mm)');
model.result('pg7').set('axislimits', true);
model.result('pg7').set('xmin', -0.5);
model.result('pg7').set('xmax', 0.5);
model.result('pg7').set('ymin', 0);
model.result('pg7').set('ymax', 0.7);
model.result('pg7').set('legendpos', 'lowerleft');
model.result('pg7').create('lngr1', 'LineGraph');
model.result('pg7').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg7').feature('lngr1').set('linewidth', 'preference');
model.result('pg7').feature('lngr1').label('CMS curve from test');
model.result('pg7').feature('lngr1').set('expr', 'CMS_Test(x)');
model.result('pg7').feature('lngr1').set('unit', 'mm/N');
model.result('pg7').feature('lngr1').set('titletype', 'none');
model.result('pg7').feature('lngr1').set('xdata', 'expr');
model.result('pg7').feature('lngr1').set('xdataexpr', 'x');
model.result('pg7').feature('lngr1').set('linecolor', 'blue');
model.result('pg7').feature('lngr1').set('legend', true);
model.result('pg7').feature('lngr1').set('autoplotlabel', true);
model.result('pg7').feature('lngr1').set('autosolution', false);
model.result('pg7').feature.duplicate('lngr2', 'lngr1');
model.result('pg7').run;
model.result('pg7').feature('lngr2').label('CMS curve from test (inverted)');
model.result('pg7').feature('lngr2').set('xdataexpr', '-x');
model.result('pg7').feature('lngr2').set('linestyle', 'dotted');
model.result('pg7').feature('lngr2').set('legend', false);
model.result('pg7').run;
model.result('pg7').create('lngr3', 'LineGraph');
model.result('pg7').feature('lngr3').set('markerpos', 'datapoints');
model.result('pg7').feature('lngr3').set('linewidth', 'preference');
model.result('pg7').feature('lngr3').label('CMS curve from COMSOL');
model.result('pg7').feature('lngr3').set('expr', '1/(d(Force(x),x))');
model.result('pg7').feature('lngr3').set('unit', 'mm/N');
model.result('pg7').feature('lngr3').set('titletype', 'none');
model.result('pg7').feature('lngr3').set('xdata', 'expr');
model.result('pg7').feature('lngr3').set('xdataexpr', 'x');
model.result('pg7').feature('lngr3').set('linecolor', 'red');
model.result('pg7').feature('lngr3').set('legend', true);
model.result('pg7').feature('lngr3').set('autoplotlabel', true);
model.result('pg7').feature('lngr3').set('autosolution', false);
model.result('pg7').feature.duplicate('lngr4', 'lngr3');
model.result('pg7').run;
model.result('pg7').feature('lngr4').label('CMS curve from COMSOL (inverted)');
model.result('pg7').feature('lngr4').set('xdataexpr', '-x');
model.result('pg7').feature('lngr4').set('linestyle', 'dotted');
model.result('pg7').feature('lngr4').set('legend', false);
model.result('pg7').run;
model.result('pg5').run;

model.nodeGroup.create('grp2', 'Results');
model.nodeGroup('grp2').set('type', 'plotgroup');
model.nodeGroup.move('grp2', 1);
model.nodeGroup('grp2').add('plotgroup', 'pg5');
model.nodeGroup('grp2').add('plotgroup', 'pg6');
model.nodeGroup('grp2').add('plotgroup', 'pg7');
model.nodeGroup('grp2').label('Postprocessing - CMS Analysis');

model.study.create('std3');
model.study('std3').create('freq', 'Frequency');
model.study('std3').feature('freq').setSolveFor('/physics/mf', false);
model.study('std3').feature('freq').setSolveFor('/physics/acpr', true);
model.study('std3').feature('freq').setSolveFor('/physics/solid', true);
model.study('std3').feature('freq').setSolveFor('/physics/shell', true);
model.study('std3').feature('freq').setSolveFor('/physics/cir', true);
model.study('std3').feature('freq').setSolveFor('/multiphysics/sshc1', true);
model.study('std3').feature('freq').setSolveFor('/multiphysics/asb1', true);
model.study('std3').feature('freq').setSolveFor('/multiphysics/asb2', true);
model.study('std3').label('Study 3 - Acoustic Analysis');
model.study('std3').feature('freq').set('plist', '{100, 106, 112, 118, 125, 132, 140, 150, 160, 170, 180, 190, 200, 212, 224, 236, 250, 265, 280, 300, 315, 335, 355, 375, 400, 425, 450, 475, 500, 530, 560, 600, 630, 670, 710, 750, 800, 850, 900, 950, 1e3, 1.06e3, 1.12e3, 1.18e3, 1.25e3, 1.32e3, 1.4e3, 1.5e3, 1.6e3, 1.7e3, 1.8e3, 1.9e3, 2e3, 2.12e3, 2.24e3, 2.36e3, 2.5e3, 2.65e3, 2.8e3, 3e3, 3.15e3, 3.35e3, 3.55e3, 3.75e3, 4e3, 4.25e3, 4.5e3, 4.75e3, 5e3, 5.3e3, 5.6e3, 6e3, 6.3e3, 6.7e3, 7.1e3, 7.5e3, 8e3, 8.5e3, 9e3, 9.5e3, 1e4, 1.06e4, 1.12e4, 1.18e4, 1.25e4, 1.32e4, 1.4e4, 1.5e4, 1.6e4, 1.7e4, 1.8e4, 1.9e4, 2e4}');
model.study('std3').feature('freq').set('useadvanceddisable', true);
model.study('std3').feature('freq').set('disabledphysics', {'solid/bl2'});
model.study('std3').feature('freq').setEntry('mesh', 'geom1', 'nomesh');

model.sol.create('sol4');
model.sol('sol4').study('std3');
model.sol('sol4').create('st1', 'StudyStep');
model.sol('sol4').feature('st1').set('study', 'std3');
model.sol('sol4').feature('st1').set('studystep', 'freq');
model.sol('sol4').create('v1', 'Variables');
model.sol('sol4').feature('v1').feature('comp2_ar').set('scalemethod', 'manual');
model.sol('sol4').feature('v1').feature('comp2_ar').set('resscalemethod', 'parent');
model.sol('sol4').feature('v1').feature('comp2_ar').set('scaleval', '0.01');
model.sol('sol4').feature('v1').set('control', 'freq');
model.sol('sol4').create('s1', 'Stationary');
model.sol('sol4').feature('s1').set('stol', 0.001);
model.sol('sol4').feature('s1').create('p1', 'Parametric');
model.sol('sol4').feature('s1').feature.remove('pDef');
model.sol('sol4').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol4').feature('s1').feature('p1').set('plistarr', {'{100, 106, 112, 118, 125, 132, 140, 150, 160, 170, 180, 190, 200, 212, 224, 236, 250, 265, 280, 300, 315, 335, 355, 375, 400, 425, 450, 475, 500, 530, 560, 600, 630, 670, 710, 750, 800, 850, 900, 950, 1e3, 1.06e3, 1.12e3, 1.18e3, 1.25e3, 1.32e3, 1.4e3, 1.5e3, 1.6e3, 1.7e3, 1.8e3, 1.9e3, 2e3, 2.12e3, 2.24e3, 2.36e3, 2.5e3, 2.65e3, 2.8e3, 3e3, 3.15e3, 3.35e3, 3.55e3, 3.75e3, 4e3, 4.25e3, 4.5e3, 4.75e3, 5e3, 5.3e3, 5.6e3, 6e3, 6.3e3, 6.7e3, 7.1e3, 7.5e3, 8e3, 8.5e3, 9e3, 9.5e3, 1e4, 1.06e4, 1.12e4, 1.18e4, 1.25e4, 1.32e4, 1.4e4, 1.5e4, 1.6e4, 1.7e4, 1.8e4, 1.9e4, 2e4}'});
model.sol('sol4').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol4').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol4').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol4').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol4').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol4').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol4').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol4').feature('s1').feature('p1').set('probes', {});
model.sol('sol4').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol4').feature('s1').set('linpmethod', 'sol');
model.sol('sol4').feature('s1').set('linpsol', 'zero');
model.sol('sol4').feature('s1').set('control', 'freq');
model.sol('sol4').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol4').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol4').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol4').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol4').feature('s1').create('seDef', 'Segregated');
model.sol('sol4').feature('s1').create('se1', 'Segregated');
model.sol('sol4').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol4').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol4').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp2_currents'});
model.sol('sol4').feature('s1').feature('se1').feature('ss1').set('linsolver', 'dDef');
model.sol('sol4').feature('s1').feature('se1').feature('ss1').label('Electrical Circuit');
model.sol('sol4').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol4').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp2_u' 'comp2_u2' 'comp2_ar' 'comp2_p'});
model.sol('sol4').feature('s1').create('d1', 'Direct');
model.sol('sol4').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol4').feature('s1').feature('d1').label('Suggested Direct Solver (asb1_sshc1_asb2) (Merged)');
model.sol('sol4').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd1');
model.sol('sol4').feature('s1').feature('se1').feature('ss2').label('Merged Variables');
model.sol('sol4').feature('s1').create('i1', 'Iterative');
model.sol('sol4').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol4').feature('s1').feature('i1').label('Suggested Iterative Solver (GMRES with DirectPrecond.) (asb1_sshc1_asb2)');
model.sol('sol4').feature('s1').feature('i1').create('dp1', 'DirectPreconditioner');
model.sol('sol4').feature('s1').feature('i1').feature('dp1').set('hybridization', 'multi');
model.sol('sol4').feature('s1').feature('i1').feature('dp1').set('hybridvar', {'comp2_p'});
model.sol('sol4').feature('s1').feature('i1').create('dp2', 'DirectPreconditioner');
model.sol('sol4').feature('s1').feature('i1').feature('dp2').set('hybridization', 'multi');
model.sol('sol4').feature('s1').feature('i1').feature('dp2').set('hybridvar', {'comp2_u' 'comp2_u2' 'comp2_ar'});
model.sol('sol4').feature('s1').feature('i1').feature('dp2').set('pivotperturb', '1.0E-9');
model.sol('sol4').feature('s1').create('i2', 'Iterative');
model.sol('sol4').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol4').feature('s1').feature('i2').label('Suggested Iterative Solver (GMRES with GMG and Direct Precond.) (asb1_sshc1_asb2)');
model.sol('sol4').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').set('hybridization', 'multi');
model.sol('sol4').feature('s1').feature('i2').feature('mg1').set('hybridvar', {'comp2_p'});
model.sol('sol4').feature('s1').feature('i2').create('dp1', 'DirectPreconditioner');
model.sol('sol4').feature('s1').feature('i2').feature('dp1').set('hybridization', 'multi');
model.sol('sol4').feature('s1').feature('i2').feature('dp1').set('hybridvar', {'comp2_u' 'comp2_u2' 'comp2_ar'});
model.sol('sol4').feature('s1').feature('i2').feature('dp1').set('pivotperturb', '1.0E-9');
model.sol('sol4').feature('s1').feature.remove('fcDef');
model.sol('sol4').feature('s1').feature.remove('seDef');
model.sol('sol4').attach('std3');
model.sol('sol4').runFromTo('st1', 'v1');

model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').set('data', 'dset6');
model.result('pg8').setIndex('looplevel', 1, 0);
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').feature('surf1').set('expr', {'acpr.p_t'});
model.result('pg8').feature('surf1').set('colortable', 'Wave');
model.result('pg8').feature('surf1').set('colorscalemode', 'linearsymmetric');
model.result('pg8').set('showlegendsunit', true);
model.result('pg8').label('Acoustic Pressure (acpr)');
model.result.create('pg9', 'PlotGroup3D');
model.result('pg9').set('data', 'dset6');
model.result('pg9').setIndex('looplevel', 1, 0);
model.result('pg9').create('surf1', 'Surface');
model.result('pg9').feature('surf1').set('expr', {'acpr.Lp_t'});
model.result('pg9').feature('surf1').set('colortable', 'Rainbow');
model.result('pg9').feature('surf1').set('colorscalemode', 'linear');
model.result('pg9').set('showlegendsunit', true);
model.result('pg9').label('Sound Pressure Level (acpr)');
model.result.create('pg10', 'PlotGroup3D');
model.result('pg10').set('data', 'dset6');
model.result('pg10').setIndex('looplevel', 1, 0);
model.result('pg10').create('iso1', 'Isosurface');
model.result('pg10').feature('iso1').set('expr', {'acpr.p_t'});
model.result('pg10').feature('iso1').set('number', '10');
model.result('pg10').feature('iso1').set('colortable', 'Wave');
model.result('pg10').feature('iso1').set('colorscalemode', 'linearsymmetric');
model.result('pg10').set('showlegendsunit', true);
model.result('pg10').label('Acoustic Pressure, Isosurfaces (acpr)');
model.result.create('pg11', 'PlotGroup3D');
model.result('pg11').set('data', 'dset6');
model.result('pg11').setIndex('looplevel', 1, 0);
model.result('pg11').set('edges', 'off');
model.result('pg11').set('view', 'new');
model.result('pg11').create('rp1', 'RadiationPattern');
model.result('pg11').feature('rp1').set('expr', {'acpr.efc1.Lp_pext'});
model.result('pg11').feature('rp1').set('thetadisc', 40);
model.result('pg11').feature('rp1').set('phidisc', 60);
model.result('pg11').feature('rp1').set('grid', 'fine');
model.result('pg11').feature('rp1').set('colortable', 'Rainbow');
model.result('pg11').feature('rp1').set('colorscalemode', 'linear');
model.result('pg11').set('showlegendsunit', true);
model.result('pg11').label('Exterior-Field Sound Pressure Level (acpr)');
model.result.create('pg12', 'PlotGroup2D');
model.result('pg12').set('data', 'none');
model.result('pg12').create('rp1', 'RadiationPattern');
model.result('pg12').feature('rp1').set('data', 'dset6');
model.result('pg12').feature('rp1').set('expr', {'acpr.efc1.pext'});
model.result('pg12').feature('rp1').set('thetadisc', 40);
model.result('pg12').feature('rp1').set('phidisc', 60);
model.result('pg12').feature('rp1').set('colortable', 'Cividis');
model.result('pg12').set('showlegendsunit', true);
model.result('pg12').label('Exterior-Field Pressure (acpr)');
model.result.create('pg13', 'PolarGroup');
model.result('pg13').set('data', 'dset6');
model.result('pg13').create('rp1', 'RadiationPattern');
model.result('pg13').feature('rp1').set('expr', {'acpr.efc1.Lp_pext'});
model.result('pg13').feature('rp1').set('legend', true);
model.result('pg13').feature('rp1').set('phidisc', 180);
model.result('pg13').label('Exterior-Field Sound Pressure Level xy-plane (acpr)');
model.result('pg13').setIndex('looplevelinput', 'last', 0);
model.result.create('pg14', 'PlotGroup3D');
model.result('pg14').set('data', 'dset6');
model.result('pg14').setIndex('looplevel', 1, 0);
model.result('pg14').set('defaultPlotID', 'stress');
model.result('pg14').label('Stress (solid) 1');
model.result('pg14').set('frametype', 'spatial');
model.result('pg14').create('vol1', 'Volume');
model.result('pg14').feature('vol1').set('expr', {'solid.misesGp_peak'});
model.result('pg14').feature('vol1').set('threshold', 'manual');
model.result('pg14').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg14').feature('vol1').set('colortable', 'Rainbow');
model.result('pg14').feature('vol1').set('colortabletrans', 'none');
model.result('pg14').feature('vol1').set('colorscalemode', 'linear');
model.result('pg14').feature('vol1').set('resolution', 'custom');
model.result('pg14').feature('vol1').set('refine', 2);
model.result('pg14').feature('vol1').set('colortable', 'Prism');
model.result('pg14').feature('vol1').create('def', 'Deform');
model.result('pg14').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg14').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result.dataset.create('dset6shellshl', 'Shell');
model.result.dataset('dset6shellshl').set('data', 'dset6');
model.result.dataset('dset6shellshl').setIndex('topconst', '1', 6, 1);
model.result.dataset('dset6shellshl').setIndex('bottomconst', '-1', 6, 1);
model.result.dataset('dset6shellshl').setIndex('orientationexpr', 'shell.nlX', 0);
model.result.dataset('dset6shellshl').setIndex('displacementexpr', 'arx', 0);
model.result.dataset('dset6shellshl').setIndex('orientationexpr', 'shell.nlY', 1);
model.result.dataset('dset6shellshl').setIndex('displacementexpr', 'ary', 1);
model.result.dataset('dset6shellshl').setIndex('orientationexpr', 'shell.nlZ', 2);
model.result.dataset('dset6shellshl').setIndex('displacementexpr', 'arz', 2);
model.result.dataset('dset6shellshl').set('distanceexpr', 'shell.z_pos');
model.result.dataset('dset6shellshl').set('seplevels', false);
model.result.dataset('dset6shellshl').set('resolution', 2);
model.result.dataset('dset6shellshl').set('areascalefactor', 'shell.ASF');
model.result.dataset('dset6shellshl').set('linescalefactor', 'shell.LSF');
model.result.create('pg15', 'PlotGroup3D');
model.result('pg15').set('data', 'dset6shellshl');
model.result('pg15').setIndex('looplevel', 1, 0);
model.result('pg15').set('defaultPlotID', 'stress');
model.result('pg15').label('Stress (shell) 1');
model.result('pg15').set('showlegends', true);
model.result('pg15').set('frametype', 'spatial');
model.result('pg15').create('surf1', 'Surface');
model.result('pg15').feature('surf1').set('expr', {'shell.misesGp_peak'});
model.result('pg15').feature('surf1').set('threshold', 'manual');
model.result('pg15').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg15').feature('surf1').set('colortable', 'Rainbow');
model.result('pg15').feature('surf1').set('colortabletrans', 'none');
model.result('pg15').feature('surf1').set('colorscalemode', 'linear');
model.result('pg15').feature('surf1').set('descr', 'Von Mises stress, peak');
model.result('pg15').feature('surf1').set('colortable', 'Prism');
model.result('pg15').feature('surf1').create('def', 'Deform');
model.result('pg15').feature('surf1').feature('def').set('expr', {'shell.u' 'shell.v' 'shell.w'});
model.result('pg8').run;

model.sol('sol4').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol4').feature('s1').feature('i1').active(true);
model.sol('sol4').feature('s1').feature('i1').feature('dp2').set('hybridvar', {'comp2_u' 'comp2_u2' 'comp2_ar' 'comp2_currents'});
model.sol('sol4').runAll;

model.result('pg8').run;
model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').importData('ow_microspeaker_spl_39mm_thermoviscous.txt');
model.result.table('tbl1').label('Thermoviscous results');
model.result.create('pg16', 'PlotGroup1D');
model.result('pg16').run;
model.result('pg16').label('Outgoing acoustic energy');
model.result('pg16').set('data', 'dset6');
model.result('pg16').set('xlabelactive', true);
model.result('pg16').set('xlabel', 'freq (Hz)');
model.result('pg16').set('ylabelactive', true);
model.result('pg16').set('ylabel', 'Energy (W)');
model.result('pg16').set('xlog', true);
model.result('pg16').set('ylog', true);
model.result('pg16').set('legendpos', 'lowermiddle');
model.result('pg16').create('glob1', 'Global');
model.result('pg16').feature('glob1').set('markerpos', 'datapoints');
model.result('pg16').feature('glob1').set('linewidth', 'preference');
model.result('pg16').feature('glob1').setIndex('expr', 'int_PML_Top(I_int)', 0);
model.result('pg16').feature('glob1').setIndex('unit', 'W', 0);
model.result('pg16').feature('glob1').setIndex('descr', 'PML Top Integral', 0);
model.result('pg16').feature('glob1').setIndex('expr', 'int_PML_Bottom(I_int)', 1);
model.result('pg16').feature('glob1').setIndex('unit', 'W', 1);
model.result('pg16').feature('glob1').setIndex('descr', 'PML Bottom Integral', 1);
model.result('pg16').run;
model.result.create('pg17', 'PlotGroup1D');
model.result('pg17').run;
model.result('pg17').label('Speaker sensitivity at 39 mm');
model.result('pg17').set('data', 'dset6');
model.result('pg17').set('titletype', 'manual');
model.result('pg17').set('title', 'SPL at 39 mm (dB)');
model.result('pg17').set('xlabelactive', true);
model.result('pg17').set('xlabel', 'freq(Hz)');
model.result('pg17').set('ylabelactive', true);
model.result('pg17').set('ylabel', 'SPL(dB)');
model.result('pg17').set('axislimits', true);
model.result('pg17').set('xmin', 100);
model.result('pg17').set('xmax', 20000);
model.result('pg17').set('ymin', 50);
model.result('pg17').set('ymax', 100);
model.result('pg17').set('xlog', true);
model.result('pg17').set('legendpos', 'lowerright');
model.result('pg17').create('glob1', 'Global');
model.result('pg17').feature('glob1').set('markerpos', 'datapoints');
model.result('pg17').feature('glob1').set('linewidth', 'preference');
model.result('pg17').feature('glob1').setIndex('expr', 'SPL_Test(freq)', 0);
model.result('pg17').feature('glob1').setIndex('unit', 'dB', 0);
model.result('pg17').feature('glob1').setIndex('descr', 'Measured SPL at 39 mm', 0);
model.result('pg17').feature('glob1').set('linewidth', 3);
model.result('pg17').run;
model.result('pg17').create('oct1', 'OctaveBand');
model.result('pg17').feature('oct1').set('quantity', 'bandpower');
model.result('pg17').feature('oct1').set('markerpos', 'datapoints');
model.result('pg17').feature('oct1').set('linewidth', 'preference');
model.result('pg17').feature('oct1').selection.geom('geom2');
model.result('pg17').feature('oct1').set('expr', 'pext(0,0,39[mm])');
model.result('pg17').feature('oct1').set('quantity', 'continuous');
model.result('pg17').feature('oct1').set('legend', true);
model.result('pg17').feature('oct1').set('legendmethod', 'manual');
model.result('pg17').feature('oct1').setIndex('legends', 'COMSOL results', 0);
model.result('pg17').run;
model.result('pg17').create('tblp1', 'Table');
model.result('pg17').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg17').feature('tblp1').set('linewidth', 'preference');
model.result('pg17').run;
model.result('pg17').feature('tblp1').set('legend', true);
model.result('pg17').feature('tblp1').set('legendmethod', 'manual');
model.result('pg17').feature('tblp1').setIndex('legends', 'COMSOL results with thermoviscous', 0);
model.result('pg17').run;
model.result.create('pg18', 'PlotGroup1D');
model.result('pg18').run;
model.result('pg18').label('Total impedance');
model.result('pg18').set('data', 'dset6');
model.result('pg18').set('xlabelactive', true);
model.result('pg18').set('xlabel', 'freq (Hz)');
model.result('pg18').set('ylabelactive', true);
model.result('pg18').set('ylabel', 'Impedance (ohm)');
model.result('pg18').set('xlog', true);
model.result('pg18').create('glob1', 'Global');
model.result('pg18').feature('glob1').set('markerpos', 'datapoints');
model.result('pg18').feature('glob1').set('linewidth', 'preference');
model.result('pg18').feature('glob1').setIndex('expr', 'Z_Test(freq)', 0);
model.result('pg18').feature('glob1').setIndex('unit', ['ohm' ], 0);
model.result('pg18').feature('glob1').setIndex('descr', 'Measured Impedance', 0);
model.result('pg18').feature('glob1').setIndex('expr', 'abs(-cir.V1_v/cir.V1_i)', 1);
model.result('pg18').feature('glob1').setIndex('unit', ['ohm' ], 1);
model.result('pg18').feature('glob1').setIndex('descr', 'COMSOL results', 1);
model.result('pg18').run;
model.result('pg8').run;

model.nodeGroup.create('grp3', 'Results');
model.nodeGroup('grp3').set('type', 'plotgroup');
model.nodeGroup.move('grp3', 2);
model.nodeGroup('grp3').add('plotgroup', 'pg8');
model.nodeGroup('grp3').add('plotgroup', 'pg9');
model.nodeGroup('grp3').add('plotgroup', 'pg10');
model.nodeGroup('grp3').add('plotgroup', 'pg11');
model.nodeGroup('grp3').add('plotgroup', 'pg12');
model.nodeGroup('grp3').add('plotgroup', 'pg13');
model.nodeGroup('grp3').add('plotgroup', 'pg14');
model.nodeGroup('grp3').add('plotgroup', 'pg15');
model.nodeGroup('grp3').add('plotgroup', 'pg16');
model.nodeGroup('grp3').add('plotgroup', 'pg17');
model.nodeGroup('grp3').add('plotgroup', 'pg18');
model.nodeGroup('grp3').label('Postprocessing - Acoustic Analysis');

model.result.create('pg19', 'PlotGroup3D');
model.result('pg19').run;
model.result('pg19').label('Thumbnail');
model.result('pg19').set('data', 'dset6');
model.result('pg19').setIndex('looplevel', 76, 0);
model.result('pg19').set('showlegendsunit', true);
model.result('pg19').set('titletype', 'manual');
model.result('pg19').set('title', 'Surface: Displacement magnitude (mm)');
model.result('pg19').set('paramindicator', 'freq = eval(acpr.freq) Hz');
model.result('pg19').set('edges', false);
model.result('pg19').create('surf1', 'Surface');
model.result('pg19').feature('surf1').label('Shell displacement');
model.result('pg19').feature('surf1').set('expr', 'shell.disp');
model.result('pg19').feature('surf1').set('colorscalemode', 'linear');
model.result('pg19').feature('surf1').set('colortable', 'SpectrumLight');
model.result('pg19').feature('surf1').create('def1', 'Deform');
model.result('pg19').run;
model.result('pg19').feature('surf1').feature('def1').set('expr', {'u2' 'v2' 'w2'});
model.result('pg19').run;
model.result('pg19').feature('surf1').create('filt1', 'Filter');
model.result('pg19').run;
model.result('pg19').feature('surf1').feature('filt1').set('expr', 'x>0');
model.result('pg19').run;
model.result('pg19').create('line1', 'Line');
model.result('pg19').feature('line1').set('expr', '1');
model.result('pg19').feature('line1').set('coloring', 'uniform');
model.result('pg19').feature('line1').set('color', 'black');
model.result('pg19').feature('line1').set('inheritplot', 'surf1');
model.result('pg19').feature('line1').set('inheritcolor', false);
model.result('pg19').feature('line1').set('inheritrange', false);
model.result('pg19').feature('line1').set('inherittubescale', false);
model.result('pg19').feature('line1').create('def1', 'Deform');
model.result('pg19').run;
model.result('pg19').feature('line1').feature('def1').set('expr', {'u2' 'v2' 'w2'});
model.result('pg19').run;
model.result('pg19').feature('line1').create('filt1', 'Filter');
model.result('pg19').run;
model.result('pg19').feature('line1').feature('filt1').set('expr', 'x>0');
model.result('pg19').run;
model.result('pg19').create('surf2', 'Surface');
model.result('pg19').feature('surf2').label('Solid Displacement');
model.result('pg19').feature('surf2').set('expr', 'solid.disp');
model.result('pg19').feature('surf2').set('inheritplot', 'surf1');
model.result('pg19').feature('surf2').create('def1', 'Deform');
model.result('pg19').run;
model.result('pg19').run;
model.result('pg19').feature('surf2').create('filt1', 'Filter');
model.result('pg19').run;
model.result('pg19').feature('surf2').feature('filt1').set('expr', 'x>0');
model.result('pg19').run;
model.result('pg19').feature.duplicate('line2', 'line1');
model.result('pg19').run;
model.result('pg19').run;
model.result('pg19').feature('line2').feature('def1').set('expr', {'u' 'v' 'w'});
model.result('pg19').run;
model.result('pg19').create('slc1', 'Slice');
model.result('pg19').feature('slc1').label('Solid Displacement Section');
model.result('pg19').feature('slc1').set('expr', 'solid.disp');
model.result('pg19').feature('slc1').set('quickxmethod', 'coord');
model.result('pg19').feature('slc1').set('inheritplot', 'surf1');
model.result('pg19').feature('slc1').create('def1', 'Deform');
model.result('pg19').run;
model.result('pg19').run;
model.result('pg19').run;
model.result('pg19').feature('surf1').feature('def1').set('scaleactive', true);
model.result('pg19').feature('surf1').feature('def1').set('scale', 800);
model.result('pg19').run;
model.result('pg19').set('paramindicator', ['freq = eval(acpr.freq) Hz, phase=0' native2unicode(hex2dec({'00' 'b0'}), 'unicode') ]);
model.result('pg19').run;
model.result.dataset('dset6').set('phase', 45);
model.result('pg19').run;
model.result('pg19').set('paramindicator', ['freq = eval(acpr.freq) Hz, phase=45' native2unicode(hex2dec({'00' 'b0'}), 'unicode') ]);
model.result('pg19').run;
model.result.dataset('dset6').set('phase', 90);
model.result('pg19').run;
model.result('pg19').set('paramindicator', ['freq = eval(acpr.freq) Hz, phase=90' native2unicode(hex2dec({'00' 'b0'}), 'unicode') ]);
model.result('pg19').run;
model.result.dataset('dset6').set('phase', 135);
model.result('pg19').run;
model.result('pg19').set('paramindicator', ['freq = eval(acpr.freq) Hz, phase=135' native2unicode(hex2dec({'00' 'b0'}), 'unicode') ]);
model.result('pg19').run;
model.result.dataset('dset6').set('phase', 0);
model.result('pg19').run;
model.result('pg19').set('paramindicator', 'freq = eval(acpr.freq) Hz');
model.result('pg19').run;
model.result('pg19').feature('surf1').feature('def1').set('scaleactive', false);
model.result('pg19').run;
model.result('pg19').run;

model.title('OW Microspeaker: Simulation and Correlation with Measurements');

model.description(['This model analyzes the electromagnetic, mechanical, and acoustical characteristics of the OWS-1943T-8CP (discontinued) speaker. Beside certain details, the geometry, material properties, and measurements are copyright by Ole Wolff.' newline  newline 'Starting from the geometry of the speaker, an axisymmetric electromagnetic model is used to characterize the frequency-dependent response of the voice coil and electromagnetic circuit. This response is included in a 3D model where the vibroacoustic response of the speaker is analyzed and compared with measurements.' newline  newline 'Ole Wolff is recognized worldwide for high-quality transducers, as well as unique design capabilities, which are supplied to a broad range of first-tier companies within the consumer electronics industry.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;

model.label('ow_microspeaker.mph');

model.modelNode.label('Components');

out = model;
