function out = model
%
% cavity_radiation.m
%
% Model exported on May 26 2025, 21:29 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Heat_Transfer_Module/Verification_Examples');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('ht', 'HeatTransfer', 'geom1');
model.physics('ht').model('comp1');
model.physics.create('rad', 'SurfaceToSurfaceRadiation', 'geom1');
model.physics('rad').model('comp1');

model.multiphysics.create('htrad1', 'HeatTransferWithSurfaceToSurfaceRadiation', 'geom1', 1);
model.multiphysics('htrad1').set('Heat_physics', 'ht');
model.multiphysics('htrad1').set('Rad_physics', 'rad');
model.multiphysics('htrad1').selection.all;

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/ht', true);
model.study('std1').feature('stat').setSolveFor('/physics/rad', true);
model.study('std1').feature('stat').setSolveFor('/multiphysics/htrad1', true);

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', [4 1]);
model.geom('geom1').feature('r1').set('pos', [0 -1]);
model.geom('geom1').run('r1');
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').set('size', [1 3]);
model.geom('geom1').feature('r2').set('pos', [4 0]);
model.geom('geom1').run('r2');
model.geom('geom1').create('r3', 'Rectangle');
model.geom('geom1').feature('r3').set('size', [5 1]);
model.geom('geom1').feature('r3').set('rot', 'atan(3/4)[rad]');
model.geom('geom1').run('fin');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').label('Copper');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'400'});
model.material('mat1').propertyGroup('def').set('density', {'8700'});
model.material('mat1').propertyGroup('def').set('heatcapacity', {'385'});

model.physics('ht').feature('init1').set('Tinit', '300[K]');
model.physics('ht').create('hf1', 'HeatFluxBoundary', 1);
model.physics('ht').feature('hf1').selection.set([2]);
model.physics('ht').feature('hf1').set('q0_input', '1000[W/m^2]');
model.physics('ht').create('hf2', 'HeatFluxBoundary', 1);
model.physics('ht').feature('hf2').selection.set([12]);
model.physics('ht').feature('hf2').set('q0_input', '2000[W/m^2]');
model.physics('ht').create('temp1', 'TemperatureBoundary', 1);
model.physics('ht').feature('temp1').selection.set([4]);
model.physics('ht').feature('temp1').set('T0', '300[K]');
model.physics('ht').create('inse1', 'ThermalInsulationEdge', 0);
model.physics('ht').feature('inse1').selection.set([3 6 7]);
model.physics('rad').selection.set([5 6 9]);
model.physics('rad').feature('dsurf1').set('Tamb', '300[K]');
model.physics('rad').feature('dsurf1').set('epsilon_rad_mat', 'userdef');
model.physics('rad').feature('dsurf1').set('epsilon_rad', 0.8);
model.physics('rad').create('dsurf2', 'DiffuseSurface', 1);
model.physics('rad').feature('dsurf2').selection.set([5]);
model.physics('rad').feature('dsurf2').set('Tamb', '300[K]');
model.physics('rad').feature('dsurf2').set('epsilon_rad_mat', 'userdef');
model.physics('rad').feature('dsurf2').set('epsilon_rad', 0.4);
model.physics('rad').create('dsurf3', 'DiffuseSurface', 1);
model.physics('rad').feature('dsurf3').selection.set([9]);
model.physics('rad').feature('dsurf3').set('Tamb', '300[K]');
model.physics('rad').feature('dsurf3').set('epsilon_rad_mat', 'userdef');
model.physics('rad').feature('dsurf3').set('epsilon_rad', 0.6);

model.mesh('mesh1').create('edg1', 'Edge');
model.mesh('mesh1').feature('edg1').selection.geom('geom1');
model.mesh('mesh1').feature('edg1').create('size1', 'Size');
model.mesh('mesh1').feature('edg1').feature('size1').selection.geom('geom1', 1);
model.mesh('mesh1').feature('edg1').feature('size1').selection.set([5 6 9]);
model.mesh('mesh1').feature('edg1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('edg1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('edg1').feature('size1').set('hmax', 0.05);
model.mesh('mesh1').feature('edg1').create('size2', 'Size');
model.mesh('mesh1').feature('edg1').feature('size2').selection.geom('geom1', 0);
model.mesh('mesh1').feature('edg1').feature('size2').selection.set([3 6 7]);
model.mesh('mesh1').feature('edg1').feature('size2').set('custom', true);
model.mesh('mesh1').feature('edg1').feature('size2').set('hmaxactive', true);
model.mesh('mesh1').feature('edg1').feature('size2').set('hmax', 0.01);
model.mesh('mesh1').run('edg1');
model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').set('method', 'af');
model.mesh('mesh1').run;

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_rad_dsurf2_Jd_band').set('scalemethod', 'init');
model.sol('sol1').feature('v1').feature('comp1_rad_dsurf2_Ju_band').set('scalemethod', 'init');
model.sol('sol1').feature('v1').feature('comp1_rad_dsurf3_Ju_band').set('scalemethod', 'init');
model.sol('sol1').feature('v1').feature('comp1_rad_dsurf3_Jd_band').set('scalemethod', 'init');
model.sol('sol1').feature('v1').feature('comp1_rad_dsurf1_Jd_band').set('scalemethod', 'init');
model.sol('sol1').feature('v1').feature('comp1_rad_dsurf1_Ju_band').set('scalemethod', 'init');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('se1', 'Segregated');
model.sol('sol1').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_T'});
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subdamp', 0.8);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, heat transfer variables (ht) (Merged)');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').label('Temperature');
model.sol('sol1').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_rad_dsurf1_Ju_band' 'comp1_rad_dsurf1_Jd_band' 'comp1_rad_dsurf2_Ju_band' 'comp1_rad_dsurf2_Jd_band' 'comp1_rad_dsurf3_Ju_band' 'comp1_rad_dsurf3_Jd_band'});
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subdamp', 0.8);
model.sol('sol1').feature('s1').create('d2', 'Direct');
model.sol('sol1').feature('s1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d2').label('Direct, radiation variables');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').label('Radiosity');
model.sol('sol1').feature('s1').feature('se1').set('segtermonres', 'off');
model.sol('sol1').feature('s1').feature('se1').set('ntolfact', 0.1);
model.sol('sol1').feature('s1').feature('se1').set('segstabacc', 'segaacc');
model.sol('sol1').feature('s1').feature('se1').set('segaaccdim', 10);
model.sol('sol1').feature('s1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol1').feature('s1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.T 0 ');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i1').label('AMG, radiation variables (rad)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').create('i2', 'Iterative');
model.sol('sol1').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i2').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i2').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i2').label('GMG, radiation variables (rad)');
model.sol('sol1').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('prefun', 'gmg');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('mcasegen', 'any');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').create('i3', 'Iterative');
model.sol('sol1').feature('s1').feature('i3').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i3').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i3').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i3').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i3').set('maxlinit', 10000);
model.sol('sol1').feature('s1').feature('i3').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i3').label('AMG, heat transfer variables (ht)');
model.sol('sol1').feature('s1').feature('i3').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').label('Temperature (ht)');
model.result('pg1').set('data', 'dset1');
model.result('pg1').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pg2');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('solutionparams', 'parent');
model.result('pg1').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').label('Surface Radiosity (rad)');
model.result('pg2').set('data', 'dset1');
model.result('pg2').set('defaultPlotID', 'rad/RAD_PhysicsInterfaces/icom1/pdef1/pcond2/pg1');
model.result('pg2').feature.create('line1', 'Line');
model.result('pg2').feature('line1').label('Upside Radiosity');
model.result('pg2').feature('line1').set('showsolutionparams', 'on');
model.result('pg2').feature('line1').set('expr', 'rad.Ju');
model.result('pg2').feature('line1').set('linetype', 'tube');
model.result('pg2').feature('line1').set('smooth', 'internal');
model.result('pg2').feature('line1').set('inheritdeformscale', false);
model.result('pg2').feature('line1').set('showsolutionparams', 'on');
model.result('pg2').feature('line1').set('data', 'parent');
model.result('pg2').feature('line1').feature.create('def1', 'Deform');
model.result('pg2').feature('line1').feature('def1').set('expr', {'nx/sqrt(tremetric)' 'ny/sqrt(tremetric)'});
model.result('pg2').feature('line1').feature('def1').set('scale', '0.1');
model.result('pg2').feature.create('line2', 'Line');
model.result('pg2').feature('line2').label('Downside Radiosity');
model.result('pg2').feature('line2').set('showsolutionparams', 'on');
model.result('pg2').feature('line2').set('expr', 'rad.Jd');
model.result('pg2').feature('line2').set('linetype', 'tube');
model.result('pg2').feature('line2').set('smooth', 'internal');
model.result('pg2').feature('line2').set('showsolutionparams', 'on');
model.result('pg2').feature('line2').set('data', 'parent');
model.result('pg2').feature('line2').set('inheritplot', 'line1');
model.result('pg2').feature('line2').feature.create('def1', 'Deform');
model.result('pg2').feature('line2').feature('def1').set('expr', {'-nx/sqrt(tremetric)' '-ny/sqrt(tremetric)'});
model.result('pg1').run;
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('Temperature Profile vs. Arc Length');
model.result('pg3').create('lngr1', 'LineGraph');
model.result('pg3').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg3').feature('lngr1').set('linewidth', 'preference');
model.result('pg3').feature('lngr1').selection.set([6]);
model.result('pg3').feature('lngr1').set('xdata', 'reversedarc');
model.result('pg3').run;
model.result('pg3').run;
model.result.duplicate('pg4', 'pg3');
model.result('pg4').run;
model.result('pg4').label('Surface Radiosity Profile vs. Arc Length');
model.result('pg4').run;
model.result('pg4').feature('lngr1').set('expr', 'rad.J');
model.result('pg4').feature('lngr1').set('descr', 'Surface radiosity');
model.result('pg4').run;
model.result.numerical.create('int1', 'IntLine');
model.result.numerical('int1').set('intsurface', true);
model.result.numerical('int1').selection.set([5]);
model.result.numerical('int1').set('expr', {'ht.ndflux'});
model.result.numerical('int1').set('descr', {'Normal conductive heat flux'});
model.result.numerical('int1').set('unit', {'W/m'});
model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').comments('Line Integration 1');
model.result.numerical('int1').set('table', 'tbl1');
model.result.numerical('int1').setResult;
model.result.numerical.create('int2', 'IntLine');
model.result.numerical('int2').set('intsurface', true);
model.result.numerical('int2').selection.set([9]);
model.result.numerical('int2').setIndex('expr', 'T/3', 0);
model.result.table.create('tbl2', 'Table');
model.result.table('tbl2').comments('Line Integration 2');
model.result.numerical('int2').set('table', 'tbl2');
model.result.numerical('int2').setResult;
model.result.numerical.create('int3', 'IntLine');
model.result.numerical('int3').set('intsurface', true);
model.result.numerical('int3').selection.set([6]);
model.result.numerical('int3').setIndex('expr', 'T/5', 0);
model.result.table.create('tbl3', 'Table');
model.result.table('tbl3').comments('Line Integration 3');
model.result.numerical('int3').set('table', 'tbl3');
model.result.numerical('int3').setResult;
model.result('pg1').run;

model.title('Radiation in a Cavity');

model.description('Three surfaces form a cavity. Heat flux is set at two outer boundaries, while temperature is set on the third outer boundary. The results of this example can be compared to theoretical results.');

model.label('cavity_radiation.mph');

model.modelNode.label('Components');

out = model;
