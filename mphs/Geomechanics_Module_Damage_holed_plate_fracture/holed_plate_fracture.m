function out = model
%
% holed_plate_fracture.m
%
% Model exported on May 26 2025, 21:28 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Geomechanics_Module/Damage');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/solid', true);

model.param.set('height', '120[mm]');
model.param.descr('height', 'Plate height');
model.param.set('width', '65[mm]');
model.param.descr('width', 'Plate width');
model.param.set('notchHeight', '0.5[mm]');
model.param.descr('notchHeight', 'Notch height');
model.param.set('notchWidth', '10[mm]');
model.param.descr('notchWidth', 'Notch width');
model.param.set('notchLocation', '65[mm]');
model.param.descr('notchLocation', 'Notch location');
model.param.set('holeRadius', '10[mm]');
model.param.descr('holeRadius', 'Hole radius');
model.param.set('holeX', '36.5[mm]');
model.param.descr('holeX', 'Hole center, x-coordinate');
model.param.set('holeY', '51[mm]');
model.param.descr('holeY', 'Hole center, y-coordinate');
model.param.set('elemSize', '0.25[mm]');
model.param.descr('elemSize', 'Mesh element size');
model.param.set('para', '0');
model.param.descr('para', 'Load parameter');

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', {'width' 'height'});
model.geom('geom1').run('r1');
model.geom('geom1').create('c1', 'Circle');
model.geom('geom1').feature('c1').set('r', 'holeRadius');
model.geom('geom1').feature('c1').set('pos', {'holeX' 'holeY'});
model.geom('geom1').run('c1');
model.geom('geom1').create('c2', 'Circle');
model.geom('geom1').feature('c2').set('r', '5[mm]');
model.geom('geom1').feature('c2').set('pos', {'20[mm]' '20[mm]'});
model.geom('geom1').run('c2');
model.geom('geom1').create('c3', 'Circle');
model.geom('geom1').feature('c3').set('r', '5[mm]');
model.geom('geom1').feature('c3').set('pos', {'20[mm]' 'height-20[mm]'});
model.geom('geom1').run('c3');
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').set('size', {'notchWidth' 'notchHeight'});
model.geom('geom1').feature('r2').set('pos', {'0' 'notchLocation-notchHeight/2'});
model.geom('geom1').run('r2');
model.geom('geom1').create('dif1', 'Difference');
model.geom('geom1').feature('dif1').selection('input').set({'r1'});
model.geom('geom1').feature('dif1').selection('input2').set({'c1' 'c2' 'c3' 'r2'});
model.geom('geom1').run('dif1');
model.geom('geom1').create('ls1', 'LineSegment');
model.geom('geom1').feature('ls1').set('specify1', 'coord');
model.geom('geom1').feature('ls1').set('coord1', {'width' 'holeY+elemSize*12'});
model.geom('geom1').feature('ls1').set('specify2', 'coord');
model.geom('geom1').feature('ls1').set('coord2', {'holeX' 'holeY+elemSize*5'});
model.geom('geom1').feature.duplicate('ls2', 'ls1');
model.geom('geom1').feature('ls2').set('coord1', {'width' 'holeY-elemSize*12'});
model.geom('geom1').feature('ls2').set('coord2', {'holeX' 'holeY-elemSize*5'});
model.geom('geom1').run('ls2');
model.geom('geom1').create('pol1', 'Polygon');
model.geom('geom1').feature('pol1').set('source', 'table');
model.geom('geom1').feature('pol1').set('type', 'open');
model.geom('geom1').feature('pol1').setIndex('table', 'holeX', 0, 0);
model.geom('geom1').feature('pol1').setIndex('table', 'holeY', 0, 1);
model.geom('geom1').feature('pol1').setIndex('table', 'holeX', 1, 0);
model.geom('geom1').feature('pol1').setIndex('table', 'notchLocation+elemSize*12', 1, 1);
model.geom('geom1').feature('pol1').setIndex('table', 'notchWidth*3/4', 2, 0);
model.geom('geom1').feature('pol1').setIndex('table', 'notchLocation+elemSize*12', 2, 1);
model.geom('geom1').feature('pol1').setIndex('table', 'notchWidth*3/4', 3, 0);
model.geom('geom1').feature('pol1').setIndex('table', 'notchLocation+notchHeight/2', 3, 1);
model.geom('geom1').run('pol1');
model.geom('geom1').create('pol2', 'Polygon');
model.geom('geom1').feature('pol2').set('source', 'table');
model.geom('geom1').feature('pol2').set('type', 'open');
model.geom('geom1').feature('pol2').setIndex('table', 'notchWidth*3/4', 0, 0);
model.geom('geom1').feature('pol2').setIndex('table', 'notchLocation-notchHeight/2', 0, 1);
model.geom('geom1').feature('pol2').setIndex('table', 'notchWidth*3/4', 1, 0);
model.geom('geom1').feature('pol2').setIndex('table', 'notchLocation-elemSize*5', 1, 1);
model.geom('geom1').feature('pol2').setIndex('table', 'holeX+holeRadius', 2, 0);
model.geom('geom1').feature('pol2').setIndex('table', 'holeY', 2, 1);
model.geom('geom1').run('pol2');
model.geom('geom1').create('uni1', 'Union');
model.geom('geom1').feature('uni1').selection('input').set({'dif1' 'ls1' 'ls2' 'pol1' 'pol2'});
model.geom('geom1').run('uni1');
model.geom('geom1').create('del1', 'Delete');
model.geom('geom1').feature('del1').selection('input').set('uni1', [14 15 16 17 18 19 20 22 23]);
model.geom('geom1').run('fin');
model.geom('geom1').create('mcd1', 'MeshControlDomains');
model.geom('geom1').feature('mcd1').selection('input').set('fin', [3 4]);
model.geom('geom1').run('mcd1');

model.physics('solid').prop('Type2D').set('Type2D', 'PlaneStress');
model.physics('solid').prop('d').set('d', '1[mm]');
model.physics('solid').feature('lemm1').create('dmg1', 'Damage', 2);
model.physics('solid').feature('lemm1').feature('dmg1').set('ModelType', 'PhaseFieldDmg');
model.physics('solid').feature('lemm1').feature('dmg1').set('lint_ph', '0.25[mm]');
model.physics('solid').create('rig1', 'RigidConnector', 1);
model.physics('solid').feature('rig1').selection.set([9 10 13 14]);
model.physics('solid').feature('rig1').setIndex('Direction', true, 0);
model.physics('solid').feature('rig1').setIndex('Direction', true, 1);
model.physics('solid').feature('rig1').set('WeakConstraints', true);
model.physics('solid').feature.duplicate('rig2', 'rig1');
model.physics('solid').feature('rig2').selection.set([11 12 15 16]);
model.physics('solid').feature('rig2').setIndex('U0', 'para*2[mm]', 1);

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat1').propertyGroup('Enu').set('E', {'6[GPa]'});
model.material('mat1').propertyGroup('Enu').set('nu', {'0.22'});
model.material('mat1').propertyGroup('def').set('density', {'2000'});
model.material('mat1').propertyGroup.create('PhaseFieldDamage', 'Phase_field_damage');
model.material('mat1').propertyGroup('PhaseFieldDamage').set('Gc', {'2280[J/m^2]'});

model.mesh('mesh1').create('fq1', 'FreeQuad');
model.mesh('mesh1').feature('fq1').create('size1', 'Size');
model.mesh('mesh1').feature('fq1').feature('size1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('fq1').feature('size1').selection.set([2 4]);
model.mesh('mesh1').feature('fq1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('fq1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('fq1').feature('size1').set('hmax', 'elemSize');
model.mesh('mesh1').feature('size').set('hmax', 0.0075);
model.mesh('mesh1').feature('size').set('hgrad', 2);
model.mesh('mesh1').run;

model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 'height', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'm', 0);
model.study('std1').feature('stat').setIndex('pname', 'height', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'm', 0);
model.study('std1').feature('stat').setIndex('pname', 'para', 0);
model.study('std1').feature('stat').setIndex('plistarr', 'range(0,0.01,1)', 0);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_rig1_RF').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_rig2_RF').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_rot').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_wZ').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_phic').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_disp').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_rot').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_disp').set('scaleval', '0.001364734406395618');
model.sol('sol1').feature('v1').feature('comp1_solid_rig1_RF').set('scaleval', '1e8*(0.1*0.1364734406395618)^2');
model.sol('sol1').feature('v1').feature('comp1_solid_rig2_RF').set('scaleval', '1e8*(0.1*0.1364734406395618)^2');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_rot').set('scaleval', '0.01');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.1364734406395618');
model.sol('sol1').feature('v1').feature('comp1_solid_wZ').set('scaleval', '1e-2');
model.sol('sol1').feature('v1').feature('comp1_solid_phic').set('scaleval', '1');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s1').set('control', 'stat');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('se1', 'Segregated');
model.sol('sol1').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_u' 'comp1_solid_wZ' 'comp1_solid_rig1_RF' 'comp1_solid_rig_disp' 'comp1_solid_rig_rot' 'comp1_solid_rig2_RF'});
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subdtech', 'const');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subjtech', 'onevery');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subtermauto', 'tol');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subtermconst', 'tol');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('maxsubiter', 8);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subntolfact', 1);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subtermonres', 'auto');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').label('Solid Mechanics');
model.sol('sol1').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_solid_phic'});
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subdtech', 'const');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subjtech', 'onevery');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subtermauto', 'tol');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subtermconst', 'tol');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('maxsubiter', 8);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subntolfact', 1);
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('subtermonres', 'auto');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').label('Crack Phase Field');
model.sol('sol1').feature('s1').feature('se1').feature.move('ss1', 1);
model.sol('sol1').feature('s1').feature('se1').set('segterm', 'itertol');
model.sol('sol1').feature('s1').feature('se1').set('segiter', 1);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('s1').feature('p1').set('paramtuning', true);
model.sol('sol1').feature('s1').feature('p1').set('pmaxstep', 0.0025);
model.sol('sol1').feature('s1').feature('p1').set('pinitstep', 0.0025);
model.sol('sol1').feature('s1').feature('se1').set('segiter', 3);
model.sol('sol1').runFromTo('st1', 'v1');

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 1, 0);
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('surf1').set('threshold', 'manual');
model.result('pg1').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg1').feature('surf1').set('colortable', 'Rainbow');
model.result('pg1').feature('surf1').set('colortabletrans', 'none');
model.result('pg1').feature('surf1').set('colorscalemode', 'linear');
model.result('pg1').feature('surf1').set('resolution', 'normal');
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg1').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg1').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg1').run;
model.result('pg1').set('edges', false);
model.result('pg1').run;
model.result('pg1').feature('surf1').set('expr', 'solid.sdp1Gp');
model.result('pg1').feature('surf1').set('unit', 'MPa');
model.result('pg1').run;
model.result('pg1').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg1').feature('surf1').feature('def').set('scale', 1);
model.result('pg1').run;
model.result('pg1').create('line1', 'Line');
model.result('pg1').feature('line1').set('expr', '1');
model.result('pg1').feature('line1').set('coloring', 'uniform');
model.result('pg1').feature('line1').set('color', 'black');
model.result('pg1').feature('line1').set('inheritplot', 'surf1');
model.result('pg1').feature('line1').set('inheritcolor', false);
model.result('pg1').feature('line1').set('inheritrange', false);
model.result('pg1').feature('line1').create('def1', 'Deform');
model.result('pg1').run;

model.study('std1').feature('stat').set('plot', true);
model.study('std1').feature('stat').set('probefreq', 'psteps');

model.sol('sol1').runAll;

model.result('pg1').run;
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').run;
model.result('pg2').label('Crack Phase Field');
model.result('pg2').set('titletype', 'label');
model.result('pg2').set('edges', false);
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', 'solid.phic');
model.result('pg2').feature('surf1').set('colortable', 'RainbowLight');
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').run;
model.result('pg3').label('Crack Trajectory');
model.result('pg3').set('titletype', 'label');
model.result('pg3').set('edges', false);
model.result('pg3').set('showlegendsunit', true);
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', '1');
model.result('pg3').feature('surf1').set('coloring', 'uniform');
model.result('pg3').feature('surf1').set('color', 'gray');
model.result('pg3').feature('surf1').create('def1', 'Deform');
model.result('pg3').run;
model.result('pg3').feature('surf1').feature('def1').set('scaleactive', true);
model.result('pg3').feature('surf1').feature('def1').set('scale', 1);
model.result('pg3').run;
model.result('pg3').feature('surf1').create('filt1', 'Filter');
model.result('pg3').run;
model.result('pg3').feature('surf1').feature('filt1').set('expr', 'solid.phic<0.6');
model.result('pg3').run;
model.result('pg3').create('line1', 'Line');
model.result('pg3').feature('line1').set('expr', '1');
model.result('pg3').feature('line1').set('coloring', 'uniform');
model.result('pg3').feature('line1').set('color', 'black');
model.result('pg3').feature('line1').set('inheritplot', 'surf1');
model.result('pg3').feature('line1').set('inheritcolor', false);
model.result('pg3').feature('line1').set('inheritrange', false);
model.result('pg3').feature('line1').create('def1', 'Deform');
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').feature('line1').create('filt1', 'Filter');
model.result('pg3').run;
model.result('pg3').feature('line1').feature('filt1').set('expr', 'solid.phic<0.6');
model.result('pg3').run;
model.result('pg3').create('con1', 'Contour');
model.result('pg3').feature('con1').set('expr', 'solid.sdp1Gp');
model.result('pg3').feature('con1').set('unit', 'MPa');
model.result('pg3').feature('con1').set('levelmethod', 'levels');
model.result('pg3').feature('con1').set('levels', 'range(30,10,80)');
model.result('pg3').feature('con1').set('inheritplot', 'surf1');
model.result('pg3').feature('con1').set('inheritcolor', false);
model.result('pg3').feature('con1').set('inheritrange', false);
model.result('pg3').feature('con1').create('def1', 'Deform');
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').feature('con1').create('filt1', 'Filter');
model.result('pg3').run;
model.result('pg3').feature('con1').feature('filt1').set('expr', 'solid.phic<0.9');
model.result('pg3').feature('con1').feature('filt1').set('nodespec', 'all');
model.result('pg3').run;
model.result('pg3').create('pttraj1', 'PointTrajectories');
model.result('pg3').feature('pttraj1').set('expr', {'solid.xcx_rig1' 'solid.xcy_rig1'});
model.result('pg3').feature('pttraj1').set('linetype', 'none');
model.result('pg3').feature('pttraj1').set('pointtype', 'arrow');
model.result('pg3').feature('pttraj1').set('arrowexpr', {'solid.rig1.RFx' 'solid.rig1.RFy'});
model.result('pg3').feature('pttraj1').set('arrowscaleactive', true);
model.result('pg3').feature('pttraj1').set('arrowscale', '4E-5');
model.result('pg3').feature('pttraj1').set('inheritplot', 'surf1');
model.result('pg3').feature('pttraj1').create('def1', 'Deform');
model.result('pg3').run;
model.result('pg3').feature('pttraj1').feature('def1').set('expr', {'solid.rig1.u' '0'});
model.result('pg3').feature('pttraj1').feature('def1').setIndex('expr', 'solid.rig1.v', 1);
model.result('pg3').run;
model.result('pg3').feature.duplicate('pttraj2', 'pttraj1');
model.result('pg3').run;
model.result('pg3').feature('pttraj2').setIndex('expr', 'solid.xcx_rig2', 0);
model.result('pg3').feature('pttraj2').setIndex('expr', 'solid.xcy_rig2', 1);
model.result('pg3').feature('pttraj2').setIndex('arrowexpr', 'solid.rig2.RFx', 0);
model.result('pg3').feature('pttraj2').setIndex('arrowexpr', 'solid.rig2.RFy', 1);
model.result('pg3').feature('pttraj2').set('inheritplot', 'pttraj1');
model.result('pg3').run;
model.result('pg3').feature('pttraj2').feature('def1').setIndex('expr', 'solid.rig2.u', 0);
model.result('pg3').feature('pttraj2').feature('def1').setIndex('expr', 'solid.rig2.v', 1);
model.result('pg3').run;
model.result.export.create('anim1', 'Animation');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('plotgroup', 'pg3');
model.result.export('anim1').run;
model.result.export('anim1').set('framesel', 'all');
model.result.export('anim1').run;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Load vs');
model.result('pg4').label('Load vs. Displacement');
model.result('pg4').set('titletype', 'label');
model.result('pg4').set('xlabelactive', true);
model.result('pg4').set('xlabel', 'Displacement (mm)');
model.result('pg4').set('ylabelactive', true);
model.result('pg4').set('ylabel', 'Load (kN)');
model.result('pg4').create('glob1', 'Global');
model.result('pg4').feature('glob1').set('markerpos', 'datapoints');
model.result('pg4').feature('glob1').set('linewidth', 'preference');
model.result('pg4').feature('glob1').setIndex('expr', 'solid.rig2.RFy', 0);
model.result('pg4').feature('glob1').set('xdata', 'expr');
model.result('pg4').feature('glob1').setIndex('unit', 'kN', 0);
model.result('pg4').feature('glob1').set('xdataexpr', 'solid.rig2.v');
model.result('pg4').feature('glob1').set('xdataunit', 'mm');
model.result('pg4').feature('glob1').set('linewidth', 2);
model.result('pg4').feature('glob1').set('legend', false);
model.result('pg3').run;
model.result('pg3').setIndex('looplevel', 88, 0);
model.result('pg3').setIndex('looplevel', 101, 0);
model.result('pg2').run;
model.result('pg2').run;

model.title('Brittle Fracture of a Holed Plate');

model.description('In this example, the brittle fracture of a holed plate with a notch is modeled using a phase-field damage model. The geometry of the plate is set up so that a mixed-mode fracture is induced, with dimensions and material properties taken from experimental data. The example shows how to set up an efficient and stable solver configuration for this type of problems.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;

model.label('holed_plate_fracture.mph');

model.modelNode.label('Components');

out = model;
