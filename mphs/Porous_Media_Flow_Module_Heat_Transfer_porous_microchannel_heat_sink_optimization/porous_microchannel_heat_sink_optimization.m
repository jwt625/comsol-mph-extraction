function out = model
%
% porous_microchannel_heat_sink_optimization.m
%
% Model exported on May 26 2025, 21:32 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Porous_Media_Flow_Module/Heat_Transfer');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('ht', 'HeatTransferInSolidsAndFluids', 'geom1');
model.physics('ht').model('comp1');
model.physics('ht').prop('ShapeProperty').set('order_temperature', '1');
model.physics.create('spf', 'LaminarFlow', 'geom1');
model.physics('spf').model('comp1');
model.physics('spf').prop('AdvancedSettingProperty').set('UsePseudoTime', '1');
model.physics('spf').prop('PhysicalModelProperty').set('Compressibility', 'WeaklyCompressible');

model.multiphysics.create('nitf1', 'NonIsothermalFlow', 'geom1', 3);
model.multiphysics('nitf1').set('Fluid_physics', 'spf');
model.multiphysics('nitf1').set('Heat_physics', 'ht');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').set('solnum', 'auto');
model.study('std1').feature('stat').set('notsolnum', 'auto');
model.study('std1').feature('stat').set('outputmap', {});
model.study('std1').feature('stat').set('ngenAUX', '1');
model.study('std1').feature('stat').set('goalngenAUX', '1');
model.study('std1').feature('stat').set('ngenAUX', '1');
model.study('std1').feature('stat').set('goalngenAUX', '1');
model.study('std1').feature('stat').setSolveFor('/physics/ht', true);
model.study('std1').feature('stat').setSolveFor('/physics/spf', true);
model.study('std1').feature('stat').setSolveFor('/multiphysics/nitf1', true);
model.study('std1').feature('stat').setSolveFor('/physics/ht', false);
model.study('std1').feature('stat').setSolveFor('/multiphysics/nitf1', false);
model.study('std1').create('stat2', 'Stationary');
model.study('std1').feature('stat2').set('solnum', 'auto');
model.study('std1').feature('stat2').set('notsolnum', 'auto');
model.study('std1').feature('stat2').set('outputmap', {});
model.study('std1').feature('stat2').set('ngenAUX', '1');
model.study('std1').feature('stat2').set('goalngenAUX', '1');
model.study('std1').feature('stat2').set('ngenAUX', '1');
model.study('std1').feature('stat2').set('goalngenAUX', '1');
model.study('std1').feature('stat2').setSolveFor('/physics/ht', true);
model.study('std1').feature('stat2').setSolveFor('/physics/spf', true);
model.study('std1').feature('stat2').setSolveFor('/multiphysics/nitf1', true);
model.study('std1').feature('stat2').setSolveFor('/physics/spf', false);

model.geom('geom1').insertFile('porous_microchannel_heat_sink_geom_sequence.mph', 'geom1');
model.geom('geom1').run('adjsel2');

model.param.label('Geometry Parameters');
model.param.create('par2');
model.param('par2').label('Material Properties and Operating Conditions');
model.param('par2').set('rho_f', '998[kg/m^3]');
model.param('par2').descr('rho_f', 'Density, fluid');
model.param('par2').set('mu_f', '8.55e-4[Pa*s]');
model.param('par2').descr('mu_f', 'Viscosity, fluid');
model.param('par2').set('k_f', '0.6[W/(m*K)]');
model.param('par2').descr('k_f', 'Thermal conductivity, fluid');
model.param('par2').set('Cp_f', '4182[J/(kg*K)]');
model.param('par2').descr('Cp_f', 'Heat capacity, fluid');
model.param('par2').set('por', '0.404');
model.param('par2').descr('por', 'Porosity');
model.param('par2').set('d_p', '20[um]');
model.param('par2').descr('d_p', 'Pore size');
model.param('par2').set('kappa', 'd_p^2/150*por^3/(1-por)^2');
model.param('par2').descr('kappa', 'Permeability');
model.param('par2').set('q_in', '50[W/cm^2]');
model.param('par2').descr('q_in', 'Heat load');
model.param('par2').set('T_in', '300[K]');
model.param('par2').descr('T_in', 'Inlet temperature');
model.param('par2').set('u_in', '0.2[m/s]');
model.param('par2').descr('u_in', 'Inlet velocity');

model.material.create('mat1', 'Common', '');
model.material('mat1').label('Water');
model.material.create('mat2', 'Common', '');
model.material('mat2').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat2').label('Steel AISI 4340');
model.material('mat2').set('family', 'steel');
model.material('mat2').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('electricconductivity', {'4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]'});
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]'});
model.material('mat2').propertyGroup('def').set('heatcapacity', '475[J/(kg*K)]');
model.material('mat2').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('density', '7850[kg/m^3]');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]'});
model.material('mat2').propertyGroup('Enu').set('E', '205[GPa]');
model.material('mat2').propertyGroup('Enu').set('nu', '0.28');
model.material.create('matlnk1', 'Link', 'comp1');
model.material.create('matlnk2', 'Link', 'comp1');
model.material('matlnk2').set('link', 'mat2');
model.material('matlnk2').selection.named('geom1_sel1');
model.material.create('pmat1', 'PorousMedia', 'comp1');
model.material('pmat1').selection.named('geom1_sel2');

model.physics('ht').create('porous1', 'PorousMediumHeatTransferModel', 3);
model.physics('ht').feature('porous1').selection.named('geom1_sel2');
model.physics('ht').feature('porous1').feature('pm1').set('porousMatrixPropertiesType', 'solidPhaseProperties');
model.physics('spf').prop('PhysicalModelProperty').set('Compressibility', 'Incompressible');
model.physics('spf').prop('PhysicalModelProperty').set('EnablePorousMediaDomains', true);
model.physics('spf').selection.named('geom1_unisel1');
model.physics('spf').create('porous1', 'PorousMedium', 3);
model.physics('spf').feature('porous1').selection.named('geom1_sel2');
model.physics('spf').feature('porous1').set('flowModelType', 'nonDarcian');
model.physics('spf').feature('porous1').feature('pm1').set('kappa_mat', 'userdef');
model.physics('spf').feature('porous1').feature('pm1').set('kappa', {'kappa' '0' '0' '0' 'kappa' '0' '0' '0' 'kappa'});
model.physics('ht').feature('fluid1').selection.named('geom1_unisel1');

model.material('pmat1').feature.create('fluid1', 'Fluid', 'comp1');
model.material('pmat1').feature.create('solid1', 'Solid', 'comp1');
model.material('pmat1').feature('solid1').set('link', 'mat2');
model.material('pmat1').feature('solid1').set('vfrac', '1-por');
model.material('pmat1').set('linkBase', 'mat1');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'k_f'});
model.material('mat1').propertyGroup('def').set('density', {'rho_f'});
model.material('mat1').propertyGroup('def').set('heatcapacity', {'Cp_f'});
model.material('mat1').propertyGroup('def').set('dynamicviscosity', {'mu_f'});

model.physics('ht').create('bhs1', 'BoundaryHeatSource', 2);
model.physics('ht').feature('bhs1').selection.set([3]);
model.physics('ht').feature('bhs1').set('Qb_input', 'q_in');
model.physics('ht').create('ifl1', 'Inflow', 2);
model.physics('ht').feature('ifl1').selection.named('geom1_sel4');
model.physics('ht').feature('ifl1').set('Tustr', 'T_in');
model.physics('ht').create('ofl1', 'ConvectiveOutflow', 2);
model.physics('ht').feature('ofl1').selection.named('geom1_sel5');
model.physics('ht').create('sym1', 'Symmetry', 2);
model.physics('ht').feature('sym1').selection.named('geom1_sel3');
model.physics('spf').create('inl1', 'InletBoundary', 2);
model.physics('spf').feature('inl1').selection.named('geom1_sel4');
model.physics('spf').feature('inl1').set('BoundaryCondition', 'FullyDevelopedFlow');
model.physics('spf').feature('inl1').set('Uavfdf', 'u_in');
model.physics('spf').create('out1', 'OutletBoundary', 2);
model.physics('spf').feature('out1').selection.named('geom1_sel5');
model.physics('spf').create('sym1', 'Symmetry', 2);
model.physics('spf').feature('sym1').selection.named('geom1_sel3');

model.cpl.create('aveop1', 'Average', 'geom1');
model.cpl('aveop1').set('axisym', true);
model.cpl('aveop1').selection.geom('geom1', 2);
model.cpl('aveop1').selection.named('geom1_sel4');
model.cpl('aveop1').label('Average: Inlet');
model.cpl.create('aveop2', 'Average', 'geom1');
model.cpl('aveop2').set('axisym', true);
model.cpl('aveop2').selection.geom('geom1', 1);
model.cpl('aveop2').selection.set([2]);
model.cpl('aveop2').label('Average: Centerline, Bottom Surface');

model.variable.create('var1');
model.variable('var1').model('comp1');

% To import content from file, use:
% model.variable('var1').loadFile('FILENAME');
model.variable('var1').set('Dh', '2*width_channel*height_channel/(width_channel+height_channel)', 'Hydraulic diameter');
model.variable('var1').set('dp', 'aveop1(p)', 'Pressure drop');
model.variable('var1').set('Tw', 'aveop2(T)', 'Average wall temperature');
model.variable('var1').set('Omega', 'spf.out1.Mflow/rho_f*dp', 'Pumping power');
model.variable('var1').set('h_mchs', 'q_in/(Tw-T_in)', 'Heat transfer coefficient');
model.variable('var1').set('Nu', 'h_mchs*Dh/k_f', 'Nusselt number');
model.variable('var1').set('Re', 'rho_f*u_in*Dh/mu_f', 'Reynolds number');

model.mesh('mesh1').autoMeshSize(3);
model.mesh('mesh1').automatic(false);
model.mesh('mesh1').run('cr1');
model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.named('geom1_sel4');
model.mesh('mesh1').run('ftri1');
model.mesh('mesh1').feature.remove('ftet1');
model.mesh('mesh1').feature('bl1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('bl1').selection.named('geom1_sel4');
model.mesh('mesh1').feature('bl1').feature('blp1').selection.set([6 9 21 23 27]);
model.mesh('mesh1').run('bl1');
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe1').selection.named('geom1_unisel1');
model.mesh('mesh1').run('swe1');
model.mesh('mesh1').create('swe2', 'Sweep');
model.mesh('mesh1').feature('swe2').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe2').feature('dis1').set('numelem', 2);
model.mesh('mesh1').run;

model.study('std1').feature('stat').set('useadvanceddisable', true);
model.study('std1').feature('stat').set('disabledphysics', {'spf/porous1'});
model.study('std1').feature('stat2').set('useadvanceddisable', true);
model.study('std1').feature('stat2').set('disabledphysics', {'spf/porous1'});
model.study('std1').feature('stat').set('disabledphysics', {'spf/porous1' 'ht/porous1'});
model.study('std1').feature('stat2').set('disabledphysics', {'spf/porous1' 'ht/porous1'});
model.study('std1').label('Study 1: Reference MCHS');

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([2 3]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([2 3]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'stat2');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'stat2');
model.sol('sol1').create('s2', 'Stationary');
model.sol('sol1').feature('s2').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s2').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s2').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s2').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').feature('d1').label('Direct, heat transfer variables (ht) (nitf1)');
model.sol('sol1').feature('s2').create('i1', 'Iterative');
model.sol('sol1').feature('s2').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s2').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s2').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s2').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s2').feature('i1').set('maxlinit', 10000);
model.sol('sol1').feature('s2').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s2').feature('i1').label('AMG, heat transfer variables (ht) (nitf1)');
model.sol('sol1').feature('s2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s2').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s2').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s2').feature.remove('fcDef');
model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol1').feature('v2').set('solnum', 'auto');
model.sol('sol1').feature('v2').set('solvertype', 'solnum');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').label('Temperature (ht)');
model.result('pg1').set('data', 'dset1');
model.result('pg1').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond3/pcond3/pg1');
model.result('pg1').feature.create('vol1', 'Volume');
model.result('pg1').feature('vol1').set('showsolutionparams', 'on');
model.result('pg1').feature('vol1').set('solutionparams', 'parent');
model.result('pg1').feature('vol1').set('colortable', 'HeatCameraLight');
model.result('pg1').feature('vol1').set('smooth', 'internal');
model.result('pg1').feature('vol1').set('showsolutionparams', 'on');
model.result('pg1').feature('vol1').set('data', 'parent');
model.result.dataset('dset1').set('geom', 'geom1');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Velocity (spf)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('data', 'dset1');
model.result('pg2').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pg1');
model.result('pg2').feature.create('slc1', 'Slice');
model.result('pg2').feature('slc1').label('Slice');
model.result('pg2').feature('slc1').set('showsolutionparams', 'on');
model.result('pg2').feature('slc1').set('expr', 'spf.U');
model.result('pg2').feature('slc1').set('smooth', 'internal');
model.result('pg2').feature('slc1').set('showsolutionparams', 'on');
model.result('pg2').feature('slc1').set('data', 'parent');
model.result.dataset.create('surf1', 'Surface');
model.result.dataset('surf1').label('Exterior Walls');
model.result.dataset('surf1').set('data', 'dset1');
model.result.dataset('surf1').selection.geom('geom1', 2);
model.result.dataset('surf1').selection.set([6 8 14 15 17]);
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').label('Pressure (spf)');
model.result('pg3').set('data', 'surf1');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').set('data', 'surf1');
model.result('pg3').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pcond2/pcond1/pg4');
model.result('pg3').feature.create('surf1', 'Surface');
model.result('pg3').feature('surf1').label('Surface');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('expr', 'p');
model.result('pg3').feature('surf1').set('colortable', 'Dipole');
model.result('pg3').feature('surf1').set('smooth', 'internal');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('data', 'parent');
model.result('pg3').feature('surf1').feature.create('tran1', 'Transparency');
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').label('Temperature and Fluid Flow (nitf1)');
model.result('pg4').set('showlegendsunit', true);
model.result('pg4').set('data', 'dset1');
model.result('pg4').set('defaultPlotID', 'MultiphysicsNonIsothermalFlow/cfcom1/pdef1/pcond4/pcond3/pg1');
model.result('pg4').feature.create('surf1', 'Surface');
model.result('pg4').feature('surf1').label('Wall Temperature');
model.result('pg4').feature('surf1').set('showsolutionparams', 'on');
model.result('pg4').feature('surf1').set('solutionparams', 'parent');
model.result('pg4').feature('surf1').set('expr', 'ht.Tvar');
model.result('pg4').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg4').feature('surf1').set('smooth', 'internal');
model.result('pg4').feature('surf1').set('showsolutionparams', 'on');
model.result('pg4').feature('surf1').set('data', 'parent');
model.result('pg4').feature('surf1').feature.create('sel1', 'Selection');
model.result('pg4').feature('surf1').feature('sel1').selection.geom('geom1', 2);
model.result('pg4').feature('surf1').feature('sel1').selection.set([6 8 14 15 17]);
model.result('pg4').feature.create('vol1', 'Volume');
model.result('pg4').feature('vol1').label('Solid Temperature');
model.result('pg4').feature('vol1').set('showsolutionparams', 'on');
model.result('pg4').feature('vol1').set('solutionparams', 'parent');
model.result('pg4').feature('vol1').set('expr', 'nitf1.T');
model.result('pg4').feature('vol1').set('smooth', 'internal');
model.result('pg4').feature('vol1').set('showsolutionparams', 'on');
model.result('pg4').feature('vol1').set('data', 'parent');
model.result('pg4').feature('vol1').feature.create('sel1', 'Selection');
model.result('pg4').feature('vol1').feature('sel1').selection.geom('geom1', 3);
model.result('pg4').feature('vol1').feature('sel1').selection.set([1]);
model.result('pg4').feature('vol1').set('inheritplot', 'surf1');
model.result('pg4').feature.create('arwv1', 'ArrowVolume');
model.result('pg4').feature('arwv1').label('Fluid Flow');
model.result('pg4').feature('arwv1').set('showsolutionparams', 'on');
model.result('pg4').feature('arwv1').set('solutionparams', 'parent');
model.result('pg4').feature('arwv1').set('expr', {'nitf1.ux' 'nitf1.uy' 'nitf1.uz'});
model.result('pg4').feature('arwv1').set('xnumber', 30);
model.result('pg4').feature('arwv1').set('ynumber', 30);
model.result('pg4').feature('arwv1').set('znumber', 30);
model.result('pg4').feature('arwv1').set('arrowtype', 'cone');
model.result('pg4').feature('arwv1').set('arrowlength', 'logarithmic');
model.result('pg4').feature('arwv1').set('showsolutionparams', 'on');
model.result('pg4').feature('arwv1').set('data', 'parent');
model.result('pg4').feature('arwv1').feature.create('col1', 'Color');
model.result('pg4').feature('arwv1').feature('col1').set('showcolordata', 'off');
model.result('pg4').feature('arwv1').feature('col1').set('expr', 'spf.U');
model.result('pg4').feature('arwv1').feature.create('filt1', 'Filter');
model.result('pg4').feature('arwv1').feature('filt1').set('expr', 'spf.U>nitf1.Uave');
model.result('pg1').run;

model.variable('var1').set('h_ref', 'withsol(''sol1'',h_mchs)');
model.variable('var1').descr('h_ref', 'Reference heat transfer coefficient');
model.variable('var1').set('Omega_ref', 'withsol(''sol1'',Omega)');
model.variable('var1').descr('Omega_ref', 'Reference pumping power');
model.variable('var1').set('FOM', 'h_mchs/h_ref/(Omega/Omega_ref)^(1/3)');
model.variable('var1').descr('FOM', 'Figure of Merit');

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').set('plotgroup', 'Default');
model.study('std2').feature('stat').set('solnum', 'auto');
model.study('std2').feature('stat').set('notsolnum', 'auto');
model.study('std2').feature('stat').set('outputmap', {});
model.study('std2').feature('stat').set('ngenAUX', '1');
model.study('std2').feature('stat').set('goalngenAUX', '1');
model.study('std2').feature('stat').set('ngenAUX', '1');
model.study('std2').feature('stat').set('goalngenAUX', '1');
model.study('std2').feature('stat').setSolveFor('/physics/ht', true);
model.study('std2').feature('stat').setSolveFor('/physics/spf', true);
model.study('std2').feature('stat').setSolveFor('/multiphysics/nitf1', true);
model.study('std2').feature('stat').setSolveFor('/physics/ht', false);
model.study('std2').feature('stat').setSolveFor('/multiphysics/nitf1', false);
model.study('std2').create('stat2', 'Stationary');
model.study('std2').feature('stat2').set('plotgroup', 'Default');
model.study('std2').feature('stat2').set('solnum', 'auto');
model.study('std2').feature('stat2').set('notsolnum', 'auto');
model.study('std2').feature('stat2').set('outputmap', {});
model.study('std2').feature('stat2').set('ngenAUX', '1');
model.study('std2').feature('stat2').set('goalngenAUX', '1');
model.study('std2').feature('stat2').set('ngenAUX', '1');
model.study('std2').feature('stat2').set('goalngenAUX', '1');
model.study('std2').feature('stat2').setSolveFor('/physics/ht', true);
model.study('std2').feature('stat2').setSolveFor('/physics/spf', true);
model.study('std2').feature('stat2').setSolveFor('/multiphysics/nitf1', true);
model.study('std2').feature('stat2').setSolveFor('/physics/spf', false);
model.study('std2').label('Study 2: Parametric');
model.study('std2').create('param', 'Parametric');
model.study('std2').feature('param').setIndex('pname', 'Cp_f', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', 'J/(kg*K)', 0);
model.study('std2').feature('param').setIndex('pname', 'Cp_f', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', 'J/(kg*K)', 0);
model.study('std2').feature('param').setIndex('pname', 'th_porous', 0);
model.study('std2').feature('param').setIndex('plistarr', 'range(0.05,0.025,0.2)', 0);
model.study('std2').feature('param').setIndex('punit', 'mm', 0);

model.sol.create('sol3');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([2 3]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([2 3]);

model.sol('sol3').study('std2');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std2');
model.sol('sol3').feature('st1').set('studystep', 'stat');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').set('control', 'stat');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol3').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol3').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol3').feature('s1').create('i1', 'Iterative');
model.sol('sol3').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol3').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol3').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol3').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol3').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol3').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol3').feature('s1').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol3').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s1').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s1').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol3').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol3').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol3').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol3').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol('sol3').create('su1', 'StoreSolution');
model.sol('sol3').create('st2', 'StudyStep');
model.sol('sol3').feature('st2').set('study', 'std2');
model.sol('sol3').feature('st2').set('studystep', 'stat2');
model.sol('sol3').create('v2', 'Variables');
model.sol('sol3').feature('v2').set('initmethod', 'sol');
model.sol('sol3').feature('v2').set('initsol', 'sol3');
model.sol('sol3').feature('v2').set('notsolmethod', 'sol');
model.sol('sol3').feature('v2').set('notsol', 'sol3');
model.sol('sol3').feature('v2').set('control', 'stat2');
model.sol('sol3').create('s2', 'Stationary');
model.sol('sol3').feature('s2').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol3').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol3').feature('s2').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol3').feature('s2').feature('fc1').set('maxiter', 100);
model.sol('sol3').feature('s2').create('d1', 'Direct');
model.sol('sol3').feature('s2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s2').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s2').feature('d1').label('Direct, heat transfer variables (ht) (nitf1)');
model.sol('sol3').feature('s2').create('i1', 'Iterative');
model.sol('sol3').feature('s2').feature('i1').set('linsolver', 'gmres');
model.sol('sol3').feature('s2').feature('i1').set('prefuntype', 'left');
model.sol('sol3').feature('s2').feature('i1').set('itrestart', 50);
model.sol('sol3').feature('s2').feature('i1').set('rhob', 20);
model.sol('sol3').feature('s2').feature('i1').set('maxlinit', 10000);
model.sol('sol3').feature('s2').feature('i1').set('nlinnormuse', 'on');
model.sol('sol3').feature('s2').feature('i1').label('AMG, heat transfer variables (ht) (nitf1)');
model.sol('sol3').feature('s2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol3').feature('s2').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol3').feature('s2').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol3').feature('s2').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol3').feature('s2').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s2').feature('fc1').set('linsolver', 'd1');
model.sol('sol3').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol3').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol3').feature('s2').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol3').feature('s2').feature('fc1').set('maxiter', 100);
model.sol('sol3').feature('s2').feature.remove('fcDef');
model.sol('sol3').feature('v2').set('notsolnum', 'auto');
model.sol('sol3').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol3').feature('v2').set('solnum', 'auto');
model.sol('sol3').feature('v2').set('solvertype', 'solnum');
model.sol('sol3').attach('std2');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std2');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol3');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'th_porous'});
model.batch('p1').set('plistarr', {'range(0.05,0.025,0.2)'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std2');
model.batch('p1').set('control', 'param');

model.sol.create('sol5');
model.sol('sol5').study('std2');
model.sol('sol5').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol5');
model.batch('p1').run('compute');

model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').label('Temperature (ht) 1');
model.result('pg5').set('data', 'dset5');
model.result('pg5').setIndex('looplevel', 7, 0);
model.result('pg5').set('data', 'dset5');
model.result('pg5').setIndex('looplevel', 7, 0);
model.result('pg5').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond3/pcond3/pg1');
model.result('pg5').feature.create('vol1', 'Volume');
model.result('pg5').feature('vol1').set('showsolutionparams', 'on');
model.result('pg5').feature('vol1').set('solutionparams', 'parent');
model.result('pg5').feature('vol1').set('colortable', 'HeatCameraLight');
model.result('pg5').feature('vol1').set('smooth', 'internal');
model.result('pg5').feature('vol1').set('showsolutionparams', 'on');
model.result('pg5').feature('vol1').set('data', 'parent');
model.result.dataset('dset5').set('geom', 'geom1');
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').label('Velocity (spf) 1');
model.result('pg6').set('data', 'dset5');
model.result('pg6').setIndex('looplevel', 7, 0);
model.result('pg6').set('frametype', 'spatial');
model.result('pg6').set('data', 'dset5');
model.result('pg6').setIndex('looplevel', 7, 0);
model.result('pg6').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pg1');
model.result('pg6').feature.create('slc1', 'Slice');
model.result('pg6').feature('slc1').label('Slice');
model.result('pg6').feature('slc1').set('showsolutionparams', 'on');
model.result('pg6').feature('slc1').set('expr', 'spf.U');
model.result('pg6').feature('slc1').set('smooth', 'internal');
model.result('pg6').feature('slc1').set('showsolutionparams', 'on');
model.result('pg6').feature('slc1').set('data', 'parent');
model.result.dataset.create('surf2', 'Surface');
model.result.dataset('surf2').label('Exterior Walls 1');
model.result.dataset('surf2').set('data', 'dset5');
model.result.dataset('surf2').selection.geom('geom1', 2);
model.result.dataset('surf2').selection.set([6 8 14 15 17]);
model.result.create('pg7', 'PlotGroup3D');
model.result('pg7').label('Pressure (spf) 1');
model.result('pg7').set('data', 'surf2');
model.result('pg7').setIndex('looplevel', 7, 0);
model.result('pg7').set('frametype', 'spatial');
model.result('pg7').set('data', 'surf2');
model.result('pg7').setIndex('looplevel', 7, 0);
model.result('pg7').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pcond2/pcond1/pg4');
model.result('pg7').feature.create('surf1', 'Surface');
model.result('pg7').feature('surf1').label('Surface');
model.result('pg7').feature('surf1').set('showsolutionparams', 'on');
model.result('pg7').feature('surf1').set('expr', 'p');
model.result('pg7').feature('surf1').set('colortable', 'Dipole');
model.result('pg7').feature('surf1').set('smooth', 'internal');
model.result('pg7').feature('surf1').set('showsolutionparams', 'on');
model.result('pg7').feature('surf1').set('data', 'parent');
model.result('pg7').feature('surf1').feature.create('tran1', 'Transparency');
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').label('Temperature and Fluid Flow (nitf1) 1');
model.result('pg8').set('data', 'dset5');
model.result('pg8').setIndex('looplevel', 7, 0);
model.result('pg8').set('showlegendsunit', true);
model.result('pg8').set('data', 'dset5');
model.result('pg8').setIndex('looplevel', 7, 0);
model.result('pg8').set('defaultPlotID', 'MultiphysicsNonIsothermalFlow/cfcom1/pdef1/pcond4/pcond3/pg1');
model.result('pg8').feature.create('surf1', 'Surface');
model.result('pg8').feature('surf1').label('Wall Temperature');
model.result('pg8').feature('surf1').set('showsolutionparams', 'on');
model.result('pg8').feature('surf1').set('solutionparams', 'parent');
model.result('pg8').feature('surf1').set('expr', 'ht.Tvar');
model.result('pg8').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg8').feature('surf1').set('smooth', 'internal');
model.result('pg8').feature('surf1').set('showsolutionparams', 'on');
model.result('pg8').feature('surf1').set('data', 'parent');
model.result('pg8').feature('surf1').feature.create('sel1', 'Selection');
model.result('pg8').feature('surf1').feature('sel1').selection.geom('geom1', 2);
model.result('pg8').feature('surf1').feature('sel1').selection.set([6 8 14 15 17]);
model.result('pg8').feature.create('vol1', 'Volume');
model.result('pg8').feature('vol1').label('Solid Temperature');
model.result('pg8').feature('vol1').set('showsolutionparams', 'on');
model.result('pg8').feature('vol1').set('solutionparams', 'parent');
model.result('pg8').feature('vol1').set('expr', 'nitf1.T');
model.result('pg8').feature('vol1').set('smooth', 'internal');
model.result('pg8').feature('vol1').set('showsolutionparams', 'on');
model.result('pg8').feature('vol1').set('data', 'parent');
model.result('pg8').feature('vol1').feature.create('sel1', 'Selection');
model.result('pg8').feature('vol1').feature('sel1').selection.geom('geom1', 3);
model.result('pg8').feature('vol1').feature('sel1').selection.set([1]);
model.result('pg8').feature('vol1').set('inheritplot', 'surf1');
model.result('pg8').feature.create('arwv1', 'ArrowVolume');
model.result('pg8').feature('arwv1').label('Fluid Flow');
model.result('pg8').feature('arwv1').set('showsolutionparams', 'on');
model.result('pg8').feature('arwv1').set('solutionparams', 'parent');
model.result('pg8').feature('arwv1').set('expr', {'nitf1.ux' 'nitf1.uy' 'nitf1.uz'});
model.result('pg8').feature('arwv1').set('xnumber', 30);
model.result('pg8').feature('arwv1').set('ynumber', 30);
model.result('pg8').feature('arwv1').set('znumber', 30);
model.result('pg8').feature('arwv1').set('arrowtype', 'cone');
model.result('pg8').feature('arwv1').set('arrowlength', 'logarithmic');
model.result('pg8').feature('arwv1').set('showsolutionparams', 'on');
model.result('pg8').feature('arwv1').set('data', 'parent');
model.result('pg8').feature('arwv1').feature.create('col1', 'Color');
model.result('pg8').feature('arwv1').feature('col1').set('showcolordata', 'off');
model.result('pg8').feature('arwv1').feature('col1').set('expr', 'spf.U');
model.result('pg8').feature('arwv1').feature.create('filt1', 'Filter');
model.result('pg8').feature('arwv1').feature('filt1').set('expr', 'spf.U>nitf1.Uave');
model.result('pg5').run;
model.result('pg1').run;

model.nodeGroup.create('grp1', 'Results');
model.nodeGroup('grp1').set('type', 'plotgroup');
model.nodeGroup('grp1').add('plotgroup', 'pg1');
model.nodeGroup('grp1').add('plotgroup', 'pg2');
model.nodeGroup('grp1').add('plotgroup', 'pg3');
model.nodeGroup('grp1').add('plotgroup', 'pg4');
model.nodeGroup('grp1').label('Reference MCHS');

model.result('pg5').run;

model.nodeGroup.create('grp2', 'Results');
model.nodeGroup('grp2').set('type', 'plotgroup');
model.nodeGroup.move('grp2', 1);
model.nodeGroup('grp2').add('plotgroup', 'pg5');
model.nodeGroup('grp2').add('plotgroup', 'pg6');
model.nodeGroup('grp2').add('plotgroup', 'pg7');
model.nodeGroup('grp2').add('plotgroup', 'pg8');
model.nodeGroup('grp2').label('Parametric MCHS');

model.result.numerical.create('gev1', 'EvalGlobal');
model.result.numerical('gev1').set('data', 'dset5');
model.result.numerical('gev1').set('expr', {'dp'});
model.result.numerical('gev1').set('descr', {'Pressure drop'});
model.result.numerical('gev1').set('unit', {'Pa'});
model.result.numerical('gev1').set('expr', {'dp' 'Omega'});
model.result.numerical('gev1').set('descr', {'Pressure drop' 'Pumping power'});
model.result.numerical('gev1').set('expr', {'dp' 'Omega' 'h_mchs'});
model.result.numerical('gev1').set('descr', {'Pressure drop' 'Pumping power' 'Heat transfer coefficient'});
model.result.numerical('gev1').set('expr', {'dp' 'Omega' 'h_mchs' 'Nu'});
model.result.numerical('gev1').set('descr', {'Pressure drop' 'Pumping power' 'Heat transfer coefficient' 'Nusselt number'});
model.result.numerical('gev1').set('expr', {'dp' 'Omega' 'h_mchs' 'Nu' 'Re'});
model.result.numerical('gev1').set('descr', {'Pressure drop' 'Pumping power' 'Heat transfer coefficient' 'Nusselt number' 'Reynolds number'});
model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').comments('Global Evaluation 1');
model.result.numerical('gev1').set('table', 'tbl1');
model.result.numerical('gev1').setResult;
model.result.create('pg9', 'PlotGroup1D');
model.result('pg9').set('data', 'none');
model.result('pg9').create('tblp1', 'Table');
model.result('pg9').feature('tblp1').set('source', 'table');
model.result('pg9').feature('tblp1').set('table', 'tbl1');
model.result('pg9').feature('tblp1').set('linewidth', 'preference');
model.result('pg9').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg9').run;
model.result('pg9').feature('tblp1').set('plotcolumninput', 'manual');
model.result('pg9').feature('tblp1').set('plotcolumns', [2]);
model.result('pg9').feature('tblp1').set('legend', true);
model.result('pg9').feature.duplicate('tblp2', 'tblp1');
model.result('pg9').run;
model.result('pg9').feature('tblp2').set('plotcolumns', [4]);
model.result('pg9').run;
model.result('pg9').run;
model.result('pg9').label('Heat-Transfer Coefficient and Pressure Drop');
model.result('pg9').set('twoyaxes', true);
model.result('pg9').setIndex('plotonsecyaxis', true, 1, 1);
model.result('pg9').set('legendpos', 'upperleft');
model.result('pg9').run;
model.result.duplicate('pg10', 'pg9');
model.result('pg10').run;
model.result('pg10').label('Reynolds and Nusselt Numbers');
model.result('pg10').run;
model.result('pg10').feature('tblp1').set('plotcolumns', [6]);
model.result('pg10').run;
model.result('pg10').feature('tblp2').set('plotcolumns', [5]);
model.result('pg10').run;
model.result('pg10').run;
model.result('pg10').set('legendpos', 'lowermiddle');
model.result.numerical.create('gev2', 'EvalGlobal');
model.result.numerical('gev2').set('data', 'dset5');
model.result.numerical('gev2').setIndex('expr', 'FOM', 0);
model.result.table.create('tbl2', 'Table');
model.result.table('tbl2').comments('Global Evaluation 2');
model.result.numerical('gev2').set('table', 'tbl2');
model.result.numerical('gev2').setResult;
model.result.create('pg11', 'PlotGroup1D');
model.result('pg11').set('data', 'none');
model.result('pg11').create('tblp1', 'Table');
model.result('pg11').feature('tblp1').set('source', 'table');
model.result('pg11').feature('tblp1').set('table', 'tbl2');
model.result('pg11').feature('tblp1').set('linewidth', 'preference');
model.result('pg11').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg11').run;
model.result('pg11').run;
model.result('pg11').set('titletype', 'manual');
model.result('pg11').set('title', 'Figure of Merit (FOM)');
model.result('pg11').run;
model.result('pg11').label('FOM');
model.result('pg6').run;
model.result('pg6').feature('slc1').set('quickplane', 'zx');
model.result('pg6').run;
model.result('pg6').create('vol1', 'Volume');
model.result('pg6').feature('vol1').create('sel1', 'Selection');
model.result('pg6').feature('vol1').feature('sel1').selection.named('geom1_sel1');
model.result('pg6').run;
model.result('pg6').feature('vol1').create('mtrl1', 'MaterialAppearance');
model.result('pg6').run;
model.result('pg6').feature('vol1').feature('mtrl1').set('appearance', 'custom');
model.result('pg6').feature('vol1').feature('mtrl1').set('family', 'steel');

model.view.create('view5', 3);
model.view('view5').camera.set('viewscaletype', 'manual');
model.view('view5').camera.set('xscale', 5);
model.view('view5').camera.set('zscale', 2);

model.result('pg6').run;
model.result('pg6').setIndex('looplevel', 3, 0);
model.result('pg6').set('view', 'view5');
model.result('pg6').set('edges', false);
model.result('pg6').run;
model.result.dataset.create('mir1', 'Mirror3D');
model.result.dataset('mir1').set('data', 'dset5');
model.result.create('pg12', 'PlotGroup3D');

model.nodeGroup('grp2').add('plotgroup', 'pg12');

model.result('pg12').run;
model.result('pg12').set('data', 'mir1');
model.result('pg12').create('surf1', 'Surface');
model.result('pg12').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg12').feature('surf1').create('sel1', 'Selection');
model.result('pg12').feature('surf1').feature('sel1').selection.named('geom1_difsel1');
model.result('pg12').feature('surf1').feature('sel1').selection.set([6 14 17]);
model.result('pg12').run;
model.result('pg12').create('strmsl1', 'StreamlineMultislice');
model.result('pg12').feature('strmsl1').set('expr', {'u' 'v' 'w'});
model.result('pg12').feature('strmsl1').set('descr', 'Velocity field');
model.result('pg12').feature('strmsl1').set('xnumber', '0');
model.result('pg12').feature('strmsl1').set('ynumber', '0');
model.result('pg12').feature('strmsl1').set('posmethod', 'magnitude');
model.result('pg12').feature('strmsl1').set('mdist', [0.002 0.01]);
model.result('pg12').feature('strmsl1').set('pointtype', 'arrow');
model.result('pg12').feature('strmsl1').set('arrowtype', 'cone');
model.result('pg12').feature('strmsl1').create('col1', 'Color');
model.result('pg12').run;
model.result('pg12').feature('strmsl1').feature('col1').set('expr', 'p');
model.result('pg12').feature('strmsl1').feature('col1').set('colortable', 'GrayScale');
model.result('pg12').run;
model.result('pg12').label('Velocity and Temperature Fields');
model.result('pg12').setIndex('looplevel', 3, 0);
model.result('pg12').set('view', 'view5');
model.result('pg12').set('edges', false);
model.result('pg12').run;

model.title('Performance of a Porous Microchannel Heat Sink');

model.description('This example computes the effectiveness of a porous microchannel heat sink over a conventional microchannel heat sink. The model is fully parameterized. A parameter study on the thickness of the porous substrate is used to determine the optimal configuration.');

model.label('porous_microchannel_heat_sink.mph');

model.result('pg12').run;

model.study.create('std3');
model.study('std3').create('stat', 'Stationary');
model.study('std3').feature('stat').set('plotgroup', 'Default');
model.study('std3').feature('stat').set('solnum', 'auto');
model.study('std3').feature('stat').set('notsolnum', 'auto');
model.study('std3').feature('stat').set('outputmap', {});
model.study('std3').feature('stat').set('ngenAUX', '1');
model.study('std3').feature('stat').set('goalngenAUX', '1');
model.study('std3').feature('stat').set('ngenAUX', '1');
model.study('std3').feature('stat').set('goalngenAUX', '1');
model.study('std3').feature('stat').setSolveFor('/physics/ht', true);
model.study('std3').feature('stat').setSolveFor('/physics/spf', true);
model.study('std3').feature('stat').setSolveFor('/multiphysics/nitf1', true);
model.study('std3').feature('stat').setSolveFor('/physics/ht', false);
model.study('std3').feature('stat').setSolveFor('/multiphysics/nitf1', false);
model.study('std3').create('stat2', 'Stationary');
model.study('std3').feature('stat2').set('plotgroup', 'Default');
model.study('std3').feature('stat2').set('solnum', 'auto');
model.study('std3').feature('stat2').set('notsolnum', 'auto');
model.study('std3').feature('stat2').set('outputmap', {});
model.study('std3').feature('stat2').set('ngenAUX', '1');
model.study('std3').feature('stat2').set('goalngenAUX', '1');
model.study('std3').feature('stat2').set('ngenAUX', '1');
model.study('std3').feature('stat2').set('goalngenAUX', '1');
model.study('std3').feature('stat2').setSolveFor('/physics/ht', true);
model.study('std3').feature('stat2').setSolveFor('/physics/spf', true);
model.study('std3').feature('stat2').setSolveFor('/multiphysics/nitf1', true);
model.study('std3').feature('stat2').setSolveFor('/physics/spf', false);

model.geom('geom1').run;

model.study('std3').label('Study 3: Optimization');
model.study('std3').create('opt', 'Optimization');
model.study('std3').feature('opt').set('optsolver', 'bobyqa');
model.study('std3').feature('opt').setIndex('optobj', 'comp1.FOM', 0);
model.study('std3').feature('opt').setIndex('descr', '', 0);
model.study('std3').feature('opt').set('objectivetype', 'maximization');
model.study('std3').feature('opt').setIndex('pname', 'Cp_f', 0);
model.study('std3').feature('opt').setIndex('initval', '4182[J/(kg*K)]', 0);
model.study('std3').feature('opt').setIndex('scale', 1, 0);
model.study('std3').feature('opt').setIndex('lbound', '', 0);
model.study('std3').feature('opt').setIndex('ubound', '', 0);
model.study('std3').feature('opt').setIndex('pname', 'Cp_f', 0);
model.study('std3').feature('opt').setIndex('initval', '4182[J/(kg*K)]', 0);
model.study('std3').feature('opt').setIndex('scale', 1, 0);
model.study('std3').feature('opt').setIndex('lbound', '', 0);
model.study('std3').feature('opt').setIndex('ubound', '', 0);
model.study('std3').feature('opt').setIndex('pname', 'th_porous', 0);
model.study('std3').feature('opt').setIndex('initval', '0.1[mm]', 0);
model.study('std3').feature('opt').setIndex('scale', '0.1[mm]', 0);
model.study('std3').feature('opt').setIndex('lbound', '0.05[mm]', 0);
model.study('std3').feature('opt').setIndex('ubound', '0.2[mm]', 0);

model.sol.create('sol13');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([2 3]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([2 3]);

model.sol('sol13').study('std3');
model.sol('sol13').create('st1', 'StudyStep');
model.sol('sol13').feature('st1').set('study', 'std3');
model.sol('sol13').feature('st1').set('studystep', 'stat');
model.sol('sol13').create('v1', 'Variables');
model.sol('sol13').feature('v1').set('control', 'stat');
model.sol('sol13').create('s1', 'Stationary');
model.sol('sol13').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol13').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol13').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol13').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol13').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol13').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol13').feature('s1').create('i1', 'Iterative');
model.sol('sol13').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol13').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol13').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol13').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol13').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol13').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol13').feature('s1').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol13').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol13').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol13').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol13').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol13').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol13').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol13').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol13').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol13').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol13').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol13').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol13').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol13').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol13').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol13').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol13').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol13').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol13').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol13').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol13').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol13').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol13').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol13').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol13').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol13').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol13').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol13').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol13').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol13').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol13').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol13').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol13').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol13').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol13').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol13').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol13').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol13').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol13').feature('s1').create('d1', 'Direct');
model.sol('sol13').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol13').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol13').feature('s1').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol13').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol13').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol13').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol13').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol13').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol13').feature('s1').feature.remove('fcDef');
model.sol('sol13').create('su1', 'StoreSolution');
model.sol('sol13').create('st2', 'StudyStep');
model.sol('sol13').feature('st2').set('study', 'std3');
model.sol('sol13').feature('st2').set('studystep', 'stat2');
model.sol('sol13').create('v2', 'Variables');
model.sol('sol13').feature('v2').set('initmethod', 'sol');
model.sol('sol13').feature('v2').set('initsol', 'sol13');
model.sol('sol13').feature('v2').set('notsolmethod', 'sol');
model.sol('sol13').feature('v2').set('notsol', 'sol13');
model.sol('sol13').feature('v2').set('control', 'stat2');
model.sol('sol13').create('s2', 'Stationary');
model.sol('sol13').feature('s2').create('fc1', 'FullyCoupled');
model.sol('sol13').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol13').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol13').feature('s2').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol13').feature('s2').feature('fc1').set('maxiter', 100);
model.sol('sol13').feature('s2').create('d1', 'Direct');
model.sol('sol13').feature('s2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol13').feature('s2').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol13').feature('s2').feature('d1').label('Direct, heat transfer variables (ht) (nitf1)');
model.sol('sol13').feature('s2').create('i1', 'Iterative');
model.sol('sol13').feature('s2').feature('i1').set('linsolver', 'gmres');
model.sol('sol13').feature('s2').feature('i1').set('prefuntype', 'left');
model.sol('sol13').feature('s2').feature('i1').set('itrestart', 50);
model.sol('sol13').feature('s2').feature('i1').set('rhob', 20);
model.sol('sol13').feature('s2').feature('i1').set('maxlinit', 10000);
model.sol('sol13').feature('s2').feature('i1').set('nlinnormuse', 'on');
model.sol('sol13').feature('s2').feature('i1').label('AMG, heat transfer variables (ht) (nitf1)');
model.sol('sol13').feature('s2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol13').feature('s2').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol13').feature('s2').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol13').feature('s2').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol13').feature('s2').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol13').feature('s2').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol13').feature('s2').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol13').feature('s2').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol13').feature('s2').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol13').feature('s2').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol13').feature('s2').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol13').feature('s2').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol13').feature('s2').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol13').feature('s2').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol13').feature('s2').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol13').feature('s2').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol13').feature('s2').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol13').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol13').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol13').feature('s2').feature('fc1').set('linsolver', 'd1');
model.sol('sol13').feature('s2').feature('fc1').set('dtech', 'auto');
model.sol('sol13').feature('s2').feature('fc1').set('initstep', 0.01);
model.sol('sol13').feature('s2').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol13').feature('s2').feature('fc1').set('maxiter', 100);
model.sol('sol13').feature('s2').feature.remove('fcDef');
model.sol('sol13').feature('v2').set('notsolnum', 'auto');
model.sol('sol13').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol13').feature('v2').set('solnum', 'auto');
model.sol('sol13').feature('v2').set('solvertype', 'solnum');
model.sol('sol13').attach('std3');

model.batch.create('o1', 'Optimization');
model.batch('o1').study('std3');
model.batch('o1').attach('std3');
model.batch.create('p2', 'Parametric');
model.batch('p2').study('std3');
model.batch('p2').create('so1', 'Solutionseq');
model.batch('p2').feature('so1').set('seq', 'sol13');
model.batch('p2').feature('so1').set('store', 'on');
model.batch('p2').feature('so1').set('clear', 'on');
model.batch('p2').feature('so1').set('psol', 'none');
model.batch('p2').attach('std3');
model.batch('p2').set('optimization', 'o1');
model.batch('p2').set('err', 'on');
model.batch('p2').set('control', 'opt');
model.batch('o1').set('parametricjobs', {'p2'});

model.sol.create('sol15');
model.sol('sol15').study('std3');
model.sol('sol15').label('Parametric Solutions 2');

model.batch('p2').feature('so1').set('psol', 'sol15');
model.batch('o1').run('compute');

model.result.create('pg13', 'PlotGroup3D');
model.result('pg13').label('Temperature (ht) 2');
model.result('pg13').set('data', 'dset8');
model.result('pg13').setIndex('looplevel', 1, 0);
model.result('pg13').set('data', 'dset8');
model.result('pg13').setIndex('looplevel', 1, 0);
model.result('pg13').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond3/pcond3/pg1');
model.result('pg13').feature.create('vol1', 'Volume');
model.result('pg13').feature('vol1').set('showsolutionparams', 'on');
model.result('pg13').feature('vol1').set('solutionparams', 'parent');
model.result('pg13').feature('vol1').set('colortable', 'HeatCameraLight');
model.result('pg13').feature('vol1').set('smooth', 'internal');
model.result('pg13').feature('vol1').set('showsolutionparams', 'on');
model.result('pg13').feature('vol1').set('data', 'parent');
model.result.dataset('dset8').set('geom', 'geom1');
model.result.create('pg14', 'PlotGroup3D');
model.result('pg14').label('Velocity (spf) 2');
model.result('pg14').set('data', 'dset8');
model.result('pg14').setIndex('looplevel', 1, 0);
model.result('pg14').set('frametype', 'spatial');
model.result('pg14').set('data', 'dset8');
model.result('pg14').setIndex('looplevel', 1, 0);
model.result('pg14').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pg1');
model.result('pg14').feature.create('slc1', 'Slice');
model.result('pg14').feature('slc1').label('Slice');
model.result('pg14').feature('slc1').set('showsolutionparams', 'on');
model.result('pg14').feature('slc1').set('expr', 'spf.U');
model.result('pg14').feature('slc1').set('smooth', 'internal');
model.result('pg14').feature('slc1').set('showsolutionparams', 'on');
model.result('pg14').feature('slc1').set('data', 'parent');
model.result.dataset.create('surf3', 'Surface');
model.result.dataset('surf3').label('Exterior Walls 2');
model.result.dataset('surf3').set('data', 'dset8');
model.result.dataset('surf3').selection.geom('geom1', 2);
model.result.dataset('surf3').selection.set([6 8 14 15 17]);
model.result.create('pg15', 'PlotGroup3D');
model.result('pg15').label('Pressure (spf) 2');
model.result('pg15').set('data', 'surf3');
model.result('pg15').setIndex('looplevel', 1, 0);
model.result('pg15').set('frametype', 'spatial');
model.result('pg15').set('data', 'surf3');
model.result('pg15').setIndex('looplevel', 1, 0);
model.result('pg15').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond2/pcond2/pcond1/pg4');
model.result('pg15').feature.create('surf1', 'Surface');
model.result('pg15').feature('surf1').label('Surface');
model.result('pg15').feature('surf1').set('showsolutionparams', 'on');
model.result('pg15').feature('surf1').set('expr', 'p');
model.result('pg15').feature('surf1').set('colortable', 'Dipole');
model.result('pg15').feature('surf1').set('smooth', 'internal');
model.result('pg15').feature('surf1').set('showsolutionparams', 'on');
model.result('pg15').feature('surf1').set('data', 'parent');
model.result('pg15').feature('surf1').feature.create('tran1', 'Transparency');
model.result.create('pg16', 'PlotGroup3D');
model.result('pg16').label('Temperature and Fluid Flow (nitf1) 2');
model.result('pg16').set('data', 'dset8');
model.result('pg16').setIndex('looplevel', 1, 0);
model.result('pg16').set('showlegendsunit', true);
model.result('pg16').set('data', 'dset8');
model.result('pg16').setIndex('looplevel', 1, 0);
model.result('pg16').set('defaultPlotID', 'MultiphysicsNonIsothermalFlow/cfcom1/pdef1/pcond4/pcond3/pg1');
model.result('pg16').feature.create('surf1', 'Surface');
model.result('pg16').feature('surf1').label('Wall Temperature');
model.result('pg16').feature('surf1').set('showsolutionparams', 'on');
model.result('pg16').feature('surf1').set('solutionparams', 'parent');
model.result('pg16').feature('surf1').set('expr', 'ht.Tvar');
model.result('pg16').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg16').feature('surf1').set('smooth', 'internal');
model.result('pg16').feature('surf1').set('showsolutionparams', 'on');
model.result('pg16').feature('surf1').set('data', 'parent');
model.result('pg16').feature('surf1').feature.create('sel1', 'Selection');
model.result('pg16').feature('surf1').feature('sel1').selection.geom('geom1', 2);
model.result('pg16').feature('surf1').feature('sel1').selection.set([6 8 14 15 17]);
model.result('pg16').feature.create('vol1', 'Volume');
model.result('pg16').feature('vol1').label('Solid Temperature');
model.result('pg16').feature('vol1').set('showsolutionparams', 'on');
model.result('pg16').feature('vol1').set('solutionparams', 'parent');
model.result('pg16').feature('vol1').set('expr', 'nitf1.T');
model.result('pg16').feature('vol1').set('smooth', 'internal');
model.result('pg16').feature('vol1').set('showsolutionparams', 'on');
model.result('pg16').feature('vol1').set('data', 'parent');
model.result('pg16').feature('vol1').feature.create('sel1', 'Selection');
model.result('pg16').feature('vol1').feature('sel1').selection.geom('geom1', 3);
model.result('pg16').feature('vol1').feature('sel1').selection.set([1]);
model.result('pg16').feature('vol1').set('inheritplot', 'surf1');
model.result('pg16').feature.create('arwv1', 'ArrowVolume');
model.result('pg16').feature('arwv1').label('Fluid Flow');
model.result('pg16').feature('arwv1').set('showsolutionparams', 'on');
model.result('pg16').feature('arwv1').set('solutionparams', 'parent');
model.result('pg16').feature('arwv1').set('expr', {'nitf1.ux' 'nitf1.uy' 'nitf1.uz'});
model.result('pg16').feature('arwv1').set('xnumber', 30);
model.result('pg16').feature('arwv1').set('ynumber', 30);
model.result('pg16').feature('arwv1').set('znumber', 30);
model.result('pg16').feature('arwv1').set('arrowtype', 'cone');
model.result('pg16').feature('arwv1').set('arrowlength', 'logarithmic');
model.result('pg16').feature('arwv1').set('showsolutionparams', 'on');
model.result('pg16').feature('arwv1').set('data', 'parent');
model.result('pg16').feature('arwv1').feature.create('col1', 'Color');
model.result('pg16').feature('arwv1').feature('col1').set('showcolordata', 'off');
model.result('pg16').feature('arwv1').feature('col1').set('expr', 'spf.U');
model.result('pg16').feature('arwv1').feature.create('filt1', 'Filter');
model.result('pg16').feature('arwv1').feature('filt1').set('expr', 'spf.U>nitf1.Uave');
model.result('pg13').run;

model.study('std3').feature('opt').set('probewindow', '');

model.result.numerical.duplicate('gev3', 'gev1');
model.result.numerical('gev3').set('data', 'dset8');
model.result.numerical('gev3').setIndex('expr', 'FOM', 5);
model.result.numerical('gev3').setIndex('unit', 1, 5);
model.result.numerical('gev3').setIndex('descr', 'Figure of Merit', 5);
model.result.table.create('tbl5', 'Table');
model.result.table('tbl5').comments('Global Evaluation 3');
model.result.numerical('gev3').set('table', 'tbl5');
model.result.numerical('gev3').setResult;
model.result('pg9').run;
model.result('pg9').create('tblp3', 'Table');
model.result('pg9').feature('tblp3').set('markerpos', 'datapoints');
model.result('pg9').feature('tblp3').set('linewidth', 'preference');
model.result('pg9').feature('tblp3').set('table', 'tbl5');
model.result('pg9').feature('tblp3').set('plotcolumninput', 'manual');
model.result('pg9').feature('tblp3').set('plotcolumns', [2]);
model.result('pg9').feature('tblp3').set('preprocx', 'linear');
model.result('pg9').feature('tblp3').set('scalingx', 1000);
model.result('pg9').feature('tblp3').set('linemarker', 'asterisk');
model.result('pg9').feature('tblp3').set('markerpos', 'interp');
model.result('pg9').feature('tblp3').set('linecolor', 'blue');
model.result('pg9').feature.duplicate('tblp4', 'tblp3');
model.result('pg9').run;
model.result('pg9').feature('tblp4').set('plotcolumns', [4]);
model.result('pg9').feature('tblp4').set('linecolor', 'green');
model.result('pg9').feature('tblp4').set('plotonsecyaxis', true);
model.result('pg9').run;
model.result('pg11').run;
model.result('pg11').create('glob1', 'Global');
model.result('pg11').feature('glob1').set('markerpos', 'datapoints');
model.result('pg11').feature('glob1').set('linewidth', 'preference');
model.result('pg11').feature('glob1').set('data', 'dset6');
model.result('pg11').feature('glob1').setIndex('expr', 'FOM', 0);
model.result('pg11').feature('glob1').set('xdata', 'expr');
model.result('pg11').feature('glob1').set('xdataexpr', 'th_porous');
model.result('pg11').feature('glob1').set('linemarker', 'asterisk');
model.result('pg11').run;
model.result('pg10').run;
model.result('pg10').create('tblp3', 'Table');
model.result('pg10').feature('tblp3').set('markerpos', 'datapoints');
model.result('pg10').feature('tblp3').set('linewidth', 'preference');
model.result('pg10').feature('tblp3').set('table', 'tbl5');
model.result('pg10').feature('tblp3').set('plotcolumninput', 'manual');
model.result('pg10').feature('tblp3').set('plotcolumns', [6]);
model.result('pg10').feature('tblp3').set('preprocx', 'linear');
model.result('pg10').feature('tblp3').set('scalingx', 1000);
model.result('pg10').feature('tblp3').set('linecolor', 'blue');
model.result('pg10').feature('tblp3').set('linemarker', 'asterisk');
model.result('pg10').feature('tblp3').set('markerpos', 'interp');
model.result('pg10').run;
model.result('pg10').feature.duplicate('tblp4', 'tblp3');
model.result('pg10').run;
model.result('pg10').feature('tblp4').set('plotcolumns', [5]);
model.result('pg10').feature('tblp4').set('plotonsecyaxis', true);
model.result('pg10').feature('tblp4').set('linecolor', 'green');
model.result('pg10').run;
model.result('pg10').run;
model.result('pg13').run;

model.nodeGroup.create('grp3', 'Results');
model.nodeGroup('grp3').set('type', 'plotgroup');
model.nodeGroup('grp3').placeAfter('plotgroup', 'pg11');
model.nodeGroup('grp3').add('plotgroup', 'pg13');
model.nodeGroup('grp3').add('plotgroup', 'pg14');
model.nodeGroup('grp3').add('plotgroup', 'pg15');
model.nodeGroup('grp3').add('plotgroup', 'pg16');
model.nodeGroup('grp3').label('Optimization');

model.result('pg11').run;

model.title('Optimization of a Porous Microchannel Heat Sink');

model.description('In this example the performance of a porous microchannel heat sink is optimized using the Optimization Module. The optimum value of the thickness of the porous substrate is calculated. This example is an extension of the model "Performance of a Microchannel Heat Sink" and the results are compared with the results of the parameter study of the original model.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;
model.sol('sol8').clearSolutionData;
model.sol('sol9').clearSolutionData;
model.sol('sol10').clearSolutionData;
model.sol('sol11').clearSolutionData;
model.sol('sol12').clearSolutionData;
model.sol('sol13').clearSolutionData;
model.sol('sol14').clearSolutionData;
model.sol('sol15').clearSolutionData;
model.sol('sol16').clearSolutionData;

model.label('porous_microchannel_heat_sink_optimization.mph');

model.modelNode.label('Components');

out = model;
