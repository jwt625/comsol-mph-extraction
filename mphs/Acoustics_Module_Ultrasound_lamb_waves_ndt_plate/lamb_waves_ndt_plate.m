function out = model
%
% lamb_waves_ndt_plate.m
%
% Model exported on May 26 2025, 21:25 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Acoustics_Module/Ultrasound');

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('D_plate', '5[mm]', 'Plate thickness');
model.param.set('W_plate', '15[mm]', 'Plate width');
model.param.set('L_plate', '50[cm]', 'Plate length');
model.param.set('H_wedge', '20[mm]', 'Wedge height');
model.param.set('W_wedge', '20[mm]', 'Wedge width');
model.param.set('L_wedge', '40[mm]', 'Wedge length');
model.param.set('L_slope', '16[mm]', 'Wedge slope length');
model.param.set('alpha', '70[deg]', 'Wedge angle');
model.param.set('R_source', '6.25[mm]', 'Excitation area radius');
model.param.label('Parameters: Geometrical Parameters');
model.param.create('par2');

% To import content from file, use:
% model.param('par2').loadFile('FILENAME');
model.param('par2').set('cp_plast', '2080[m/s]', 'Longitudinal wave speed in plastic');
model.param('par2').set('cs_plast', '1000[m/s]', 'Shear wave speed in plastic');
model.param('par2').set('rho_plast', '1190[kg/m^3]', 'Density of plastic');
model.param('par2').set('cp_steel', '5800[m/s]', 'Longitudinal wave speed in steel');
model.param('par2').set('cs_steel', '3160[m/s]', 'Shear wave speed in steel');
model.param('par2').set('rho_steel', '7800[kg/m^3]', 'Density of steel');
model.param('par2').set('fmax', '500[kHz]', 'Maximum frequency');
model.param('par2').set('omegamax', '2*pi*fmax', 'Maximum angular frequency');
model.param('par2').set('f0', '200[kHz]', 'Operating frequency');
model.param('par2').set('omega0', '2*pi*f0', 'Operating angular frequency');
model.param('par2').set('T0', '1/f0', 'Period');
model.param('par2').set('kp', 'omega0/cp_steel', 'Longitudinal wave number in steel');
model.param('par2').set('ks', 'omega0/cs_steel', 'Shear wave number in steel');
model.param('par2').set('v_lamb', '0.728*cs_steel', 'Expected A0 Lamb mode velocity at the operating frequency');
model.param('par2').label('Parameters: Model Parameters');

model.material.create('mat1', 'Common', '');
model.material('mat1').label('Steel');
model.material('mat1').propertyGroup('def').set('density', {'rho_steel'});
model.material('mat1').propertyGroup.create('CpCs', 'Pressure_wave_and_shear_wave_speeds');
model.material('mat1').propertyGroup('CpCs').set('cp', {'cp_steel'});
model.material('mat1').propertyGroup('CpCs').set('cs', {'cs_steel'});
model.material.create('mat2', 'Common', '');
model.material('mat2').label('Plastic');
model.material('mat2').propertyGroup('def').set('density', {'rho_plast'});
model.material('mat2').propertyGroup.create('CpCs', 'Pressure_wave_and_shear_wave_speeds');
model.material('mat2').propertyGroup('CpCs').set('cp', {'cp_plast'});
model.material('mat2').propertyGroup('CpCs').set('cs', {'cs_plast'});

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', {'W_plate' 'D_plate'});
model.geom('geom1').feature('r1').set('base', 'center');
model.geom('geom1').runPre('fin');
model.geom('geom1').run;

model.material.create('matlnk1', 'Link', 'comp1');
model.material('matlnk1').label('Steel');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');
model.physics('solid').feature('lemm1').set('IsotropicOption', 'CpCs');

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('size').set('hauto', 2);
model.mesh('mesh1').run;

model.result.setOnlyPlotWhenRequested(true);

model.study.create('std1');
model.study('std1').create('mode', 'ModeAnalysis');
model.study('std1').feature('mode').set('modeFreq', '100[Hz]');
model.study('std1').feature('mode').set('eigunit', '');
model.study('std1').feature('mode').set('chkeigregion', true);
model.study('std1').feature('mode').set('conrad', '1');
model.study('std1').feature('mode').set('conradynhm', '1');
model.study('std1').feature('mode').set('storefact', false);
model.study('std1').feature('mode').set('solnum', 'auto');
model.study('std1').feature('mode').set('notsolnum', 'auto');
model.study('std1').feature('mode').set('outputmap', {});
model.study('std1').feature('mode').set('ngenAUX', '1');
model.study('std1').feature('mode').set('goalngenAUX', '1');
model.study('std1').feature('mode').set('ngenAUX', '1');
model.study('std1').feature('mode').set('goalngenAUX', '1');
model.study('std1').feature('mode').setSolveFor('/physics/solid', true);
model.study('std1').label('Study 1 - Mode Analysis');
model.study('std1').setGenPlots(false);
model.study('std1').feature('mode').set('modeFreq', 'f0');
model.study('std1').feature('mode').set('neigsactive', true);
model.study('std1').feature('mode').set('neigs', 20);
model.study('std1').feature('mode').set('eigunit', 'rad/m');
model.study('std1').feature('mode').set('shiftactive', true);
model.study('std1').feature('mode').set('shift', 'ks');
model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'alpha', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'rad', 0);
model.study('std1').feature('param').setIndex('pname', 'alpha', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'rad', 0);
model.study('std1').feature('param').setIndex('pname', 'f0', 0);
model.study('std1').feature('param').setIndex('plistarr', 'range(fmax/250, fmax/250, fmax)', 0);
model.study('std1').feature('param').setIndex('punit', 'Hz', 0);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'mode');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'mode');
model.sol('sol1').create('e1', 'Eigenvalue');
model.sol('sol1').feature('e1').set('control', 'mode');
model.sol('sol1').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol1').attach('std1');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'f0'});
model.batch('p1').set('plistarr', {'range(fmax/250, fmax/250, fmax)'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol.create('sol2');
model.sol('sol2').study('std1');
model.sol('sol2').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').run('compute');

model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').label('Dispersion Curves, Phase Velocity');
model.result('pg1').set('data', 'dset2');
model.result('pg1').set('titletype', 'label');
model.result('pg1').set('xlabelactive', true);
model.result('pg1').set('xlabel', 'f (Hz)');
model.result('pg1').set('ylabelactive', true);
model.result('pg1').set('ylabel', 'v/cs (1)');
model.result('pg1').set('axislimits', true);
model.result('pg1').set('xmin', 0);
model.result('pg1').set('xmax', 'fmax');
model.result('pg1').set('ymin', 0);
model.result('pg1').set('ymax', '2*cp_steel/cs_steel');
model.result('pg1').set('showlegends', false);
model.result('pg1').create('glob1', 'Global');
model.result('pg1').feature('glob1').set('markerpos', 'datapoints');
model.result('pg1').feature('glob1').set('linewidth', 'preference');
model.result('pg1').feature('glob1').set('data', 'dset2');
model.result('pg1').feature('glob1').setIndex('looplevelinput', 'first', 0);
model.result('pg1').feature('glob1').setIndex('expr', 'cp_steel/cs_steel', 0);
model.result('pg1').feature('glob1').setIndex('unit', 1, 0);
model.result('pg1').feature('glob1').setIndex('descr', 'Relative longitudinal wave speed', 0);
model.result('pg1').feature('glob1').setIndex('expr', 1, 1);
model.result('pg1').feature('glob1').setIndex('unit', 1, 1);
model.result('pg1').feature('glob1').setIndex('descr', 'Relative shear wave speed', 1);
model.result('pg1').feature('glob1').set('xdata', 'expr');
model.result('pg1').feature('glob1').set('xdataexpr', 'f0');
model.result('pg1').feature('glob1').set('linestyle', 'none');
model.result('pg1').feature('glob1').set('linecolor', 'red');
model.result('pg1').feature('glob1').set('linemarker', 'circle');
model.result('pg1').create('glob2', 'Global');
model.result('pg1').feature('glob2').set('markerpos', 'datapoints');
model.result('pg1').feature('glob2').set('linewidth', 'preference');
model.result('pg1').feature('glob2').setIndex('expr', 'omega0/solid.kn/cs_steel', 0);
model.result('pg1').feature('glob2').setIndex('unit', 1, 0);
model.result('pg1').feature('glob2').setIndex('descr', 'Relative out-of-plane wave speed', 0);
model.result('pg1').feature('glob2').set('xdata', 'expr');
model.result('pg1').feature('glob2').set('xdataexpr', 'f0');
model.result('pg1').feature('glob2').set('linestyle', 'none');
model.result('pg1').feature('glob2').set('linecolor', 'black');
model.result('pg1').feature('glob2').set('linemarker', 'point');
model.result('pg1').feature('glob2').create('filt1', 'GlobalFilter');
model.result('pg1').feature('glob2').feature('filt1').set('expr', '(abs(imag(solid.kn))<1)&&(real(solid.kn)>0)');
model.result('pg1').run;
model.result.duplicate('pg2', 'pg1');
model.result('pg2').label('Dispersion Curves, Out-of-plane Wave Number');
model.result('pg2').set('ylabel', 'kn (1/m)');
model.result('pg2').set('ymax', 'omegamax/cs_steel');
model.result('pg2').feature('glob1').setIndex('expr', 'kp', 0);
model.result('pg2').feature('glob1').setIndex('unit', '1/m', 0);
model.result('pg2').feature('glob1').setIndex('descr', 'Longitudinal wave number in steel', 0);
model.result('pg2').feature('glob1').setIndex('expr', 'ks', 1);
model.result('pg2').feature('glob1').setIndex('unit', '1/m', 1);
model.result('pg2').feature('glob1').setIndex('descr', 'Shear wave number in steel', 1);
model.result('pg2').feature('glob2').setIndex('expr', 'solid.kn', 0);
model.result('pg2').feature('glob2').setIndex('unit', '1/m', 0);
model.result('pg2').feature('glob2').setIndex('descr', 'Out-of-plane wave number', 0);
model.result('pg2').run;
model.result.dataset.create('extr1', 'Extrude2D');
model.result.dataset('extr1').set('data', 'dset2');
model.result.dataset('extr1').set('zmax', '10[cm]');
model.result.dataset('extr1').set('res', 100);
model.result.dataset('extr1').set('wavenumber', 'solid.kn');
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').label('Mode Shape');
model.result('pg3').set('looplevel', [15 100]);
model.result('pg3').set('titletype', 'manual');
model.result('pg3').set('paramindicator', 'kn = eval(real(solid.kn)) [1/m], v/cs = eval(omega0/real(solid.kn)/cs_steel)');
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('colortable', 'Prism');
model.result('pg3').feature('surf1').create('def1', 'Deform');
model.result('pg3').set('view', 'new');
model.result('pg3').set('looplevel', [12 100]);
model.result('pg3').run;
model.result('pg3').set('looplevel', [11 100]);
model.result('pg3').run;
model.result('pg3').set('looplevel', [10 100]);
model.result('pg3').run;
model.result('pg3').set('looplevel', [15 100]);
model.result('pg3').run;

model.modelNode.create('comp2', true);

model.geom.create('geom2', 3);
model.geom('geom2').model('comp2');

model.mesh.create('mesh2', 'geom2');

model.geom('geom2').insertFile('lamb_waves_ndt_plate_geom_sequence.mph', 'geom1');
model.geom('geom2').run('igf1');

model.func.create('rect1', 'Rectangle');
model.func('rect1').model('comp2');
model.func('rect1').set('lower', 0);
model.func('rect1').set('upper', '4*T0');
model.func('rect1').set('smoothactive', false);
model.func.create('an1', 'Analytic');
model.func('an1').model('comp2');
model.func('an1').label('Normal Velocity Source');
model.func('an1').set('funcname', 'vn');
model.func('an1').set('expr', 'sin(omega0*t)*(1 - cos(omega0*t/4))*rect1(t)');
model.func('an1').set('args', 't');
model.func('an1').set('fununit', 'm/s');
model.func('an1').setIndex('argunit', 's', 0);
model.func('an1').setIndex('plotargs', '10*T0', 0, 2);

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp2');
model.selection('sel1').label('Wedge');
model.selection('sel1').set([1]);
model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp2');
model.selection('sel2').label('Plate');
model.selection('sel2').set([2 3 4]);
model.selection.create('sel3', 'Explicit');
model.selection('sel3').model('comp2');
model.selection('sel3').label('AL');
model.selection('sel3').set([2 4]);
model.selection.create('sel4', 'Explicit');
model.selection('sel4').model('comp2');
model.selection('sel4').geom(0);
model.selection('sel4').set([27 28 42 44]);
model.selection('sel4').label('Probes');
model.selection.create('adj1', 'Adjacent');
model.selection('adj1').model('comp2');
model.selection('adj1').label('Exterior Boundaries');
model.selection('adj1').set('input', {'sel1' 'sel2'});

model.pair.create('p1', 'Identity', 'geom2');
model.pair('p1').source.set([23]);
model.pair('p1').destination.set([7]);

model.material.create('matlnk2', 'Link', 'comp2');
model.material('matlnk2').selection.named('sel2');
model.material('matlnk2').label('Steel');
model.material.create('matlnk3', 'Link', 'comp2');
model.material('matlnk3').selection.named('sel1');
model.material('matlnk3').set('link', 'mat2');
model.material('matlnk3').label('Plastic');

model.physics.create('elte', 'ElasticWavesTimeExplicit', 'geom2');
model.physics('elte').model('comp2');

model.study('std1').feature('mode').setSolveFor('/physics/elte', false);

model.physics('elte').feature('eltem1').create('cdisp1', 'ComputeDisplacement', 0);
model.physics('elte').feature('eltem1').feature('cdisp1').selection.named('sel4');
model.physics('elte').create('vel1', 'PrescribedVelocity', 2);
model.physics('elte').feature('vel1').selection.set([8]);
model.physics('elte').feature('vel1').set('coordinateSystem', 'sys2');
model.physics('elte').feature('vel1').set('v', {'0' '0' 'vn(t)'});
model.physics('elte').create('lrb1', 'LowReflectingBoundary', 2);
model.physics('elte').feature('lrb1').selection.set([1 4 6 10 13 20]);
model.physics('elte').create('frac1', 'Fracture', 2);
model.physics('elte').feature('frac1').selection.set([26]);

model.probe.create('point1', 'Point');
model.probe('point1').model('comp2');
model.probe('point1').selection.set([42]);
model.probe('point1').set('expr', 'elte.uy');
model.probe('point1').set('descractive', true);
model.probe('point1').set('descr', 'uy');
model.probe.duplicate('point2', 'point1');
model.probe('point2').selection.set([27]);
model.probe.duplicate('point3', 'point2');
model.probe('point3').selection.set([44]);
model.probe.duplicate('point4', 'point3');
model.probe('point4').selection.set([28]);

model.nodeGroup.create('grp1', 'Definitions', 'comp2');
model.nodeGroup('grp1').set('type', 'probe');
model.nodeGroup('grp1').add('probe', 'point1');
model.nodeGroup('grp1').add('probe', 'point2');
model.nodeGroup('grp1').add('probe', 'point3');
model.nodeGroup('grp1').add('probe', 'point4');
model.nodeGroup('grp1').label('y-displacement');

model.coordSystem.create('ab1', 'geom2', 'AbsorbingLayer');
model.coordSystem('ab1').selection.named('sel3');

model.mesh('mesh2').create('map1', 'Map');
model.mesh('mesh2').feature('map1').selection.set([13]);
model.mesh('mesh2').create('swe1', 'Sweep');
model.mesh('mesh2').feature('swe1').selection.geom('geom2', 3);
model.mesh('mesh2').feature('swe1').selection.named('sel2');
model.mesh('mesh2').feature('size').set('custom', true);
model.mesh('mesh2').feature('size').set('hmax', 'v_lamb/(1.5*2*f0)');
model.mesh('mesh2').create('ftet1', 'FreeTet');
model.mesh('mesh2').feature('ftet1').create('size1', 'Size');
model.mesh('mesh2').feature('ftet1').feature('size1').set('custom', true);
model.mesh('mesh2').feature('ftet1').feature('size1').set('hmaxactive', true);
model.mesh('mesh2').feature('ftet1').feature('size1').set('hmax', 'cp_plast/(1.5*2*f0)');
model.mesh('mesh2').feature('ftet1').set('optlevel', 'high');
model.mesh('mesh2').feature('ftet1').set('optsmall', true);
model.mesh('mesh2').run;

model.study.create('std2');
model.study('std2').create('time', 'Transient');
model.study('std2').feature('time').setSolveFor('/physics/solid', false);
model.study('std2').feature('time').setSolveFor('/physics/elte', true);
model.study('std2').label('Study 2 - Wave Propagation');
model.study('std2').feature('time').set('tlist', 'range(0, T0, 45*T0)');
model.study('std2').feature('time').setEntry('outputmap', 'elte', 'selection');
model.study('std2').feature('time').setEntry('outputselectionmap', 'elte', 'adj1');

model.sol.create('sol253');
model.sol('sol253').study('std2');
model.sol('sol253').create('st1', 'StudyStep');
model.sol('sol253').feature('st1').set('study', 'std2');
model.sol('sol253').feature('st1').set('studystep', 'time');
model.sol('sol253').create('v1', 'Variables');
model.sol('sol253').feature('v1').set('control', 'time');
model.sol('sol253').create('t1', 'Time');
model.sol('sol253').feature('t1').set('odesolvertype', 'explicit');
model.sol('sol253').feature('t1').set('timemethodexp', 'erk');
model.sol('sol253').feature('t1').set('tlist', 'range(0, T0, 45*T0)');
model.sol('sol253').feature('t1').set('plot', 'off');
model.sol('sol253').feature('t1').set('plotgroup', 'pg1');
model.sol('sol253').feature('t1').set('plotfreq', 'tout');
model.sol('sol253').feature('t1').set('probesel', 'all');
model.sol('sol253').feature('t1').set('probes', {'point1' 'point2' 'point3' 'point4'});
model.sol('sol253').feature('t1').set('probefreq', 'tsteps');
model.sol('sol253').feature('t1').set('exprs', {'root.comp2.elte.wtc' 'root.comp2.elte.wtc'});
model.sol('sol253').feature('t1').set('tstepping', 'elemexprs');
model.sol('sol253').feature('t1').set('control', 'time');
model.sol('sol253').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol253').feature('t1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol253').feature('t1').feature.remove('fcDef');
model.sol('sol253').attach('std2');

model.probe('point1').genResult('none');
model.probe('point2').genResult('none');
model.probe('point3').genResult('none');
model.probe('point4').genResult('none');

model.sol('sol253').runAll;

model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').label('Velocity Magnitude (elte)');
model.result('pg5').set('showlegendsunit', true);
model.result('pg5').set('data', 'dset4');
model.result('pg5').setIndex('looplevel', 46, 0);
model.result('pg5').set('defaultPlotID', 'ElasticWavesTimeExplicit/phys1/pdef1/pcond1/pg1');
model.result('pg5').feature.create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('resolution', 'custom');
model.result('pg5').feature('surf1').set('refine', 6);
model.result('pg5').feature('surf1').set('smooth', 'internal');
model.result('pg5').feature('surf1').set('data', 'parent');
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').label('Pressure (elte)');
model.result('pg6').set('showlegendsunit', true);
model.result('pg6').set('data', 'dset4');
model.result('pg6').setIndex('looplevel', 46, 0);
model.result('pg6').set('defaultPlotID', 'ElasticWavesTimeExplicit/phys1/pdef1/pcond1/pg2');
model.result('pg6').feature.create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', 'elte.p');
model.result('pg6').feature('surf1').set('colortable', 'Wave');
model.result('pg6').feature('surf1').set('colorscalemode', 'linearsymmetric');
model.result('pg6').feature('surf1').set('resolution', 'custom');
model.result('pg6').feature('surf1').set('refine', 6);
model.result('pg6').feature('surf1').set('smooth', 'internal');
model.result('pg6').feature('surf1').set('data', 'parent');
model.result('pg5').feature('surf1').create('sel1', 'Selection');
model.result('pg5').feature('surf1').feature('sel1').selection.geom('geom2', 3);
model.result('pg5').feature('surf1').feature('sel1').selection.named('sel2');
model.result('pg5').feature('surf1').set('colortable', 'Prism');
model.result('pg5').set('view', 'new');
model.result('pg5').setIndex('looplevel', 23, 0);
model.result('pg5').run;
model.result('pg5').setIndex('looplevel', 29, 0);
model.result('pg5').run;
model.result('pg5').setIndex('looplevel', 35, 0);
model.result('pg5').run;
model.result('pg5').setIndex('looplevel', 17, 0);
model.result('pg5').run;
model.result('pg4').set('window', 'window2');
model.result('pg4').set('windowtitle', 'Probe Plot 2');
model.result('pg4').label('Probe Plot Displacements');
model.result('pg4').set('ylabelactive', true);
model.result('pg4').set('ylabel', 'Vertical displacement (m)');
model.result('pg4').set('legendlayout', 'outside');
model.result('pg4').set('legendposoutside', 'bottom');
model.result('pg4').set('legendrowcount', 2);
model.result('pg4').set('window', 'window2');
model.result('pg4').set('windowtitle', 'Probe Plot 2');
model.result('pg4').feature('tblp1').set('plotcolumns', [2 3]);
model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').label('Velocity, y-component');
model.result('pg7').set('data', 'dset4');
model.result('pg7').setIndex('looplevelinput', 'manual', 0);
model.result('pg7').setIndex('looplevel', [17], 0);
model.result('pg7').set('titletype', 'label');
model.result('pg7').create('lngr1', 'LineGraph');
model.result('pg7').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg7').feature('lngr1').set('linewidth', 'preference');
model.result('pg7').feature('lngr1').selection.set([43 45 46]);
model.result('pg7').feature('lngr1').set('expr', 'v2y');
model.result('pg7').feature('lngr1').set('xdata', 'expr');
model.result('pg7').feature('lngr1').set('xdataexpr', 'z');
model.result('pg7').feature('lngr1').set('legend', true);
model.result('pg7').feature('lngr1').set('legendmethod', 'manual');
model.result('pg7').feature('lngr1').setIndex('legends', 'upside', 0);
model.result('pg7').feature.duplicate('lngr2', 'lngr1');
model.result('pg7').feature('lngr2').selection.set([29]);
model.result('pg7').feature('lngr2').setIndex('legends', 'downside', 0);
model.result('pg7').run;
model.result.duplicate('pg8', 'pg7');
model.result('pg8').label('Velocity, z-component');
model.result('pg8').feature('lngr1').set('expr', 'v2z');
model.result('pg8').feature('lngr2').set('expr', 'v2z');
model.result('pg8').run;

model.title('Generation of Lamb Waves for Nondestructive Inspection of Plate Specimens');

model.description(['Numerical modeling of Lamb waves, which belong to guided waves, is essential for the analysis and design of the structural health monitoring (SHM) systems for long range ultrasonic testing. The design of an SHM system based on guided waves consists of two main parts. In the first place, it is required to know the dispersion curves for the modes that can propagate in the waveguide of a certain cross section. In the second place, the propagation of a chosen mode through the waveguide and its reflection from a possible irregularity in the cross-section area (a fracture or a corrosion defect) is analyzed in the time domain.' newline  newline 'This tutorial studies the propagation of guided waves in a steel plate with a finite width and thickness. The Mode Analysis study for the Solid Mechanics physics interface applied on the 2D cross section of the plate computes the propagating modes. This approach is also sometimes referred to as the semi-analytical finite element (SAFE) method. An angle beam wedge excites the desired mode in the plate with a flaw, which is modeled in 3D using the Elastic Wave, Time Explicit physics interface.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;
model.sol('sol8').clearSolutionData;
model.sol('sol9').clearSolutionData;
model.sol('sol10').clearSolutionData;
model.sol('sol11').clearSolutionData;
model.sol('sol12').clearSolutionData;
model.sol('sol13').clearSolutionData;
model.sol('sol14').clearSolutionData;
model.sol('sol15').clearSolutionData;
model.sol('sol16').clearSolutionData;
model.sol('sol17').clearSolutionData;
model.sol('sol18').clearSolutionData;
model.sol('sol19').clearSolutionData;
model.sol('sol20').clearSolutionData;
model.sol('sol21').clearSolutionData;
model.sol('sol22').clearSolutionData;
model.sol('sol23').clearSolutionData;
model.sol('sol24').clearSolutionData;
model.sol('sol25').clearSolutionData;
model.sol('sol26').clearSolutionData;
model.sol('sol27').clearSolutionData;
model.sol('sol28').clearSolutionData;
model.sol('sol29').clearSolutionData;
model.sol('sol30').clearSolutionData;
model.sol('sol31').clearSolutionData;
model.sol('sol32').clearSolutionData;
model.sol('sol33').clearSolutionData;
model.sol('sol34').clearSolutionData;
model.sol('sol35').clearSolutionData;
model.sol('sol36').clearSolutionData;
model.sol('sol37').clearSolutionData;
model.sol('sol38').clearSolutionData;
model.sol('sol39').clearSolutionData;
model.sol('sol40').clearSolutionData;
model.sol('sol41').clearSolutionData;
model.sol('sol42').clearSolutionData;
model.sol('sol43').clearSolutionData;
model.sol('sol44').clearSolutionData;
model.sol('sol45').clearSolutionData;
model.sol('sol46').clearSolutionData;
model.sol('sol47').clearSolutionData;
model.sol('sol48').clearSolutionData;
model.sol('sol49').clearSolutionData;
model.sol('sol50').clearSolutionData;
model.sol('sol51').clearSolutionData;
model.sol('sol52').clearSolutionData;
model.sol('sol53').clearSolutionData;
model.sol('sol54').clearSolutionData;
model.sol('sol55').clearSolutionData;
model.sol('sol56').clearSolutionData;
model.sol('sol57').clearSolutionData;
model.sol('sol58').clearSolutionData;
model.sol('sol59').clearSolutionData;
model.sol('sol60').clearSolutionData;
model.sol('sol61').clearSolutionData;
model.sol('sol62').clearSolutionData;
model.sol('sol63').clearSolutionData;
model.sol('sol64').clearSolutionData;
model.sol('sol65').clearSolutionData;
model.sol('sol66').clearSolutionData;
model.sol('sol67').clearSolutionData;
model.sol('sol68').clearSolutionData;
model.sol('sol69').clearSolutionData;
model.sol('sol70').clearSolutionData;
model.sol('sol71').clearSolutionData;
model.sol('sol72').clearSolutionData;
model.sol('sol73').clearSolutionData;
model.sol('sol74').clearSolutionData;
model.sol('sol75').clearSolutionData;
model.sol('sol76').clearSolutionData;
model.sol('sol77').clearSolutionData;
model.sol('sol78').clearSolutionData;
model.sol('sol79').clearSolutionData;
model.sol('sol80').clearSolutionData;
model.sol('sol81').clearSolutionData;
model.sol('sol82').clearSolutionData;
model.sol('sol83').clearSolutionData;
model.sol('sol84').clearSolutionData;
model.sol('sol85').clearSolutionData;
model.sol('sol86').clearSolutionData;
model.sol('sol87').clearSolutionData;
model.sol('sol88').clearSolutionData;
model.sol('sol89').clearSolutionData;
model.sol('sol90').clearSolutionData;
model.sol('sol91').clearSolutionData;
model.sol('sol92').clearSolutionData;
model.sol('sol93').clearSolutionData;
model.sol('sol94').clearSolutionData;
model.sol('sol95').clearSolutionData;
model.sol('sol96').clearSolutionData;
model.sol('sol97').clearSolutionData;
model.sol('sol98').clearSolutionData;
model.sol('sol99').clearSolutionData;
model.sol('sol100').clearSolutionData;
model.sol('sol101').clearSolutionData;
model.sol('sol102').clearSolutionData;
model.sol('sol103').clearSolutionData;
model.sol('sol104').clearSolutionData;
model.sol('sol105').clearSolutionData;
model.sol('sol106').clearSolutionData;
model.sol('sol107').clearSolutionData;
model.sol('sol108').clearSolutionData;
model.sol('sol109').clearSolutionData;
model.sol('sol110').clearSolutionData;
model.sol('sol111').clearSolutionData;
model.sol('sol112').clearSolutionData;
model.sol('sol113').clearSolutionData;
model.sol('sol114').clearSolutionData;
model.sol('sol115').clearSolutionData;
model.sol('sol116').clearSolutionData;
model.sol('sol117').clearSolutionData;
model.sol('sol118').clearSolutionData;
model.sol('sol119').clearSolutionData;
model.sol('sol120').clearSolutionData;
model.sol('sol121').clearSolutionData;
model.sol('sol122').clearSolutionData;
model.sol('sol123').clearSolutionData;
model.sol('sol124').clearSolutionData;
model.sol('sol125').clearSolutionData;
model.sol('sol126').clearSolutionData;
model.sol('sol127').clearSolutionData;
model.sol('sol128').clearSolutionData;
model.sol('sol129').clearSolutionData;
model.sol('sol130').clearSolutionData;
model.sol('sol131').clearSolutionData;
model.sol('sol132').clearSolutionData;
model.sol('sol133').clearSolutionData;
model.sol('sol134').clearSolutionData;
model.sol('sol135').clearSolutionData;
model.sol('sol136').clearSolutionData;
model.sol('sol137').clearSolutionData;
model.sol('sol138').clearSolutionData;
model.sol('sol139').clearSolutionData;
model.sol('sol140').clearSolutionData;
model.sol('sol141').clearSolutionData;
model.sol('sol142').clearSolutionData;
model.sol('sol143').clearSolutionData;
model.sol('sol144').clearSolutionData;
model.sol('sol145').clearSolutionData;
model.sol('sol146').clearSolutionData;
model.sol('sol147').clearSolutionData;
model.sol('sol148').clearSolutionData;
model.sol('sol149').clearSolutionData;
model.sol('sol150').clearSolutionData;
model.sol('sol151').clearSolutionData;
model.sol('sol152').clearSolutionData;
model.sol('sol153').clearSolutionData;
model.sol('sol154').clearSolutionData;
model.sol('sol155').clearSolutionData;
model.sol('sol156').clearSolutionData;
model.sol('sol157').clearSolutionData;
model.sol('sol158').clearSolutionData;
model.sol('sol159').clearSolutionData;
model.sol('sol160').clearSolutionData;
model.sol('sol161').clearSolutionData;
model.sol('sol162').clearSolutionData;
model.sol('sol163').clearSolutionData;
model.sol('sol164').clearSolutionData;
model.sol('sol165').clearSolutionData;
model.sol('sol166').clearSolutionData;
model.sol('sol167').clearSolutionData;
model.sol('sol168').clearSolutionData;
model.sol('sol169').clearSolutionData;
model.sol('sol170').clearSolutionData;
model.sol('sol171').clearSolutionData;
model.sol('sol172').clearSolutionData;
model.sol('sol173').clearSolutionData;
model.sol('sol174').clearSolutionData;
model.sol('sol175').clearSolutionData;
model.sol('sol176').clearSolutionData;
model.sol('sol177').clearSolutionData;
model.sol('sol178').clearSolutionData;
model.sol('sol179').clearSolutionData;
model.sol('sol180').clearSolutionData;
model.sol('sol181').clearSolutionData;
model.sol('sol182').clearSolutionData;
model.sol('sol183').clearSolutionData;
model.sol('sol184').clearSolutionData;
model.sol('sol185').clearSolutionData;
model.sol('sol186').clearSolutionData;
model.sol('sol187').clearSolutionData;
model.sol('sol188').clearSolutionData;
model.sol('sol189').clearSolutionData;
model.sol('sol190').clearSolutionData;
model.sol('sol191').clearSolutionData;
model.sol('sol192').clearSolutionData;
model.sol('sol193').clearSolutionData;
model.sol('sol194').clearSolutionData;
model.sol('sol195').clearSolutionData;
model.sol('sol196').clearSolutionData;
model.sol('sol197').clearSolutionData;
model.sol('sol198').clearSolutionData;
model.sol('sol199').clearSolutionData;
model.sol('sol200').clearSolutionData;
model.sol('sol201').clearSolutionData;
model.sol('sol202').clearSolutionData;
model.sol('sol203').clearSolutionData;
model.sol('sol204').clearSolutionData;
model.sol('sol205').clearSolutionData;
model.sol('sol206').clearSolutionData;
model.sol('sol207').clearSolutionData;
model.sol('sol208').clearSolutionData;
model.sol('sol209').clearSolutionData;
model.sol('sol210').clearSolutionData;
model.sol('sol211').clearSolutionData;
model.sol('sol212').clearSolutionData;
model.sol('sol213').clearSolutionData;
model.sol('sol214').clearSolutionData;
model.sol('sol215').clearSolutionData;
model.sol('sol216').clearSolutionData;
model.sol('sol217').clearSolutionData;
model.sol('sol218').clearSolutionData;
model.sol('sol219').clearSolutionData;
model.sol('sol220').clearSolutionData;
model.sol('sol221').clearSolutionData;
model.sol('sol222').clearSolutionData;
model.sol('sol223').clearSolutionData;
model.sol('sol224').clearSolutionData;
model.sol('sol225').clearSolutionData;
model.sol('sol226').clearSolutionData;
model.sol('sol227').clearSolutionData;
model.sol('sol228').clearSolutionData;
model.sol('sol229').clearSolutionData;
model.sol('sol230').clearSolutionData;
model.sol('sol231').clearSolutionData;
model.sol('sol232').clearSolutionData;
model.sol('sol233').clearSolutionData;
model.sol('sol234').clearSolutionData;
model.sol('sol235').clearSolutionData;
model.sol('sol236').clearSolutionData;
model.sol('sol237').clearSolutionData;
model.sol('sol238').clearSolutionData;
model.sol('sol239').clearSolutionData;
model.sol('sol240').clearSolutionData;
model.sol('sol241').clearSolutionData;
model.sol('sol242').clearSolutionData;
model.sol('sol243').clearSolutionData;
model.sol('sol244').clearSolutionData;
model.sol('sol245').clearSolutionData;
model.sol('sol246').clearSolutionData;
model.sol('sol247').clearSolutionData;
model.sol('sol248').clearSolutionData;
model.sol('sol249').clearSolutionData;
model.sol('sol250').clearSolutionData;
model.sol('sol251').clearSolutionData;
model.sol('sol252').clearSolutionData;
model.sol('sol253').clearSolutionData;

model.label('lamb_waves_ndt_plate.mph');

model.modelNode.label('Components');

out = model;
