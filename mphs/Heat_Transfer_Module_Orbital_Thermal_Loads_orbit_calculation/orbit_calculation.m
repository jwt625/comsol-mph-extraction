function out = model
%
% orbit_calculation.m
%
% Model exported on May 26 2025, 21:29 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Heat_Transfer_Module/Orbital_Thermal_Loads');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('otl', 'OrbitalThermalLoadsEvents', 'geom1');
model.physics('otl').model('comp1');

model.study.create('std1');
model.study('std1').create('oc', 'OrbitCalculation');
model.study('std1').feature('oc').set('solnum', 'auto');
model.study('std1').feature('oc').set('notsolnum', 'auto');
model.study('std1').feature('oc').set('outputmap', {});
model.study('std1').feature('oc').setSolveFor('/physics/otl', true);

model.geom('geom1').create('blk1', 'Block');
model.geom('geom1').feature('blk1').set('size', {'10[cm]' '10[cm]' '1'});
model.geom('geom1').feature('blk1').setIndex('size', '10[cm]', 2);
model.geom('geom1').feature('blk1').set('base', 'center');
model.geom('geom1').run('blk1');
model.geom('geom1').create('cyl1', 'Cylinder');
model.geom('geom1').feature('cyl1').set('r', '2[cm]');
model.geom('geom1').feature('cyl1').set('h', '2[cm]');
model.geom('geom1').feature('cyl1').set('pos', {'0' '0' '5[cm]'});
model.geom('geom1').run('cyl1');
model.geom('geom1').create('cyl2', 'Cylinder');
model.geom('geom1').feature('cyl2').set('r', '1.8[cm]');
model.geom('geom1').feature('cyl2').set('h', '3[cm]');
model.geom('geom1').feature('cyl2').set('pos', {'0' '0' '4.5[cm]'});
model.geom('geom1').run('cyl2');
model.geom('geom1').create('pard1', 'PartitionDomains');
model.geom('geom1').feature('pard1').selection('domain').set('cyl2', 1);
model.geom('geom1').feature('pard1').set('partitionwith', 'faces');
model.geom('geom1').feature('pard1').selection('face').set('blk1', 4);
model.geom('geom1').run('pard1');
model.geom('geom1').create('dif1', 'Difference');
model.geom('geom1').feature('dif1').selection('input').set({'blk1' 'cyl1'});
model.geom('geom1').feature('dif1').selection('input2').set({'pard1'});
model.geom('geom1').feature('dif1').set('intbnd', false);
model.geom('geom1').runPre('fin');
model.geom('geom1').run;

model.physics('otl').feature('plp1').set('planetAlbedoTypeSolAmb', 'userdefDistribution');
model.physics('otl').feature('plp1').set('planetAlbedoSolAmb', 0.3);
model.physics('otl').feature('plp1').set('planetRadiativeFluxTypeSolAmb', 'userdefBand');
model.physics('otl').feature('plp1').setIndex('planetRadiativeFluxEachBandSolAmb', '225[W/m^2]', 1, 0);
model.physics('otl').feature('op1').set('orbitType', 'circular');
model.physics('otl').feature('op1').set('R_orbit', 'otl.R_planet+400[km]');
model.physics('otl').feature('op1').set('i_orbit', '50[deg]');
model.physics('otl').feature('so1').set('primaryRotation', 'rate');
model.physics('otl').feature('so1').set('primaryAngularRate', '2*360[deg]/otl.T_orbit');
model.physics('otl').feature('dsurf1').set('epsilon_radSolAmb_mat', 'userdefBand');
model.physics('otl').feature('dsurf1').setIndex('epsilon_rad_bandSolAmb', 0.2, 0, 0);
model.physics('otl').feature('dsurf1').setIndex('epsilon_rad_bandSolAmb', 0.85, 1, 0);
model.physics('otl').create('dsurf2', 'DiffuseSurface', 2);
model.physics('otl').feature('dsurf2').selection.set([1 2 5 20]);
model.physics('otl').feature('dsurf2').set('epsilon_radSolAmb_mat', 'userdefBand');
model.physics('otl').feature('dsurf2').setIndex('epsilon_rad_bandSolAmb', 0.99, 0, 0);
model.physics('otl').feature('dsurf2').setIndex('epsilon_rad_bandSolAmb', 0.95, 1, 0);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'oc');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'oc');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.1,1)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('eventout', true);
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', false);
model.sol('sol1').feature('t1').set('tstepsbdf', 'intermediate');
model.sol('sol1').feature('t1').set('endtimeinterpolation', false);
model.sol('sol1').feature('t1').set('estrat', 'exclude');
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('control', 'oc');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 5);
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d1').label('Direct, radiation variables (otl)');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('t1').feature('i1').label('AMG, radiation variables (otl)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').create('i2', 'Iterative');
model.sol('sol1').feature('t1').feature('i2').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i2').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i2').set('rhob', 20);
model.sol('sol1').feature('t1').feature('i2').label('GMG, radiation variables (otl)');
model.sol('sol1').feature('t1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('prefun', 'gmg');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('mcasegen', 'any');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 5);
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.dataset.create('ps1', 'ParSurface');
model.result.dataset('ps1').label('Planet');
model.result.dataset('ps1').set('data', 'none');
model.result.dataset('ps1').set('par1', 'Longitude');
model.result.dataset('ps1').set('parmin1', '-pi');
model.result.dataset('ps1').set('parmax1', 'pi');
model.result.dataset('ps1').set('par2', 'Latitude');
model.result.dataset('ps1').set('parmin2', '-0.5*pi');
model.result.dataset('ps1').set('parmax2', '0.5*pi');
model.result.dataset('ps1').set('exprx', 'comp1.otl.x_planet(comp1.otl.R_planet,comp1.otl.rot_planet,comp1.otl.A_off,Latitude,Longitude)');
model.result.dataset('ps1').set('expry', 'comp1.otl.y_planet(comp1.otl.R_planet,comp1.otl.rot_planet,comp1.otl.A_off,Latitude,Longitude)');
model.result.dataset('ps1').set('exprz', 'comp1.otl.z_planet(comp1.otl.R_planet,comp1.otl.rot_planet,Latitude,Longitude)');
model.result.dataset('ps1').set('global', true);
model.result.dataset('ps1').set('res1', 360);
model.result.dataset('ps1').set('res2', 180);
model.result.dataset('ps1').set('data', 'none');
model.result.dataset.create('tran1', 'Transformation3D');
model.result.dataset('tran1').label('Spacecraft Orbit');
model.result.dataset('tran1').set('data', 'none');
model.result.dataset('tran1').set('transtype', 'general');
model.result.dataset('tran1').set('transmatrix', {'comp1.otl.Tviz11' 'comp1.otl.Tviz12' 'comp1.otl.Tviz13'; 'comp1.otl.Tviz21' 'comp1.otl.Tviz22' 'comp1.otl.Tviz23'; 'comp1.otl.Tviz31' 'comp1.otl.Tviz32' 'comp1.otl.Tviz33'});
model.result.dataset('tran1').set('translation', {'comp1.otl.X_viz' 'comp1.otl.Y_viz' 'comp1.otl.Z_viz'});
model.result.dataset('tran1').set('data', 'dset1');
model.result.dataset('ps1').set('data', 'dset1');
model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').label('Orbit Visualization (otl)');
model.result('pg1').set('data', 'ps1');
model.result('pg1').setIndex('looplevel', 25, 0);
model.result('pg1').set('titletype', 'label');
model.result('pg1').set('data', 'ps1');
model.result('pg1').setIndex('looplevel', 25, 0);
model.result('pg1').set('defaultPlotID', 'otl/OTL_PhysicsInterfaces/icom2/pdef1/pcond4/pg2');
model.result('pg1').feature.create('img1', 'Image');
model.result('pg1').feature('img1').label('Planet');
model.result('pg1').feature('img1').set('showsolutionparams', 'on');
model.result('pg1').feature('img1').set('solutionparams', 'parent');
model.result('pg1').feature('img1').set('filename', 'data:///physics/images/earth.jpg');
model.result('pg1').feature('img1').set('mapping', 'manual');
model.result('pg1').feature('img1').set('uexpr', '0.5*(Longitude-pi)/pi');
model.result('pg1').feature('img1').set('vexpr', '(Latitude+0.5*pi)/pi');
model.result('pg1').feature('img1').set('resolution', 'norefine');
model.result('pg1').feature('img1').set('showsolutionparams', 'on');
model.result('pg1').feature('img1').set('data', 'parent');
model.result('pg1').feature.create('pttraj1', 'PointTrajectories');
model.result('pg1').feature('pttraj1').label('Spacecraft Orbit');
model.result('pg1').feature('pttraj1').set('showsolutionparams', 'on');
model.result('pg1').feature('pttraj1').set('solutionparams', 'parent');
model.result('pg1').feature('pttraj1').set('expr', {'otl.X_ECSViz' 'otl.Y_ECSViz' 'otl.Z_ECSViz'});
model.result('pg1').feature('pttraj1').set('titletype', 'none');
model.result('pg1').feature('pttraj1').set('linetype', 'tube');
model.result('pg1').feature('pttraj1').set('interpolation', 'uniform');
model.result('pg1').feature('pttraj1').set('interpcount', 500);
model.result('pg1').feature('pttraj1').set('radiusexpr', '0.01*otl.R_planet');
model.result('pg1').feature('pttraj1').set('tuberadiusscaleactive', true);
model.result('pg1').feature('pttraj1').set('showsolutionparams', 'on');
model.result('pg1').feature('pttraj1').set('data', 'parent');
model.result('pg1').feature('pttraj1').feature.create('col1', 'Color');
model.result('pg1').feature('pttraj1').feature('col1').set('expr', 'otl.isIlluminated');
model.result('pg1').feature('pttraj1').feature('col1').set('rangecoloractive', 'on');
model.result('pg1').feature('pttraj1').feature('col1').set('rangecolormax', 1);
model.result('pg1').feature('pttraj1').feature('col1').set('coloring', 'gradient');
model.result('pg1').feature('pttraj1').feature('col1').set('colorlegend', false);
model.result('pg1').feature('pttraj1').feature('col1').set('topcolor', 'yellow');
model.result('pg1').feature.create('pttraj2', 'PointTrajectories');
model.result('pg1').feature('pttraj2').label('Sun Vector');
model.result('pg1').feature('pttraj2').set('showsolutionparams', 'on');
model.result('pg1').feature('pttraj2').set('solutionparams', 'parent');
model.result('pg1').feature('pttraj2').set('expr', {'-1.5*otl.R_planet*otl.SVX_ECS' '-1.5*otl.R_planet*otl.SVY_ECS' '-1.5*otl.R_planet*otl.SVZ_ECS'});
model.result('pg1').feature('pttraj2').set('titletype', 'none');
model.result('pg1').feature('pttraj2').set('linetype', 'tube');
model.result('pg1').feature('pttraj2').set('radiusexpr', '0.01*otl.R_planet');
model.result('pg1').feature('pttraj2').set('tuberadiusscaleactive', true);
model.result('pg1').feature('pttraj2').set('pointtype', 'arrow');
model.result('pg1').feature('pttraj2').set('pointcolor', 'yellow');
model.result('pg1').feature('pttraj2').set('arrowexpr', {'0.5*otl.SVX_ECS*otl.R_planet' '0.5*otl.SVY_ECS*otl.R_planet' '0.5*otl.SVZ_ECS*otl.R_planet'});
model.result('pg1').feature('pttraj2').set('arrowbase', 'head');
model.result('pg1').feature('pttraj2').set('arrowscaleactive', true);
model.result('pg1').feature('pttraj2').set('showsolutionparams', 'on');
model.result('pg1').feature('pttraj2').set('data', 'parent');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').label('Eclipse');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('solutionparams', 'parent');
model.result('pg1').feature('surf1').set('expr', '1');
model.result('pg1').feature('surf1').set('titletype', 'none');
model.result('pg1').feature('surf1').set('coloring', 'uniform');
model.result('pg1').feature('surf1').set('color', 'black');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result('pg1').feature('surf1').feature.create('filt1', 'Filter');
model.result('pg1').feature('surf1').feature('filt1').set('expr', 'otl.SVX_ECS*x+otl.SVY_ECS*y+otl.SVZ_ECS*z>0');
model.result('pg1').feature('surf1').feature('filt1').set('shownodespec', 'on');
model.result('pg1').feature('surf1').feature.create('tran1', 'Transparency');
model.result('pg1').feature('surf1').feature('tran1').set('transparency', 0.7);
model.result('pg1').feature('surf1').feature.create('def1', 'Deform');
model.result('pg1').feature('surf1').feature('def1').set('expr', {'(-1+otl.scale_eclipse/otl.R_planet)*x' '(-1+otl.scale_eclipse/otl.R_planet)*y' '(-1+otl.scale_eclipse/otl.R_planet)*z'});
model.result('pg1').feature('surf1').feature('def1').set('scaleactive', true);
model.result('pg1').feature.create('con1', 'Contour');
model.result('pg1').feature('con1').label('Equator');
model.result('pg1').feature('con1').set('showsolutionparams', 'on');
model.result('pg1').feature('con1').set('solutionparams', 'parent');
model.result('pg1').feature('con1').set('expr', 'Latitude');
model.result('pg1').feature('con1').set('titletype', 'none');
model.result('pg1').feature('con1').set('levelmethod', 'levels');
model.result('pg1').feature('con1').set('coloring', 'uniform');
model.result('pg1').feature('con1').set('colorlegend', false);
model.result('pg1').feature('con1').set('color', 'black');
model.result('pg1').feature('con1').set('showsolutionparams', 'on');
model.result('pg1').feature('con1').set('data', 'parent');
model.result('pg1').feature.create('con2', 'Contour');
model.result('pg1').feature('con2').label('Prime Meridian');
model.result('pg1').feature('con2').set('showsolutionparams', 'on');
model.result('pg1').feature('con2').set('solutionparams', 'parent');
model.result('pg1').feature('con2').set('expr', 'Longitude');
model.result('pg1').feature('con2').set('titletype', 'none');
model.result('pg1').feature('con2').set('levelmethod', 'levels');
model.result('pg1').feature('con2').set('coloring', 'uniform');
model.result('pg1').feature('con2').set('colorlegend', false);
model.result('pg1').feature('con2').set('color', 'black');
model.result('pg1').feature('con2').set('showsolutionparams', 'on');
model.result('pg1').feature('con2').set('data', 'parent');
model.result('pg1').feature.create('surf2', 'Surface');
model.result('pg1').feature('surf2').label('Spacecraft');
model.result('pg1').feature('surf2').set('data', 'tran1');
model.result('pg1').feature('surf2').setIndex('looplevel', 25, 0);
model.result('pg1').feature('surf2').set('solutionparams', 'parent');
model.result('pg1').feature('surf2').set('expr', '1');
model.result('pg1').feature('surf2').set('titletype', 'none');
model.result('pg1').feature('surf2').set('coloring', 'uniform');
model.result('pg1').feature('surf2').set('color', 'gray');
model.result('pg1').feature('surf2').set('resolution', 'norefine');
model.result('pg1').feature('surf2').set('data', 'tran1');
model.result('pg1').run;
model.result('pg1').set('looplevel', [20]);
model.result('pg1').run;
model.result('pg1').stepLast(0);
model.result('pg1').run;
model.result.evaluationGroup.create('eg1', 'EvaluationGroup');
model.result.evaluationGroup('eg1').label('Orbit Variables');
model.result.evaluationGroup('eg1').setIndex('looplevelinput', 'first', 0);
model.result.evaluationGroup('eg1').set('transpose', true);
model.result.evaluationGroup('eg1').set('includeparameters', false);
model.result.evaluationGroup('eg1').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'otl.t_inEclipse', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 's', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Beginning of eclipse', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'otl.t_outEclipse', 1);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 's', 1);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'End of eclipse', 1);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'otl.T_orbit', 2);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 's', 2);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Orbit period', 2);
model.result.evaluationGroup('eg1').run;

model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl('intop1').set('axisym', true);
model.cpl('intop1').selection.geom('geom1', 2);
model.cpl('intop1').selection.all;

model.mesh('mesh1').autoMeshSize(9);

model.study.create('std2');
model.study('std2').create('otl', 'OrbitThermalLoads');
model.study('std2').feature('otl').set('plotgroup', 'Default');
model.study('std2').feature('otl').set('solnum', 'auto');
model.study('std2').feature('otl').set('notsolnum', 'auto');
model.study('std2').feature('otl').set('outputmap', {});
model.study('std2').feature('otl').setSolveFor('/physics/otl', true);
model.study('std2').feature('otl').set('orbitlist', 'range(0,0.005,1)');

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'otl');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'otl');
model.sol('sol2').create('t1', 'Time');
model.sol('sol2').feature('t1').set('tlist', 'range(0,0.1,1)');
model.sol('sol2').feature('t1').set('plot', 'off');
model.sol('sol2').feature('t1').set('plotgroup', 'Default');
model.sol('sol2').feature('t1').set('plotfreq', 'tout');
model.sol('sol2').feature('t1').set('probesel', 'all');
model.sol('sol2').feature('t1').set('probes', {});
model.sol('sol2').feature('t1').set('probefreq', 'tsteps');
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol2').feature('t1').set('eventout', true);
model.sol('sol2').feature('t1').set('reacf', true);
model.sol('sol2').feature('t1').set('storeudot', false);
model.sol('sol2').feature('t1').set('tstepsbdf', 'intermediate');
model.sol('sol2').feature('t1').set('endtimeinterpolation', false);
model.sol('sol2').feature('t1').set('estrat', 'exclude');
model.sol('sol2').feature('t1').set('maxorder', 2);
model.sol('sol2').feature('t1').set('control', 'otl');
model.sol('sol2').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol2').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('maxiter', 5);
model.sol('sol2').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol2').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol2').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol2').feature('t1').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t1').feature('d1').label('Direct, radiation variables (otl)');
model.sol('sol2').feature('t1').create('i1', 'Iterative');
model.sol('sol2').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol2').feature('t1').feature('i1').label('AMG, radiation variables (otl)');
model.sol('sol2').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').create('i2', 'Iterative');
model.sol('sol2').feature('t1').feature('i2').set('linsolver', 'gmres');
model.sol('sol2').feature('t1').feature('i2').set('prefuntype', 'left');
model.sol('sol2').feature('t1').feature('i2').set('rhob', 20);
model.sol('sol2').feature('t1').feature('i2').label('GMG, radiation variables (otl)');
model.sol('sol2').feature('t1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').set('prefun', 'gmg');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').set('mcasegen', 'any');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol2').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('maxiter', 5);
model.sol('sol2').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol2').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol2').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol2').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol2').feature('t1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result.dataset.create('ps2', 'ParSurface');
model.result.dataset('ps2').label('Planet 1');
model.result.dataset('ps2').set('data', 'none');
model.result.dataset('ps2').set('par1', 'Longitude');
model.result.dataset('ps2').set('parmin1', '-pi');
model.result.dataset('ps2').set('parmax1', 'pi');
model.result.dataset('ps2').set('par2', 'Latitude');
model.result.dataset('ps2').set('parmin2', '-0.5*pi');
model.result.dataset('ps2').set('parmax2', '0.5*pi');
model.result.dataset('ps2').set('exprx', 'comp1.otl.x_planet(comp1.otl.R_planet,comp1.otl.rot_planet,comp1.otl.A_off,Latitude,Longitude)');
model.result.dataset('ps2').set('expry', 'comp1.otl.y_planet(comp1.otl.R_planet,comp1.otl.rot_planet,comp1.otl.A_off,Latitude,Longitude)');
model.result.dataset('ps2').set('exprz', 'comp1.otl.z_planet(comp1.otl.R_planet,comp1.otl.rot_planet,Latitude,Longitude)');
model.result.dataset('ps2').set('global', true);
model.result.dataset('ps2').set('res1', 360);
model.result.dataset('ps2').set('res2', 180);
model.result.dataset('ps2').set('data', 'none');
model.result.dataset.create('tran2', 'Transformation3D');
model.result.dataset('tran2').label('Spacecraft Orbit 1');
model.result.dataset('tran2').set('data', 'none');
model.result.dataset('tran2').set('transtype', 'general');
model.result.dataset('tran2').set('transmatrix', {'comp1.otl.Tviz11' 'comp1.otl.Tviz12' 'comp1.otl.Tviz13'; 'comp1.otl.Tviz21' 'comp1.otl.Tviz22' 'comp1.otl.Tviz23'; 'comp1.otl.Tviz31' 'comp1.otl.Tviz32' 'comp1.otl.Tviz33'});
model.result.dataset('tran2').set('translation', {'comp1.otl.X_viz' 'comp1.otl.Y_viz' 'comp1.otl.Z_viz'});
model.result.dataset('tran2').set('spacevars', {'tran1x' 'tran1y' 'tran1z'});
model.result.dataset('tran2').set('data', 'dset2');
model.result.dataset('ps2').set('data', 'dset2');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Orbit Visualization (otl) 1');
model.result('pg2').set('data', 'ps2');
model.result('pg2').setIndex('looplevel', 205, 0);
model.result('pg2').set('data', 'ps2');
model.result('pg2').setIndex('looplevel', 205, 0);
model.result('pg2').set('defaultPlotID', 'otl/OTL_PhysicsInterfaces/icom2/pdef1/pcond5/pg1');
model.result('pg2').feature.create('img1', 'Image');
model.result('pg2').feature('img1').label('Planet');
model.result('pg2').feature('img1').set('showsolutionparams', 'on');
model.result('pg2').feature('img1').set('solutionparams', 'parent');
model.result('pg2').feature('img1').set('filename', 'data:///physics/images/earth.jpg');
model.result('pg2').feature('img1').set('mapping', 'manual');
model.result('pg2').feature('img1').set('uexpr', '0.5*(Longitude-pi)/pi');
model.result('pg2').feature('img1').set('vexpr', '(Latitude+0.5*pi)/pi');
model.result('pg2').feature('img1').set('resolution', 'norefine');
model.result('pg2').feature('img1').set('showsolutionparams', 'on');
model.result('pg2').feature('img1').set('data', 'parent');
model.result('pg2').feature.create('pttraj1', 'PointTrajectories');
model.result('pg2').feature('pttraj1').label('Spacecraft Orbit');
model.result('pg2').feature('pttraj1').set('showsolutionparams', 'on');
model.result('pg2').feature('pttraj1').set('solutionparams', 'parent');
model.result('pg2').feature('pttraj1').set('expr', {'otl.X_ECSViz' 'otl.Y_ECSViz' 'otl.Z_ECSViz'});
model.result('pg2').feature('pttraj1').set('titletype', 'none');
model.result('pg2').feature('pttraj1').set('linetype', 'tube');
model.result('pg2').feature('pttraj1').set('interpolation', 'uniform');
model.result('pg2').feature('pttraj1').set('interpcount', 500);
model.result('pg2').feature('pttraj1').set('radiusexpr', '0.01*otl.R_planet');
model.result('pg2').feature('pttraj1').set('tuberadiusscaleactive', true);
model.result('pg2').feature('pttraj1').set('showsolutionparams', 'on');
model.result('pg2').feature('pttraj1').set('data', 'parent');
model.result('pg2').feature('pttraj1').feature.create('col1', 'Color');
model.result('pg2').feature('pttraj1').feature('col1').set('expr', 'otl.isIlluminated');
model.result('pg2').feature('pttraj1').feature('col1').set('rangecoloractive', 'on');
model.result('pg2').feature('pttraj1').feature('col1').set('rangecolormax', 1);
model.result('pg2').feature('pttraj1').feature('col1').set('coloring', 'gradient');
model.result('pg2').feature('pttraj1').feature('col1').set('colorlegend', false);
model.result('pg2').feature('pttraj1').feature('col1').set('topcolor', 'yellow');
model.result('pg2').feature.create('pttraj2', 'PointTrajectories');
model.result('pg2').feature('pttraj2').label('Sun Vector');
model.result('pg2').feature('pttraj2').set('showsolutionparams', 'on');
model.result('pg2').feature('pttraj2').set('solutionparams', 'parent');
model.result('pg2').feature('pttraj2').set('expr', {'-1.5*otl.R_planet*otl.SVX_ECS' '-1.5*otl.R_planet*otl.SVY_ECS' '-1.5*otl.R_planet*otl.SVZ_ECS'});
model.result('pg2').feature('pttraj2').set('titletype', 'none');
model.result('pg2').feature('pttraj2').set('linetype', 'tube');
model.result('pg2').feature('pttraj2').set('radiusexpr', '0.01*otl.R_planet');
model.result('pg2').feature('pttraj2').set('tuberadiusscaleactive', true);
model.result('pg2').feature('pttraj2').set('pointtype', 'arrow');
model.result('pg2').feature('pttraj2').set('pointcolor', 'yellow');
model.result('pg2').feature('pttraj2').set('arrowexpr', {'0.5*otl.SVX_ECS*otl.R_planet' '0.5*otl.SVY_ECS*otl.R_planet' '0.5*otl.SVZ_ECS*otl.R_planet'});
model.result('pg2').feature('pttraj2').set('arrowbase', 'head');
model.result('pg2').feature('pttraj2').set('arrowscaleactive', true);
model.result('pg2').feature('pttraj2').set('showsolutionparams', 'on');
model.result('pg2').feature('pttraj2').set('data', 'parent');
model.result('pg2').feature.create('surf1', 'Surface');
model.result('pg2').feature('surf1').label('Eclipse');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('solutionparams', 'parent');
model.result('pg2').feature('surf1').set('expr', '1');
model.result('pg2').feature('surf1').set('titletype', 'none');
model.result('pg2').feature('surf1').set('coloring', 'uniform');
model.result('pg2').feature('surf1').set('color', 'black');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('data', 'parent');
model.result('pg2').feature('surf1').feature.create('filt1', 'Filter');
model.result('pg2').feature('surf1').feature('filt1').set('expr', 'otl.SVX_ECS*x+otl.SVY_ECS*y+otl.SVZ_ECS*z>0');
model.result('pg2').feature('surf1').feature('filt1').set('shownodespec', 'on');
model.result('pg2').feature('surf1').feature.create('tran1', 'Transparency');
model.result('pg2').feature('surf1').feature('tran1').set('transparency', 0.7);
model.result('pg2').feature('surf1').feature.create('def1', 'Deform');
model.result('pg2').feature('surf1').feature('def1').set('expr', {'(-1+otl.scale_eclipse/otl.R_planet)*x' '(-1+otl.scale_eclipse/otl.R_planet)*y' '(-1+otl.scale_eclipse/otl.R_planet)*z'});
model.result('pg2').feature('surf1').feature('def1').set('scaleactive', true);
model.result('pg2').feature.create('con1', 'Contour');
model.result('pg2').feature('con1').label('Equator');
model.result('pg2').feature('con1').set('showsolutionparams', 'on');
model.result('pg2').feature('con1').set('solutionparams', 'parent');
model.result('pg2').feature('con1').set('expr', 'Latitude');
model.result('pg2').feature('con1').set('titletype', 'none');
model.result('pg2').feature('con1').set('levelmethod', 'levels');
model.result('pg2').feature('con1').set('coloring', 'uniform');
model.result('pg2').feature('con1').set('colorlegend', false);
model.result('pg2').feature('con1').set('color', 'black');
model.result('pg2').feature('con1').set('showsolutionparams', 'on');
model.result('pg2').feature('con1').set('data', 'parent');
model.result('pg2').feature.create('con2', 'Contour');
model.result('pg2').feature('con2').label('Prime Meridian');
model.result('pg2').feature('con2').set('showsolutionparams', 'on');
model.result('pg2').feature('con2').set('solutionparams', 'parent');
model.result('pg2').feature('con2').set('expr', 'Longitude');
model.result('pg2').feature('con2').set('titletype', 'none');
model.result('pg2').feature('con2').set('levelmethod', 'levels');
model.result('pg2').feature('con2').set('coloring', 'uniform');
model.result('pg2').feature('con2').set('colorlegend', false);
model.result('pg2').feature('con2').set('color', 'black');
model.result('pg2').feature('con2').set('showsolutionparams', 'on');
model.result('pg2').feature('con2').set('data', 'parent');
model.result('pg2').feature.create('surf2', 'Surface');
model.result('pg2').feature('surf2').label('Spacecraft');
model.result('pg2').feature('surf2').set('data', 'tran2');
model.result('pg2').feature('surf2').setIndex('looplevel', 205, 0);
model.result('pg2').feature('surf2').set('solutionparams', 'parent');
model.result('pg2').feature('surf2').set('descractive', true);
model.result('pg2').feature('surf2').set('expr', 'otl.Gext1+otl.Gext2');
model.result('pg2').feature('surf2').set('descr', 'External irradiation');
model.result('pg2').feature('surf2').set('resolution', 'norefine');
model.result('pg2').feature('surf2').set('data', 'tran2');
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').label('External Irradiation (otl)');
model.result('pg3').set('data', 'dset2');
model.result('pg3').setIndex('looplevel', 205, 0);
model.result('pg3').set('data', 'dset2');
model.result('pg3').setIndex('looplevel', 205, 0);
model.result('pg3').set('defaultPlotID', 'otl/OTL_PhysicsInterfaces/icom2/pdef1/pcond3/pg2');
model.result('pg3').feature.create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('descractive', true);
model.result('pg3').feature('surf1').set('expr', 'otl.Gext1+otl.Gext2');
model.result('pg3').feature('surf1').set('descr', 'External irradiation');
model.result('pg3').feature('surf1').set('resolution', 'norefine');
model.result('pg3').feature('surf1').set('smooth', 'internal');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('data', 'parent');
model.result('pg3').feature.create('pttraj1', 'PointTrajectories');
model.result('pg3').feature('pttraj1').label('Sun Vector');
model.result('pg3').feature('pttraj1').set('showsolutionparams', 'on');
model.result('pg3').feature('pttraj1').set('solutionparams', 'parent');
model.result('pg3').feature('pttraj1').set('expr', {'-2*otl.L_geom*otl.SVX_Viz' '-2*otl.L_geom*otl.SVY_Viz' '-2*otl.L_geom*otl.SVZ_Viz'});
model.result('pg3').feature('pttraj1').set('titletype', 'none');
model.result('pg3').feature('pttraj1').set('linetype', 'none');
model.result('pg3').feature('pttraj1').set('pointtype', 'arrow');
model.result('pg3').feature('pttraj1').set('pointcolor', 'yellow');
model.result('pg3').feature('pttraj1').set('arrowexpr', {'otl.L_geom*otl.SVX_Viz' 'otl.L_geom*otl.SVY_Viz' 'otl.L_geom*otl.SVZ_Viz'});
model.result('pg3').feature('pttraj1').set('arrowbase', 'head');
model.result('pg3').feature('pttraj1').set('arrowscaleactive', true);
model.result('pg3').feature('pttraj1').set('showsolutionparams', 'on');
model.result('pg3').feature('pttraj1').set('data', 'parent');
model.result('pg3').feature('pttraj1').selection.geom('geom1', 0);
model.result('pg3').feature('pttraj1').selection.set([1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28]);
model.result('pg3').feature('pttraj1').feature.create('col1', 'Color');
model.result('pg3').feature('pttraj1').feature('col1').set('showcolordata', 'off');
model.result('pg3').feature('pttraj1').feature('col1').set('expr', 'otl.isIlluminated');
model.result('pg3').feature('pttraj1').feature('col1').set('rangecoloractive', 'on');
model.result('pg3').feature('pttraj1').feature('col1').set('rangecolormax', 1);
model.result('pg3').feature('pttraj1').feature('col1').set('coloring', 'gradient');
model.result('pg3').feature('pttraj1').feature('col1').set('colorlegend', false);
model.result('pg3').feature('pttraj1').feature('col1').set('topcolor', 'yellow');
model.result('pg3').feature.create('pttraj2', 'PointTrajectories');
model.result('pg3').feature('pttraj2').label('Nadir Vector');
model.result('pg3').feature('pttraj2').set('showsolutionparams', 'on');
model.result('pg3').feature('pttraj2').set('solutionparams', 'parent');
model.result('pg3').feature('pttraj2').set('expr', {'-2*otl.L_geom*otl.ZDX_Viz' '-2*otl.L_geom*otl.ZDY_Viz' '-2*otl.L_geom*otl.ZDZ_Viz'});
model.result('pg3').feature('pttraj2').set('titletype', 'none');
model.result('pg3').feature('pttraj2').set('linetype', 'none');
model.result('pg3').feature('pttraj2').set('pointtype', 'arrow');
model.result('pg3').feature('pttraj2').set('pointcolor', 'blue');
model.result('pg3').feature('pttraj2').set('arrowexpr', {'-otl.L_geom*otl.ZDX_Viz' '-otl.L_geom*otl.ZDY_Viz' '-otl.L_geom*otl.ZDZ_Viz'});
model.result('pg3').feature('pttraj2').set('arrowscaleactive', true);
model.result('pg3').feature('pttraj2').set('showsolutionparams', 'on');
model.result('pg3').feature('pttraj2').set('data', 'parent');
model.result('pg3').feature('pttraj2').selection.geom('geom1', 0);
model.result('pg3').feature('pttraj2').selection.set([1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28]);
model.result('pg2').run;
model.result('pg1').run;
model.result.remove('pg1');
model.result('pg2').run;
model.result('pg2').label('Orbit Visualization (otl)');
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').feature('pttraj1').set('linetype', 'tube');
model.result('pg3').run;
model.result('pg3').set('view', 'new');
model.result('pg3').run;

model.view('view4').set('locked', true);
model.view('view4').camera.setIndex('position', 2.8505136966705322, 0);
model.view('view4').camera.setIndex('position', -5.065058708190918, 1);
model.view('view4').camera.setIndex('position', 2.450192928314209, 2);
model.view('view4').camera.setIndex('target', 0, 2);
model.view('view4').camera.setIndex('up', -0.18521131575107574, 0);
model.view('view4').camera.setIndex('up', 0.3133142590522766, 1);
model.view('view4').camera.setIndex('up', 0.9314115047454834, 2);
model.view('view4').camera.setIndex('viewoffset', -0.05824925750494003, 0);
model.view('view4').camera.setIndex('viewoffset', -0.0844469740986824, 1);
model.view('view4').camera.set('zoomanglefull', 16);

model.result('pg3').run;
model.result('pg3').feature('pttraj1').setIndex('expr', '-otl.L_geom*otl.SVX', 0);
model.result('pg3').feature('pttraj1').setIndex('expr', '-otl.L_geom*otl.SVY', 1);
model.result('pg3').feature('pttraj1').setIndex('expr', '-otl.L_geom*otl.SVZ', 2);
model.result('pg3').run;
model.result('pg3').feature('pttraj2').setIndex('expr', '-otl.L_geom*otl.ZDX', 0);
model.result('pg3').feature('pttraj2').setIndex('expr', '-otl.L_geom*otl.ZDY', 1);
model.result('pg3').feature('pttraj2').setIndex('expr', '-otl.L_geom*otl.ZDZ', 2);
model.result('pg3').run;
model.result('pg3').set('looplevel', [119]);
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').feature('pttraj1').setIndex('expr', '-2*otl.L_geom*otl.SVX', 0);
model.result('pg3').feature('pttraj1').setIndex('expr', '-2*otl.L_geom*otl.SVY', 1);
model.result('pg3').feature('pttraj1').setIndex('expr', '-2*otl.L_geom*otl.SVZ', 2);
model.result('pg3').run;
model.result('pg3').feature('pttraj2').setIndex('expr', '-2*otl.L_geom*otl.ZDX', 0);
model.result('pg3').feature('pttraj2').setIndex('expr', '-2*otl.L_geom*otl.ZDY', 1);
model.result('pg3').feature('pttraj2').setIndex('expr', '-2*otl.L_geom*otl.ZDZ', 2);
model.result('pg3').feature('pttraj2').stepLast(0);
model.result('pg3').run;
model.result.dataset.create('ps3', 'ParSurface');
model.result.dataset('ps3').label('Planet 3');
model.result.dataset('ps3').set('par1', 'Longitude');
model.result.dataset('ps3').set('parmin1', '-pi');
model.result.dataset('ps3').set('parmax1', 'pi');
model.result.dataset('ps3').set('par2', 'Latitude');
model.result.dataset('ps3').set('parmin2', '-0.5*pi');
model.result.dataset('ps3').set('parmax2', '0.5*pi');
model.result.dataset('ps3').set('exprx', 'comp1.otl.x_planet(comp1.otl.R_planet,comp1.otl.rot_planet,comp1.otl.A_off,Latitude,Longitude)');
model.result.dataset('ps3').set('expry', 'comp1.otl.y_planet(comp1.otl.R_planet,comp1.otl.rot_planet,comp1.otl.A_off,Latitude,Longitude)');
model.result.dataset('ps3').set('exprz', 'comp1.otl.z_planet(comp1.otl.R_planet,comp1.otl.rot_planet,Latitude,Longitude)');
model.result.dataset('ps3').set('global', true);
model.result.dataset('ps3').set('res1', 360);
model.result.dataset('ps3').set('res2', 180);
model.result.dataset('ps3').set('data', 'dset2');
model.result.dataset('ps3').set('defaultPlotIDs', {'otl/OTL_PhysicsInterfaces/icom2/pdef1/pcond9/pg2|otl|dataset'});
model.result.dataset('ps3').label('Planet 3');
model.result.dataset.create('filt1', 'Filter');
model.result.dataset('filt1').label('Viewable Planet');
model.result.dataset('filt1').set('expr', 'comp1.otl.dist');
model.result.dataset('filt1').set('bounds', 'upper');
model.result.dataset('filt1').set('upperexpr', 'comp1.otl.maxDist');
model.result.dataset('filt1').set('smooth', 'internal');
model.result.dataset('filt1').set('data', 'ps3');
model.result.dataset('filt1').set('defaultPlotIDs', {'otl/OTL_PhysicsInterfaces/icom2/pdef1/pcond9/pg2|otl'});
model.result.dataset('filt1').label('Viewable Planet');
model.result.dataset.create('tran3', 'Transformation3D');
model.result.dataset('tran3').label('Trajectory Following Visualization');
model.result.dataset('tran3').set('transtype', 'general');
model.result.dataset('tran3').set('transmatrix', {'comp1.otl.TvelViz11' 'comp1.otl.TvelViz12' 'comp1.otl.TvelViz13'; 'comp1.otl.TvelViz21' 'comp1.otl.TvelViz22' 'comp1.otl.TvelViz23'; 'comp1.otl.TvelViz31' 'comp1.otl.TvelViz32' 'comp1.otl.TvelViz33'});
model.result.dataset('tran3').set('spacevars', {'tran1x' 'tran1y' 'tran1z'});
model.result.dataset('tran3').set('data', 'dset2');
model.result.dataset('tran3').set('defaultPlotIDs', {'otl/OTL_PhysicsInterfaces/icom2/pdef1/pcond9/pg2|otl|surf1'});
model.result.dataset('tran3').label('Trajectory Following Visualization');
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').label('Trajectory Following Visualization (otl)');
model.result('pg4').set('edges', 'off');
model.result('pg4').set('data', 'filt1');
model.result('pg4').setIndex('looplevel', 205, 0);
model.result('pg4').set('defaultPlotID', 'otl/OTL_PhysicsInterfaces/icom2/pdef1/pcond9/pg2');
model.result('pg4').feature.create('img1', 'Image');
model.result('pg4').feature('img1').label('Planet');
model.result('pg4').feature('img1').set('solutionparams', 'parent');
model.result('pg4').feature('img1').set('filename', 'data:///physics/images/earth.jpg');
model.result('pg4').feature('img1').set('mapping', 'manual');
model.result('pg4').feature('img1').set('uexpr', '0.5*(Longitude-pi)/pi');
model.result('pg4').feature('img1').set('vexpr', '(Latitude+0.5*pi)/pi');
model.result('pg4').feature('img1').set('resolution', 'norefine');
model.result('pg4').feature('img1').set('showsolutionparams', 'on');
model.result('pg4').feature('img1').set('smoothingsupported', 'on');
model.result('pg4').feature('img1').set('data', 'parent');
model.result('pg4').feature('img1').feature.create('def1', 'Deform');
model.result('pg4').feature('img1').feature('def1').set('expr', {'otl.defPlanetX_VF' 'otl.defPlanetY_VF' 'otl.defPlanetZ_VF'});
model.result('pg4').feature('img1').feature('def1').set('scaleactive', true);
model.result('pg4').feature.create('pttraj1', 'PointTrajectories');
model.result('pg4').feature('pttraj1').label('Sun Vector');
model.result('pg4').feature('pttraj1').set('solutionparams', 'parent');
model.result('pg4').feature('pttraj1').set('expr', {'-otl.SVX_VF' '-otl.SVY_VF' '-otl.SVZ_VF'});
model.result('pg4').feature('pttraj1').set('titletype', 'none');
model.result('pg4').feature('pttraj1').set('linetype', 'none');
model.result('pg4').feature('pttraj1').set('pointtype', 'arrow');
model.result('pg4').feature('pttraj1').set('pointcolor', 'yellow');
model.result('pg4').feature('pttraj1').set('arrowexpr', {'otl.SVX_VF' 'otl.SVY_VF' 'otl.SVZ_VF'});
model.result('pg4').feature('pttraj1').set('arrowbase', 'head');
model.result('pg4').feature('pttraj1').set('arrowscaleactive', true);
model.result('pg4').feature('pttraj1').set('showsolutionparams', 'on');
model.result('pg4').feature('pttraj1').set('data', 'parent');
model.result('pg4').feature('pttraj1').feature.create('col1', 'Color');
model.result('pg4').feature('pttraj1').feature('col1').set('showcolordata', 'off');
model.result('pg4').feature('pttraj1').feature('col1').set('expr', 'otl.isIlluminated');
model.result('pg4').feature('pttraj1').feature('col1').set('rangecoloractive', 'on');
model.result('pg4').feature('pttraj1').feature('col1').set('rangecolormax', 1);
model.result('pg4').feature('pttraj1').feature('col1').set('coloring', 'gradient');
model.result('pg4').feature('pttraj1').feature('col1').set('colorlegend', false);
model.result('pg4').feature('pttraj1').feature('col1').set('topcolor', 'yellow');
model.result('pg4').feature.create('surf1', 'Surface');
model.result('pg4').feature('surf1').label('Spacecraft');
model.result('pg4').feature('surf1').set('solutionparams', 'parent');
model.result('pg4').feature('surf1').set('descractive', true);
model.result('pg4').feature('surf1').set('expr', 'otl.Gext1+otl.Gext2');
model.result('pg4').feature('surf1').set('descr', 'External irradiation');
model.result('pg4').feature('surf1').set('resolution', 'norefine');
model.result('pg4').feature('surf1').set('data', 'tran3');
model.result('pg4').label('Trajectory Following Visualization (otl)');
model.result('pg4').run;
model.result('pg4').set('looplevel', [7]);
model.result('pg4').run;
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').set('data', 'dset2');
model.result('pg5').label('External Irradiation Over Time');
model.result('pg5').create('glob1', 'Global');
model.result('pg5').feature('glob1').set('markerpos', 'datapoints');
model.result('pg5').feature('glob1').set('linewidth', 'preference');
model.result('pg5').feature('glob1').setIndex('expr', 'intop1(otl.Gext1+otl.Gext2)', 0);
model.result('pg5').feature('glob1').setIndex('unit', 'W', 0);
model.result('pg5').feature('glob1').setIndex('descr', 'External irradiation', 0);
model.result('pg5').feature('glob1').set('legend', false);
model.result('pg5').run;
model.result.evaluationGroup('eg1').create('av1', 'AvSurface');
model.result.evaluationGroup('eg1').feature('av1').set('intvolume', true);
model.result.evaluationGroup('eg1').feature('av1').set('data', 'dset2');
model.result.evaluationGroup('eg1').feature('av1').setIndex('looplevelinput', 'last', 0);
model.result.evaluationGroup('eg1').feature('av1').selection.all;
model.result.evaluationGroup('eg1').feature('av1').setIndex('expr', 'timeavg(0,otl.T_orbit,intop1(otl.Gext1+otl.Gext2),''nointerp'')', 0);
model.result.evaluationGroup('eg1').feature('av1').setIndex('unit', 'W', 0);
model.result.evaluationGroup('eg1').feature('av1').setIndex('descr', 'Orbit-averaged irradiation', 0);
model.result.evaluationGroup('eg1').run;
model.result('pg2').run;

model.title('Orbit Calculation');

model.description(['This model is an introduction to defining and verifying a satellite orbit, and computing the solar, albedo, and Earth radiative thermal loads. A 1U CubeSat is in a circular orbit at 400' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'km altitude, inclination of 50' native2unicode(hex2dec({'00' 'b0'}), 'unicode') ', and longitude of ascending node of 0' native2unicode(hex2dec({'00' 'b0'}), 'unicode') '. The satellite is rotating slowly about its nadir-pointing axis. One orbital period is analyzed, during the Winter Solstice. The total irradiation and the radiative loads from all environmental sources is computed. This type of analysis is usually performed prior to computing the temperature evolution within the structure of the satellite.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('orbit_calculation.mph');

model.modelNode.label('Components');

out = model;
