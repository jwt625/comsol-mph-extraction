function out = model
%
% cathodic_protection_in_concrete.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Corrosion_Module/Cathodic_Protection');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('tcd', 'TertiaryCurrentDistributionNernstPlanck', 'geom1', {'c'});
model.physics('tcd').prop('SpeciesProperties').set('ChargeTransportModel', 'SupportingElectrolyte');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/tcd', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('A_Fe', '0.41[V]', 'Tafel slope iron oxidation');
model.param.set('A_H2', '-0.15[V]', 'Tafel slope hydrogen evolution');
model.param.set('A_O2', '-0.18[V]', 'Tafel slope oxygen reduction');
model.param.set('C_O2_ref', '8.6[mol/m^3]', 'Oxygen reference concentration');
model.param.set('Eeq_Fe', '-0.76[V]', 'Iron oxidation equilibrium potential');
model.param.set('Eeq_H2', '-1.03[V]', 'Hydrogen evolution equilibrium potential');
model.param.set('Eeq_O2', '0.189[V]', 'Oxygen reduction equilibrium potential');
model.param.set('i0_Fe', '7.1e-5[A/m^2]', 'Iron oxidation exchange current density');
model.param.set('i0_H2', '1.1e-2[A/m^2]', 'Hydrogen evolution current density');
model.param.set('i0_O2', '7.7e-7[A/m^2]', 'Oxygen reduction exchange current density');
model.param.set('Eeq_Zn', '-0.68[V]', 'Zn equilibrium potential');
model.param.set('L', '3.175e-2[m]', 'Concrete section length');
model.param.set('R_rebar', '0.635e-2[m]', 'Reinforcing bar radius');
model.param.set('S', '2.54e-2[m]', 'Concrete thickness');
model.param.set('W', '6.35e-2[m]', 'Width of concrete section');
model.param.set('PS', '0.6', 'Pore saturation');
model.param.set('E_app', '-1[V]', 'Applied cell potential');

model.func.create('int1', 'Interpolation');
model.func('int1').model('comp1');
model.func('int1').set('source', 'file');
model.func('int1').set('filename', 'cathodic_protection_in_concrete_sigma.txt');
model.func('int1').importData;
model.func('int1').set('funcname', 'sigma');
model.func('int1').setIndex('fununit', 'S/m', 0);
model.func.create('int2', 'Interpolation');
model.func('int2').model('comp1');
model.func('int2').set('source', 'file');
model.func('int2').set('filename', 'cathodic_protection_in_concrete_D_O2.txt');
model.func('int2').importData;
model.func('int2').set('funcname', 'D_O2');
model.func('int2').setIndex('fununit', 'm^2/s', 0);

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', {'W' 'L'});
model.geom('geom1').run('r1');
model.geom('geom1').create('c1', 'Circle');
model.geom('geom1').feature('c1').set('r', 'R_rebar');
model.geom('geom1').feature('c1').set('pos', {'S+R_rebar' 'L'});
model.geom('geom1').run('c1');
model.geom('geom1').create('dif1', 'Difference');
model.geom('geom1').feature('dif1').selection('input').set({'r1'});
model.geom('geom1').feature('dif1').selection('input2').set({'c1'});
model.geom('geom1').run('fin');

model.physics('tcd').feature('ice1').set('D_c', {'D_O2(PS)' '0' '0' '0' 'D_O2(PS)' '0' '0' '0' 'D_O2(PS)'});
model.physics('tcd').feature('ice1').set('sigmal_mat', 'userdef');
model.physics('tcd').feature('ice1').set('sigmal', {'sigma(PS)' '0' '0' '0' 'sigma(PS)' '0' '0' '0' 'sigma(PS)'});
model.physics('tcd').feature('init1').setIndex('initc', 'C_O2_ref', 0);
model.physics('tcd').create('es1', 'ElectrodeSurface', 1);
model.physics('tcd').feature('es1').selection.set([1]);
model.physics('tcd').feature('es1').feature('er1').label('Zinc oxidation');
model.physics('tcd').feature('es1').feature('er1').set('Eeq_mat', 'userdef');
model.physics('tcd').feature('es1').feature('er1').set('Eeq', 'Eeq_Zn');
model.physics('tcd').feature('es1').feature('er1').set('ElectrodeKinetics', 'ThermodynamicEquilibrium');
model.physics('tcd').create('es2', 'ElectrodeSurface', 1);
model.physics('tcd').feature('es2').selection.set([6 7]);
model.physics('tcd').feature('es2').set('phisext0', 'E_app');
model.physics('tcd').feature('es2').feature('er1').label('Oxygen reduction');
model.physics('tcd').feature('es2').feature('er1').set('nm', 4);
model.physics('tcd').feature('es2').feature('er1').setIndex('Vi0', -1, 0);
model.physics('tcd').feature('es2').feature('er1').set('Eeq_mat', 'userdef');
model.physics('tcd').feature('es2').feature('er1').set('Eeq', 'Eeq_O2');
model.physics('tcd').feature('es2').feature('er1').set('ElectrodeKinetics', 'CathodicTafelEquation');
model.physics('tcd').feature('es2').feature('er1').set('i0', 'c/C_O2_ref*i0_O2');
model.physics('tcd').feature('es2').feature('er1').set('Ac', 'A_O2');
model.physics('tcd').feature('es2').create('er2', 'ElectrodeReaction', 1);
model.physics('tcd').feature('es2').feature('er2').label('Iron oxidation');
model.physics('tcd').feature('es2').feature('er2').set('Eeq_mat', 'userdef');
model.physics('tcd').feature('es2').feature('er2').set('Eeq', 'Eeq_Fe');
model.physics('tcd').feature('es2').feature('er2').set('i0', 'i0_Fe');
model.physics('tcd').feature('es2').feature('er2').set('ElectrodeKinetics', 'AnodicTafelEquation');
model.physics('tcd').feature('es2').feature('er2').set('Aa', 'A_Fe');
model.physics('tcd').feature('es2').create('er3', 'ElectrodeReaction', 1);
model.physics('tcd').feature('es2').feature('er3').label('Hydrogen evolution');
model.physics('tcd').feature('es2').feature('er3').set('Eeq_mat', 'userdef');
model.physics('tcd').feature('es2').feature('er3').set('Eeq', 'Eeq_H2');
model.physics('tcd').feature('es2').feature('er3').set('i0', 'i0_H2');
model.physics('tcd').feature('es2').feature('er3').set('ElectrodeKinetics', 'CathodicTafelEquation');
model.physics('tcd').feature('es2').feature('er3').set('Ac', 'A_H2');
model.physics('tcd').create('conc1', 'Concentration', 1);
model.physics('tcd').feature('conc1').selection.set([1]);
model.physics('tcd').feature('conc1').setIndex('species', true, 0);
model.physics('tcd').feature('conc1').setIndex('c0', 'C_O2_ref', 0);

model.mesh('mesh1').autoMeshSize(2);

model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 'A_Fe', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'V', 0);
model.study('std1').feature('stat').setIndex('pname', 'A_Fe', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'V', 0);
model.study('std1').feature('stat').setIndex('pname', 'PS', 0);
model.study('std1').feature('stat').setIndex('plistarr', 'range(0.2, 0.05, 0.8)', 0);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_phil').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_phil').set('scaleval', '1');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 1.0E-4);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol1').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s1').set('control', 'stat');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').label('Direct (tcd)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('Algebraic Multigrid (tcd)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('va1', 'Vanka');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('va1').set('vankavars', {'comp1_tcd_es1_er1_iloc_lm'});
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('va1', 'Vanka');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('va1').set('vankavars', {'comp1_tcd_es1_er1_iloc_lm'});
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').create('i2', 'Iterative');
model.sol('sol1').feature('s1').feature('i2').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i2').label('Geometric Multigrid (tcd)');
model.sol('sol1').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').create('va1', 'Vanka');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('pr').feature('va1').set('vankavars', {'comp1_tcd_es1_er1_iloc_lm'});
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').create('va1', 'Vanka');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('po').feature('va1').set('vankavars', {'comp1_tcd_es1_er1_iloc_lm'});
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 13, 0);
model.result('pg1').label('Electrolyte Potential (tcd)');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'phil'});
model.result('pg1').create('str1', 'Streamline');
model.result('pg1').feature('str1').set('expr', {'tcd.Ilx' 'tcd.Ily'});
model.result('pg1').feature('str1').set('posmethod', 'uniform');
model.result('pg1').feature('str1').set('recover', 'pprint');
model.result('pg1').feature('str1').set('pointtype', 'arrow');
model.result('pg1').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg1').feature('str1').set('color', 'gray');
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 13, 0);
model.result('pg2').label('Electrolyte Current Density (tcd)');
model.result('pg2').create('str1', 'Streamline');
model.result('pg2').feature('str1').set('expr', {'tcd.Ilx' 'tcd.Ily'});
model.result('pg2').feature('str1').set('posmethod', 'uniform');
model.result('pg2').feature('str1').set('recover', 'pprint');
model.result('pg2').feature('str1').set('pointtype', 'arrow');
model.result('pg2').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg2').feature('str1').set('color', 'gray');
model.result('pg2').feature('str1').create('col1', 'Color');
model.result('pg2').feature('str1').feature('col1').set('expr', 'root.comp1.tcd.IlMag');
model.result('pg2').create('line1', 'Line');
model.result('pg2').feature('line1').set('expr', {'abs(tcd.itot)'});
model.result('pg2').feature('line1').set('linetype', 'tube');
model.result('pg2').feature('line1').set('inherittubescale', false);
model.result('pg2').feature('line1').set('inheritplot', 'str1');
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').set('data', 'dset1');
model.result('pg3').setIndex('looplevel', 13, 0);
model.result('pg3').label('Electrode Potential with Respect to Ground (tcd)');
model.result('pg3').create('line1', 'Line');
model.result('pg3').feature('line1').set('expr', {'tcd.phisext'});
model.result('pg3').feature('line1').set('linetype', 'tube');
model.result('pg3').feature('line1').set('inherittubescale', false);
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').set('data', 'dset1');
model.result('pg4').setIndex('looplevel', 13, 0);
model.result('pg4').label('Electrode Potential vs. Adjacent Reference (tcd)');
model.result('pg4').create('str1', 'Streamline');
model.result('pg4').feature('str1').set('expr', {'tcd.Ilx' 'tcd.Ily'});
model.result('pg4').feature('str1').set('posmethod', 'uniform');
model.result('pg4').feature('str1').set('recover', 'pprint');
model.result('pg4').feature('str1').set('pointtype', 'arrow');
model.result('pg4').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg4').feature('str1').set('color', 'gray');
model.result('pg4').create('line1', 'Line');
model.result('pg4').feature('line1').set('expr', {'tcd.Evsref'});
model.result('pg4').feature('line1').set('linetype', 'tube');
model.result('pg4').feature('line1').set('inherittubescale', false);
model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').set('data', 'dset1');
model.result('pg5').setIndex('looplevel', 13, 0);
model.result('pg5').label('Concentration (tcd)');
model.result('pg5').set('titletype', 'custom');
model.result('pg5').set('prefixintitle', '');
model.result('pg5').set('expressionintitle', false);
model.result('pg5').set('typeintitle', true);
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', {'c'});
model.result('pg5').create('str1', 'Streamline');
model.result('pg5').feature('str1').set('expr', {'tcd.tflux_cx' 'tcd.tflux_cy'});
model.result('pg5').feature('str1').set('posmethod', 'uniform');
model.result('pg5').feature('str1').set('recover', 'pprint');
model.result('pg5').feature('str1').set('pointtype', 'arrow');
model.result('pg5').feature('str1').set('arrowlength', 'logarithmic');
model.result('pg5').feature('str1').set('color', 'gray');
model.result('pg1').run;
model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').run;
model.result('pg6').label('Rebar Potential');
model.result('pg6').create('ptgr1', 'PointGraph');
model.result('pg6').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg6').feature('ptgr1').set('linewidth', 'preference');
model.result('pg6').feature('ptgr1').selection.set([3 4 5]);
model.result('pg6').feature('ptgr1').set('expr', 'tcd.Evsref');
model.result('pg6').feature('ptgr1').set('descr', 'Electrode potential vs. adjacent reference');
model.result('pg6').feature('ptgr1').set('legend', true);
model.result('pg6').feature('ptgr1').set('legendmethod', 'manual');
model.result('pg6').feature('ptgr1').setIndex('legends', 'Front', 0);
model.result('pg6').feature('ptgr1').setIndex('legends', 'Middle', 1);
model.result('pg6').feature('ptgr1').setIndex('legends', 'Back', 2);
model.result('pg6').run;
model.result('pg6').run;
model.result.duplicate('pg7', 'pg6');
model.result('pg7').run;
model.result('pg7').label('Oxygen Concentration');
model.result('pg7').run;
model.result('pg7').feature('ptgr1').set('expr', 'c');
model.result('pg7').feature('ptgr1').set('descr', 'Concentration');
model.result('pg7').run;
model.result.duplicate('pg8', 'pg7');
model.result('pg8').run;
model.result('pg8').label('Oxygen Reduction Current Density');
model.result('pg8').run;
model.result('pg8').feature('ptgr1').set('expr', 'tcd.iloc_er1');
model.result('pg8').feature('ptgr1').set('descr', 'Local current density');
model.result('pg8').run;
model.result.duplicate('pg9', 'pg8');
model.result('pg9').run;
model.result('pg9').label('Iron Oxidation Current Density');
model.result('pg9').run;
model.result('pg9').feature('ptgr1').set('expr', 'tcd.iloc_er2');
model.result('pg9').feature('ptgr1').set('descr', 'Local current density');
model.result('pg9').run;
model.result('pg9').run;
model.result.duplicate('pg10', 'pg9');
model.result('pg10').run;
model.result('pg10').label('Hydrogen Evolution Current Density');
model.result('pg10').run;
model.result('pg10').feature('ptgr1').set('expr', 'tcd.iloc_er3');
model.result('pg10').feature('ptgr1').set('descr', 'Local current density');
model.result('pg10').run;
model.result('pg1').run;
model.result('pg5').run;

model.title('Cathodic Protection of Steel in Reinforced Concrete');

model.description('This example models cathodic protection of a steel reinforcing bar in concrete. Three different electrochemical reactions are considered on the steel surface. Charge and oxygen transport are modeled in the concrete domain, where the electrolyte conductivity and oxygen diffusivity depend on the moisture content. The impact of different moisture levels on the corrosion currents is investigated.');

model.label('cathodic_protection_in_concrete.mph');

model.modelNode.label('Components');

out = model;
