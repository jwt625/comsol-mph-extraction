function out = model
%
% hydrodynamic_bearings_comparison.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Rotordynamics_Module/Tutorials');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('hdb', 'HydrodynamicBearing', 'geom1');
model.physics('hdb').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/hdb', true);

model.param.set('Rj', '0.1[m]');
model.param.descr('Rj', 'Radius of journal');
model.param.set('H', '0.1[m]');
model.param.descr('H', 'Height of journal');
model.param.set('C', '0.001[m]');
model.param.descr('C', 'Mean bearing clearance');
model.param.set('d', '0.1*C');
model.param.descr('d', 'Pad center offset');
model.param.set('Cmax', 'C+d');
model.param.descr('Cmax', 'Maximum bearing clearance');
model.param.set('Cmin', 'C-d');
model.param.descr('Cmin', 'Minimum bearing clearance');
model.param.set('Ow', '200[rad/s]');
model.param.descr('Ow', 'RPS');
model.param.set('W', '100[N]');
model.param.descr('W', 'Load on bearing, z-component');
model.param.set('mu', '0.072[Pa*s]');
model.param.descr('mu', 'Dynamic viscosity');

model.geom('geom1').create('cyl1', 'Cylinder');
model.geom('geom1').feature('cyl1').set('r', 'Rj');
model.geom('geom1').feature('cyl1').set('h', 'H');
model.geom('geom1').feature('cyl1').set('axistype', 'x');
model.geom('geom1').feature('cyl1').set('type', 'surface');
model.geom('geom1').run('cyl1');
model.geom('geom1').create('arr1', 'Array');
model.geom('geom1').feature('arr1').selection('input').set({'cyl1'});
model.geom('geom1').feature('arr1').set('fullsize', [8 1 1]);
model.geom('geom1').feature('arr1').set('displ', {'2*H' '0' '0'});
model.geom('geom1').run('fin');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');
model.selection('sel1').label('Plain bearing');
model.selection('sel1').geom(2);
model.selection('sel1').set([1]);
model.selection('sel1').set('groupcontang', true);
model.selection.duplicate('sel2', 'sel1');
model.selection('sel2').label('Elliptic bearing');
model.selection('sel2').remove([1 2 3 4]);
model.selection('sel2').add([5 6 7 8]);
model.selection.duplicate('sel3', 'sel2');
model.selection('sel3').label('Split halves bearing');
model.selection('sel3').remove([5 6 7 8]);
model.selection('sel3').add([9]);
model.selection.duplicate('sel4', 'sel3');
model.selection('sel4').label('Two lobe bearing');
model.selection('sel4').remove([9 10 11 12]);
model.selection('sel4').add([13]);
model.selection.duplicate('sel5', 'sel4');
model.selection('sel5').label('Three Lobe bearing (LOP)');
model.selection('sel5').remove([13 14 15 16]);
model.selection('sel5').add([17]);
model.selection.duplicate('sel6', 'sel5');
model.selection('sel6').label('Three lobe  bearing (LBP)');
model.selection('sel6').remove([17 18 19 20]);
model.selection('sel6').add([21]);
model.selection.duplicate('sel7', 'sel6');
model.selection('sel7').label('Four lobe bearing (LOP)');
model.selection('sel7').remove([21 22 23 24]);
model.selection('sel7').add([25]);
model.selection.duplicate('sel8', 'sel7');
model.selection('sel8').label('Four lobe bearing (LBP)');
model.selection('sel8').remove([25 26 27 28]);
model.selection('sel8').add([29]);

model.physics('hdb').prop('EquationType').set('EquationType', 'ReynoldsEquationWithCavitation');
model.physics('hdb').prop('Stabilization').set('delta_artificial', 20);
model.physics('hdb').feature('hjb1').label('Hydrodynamic Journal Bearing (Plain)');
model.physics('hdb').feature('hjb1').set('C_plain', 'C');
model.physics('hdb').feature('hjb1').set('Specify', 'Load');
model.physics('hdb').feature('hjb1').set('W', {'0' '0' '-W'});
model.physics('hdb').feature('hjb1').set('uJInit', {'0' '0' '-0.1*C'});
model.physics('hdb').feature('hjb1').set('Ow', 'Ow');
model.physics('hdb').feature('hjb1').set('mure_mat', 'userdef');
model.physics('hdb').feature('hjb1').set('mure', 'mu');
model.physics('hdb').feature('hjb1').set('BearingCenterType', 'fromGeom');
model.physics('hdb').feature.duplicate('hjb2', 'hjb1');
model.physics('hdb').feature('hjb2').label('Hydrodynamic Journal Bearing (Elliptic)');
model.physics('hdb').feature('hjb2').selection.named('sel2');
model.physics('hdb').feature('hjb2').set('BearingType', 'Elliptic');
model.physics('hdb').feature('hjb2').set('C_min', 'Cmin');
model.physics('hdb').feature('hjb2').set('C_max', 'Cmax');
model.physics('hdb').feature.duplicate('hjb3', 'hjb2');
model.physics('hdb').feature('hjb3').label('Hydrodynamic Journal Bearing (Split halves)');
model.physics('hdb').feature('hjb3').selection.named('sel3');
model.physics('hdb').feature('hjb3').set('BearingType', 'SplitHalves');
model.physics('hdb').feature('hjb3').set('C_split', 'C');
model.physics('hdb').feature('hjb3').set('PreLoadFactor_split', 'Compute');
model.physics('hdb').feature('hjb3').set('d_split', 'd');
model.physics('hdb').feature.duplicate('hjb4', 'hjb3');
model.physics('hdb').feature('hjb4').label('Hydrodynamic Journal Bearing (2-lobe)');
model.physics('hdb').feature('hjb4').selection.named('sel4');
model.physics('hdb').feature('hjb4').set('BearingType', 'Multilobe');
model.physics('hdb').feature('hjb4').set('C_multi', 'Cmax');
model.physics('hdb').feature('hjb4').set('PreLoadFactor_multi', 'Compute');
model.physics('hdb').feature('hjb4').set('d_multi', '2*d');
model.physics('hdb').feature.duplicate('hjb5', 'hjb4');
model.physics('hdb').feature('hjb5').label('Hydrodynamic Journal Bearing (3-lobe LOP)');
model.physics('hdb').feature('hjb5').selection.named('sel5');
model.physics('hdb').feature('hjb5').set('C_multi', '2*Cmax-Cmin');
model.physics('hdb').feature('hjb5').set('d_multi', '4*d');
model.physics('hdb').feature('hjb5').set('N_multi', 3);
model.physics('hdb').feature.duplicate('hjb6', 'hjb5');
model.physics('hdb').feature('hjb6').label('Hydrodynamic Journal Bearing (3-lobe LBP)');
model.physics('hdb').feature('hjb6').selection.named('sel6');
model.physics('hdb').feature.duplicate('hjb7', 'hjb6');
model.physics('hdb').feature('hjb7').label('Hydrodynamic Journal Bearing (4-lobe LOP)');
model.physics('hdb').feature('hjb7').selection.named('sel7');
model.physics('hdb').feature('hjb7').set('C_multi', '(sqrt(2)*Cmax-Cmin)/(sqrt(2)-1)');
model.physics('hdb').feature('hjb7').set('d_multi', 'sqrt(2)*(Cmax-Cmin)/(sqrt(2)-1)');
model.physics('hdb').feature('hjb7').set('N_multi', 4);
model.physics('hdb').feature.duplicate('hjb8', 'hjb7');
model.physics('hdb').feature('hjb8').label('Hydrodynamic Journal Bearing (4-lobe LBP)');
model.physics('hdb').feature('hjb8').selection.named('sel8');
model.physics('hdb').create('bax2', 'BearingOrientation', 2);
model.physics('hdb').feature('bax2').label('Bearing Orientation Hydrodynamic Journal Bearing (3-lobe LOP)');
model.physics('hdb').feature('bax2').selection.named('sel5');
model.physics('hdb').feature('bax2').set('ang_bearing', '-pi/6');
model.physics('hdb').feature.duplicate('bax3', 'bax2');
model.physics('hdb').feature('bax3').label('Bearing Orientation Hydrodynamic Journal Bearing (3-lobe LBP)');
model.physics('hdb').feature('bax3').selection.named('sel6');
model.physics('hdb').feature('bax3').set('ang_bearing', 'pi/6');
model.physics('hdb').feature.duplicate('bax4', 'bax3');
model.physics('hdb').feature('bax4').label('Bearing Orientation Hydrodynamic Journal Bearing (4-lobe LOP)');
model.physics('hdb').feature('bax4').selection.named('sel7');
model.physics('hdb').feature('bax4').set('ang_bearing', 'pi/4');

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.all;
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.all;
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 15);
model.mesh('mesh1').run;

model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 'Rj', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'm', 0);
model.study('std1').feature('stat').setIndex('pname', 'Rj', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'm', 0);
model.study('std1').feature('stat').setIndex('pname', 'W', 0);
model.study('std1').feature('stat').setIndex('plistarr', 'range(1000,200,10000)', 0);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_pfilm').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_pfilm').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_pfilm').set('scaleval', '1000000');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s1').set('control', 'stat');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').label('Fluid Pressure (hdb)');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 46, 0);
model.result('pg1').set('defaultPlotID', 'fluidPressure');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('colortable', 'RainbowLight');
model.result('pg1').feature('surf1').set('smooth', 'internal');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result('pg1').feature.create('con1', 'Contour');
model.result('pg1').feature('con1').set('levelrounding', false);
model.result('pg1').feature('con1').set('colorlegend', false);
model.result('pg1').feature('con1').set('smooth', 'internal');
model.result('pg1').feature('con1').set('inherittubescale', false);
model.result('pg1').feature('con1').set('data', 'parent');
model.result('pg1').feature('con1').set('inheritplot', 'surf1');
model.result('pg1').run;
model.result('pg1').set('titletype', 'manual');
model.result('pg1').set('title', 'Fluid Pressure (Pa)');
model.result('pg1').run;
model.result('pg1').feature('surf1').set('expr', 'hdb.p');
model.result('pg1').run;
model.result('pg1').feature('con1').set('expr', 'hdb.p');
model.result('pg1').run;
model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').run;
model.result('pg2').label('Relative Eccentricity vs. Load');
model.result('pg2').set('titletype', 'label');
model.result('pg2').set('xlabelactive', true);
model.result('pg2').set('xlabel', 'W (N)');
model.result('pg2').set('ylabelactive', true);
model.result('pg2').set('ylabel', 'e/C (1)');
model.result('pg2').create('glob1', 'Global');
model.result('pg2').feature('glob1').set('markerpos', 'datapoints');
model.result('pg2').feature('glob1').set('linewidth', 'preference');
model.result('pg2').feature('glob1').set('expr', {'hdb.hjb1.ec_rel'});
model.result('pg2').feature('glob1').set('descr', {'Relative eccentricity'});
model.result('pg2').feature('glob1').set('unit', {'1'});
model.result('pg2').feature('glob1').set('expr', {'hdb.hjb1.ec_rel' 'hdb.hjb2.ec_rel'});
model.result('pg2').feature('glob1').set('descr', {'Relative eccentricity' 'Relative eccentricity'});
model.result('pg2').feature('glob1').set('expr', {'hdb.hjb1.ec_rel' 'hdb.hjb2.ec_rel' 'hdb.hjb3.ec_rel'});
model.result('pg2').feature('glob1').set('descr', {'Relative eccentricity' 'Relative eccentricity' 'Relative eccentricity'});
model.result('pg2').feature('glob1').set('expr', {'hdb.hjb1.ec_rel' 'hdb.hjb2.ec_rel' 'hdb.hjb3.ec_rel' 'hdb.hjb4.ec_rel'});
model.result('pg2').feature('glob1').set('descr', {'Relative eccentricity' 'Relative eccentricity' 'Relative eccentricity' 'Relative eccentricity'});
model.result('pg2').feature('glob1').set('expr', {'hdb.hjb1.ec_rel' 'hdb.hjb2.ec_rel' 'hdb.hjb3.ec_rel' 'hdb.hjb4.ec_rel' 'hdb.hjb5.ec_rel'});
model.result('pg2').feature('glob1').set('descr', {'Relative eccentricity' 'Relative eccentricity' 'Relative eccentricity' 'Relative eccentricity' 'Relative eccentricity'});
model.result('pg2').feature('glob1').set('expr', {'hdb.hjb1.ec_rel' 'hdb.hjb2.ec_rel' 'hdb.hjb3.ec_rel' 'hdb.hjb4.ec_rel' 'hdb.hjb5.ec_rel' 'hdb.hjb6.ec_rel'});
model.result('pg2').feature('glob1').set('descr', {'Relative eccentricity' 'Relative eccentricity' 'Relative eccentricity' 'Relative eccentricity' 'Relative eccentricity' 'Relative eccentricity'});
model.result('pg2').feature('glob1').set('expr', {'hdb.hjb1.ec_rel' 'hdb.hjb2.ec_rel' 'hdb.hjb3.ec_rel' 'hdb.hjb4.ec_rel' 'hdb.hjb5.ec_rel' 'hdb.hjb6.ec_rel' 'hdb.hjb7.ec_rel'});
model.result('pg2').feature('glob1').set('descr', {'Relative eccentricity' 'Relative eccentricity' 'Relative eccentricity' 'Relative eccentricity' 'Relative eccentricity' 'Relative eccentricity' 'Relative eccentricity'});
model.result('pg2').feature('glob1').set('expr', {'hdb.hjb1.ec_rel' 'hdb.hjb2.ec_rel' 'hdb.hjb3.ec_rel' 'hdb.hjb4.ec_rel' 'hdb.hjb5.ec_rel' 'hdb.hjb6.ec_rel' 'hdb.hjb7.ec_rel' 'hdb.hjb8.ec_rel'});
model.result('pg2').feature('glob1').set('descr', {'Relative eccentricity' 'Relative eccentricity' 'Relative eccentricity' 'Relative eccentricity' 'Relative eccentricity' 'Relative eccentricity' 'Relative eccentricity' 'Relative eccentricity'});
model.result('pg2').feature('glob1').setIndex('descr', 'Plain', 0);
model.result('pg2').feature('glob1').setIndex('descr', 'Elliptic', 1);
model.result('pg2').feature('glob1').setIndex('descr', 'Split halves', 2);
model.result('pg2').feature('glob1').setIndex('descr', '2-lobe', 3);
model.result('pg2').feature('glob1').setIndex('descr', '3-lobe (LOP)', 4);
model.result('pg2').feature('glob1').setIndex('descr', '3-lobe (LBP)', 5);
model.result('pg2').feature('glob1').setIndex('descr', '4-lobe (LOP)', 6);
model.result('pg2').feature('glob1').setIndex('descr', '4-lobe (LBP)', 7);
model.result('pg2').feature('glob1').set('linestyle', 'cycle');
model.result('pg2').feature('glob1').set('linewidth', 3);
model.result('pg2').run;
model.result('pg2').set('legendpos', 'lowerright');
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('Attitude Angle vs. Load');
model.result('pg3').set('titletype', 'label');
model.result('pg3').set('xlabelactive', true);
model.result('pg3').set('xlabel', 'W (N)');
model.result('pg3').set('ylabelactive', true);
model.result('pg3').set('ylabel', '\phi (degree)');
model.result('pg3').create('glob1', 'Global');
model.result('pg3').feature('glob1').set('markerpos', 'datapoints');
model.result('pg3').feature('glob1').set('linewidth', 'preference');
model.result('pg3').feature('glob1').set('expr', {'hdb.hjb1.phia'});
model.result('pg3').feature('glob1').set('descr', {'Attitude angle'});
model.result('pg3').feature('glob1').set('unit', {'rad'});
model.result('pg3').feature('glob1').set('expr', {'hdb.hjb1.phia' 'hdb.hjb2.phia'});
model.result('pg3').feature('glob1').set('descr', {'Attitude angle' 'Attitude angle'});
model.result('pg3').feature('glob1').set('expr', {'hdb.hjb1.phia' 'hdb.hjb2.phia' 'hdb.hjb3.phia'});
model.result('pg3').feature('glob1').set('descr', {'Attitude angle' 'Attitude angle' 'Attitude angle'});
model.result('pg3').feature('glob1').set('expr', {'hdb.hjb1.phia' 'hdb.hjb2.phia' 'hdb.hjb3.phia' 'hdb.hjb4.phia'});
model.result('pg3').feature('glob1').set('descr', {'Attitude angle' 'Attitude angle' 'Attitude angle' 'Attitude angle'});
model.result('pg3').feature('glob1').set('expr', {'hdb.hjb1.phia' 'hdb.hjb2.phia' 'hdb.hjb3.phia' 'hdb.hjb4.phia' 'hdb.hjb5.phia'});
model.result('pg3').feature('glob1').set('descr', {'Attitude angle' 'Attitude angle' 'Attitude angle' 'Attitude angle' 'Attitude angle'});
model.result('pg3').feature('glob1').set('expr', {'hdb.hjb1.phia' 'hdb.hjb2.phia' 'hdb.hjb3.phia' 'hdb.hjb4.phia' 'hdb.hjb5.phia' 'hdb.hjb6.phia'});
model.result('pg3').feature('glob1').set('descr', {'Attitude angle' 'Attitude angle' 'Attitude angle' 'Attitude angle' 'Attitude angle' 'Attitude angle'});
model.result('pg3').feature('glob1').set('expr', {'hdb.hjb1.phia' 'hdb.hjb2.phia' 'hdb.hjb3.phia' 'hdb.hjb4.phia' 'hdb.hjb5.phia' 'hdb.hjb6.phia' 'hdb.hjb7.phia'});
model.result('pg3').feature('glob1').set('descr', {'Attitude angle' 'Attitude angle' 'Attitude angle' 'Attitude angle' 'Attitude angle' 'Attitude angle' 'Attitude angle'});
model.result('pg3').feature('glob1').set('expr', {'hdb.hjb1.phia' 'hdb.hjb2.phia' 'hdb.hjb3.phia' 'hdb.hjb4.phia' 'hdb.hjb5.phia' 'hdb.hjb6.phia' 'hdb.hjb7.phia' 'hdb.hjb8.phia'});
model.result('pg3').feature('glob1').set('descr', {'Attitude angle' 'Attitude angle' 'Attitude angle' 'Attitude angle' 'Attitude angle' 'Attitude angle' 'Attitude angle' 'Attitude angle'});
model.result('pg3').feature('glob1').setIndex('unit', 'deg', 0);
model.result('pg3').feature('glob1').setIndex('descr', 'Plain', 0);
model.result('pg3').feature('glob1').setIndex('unit', 'deg', 1);
model.result('pg3').feature('glob1').setIndex('descr', 'Elliptic', 1);
model.result('pg3').feature('glob1').setIndex('unit', 'deg', 2);
model.result('pg3').feature('glob1').setIndex('descr', 'Split halves', 2);
model.result('pg3').feature('glob1').setIndex('unit', 'deg', 3);
model.result('pg3').feature('glob1').setIndex('descr', '2-lobe', 3);
model.result('pg3').feature('glob1').setIndex('unit', 'deg', 4);
model.result('pg3').feature('glob1').setIndex('descr', '3-lobe (LOP)', 4);
model.result('pg3').feature('glob1').setIndex('unit', 'deg', 5);
model.result('pg3').feature('glob1').setIndex('descr', '3-lobe (LBP)', 5);
model.result('pg3').feature('glob1').setIndex('unit', 'deg', 6);
model.result('pg3').feature('glob1').setIndex('descr', '4-lobe (LOP)', 6);
model.result('pg3').feature('glob1').setIndex('unit', 'deg', 7);
model.result('pg3').feature('glob1').setIndex('descr', '4-lobe (LBP)', 7);
model.result('pg3').feature('glob1').set('linestyle', 'cycle');
model.result('pg3').feature('glob1').set('linewidth', 3);
model.result('pg3').run;
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Journal Position');
model.result('pg4').set('titletype', 'label');
model.result('pg4').set('xlabelactive', true);
model.result('pg4').set('xlabel', 'u<sub>y</sub>/C (1)');
model.result('pg4').set('ylabelactive', true);
model.result('pg4').set('ylabel', 'u<sub>z</sub>/C (1)');
model.result('pg4').create('glob1', 'Global');
model.result('pg4').feature('glob1').set('markerpos', 'datapoints');
model.result('pg4').feature('glob1').set('linewidth', 'preference');
model.result('pg4').feature('glob1').label('Plain');
model.result('pg4').feature('glob1').setIndex('expr', 'hdb.hjb1.uJz/C', 0);
model.result('pg4').feature('glob1').setIndex('unit', 1, 0);
model.result('pg4').feature('glob1').setIndex('descr', '', 0);
model.result('pg4').feature('glob1').set('xdata', 'expr');
model.result('pg4').feature('glob1').set('xdataexpr', 'hdb.hjb1.uJy/C');
model.result('pg4').feature('glob1').set('linestyle', 'cycle');
model.result('pg4').feature('glob1').set('linewidth', 3);
model.result('pg4').feature('glob1').set('autosolution', false);
model.result('pg4').feature('glob1').set('autodescr', false);
model.result('pg4').feature('glob1').set('autoplotlabel', true);
model.result('pg4').feature.duplicate('glob2', 'glob1');
model.result('pg4').run;
model.result('pg4').feature('glob2').label('Elliptic');
model.result('pg4').feature('glob2').setIndex('expr', 'hdb.hjb2.uJz/C', 0);
model.result('pg4').feature('glob2').setIndex('unit', 1, 0);
model.result('pg4').feature('glob2').setIndex('descr', '', 0);
model.result('pg4').feature('glob2').set('xdataexpr', 'hdb.hjb2.uJy/C');
model.result('pg4').feature.duplicate('glob3', 'glob2');
model.result('pg4').run;
model.result('pg4').feature('glob3').label('Split halves');
model.result('pg4').feature('glob3').setIndex('expr', 'hdb.hjb3.uJz/C', 0);
model.result('pg4').feature('glob3').setIndex('unit', 1, 0);
model.result('pg4').feature('glob3').setIndex('descr', '', 0);
model.result('pg4').feature('glob3').set('xdataexpr', 'hdb.hjb3.uJy/C');
model.result('pg4').feature.duplicate('glob4', 'glob3');
model.result('pg4').run;
model.result('pg4').feature('glob4').label('Two lobe');
model.result('pg4').feature('glob4').setIndex('expr', 'hdb.hjb4.uJz/C', 0);
model.result('pg4').feature('glob4').setIndex('unit', 1, 0);
model.result('pg4').feature('glob4').setIndex('descr', '', 0);
model.result('pg4').feature('glob4').set('xdataexpr', 'hdb.hjb4.uJy/C');
model.result('pg4').feature.duplicate('glob5', 'glob4');
model.result('pg4').run;
model.result('pg4').feature('glob5').label('Three lobe LOP');
model.result('pg4').feature('glob5').setIndex('expr', 'hdb.hjb5.uJz/C', 0);
model.result('pg4').feature('glob5').setIndex('unit', 1, 0);
model.result('pg4').feature('glob5').setIndex('descr', '', 0);
model.result('pg4').feature('glob5').set('xdataexpr', 'hdb.hjb5.uJy/C');
model.result('pg4').feature.duplicate('glob6', 'glob5');
model.result('pg4').run;
model.result('pg4').feature('glob6').label('Three lobe LBP');
model.result('pg4').feature('glob6').setIndex('expr', 'hdb.hjb6.uJz/C', 0);
model.result('pg4').feature('glob6').setIndex('unit', 1, 0);
model.result('pg4').feature('glob6').setIndex('descr', '', 0);
model.result('pg4').feature('glob6').set('xdataexpr', 'hdb.hjb6.uJy/C');
model.result('pg4').feature.duplicate('glob7', 'glob6');
model.result('pg4').run;
model.result('pg4').feature('glob7').label('Four lobe LOP');
model.result('pg4').feature('glob7').setIndex('expr', 'hdb.hjb7.uJz/C', 0);
model.result('pg4').feature('glob7').setIndex('unit', 1, 0);
model.result('pg4').feature('glob7').setIndex('descr', '', 0);
model.result('pg4').feature('glob7').set('xdataexpr', 'hdb.hjb7.uJy/C');
model.result('pg4').feature.duplicate('glob8', 'glob7');
model.result('pg4').run;
model.result('pg4').feature('glob8').label('Four lobe LBP');
model.result('pg4').feature('glob8').setIndex('expr', 'hdb.hjb8.uJz/C', 0);
model.result('pg4').feature('glob8').setIndex('unit', 1, 0);
model.result('pg4').feature('glob8').setIndex('descr', '', 0);
model.result('pg4').feature('glob8').set('xdataexpr', 'hdb.hjb8.uJy/C');
model.result('pg4').run;
model.result('pg4').set('legendpos', 'upperleft');
model.result('pg4').run;
model.result.create('pg5', 'PolarGroup');
model.result('pg5').run;
model.result('pg5').label('Initial Thickness Profile');
model.result('pg5').setIndex('looplevelinput', 'first', 0);
model.result('pg5').set('titletype', 'label');
model.result('pg5').set('axislimits', true);
model.result('pg5').set('rmin', 0.6);
model.result('pg5').set('rmax', 1.2);
model.result('pg5').create('lngr1', 'LineGraph');
model.result('pg5').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg5').feature('lngr1').set('linewidth', 'preference');
model.result('pg5').feature('lngr1').selection.set([1 2 4 6]);
model.result('pg5').feature('lngr1').set('expr', 'hdb.hi_rel');
model.result('pg5').feature('lngr1').set('descr', 'Relative film thickness, initial');
model.result('pg5').feature('lngr1').set('descractive', true);
model.result('pg5').feature('lngr1').set('descr', 'Plain');
model.result('pg5').feature('lngr1').set('xdata', 'expr');
model.result('pg5').feature('lngr1').set('xdataexpr', 'hdb.Th+hdb.ang_bearing');
model.result('pg5').feature('lngr1').set('linestyle', 'cycle');
model.result('pg5').feature('lngr1').set('linewidth', 3);
model.result('pg5').feature('lngr1').set('legend', true);
model.result('pg5').feature('lngr1').set('autosolution', false);
model.result('pg5').feature('lngr1').set('autoplotlabel', true);
model.result('pg5').feature('lngr1').label('Plain');
model.result('pg5').feature.duplicate('lngr2', 'lngr1');
model.result('pg5').run;
model.result('pg5').feature('lngr2').label('Elliptic');
model.result('pg5').feature('lngr2').selection.set([13 14 16 18]);
model.result('pg5').feature('lngr2').set('descr', 'Elliptic');
model.result('pg5').feature.duplicate('lngr3', 'lngr2');
model.result('pg5').run;
model.result('pg5').feature('lngr3').label('Split halves');
model.result('pg5').feature('lngr3').selection.set([25 26 28 30]);
model.result('pg5').feature('lngr3').set('descr', 'Split halves');
model.result('pg5').feature.duplicate('lngr4', 'lngr3');
model.result('pg5').run;
model.result('pg5').feature('lngr4').label('Two lobe');
model.result('pg5').feature('lngr4').selection.set([37 38 40 42]);
model.result('pg5').feature('lngr4').set('descr', 'Two lobe');
model.result('pg5').feature.duplicate('lngr5', 'lngr4');
model.result('pg5').run;
model.result('pg5').feature('lngr5').label('Three lobe LOP');
model.result('pg5').feature('lngr5').selection.set([49 50 52 54]);
model.result('pg5').feature('lngr5').set('descr', 'Three lobe LOP');
model.result('pg5').feature.duplicate('lngr6', 'lngr5');
model.result('pg5').run;
model.result('pg5').feature('lngr6').label('Three lobe LBP');
model.result('pg5').feature('lngr6').selection.set([61 62 64 66]);
model.result('pg5').feature('lngr6').set('descr', 'Three lobe LBP');
model.result('pg5').feature.duplicate('lngr7', 'lngr6');
model.result('pg5').run;
model.result('pg5').feature('lngr7').label('Four lobe LOP');
model.result('pg5').feature('lngr7').selection.set([73 74 76 78]);
model.result('pg5').feature('lngr7').set('descr', 'Four lobe LOP');
model.result('pg5').feature.duplicate('lngr8', 'lngr7');
model.result('pg5').run;
model.result('pg5').feature('lngr8').label('Four lobe LBP');
model.result('pg5').feature('lngr8').selection.set([85 86 88 90]);
model.result('pg5').feature('lngr8').set('descr', 'Four lobe LBP');
model.result('pg5').run;
model.result('pg5').run;
model.result.duplicate('pg6', 'pg5');
model.result('pg6').run;
model.result('pg6').label('Current Thickness Profile');
model.result('pg6').set('titletype', 'manual');
model.result('pg6').set('title', 'Thickness Profile, W = 2800 N');
model.result('pg6').run;
model.result('pg6').feature('lngr1').set('expr', 'hdb.h_rel');
model.result('pg6').feature('lngr1').set('xdataexpr', 'mod(hdb.Th+hdb.ang_bearing,2*pi)');
model.result('pg6').run;
model.result('pg6').feature('lngr2').set('expr', 'hdb.h_rel');
model.result('pg6').feature('lngr2').set('xdataexpr', 'mod(hdb.Th+hdb.ang_bearing,2*pi)');
model.result('pg6').run;
model.result('pg6').feature('lngr3').set('expr', 'hdb.h_rel');
model.result('pg6').feature('lngr3').set('xdataexpr', 'mod(hdb.Th+hdb.ang_bearing,2*pi)');
model.result('pg6').run;
model.result('pg6').feature('lngr4').set('expr', 'hdb.h_rel');
model.result('pg6').feature('lngr4').set('xdataexpr', 'mod(hdb.Th+hdb.ang_bearing,2*pi)');
model.result('pg6').run;
model.result('pg6').feature('lngr5').set('expr', 'hdb.h_rel');
model.result('pg6').feature('lngr5').set('xdataexpr', 'mod(hdb.Th+hdb.ang_bearing,2*pi)');
model.result('pg6').run;
model.result('pg6').feature('lngr6').set('expr', 'hdb.h_rel');
model.result('pg6').feature('lngr6').set('xdataexpr', 'mod(hdb.Th+hdb.ang_bearing,2*pi)');
model.result('pg6').run;
model.result('pg6').feature('lngr7').set('expr', 'hdb.h_rel');
model.result('pg6').feature('lngr7').set('xdataexpr', 'mod(hdb.Th+hdb.ang_bearing,2*pi)');
model.result('pg6').run;
model.result('pg6').feature('lngr8').set('expr', 'hdb.h_rel');
model.result('pg6').feature('lngr8').set('xdataexpr', 'mod(hdb.Th+hdb.ang_bearing,2*pi)');
model.result('pg6').run;
model.result('pg6').run;
model.result('pg6').setIndex('looplevelinput', 'manualindices', 0);
model.result('pg6').setIndex('looplevelindices', 15, 0);
model.result('pg6').set('rmin', '0.0');
model.result('pg6').set('rmax', '2.0');
model.result('pg6').run;
model.result.dataset.create('surfdset1hjb1hdb', 'Surface');
model.result.dataset('surfdset1hjb1hdb').label('Surface (hjb1)');
model.result.dataset('surfdset1hjb1hdb').set('data', 'dset1');
model.result.dataset('surfdset1hjb1hdb').selection.geom('geom1', 2);
model.result.dataset('surfdset1hjb1hdb').selection.set([1 2 3 4]);
model.result.dataset('surfdset1hjb1hdb').selection.inherit(false);
model.result.dataset('surfdset1hjb1hdb').set('param', 'expr');
model.result.dataset('surfdset1hjb1hdb').set('exprx', 'hdb.hjb1.r1');
model.result.dataset('surfdset1hjb1hdb').set('expry', 'if(isdefined(hdb.hjb1.Thm), if(elemgpmax(2,hdb.hjb1.Thm)-elemgpmin(2,hdb.hjb1.Thm)<pi, gpeval(2,hdb.hjb1.Thm)*hdb.hjb1.Rj, if(hdb.hjb1.Thm>pi,hdb.hjb1.Thm*hdb.hjb1.Rj,(elemgpmax(2,hdb.hjb1.Thm)+2*elemgpmin(2,hdb.hjb1.Thm))*hdb.hjb1.Rj)), if(elemgpmax(2,hdb.Th)-elemgpmin(2,hdb.Th)<pi,gpeval(2,hdb.Th)*hdb.hjb1.Rj,if(hdb.Th>pi,hdb.Th*hdb.hjb1.Rj,(elemgpmax(2,hdb.Th)+2*elemgpmin(2,hdb.Th))*hdb.hjb1.Rj)))');
model.result.dataset('surfdset1hjb1hdb').set('defaultPlotIDs', {'pg2|hdb' 'pg3|hdb'});
model.result.dataset('surfdset1hjb1hdb').label('Surface (hjb1)');
model.result.create('pg7', 'PlotGroup2D');
model.result('pg7').label('Pressure Height (hjb1)');
model.result('pg7').set('data', 'surfdset1hjb1hdb');
model.result('pg7').set('edges', false);
model.result('pg7').create('surf1', 'Surface');
model.result('pg7').feature('surf1').label('Surface Plot: Pressure');
model.result('pg7').feature('surf1').set('colortable', 'Viridis');
model.result('pg7').feature('surf1').set('colortabletype', 'discrete');
model.result('pg7').feature('surf1').set('expr', 'hdb.p');
model.result('pg7').feature('surf1').create('hght1', 'Height');
model.result('pg7').label('Pressure Height (hjb1)');

model.nodeGroup.create('grphjb1', 'Results');
model.nodeGroup('grphjb1').label('Unwrapped Plots (hjb1)');
model.nodeGroup('grphjb1').set('type', 'plotgroup');
model.nodeGroup('grphjb1').placeAfter('plotgroup', 'pg1');
model.nodeGroup('grphjb1').label('Unwrapped Plots (hjb1)');
model.nodeGroup('grphjb1').placeAfter('plotgroup', 'pg7');

model.result.create('pg8', 'PlotGroup2D');
model.result('pg8').label('Velocity (hjb1)');
model.result('pg8').set('data', 'surfdset1hjb1hdb');
model.result('pg8').set('edges', false);
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').feature('surf1').label('Surface Plot: Pressure');
model.result('pg8').feature('surf1').set('colortable', 'Prism');
model.result('pg8').feature('surf1').set('colortabletype', 'discrete');
model.result('pg8').feature('surf1').set('expr', 'hdb.p');
model.result('pg8').create('arws1', 'ArrowSurface');
model.result('pg8').feature('arws1').label('Arrow: Velocity');
model.result('pg8').feature('arws1').set('expr', {'hdb.vave_1' 'hdb.vave_c'});
model.result('pg8').feature('arws1').set('placement', 'elements');
model.result('pg8').feature('arws1').set('maxpointcount', 500);
model.result('pg8').feature('arws1').set('scale', 0.001);
model.result('pg8').feature('arws1').set('color', 'black');
model.result('pg8').feature('arws1').set('scaleactive', true);
model.result('pg8').feature('arws1').set('descr', 'Fluid velocity');
model.result('pg8').label('Velocity (hjb1)');

model.nodeGroup('grphjb1').add('plotgroup', 'pg7');
model.nodeGroup('grphjb1').add('plotgroup', 'pg8');

model.result.dataset.create('surfdset1hjb2hdb', 'Surface');
model.result.dataset('surfdset1hjb2hdb').label('Surface (hjb2)');
model.result.dataset('surfdset1hjb2hdb').set('data', 'dset1');
model.result.dataset('surfdset1hjb2hdb').selection.geom('geom1', 2);
model.result.dataset('surfdset1hjb2hdb').selection.set([5 6 7 8]);
model.result.dataset('surfdset1hjb2hdb').selection.inherit(false);
model.result.dataset('surfdset1hjb2hdb').set('param', 'expr');
model.result.dataset('surfdset1hjb2hdb').set('exprx', 'hdb.hjb2.r1');
model.result.dataset('surfdset1hjb2hdb').set('expry', 'if(isdefined(hdb.hjb2.Thm), if(elemgpmax(2,hdb.hjb2.Thm)-elemgpmin(2,hdb.hjb2.Thm)<pi, gpeval(2,hdb.hjb2.Thm)*hdb.hjb2.Rj, if(hdb.hjb2.Thm>pi,hdb.hjb2.Thm*hdb.hjb2.Rj,(elemgpmax(2,hdb.hjb2.Thm)+2*elemgpmin(2,hdb.hjb2.Thm))*hdb.hjb2.Rj)), if(elemgpmax(2,hdb.Th)-elemgpmin(2,hdb.Th)<pi,gpeval(2,hdb.Th)*hdb.hjb2.Rj,if(hdb.Th>pi,hdb.Th*hdb.hjb2.Rj,(elemgpmax(2,hdb.Th)+2*elemgpmin(2,hdb.Th))*hdb.hjb2.Rj)))');
model.result.dataset('surfdset1hjb2hdb').set('defaultPlotIDs', {'pg4|hdb' 'pg5|hdb'});
model.result.dataset('surfdset1hjb2hdb').label('Surface (hjb2)');
model.result.create('pg9', 'PlotGroup2D');
model.result('pg9').label('Pressure Height (hjb2)');
model.result('pg9').set('data', 'surfdset1hjb2hdb');
model.result('pg9').set('edges', false);
model.result('pg9').create('surf1', 'Surface');
model.result('pg9').feature('surf1').label('Surface Plot: Pressure');
model.result('pg9').feature('surf1').set('colortable', 'Viridis');
model.result('pg9').feature('surf1').set('colortabletype', 'discrete');
model.result('pg9').feature('surf1').set('expr', 'hdb.p');
model.result('pg9').feature('surf1').create('hght1', 'Height');
model.result('pg9').label('Pressure Height (hjb2)');

model.nodeGroup.create('grphjb2', 'Results');
model.nodeGroup('grphjb2').label('Unwrapped Plots (hjb2)');
model.nodeGroup('grphjb2').set('type', 'plotgroup');
model.nodeGroup('grphjb2').placeAfter('plotgroup', 'pg1');
model.nodeGroup('grphjb2').label('Unwrapped Plots (hjb2)');
model.nodeGroup('grphjb2').placeAfter('plotgroup', 'pg9');

model.result.create('pg10', 'PlotGroup2D');
model.result('pg10').label('Velocity (hjb2)');
model.result('pg10').set('data', 'surfdset1hjb2hdb');
model.result('pg10').set('edges', false);
model.result('pg10').create('surf1', 'Surface');
model.result('pg10').feature('surf1').label('Surface Plot: Pressure');
model.result('pg10').feature('surf1').set('colortable', 'Prism');
model.result('pg10').feature('surf1').set('colortabletype', 'discrete');
model.result('pg10').feature('surf1').set('expr', 'hdb.p');
model.result('pg10').create('arws1', 'ArrowSurface');
model.result('pg10').feature('arws1').label('Arrow: Velocity');
model.result('pg10').feature('arws1').set('expr', {'hdb.vave_1' 'hdb.vave_c'});
model.result('pg10').feature('arws1').set('placement', 'elements');
model.result('pg10').feature('arws1').set('maxpointcount', 500);
model.result('pg10').feature('arws1').set('scale', 0.001);
model.result('pg10').feature('arws1').set('color', 'black');
model.result('pg10').feature('arws1').set('scaleactive', true);
model.result('pg10').feature('arws1').set('descr', 'Fluid velocity');
model.result('pg10').label('Velocity (hjb2)');

model.nodeGroup('grphjb2').add('plotgroup', 'pg9');
model.nodeGroup('grphjb2').add('plotgroup', 'pg10');

model.result.dataset.create('surfdset1hjb3hdb', 'Surface');
model.result.dataset('surfdset1hjb3hdb').label('Surface (hjb3)');
model.result.dataset('surfdset1hjb3hdb').set('data', 'dset1');
model.result.dataset('surfdset1hjb3hdb').selection.geom('geom1', 2);
model.result.dataset('surfdset1hjb3hdb').selection.set([9 10 11 12]);
model.result.dataset('surfdset1hjb3hdb').selection.inherit(false);
model.result.dataset('surfdset1hjb3hdb').set('param', 'expr');
model.result.dataset('surfdset1hjb3hdb').set('exprx', 'hdb.hjb3.r1');
model.result.dataset('surfdset1hjb3hdb').set('expry', 'if(isdefined(hdb.hjb3.Thm), if(elemgpmax(2,hdb.hjb3.Thm)-elemgpmin(2,hdb.hjb3.Thm)<pi, gpeval(2,hdb.hjb3.Thm)*hdb.hjb3.Rj, if(hdb.hjb3.Thm>pi,hdb.hjb3.Thm*hdb.hjb3.Rj,(elemgpmax(2,hdb.hjb3.Thm)+2*elemgpmin(2,hdb.hjb3.Thm))*hdb.hjb3.Rj)), if(elemgpmax(2,hdb.Th)-elemgpmin(2,hdb.Th)<pi,gpeval(2,hdb.Th)*hdb.hjb3.Rj,if(hdb.Th>pi,hdb.Th*hdb.hjb3.Rj,(elemgpmax(2,hdb.Th)+2*elemgpmin(2,hdb.Th))*hdb.hjb3.Rj)))');
model.result.dataset('surfdset1hjb3hdb').set('defaultPlotIDs', {'pg6|hdb' 'pg7|hdb'});
model.result.dataset('surfdset1hjb3hdb').label('Surface (hjb3)');
model.result.create('pg11', 'PlotGroup2D');
model.result('pg11').label('Pressure Height (hjb3)');
model.result('pg11').set('data', 'surfdset1hjb3hdb');
model.result('pg11').set('edges', false);
model.result('pg11').create('surf1', 'Surface');
model.result('pg11').feature('surf1').label('Surface Plot: Pressure');
model.result('pg11').feature('surf1').set('colortable', 'Viridis');
model.result('pg11').feature('surf1').set('colortabletype', 'discrete');
model.result('pg11').feature('surf1').set('expr', 'hdb.p');
model.result('pg11').feature('surf1').create('hght1', 'Height');
model.result('pg11').label('Pressure Height (hjb3)');

model.nodeGroup.create('grphjb3', 'Results');
model.nodeGroup('grphjb3').label('Unwrapped Plots (hjb3)');
model.nodeGroup('grphjb3').set('type', 'plotgroup');
model.nodeGroup('grphjb3').placeAfter('plotgroup', 'pg1');
model.nodeGroup('grphjb3').label('Unwrapped Plots (hjb3)');
model.nodeGroup('grphjb3').placeAfter('plotgroup', 'pg11');

model.result.create('pg12', 'PlotGroup2D');
model.result('pg12').label('Velocity (hjb3)');
model.result('pg12').set('data', 'surfdset1hjb3hdb');
model.result('pg12').set('edges', false);
model.result('pg12').create('surf1', 'Surface');
model.result('pg12').feature('surf1').label('Surface Plot: Pressure');
model.result('pg12').feature('surf1').set('colortable', 'Prism');
model.result('pg12').feature('surf1').set('colortabletype', 'discrete');
model.result('pg12').feature('surf1').set('expr', 'hdb.p');
model.result('pg12').create('arws1', 'ArrowSurface');
model.result('pg12').feature('arws1').label('Arrow: Velocity');
model.result('pg12').feature('arws1').set('expr', {'hdb.vave_1' 'hdb.vave_c'});
model.result('pg12').feature('arws1').set('placement', 'elements');
model.result('pg12').feature('arws1').set('maxpointcount', 500);
model.result('pg12').feature('arws1').set('scale', 0.001);
model.result('pg12').feature('arws1').set('color', 'black');
model.result('pg12').feature('arws1').set('scaleactive', true);
model.result('pg12').feature('arws1').set('descr', 'Fluid velocity');
model.result('pg12').label('Velocity (hjb3)');

model.nodeGroup('grphjb3').add('plotgroup', 'pg11');
model.nodeGroup('grphjb3').add('plotgroup', 'pg12');

model.result.dataset.create('surfdset1hjb4hdb', 'Surface');
model.result.dataset('surfdset1hjb4hdb').label('Surface (hjb4)');
model.result.dataset('surfdset1hjb4hdb').set('data', 'dset1');
model.result.dataset('surfdset1hjb4hdb').selection.geom('geom1', 2);
model.result.dataset('surfdset1hjb4hdb').selection.set([13 14 15 16]);
model.result.dataset('surfdset1hjb4hdb').selection.inherit(false);
model.result.dataset('surfdset1hjb4hdb').set('param', 'expr');
model.result.dataset('surfdset1hjb4hdb').set('exprx', 'hdb.hjb4.r1');
model.result.dataset('surfdset1hjb4hdb').set('expry', 'if(isdefined(hdb.hjb4.Thm), if(elemgpmax(2,hdb.hjb4.Thm)-elemgpmin(2,hdb.hjb4.Thm)<pi, gpeval(2,hdb.hjb4.Thm)*hdb.hjb4.Rj, if(hdb.hjb4.Thm>pi,hdb.hjb4.Thm*hdb.hjb4.Rj,(elemgpmax(2,hdb.hjb4.Thm)+2*elemgpmin(2,hdb.hjb4.Thm))*hdb.hjb4.Rj)), if(elemgpmax(2,hdb.Th)-elemgpmin(2,hdb.Th)<pi,gpeval(2,hdb.Th)*hdb.hjb4.Rj,if(hdb.Th>pi,hdb.Th*hdb.hjb4.Rj,(elemgpmax(2,hdb.Th)+2*elemgpmin(2,hdb.Th))*hdb.hjb4.Rj)))');
model.result.dataset('surfdset1hjb4hdb').set('defaultPlotIDs', {'pg8|hdb' 'pg9|hdb'});
model.result.dataset('surfdset1hjb4hdb').label('Surface (hjb4)');
model.result.create('pg13', 'PlotGroup2D');
model.result('pg13').label('Pressure Height (hjb4)');
model.result('pg13').set('data', 'surfdset1hjb4hdb');
model.result('pg13').set('edges', false);
model.result('pg13').create('surf1', 'Surface');
model.result('pg13').feature('surf1').label('Surface Plot: Pressure');
model.result('pg13').feature('surf1').set('colortable', 'Viridis');
model.result('pg13').feature('surf1').set('colortabletype', 'discrete');
model.result('pg13').feature('surf1').set('expr', 'hdb.p');
model.result('pg13').feature('surf1').create('hght1', 'Height');
model.result('pg13').label('Pressure Height (hjb4)');

model.nodeGroup.create('grphjb4', 'Results');
model.nodeGroup('grphjb4').label('Unwrapped Plots (hjb4)');
model.nodeGroup('grphjb4').set('type', 'plotgroup');
model.nodeGroup('grphjb4').placeAfter('plotgroup', 'pg1');
model.nodeGroup('grphjb4').label('Unwrapped Plots (hjb4)');
model.nodeGroup('grphjb4').placeAfter('plotgroup', 'pg13');

model.result.create('pg14', 'PlotGroup2D');
model.result('pg14').label('Velocity (hjb4)');
model.result('pg14').set('data', 'surfdset1hjb4hdb');
model.result('pg14').set('edges', false);
model.result('pg14').create('surf1', 'Surface');
model.result('pg14').feature('surf1').label('Surface Plot: Pressure');
model.result('pg14').feature('surf1').set('colortable', 'Prism');
model.result('pg14').feature('surf1').set('colortabletype', 'discrete');
model.result('pg14').feature('surf1').set('expr', 'hdb.p');
model.result('pg14').create('arws1', 'ArrowSurface');
model.result('pg14').feature('arws1').label('Arrow: Velocity');
model.result('pg14').feature('arws1').set('expr', {'hdb.vave_1' 'hdb.vave_c'});
model.result('pg14').feature('arws1').set('placement', 'elements');
model.result('pg14').feature('arws1').set('maxpointcount', 500);
model.result('pg14').feature('arws1').set('scale', 0.001);
model.result('pg14').feature('arws1').set('color', 'black');
model.result('pg14').feature('arws1').set('scaleactive', true);
model.result('pg14').feature('arws1').set('descr', 'Fluid velocity');
model.result('pg14').label('Velocity (hjb4)');

model.nodeGroup('grphjb4').add('plotgroup', 'pg13');
model.nodeGroup('grphjb4').add('plotgroup', 'pg14');

model.result.dataset.create('surfdset1hjb5hdb', 'Surface');
model.result.dataset('surfdset1hjb5hdb').label('Surface (hjb5)');
model.result.dataset('surfdset1hjb5hdb').set('data', 'dset1');
model.result.dataset('surfdset1hjb5hdb').selection.geom('geom1', 2);
model.result.dataset('surfdset1hjb5hdb').selection.set([17 18 19 20]);
model.result.dataset('surfdset1hjb5hdb').selection.inherit(false);
model.result.dataset('surfdset1hjb5hdb').set('param', 'expr');
model.result.dataset('surfdset1hjb5hdb').set('exprx', 'hdb.hjb5.r1');
model.result.dataset('surfdset1hjb5hdb').set('expry', 'if(isdefined(hdb.hjb5.Thm), if(elemgpmax(2,hdb.hjb5.Thm)-elemgpmin(2,hdb.hjb5.Thm)<pi, gpeval(2,hdb.hjb5.Thm)*hdb.hjb5.Rj, if(hdb.hjb5.Thm>pi,hdb.hjb5.Thm*hdb.hjb5.Rj,(elemgpmax(2,hdb.hjb5.Thm)+2*elemgpmin(2,hdb.hjb5.Thm))*hdb.hjb5.Rj)), if(elemgpmax(2,hdb.Th)-elemgpmin(2,hdb.Th)<pi,gpeval(2,hdb.Th)*hdb.hjb5.Rj,if(hdb.Th>pi,hdb.Th*hdb.hjb5.Rj,(elemgpmax(2,hdb.Th)+2*elemgpmin(2,hdb.Th))*hdb.hjb5.Rj)))');
model.result.dataset('surfdset1hjb5hdb').set('defaultPlotIDs', {'pg10|hdb' 'pg11|hdb'});
model.result.dataset('surfdset1hjb5hdb').label('Surface (hjb5)');
model.result.create('pg15', 'PlotGroup2D');
model.result('pg15').label('Pressure Height (hjb5)');
model.result('pg15').set('data', 'surfdset1hjb5hdb');
model.result('pg15').set('edges', false);
model.result('pg15').create('surf1', 'Surface');
model.result('pg15').feature('surf1').label('Surface Plot: Pressure');
model.result('pg15').feature('surf1').set('colortable', 'Viridis');
model.result('pg15').feature('surf1').set('colortabletype', 'discrete');
model.result('pg15').feature('surf1').set('expr', 'hdb.p');
model.result('pg15').feature('surf1').create('hght1', 'Height');
model.result('pg15').label('Pressure Height (hjb5)');

model.nodeGroup.create('grphjb5', 'Results');
model.nodeGroup('grphjb5').label('Unwrapped Plots (hjb5)');
model.nodeGroup('grphjb5').set('type', 'plotgroup');
model.nodeGroup('grphjb5').placeAfter('plotgroup', 'pg1');
model.nodeGroup('grphjb5').label('Unwrapped Plots (hjb5)');
model.nodeGroup('grphjb5').placeAfter('plotgroup', 'pg15');

model.result.create('pg16', 'PlotGroup2D');
model.result('pg16').label('Velocity (hjb5)');
model.result('pg16').set('data', 'surfdset1hjb5hdb');
model.result('pg16').set('edges', false);
model.result('pg16').create('surf1', 'Surface');
model.result('pg16').feature('surf1').label('Surface Plot: Pressure');
model.result('pg16').feature('surf1').set('colortable', 'Prism');
model.result('pg16').feature('surf1').set('colortabletype', 'discrete');
model.result('pg16').feature('surf1').set('expr', 'hdb.p');
model.result('pg16').create('arws1', 'ArrowSurface');
model.result('pg16').feature('arws1').label('Arrow: Velocity');
model.result('pg16').feature('arws1').set('expr', {'hdb.vave_1' 'hdb.vave_c'});
model.result('pg16').feature('arws1').set('placement', 'elements');
model.result('pg16').feature('arws1').set('maxpointcount', 500);
model.result('pg16').feature('arws1').set('scale', 0.001);
model.result('pg16').feature('arws1').set('color', 'black');
model.result('pg16').feature('arws1').set('scaleactive', true);
model.result('pg16').feature('arws1').set('descr', 'Fluid velocity');
model.result('pg16').label('Velocity (hjb5)');

model.nodeGroup('grphjb5').add('plotgroup', 'pg15');
model.nodeGroup('grphjb5').add('plotgroup', 'pg16');

model.result.dataset.create('surfdset1hjb6hdb', 'Surface');
model.result.dataset('surfdset1hjb6hdb').label('Surface (hjb6)');
model.result.dataset('surfdset1hjb6hdb').set('data', 'dset1');
model.result.dataset('surfdset1hjb6hdb').selection.geom('geom1', 2);
model.result.dataset('surfdset1hjb6hdb').selection.set([21 22 23 24]);
model.result.dataset('surfdset1hjb6hdb').selection.inherit(false);
model.result.dataset('surfdset1hjb6hdb').set('param', 'expr');
model.result.dataset('surfdset1hjb6hdb').set('exprx', 'hdb.hjb6.r1');
model.result.dataset('surfdset1hjb6hdb').set('expry', 'if(isdefined(hdb.hjb6.Thm), if(elemgpmax(2,hdb.hjb6.Thm)-elemgpmin(2,hdb.hjb6.Thm)<pi, gpeval(2,hdb.hjb6.Thm)*hdb.hjb6.Rj, if(hdb.hjb6.Thm>pi,hdb.hjb6.Thm*hdb.hjb6.Rj,(elemgpmax(2,hdb.hjb6.Thm)+2*elemgpmin(2,hdb.hjb6.Thm))*hdb.hjb6.Rj)), if(elemgpmax(2,hdb.Th)-elemgpmin(2,hdb.Th)<pi,gpeval(2,hdb.Th)*hdb.hjb6.Rj,if(hdb.Th>pi,hdb.Th*hdb.hjb6.Rj,(elemgpmax(2,hdb.Th)+2*elemgpmin(2,hdb.Th))*hdb.hjb6.Rj)))');
model.result.dataset('surfdset1hjb6hdb').set('defaultPlotIDs', {'pg12|hdb' 'pg13|hdb'});
model.result.dataset('surfdset1hjb6hdb').label('Surface (hjb6)');
model.result.create('pg17', 'PlotGroup2D');
model.result('pg17').label('Pressure Height (hjb6)');
model.result('pg17').set('data', 'surfdset1hjb6hdb');
model.result('pg17').set('edges', false);
model.result('pg17').create('surf1', 'Surface');
model.result('pg17').feature('surf1').label('Surface Plot: Pressure');
model.result('pg17').feature('surf1').set('colortable', 'Viridis');
model.result('pg17').feature('surf1').set('colortabletype', 'discrete');
model.result('pg17').feature('surf1').set('expr', 'hdb.p');
model.result('pg17').feature('surf1').create('hght1', 'Height');
model.result('pg17').label('Pressure Height (hjb6)');

model.nodeGroup.create('grphjb6', 'Results');
model.nodeGroup('grphjb6').label('Unwrapped Plots (hjb6)');
model.nodeGroup('grphjb6').set('type', 'plotgroup');
model.nodeGroup('grphjb6').placeAfter('plotgroup', 'pg1');
model.nodeGroup('grphjb6').label('Unwrapped Plots (hjb6)');
model.nodeGroup('grphjb6').placeAfter('plotgroup', 'pg17');

model.result.create('pg18', 'PlotGroup2D');
model.result('pg18').label('Velocity (hjb6)');
model.result('pg18').set('data', 'surfdset1hjb6hdb');
model.result('pg18').set('edges', false);
model.result('pg18').create('surf1', 'Surface');
model.result('pg18').feature('surf1').label('Surface Plot: Pressure');
model.result('pg18').feature('surf1').set('colortable', 'Prism');
model.result('pg18').feature('surf1').set('colortabletype', 'discrete');
model.result('pg18').feature('surf1').set('expr', 'hdb.p');
model.result('pg18').create('arws1', 'ArrowSurface');
model.result('pg18').feature('arws1').label('Arrow: Velocity');
model.result('pg18').feature('arws1').set('expr', {'hdb.vave_1' 'hdb.vave_c'});
model.result('pg18').feature('arws1').set('placement', 'elements');
model.result('pg18').feature('arws1').set('maxpointcount', 500);
model.result('pg18').feature('arws1').set('scale', 0.001);
model.result('pg18').feature('arws1').set('color', 'black');
model.result('pg18').feature('arws1').set('scaleactive', true);
model.result('pg18').feature('arws1').set('descr', 'Fluid velocity');
model.result('pg18').label('Velocity (hjb6)');

model.nodeGroup('grphjb6').add('plotgroup', 'pg17');
model.nodeGroup('grphjb6').add('plotgroup', 'pg18');

model.result.dataset.create('surfdset1hjb7hdb', 'Surface');
model.result.dataset('surfdset1hjb7hdb').label('Surface (hjb7)');
model.result.dataset('surfdset1hjb7hdb').set('data', 'dset1');
model.result.dataset('surfdset1hjb7hdb').selection.geom('geom1', 2);
model.result.dataset('surfdset1hjb7hdb').selection.set([25 26 27 28]);
model.result.dataset('surfdset1hjb7hdb').selection.inherit(false);
model.result.dataset('surfdset1hjb7hdb').set('param', 'expr');
model.result.dataset('surfdset1hjb7hdb').set('exprx', 'hdb.hjb7.r1');
model.result.dataset('surfdset1hjb7hdb').set('expry', 'if(isdefined(hdb.hjb7.Thm), if(elemgpmax(2,hdb.hjb7.Thm)-elemgpmin(2,hdb.hjb7.Thm)<pi, gpeval(2,hdb.hjb7.Thm)*hdb.hjb7.Rj, if(hdb.hjb7.Thm>pi,hdb.hjb7.Thm*hdb.hjb7.Rj,(elemgpmax(2,hdb.hjb7.Thm)+2*elemgpmin(2,hdb.hjb7.Thm))*hdb.hjb7.Rj)), if(elemgpmax(2,hdb.Th)-elemgpmin(2,hdb.Th)<pi,gpeval(2,hdb.Th)*hdb.hjb7.Rj,if(hdb.Th>pi,hdb.Th*hdb.hjb7.Rj,(elemgpmax(2,hdb.Th)+2*elemgpmin(2,hdb.Th))*hdb.hjb7.Rj)))');
model.result.dataset('surfdset1hjb7hdb').set('defaultPlotIDs', {'pg14|hdb' 'pg15|hdb'});
model.result.dataset('surfdset1hjb7hdb').label('Surface (hjb7)');
model.result.create('pg19', 'PlotGroup2D');
model.result('pg19').label('Pressure Height (hjb7)');
model.result('pg19').set('data', 'surfdset1hjb7hdb');
model.result('pg19').set('edges', false);
model.result('pg19').create('surf1', 'Surface');
model.result('pg19').feature('surf1').label('Surface Plot: Pressure');
model.result('pg19').feature('surf1').set('colortable', 'Viridis');
model.result('pg19').feature('surf1').set('colortabletype', 'discrete');
model.result('pg19').feature('surf1').set('expr', 'hdb.p');
model.result('pg19').feature('surf1').create('hght1', 'Height');
model.result('pg19').label('Pressure Height (hjb7)');

model.nodeGroup.create('grphjb7', 'Results');
model.nodeGroup('grphjb7').label('Unwrapped Plots (hjb7)');
model.nodeGroup('grphjb7').set('type', 'plotgroup');
model.nodeGroup('grphjb7').placeAfter('plotgroup', 'pg1');
model.nodeGroup('grphjb7').label('Unwrapped Plots (hjb7)');
model.nodeGroup('grphjb7').placeAfter('plotgroup', 'pg19');

model.result.create('pg20', 'PlotGroup2D');
model.result('pg20').label('Velocity (hjb7)');
model.result('pg20').set('data', 'surfdset1hjb7hdb');
model.result('pg20').set('edges', false);
model.result('pg20').create('surf1', 'Surface');
model.result('pg20').feature('surf1').label('Surface Plot: Pressure');
model.result('pg20').feature('surf1').set('colortable', 'Prism');
model.result('pg20').feature('surf1').set('colortabletype', 'discrete');
model.result('pg20').feature('surf1').set('expr', 'hdb.p');
model.result('pg20').create('arws1', 'ArrowSurface');
model.result('pg20').feature('arws1').label('Arrow: Velocity');
model.result('pg20').feature('arws1').set('expr', {'hdb.vave_1' 'hdb.vave_c'});
model.result('pg20').feature('arws1').set('placement', 'elements');
model.result('pg20').feature('arws1').set('maxpointcount', 500);
model.result('pg20').feature('arws1').set('scale', 0.001);
model.result('pg20').feature('arws1').set('color', 'black');
model.result('pg20').feature('arws1').set('scaleactive', true);
model.result('pg20').feature('arws1').set('descr', 'Fluid velocity');
model.result('pg20').label('Velocity (hjb7)');

model.nodeGroup('grphjb7').add('plotgroup', 'pg19');
model.nodeGroup('grphjb7').add('plotgroup', 'pg20');

model.result.dataset.create('surfdset1hjb8hdb', 'Surface');
model.result.dataset('surfdset1hjb8hdb').label('Surface (hjb8)');
model.result.dataset('surfdset1hjb8hdb').set('data', 'dset1');
model.result.dataset('surfdset1hjb8hdb').selection.geom('geom1', 2);
model.result.dataset('surfdset1hjb8hdb').selection.set([29 30 31 32]);
model.result.dataset('surfdset1hjb8hdb').selection.inherit(false);
model.result.dataset('surfdset1hjb8hdb').set('param', 'expr');
model.result.dataset('surfdset1hjb8hdb').set('exprx', 'hdb.hjb8.r1');
model.result.dataset('surfdset1hjb8hdb').set('expry', 'if(isdefined(hdb.hjb8.Thm), if(elemgpmax(2,hdb.hjb8.Thm)-elemgpmin(2,hdb.hjb8.Thm)<pi, gpeval(2,hdb.hjb8.Thm)*hdb.hjb8.Rj, if(hdb.hjb8.Thm>pi,hdb.hjb8.Thm*hdb.hjb8.Rj,(elemgpmax(2,hdb.hjb8.Thm)+2*elemgpmin(2,hdb.hjb8.Thm))*hdb.hjb8.Rj)), if(elemgpmax(2,hdb.Th)-elemgpmin(2,hdb.Th)<pi,gpeval(2,hdb.Th)*hdb.hjb8.Rj,if(hdb.Th>pi,hdb.Th*hdb.hjb8.Rj,(elemgpmax(2,hdb.Th)+2*elemgpmin(2,hdb.Th))*hdb.hjb8.Rj)))');
model.result.dataset('surfdset1hjb8hdb').set('defaultPlotIDs', {'pg16|hdb' 'pg17|hdb'});
model.result.dataset('surfdset1hjb8hdb').label('Surface (hjb8)');
model.result.create('pg21', 'PlotGroup2D');
model.result('pg21').label('Pressure Height (hjb8)');
model.result('pg21').set('data', 'surfdset1hjb8hdb');
model.result('pg21').set('edges', false);
model.result('pg21').create('surf1', 'Surface');
model.result('pg21').feature('surf1').label('Surface Plot: Pressure');
model.result('pg21').feature('surf1').set('colortable', 'Viridis');
model.result('pg21').feature('surf1').set('colortabletype', 'discrete');
model.result('pg21').feature('surf1').set('expr', 'hdb.p');
model.result('pg21').feature('surf1').create('hght1', 'Height');
model.result('pg21').label('Pressure Height (hjb8)');

model.nodeGroup.create('grphjb8', 'Results');
model.nodeGroup('grphjb8').label('Unwrapped Plots (hjb8)');
model.nodeGroup('grphjb8').set('type', 'plotgroup');
model.nodeGroup('grphjb8').placeAfter('plotgroup', 'pg1');
model.nodeGroup('grphjb8').label('Unwrapped Plots (hjb8)');
model.nodeGroup('grphjb8').placeAfter('plotgroup', 'pg21');

model.result.create('pg22', 'PlotGroup2D');
model.result('pg22').label('Velocity (hjb8)');
model.result('pg22').set('data', 'surfdset1hjb8hdb');
model.result('pg22').set('edges', false);
model.result('pg22').create('surf1', 'Surface');
model.result('pg22').feature('surf1').label('Surface Plot: Pressure');
model.result('pg22').feature('surf1').set('colortable', 'Prism');
model.result('pg22').feature('surf1').set('colortabletype', 'discrete');
model.result('pg22').feature('surf1').set('expr', 'hdb.p');
model.result('pg22').create('arws1', 'ArrowSurface');
model.result('pg22').feature('arws1').label('Arrow: Velocity');
model.result('pg22').feature('arws1').set('expr', {'hdb.vave_1' 'hdb.vave_c'});
model.result('pg22').feature('arws1').set('placement', 'elements');
model.result('pg22').feature('arws1').set('maxpointcount', 500);
model.result('pg22').feature('arws1').set('scale', 0.001);
model.result('pg22').feature('arws1').set('color', 'black');
model.result('pg22').feature('arws1').set('scaleactive', true);
model.result('pg22').feature('arws1').set('descr', 'Fluid velocity');
model.result('pg22').label('Velocity (hjb8)');

model.nodeGroup('grphjb8').add('plotgroup', 'pg21');
model.nodeGroup('grphjb8').add('plotgroup', 'pg22');
model.nodeGroup.ungroup('grphjb1');

model.result('pg7').run;
model.result('pg7').run;
model.result('pg7').set('titletype', 'manual');
model.result('pg7').set('title', 'Fluid Pressure (MPa)');
model.result('pg7').set('plotarrayenable', true);
model.result('pg7').set('arrayshape', 'square');
model.result('pg7').set('relrowpadding', 1);
model.result('pg7').feature('surf1').set('arraydim', '2');
model.result('pg7').run;
model.result('pg7').feature('surf1').label('Surface Plot: Pressure (Plain)');
model.result('pg7').feature('surf1').set('unit', 'MPa');
model.result('pg7').feature.duplicate('surf2', 'surf1');
model.result('pg7').feature('surf2').set('arraydim', '2');
model.result('pg7').run;
model.result('pg7').feature('surf2').label('Surface Plot: Pressure (Elliptic)');
model.result('pg7').feature('surf2').set('data', 'surfdset1hjb2hdb');
model.result('pg7').feature('surf2').set('inheritplot', 'surf1');
model.result('pg7').feature('surf2').set('manualindexing', true);
model.result('pg7').feature('surf2').set('colindex', 1);
model.result('pg7').feature('surf1').set('arraydim', '2');
model.result('pg7').run;
model.result('pg7').feature.duplicate('surf3', 'surf1');
model.result('pg7').feature('surf3').set('arraydim', '2');
model.result('pg7').run;
model.result('pg7').feature('surf3').label('Surface Plot: Pressure (Split Halves)');
model.result('pg7').feature('surf3').set('data', 'surfdset1hjb3hdb');
model.result('pg7').feature('surf3').set('inheritplot', 'surf1');
model.result('pg7').feature('surf3').set('manualindexing', true);
model.result('pg7').feature('surf3').set('colindex', 2);
model.result('pg7').feature('surf1').set('arraydim', '2');
model.result('pg7').run;
model.result('pg7').feature.duplicate('surf4', 'surf1');
model.result('pg7').feature('surf4').set('arraydim', '2');
model.result('pg7').run;
model.result('pg7').feature('surf4').label('Surface Plot: Pressure (2-lobe)');
model.result('pg7').feature('surf4').set('data', 'surfdset1hjb4hdb');
model.result('pg7').feature('surf4').set('inheritplot', 'surf1');
model.result('pg7').feature('surf4').set('manualindexing', true);
model.result('pg7').feature('surf4').set('colindex', 3);
model.result('pg7').feature('surf1').set('arraydim', '2');
model.result('pg7').run;
model.result('pg7').feature.duplicate('surf5', 'surf1');
model.result('pg7').feature('surf5').set('arraydim', '2');
model.result('pg7').run;
model.result('pg7').feature('surf5').label('Surface Plot: Pressure (3-lobe LOP)');
model.result('pg7').feature('surf5').set('data', 'surfdset1hjb5hdb');
model.result('pg7').feature('surf5').set('inheritplot', 'surf1');
model.result('pg7').feature('surf5').set('manualindexing', true);
model.result('pg7').feature('surf5').set('rowindex', 1);
model.result('pg7').feature('surf1').set('arraydim', '2');
model.result('pg7').run;
model.result('pg7').feature.duplicate('surf6', 'surf1');
model.result('pg7').feature('surf6').set('arraydim', '2');
model.result('pg7').run;
model.result('pg7').feature('surf6').label('Surface Plot: Pressure (3-lobe LBP)');
model.result('pg7').feature('surf6').set('data', 'surfdset1hjb6hdb');
model.result('pg7').feature('surf6').set('inheritplot', 'surf1');
model.result('pg7').feature('surf6').set('manualindexing', true);
model.result('pg7').feature('surf6').set('rowindex', 1);
model.result('pg7').feature('surf6').set('colindex', 1);
model.result('pg7').run;
model.result('pg7').feature('surf1').set('arraydim', '2');
model.result('pg7').run;
model.result('pg7').feature.duplicate('surf7', 'surf1');
model.result('pg7').feature('surf7').set('arraydim', '2');
model.result('pg7').run;
model.result('pg7').feature('surf7').label('Surface Plot: Pressure (4-lobe LOP)');
model.result('pg7').feature('surf7').set('data', 'surfdset1hjb7hdb');
model.result('pg7').feature('surf7').set('inheritplot', 'surf1');
model.result('pg7').feature('surf7').set('manualindexing', true);
model.result('pg7').feature('surf7').set('rowindex', 1);
model.result('pg7').feature('surf7').set('colindex', 2);
model.result('pg7').feature('surf1').set('arraydim', '2');
model.result('pg7').run;
model.result('pg7').feature.duplicate('surf8', 'surf1');
model.result('pg7').feature('surf8').set('arraydim', '2');
model.result('pg7').run;
model.result('pg7').feature('surf8').label('Surface Plot: Pressure (4-lobe LBP)');
model.result('pg7').feature('surf8').set('data', 'surfdset1hjb8hdb');
model.result('pg7').feature('surf8').set('inheritplot', 'surf1');
model.result('pg7').feature('surf8').set('manualindexing', true);
model.result('pg7').feature('surf8').set('rowindex', 1);
model.result('pg7').feature('surf8').set('colindex', 3);
model.result('pg7').run;
model.result('pg7').create('tlan1', 'TableAnnotation');
model.result('pg7').feature('tlan1').set('arraydim', '2');
model.result('pg7').feature('tlan1').set('source', 'localtable');
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 0, 0, 0);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 0, 0, 1);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 'Plain', 0, 2);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 0.3, 1, 0);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 0, 1, 1);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 'Elliptic', 1, 2);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 0.6, 2, 0);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 0, 2, 1);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 'Split halves', 2, 2);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 0.9, 3, 0);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 0, 3, 1);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', '2-lobe', 3, 2);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 0, 4, 0);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 1.3, 4, 1);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', '3-lobe (LOP)', 4, 2);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 0.3, 5, 0);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 1.3, 5, 1);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', '3-lobe (LBP)', 5, 2);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 0.6, 6, 0);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 1.3, 6, 1);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', '4-lobe (LOP)', 6, 2);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 0.9, 7, 0);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', 1.3, 7, 1);
model.result('pg7').feature('tlan1').setIndex('localtablematrix', '4-lobe (LBP)', 7, 2);
model.result('pg7').feature('tlan1').set('showpoint', false);
model.result('pg7').run;

model.view('view2').set('showgrid', true);

model.result('pg7').run;
model.result('pg8').run;
model.result('pg8').set('titletype', 'manual');
model.result('pg8').set('title', 'Fluid Pressure (MPa), Fluid Velocity');
model.result('pg8').set('plotarrayenable', true);
model.result('pg8').set('arrayshape', 'square');
model.result('pg8').set('relcolumnpadding', 0.5);
model.result('pg8').feature('surf1').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature('surf1').label('Surface Plot: Pressure (Plain)');
model.result('pg8').feature('surf1').set('unit', 'MPa');
model.result('pg8').feature('surf1').set('manualindexing', true);
model.result('pg8').feature('arws1').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature('arws1').label('Arrow: Velocity (Plain)');
model.result('pg8').feature('arws1').set('manualindexing', true);
model.result('pg8').feature('surf1').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature.duplicate('surf2', 'surf1');
model.result('pg8').feature.duplicate('arws2', 'arws1');
model.result('pg8').feature('surf2').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature('surf2').label('Surface Plot: Pressure (Elliptic)');
model.result('pg8').feature('surf2').set('data', 'surfdset1hjb2hdb');
model.result('pg8').feature('surf2').set('inheritplot', 'surf1');
model.result('pg8').feature('surf2').set('colindex', 1);
model.result('pg8').feature('arws2').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature('arws2').label('Arrow: Velocity (Elliptic)');
model.result('pg8').feature('arws2').set('data', 'surfdset1hjb2hdb');
model.result('pg8').feature('arws2').set('inheritplot', 'arws1');
model.result('pg8').feature('arws2').set('colindex', 1);
model.result('pg8').run;
model.result('pg8').feature('surf1').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature.duplicate('surf3', 'surf1');
model.result('pg8').feature.duplicate('arws3', 'arws1');
model.result('pg8').feature('surf3').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature('surf3').label('Surface Plot: Pressure (Split Halves)');
model.result('pg8').feature('surf3').set('data', 'surfdset1hjb3hdb');
model.result('pg8').feature('surf3').set('inheritplot', 'surf1');
model.result('pg8').feature('surf3').set('colindex', 2);
model.result('pg8').feature('arws3').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature('arws3').label('Arrow: Velocity (Split Halves)');
model.result('pg8').feature('arws3').set('data', 'surfdset1hjb3hdb');
model.result('pg8').feature('arws3').set('inheritplot', 'arws1');
model.result('pg8').feature('arws3').set('colindex', 2);
model.result('pg8').run;
model.result('pg8').feature('surf1').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature.duplicate('surf4', 'surf1');
model.result('pg8').feature.duplicate('arws4', 'arws1');
model.result('pg8').feature('surf4').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature('surf4').label('Surface Plot: Pressure (2-lobe)');
model.result('pg8').feature('surf4').set('data', 'surfdset1hjb4hdb');
model.result('pg8').feature('surf4').set('inheritplot', 'surf1');
model.result('pg8').feature('surf4').set('colindex', 3);
model.result('pg8').feature('arws4').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature('arws4').set('data', 'surfdset1hjb4hdb');
model.result('pg8').feature('arws4').label('Arrow: Velocity (2-lobe)');
model.result('pg8').feature('arws4').set('inheritplot', 'arws1');
model.result('pg8').feature('arws4').set('colindex', 3);
model.result('pg8').run;
model.result('pg8').feature('surf1').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature.duplicate('surf5', 'surf1');
model.result('pg8').feature.duplicate('arws5', 'arws1');
model.result('pg8').feature('surf5').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature('surf5').label('Surface Plot: Pressure (3-lobe LOP)');
model.result('pg8').feature('surf5').set('data', 'surfdset1hjb5hdb');
model.result('pg8').feature('surf5').set('inheritplot', 'surf1');
model.result('pg8').feature('surf5').set('rowindex', 1);
model.result('pg8').feature('arws5').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature('arws5').label('Arrow: Velocity (3-lobe LOP)');
model.result('pg8').feature('arws5').set('data', 'surfdset1hjb5hdb');
model.result('pg8').feature('arws5').set('inheritplot', 'arws1');
model.result('pg8').feature('arws5').set('rowindex', 1);
model.result('pg8').run;
model.result('pg8').feature('surf1').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature.duplicate('surf6', 'surf1');
model.result('pg8').feature.duplicate('arws6', 'arws1');
model.result('pg8').feature('surf6').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature('surf6').label('Surface Plot: Pressure (3-lobe LBP)');
model.result('pg8').feature('surf6').set('data', 'surfdset1hjb6hdb');
model.result('pg8').feature('surf6').set('inheritplot', 'surf1');
model.result('pg8').feature('surf6').set('rowindex', 1);
model.result('pg8').feature('surf6').set('colindex', 1);
model.result('pg8').feature('arws6').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature('arws6').label('Arrow: Velocity (3-lobe LBP)');
model.result('pg8').feature('arws6').set('data', 'surfdset1hjb6hdb');
model.result('pg8').feature('arws6').set('inheritplot', 'arws1');
model.result('pg8').feature('arws6').set('rowindex', 1);
model.result('pg8').feature('arws6').set('colindex', 1);
model.result('pg8').run;
model.result('pg8').feature('surf1').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature.duplicate('surf7', 'surf1');
model.result('pg8').feature.duplicate('arws7', 'arws1');
model.result('pg8').feature('surf7').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature('surf7').label('Surface Plot: Pressure (4-lobe LOP)');
model.result('pg8').feature('surf7').set('data', 'surfdset1hjb7hdb');
model.result('pg8').feature('surf7').set('inheritplot', 'surf1');
model.result('pg8').feature('surf7').set('rowindex', 1);
model.result('pg8').feature('surf7').set('colindex', 2);
model.result('pg8').feature('arws7').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature('arws7').label('Arrow: Velocity (4-lobe LOP)');
model.result('pg8').feature('arws7').set('data', 'surfdset1hjb7hdb');
model.result('pg8').feature('arws7').set('inheritplot', 'arws1');
model.result('pg8').feature('arws7').set('rowindex', 1);
model.result('pg8').feature('arws7').set('colindex', 2);
model.result('pg8').run;
model.result('pg8').feature('surf1').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature.duplicate('surf8', 'surf1');
model.result('pg8').feature.duplicate('arws8', 'arws1');
model.result('pg8').feature('surf8').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature('surf8').label('Surface Plot: Pressure (4-lobe LBP)');
model.result('pg8').feature('surf8').set('data', 'surfdset1hjb8hdb');
model.result('pg8').feature('surf8').set('inheritplot', 'surf1');
model.result('pg8').feature('surf8').set('rowindex', 1);
model.result('pg8').feature('surf8').set('colindex', 3);
model.result('pg8').feature('arws8').set('arraydim', '2');
model.result('pg8').run;
model.result('pg8').feature('arws8').set('data', 'surfdset1hjb8hdb');
model.result('pg8').feature('arws8').set('inheritplot', 'arws1');
model.result('pg8').feature('arws8').set('rowindex', 1);
model.result('pg8').feature('arws8').set('colindex', 3);
model.result('pg8').run;
model.result('pg8').create('tlan1', 'TableAnnotation');
model.result('pg8').feature('tlan1').set('arraydim', '2');
model.result('pg8').feature('tlan1').set('source', 'localtable');
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 0, 0, 0);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 0, 0, 1);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 'Plain', 0, 2);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 0.415, 1, 0);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 0, 1, 1);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 'Elliptic', 1, 2);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 0.83, 2, 0);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 0, 2, 1);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 'Split halves', 2, 2);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 1.245, 3, 0);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 0, 3, 1);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', '2-lobe', 3, 2);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 0, 4, 0);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 0.82, 4, 1);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', '3-lobe (LOP)', 4, 2);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 0.415, 5, 0);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 0.82, 5, 1);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', '3-lobe (LBP)', 5, 2);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 0.83, 6, 0);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 0.82, 6, 1);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', '4-lobe (LOP)', 6, 2);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 1.245, 7, 0);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', 0.82, 7, 1);
model.result('pg8').feature('tlan1').setIndex('localtablematrix', '4-lobe (LBP)', 7, 2);
model.result('pg8').feature('tlan1').set('showpoint', false);
model.result('pg8').feature('tlan1').set('anchorpoint', 'uppermiddle');
model.result('pg8').run;
model.result('pg8').run;

model.nodeGroup.remove('grphjb2');
model.nodeGroup.remove('grphjb3');
model.nodeGroup.remove('grphjb4');
model.nodeGroup.remove('grphjb5');
model.nodeGroup.remove('grphjb6');
model.nodeGroup.remove('grphjb7');
model.nodeGroup.remove('grphjb8');

model.result('pg1').run;

model.title('Comparison of Different Hydrodynamic Bearings');

model.description(['This example demonstrates how you can use modeling to investigate the performance of different hydrodynamic journal bearings. The model uses the Hydrodynamic Bearing interface, which solves the Reynolds equation to compute the pressure developed in a thin fluid film for four different bearing types: plain, elliptic, split-halves, and multilobe.' newline  newline 'Results include the fluid pressure profile on the bearings, plots of journal eccentricity versus load, the steady-state position of the journals, and the fluid thickness profile when the journal is concentric with the bearing. Moreover, fluid pressure and fluid velocity profiles are also plotted as surfaces unwrapped from the bearing. ' newline  newline 'In the tutorial, we compare variations in the equilibrium journal position and thickness profile of the fluid film. By comparing these quantities, we can find the optimal bearing under similar operating conditions.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;

model.label('hydrodynamic_bearings_comparison.mph');

model.modelNode.label('Components');

out = model;
