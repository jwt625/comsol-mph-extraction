function out = model
%
% residual_stress_resonator_3d.m
%
% Model exported on May 26 2025, 21:30 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/MEMS_Module/Actuators');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.study.create('std1');
model.study('std1').create('eig', 'Eigenfrequency');
model.study('std1').feature('eig').set('chkeigregion', true);
model.study('std1').feature('eig').set('conrad', '1');
model.study('std1').feature('eig').set('conradynhm', '1');
model.study('std1').feature('eig').set('storefact', false);
model.study('std1').feature('eig').set('solnum', 'auto');
model.study('std1').feature('eig').set('notsolnum', 'auto');
model.study('std1').feature('eig').set('outputmap', {});
model.study('std1').feature('eig').set('ngenAUX', '1');
model.study('std1').feature('eig').set('goalngenAUX', '1');
model.study('std1').feature('eig').set('ngenAUX', '1');
model.study('std1').feature('eig').set('goalngenAUX', '1');
model.study('std1').feature('eig').setSolveFor('/physics/solid', true);

model.common.create('mpf1', 'ParticipationFactors', 'comp1');

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('E1', '155[GPa]', 'Young''s modulus');
model.param.set('nu1', '0.23', 'Poisson''s ratio');
model.param.set('rho1', '2330[kg/m^3]', 'Density');
model.param.set('sigma', '50[MPa]', 'Residual stress');
model.param.set('epsilon', 'sigma*(1-nu1)/E1', 'Residual strain');
model.param.set('T1', '605[degC]', 'Deposition temperature');
model.param.set('T0', '25[degC]', 'Room temperature');
model.param.set('daT', 'epsilon/(T1-T0)', 'Coefficient of thermal expansion');
model.param.set('thickness', '2.25[um]', 'Thickness');

model.geom('geom1').insertFile('residual_stress_resonator_3d_geom_sequence.mph', 'geom1');
model.geom('geom1').run('fin');

model.physics('solid').feature('lemm1').create('te1', 'ThermalExpansion', 3);
model.physics('solid').feature('lemm1').feature('te1').set('minput_temperature_src', 'userdef');
model.physics('solid').feature('lemm1').feature('te1').set('minput_temperature', 'T0');

model.common('cminpt').set('modified', {'strainreferencetemperature' 'T1'});

model.physics('solid').create('fix1', 'Fixed', 2);
model.physics('solid').feature('fix1').selection.set([7 15 21 29]);

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat1').propertyGroup('Enu').set('E', {'E1'});
model.material('mat1').propertyGroup('Enu').set('nu', {'nu1'});
model.material('mat1').propertyGroup('def').set('density', {'rho1'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'daT'});

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').selection.set([4 9 14 23 28]);
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([16 21 44 49]);
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 2);
model.mesh('mesh1').feature('size').set('hauto', 2);
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis1').set('numelem', 2);
model.mesh('mesh1').run;

model.modelNode.create('comp2', true);

model.geom.create('geom2', 3);
model.geom('geom2').model('comp2');

model.mesh.create('mesh2', 'geom2');

model.geom('geom2').insertFile('residual_stress_resonator_3d_geom_sequence.mph', 'geom2');
model.geom('geom2').run('fin');

model.physics.create('solid2', 'SolidMechanics', 'geom2');
model.physics('solid2').model('comp2');

model.study('std1').feature('eig').setSolveFor('/physics/solid2', true);

model.physics('solid2').feature('lemm1').create('te1', 'ThermalExpansion', 3);
model.physics('solid2').feature('lemm1').feature('te1').set('minput_temperature_src', 'userdef');
model.physics('solid2').feature('lemm1').feature('te1').set('minput_temperature', 'T0');
model.physics('solid2').create('fix1', 'Fixed', 2);
model.physics('solid2').feature('fix1').selection.set([46 48 68 70]);

model.material.create('mat2', 'Common', 'comp2');
model.material('mat2').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat2').propertyGroup('Enu').set('E', {'E1'});
model.material('mat2').propertyGroup('Enu').set('nu', {'nu1'});
model.material('mat2').propertyGroup('def').set('density', {'rho1'});
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'daT'});

model.mesh('mesh2').create('map1', 'Map');
model.mesh('mesh2').feature('map1').selection.set([4 9 13 18 22 27 36 41 45 50 54 63 67 72 76 81 88 93 97 102 106]);
model.mesh('mesh2').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh2').feature('map1').feature('dis1').selection.set([12 21 26 30 73 78 104 113 118 122 161 166]);
model.mesh('mesh2').feature('map1').feature('dis1').set('numelem', 2);
model.mesh('mesh2').create('swe1', 'Sweep');
model.mesh('mesh2').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh2').feature('swe1').feature('dis1').set('numelem', 2);
model.mesh('mesh2').feature('size').set('hauto', 2);
model.mesh('mesh2').run;

model.study('std1').label('Study 1 - Straight Cantilever, No Stress');
model.study('std1').feature('eig').setEntry('activate', 'solid2', false);
model.study.create('std2');
model.study('std2').create('eig', 'Eigenfrequency');
model.study('std2').feature('eig').set('chkeigregion', true);
model.study('std2').feature('eig').set('conrad', '1');
model.study('std2').feature('eig').set('conradynhm', '1');
model.study('std2').feature('eig').set('storefact', false);
model.study('std2').feature('eig').set('solnum', 'auto');
model.study('std2').feature('eig').set('notsolnum', 'auto');
model.study('std2').feature('eig').set('outputmap', {});
model.study('std2').feature('eig').set('ngenAUX', '1');
model.study('std2').feature('eig').set('goalngenAUX', '1');
model.study('std2').feature('eig').set('ngenAUX', '1');
model.study('std2').feature('eig').set('goalngenAUX', '1');
model.study('std2').feature('eig').setSolveFor('/physics/solid', true);
model.study('std2').feature('eig').setSolveFor('/physics/solid2', true);

model.common.create('mpf2', 'ParticipationFactors', 'comp2');

model.study('std2').label('Study 2 - Folded Cantilever, No Stress');
model.study('std2').feature('eig').setEntry('activate', 'solid', false);
model.study.create('std3');
model.study('std3').create('stat', 'Stationary');
model.study('std3').feature('stat').set('outputmap', {});
model.study('std3').feature('stat').set('ngenAUX', '1');
model.study('std3').feature('stat').set('goalngenAUX', '1');
model.study('std3').feature('stat').set('ngenAUX', '1');
model.study('std3').feature('stat').set('goalngenAUX', '1');
model.study('std3').feature('stat').setSolveFor('/physics/solid', true);
model.study('std3').feature('stat').setSolveFor('/physics/solid2', true);
model.study('std3').create('eig', 'Eigenfrequency');
model.study('std3').feature('eig').set('chkeigregion', true);
model.study('std3').feature('eig').set('conrad', '1');
model.study('std3').feature('eig').set('conradynhm', '1');
model.study('std3').feature('eig').set('storefact', false);
model.study('std3').feature('eig').set('geometricNonlinearity', true);
model.study('std3').feature('eig').set('outputmap', {});
model.study('std3').feature('eig').set('ngenAUX', '1');
model.study('std3').feature('eig').set('goalngenAUX', '1');
model.study('std3').feature('eig').set('ngenAUX', '1');
model.study('std3').feature('eig').set('goalngenAUX', '1');
model.study('std3').feature('eig').setSolveFor('/physics/solid', true);
model.study('std3').feature('eig').setSolveFor('/physics/solid2', true);
model.study('std3').label('Study 3 - Straight Cantilever, Residual Stress');
model.study('std3').feature('stat').setEntry('activate', 'solid2', false);
model.study('std3').feature('eig').setEntry('activate', 'solid2', false);
model.study.create('std4');
model.study('std4').create('stat', 'Stationary');
model.study('std4').feature('stat').set('outputmap', {});
model.study('std4').feature('stat').set('ngenAUX', '1');
model.study('std4').feature('stat').set('goalngenAUX', '1');
model.study('std4').feature('stat').set('ngenAUX', '1');
model.study('std4').feature('stat').set('goalngenAUX', '1');
model.study('std4').feature('stat').setSolveFor('/physics/solid', true);
model.study('std4').feature('stat').setSolveFor('/physics/solid2', true);
model.study('std4').create('eig', 'Eigenfrequency');
model.study('std4').feature('eig').set('chkeigregion', true);
model.study('std4').feature('eig').set('conrad', '1');
model.study('std4').feature('eig').set('conradynhm', '1');
model.study('std4').feature('eig').set('storefact', false);
model.study('std4').feature('eig').set('geometricNonlinearity', true);
model.study('std4').feature('eig').set('outputmap', {});
model.study('std4').feature('eig').set('ngenAUX', '1');
model.study('std4').feature('eig').set('goalngenAUX', '1');
model.study('std4').feature('eig').set('ngenAUX', '1');
model.study('std4').feature('eig').set('goalngenAUX', '1');
model.study('std4').feature('eig').setSolveFor('/physics/solid', true);
model.study('std4').feature('eig').setSolveFor('/physics/solid2', true);
model.study('std4').label('Study 4 - Folded Cantilever, Residual Stress');
model.study('std4').feature('stat').setEntry('activate', 'solid', false);
model.study('std4').feature('eig').setEntry('activate', 'solid', false);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'eig');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'eig');
model.sol('sol1').create('e1', 'Eigenvalue');
model.sol('sol1').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol1').feature('e1').set('eigvfunscaleparam', '5.77E-10');
model.sol('sol1').feature('e1').set('control', 'eig');
model.sol('sol1').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 1, 0);
model.result('pg1').set('defaultPlotID', 'modeShape');
model.result('pg1').label('Mode Shape (solid)');
model.result('pg1').set('showlegends', false);
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'solid.disp'});
model.result('pg1').feature('surf1').set('threshold', 'manual');
model.result('pg1').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg1').feature('surf1').set('colortable', 'Rainbow');
model.result('pg1').feature('surf1').set('colortabletrans', 'none');
model.result('pg1').feature('surf1').set('colorscalemode', 'linear');
model.result('pg1').feature('surf1').set('colortable', 'AuroraBorealis');
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg1').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg1').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result.evaluationGroup.create('std1EvgFrq', 'EvaluationGroup');
model.result.evaluationGroup('std1EvgFrq').set('defaultPlotID', 'eigenfrequenciesTable_solid');
model.result.evaluationGroup('std1EvgFrq').set('data', 'dset1');
model.result.evaluationGroup('std1EvgFrq').label('Eigenfrequencies (Study 1 - Straight Cantilever, No Stress)');
model.result.evaluationGroup('std1EvgFrq').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('expr', '2*pi*freq', 0);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('unit', 'rad/s', 0);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('descr', 'Angular frequency', 0);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('expr', 'imag(freq)/abs(freq)', 1);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('unit', '1', 1);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('descr', 'Damping ratio', 1);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('expr', 'abs(freq)/imag(freq)/2', 2);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('unit', '1', 2);
model.result.evaluationGroup('std1EvgFrq').feature('gev1').setIndex('descr', 'Quality factor', 2);
model.result.evaluationGroup('std1EvgFrq').run;
model.result.evaluationGroup.create('std1mpf1', 'EvaluationGroup');
model.result.evaluationGroup('std1mpf1').set('data', 'dset1');
model.result.evaluationGroup('std1mpf1').label('Participation Factors (Study 1 - Straight Cantilever, No Stress)');
model.result.evaluationGroup('std1mpf1').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfLnormX', 0);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 0);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, X-translation', 0);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfLnormY', 1);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 1);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Y-translation', 1);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfLnormZ', 2);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 2);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Z-translation', 2);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfRnormX', 3);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 3);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, X-rotation', 3);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfRnormY', 4);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 4);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Y-rotation', 4);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.pfRnormZ', 5);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', '1', 5);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Z-rotation', 5);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffLX', 6);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg', 6);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, X-translation', 6);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffLY', 7);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg', 7);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Y-translation', 7);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffLZ', 8);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg', 8);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Z-translation', 8);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffRX', 9);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg*m^2', 9);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, X-rotation', 9);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffRY', 10);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg*m^2', 10);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Y-rotation', 10);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffRZ', 11);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('unit', 'kg*m^2', 11);
model.result.evaluationGroup('std1mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Z-rotation', 11);
model.result.evaluationGroup('std1mpf1').run;
model.result('pg1').run;
model.result('pg1').label('Straight Cantilever, No Stress');
model.result('pg1').set('looplevel', [2]);
model.result('pg1').run;

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'eig');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'eig');
model.sol('sol2').create('e1', 'Eigenvalue');
model.sol('sol2').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol2').feature('e1').set('eigvfunscaleparam', '5.27E-10');
model.sol('sol2').feature('e1').set('control', 'eig');
model.sol('sol2').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'dset4');
model.result('pg2').setIndex('looplevel', 1, 0);
model.result('pg2').set('defaultPlotID', 'modeShape');
model.result('pg2').label('Mode Shape (solid2)');
model.result('pg2').set('showlegends', false);
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'solid2.disp'});
model.result('pg2').feature('surf1').set('threshold', 'manual');
model.result('pg2').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg2').feature('surf1').set('colortable', 'Rainbow');
model.result('pg2').feature('surf1').set('colortabletrans', 'none');
model.result('pg2').feature('surf1').set('colorscalemode', 'linear');
model.result('pg2').feature('surf1').set('colortable', 'AuroraBorealis');
model.result('pg2').feature('surf1').create('def', 'Deform');
model.result('pg2').feature('surf1').feature('def').set('expr', {'u2' 'v2' 'w2'});
model.result('pg2').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result.evaluationGroup.create('std2EvgFrq', 'EvaluationGroup');
model.result.evaluationGroup('std2EvgFrq').set('defaultPlotID', 'eigenfrequenciesTable_solid2');
model.result.evaluationGroup('std2EvgFrq').set('data', 'dset4');
model.result.evaluationGroup('std2EvgFrq').label('Eigenfrequencies (Study 2 - Folded Cantilever, No Stress)');
model.result.evaluationGroup('std2EvgFrq').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('std2EvgFrq').feature('gev1').setIndex('expr', '2*pi*freq', 0);
model.result.evaluationGroup('std2EvgFrq').feature('gev1').setIndex('unit', 'rad/s', 0);
model.result.evaluationGroup('std2EvgFrq').feature('gev1').setIndex('descr', 'Angular frequency', 0);
model.result.evaluationGroup('std2EvgFrq').feature('gev1').setIndex('expr', 'imag(freq)/abs(freq)', 1);
model.result.evaluationGroup('std2EvgFrq').feature('gev1').setIndex('unit', '1', 1);
model.result.evaluationGroup('std2EvgFrq').feature('gev1').setIndex('descr', 'Damping ratio', 1);
model.result.evaluationGroup('std2EvgFrq').feature('gev1').setIndex('expr', 'abs(freq)/imag(freq)/2', 2);
model.result.evaluationGroup('std2EvgFrq').feature('gev1').setIndex('unit', '1', 2);
model.result.evaluationGroup('std2EvgFrq').feature('gev1').setIndex('descr', 'Quality factor', 2);
model.result.evaluationGroup('std2EvgFrq').run;
model.result.evaluationGroup.create('std2mpf2', 'EvaluationGroup');
model.result.evaluationGroup('std2mpf2').set('data', 'dset4');
model.result.evaluationGroup('std2mpf2').label('Participation Factors (Study 2 - Folded Cantilever, No Stress)');
model.result.evaluationGroup('std2mpf2').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('expr', 'mpf2.pfLnormX', 0);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('unit', '1', 0);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('descr', 'Participation factor, normalized, X-translation', 0);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('expr', 'mpf2.pfLnormY', 1);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('unit', '1', 1);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('descr', 'Participation factor, normalized, Y-translation', 1);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('expr', 'mpf2.pfLnormZ', 2);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('unit', '1', 2);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('descr', 'Participation factor, normalized, Z-translation', 2);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('expr', 'mpf2.pfRnormX', 3);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('unit', '1', 3);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('descr', 'Participation factor, normalized, X-rotation', 3);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('expr', 'mpf2.pfRnormY', 4);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('unit', '1', 4);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('descr', 'Participation factor, normalized, Y-rotation', 4);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('expr', 'mpf2.pfRnormZ', 5);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('unit', '1', 5);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('descr', 'Participation factor, normalized, Z-rotation', 5);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('expr', 'mpf2.mEffLX', 6);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('unit', 'kg', 6);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('descr', 'Effective modal mass, X-translation', 6);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('expr', 'mpf2.mEffLY', 7);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('unit', 'kg', 7);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('descr', 'Effective modal mass, Y-translation', 7);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('expr', 'mpf2.mEffLZ', 8);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('unit', 'kg', 8);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('descr', 'Effective modal mass, Z-translation', 8);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('expr', 'mpf2.mEffRX', 9);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('unit', 'kg*m^2', 9);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('descr', 'Effective modal mass, X-rotation', 9);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('expr', 'mpf2.mEffRY', 10);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('unit', 'kg*m^2', 10);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('descr', 'Effective modal mass, Y-rotation', 10);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('expr', 'mpf2.mEffRZ', 11);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('unit', 'kg*m^2', 11);
model.result.evaluationGroup('std2mpf2').feature('gev1').setIndex('descr', 'Effective modal mass, Z-rotation', 11);
model.result.evaluationGroup('std2mpf2').run;
model.result('pg2').run;
model.result('pg2').label('Folded Cantilever, No Stress');
model.result('pg2').set('looplevel', [2]);
model.result('pg2').run;

model.sol.create('sol3');
model.sol('sol3').study('std3');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std3');
model.sol('sol3').feature('st1').set('studystep', 'stat');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').set('control', 'stat');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol3').feature('s1').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol3').feature('s1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol3').feature('s1').create('i1', 'Iterative');
model.sol('sol3').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol3').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol3').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol3').feature('s1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol3').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol3').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol3').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol('sol3').create('su1', 'StoreSolution');
model.sol('sol3').create('st2', 'StudyStep');
model.sol('sol3').feature('st2').set('study', 'std3');
model.sol('sol3').feature('st2').set('studystep', 'eig');
model.sol('sol3').create('v2', 'Variables');
model.sol('sol3').feature('v2').set('initmethod', 'sol');
model.sol('sol3').feature('v2').set('initsol', 'sol3');
model.sol('sol3').feature('v2').set('initsoluse', 'sol4');
model.sol('sol3').feature('v2').set('notsolmethod', 'sol');
model.sol('sol3').feature('v2').set('notsol', 'sol3');
model.sol('sol3').feature('v2').set('control', 'eig');
model.sol('sol3').create('e1', 'Eigenvalue');
model.sol('sol3').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol3').feature('e1').set('eigvfunscaleparam', '5.77E-10');
model.sol('sol3').feature('e1').set('storelinpoint', true);
model.sol('sol3').feature('e1').set('control', 'eig');
model.sol('sol3').feature('e1').set('linpmethod', 'sol');
model.sol('sol3').feature('e1').set('linpsol', 'sol3');
model.sol('sol3').feature('e1').set('linpsoluse', 'sol4');
model.sol('sol3').feature('e1').set('control', 'eig');
model.sol('sol3').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('v2').set('notsolnum', 'auto');
model.sol('sol3').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol3').attach('std3');
model.sol('sol3').runAll;

model.result.dataset('dset5').set('frametype', 'spatial');
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').set('data', 'dset5');
model.result('pg3').setIndex('looplevel', 1, 0);
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').set('defaultPlotID', 'modeShape');
model.result('pg3').label('Mode Shape (solid)');
model.result('pg3').set('showlegends', false);
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', {'solid.disp'});
model.result('pg3').feature('surf1').set('threshold', 'manual');
model.result('pg3').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg3').feature('surf1').set('colortable', 'Rainbow');
model.result('pg3').feature('surf1').set('colortabletrans', 'none');
model.result('pg3').feature('surf1').set('colorscalemode', 'linear');
model.result('pg3').feature('surf1').set('colortable', 'AuroraBorealis');
model.result('pg3').feature('surf1').create('def', 'Deform');
model.result('pg3').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg3').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result.evaluationGroup.create('std3EvgFrq', 'EvaluationGroup');
model.result.evaluationGroup('std3EvgFrq').set('defaultPlotID', 'eigenfrequenciesTable_solid');
model.result.evaluationGroup('std3EvgFrq').set('data', 'dset5');
model.result.evaluationGroup('std3EvgFrq').label('Eigenfrequencies (Study 3 - Straight Cantilever, Residual Stress)');
model.result.evaluationGroup('std3EvgFrq').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('std3EvgFrq').feature('gev1').setIndex('expr', '2*pi*freq', 0);
model.result.evaluationGroup('std3EvgFrq').feature('gev1').setIndex('unit', 'rad/s', 0);
model.result.evaluationGroup('std3EvgFrq').feature('gev1').setIndex('descr', 'Angular frequency', 0);
model.result.evaluationGroup('std3EvgFrq').feature('gev1').setIndex('expr', 'imag(freq)/abs(freq)', 1);
model.result.evaluationGroup('std3EvgFrq').feature('gev1').setIndex('unit', '1', 1);
model.result.evaluationGroup('std3EvgFrq').feature('gev1').setIndex('descr', 'Damping ratio', 1);
model.result.evaluationGroup('std3EvgFrq').feature('gev1').setIndex('expr', 'abs(freq)/imag(freq)/2', 2);
model.result.evaluationGroup('std3EvgFrq').feature('gev1').setIndex('unit', '1', 2);
model.result.evaluationGroup('std3EvgFrq').feature('gev1').setIndex('descr', 'Quality factor', 2);
model.result.evaluationGroup('std3EvgFrq').run;
model.result.evaluationGroup.create('std3mpf1', 'EvaluationGroup');
model.result.evaluationGroup('std3mpf1').set('data', 'dset5');
model.result.evaluationGroup('std3mpf1').label('Participation Factors (Study 3 - Straight Cantilever, Residual Stress)');
model.result.evaluationGroup('std3mpf1').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('expr', 'mpf1.pfLnormX', 0);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('unit', '1', 0);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, X-translation', 0);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('expr', 'mpf1.pfLnormY', 1);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('unit', '1', 1);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Y-translation', 1);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('expr', 'mpf1.pfLnormZ', 2);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('unit', '1', 2);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Z-translation', 2);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('expr', 'mpf1.pfRnormX', 3);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('unit', '1', 3);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, X-rotation', 3);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('expr', 'mpf1.pfRnormY', 4);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('unit', '1', 4);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Y-rotation', 4);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('expr', 'mpf1.pfRnormZ', 5);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('unit', '1', 5);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('descr', 'Participation factor, normalized, Z-rotation', 5);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffLX', 6);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('unit', 'kg', 6);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, X-translation', 6);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffLY', 7);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('unit', 'kg', 7);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Y-translation', 7);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffLZ', 8);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('unit', 'kg', 8);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Z-translation', 8);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffRX', 9);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('unit', 'kg*m^2', 9);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, X-rotation', 9);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffRY', 10);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('unit', 'kg*m^2', 10);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Y-rotation', 10);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('expr', 'mpf1.mEffRZ', 11);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('unit', 'kg*m^2', 11);
model.result.evaluationGroup('std3mpf1').feature('gev1').setIndex('descr', 'Effective modal mass, Z-rotation', 11);
model.result.evaluationGroup('std3mpf1').run;
model.result('pg3').run;
model.result('pg3').label('Straight Cantilever, Residual Stress');
model.result('pg3').set('looplevel', [2]);
model.result('pg3').run;

model.sol.create('sol5');
model.sol('sol5').study('std4');
model.sol('sol5').create('st1', 'StudyStep');
model.sol('sol5').feature('st1').set('study', 'std4');
model.sol('sol5').feature('st1').set('studystep', 'stat');
model.sol('sol5').create('v1', 'Variables');
model.sol('sol5').feature('v1').set('control', 'stat');
model.sol('sol5').create('s1', 'Stationary');
model.sol('sol5').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol5').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol5').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol5').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol5').feature('s1').create('d1', 'Direct');
model.sol('sol5').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol5').feature('s1').feature('d1').label('Suggested Direct Solver (solid2)');
model.sol('sol5').feature('s1').create('i1', 'Iterative');
model.sol('sol5').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol5').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol5').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol5').feature('s1').feature('i1').label('Suggested Iterative Solver (solid2)');
model.sol('sol5').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol5').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol5').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol5').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol5').feature('s1').feature.remove('fcDef');
model.sol('sol5').create('su1', 'StoreSolution');
model.sol('sol5').create('st2', 'StudyStep');
model.sol('sol5').feature('st2').set('study', 'std4');
model.sol('sol5').feature('st2').set('studystep', 'eig');
model.sol('sol5').create('v2', 'Variables');
model.sol('sol5').feature('v2').set('initmethod', 'sol');
model.sol('sol5').feature('v2').set('initsol', 'sol5');
model.sol('sol5').feature('v2').set('initsoluse', 'sol6');
model.sol('sol5').feature('v2').set('notsolmethod', 'sol');
model.sol('sol5').feature('v2').set('notsol', 'sol5');
model.sol('sol5').feature('v2').set('control', 'eig');
model.sol('sol5').create('e1', 'Eigenvalue');
model.sol('sol5').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol5').feature('e1').set('eigvfunscaleparam', '5.27E-10');
model.sol('sol5').feature('e1').set('storelinpoint', true);
model.sol('sol5').feature('e1').set('control', 'eig');
model.sol('sol5').feature('e1').set('linpmethod', 'sol');
model.sol('sol5').feature('e1').set('linpsol', 'sol5');
model.sol('sol5').feature('e1').set('linpsoluse', 'sol6');
model.sol('sol5').feature('e1').set('control', 'eig');
model.sol('sol5').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol5').feature('v2').set('notsolnum', 'auto');
model.sol('sol5').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol5').attach('std4');
model.sol('sol5').runAll;

model.result.dataset('dset10').set('frametype', 'spatial');
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').set('data', 'dset10');
model.result('pg4').setIndex('looplevel', 1, 0);
model.result('pg4').set('frametype', 'spatial');
model.result('pg4').set('defaultPlotID', 'modeShape');
model.result('pg4').label('Mode Shape (solid2)');
model.result('pg4').set('showlegends', false);
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', {'solid2.disp'});
model.result('pg4').feature('surf1').set('threshold', 'manual');
model.result('pg4').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg4').feature('surf1').set('colortable', 'Rainbow');
model.result('pg4').feature('surf1').set('colortabletrans', 'none');
model.result('pg4').feature('surf1').set('colorscalemode', 'linear');
model.result('pg4').feature('surf1').set('colortable', 'AuroraBorealis');
model.result('pg4').feature('surf1').create('def', 'Deform');
model.result('pg4').feature('surf1').feature('def').set('expr', {'u2' 'v2' 'w2'});
model.result('pg4').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result.evaluationGroup.create('std4EvgFrq', 'EvaluationGroup');
model.result.evaluationGroup('std4EvgFrq').set('defaultPlotID', 'eigenfrequenciesTable_solid2');
model.result.evaluationGroup('std4EvgFrq').set('data', 'dset10');
model.result.evaluationGroup('std4EvgFrq').label('Eigenfrequencies (Study 4 - Folded Cantilever, Residual Stress)');
model.result.evaluationGroup('std4EvgFrq').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('std4EvgFrq').feature('gev1').setIndex('expr', '2*pi*freq', 0);
model.result.evaluationGroup('std4EvgFrq').feature('gev1').setIndex('unit', 'rad/s', 0);
model.result.evaluationGroup('std4EvgFrq').feature('gev1').setIndex('descr', 'Angular frequency', 0);
model.result.evaluationGroup('std4EvgFrq').feature('gev1').setIndex('expr', 'imag(freq)/abs(freq)', 1);
model.result.evaluationGroup('std4EvgFrq').feature('gev1').setIndex('unit', '1', 1);
model.result.evaluationGroup('std4EvgFrq').feature('gev1').setIndex('descr', 'Damping ratio', 1);
model.result.evaluationGroup('std4EvgFrq').feature('gev1').setIndex('expr', 'abs(freq)/imag(freq)/2', 2);
model.result.evaluationGroup('std4EvgFrq').feature('gev1').setIndex('unit', '1', 2);
model.result.evaluationGroup('std4EvgFrq').feature('gev1').setIndex('descr', 'Quality factor', 2);
model.result.evaluationGroup('std4EvgFrq').run;
model.result.evaluationGroup.create('std4mpf2', 'EvaluationGroup');
model.result.evaluationGroup('std4mpf2').set('data', 'dset10');
model.result.evaluationGroup('std4mpf2').label('Participation Factors (Study 4 - Folded Cantilever, Residual Stress)');
model.result.evaluationGroup('std4mpf2').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('expr', 'mpf2.pfLnormX', 0);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('unit', '1', 0);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('descr', 'Participation factor, normalized, X-translation', 0);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('expr', 'mpf2.pfLnormY', 1);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('unit', '1', 1);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('descr', 'Participation factor, normalized, Y-translation', 1);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('expr', 'mpf2.pfLnormZ', 2);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('unit', '1', 2);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('descr', 'Participation factor, normalized, Z-translation', 2);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('expr', 'mpf2.pfRnormX', 3);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('unit', '1', 3);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('descr', 'Participation factor, normalized, X-rotation', 3);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('expr', 'mpf2.pfRnormY', 4);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('unit', '1', 4);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('descr', 'Participation factor, normalized, Y-rotation', 4);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('expr', 'mpf2.pfRnormZ', 5);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('unit', '1', 5);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('descr', 'Participation factor, normalized, Z-rotation', 5);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('expr', 'mpf2.mEffLX', 6);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('unit', 'kg', 6);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('descr', 'Effective modal mass, X-translation', 6);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('expr', 'mpf2.mEffLY', 7);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('unit', 'kg', 7);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('descr', 'Effective modal mass, Y-translation', 7);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('expr', 'mpf2.mEffLZ', 8);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('unit', 'kg', 8);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('descr', 'Effective modal mass, Z-translation', 8);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('expr', 'mpf2.mEffRX', 9);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('unit', 'kg*m^2', 9);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('descr', 'Effective modal mass, X-rotation', 9);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('expr', 'mpf2.mEffRY', 10);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('unit', 'kg*m^2', 10);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('descr', 'Effective modal mass, Y-rotation', 10);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('expr', 'mpf2.mEffRZ', 11);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('unit', 'kg*m^2', 11);
model.result.evaluationGroup('std4mpf2').feature('gev1').setIndex('descr', 'Effective modal mass, Z-rotation', 11);
model.result.evaluationGroup('std4mpf2').run;
model.result('pg4').run;
model.result('pg4').label('Folded Cantilever, Residual Stress');
model.result('pg4').set('looplevel', [2]);
model.result('pg4').run;
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').run;
model.result('pg5').label('Residual Stress in Straight Cantilever');
model.result('pg5').set('data', 'dset7');
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', 'solid.mises');
model.result('pg5').run;
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').run;
model.result('pg6').label('Residual Stress in Folded Cantilever');
model.result('pg6').set('data', 'dset12');
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', 'solid2.mises');
model.result('pg6').run;

model.title(['Residual Stress in a Thin-Film Resonator ' native2unicode(hex2dec({'20' '14'}), 'unicode') ' 3D']);

model.description('Surface micromachined thin films are often subject to residual stress. The thermal residual stress is added to a structural mechanical model, which changes the resonant frequency of the structure. This model describes a thin film resonator with folded cantilever beam strings in 3D. The folded flexures relieve axial stress.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;

model.label('residual_stress_resonator_3d.mph');

model.modelNode.label('Components');

out = model;
