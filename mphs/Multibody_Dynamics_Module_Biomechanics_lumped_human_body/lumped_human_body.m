function out = model
%
% lumped_human_body.m
%
% Model exported on May 26 2025, 21:30 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Multibody_Dynamics_Module/Biomechanics');

model.modelNode.create('comp1', true);

model.physics.create('lms', 'LumpedMechanicalSystem');
model.physics('lms').model('comp1');

model.study.create('std1');
model.study('std1').create('eig', 'Eigenfrequency');
model.study('std1').feature('eig').setSolveFor('/physics/lms', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('m1', '6.15[kg]', 'Mass 1');
model.param.set('m2', '6[kg]', 'Mass 2');
model.param.set('m3', '12.58[kg]', 'Mass 3');
model.param.set('m4', '50.34[kg]', 'Mass 4');
model.param.set('k1', '6[kN/m]', 'Spring constant, spring 1');
model.param.set('k2', '6[kN/m]', 'Spring constant, spring 2');
model.param.set('k3', '10[kN/m]', 'Spring constant, spring 3');
model.param.set('k4', '10[kN/m]', 'Spring constant, spring 4');
model.param.set('k5', '18[kN/m]', 'Spring constant, spring 5');
model.param.set('c1', '0.3[kN*s/m]', 'Damping coefficient, damper 1');
model.param.set('c2', '0.65[kN*s/m]', 'Damping coefficient, damper 2');
model.param.set('c4', '1.9[kN*s/m]', 'Damping coefficient, damper 4');
model.param.set('ms', '0.3[kg]', 'Mass, shoe sole');
model.param.set('ks', '403[kN/m]', 'Spring constant, shoe sole');
model.param.set('cs', '2170[kN*s/m]', 'Damping coefficient, shoe sole');
model.param.set('kg', '880[kN/m]', 'Spring constant, ground');
model.param.set('ub', '10[mm]', 'Base excitation');

model.physics('lms').feature('fix1').active(false);
model.physics('lms').create('M1', 'Mass', -1);
model.physics('lms').feature('M1').setIndex('Connections', 0, 0, 0);
model.physics('lms').feature('M1').setIndex('Connections', 1, 1, 0);
model.physics('lms').feature('M1').set('m', 'm1');
model.physics('lms').feature('M1').set('includeForce', false);
model.physics('lms').create('K1', 'Spring', -1);
model.physics('lms').feature('K1').setIndex('Connections', 1, 0, 0);
model.physics('lms').feature('K1').setIndex('Connections', 4, 1, 0);
model.physics('lms').feature('K1').set('k', 'k1');
model.physics('lms').feature('K1').set('includeDisplacement', false);
model.physics('lms').create('C1', 'Damper', -1);
model.physics('lms').feature('C1').setIndex('Connections', 1, 0, 0);
model.physics('lms').feature('C1').setIndex('Connections', 4, 1, 0);
model.physics('lms').feature('C1').set('c', 'c1');
model.physics('lms').feature('C1').set('includeForce', false);
model.physics('lms').feature('C1').set('includeDisplacement', false);
model.physics('lms').create('K2', 'Spring', -1);
model.physics('lms').feature('K2').setIndex('Connections', 1, 0, 0);
model.physics('lms').feature('K2').setIndex('Connections', 2, 1, 0);
model.physics('lms').feature('K2').set('k', 'k2');
model.physics('lms').feature('K2').set('includeDisplacement', false);
model.physics('lms').create('C2', 'Damper', -1);
model.physics('lms').feature('C2').setIndex('Connections', 1, 0, 0);
model.physics('lms').feature('C2').setIndex('Connections', 2, 1, 0);
model.physics('lms').feature('C2').set('c', 'c2');
model.physics('lms').feature('C2').set('includeForce', false);
model.physics('lms').feature('C2').set('includeDisplacement', false);
model.physics('lms').create('M2', 'Mass', -1);
model.physics('lms').feature('M2').setIndex('Connections', 2, 0, 0);
model.physics('lms').feature('M2').setIndex('Connections', 3, 1, 0);
model.physics('lms').feature('M2').set('m', 'm2');
model.physics('lms').feature('M2').set('includeForce', false);
model.physics('lms').create('K3', 'Spring', -1);
model.physics('lms').feature('K3').setIndex('Connections', 3, 0, 0);
model.physics('lms').feature('K3').setIndex('Connections', 4, 1, 0);
model.physics('lms').feature('K3').set('k', 'k3');
model.physics('lms').feature('K3').set('includeDisplacement', false);
model.physics('lms').create('M3', 'Mass', -1);
model.physics('lms').feature('M3').setIndex('Connections', 4, 0, 0);
model.physics('lms').feature('M3').setIndex('Connections', 5, 1, 0);
model.physics('lms').feature('M3').set('m', 'm3');
model.physics('lms').feature('M3').set('includeForce', false);
model.physics('lms').create('K4', 'Spring', -1);
model.physics('lms').feature('K4').setIndex('Connections', 5, 0, 0);
model.physics('lms').feature('K4').setIndex('Connections', 6, 1, 0);
model.physics('lms').feature('K4').set('k', 'k4');
model.physics('lms').feature('K4').set('includeDisplacement', false);
model.physics('lms').create('C3', 'Damper', -1);
model.physics('lms').feature('C3').tag('C4');
model.physics('lms').feature('C4').setIndex('Connections', 5, 0, 0);
model.physics('lms').feature('C4').setIndex('Connections', 6, 1, 0);
model.physics('lms').feature('C4').set('c', 'c4');
model.physics('lms').feature('C4').set('includeForce', false);
model.physics('lms').feature('C4').set('includeDisplacement', false);
model.physics('lms').create('M4', 'Mass', -1);
model.physics('lms').feature('M4').setIndex('Connections', 6, 0, 0);
model.physics('lms').feature('M4').setIndex('Connections', 7, 1, 0);
model.physics('lms').feature('M4').set('m', 'm4');
model.physics('lms').feature('M4').set('includeForce', false);
model.physics('lms').create('K5', 'Spring', -1);
model.physics('lms').feature('K5').setIndex('Connections', 7, 0, 0);
model.physics('lms').feature('K5').setIndex('Connections', 5, 1, 0);
model.physics('lms').feature('K5').set('k', 'k5');
model.physics('lms').feature('K5').set('includeDisplacement', false);
model.physics('lms').create('K6', 'Spring', -1);
model.physics('lms').feature('K6').tag('Ks');
model.physics('lms').feature('Ks').setIndex('Connections', 0, 0, 0);
model.physics('lms').feature('Ks').setIndex('Connections', 'a', 1, 0);
model.physics('lms').feature('Ks').set('k', 'ks');
model.physics('lms').feature('Ks').set('includeDisplacement', false);
model.physics('lms').create('C5', 'Damper', -1);
model.physics('lms').feature('C5').tag('Cs');
model.physics('lms').feature('Cs').setIndex('Connections', 0, 0, 0);
model.physics('lms').feature('Cs').setIndex('Connections', 'a', 1, 0);
model.physics('lms').feature('Cs').set('c', 'cs');
model.physics('lms').feature('Cs').set('includeForce', false);
model.physics('lms').feature('Cs').set('includeDisplacement', false);
model.physics('lms').create('M5', 'Mass', -1);
model.physics('lms').feature('M5').tag('Ms');
model.physics('lms').feature('Ms').setIndex('Connections', 'a', 0, 0);
model.physics('lms').feature('Ms').setIndex('Connections', 'b', 1, 0);
model.physics('lms').feature('Ms').set('m', 'ms');
model.physics('lms').feature('Ms').set('includeForce', false);
model.physics('lms').create('K6', 'Spring', -1);
model.physics('lms').feature('K6').tag('Kg');
model.physics('lms').feature('Kg').setIndex('Connections', 'b', 0, 0);
model.physics('lms').feature('Kg').setIndex('Connections', 'c', 1, 0);
model.physics('lms').feature('Kg').set('k', 'kg');
model.physics('lms').feature('Kg').set('includeForce', false);
model.physics('lms').feature('Kg').set('includeDisplacement', false);
model.physics('lms').create('disp1', 'DisplacementNode', -1);
model.physics('lms').feature('disp1').setIndex('Connections', 'c', 0, 0);
model.physics('lms').feature('disp1').set('up1', 'ub');

model.study('std1').feature('eig').set('eigsolver', 'lapack');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'eig');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'eig');
model.sol('sol1').create('e1', 'Eigenvalue');
model.sol('sol1').feature('e1').set('control', 'eig');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.evaluationGroup.create('eg1', 'EvaluationGroup');
model.result.evaluationGroup('eg1').set('showlooplevelinput', {'off' 'off' 'off'});
model.result.evaluationGroup('eg1').set('data', 'dset1');
model.result.evaluationGroup('eg1').set('defaultPlotID', 'LumpedMechanicalSystem/icom2/pdef1/pcond2/eg1');
model.result.evaluationGroup('eg1').feature.create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg1').feature('gev1').label('Eigenfrequency');
model.result.evaluationGroup('eg1').feature('gev1').set('data', 'dset1');
model.result.evaluationGroup('eg1').feature('gev1').set('showsolutionparams', 'off');
model.result.evaluationGroup('eg1').feature('gev1').set('showlooplevelinput', {'off' 'off' 'off'});
model.result.evaluationGroup('eg1').feature('gev1').set('expr', {'2*comp1.lms.freq*pi' 'imag(comp1.lms.freq)/abs(comp1.lms.freq)' '0.5*abs(comp1.lms.freq)/imag(comp1.lms.freq)'});
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'rad/s', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', '1', 1);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', '1', 2);
model.result.evaluationGroup('eg1').feature('gev1').set('descr', {'Angular frequency' 'Damping ratio' 'Quality factor'});
model.result.evaluationGroup('eg1').feature('gev1').set('showsolutionparams', 'off');
model.result.evaluationGroup('eg1').feature('gev1').set('showlooplevelinput', {'off' 'off' 'off'});
model.result.evaluationGroup('eg1').feature('gev1').set('showsolutionparams', 'off');
model.result.evaluationGroup('eg1').feature('gev1').set('showlooplevelinput', {'off' 'off' 'off'});
model.result.evaluationGroup('eg1').feature('gev1').set('showsolutionparams', 'off');
model.result.evaluationGroup('eg1').feature('gev1').set('showlooplevelinput', {'off' 'off' 'off'});
model.result.evaluationGroup('eg1').feature('gev1').set('showsolutionparams', 'off');
model.result.evaluationGroup('eg1').feature('gev1').set('showlooplevelinput', {'off' 'off' 'off'});
model.result.evaluationGroup('eg1').feature('gev1').set('data', 'dset1');
model.result.evaluationGroup('eg1').run;

model.study.create('std2');
model.study('std2').create('freq', 'Frequency');
model.study('std2').feature('freq').setSolveFor('/physics/lms', true);
model.study('std2').create('param', 'Parametric');
model.study('std2').feature('param').setIndex('pname', 'm1', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', 'kg', 0);
model.study('std2').feature('param').setIndex('pname', 'm1', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', 'kg', 0);
model.study('std2').feature('param').setIndex('pname', 'kg', 0);
model.study('std2').feature('param').setIndex('plistarr', '99 359 880', 0);
model.study('std2').feature('param').setIndex('punit', 'kN/m', 0);
model.study('std2').feature('freq').set('plist', 'range(0.01,0.01,100)');

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'freq');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'freq');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('p1', 'Parametric');
model.sol('sol2').feature('s1').feature.remove('pDef');
model.sol('sol2').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol2').feature('s1').feature('p1').set('plistarr', {'range(0.01,0.01,100)'});
model.sol('sol2').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol2').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol2').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol2').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol2').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol2').feature('s1').feature('p1').set('plotgroup', 'Default');
model.sol('sol2').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol2').feature('s1').feature('p1').set('probes', {});
model.sol('sol2').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol2').feature('s1').set('linpmethod', 'sol');
model.sol('sol2').feature('s1').set('linpsol', 'zero');
model.sol('sol2').feature('s1').set('control', 'freq');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('maxiter', 25);
model.sol('sol2').feature('s1').feature('fc1').set('jtech', 'onevery');
model.sol('sol2').feature('s1').feature('fc1').set('dtech', 'const');
model.sol('sol2').feature('s1').feature('fc1').set('damp', 1);
model.sol('sol2').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol2').feature('s1').feature('fc1').set('ntermconst', 'tol');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol2').feature('s1').feature('fc1').set('maxiter', 25);
model.sol('sol2').feature('s1').feature('fc1').set('jtech', 'onevery');
model.sol('sol2').feature('s1').feature('fc1').set('dtech', 'const');
model.sol('sol2').feature('s1').feature('fc1').set('damp', 1);
model.sol('sol2').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol2').feature('s1').feature('fc1').set('ntermconst', 'tol');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std2');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol2');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'kg'});
model.batch('p1').set('plistarr', {'99 359 880'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std2');
model.batch('p1').set('control', 'param');

model.sol.create('sol3');
model.sol('sol3').study('std2');
model.sol('sol3').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol3');
model.batch('p1').run('compute');

model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').label('Displacement, Amplitude (M1)');
model.result('pg1').set('data', 'dset3');
model.result('pg1').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg1').set('titletype', 'manual');
model.result('pg1').set('title', 'Displacement');
model.result('pg1').set('ylabel', 'Displacement');
model.result('pg1').set('data', 'dset3');
model.result('pg1').set('defaultPlotID', 'DisplacementAmp');
model.result('pg1').feature.create('glob1', 'Global');
model.result('pg1').feature('glob1').set('expr', {'lms.M1_uAmp'});
model.result('pg1').feature('glob1').set('hasmultilevel', 'off');
model.result('pg1').feature('glob1').set('xdatasolnumtype', 'inner');
model.result('pg1').feature('glob1').set('showunitcombo', 'off');
model.result('pg1').feature('glob1').set('linemarker', 'cycle');
model.result('pg1').feature('glob1').set('hasmultilevel', 'off');
model.result('pg1').feature('glob1').set('xdatasolnumtype', 'inner');
model.result('pg1').feature('glob1').set('showunitcombo', 'off');
model.result('pg1').feature('glob1').set('hasmultilevel', 'off');
model.result('pg1').feature('glob1').set('xdatasolnumtype', 'inner');
model.result('pg1').feature('glob1').set('showunitcombo', 'off');
model.result('pg1').feature('glob1').set('hasmultilevel', 'off');
model.result('pg1').feature('glob1').set('xdatasolnumtype', 'inner');
model.result('pg1').feature('glob1').set('showunitcombo', 'off');
model.result('pg1').feature('glob1').set('hasmultilevel', 'off');
model.result('pg1').feature('glob1').set('xdatasolnumtype', 'inner');
model.result('pg1').feature('glob1').set('showunitcombo', 'off');
model.result('pg1').feature('glob1').set('data', 'parent');
model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').label('Displacement, Phase (M1)');
model.result('pg2').set('data', 'dset3');
model.result('pg2').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg2').set('titletype', 'manual');
model.result('pg2').set('title', 'Phase');
model.result('pg2').set('ylabel', 'Phase');
model.result('pg2').set('data', 'dset3');
model.result('pg2').set('defaultPlotID', 'DisplacementPhase');
model.result('pg2').feature.create('glob1', 'Global');
model.result('pg2').feature('glob1').set('expr', {'lms.M1_uPhase'});
model.result('pg2').feature('glob1').set('hasmultilevel', 'off');
model.result('pg2').feature('glob1').set('xdatasolnumtype', 'inner');
model.result('pg2').feature('glob1').set('showunitcombo', 'off');
model.result('pg2').feature('glob1').set('linemarker', 'cycle');
model.result('pg2').feature('glob1').set('hasmultilevel', 'off');
model.result('pg2').feature('glob1').set('xdatasolnumtype', 'inner');
model.result('pg2').feature('glob1').set('showunitcombo', 'off');
model.result('pg2').feature('glob1').set('hasmultilevel', 'off');
model.result('pg2').feature('glob1').set('xdatasolnumtype', 'inner');
model.result('pg2').feature('glob1').set('showunitcombo', 'off');
model.result('pg2').feature('glob1').set('hasmultilevel', 'off');
model.result('pg2').feature('glob1').set('xdatasolnumtype', 'inner');
model.result('pg2').feature('glob1').set('showunitcombo', 'off');
model.result('pg2').feature('glob1').set('hasmultilevel', 'off');
model.result('pg2').feature('glob1').set('xdatasolnumtype', 'inner');
model.result('pg2').feature('glob1').set('showunitcombo', 'off');
model.result('pg2').feature('glob1').set('data', 'parent');
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').label('Force, Amplitude (K1)');
model.result('pg3').set('data', 'dset3');
model.result('pg3').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg3').set('titletype', 'manual');
model.result('pg3').set('title', 'Force');
model.result('pg3').set('ylabel', 'Force');
model.result('pg3').set('data', 'dset3');
model.result('pg3').set('defaultPlotID', 'ForceAmp');
model.result('pg3').feature.create('glob1', 'Global');
model.result('pg3').feature('glob1').set('expr', {'lms.K1_fAmp'});
model.result('pg3').feature('glob1').set('hasmultilevel', 'off');
model.result('pg3').feature('glob1').set('xdatasolnumtype', 'inner');
model.result('pg3').feature('glob1').set('showunitcombo', 'off');
model.result('pg3').feature('glob1').set('linemarker', 'cycle');
model.result('pg3').feature('glob1').set('hasmultilevel', 'off');
model.result('pg3').feature('glob1').set('xdatasolnumtype', 'inner');
model.result('pg3').feature('glob1').set('showunitcombo', 'off');
model.result('pg3').feature('glob1').set('hasmultilevel', 'off');
model.result('pg3').feature('glob1').set('xdatasolnumtype', 'inner');
model.result('pg3').feature('glob1').set('showunitcombo', 'off');
model.result('pg3').feature('glob1').set('hasmultilevel', 'off');
model.result('pg3').feature('glob1').set('xdatasolnumtype', 'inner');
model.result('pg3').feature('glob1').set('showunitcombo', 'off');
model.result('pg3').feature('glob1').set('hasmultilevel', 'off');
model.result('pg3').feature('glob1').set('xdatasolnumtype', 'inner');
model.result('pg3').feature('glob1').set('showunitcombo', 'off');
model.result('pg3').feature('glob1').set('data', 'parent');
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').label('Force, Phase (K1)');
model.result('pg4').set('data', 'dset3');
model.result('pg4').set('showlooplevelinput', {'off' 'off' 'off'});
model.result('pg4').set('titletype', 'manual');
model.result('pg4').set('title', 'Phase');
model.result('pg4').set('ylabel', 'Phase');
model.result('pg4').set('data', 'dset3');
model.result('pg4').set('defaultPlotID', 'ForcePhase');
model.result('pg4').feature.create('glob1', 'Global');
model.result('pg4').feature('glob1').set('expr', {'lms.K1_fPhase'});
model.result('pg4').feature('glob1').set('hasmultilevel', 'off');
model.result('pg4').feature('glob1').set('xdatasolnumtype', 'inner');
model.result('pg4').feature('glob1').set('showunitcombo', 'off');
model.result('pg4').feature('glob1').set('linemarker', 'cycle');
model.result('pg4').feature('glob1').set('hasmultilevel', 'off');
model.result('pg4').feature('glob1').set('xdatasolnumtype', 'inner');
model.result('pg4').feature('glob1').set('showunitcombo', 'off');
model.result('pg4').feature('glob1').set('hasmultilevel', 'off');
model.result('pg4').feature('glob1').set('xdatasolnumtype', 'inner');
model.result('pg4').feature('glob1').set('showunitcombo', 'off');
model.result('pg4').feature('glob1').set('hasmultilevel', 'off');
model.result('pg4').feature('glob1').set('xdatasolnumtype', 'inner');
model.result('pg4').feature('glob1').set('showunitcombo', 'off');
model.result('pg4').feature('glob1').set('hasmultilevel', 'off');
model.result('pg4').feature('glob1').set('xdatasolnumtype', 'inner');
model.result('pg4').feature('glob1').set('showunitcombo', 'off');
model.result('pg4').feature('glob1').set('data', 'parent');
model.result('pg3').label('Force, Amplitude (lms)');
model.result('pg3').set('data', 'dset3');
model.result('pg3').set('defaultPlotID', 'ForceAmp');
model.result('pg3').feature('glob1').set('expr', {});
model.result('pg3').feature('glob1').set('descr', {});
model.result('pg3').feature('glob1').set('expr', {'lms.K2_fAmp'});
model.result('pg3').feature('glob1').set('descr', {'Spring force, amplitude (K1)' 'Spring force, amplitude (K2)'});
model.result('pg3').feature('glob1').set('expr', {'lms.K1_fAmp' 'lms.K2_fAmp'});
model.result('pg3').feature('glob1').set('data', 'parent');
model.result('pg4').label('Force, Phase (lms)');
model.result('pg4').set('data', 'dset3');
model.result('pg4').set('defaultPlotID', 'ForcePhase');
model.result('pg4').feature('glob1').set('expr', {});
model.result('pg4').feature('glob1').set('descr', {});
model.result('pg4').feature('glob1').set('expr', {'lms.K2_fPhase'});
model.result('pg4').feature('glob1').set('descr', {'Spring force, phase (K1)' 'Spring force, phase (K2)'});
model.result('pg4').feature('glob1').set('expr', {'lms.K1_fPhase' 'lms.K2_fPhase'});
model.result('pg4').feature('glob1').set('data', 'parent');
model.result('pg1').label('Displacement, Amplitude (lms)');
model.result('pg1').set('data', 'dset3');
model.result('pg1').set('defaultPlotID', 'DisplacementAmp');
model.result('pg1').feature('glob1').set('expr', {});
model.result('pg1').feature('glob1').set('descr', {});
model.result('pg1').feature('glob1').set('expr', {'lms.M2_uAmp'});
model.result('pg1').feature('glob1').set('descr', {'Displacement, amplitude (M1)' 'Displacement, amplitude (M2)'});
model.result('pg1').feature('glob1').set('expr', {'lms.M1_uAmp' 'lms.M2_uAmp'});
model.result('pg1').feature('glob1').set('data', 'parent');
model.result('pg2').label('Displacement, Phase (lms)');
model.result('pg2').set('data', 'dset3');
model.result('pg2').set('defaultPlotID', 'DisplacementPhase');
model.result('pg2').feature('glob1').set('expr', {});
model.result('pg2').feature('glob1').set('descr', {});
model.result('pg2').feature('glob1').set('expr', {'lms.M2_uPhase'});
model.result('pg2').feature('glob1').set('descr', {'Displacement, phase (M1)' 'Displacement, phase (M2)'});
model.result('pg2').feature('glob1').set('expr', {'lms.M1_uPhase' 'lms.M2_uPhase'});
model.result('pg2').feature('glob1').set('data', 'parent');
model.result('pg3').label('Force, Amplitude (lms) 1');
model.result('pg3').set('data', 'dset3');
model.result('pg3').set('defaultPlotID', 'ForceAmp');
model.result('pg3').feature('glob1').set('expr', {});
model.result('pg3').feature('glob1').set('descr', {});
model.result('pg3').feature('glob1').set('expr', {'lms.K3_fAmp'});
model.result('pg3').feature('glob1').set('descr', {'Spring force, amplitude (K1)' 'Spring force, amplitude (K2)' 'Spring force, amplitude (K3)'});
model.result('pg3').feature('glob1').set('expr', {'lms.K1_fAmp' 'lms.K2_fAmp' 'lms.K3_fAmp'});
model.result('pg3').feature('glob1').set('data', 'parent');
model.result('pg4').label('Force, Phase (lms) 1');
model.result('pg4').set('data', 'dset3');
model.result('pg4').set('defaultPlotID', 'ForcePhase');
model.result('pg4').feature('glob1').set('expr', {});
model.result('pg4').feature('glob1').set('descr', {});
model.result('pg4').feature('glob1').set('expr', {'lms.K3_fPhase'});
model.result('pg4').feature('glob1').set('descr', {'Spring force, phase (K1)' 'Spring force, phase (K2)' 'Spring force, phase (K3)'});
model.result('pg4').feature('glob1').set('expr', {'lms.K1_fPhase' 'lms.K2_fPhase' 'lms.K3_fPhase'});
model.result('pg4').feature('glob1').set('data', 'parent');
model.result('pg1').label('Displacement, Amplitude (lms) 1');
model.result('pg1').set('data', 'dset3');
model.result('pg1').set('defaultPlotID', 'DisplacementAmp');
model.result('pg1').feature('glob1').set('expr', {});
model.result('pg1').feature('glob1').set('descr', {});
model.result('pg1').feature('glob1').set('expr', {'lms.M3_uAmp'});
model.result('pg1').feature('glob1').set('descr', {'Displacement, amplitude (M1)' 'Displacement, amplitude (M2)' 'Displacement, amplitude (M3)'});
model.result('pg1').feature('glob1').set('expr', {'lms.M1_uAmp' 'lms.M2_uAmp' 'lms.M3_uAmp'});
model.result('pg1').feature('glob1').set('data', 'parent');
model.result('pg2').label('Displacement, Phase (lms) 1');
model.result('pg2').set('data', 'dset3');
model.result('pg2').set('defaultPlotID', 'DisplacementPhase');
model.result('pg2').feature('glob1').set('expr', {});
model.result('pg2').feature('glob1').set('descr', {});
model.result('pg2').feature('glob1').set('expr', {'lms.M3_uPhase'});
model.result('pg2').feature('glob1').set('descr', {'Displacement, phase (M1)' 'Displacement, phase (M2)' 'Displacement, phase (M3)'});
model.result('pg2').feature('glob1').set('expr', {'lms.M1_uPhase' 'lms.M2_uPhase' 'lms.M3_uPhase'});
model.result('pg2').feature('glob1').set('data', 'parent');
model.result('pg3').label('Force, Amplitude (lms)');
model.result('pg3').set('data', 'dset3');
model.result('pg3').set('defaultPlotID', 'ForceAmp');
model.result('pg3').feature('glob1').set('expr', {});
model.result('pg3').feature('glob1').set('descr', {});
model.result('pg3').feature('glob1').set('expr', {'lms.K4_fAmp'});
model.result('pg3').feature('glob1').set('descr', {'Spring force, amplitude (K1)' 'Spring force, amplitude (K2)' 'Spring force, amplitude (K3)' 'Spring force, amplitude (K4)'});
model.result('pg3').feature('glob1').set('expr', {'lms.K1_fAmp' 'lms.K2_fAmp' 'lms.K3_fAmp' 'lms.K4_fAmp'});
model.result('pg3').feature('glob1').set('data', 'parent');
model.result('pg4').label('Force, Phase (lms)');
model.result('pg4').set('data', 'dset3');
model.result('pg4').set('defaultPlotID', 'ForcePhase');
model.result('pg4').feature('glob1').set('expr', {});
model.result('pg4').feature('glob1').set('descr', {});
model.result('pg4').feature('glob1').set('expr', {'lms.K4_fPhase'});
model.result('pg4').feature('glob1').set('descr', {'Spring force, phase (K1)' 'Spring force, phase (K2)' 'Spring force, phase (K3)' 'Spring force, phase (K4)'});
model.result('pg4').feature('glob1').set('expr', {'lms.K1_fPhase' 'lms.K2_fPhase' 'lms.K3_fPhase' 'lms.K4_fPhase'});
model.result('pg4').feature('glob1').set('data', 'parent');
model.result('pg1').label('Displacement, Amplitude (lms)');
model.result('pg1').set('data', 'dset3');
model.result('pg1').set('defaultPlotID', 'DisplacementAmp');
model.result('pg1').feature('glob1').set('expr', {});
model.result('pg1').feature('glob1').set('descr', {});
model.result('pg1').feature('glob1').set('expr', {'lms.M4_uAmp'});
model.result('pg1').feature('glob1').set('descr', {'Displacement, amplitude (M1)' 'Displacement, amplitude (M2)' 'Displacement, amplitude (M3)' 'Displacement, amplitude (M4)'});
model.result('pg1').feature('glob1').set('expr', {'lms.M1_uAmp' 'lms.M2_uAmp' 'lms.M3_uAmp' 'lms.M4_uAmp'});
model.result('pg1').feature('glob1').set('data', 'parent');
model.result('pg2').label('Displacement, Phase (lms)');
model.result('pg2').set('data', 'dset3');
model.result('pg2').set('defaultPlotID', 'DisplacementPhase');
model.result('pg2').feature('glob1').set('expr', {});
model.result('pg2').feature('glob1').set('descr', {});
model.result('pg2').feature('glob1').set('expr', {'lms.M4_uPhase'});
model.result('pg2').feature('glob1').set('descr', {'Displacement, phase (M1)' 'Displacement, phase (M2)' 'Displacement, phase (M3)' 'Displacement, phase (M4)'});
model.result('pg2').feature('glob1').set('expr', {'lms.M1_uPhase' 'lms.M2_uPhase' 'lms.M3_uPhase' 'lms.M4_uPhase'});
model.result('pg2').feature('glob1').set('data', 'parent');
model.result('pg3').label('Force, Amplitude (lms) 1');
model.result('pg3').set('data', 'dset3');
model.result('pg3').set('defaultPlotID', 'ForceAmp');
model.result('pg3').feature('glob1').set('expr', {});
model.result('pg3').feature('glob1').set('descr', {});
model.result('pg3').feature('glob1').set('expr', {'lms.K5_fAmp'});
model.result('pg3').feature('glob1').set('descr', {'Spring force, amplitude (K1)' 'Spring force, amplitude (K2)' 'Spring force, amplitude (K3)' 'Spring force, amplitude (K4)' 'Spring force, amplitude (K5)'});
model.result('pg3').feature('glob1').set('expr', {'lms.K1_fAmp' 'lms.K2_fAmp' 'lms.K3_fAmp' 'lms.K4_fAmp' 'lms.K5_fAmp'});
model.result('pg3').feature('glob1').set('data', 'parent');
model.result('pg4').label('Force, Phase (lms) 1');
model.result('pg4').set('data', 'dset3');
model.result('pg4').set('defaultPlotID', 'ForcePhase');
model.result('pg4').feature('glob1').set('expr', {});
model.result('pg4').feature('glob1').set('descr', {});
model.result('pg4').feature('glob1').set('expr', {'lms.K5_fPhase'});
model.result('pg4').feature('glob1').set('descr', {'Spring force, phase (K1)' 'Spring force, phase (K2)' 'Spring force, phase (K3)' 'Spring force, phase (K4)' 'Spring force, phase (K5)'});
model.result('pg4').feature('glob1').set('expr', {'lms.K1_fPhase' 'lms.K2_fPhase' 'lms.K3_fPhase' 'lms.K4_fPhase' 'lms.K5_fPhase'});
model.result('pg4').feature('glob1').set('data', 'parent');
model.result('pg3').label('Force, Amplitude (lms)');
model.result('pg3').set('data', 'dset3');
model.result('pg3').set('defaultPlotID', 'ForceAmp');
model.result('pg3').feature('glob1').set('expr', {});
model.result('pg3').feature('glob1').set('descr', {});
model.result('pg3').feature('glob1').set('expr', {'lms.Ks_fAmp'});
model.result('pg3').feature('glob1').set('descr', {'Spring force, amplitude (K1)' 'Spring force, amplitude (K2)' 'Spring force, amplitude (K3)' 'Spring force, amplitude (K4)' 'Spring force, amplitude (K5)' 'Spring force, amplitude (Ks)'});
model.result('pg3').feature('glob1').set('expr', {'lms.K1_fAmp' 'lms.K2_fAmp' 'lms.K3_fAmp' 'lms.K4_fAmp' 'lms.K5_fAmp' 'lms.Ks_fAmp'});
model.result('pg3').feature('glob1').set('data', 'parent');
model.result('pg4').label('Force, Phase (lms)');
model.result('pg4').set('data', 'dset3');
model.result('pg4').set('defaultPlotID', 'ForcePhase');
model.result('pg4').feature('glob1').set('expr', {});
model.result('pg4').feature('glob1').set('descr', {});
model.result('pg4').feature('glob1').set('expr', {'lms.Ks_fPhase'});
model.result('pg4').feature('glob1').set('descr', {'Spring force, phase (K1)' 'Spring force, phase (K2)' 'Spring force, phase (K3)' 'Spring force, phase (K4)' 'Spring force, phase (K5)' 'Spring force, phase (Ks)'});
model.result('pg4').feature('glob1').set('expr', {'lms.K1_fPhase' 'lms.K2_fPhase' 'lms.K3_fPhase' 'lms.K4_fPhase' 'lms.K5_fPhase' 'lms.Ks_fPhase'});
model.result('pg4').feature('glob1').set('data', 'parent');
model.result('pg1').label('Displacement, Amplitude (lms) 1');
model.result('pg1').set('data', 'dset3');
model.result('pg1').set('defaultPlotID', 'DisplacementAmp');
model.result('pg1').feature('glob1').set('expr', {});
model.result('pg1').feature('glob1').set('descr', {});
model.result('pg1').feature('glob1').set('expr', {'lms.Ms_uAmp'});
model.result('pg1').feature('glob1').set('descr', {'Displacement, amplitude (M1)' 'Displacement, amplitude (M2)' 'Displacement, amplitude (M3)' 'Displacement, amplitude (M4)' 'Displacement, amplitude (Ms)'});
model.result('pg1').feature('glob1').set('expr', {'lms.M1_uAmp' 'lms.M2_uAmp' 'lms.M3_uAmp' 'lms.M4_uAmp' 'lms.Ms_uAmp'});
model.result('pg1').feature('glob1').set('data', 'parent');
model.result('pg2').label('Displacement, Phase (lms) 1');
model.result('pg2').set('data', 'dset3');
model.result('pg2').set('defaultPlotID', 'DisplacementPhase');
model.result('pg2').feature('glob1').set('expr', {});
model.result('pg2').feature('glob1').set('descr', {});
model.result('pg2').feature('glob1').set('expr', {'lms.Ms_uPhase'});
model.result('pg2').feature('glob1').set('descr', {'Displacement, phase (M1)' 'Displacement, phase (M2)' 'Displacement, phase (M3)' 'Displacement, phase (M4)' 'Displacement, phase (Ms)'});
model.result('pg2').feature('glob1').set('expr', {'lms.M1_uPhase' 'lms.M2_uPhase' 'lms.M3_uPhase' 'lms.M4_uPhase' 'lms.Ms_uPhase'});
model.result('pg2').feature('glob1').set('data', 'parent');
model.result('pg1').run;
model.result('pg1').set('data', 'dset2');
model.result('pg1').set('ylabel', 'Displacement (m)');
model.result('pg1').set('legendpos', 'upperleft');
model.result('pg1').run;
model.result('pg1').set('xlog', true);
model.result('pg2').run;
model.result('pg2').set('data', 'dset2');
model.result('pg2').set('ylabel', 'Phase (rad)');
model.result('pg2').set('legendpos', 'upperleft');
model.result('pg2').run;
model.result('pg2').set('xlog', true);
model.result('pg3').run;
model.result('pg3').set('data', 'dset2');
model.result('pg3').set('ylabel', 'Force (N)');
model.result('pg3').set('legendpos', 'upperleft');
model.result('pg3').run;
model.result('pg3').set('xlog', true);
model.result('pg4').run;
model.result('pg4').set('data', 'dset2');
model.result('pg4').set('ylabel', 'Phase (rad)');
model.result('pg4').set('legendpos', 'upperleft');
model.result('pg4').run;
model.result('pg4').set('xlog', true);
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').label('Transmissibility (M2)');
model.result('pg5').set('data', 'dset3');
model.result('pg5').set('titletype', 'label');
model.result('pg5').set('legendpos', 'upperleft');
model.result('pg5').create('glob1', 'Global');
model.result('pg5').feature('glob1').set('markerpos', 'datapoints');
model.result('pg5').feature('glob1').set('linewidth', 'preference');
model.result('pg5').feature('glob1').set('expr', {'lms.M2_uAmp'});
model.result('pg5').feature('glob1').set('descr', {'Displacement, amplitude (M2)'});
model.result('pg5').feature('glob1').set('unit', {'m'});
model.result('pg5').feature('glob1').setIndex('expr', 'comp1.lms.M2_uAmp/ub', 0);
model.result('pg5').feature('glob1').setIndex('unit', 1, 0);
model.result('pg5').feature('glob1').setIndex('descr', 'Transmissibility', 0);
model.result('pg5').feature('glob1').set('linemarker', 'cycle');
model.result('pg5').feature('glob1').set('markerpos', 'interp');
model.result('pg5').feature('glob1').set('autodescr', false);
model.result('pg5').run;
model.result('pg5').set('xlog', true);
model.result('pg1').run;

model.title('Lumped Model of a Human Body');

model.description('In this example, a lumped model of a human body having five degrees of freedom is analyzed. The model includes the shoe-ground interaction with the human body. The Mass, Spring, and Damper nodes of the Lumped Mechanical System interface are used to model the body including shoe and ground. First, an eigenfrequency study is performed to find out the natural frequencies of the system and then a frequency response analysis is performed to compute the system response for a specified base excitation.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;

model.label('lumped_human_body.mph');

model.modelNode.label('Components');

out = model;
