function out = model
%
% notched_beam_damage.m
%
% Model exported on May 26 2025, 21:31 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Nonlinear_Structural_Materials_Module/Damage');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/solid', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('depth', '50[mm]', 'Beam depth');
model.param.set('D0', '400[mm]', 'Base size parameter');
model.param.set('n', '2', 'Specimen parameter');
model.param.set('m', '0.2', 'Notch depth parameter');
model.param.set('Dn', 'D0/2^(n-1)', 'Specimen height');
model.param.set('am', 'm*Dn', 'Notch depth');
model.param.set('loadSurf', 'Dn/10', 'Width of BC surface');
model.param.set('eSize', 'Dn/30', 'Element size');
model.param.set('maxCMOD', '0.5[mm]/n', 'Maximum crack mouth opening displacement');
model.param.set('lscale', '10[mm]', 'Length scale');
model.param.set('para', '0', 'Loading parameter');

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', {'3.5*Dn' 'Dn'});
model.geom('geom1').feature('r1').set('base', 'center');
model.geom('geom1').feature('r1').set('pos', {'0' 'Dn/2'});
model.geom('geom1').feature('r1').set('layerleft', true);
model.geom('geom1').feature('r1').set('layerbottom', false);
model.geom('geom1').feature('r1').setIndex('layer', '0.5*Dn-loadSurf/2', 0);
model.geom('geom1').feature('r1').setIndex('layer', 'loadSurf', 1);
model.geom('geom1').feature('r1').setIndex('layer', '0.75*Dn-loadSurf/2', 2);
model.geom('geom1').feature('r1').setIndex('layer', '0.5*Dn-loadSurf/2', 3);
model.geom('geom1').feature('r1').setIndex('layer', 'loadSurf', 4);
model.geom('geom1').feature('r1').setIndex('layer', '0.5*Dn-loadSurf/2', 5);
model.geom('geom1').feature('r1').setIndex('layer', '0.75*Dn-loadSurf/2', 6);
model.geom('geom1').feature('r1').setIndex('layer', 'loadSurf', 7);
model.geom('geom1').run('r1');
model.geom('geom1').create('pch1', 'ParameterCheck');
model.geom('geom1').feature('pch1').set('condition', 'am<=0');
model.geom('geom1').feature('pch1').set('message', 'Notch size must be larger than zero');
model.geom('geom1').run('pch1');
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').set('size', {'eSize' 'am'});
model.geom('geom1').feature('r2').set('base', 'center');
model.geom('geom1').feature('r2').set('pos', {'0' 'am/2'});
model.geom('geom1').run('r2');
model.geom('geom1').create('dif1', 'Difference');
model.geom('geom1').feature('dif1').selection('input').set({'r1'});
model.geom('geom1').feature('dif1').selection('input2').set({'r2'});
model.geom('geom1').run('dif1');
model.geom('geom1').create('pol1', 'Polygon');
model.geom('geom1').feature('pol1').set('source', 'vectors');
model.geom('geom1').feature('pol1').set('x', '-Dn*1.75 Dn*1.75');
model.geom('geom1').feature('pol1').set('y', 'am am');
model.geom('geom1').runPre('fin');
model.geom('geom1').run('fin');
model.geom('geom1').create('mce1', 'MeshControlEdges');
model.geom('geom1').feature('mce1').selection('input').set('fin', [4 6 8 9 11 13 14 16 18 19 21 23 24 27 30 31 33 34 36 38 39 41 43 44 46 48 49]);
model.geom('geom1').feature('mce1').set('includevtx', false);
model.geom('geom1').run('mce1');
model.geom('geom1').create('mcv1', 'MeshControlVertices');
model.geom('geom1').feature('mcv1').selection('input').set('mce1', [2 5 6 8 9 10 11 12 13 14 20 21 23 24 25 27 28 30 31 33]);
model.geom('geom1').run('mcv1');

model.cpl.create('aveop1', 'Average', 'geom1');
model.cpl('aveop1').set('axisym', true);
model.cpl('aveop1').set('opname', 'CMOD_right');
model.cpl('aveop1').label('Crack Mouth Opening Displacement, Right');
model.cpl('aveop1').selection.geom('geom1', 0);
model.cpl('aveop1').selection.set([8]);
model.cpl.create('aveop2', 'Average', 'geom1');
model.cpl('aveop2').set('axisym', true);
model.cpl('aveop2').label('Crack Mouth Opening Displacement, Left');
model.cpl('aveop2').set('opname', 'CMOD_left');
model.cpl('aveop2').selection.geom('geom1', 0);
model.cpl('aveop2').selection.set([6]);

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').set('CMOD', 'CMOD_right(u)-CMOD_left(u)');
model.variable('var1').descr('CMOD', 'Crack mouth opening displacement');

model.physics('solid').prop('Type2D').set('Type2D', 'PlaneStress');
model.physics('solid').prop('d').set('d', 'depth');
model.physics('solid').feature('lemm1').create('dmg1', 'Damage', 2);
model.physics('solid').feature('lemm1').feature('dmg1').label('Damage: Crack Band');
model.physics('solid').feature('lemm1').feature.duplicate('dmg2', 'dmg1');
model.physics('solid').feature('lemm1').feature('dmg2').label('Damage: Implicit Gradient');
model.physics('solid').feature('lemm1').feature('dmg2').set('regType', 'impGradient');
model.physics('solid').feature('lemm1').feature('dmg2').set('lint', 'lscale');
model.physics('solid').feature('lemm1').feature('dmg2').set('hdmg', '3*lscale');
model.physics('solid').create('rig1', 'RigidConnector', 1);
model.physics('solid').feature('rig1').selection.set([4]);
model.physics('solid').feature('rig1').setIndex('Direction', true, 0);
model.physics('solid').feature('rig1').setIndex('Direction', true, 1);
model.physics('solid').create('rig2', 'RigidConnector', 1);
model.physics('solid').feature('rig2').selection.set([12]);
model.physics('solid').feature('rig2').setIndex('Direction', true, 1);
model.physics('solid').create('bndl1', 'BoundaryLoad', 1);
model.physics('solid').feature('bndl1').selection.set([6]);
model.physics('solid').feature('bndl1').set('LoadType', 'TotalForce');
model.physics('solid').feature('bndl1').set('Ftot', {'0' '-load' '0'});
model.physics('solid').create('ge1', 'GlobalEquations', -1);
model.physics('solid').feature('ge1').label('Load Control');
model.physics('solid').feature('ge1').setIndex('name', 'load', 0, 0);
model.physics('solid').feature('ge1').setIndex('equation', 'CMOD-para*maxCMOD', 0, 0);
model.physics('solid').feature('ge1').set('DependentVariableQuantity', 'force');
model.physics('solid').feature('ge1').set('SourceTermQuantity', 'displacement');
model.physics('solid').create('disc1', 'Discretization', -1);
model.physics('solid').feature('disc1').label('Discretization, Linear');
model.physics('solid').feature('disc1').set('order_displacement', 1);

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat1').propertyGroup('Enu').set('E', {'37[GPa]'});
model.material('mat1').propertyGroup('Enu').set('nu', {'0.21'});
model.material('mat1').propertyGroup('def').set('density', {'2400'});
model.material('mat1').propertyGroup.create('ScalarDamage', 'Scalar_damage');
model.material('mat1').propertyGroup('ScalarDamage').set('sigmap', {'3.9[MPa]'});
model.material('mat1').propertyGroup('ScalarDamage').set('Gf', {'85'});

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('size').set('custom', true);
model.mesh('mesh1').feature('size').set('hmax', 'eSize');
model.mesh('mesh1').feature('map1').set('smoothcontrol', false);
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 4);
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([2 13]);
model.mesh('mesh1').feature('map1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis2').set('numelem', 2);
model.mesh('mesh1').feature('map1').feature('dis2').selection.set([4 12]);
model.mesh('mesh1').feature('map1').create('dis3', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis3').set('numelem', 10);
model.mesh('mesh1').feature('map1').feature('dis3').selection.set([10 20]);
model.mesh('mesh1').run;

model.study('std1').feature('stat').set('useadvanceddisable', true);
model.study('std1').feature('stat').set('disabledphysics', {'solid/lemm1/dmg2'});
model.study('std1').feature('stat').setEntry('discretization', 'solid', 'disc1');
model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 'depth', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'm', 0);
model.study('std1').feature('stat').setIndex('pname', 'depth', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 'm', 0);
model.study('std1').feature('stat').setIndex('pname', 'para', 0);
model.study('std1').feature('stat').setIndex('plistarr', 'range(0,0.025,1)', 0);
model.study('std1').label('Study: Crack Band');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_rot').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_wZ').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_disp').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_rot').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_disp').set('scaleval', '0.007280109889280521');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_rot').set('scaleval', '0.01');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.728010988928052');
model.sol('sol1').feature('v1').feature('comp1_solid_wZ').set('scaleval', '1e-2');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s1').set('control', 'stat');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'const');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 8);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'const');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 8);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 41, 0);
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('surf1').set('threshold', 'manual');
model.result('pg1').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg1').feature('surf1').set('colortable', 'Rainbow');
model.result('pg1').feature('surf1').set('colortabletrans', 'none');
model.result('pg1').feature('surf1').set('colorscalemode', 'linear');
model.result('pg1').feature('surf1').set('resolution', 'normal');
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg1').feature('surf1').feature('def').set('expr', {'u' 'v'});
model.result('pg1').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg1').run;
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 41, 0);
model.result('pg2').label('Damage (solid)');
model.result('pg2').set('defaultPlotID', 'damage');
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'solid.dmgGp'});
model.result('pg2').feature('surf1').set('inheritplot', 'none');
model.result('pg2').feature('surf1').set('resolution', 'normal');
model.result('pg2').feature('surf1').set('colortabletype', 'discrete');
model.result('pg2').feature('surf1').set('bandcount', 11);
model.result('pg2').feature('surf1').set('colortable', 'RainbowLight');
model.result('pg2').feature('surf1').set('smooth', 'none');
model.result('pg2').feature('surf1').set('descractive', true);
model.result('pg2').feature('surf1').set('descr', 'Damage');
model.result('pg2').label('Damage (solid)');
model.result('pg2').run;
model.result('pg2').label('Damage, Crack Band');
model.result('pg2').set('titletype', 'label');
model.result('pg2').set('edges', false);
model.result('pg2').run;
model.result('pg2').feature('surf1').create('def1', 'Deform');
model.result('pg2').run;
model.result('pg2').feature('surf1').feature('def1').set('scaleactive', true);
model.result('pg2').feature('surf1').feature('def1').set('scale', 100);
model.result('pg2').run;
model.result('pg2').create('mesh1', 'Mesh');
model.result('pg2').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg2').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg2').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg2').feature('mesh1').set('elemcolor', 'none');
model.result('pg2').feature('mesh1').set('inheritplot', 'surf1');
model.result('pg2').feature('mesh1').create('def1', 'Deform');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg1').run;
model.result.duplicate('pg3', 'pg1');
model.result('pg3').run;
model.result('pg3').label('Strain, Crack Band');
model.result('pg3').set('titletype', 'label');
model.result('pg3').set('edges', false);
model.result('pg3').run;
model.result('pg3').feature('surf1').set('expr', 'solid.kappadmgGp');
model.result('pg3').feature('surf1').set('descr', 'Maximum value of equivalent strain');
model.result('pg3').feature('surf1').set('resolution', 'norefine');
model.result('pg3').feature('surf1').set('smooth', 'none');
model.result('pg3').run;
model.result('pg3').create('mesh1', 'Mesh');
model.result('pg3').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg3').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg3').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg3').feature('mesh1').set('elemcolor', 'none');
model.result('pg3').feature('mesh1').set('inheritplot', 'surf1');
model.result('pg3').feature('mesh1').create('def1', 'Deform');
model.result('pg3').run;
model.result('pg3').run;

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/solid', true);
model.study('std2').feature('stat').set('useparam', true);
model.study('std2').feature('stat').setIndex('pname', 'depth', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 'm', 0);
model.study('std2').feature('stat').setIndex('pname', 'depth', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 'm', 0);
model.study('std2').feature('stat').setIndex('pname', 'para', 0);
model.study('std2').feature('stat').setIndex('plistarr', 'range(0,0.025,1)', 0);
model.study('std2').label('Study: Implicit Gradient');
model.study('std2').setGenPlots(false);

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_solid_eeqnl').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_disp').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_rot').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_wZ').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_disp').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_rot').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_solid_eeqnl').set('scaleval', '1e-3');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_disp').set('scaleval', '0.007280109889280521');
model.sol('sol2').feature('v1').feature('comp1_solid_rig_rot').set('scaleval', '0.01');
model.sol('sol2').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.728010988928052');
model.sol('sol2').feature('v1').feature('comp1_solid_wZ').set('scaleval', '1e-2');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('p1', 'Parametric');
model.sol('sol2').feature('s1').feature.remove('pDef');
model.sol('sol2').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol2').feature('s1').set('control', 'stat');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('dtech', 'const');
model.sol('sol2').feature('s1').feature('fc1').set('maxiter', 8);
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol2').feature('s1').feature('fc1').set('dtech', 'const');
model.sol('sol2').feature('s1').feature('fc1').set('maxiter', 8);
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result('pg2').run;
model.result.duplicate('pg4', 'pg2');
model.result.duplicate('pg5', 'pg3');
model.result('pg4').run;
model.result('pg4').label('Damage, Implicit Gradient');
model.result('pg4').set('data', 'dset2');
model.result('pg4').run;
model.result('pg5').run;
model.result('pg5').label('Strain, Implicit Gradient');
model.result('pg5').run;
model.result('pg5').set('data', 'dset2');
model.result('pg5').run;
model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').run;
model.result('pg6').label('Load vs. Deflection');
model.result('pg6').create('glob1', 'Global');
model.result('pg6').feature('glob1').set('markerpos', 'datapoints');
model.result('pg6').feature('glob1').set('linewidth', 'preference');
model.result('pg6').feature('glob1').setIndex('expr', 'load', 0);
model.result('pg6').feature('glob1').setIndex('unit', 'kN', 0);
model.result('pg6').feature('glob1').set('xdata', 'expr');
model.result('pg6').feature('glob1').set('xdataexpr', '-CMOD_left(v)');
model.result('pg6').feature('glob1').set('xdataunit', 'mm');
model.result('pg6').feature('glob1').set('legendmethod', 'manual');
model.result('pg6').feature('glob1').setIndex('legends', 'Crack Band', 0);
model.result('pg6').feature('glob1').set('linewidth', 2);
model.result('pg6').run;
model.result('pg6').feature.duplicate('glob2', 'glob1');
model.result('pg6').run;
model.result('pg6').feature('glob2').set('data', 'dset2');
model.result('pg6').feature('glob2').setIndex('legends', 'Implicit Gradient', 0);
model.result('pg6').run;
model.result('pg6').run;
model.result('pg6').set('titletype', 'none');
model.result('pg6').set('xlabelactive', true);
model.result('pg6').set('xlabel', 'Deflection (mm)');
model.result('pg6').set('ylabelactive', true);
model.result('pg6').set('ylabel', 'Load (kN)');
model.result('pg6').run;
model.result.duplicate('pg7', 'pg6');
model.result('pg7').run;
model.result('pg7').label('Load vs. CMOD');
model.result('pg7').set('xlabel', 'CMOD (mm)');
model.result('pg7').run;
model.result('pg7').feature('glob1').set('xdataexpr', 'CMOD');
model.result('pg7').run;
model.result('pg7').feature('glob2').set('xdataexpr', 'CMOD');
model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').importData('notched_beam_damage_measured.txt');
model.result.create('pg8', 'PlotGroup1D');
model.result('pg8').set('data', 'none');
model.result('pg8').create('tblp1', 'Table');
model.result('pg8').feature('tblp1').set('source', 'table');
model.result('pg8').feature('tblp1').set('table', 'tbl1');
model.result('pg8').feature('tblp1').set('linewidth', 'preference');
model.result('pg8').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg8').run;
model.result('pg7').run;
model.result('pg7').feature.copy('tblp1', 'pg8/tblp1');
model.result('pg7').run;
model.result('pg7').feature('tblp1').set('linestyle', 'none');
model.result('pg7').feature('tblp1').set('linemarker', 'circle');
model.result('pg7').feature('tblp1').set('legend', true);
model.result('pg7').feature('tblp1').set('legendmethod', 'manual');
model.result('pg7').feature('tblp1').setIndex('legends', 'Measured data', 0);
model.result('pg7').run;
model.result('pg8').run;
model.result.remove('pg8');
model.result.dataset.create('cpt1', 'CutPoint2D');
model.result.dataset('cpt1').label('Cut Points, Study 1');
model.result.dataset('cpt1').set('pointx', 0);
model.result.dataset('cpt1').set('pointy', '{3*eSize/2 13*eSize/2 23*eSize/2 33*eSize/2}+am');
model.result.dataset.duplicate('cpt2', 'cpt1');
model.result.dataset('cpt2').label('Cut Points, Study 2');
model.result.dataset('cpt2').set('data', 'dset2');
model.result.create('pg8', 'PlotGroup1D');
model.result('pg8').run;
model.result('pg8').label('Damaged Stress vs. Strain');
model.result('pg8').create('ptgr1', 'PointGraph');
model.result('pg8').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg8').feature('ptgr1').set('linewidth', 'preference');
model.result('pg8').feature('ptgr1').set('data', 'cpt1');
model.result('pg8').feature('ptgr1').set('expr', 'solid.sdGpxx');
model.result('pg8').feature('ptgr1').set('descr', 'Stress tensor, damaged, xx-component');
model.result('pg8').feature('ptgr1').set('unit', 'MPa');
model.result('pg8').feature('ptgr1').set('xdata', 'expr');
model.result('pg8').feature('ptgr1').set('xdataexpr', 'solid.eXX');
model.result('pg8').feature('ptgr1').set('xdatadescr', 'Strain tensor, XX-component');
model.result('pg8').feature('ptgr1').set('linewidth', 2);
model.result('pg8').feature('ptgr1').set('linemarker', 'circle');
model.result('pg8').feature('ptgr1').set('markerpos', 'interp');
model.result('pg8').feature('ptgr1').set('legend', true);
model.result('pg8').feature('ptgr1').set('legendprefix', 'Crack Band ');
model.result('pg8').run;
model.result('pg8').feature.duplicate('ptgr2', 'ptgr1');
model.result('pg8').run;
model.result('pg8').feature('ptgr2').set('data', 'cpt2');
model.result('pg8').feature('ptgr2').set('legendprefix', 'Implicit Gradient ');
model.result('pg8').feature('ptgr2').set('linecolor', 'cyclereset');
model.result('pg8').feature('ptgr2').set('linemarker', 'plus');
model.result('pg8').run;
model.result('pg8').set('titletype', 'none');
model.result('pg5').run;

model.title('Cracking of a Notched Beam');

model.description(['In this example, two models for brittle damage are used to evaluate the fracture of a notched concrete beam subjected to three point bending.' newline  newline 'The results are compared with experimental data.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('notched_beam_damage.mph');

model.modelNode.label('Components');

out = model;
