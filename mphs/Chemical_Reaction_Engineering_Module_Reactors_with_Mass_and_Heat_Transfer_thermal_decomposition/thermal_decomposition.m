function out = model
%
% thermal_decomposition.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Chemical_Reaction_Engineering_Module/Reactors_with_Mass_and_Heat_Transfer');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('spf', 'LaminarFlow', 'geom1');
model.physics('spf').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/spf', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('H1', '1[cm]', 'Reactor height');
model.param.set('W1', '12[cm]', 'Reactor length');
model.param.set('H2', '3[mm]', 'Step height');
model.param.set('W2', '3[cm]', 'Step length');
model.param.set('R1', '2[mm]', 'Cylinder radius');
model.param.set('xpos', '6[cm]', 'Cylinder x-coordinate');
model.param.set('ypos', '5[mm]', 'Cylinder y-coordinate');
model.param.set('v_inlet', '5e-4[m/s]', 'Inflow velocity');
model.param.set('DA', '2e-9[m^2/s]', 'Diffusion coefficient, A');
model.param.set('E', '72[kJ/mol]', 'Activation energy');
model.param.set('H', '-100[kJ/mol]', 'Heat of reaction');
model.param.set('A', '1e10[1/s]', 'Frequency factor');
model.param.set('cA_inlet', '1000[mol/m^3]', 'Inlet concentration, A');
model.param.set('c_solv', '(998[kg/m^3]-cA_inlet*Mn_A)/Mn_solv', 'Concentration, solvent (water)');
model.param.set('Mn_A', '0.034[kg/mol]', 'Molar mass, A');
model.param.set('Mn_F', '0.025[kg/mol]', 'Average molar mass, F');
model.param.set('Mn_solv', '0.018[kg/mol]', 'Molar mass, solvent (water)');
model.param.set('T_inlet', '300[K]', 'Temperature, inlet');
model.param.set('T_cyl', '325[K]', 'Temperature, heating cylinder');

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', {'W1' 'H1'});
model.geom('geom1').run('r1');
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').set('size', {'W2' 'H2'});
model.geom('geom1').run('r2');
model.geom('geom1').create('c1', 'Circle');
model.geom('geom1').feature('c1').set('r', 'R1');
model.geom('geom1').feature('c1').set('pos', {'xpos' 'ypos'});
model.geom('geom1').run('c1');
model.geom('geom1').create('ls1', 'LineSegment');
model.geom('geom1').feature('ls1').selection('vertex1').set('c1', 3);
model.geom('geom1').feature('ls1').set('specify2', 'coord');
model.geom('geom1').feature('ls1').set('coord2', {'xpos+10*R1' 'ypos'});
model.geom('geom1').run('ls1');
model.geom('geom1').create('dif1', 'Difference');
model.geom('geom1').feature('dif1').selection('input').set({'r1'});
model.geom('geom1').feature('dif1').selection('input2').set({'c1' 'r2'});
model.geom('geom1').run('dif1');
model.geom('geom1').run('fin');
model.geom('geom1').create('mce1', 'MeshControlEdges');
model.geom('geom1').feature('mce1').selection('input').set('fin', 6);
model.geom('geom1').run('mce1');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('rho', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('cs', 'Interpolation');
model.material('mat1').propertyGroup('def').func.create('an1', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an2', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an3', 'Analytic');
model.material('mat1').label('Water');
model.material('mat1').set('family', 'water');
model.material('mat1').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('eta').set('pieces', {'273.15' '413.15' '1.3799566804-0.021224019151*T^1+1.3604562827E-4*T^2-4.6454090319E-7*T^3+8.9042735735E-10*T^4-9.0790692686E-13*T^5+3.8457331488E-16*T^6'; '413.15' '553.75' '0.00401235783-2.10746715E-5*T^1+3.85772275E-8*T^2-2.39730284E-11*T^3'});
model.material('mat1').propertyGroup('def').func('eta').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('Cp').set('pieces', {'273.15' '553.75' '12010.1471-80.4072879*T^1+0.309866854*T^2-5.38186884E-4*T^3+3.62536437E-7*T^4'});
model.material('mat1').propertyGroup('def').func('Cp').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('def').func('rho').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('rho').set('smooth', 'contd1');
model.material('mat1').propertyGroup('def').func('rho').set('pieces', {'273.15' '293.15' '0.000063092789034*T^3-0.060367639882855*T^2+18.9229382407066*T-950.704055329848'; '293.15' '373.15' '0.000010335053319*T^3-0.013395065634452*T^2+4.969288832655160*T+432.257114008512'});
model.material('mat1').propertyGroup('def').func('rho').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.material('mat1').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('k').set('pieces', {'273.15' '553.75' '-0.869083936+0.00894880345*T^1-1.58366345E-5*T^2+7.97543259E-9*T^3'});
model.material('mat1').propertyGroup('def').func('k').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.material('mat1').propertyGroup('def').func('cs').set('table', {'273' '1403';  ...
'278' '1427';  ...
'283' '1447';  ...
'293' '1481';  ...
'303' '1507';  ...
'313' '1526';  ...
'323' '1541';  ...
'333' '1552';  ...
'343' '1555';  ...
'353' '1555';  ...
'363' '1550';  ...
'373' '1543'});
model.material('mat1').propertyGroup('def').func('cs').set('interp', 'piecewisecubic');
model.material('mat1').propertyGroup('def').func('cs').set('fununit', {'m/s'});
model.material('mat1').propertyGroup('def').func('cs').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an1').label('Analytic ');
model.material('mat1').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.material('mat1').propertyGroup('def').func('an1').set('expr', '-1/rho(T)*d(rho(T),T)');
model.material('mat1').propertyGroup('def').func('an1').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('an1').set('fununit', '1/K');
model.material('mat1').propertyGroup('def').func('an1').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an1').set('plotfixedvalue', {'273.15'});
model.material('mat1').propertyGroup('def').func('an1').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an2').set('funcname', 'gamma_w');
model.material('mat1').propertyGroup('def').func('an2').set('expr', '1+(T/Cp(T))*(alpha_p(T)*cs(T))^2');
model.material('mat1').propertyGroup('def').func('an2').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('an2').set('fununit', '1');
model.material('mat1').propertyGroup('def').func('an2').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an2').set('plotfixedvalue', {'273.15'});
model.material('mat1').propertyGroup('def').func('an2').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an3').set('funcname', 'muB');
model.material('mat1').propertyGroup('def').func('an3').set('expr', '2.79*eta(T)');
model.material('mat1').propertyGroup('def').func('an3').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('an3').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('an3').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an3').set('plotfixedvalue', {'273.15'});
model.material('mat1').propertyGroup('def').func('an3').set('plotargs', {'T' '273.15' '553.75'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.material('mat1').propertyGroup('def').set('bulkviscosity', '');
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(T)' '0' '0' '0' 'alpha_p(T)' '0' '0' '0' 'alpha_p(T)'});
model.material('mat1').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.material('mat1').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.material('mat1').propertyGroup('def').set('ratioofspecificheat', 'gamma_w(T)');
model.material('mat1').propertyGroup('def').set('electricconductivity', {'5.5e-6[S/m]' '0' '0' '0' '5.5e-6[S/m]' '0' '0' '0' '5.5e-6[S/m]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.material('mat1').propertyGroup('def').set('density', 'rho(T)');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.material('mat1').propertyGroup('def').set('soundspeed', 'cs(T)');
model.material('mat1').propertyGroup('def').addInput('temperature');

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');
model.selection('sel1').label('Inlet');
model.selection('sel1').geom(1);
model.selection('sel1').set([1]);
model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').label('Outlet');
model.selection('sel2').geom(1);
model.selection('sel2').set([6]);
model.selection.create('sel3', 'Explicit');
model.selection('sel3').model('comp1');
model.selection('sel3').label('Heater');
model.selection('sel3').geom(1);
model.selection('sel3').set([7 8 9]);

model.physics('spf').prop('PhysicalModelProperty').set('Compressibility', 'WeaklyCompressible');
model.physics('spf').create('inl1', 'InletBoundary', 1);
model.physics('spf').feature('inl1').selection.named('sel1');
model.physics('spf').feature('inl1').set('BoundaryCondition', 'FullyDevelopedFlow');
model.physics('spf').feature('inl1').set('Uavfdf', 'v_inlet');
model.physics('spf').create('out1', 'OutletBoundary', 1);
model.physics('spf').feature('out1').selection.named('sel2');
model.physics('spf').feature('out1').set('NormalFlow', true);

model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('size').set('custom', true);
model.mesh('mesh1').feature('size').set('hgrad', 1.1);
model.mesh('mesh1').feature('size1').selection.set([2 3 4 5 7 8 9 10 11]);
model.mesh('mesh1').feature('bl1').feature.duplicate('blp2', 'blp1');
model.mesh('mesh1').feature('bl1').feature('blp2').selection.named('sel3');
model.mesh('mesh1').feature('bl1').feature('blp2').set('blnlayers', 4);
model.mesh('mesh1').feature('bl1').feature('blp2').set('blhminfact', 3);
model.mesh('mesh1').run;

model.study('std1').label('Study 1 - Isothermal Flow');

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-4);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.dataset('dset1').set('geom', 'geom1');
model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').label('Velocity (spf)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').set('data', 'dset1');
model.result('pg1').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg1');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').label('Surface');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('smooth', 'internal');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').label('Pressure (spf)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('data', 'dset1');
model.result('pg2').set('defaultPlotID', 'ResultDefaults_SinglePhaseFlow/icom1/pdef1/pcond1/pg2');
model.result('pg2').feature.create('con1', 'Contour');
model.result('pg2').feature('con1').label('Contour');
model.result('pg2').feature('con1').set('showsolutionparams', 'on');
model.result('pg2').feature('con1').set('expr', 'p');
model.result('pg2').feature('con1').set('number', 40);
model.result('pg2').feature('con1').set('levelrounding', false);
model.result('pg2').feature('con1').set('smooth', 'internal');
model.result('pg2').feature('con1').set('showsolutionparams', 'on');
model.result('pg2').feature('con1').set('data', 'parent');
model.result('pg1').run;
model.result('pg1').label('Flow Field');
model.result('pg1').run;
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').create('arws1', 'ArrowSurface');
model.result('pg1').feature('arws1').set('ynumber', 11);
model.result('pg1').feature('arws1').set('color', 'custom');
model.result('pg1').feature('arws1').set('customcolor', [0.4745098054409027 0.08627451211214066 0.23137255012989044]);
model.result('pg1').feature('arws1').set('scaleactive', true);
model.result('pg1').feature('arws1').set('scale', 5);
model.result('pg1').run;

model.physics.create('ht', 'HeatTransferInFluids', 'geom1');
model.physics('ht').model('comp1');

model.study('std1').feature('stat').setSolveFor('/physics/ht', false);

model.physics('ht').label('Heat Transfer in Fluids (Study 2)');
model.physics('ht').create('temp1', 'TemperatureBoundary', 1);
model.physics('ht').feature('temp1').selection.named('sel1');
model.physics('ht').feature('temp1').set('T0', 'T_inlet');
model.physics('ht').create('temp2', 'TemperatureBoundary', 1);
model.physics('ht').feature('temp2').selection.named('sel3');
model.physics('ht').feature('temp2').set('T0', 'T_cyl');
model.physics('ht').create('ofl1', 'ConvectiveOutflow', 1);
model.physics('ht').feature('ofl1').selection.named('sel2');

model.multiphysics.create('nitf1', 'NonIsothermalFlow', 'geom1', 2);
model.multiphysics('nitf1').label('Nonisothermal Flow (Study 2)');

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/spf', true);
model.study('std2').feature('stat').setSolveFor('/physics/ht', true);
model.study('std2').feature('stat').setSolveFor('/multiphysics/nitf1', true);
model.study('std2').feature('stat').set('useinitsol', true);
model.study('std2').feature('stat').set('initstudy', 'std1');

model.physics('spf').create('init2', 'init', 2);
model.physics('spf').feature('init2').selection.all;
model.physics('spf').feature('init2').set('u_init', {'u' 'v' '0'});
model.physics('spf').feature('init2').set('p_init', 'p');

model.study('std2').label('Nonisothermal Flow');
model.study('std2').setGenPlots(false);

model.sol.create('sol2');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('seDef', 'Segregated');
model.sol('sol2').feature('s1').create('se1', 'Segregated');
model.sol('sol2').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol2').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_p' 'comp1_u' 'comp1_spf_inl1_Pinlfdf'});
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('subdamp', 0.5);
model.sol('sol2').feature('s1').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s1').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol2').feature('s1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol2').feature('s1').feature('se1').feature('ss1').label('Velocity u, Pressure p');
model.sol('sol2').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol2').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_T'});
model.sol('sol2').feature('s1').feature('se1').feature('ss2').set('subdamp', 0.5);
model.sol('sol2').feature('s1').create('d2', 'Direct');
model.sol('sol2').feature('s1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s1').feature('d2').label('Direct, heat transfer variables (ht)');
model.sol('sol2').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol2').feature('s1').feature('se1').feature('ss2').label('Temperature');
model.sol('sol2').feature('s1').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol2').feature('s1').feature('se1').set('subinitcfl', 5);
model.sol('sol2').feature('s1').feature('se1').set('submincfl', 10000);
model.sol('sol2').feature('s1').feature('se1').set('subkppid', 0.65);
model.sol('sol2').feature('s1').feature('se1').set('subkdpid', 0.15);
model.sol('sol2').feature('s1').feature('se1').set('subkipid', 0.15);
model.sol('sol2').feature('s1').feature('se1').set('subcfltol', 0.1);
model.sol('sol2').feature('s1').feature('se1').set('segcflaa', true);
model.sol('sol2').feature('s1').feature('se1').set('segcflaacfl', 9000);
model.sol('sol2').feature('s1').feature('se1').set('segcflaafact', 1);
model.sol('sol2').feature('s1').feature('se1').set('maxsegiter', 200);
model.sol('sol2').feature('s1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol2').feature('s1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.T 0 ');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol2').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol2').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol2').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol2').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol2').feature('s1').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s1').create('i2', 'Iterative');
model.sol('sol2').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol2').feature('s1').feature('i2').set('prefuntype', 'left');
model.sol('sol2').feature('s1').feature('i2').set('itrestart', 50);
model.sol('sol2').feature('s1').feature('i2').set('rhob', 20);
model.sol('sol2').feature('s1').feature('i2').set('maxlinit', 10000);
model.sol('sol2').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol2').feature('s1').feature('i2').label('AMG, heat transfer variables (ht)');
model.sol('sol2').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol2').feature('s1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol2').feature('s1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('s1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('s1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol2').feature('s1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').feature('s1').feature.remove('seDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').run;
model.result('pg3').set('data', 'dset2');
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', 'T');
model.result('pg3').feature('surf1').set('descr', 'Temperature');
model.result('pg3').feature('surf1').set('colortable', 'HeatCamera');
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').label('Temperature');

model.physics.create('chem', 'Chemistry', 'geom1');
model.physics('chem').model('comp1');

model.study('std1').feature('stat').setSolveFor('/physics/chem', false);
model.study('std2').feature('stat').setSolveFor('/physics/chem', false);

model.physics.create('tds', 'DilutedSpecies', 'geom1', {'cA'});

model.study('std1').feature('stat').setSolveFor('/physics/tds', false);
model.study('std2').feature('stat').setSolveFor('/physics/tds', false);

model.physics('chem').prop('TPFeatureInput').set('T_src', 'root.comp1.T');
model.physics('chem').prop('mixture').set('mixture', 'liquid');
model.physics('chem').create('rch1', 'ReactionChem', 2);
model.physics('chem').feature('rch1').set('formula', 'A=>F');
model.physics('chem').feature('rch1').set('useArrhenius', true);
model.physics('chem').feature('rch1').set('Af', 'A');
model.physics('chem').feature('rch1').set('Ef', 'E');
model.physics('chem').feature('rch1').set('ReactionEnthalpy', 'UserDefined');
model.physics('chem').feature('rch1').set('H', 'H');
model.physics('chem').feature('A').set('M', 'Mn_A');
model.physics('chem').feature('F').set('M', 'Mn_F');
model.physics('chem').feature('F').set('cLock', true);
model.physics('chem').create('spec1', 'SpeciesChem', 2);
model.physics('chem').feature('spec1').set('specName', 'H2O');
model.physics('chem').feature('H2O').set('sType', 'solvent');
model.physics('chem').feature('H2O').set('M', 'Mn_solv');
model.physics('chem').prop('ChemistryModelInputParameter').set('MassTransfer', 'tds');
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'cA', 0, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationInput', 'UserDefined', 2, 0);
model.physics('chem').prop('ChemistryModelInputParameter').setIndex('ConcentrationValue', 'c_solv', 2, 0);
model.physics('tds').feature('cdm1').set('D_cA', {'DA' '0' '0' '0' 'DA' '0' '0' '0' 'DA'});
model.physics('tds').create('in1', 'Inflow', 1);
model.physics('tds').feature('in1').selection.named('sel1');
model.physics('tds').feature('in1').setIndex('c0', 'cA_inlet', 0);
model.physics('tds').create('out1', 'Outflow', 1);
model.physics('tds').feature('out1').selection.named('sel2');
model.physics('tds').create('reac1', 'Reactions', 2);
model.physics('tds').feature('reac1').selection.set([1]);
model.physics('tds').feature('reac1').setIndex('R_cA_src', 'root.comp1.chem.R_A', 0);
model.physics('ht').create('hs1', 'HeatSource', 2);
model.physics('ht').feature('hs1').selection.set([1]);
model.physics('ht').feature('hs1').set('Q0_src', 'root.comp1.chem.Qtot');

model.multiphysics.create('rfd1', 'ReactingFlowDS', 'geom1', 2);

model.study.create('std3');
model.study('std3').create('stat', 'Stationary');
model.study('std3').feature('stat').setSolveFor('/physics/spf', true);
model.study('std3').feature('stat').setSolveFor('/physics/ht', true);
model.study('std3').feature('stat').setSolveFor('/physics/chem', true);
model.study('std3').feature('stat').setSolveFor('/physics/tds', true);
model.study('std3').feature('stat').setSolveFor('/multiphysics/nitf1', true);
model.study('std3').feature('stat').setSolveFor('/multiphysics/rfd1', true);
model.study('std3').feature('stat').set('useinitsol', true);
model.study('std3').feature('stat').set('initmethod', 'sol');
model.study('std3').feature('stat').set('initstudy', 'std2');
model.study('std3').label('Fully Coupled');
model.study('std3').setGenPlots(false);

model.sol.create('sol3');

model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);
model.mesh('mesh1').stat.selection.geom(2);
model.mesh('mesh1').stat.selection.set([1]);

model.sol('sol3').study('std3');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std3');
model.sol('sol3').feature('st1').set('studystep', 'stat');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').set('control', 'stat');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').set('stol', 0.001);
model.sol('sol3').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('s1').create('seDef', 'Segregated');
model.sol('sol3').feature('s1').create('se1', 'Segregated');
model.sol('sol3').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol3').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_p' 'comp1_u' 'comp1_spf_inl1_Pinlfdf'});
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('subdamp', 0.5);
model.sol('sol3').feature('s1').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s1').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol3').feature('s1').feature('se1').feature('ss1').label('Velocity u, Pressure p');
model.sol('sol3').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol3').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_T'});
model.sol('sol3').feature('s1').feature('se1').feature('ss2').set('subdamp', 0.5);
model.sol('sol3').feature('s1').create('d2', 'Direct');
model.sol('sol3').feature('s1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s1').feature('d2').label('Direct, heat transfer variables (ht)');
model.sol('sol3').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol3').feature('s1').feature('se1').feature('ss2').label('Temperature');
model.sol('sol3').feature('s1').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol3').feature('s1').feature('se1').feature('ss3').set('segvar', {'comp1_cA'});
model.sol('sol3').feature('s1').feature('se1').feature('ss3').set('subdamp', 0.35);
model.sol('sol3').feature('s1').feature('se1').feature('ss3').set('subtermconst', 'itertol');
model.sol('sol3').feature('s1').feature('se1').feature('ss3').set('subntolfact', 1);
model.sol('sol3').feature('s1').feature('se1').feature('ss3').set('subiter', 3);
model.sol('sol3').feature('s1').create('d3', 'Direct');
model.sol('sol3').feature('s1').feature('d3').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('d3').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s1').feature('d3').label('Direct, concentrations (tds)');
model.sol('sol3').feature('s1').feature('se1').feature('ss3').set('linsolver', 'd3');
model.sol('sol3').feature('s1').feature('se1').feature('ss3').label('Concentration CA');
model.sol('sol3').feature('s1').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol3').feature('s1').feature('se1').set('subinitcfl', 5);
model.sol('sol3').feature('s1').feature('se1').set('submincfl', 10000);
model.sol('sol3').feature('s1').feature('se1').set('subkppid', 0.65);
model.sol('sol3').feature('s1').feature('se1').set('subkdpid', 0.15);
model.sol('sol3').feature('s1').feature('se1').set('subkipid', 0.15);
model.sol('sol3').feature('s1').feature('se1').set('subcfltol', 0.1);
model.sol('sol3').feature('s1').feature('se1').set('segcflaa', true);
model.sol('sol3').feature('s1').feature('se1').set('segcflaacfl', 9000);
model.sol('sol3').feature('s1').feature('se1').set('segcflaafact', 1);
model.sol('sol3').feature('s1').feature('se1').set('maxsegiter', 200);
model.sol('sol3').feature('s1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol3').feature('s1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.T 0 ');
model.sol('sol3').feature('s1').create('i1', 'Iterative');
model.sol('sol3').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol3').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol3').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol3').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol3').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol3').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol3').feature('s1').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol3').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s1').create('i2', 'Iterative');
model.sol('sol3').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol3').feature('s1').feature('i2').set('prefuntype', 'left');
model.sol('sol3').feature('s1').feature('i2').set('itrestart', 50);
model.sol('sol3').feature('s1').feature('i2').set('rhob', 20);
model.sol('sol3').feature('s1').feature('i2').set('maxlinit', 10000);
model.sol('sol3').feature('s1').feature('i2').set('nlinnormuse', 'on');
model.sol('sol3').feature('s1').feature('i2').label('AMG, heat transfer variables (ht)');
model.sol('sol3').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s1').create('i3', 'Iterative');
model.sol('sol3').feature('s1').feature('i3').set('linsolver', 'gmres');
model.sol('sol3').feature('s1').feature('i3').set('prefuntype', 'left');
model.sol('sol3').feature('s1').feature('i3').set('itrestart', 50);
model.sol('sol3').feature('s1').feature('i3').set('rhob', 400);
model.sol('sol3').feature('s1').feature('i3').set('maxlinit', 1000);
model.sol('sol3').feature('s1').feature('i3').set('nlinnormuse', 'on');
model.sol('sol3').feature('s1').feature('i3').label('AMG, concentrations (tds)');
model.sol('sol3').feature('s1').feature('i3').create('mg1', 'Multigrid');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').set('prefun', 'saamg');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').set('mgcycle', 'v');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol3').feature('s1').feature('i3').feature('mg1').set('strconn', 0.01);
model.sol('sol3').feature('s1').feature('i3').feature('mg1').set('nullspace', 'constant');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').set('usesmooth', false);
model.sol('sol3').feature('s1').feature('i3').feature('mg1').set('saamgcompwise', true);
model.sol('sol3').feature('s1').feature('i3').feature('mg1').set('loweramg', true);
model.sol('sol3').feature('s1').feature('i3').feature('mg1').set('compactaggregation', false);
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'coupled');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('po').feature('sl1').set('linemethod', 'coupled');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol('sol3').feature('s1').feature.remove('seDef');
model.sol('sol3').attach('std3');
model.sol('sol3').runAll;

model.result('pg3').run;
model.result('pg3').set('data', 'dset3');
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').run;
model.result('pg4').set('data', 'dset3');
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', 'cA');
model.result('pg4').feature('surf1').set('descr', 'Concentration');
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').label('Concentration');
model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').run;
model.result('pg5').set('data', 'dset3');
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', 'tds.R_cA');
model.result('pg5').feature('surf1').set('descr', 'Total rate expression');
model.result('pg5').feature('surf1').set('colortable', 'Viridis');
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').label('Reaction Rate');

model.title('Thermal Decomposition');

model.description(['This tutorial illustrates how to set up and solve a multiphysics problem involving coupled equations for mass, energy, and momentum transport.' newline  newline 'It is a good example of how a model can be set up step by step, first solving for flow, then flow and heat, and finally flow, heat, and exothermic chemistry.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;

model.label('thermal_decomposition.mph');

model.modelNode.label('Components');

out = model;
