function out = model
%
% boltzmann_global_model_argon.m
%
% Model exported on May 26 2025, 21:31 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Plasma_Module/Global_Modeling');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('plas', 'ColdPlasma', 'geom1');
model.physics('plas').model('comp1');

model.study.create('std1');
model.study('std1').create('edfi', 'EEDFInitialization');
model.study('std1').feature('edfi').set('solnum', 'auto');
model.study('std1').feature('edfi').set('notsolnum', 'auto');
model.study('std1').feature('edfi').set('outputmap', {});
model.study('std1').feature('edfi').set('ngenAUX', '1');
model.study('std1').feature('edfi').set('goalngenAUX', '1');
model.study('std1').feature('edfi').set('ngenAUX', '1');
model.study('std1').feature('edfi').set('goalngenAUX', '1');
model.study('std1').feature('edfi').setSolveFor('/physics/plas', true);

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', {'rad' 'gap'});

model.param.set('rad', '0.4[cm]');
model.param.set('gap', '0.4[cm]');
model.param.set('Res', '1e5[ohm]');
model.param.set('Tg', '300[K]');
model.param.set('P0', '100[torr]');
model.param.set('Vdc', '1000[V]');

model.variable.create('var1');
model.variable('var1').model('comp1');

model.geom('geom1').run;

model.variable('var1').set('Ldiff', '((pi/gap)^2+(2.405/rad)^2)^-0.5');
model.variable('var1').set('Ip', 'e_const*Area*plas.ne*plas.EN*plas.muN');
model.variable('var1').set('Vp', 'Vdc-Res*Ip');
model.variable('var1').set('EN', 'Vdc/(gap+Res*e_const*Area*plas.ne*nojac(plas.muN)/plas.Nn)/plas.Nn');
model.variable('var1').set('Area', 'pi*rad^2');

model.physics('plas').prop('DiffusionModel').set('DiffusionModel', 'GlobalModel');
model.physics('plas').prop('ElectronProperties').set('MeanElectronEnergyModel', 'LocalFieldApproximationE');
model.physics('plas').prop('EEDFSettings').set('eedf', 'BoltzmannTwoTerm');
model.physics('plas').prop('EEDFSettings').set('emax', '50[V]');
model.physics('plas').create('xsec1', 'CrossSectionImport', -1);
model.physics('plas').feature('xsec1').set('Filepath', 'Ar_xsecs.txt');
model.physics('plas').feature('xsec1').runCommand('importData');
model.physics('plas').create('eir6', 'ElectronImpactReaction', 2);
model.physics('plas').feature('eir6').set('formula', 'Ar++e+e=>Ar+e');
model.physics('plas').feature('eir6').set('type', 'Excitation');
model.physics('plas').feature('eir6').set('de', -15.8);
model.physics('plas').feature('eir6').set('kf', '8.75e-27[cm^6/s]*(plas.Te/1[V])^-4.5*N_A_const*N_A_const');
model.physics('plas').create('eir7', 'ElectronImpactReaction', 2);
model.physics('plas').feature('eir7').set('formula', 'Ar2++e=>Ars+Ar');
model.physics('plas').feature('eir7').set('type', 'Excitation');
model.physics('plas').feature('eir7').set('de', -3);
model.physics('plas').feature('eir7').set('kf', '8.5e-7[cm^3/s]*(plas.Te*11600[K/V]/300[K])^-0.67*N_A_const');
model.physics('plas').create('rxn1', 'Reaction', 2);
model.physics('plas').feature('rxn1').set('formula', 'Ar++Ar+Ar=>Ar2++Ar');
model.physics('plas').feature('rxn1').set('kf', '2.25e-31[cm^6/s]*(Tg/300[K])^-0.4*N_A_const*N_A_const');
model.physics('plas').feature.duplicate('rxn2', 'rxn1');
model.physics('plas').feature('rxn2').set('formula', 'Ars+Ar+Ar=>Ar+Ar+Ar');
model.physics('plas').feature('rxn2').set('kf', '1.4e-32[cm^6/s]*N_A_const*N_A_const');
model.physics('plas').feature.duplicate('rxn3', 'rxn2');
model.physics('plas').feature('rxn3').set('formula', 'Ars+Ars=>Ar2++e');
model.physics('plas').feature('rxn3').set('kf', '6e-10[cm^3/s]*N_A_const');
model.physics('plas').feature.duplicate('rxn4', 'rxn3');
model.physics('plas').feature('rxn4').set('formula', 'Ar2++Ar=>Ar++Ar+Ar');
model.physics('plas').feature('rxn4').set('kf', '6.06e-6[K*cm^3/s]/Tg*exp(-15130[K]/Tg)*N_A_const');
model.physics('plas').feature('Ar').set('FromMassConstraint', true);
model.physics('plas').feature('Ar').set('PresetSpeciesData', 'Ar');
model.physics('plas').feature('Ars').set('PresetSpeciesData', 'Ar');
model.physics('plas').feature('Ar_1p').set('PresetSpeciesData', 'Ar');
model.physics('plas').feature('Ar_1p').set('n0', '1e6[1/cm^3]');
model.physics('plas').feature('Ar2_1p').set('PresetSpeciesData', 'Ar');
model.physics('plas').feature('Ar2_1p').set('n0', '1E1[1/cm^3]');
model.physics('plas').create('sr1', 'SurfaceReaction', 1);
model.physics('plas').feature('sr1').selection.all;
model.physics('plas').feature('sr1').set('formula', 'Ar+=>Ar');
model.physics('plas').feature('sr1').set('SpecifyReactionUsing', 'UseStickingDiffusion');
model.physics('plas').feature('sr1').set('LambdaDiff', 'Ldiff');
model.physics('plas').feature.duplicate('sr2', 'sr1');
model.physics('plas').feature('sr2').set('formula', 'Ar2+=>Ar+Ar');
model.physics('plas').feature.duplicate('sr3', 'sr2');
model.physics('plas').feature('sr3').set('formula', 'Ars=>Ar');
model.physics('plas').feature('pes1').set('Tgm', 'Tg');
model.physics('plas').feature('pes1').set('p0', 'P0');
model.physics('plas').feature('pes1').set('Erd', 'EN');
model.physics('plas').feature('pes1').set('ebarEEDFinitgm', '5[V]');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'edfi');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_plas_lam').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_plas_F0').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_plas_lam').set('scaleval', '1E-21');
model.sol('sol1').feature('v1').feature('comp1_plas_F0').set('scaleval', '1');
model.sol('sol1').feature('v1').set('control', 'edfi');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', false);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s1').feature('fc1').set('termonres', false);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s1').feature('fc1').set('ntolfact', 1);
model.sol('sol1').feature('s1').feature('fc1').set('termonres', false);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.dataset.create('dset2', 'Solution');
model.result.dataset('dset2').set('solution', 'sol1');
model.result.dataset('dset2').set('geom', 'plas_eedf_xdim');
model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').set('data', 'dset2');
model.result('pg1').set('ylog', true);
model.result('pg1').set('xlabelactive', true);
model.result('pg1').set('ylabelactive', true);
model.result('pg1').set('xlabel', 'Scaled energy coordinate at reactor center');
model.result('pg1').set('ylabel', 'EEDF at reactor center');
model.result('pg1').set('titletype', 'label');
model.result('pg1').create('lngr1', 'LineGraph');
model.result('pg1').feature('lngr1').set('xdata', 'expr');
model.result('pg1').feature('lngr1').set('xdataexpr', {'plas.xeedf'});
model.result('pg1').feature('lngr1').selection.all;
model.result('pg1').feature('lngr1').label('Two-term Boltzmann');
model.result('pg1').feature('lngr1').set('legend', true);
model.result('pg1').feature('lngr1').set('autosolution', false);
model.result('pg1').feature('lngr1').set('autoplotlabel', true);
model.result('pg1').feature('lngr1').set('expr', {'plas.fcap'});
model.result('pg1').create('lngr2', 'LineGraph');
model.result('pg1').feature('lngr2').set('xdata', 'expr');
model.result('pg1').feature('lngr2').set('xdataexpr', {'plas.xeedf'});
model.result('pg1').feature('lngr2').selection.all;
model.result('pg1').feature('lngr2').set('expr', {'plas.fmax'});
model.result('pg1').feature('lngr2').label('Maxwellian');
model.result('pg1').feature('lngr2').set('legend', true);
model.result('pg1').feature('lngr2').set('autosolution', false);
model.result('pg1').feature('lngr2').set('autoplotlabel', true);
model.result('pg1').create('lngr3', 'LineGraph');
model.result('pg1').feature('lngr3').set('xdata', 'expr');
model.result('pg1').feature('lngr3').set('xdataexpr', {'plas.xeedf'});
model.result('pg1').feature('lngr3').selection.all;
model.result('pg1').feature('lngr3').set('expr', {'plas.fdruy'});
model.result('pg1').feature('lngr3').label('Druyvesteyn');
model.result('pg1').feature('lngr3').set('legend', true);
model.result('pg1').feature('lngr3').set('autosolution', false);
model.result('pg1').feature('lngr3').set('autoplotlabel', true);
model.result('pg1').create('lngr4', 'LineGraph');
model.result('pg1').feature('lngr4').set('xdata', 'expr');
model.result('pg1').feature('lngr4').set('xdataexpr', {'plas.xeedf'});
model.result('pg1').feature('lngr4').selection.all;
model.result('pg1').feature('lngr4').set('expr', {'plas.fgen'});
model.result('pg1').feature('lngr4').label('Generalized (g=3)');
model.result('pg1').feature('lngr4').set('legend', true);
model.result('pg1').feature('lngr4').set('autosolution', false);
model.result('pg1').feature('lngr4').set('autoplotlabel', true);
model.result('pg1').label('Electron Energy Distribution Function (plas)');
model.result('pg1').run;
model.result('pg1').label('EEDF initialization');
model.result('pg1').set('xlabel', 'Energy (eV)');
model.result('pg1').set('ylabel', 'EEDF (eV <sup>-3/2</sup>)');
model.result('pg1').set('axislimits', true);
model.result('pg1').set('xmin', 0);
model.result('pg1').set('xmax', 40);
model.result('pg1').set('ymin', '1e-12');
model.result('pg1').set('ymax', 0.5);
model.result('pg1').run;

model.study.create('std2');
model.study('std2').create('time', 'Transient');
model.study('std2').feature('time').setSolveFor('/physics/plas', true);
model.study('std2').feature('time').set('tlist', '10^{range(log10(1.0e-10),1/20,log10(0.001))}');
model.study('std2').feature('time').set('useinitsol', true);
model.study('std2').feature('time').set('initmethod', 'sol');
model.study('std2').feature('time').set('initstudy', 'std1');
model.study('std2').setGenPlots(false);
model.study('std2').setGenConv(false);

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'time');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_plas_lam').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_plas_F0').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_plas_lam').set('scaleval', '1E-21');
model.sol('sol2').feature('v1').feature('comp1_plas_F0').set('scaleval', '1');
model.sol('sol2').feature('v1').set('control', 'time');
model.sol('sol2').create('t1', 'Time');
model.sol('sol2').feature('t1').set('tlist', '10^{range(log10(1.0e-10),1/20,log10(0.001))}');
model.sol('sol2').feature('t1').set('plot', 'off');
model.sol('sol2').feature('t1').set('plotgroup', 'pg1');
model.sol('sol2').feature('t1').set('plotfreq', 'tout');
model.sol('sol2').feature('t1').set('probesel', 'all');
model.sol('sol2').feature('t1').set('probes', {});
model.sol('sol2').feature('t1').set('probefreq', 'tsteps');
model.sol('sol2').feature('t1').set('rtol', 0.001);
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'manual');
model.sol('sol2').feature('t1').set('atolglobalmethod', 'unscaled');
model.sol('sol2').feature('t1').set('atolglobal', 0.001);
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'manual');
model.sol('sol2').feature('t1').set('reacf', true);
model.sol('sol2').feature('t1').set('storeudot', true);
model.sol('sol2').feature('t1').set('endtimeinterpolation', true);
model.sol('sol2').feature('t1').set('estrat', 'exclude');
model.sol('sol2').feature('t1').set('maxorder', 2);
model.sol('sol2').feature('t1').set('initialstepbdfactive', true);
model.sol('sol2').feature('t1').set('initialstepbdf', '(1.0E-13)[s]');
model.sol('sol2').feature('t1').set('control', 'time');
model.sol('sol2').feature('t1').feature('aDef').set('matherr', false);
model.sol('sol2').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('t1').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol2').feature('t1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').feature('t1').set('tstepsbdf', 'strict');
model.sol('sol2').runAll;

model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').run;
model.result('pg2').label('Species densities and E/N vs. time');
model.result('pg2').set('data', 'dset3');
model.result('pg2').set('titletype', 'label');
model.result('pg2').create('glob1', 'Global');
model.result('pg2').feature('glob1').set('markerpos', 'datapoints');
model.result('pg2').feature('glob1').set('linewidth', 'preference');
model.result('pg2').feature('glob1').setIndex('expr', 'plas.ne', 0);
model.result('pg2').feature('glob1').setIndex('unit', '1/cm^3', 0);
model.result('pg2').feature('glob1').setIndex('descr', 'ne', 0);
model.result('pg2').feature('glob1').setIndex('expr', 'plas.n_wAr_1p', 1);
model.result('pg2').feature('glob1').setIndex('unit', '1/cm^3', 1);
model.result('pg2').feature('glob1').setIndex('descr', 'Ar+', 1);
model.result('pg2').feature('glob1').setIndex('expr', 'plas.n_wAr2_1p', 2);
model.result('pg2').feature('glob1').setIndex('unit', '1/cm^3', 2);
model.result('pg2').feature('glob1').setIndex('descr', 'Ar2+', 2);
model.result('pg2').feature('glob1').setIndex('expr', 'plas.n_wArs', 3);
model.result('pg2').feature('glob1').setIndex('unit', '1/cm^3', 3);
model.result('pg2').feature('glob1').setIndex('descr', 'Ars', 3);
model.result('pg2').run;
model.result('pg2').create('glob2', 'Global');
model.result('pg2').feature('glob2').set('markerpos', 'datapoints');
model.result('pg2').feature('glob2').set('linewidth', 'preference');
model.result('pg2').feature('glob2').setIndex('expr', 'EN', 0);
model.result('pg2').feature('glob2').setIndex('unit', 'Td', 0);
model.result('pg2').feature('glob2').setIndex('descr', 'E/N', 0);
model.result('pg2').run;
model.result('pg2').set('twoyaxes', true);
model.result('pg2').setIndex('plotonsecyaxis', true, 1, 1);
model.result('pg2').set('ylabelactive', true);
model.result('pg2').set('ylabel', 'Density (cm<sup>-3</sup>)');
model.result('pg2').set('axislimits', true);
model.result('pg2').set('xmin', '1e-9');
model.result('pg2').set('xmax', '1e-3');
model.result('pg2').set('ymin', '1e4');
model.result('pg2').set('ymax', '1e14');
model.result('pg2').set('yminsec', 0);
model.result('pg2').set('ymaxsec', 80);
model.result('pg2').set('xlog', true);
model.result('pg2').set('ylog', true);
model.result('pg2').set('legendpos', 'middleleft');
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').create('glob1', 'Global');
model.result('pg3').feature('glob1').set('markerpos', 'datapoints');
model.result('pg3').feature('glob1').set('linewidth', 'preference');
model.result('pg3').feature('glob1').setIndex('expr', 'Vp', 0);
model.result('pg3').feature('glob1').setIndex('unit', 'V', 0);
model.result('pg3').feature('glob1').setIndex('descr', 'Vp', 0);
model.result('pg3').feature.duplicate('glob2', 'glob1');
model.result('pg3').run;
model.result('pg3').feature('glob2').setIndex('expr', 'Ip', 0);
model.result('pg3').feature('glob2').setIndex('unit', 'mA', 0);
model.result('pg3').feature('glob2').setIndex('descr', 'Ip', 0);
model.result('pg3').run;
model.result('pg3').label('Plasma voltage and current vs. time');
model.result('pg3').set('data', 'dset3');
model.result('pg3').set('titletype', 'label');
model.result('pg3').set('twoyaxes', true);
model.result('pg3').setIndex('plotonsecyaxis', true, 1, 1);
model.result('pg3').set('ylabelactive', true);
model.result('pg3').set('ylabel', 'Voltage (V)');
model.result('pg3').set('yseclabelactive', true);
model.result('pg3').set('yseclabel', 'Current (mA)');
model.result('pg3').set('axislimits', true);
model.result('pg3').set('xmin', '1e-9');
model.result('pg3').set('xmax', '1e-3');
model.result('pg3').set('ymin', -100);
model.result('pg3').set('ymax', 1100);
model.result('pg3').set('yminsec', -1);
model.result('pg3').set('ymaxsec', 11);
model.result('pg3').set('xlog', true);
model.result('pg3').set('legendpos', 'middleleft');
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Electron mean energy vs. time');
model.result('pg4').set('data', 'dset3');
model.result('pg4').set('titletype', 'label');
model.result('pg4').set('axislimits', true);
model.result('pg4').set('xmin', '1e-10');
model.result('pg4').set('xmax', '1e-3');
model.result('pg4').set('ymin', 0);
model.result('pg4').set('ymax', 10);
model.result('pg4').set('xlog', true);
model.result('pg4').create('glob1', 'Global');
model.result('pg4').feature('glob1').set('markerpos', 'datapoints');
model.result('pg4').feature('glob1').set('linewidth', 'preference');
model.result('pg4').feature('glob1').setIndex('expr', 'plas.ebarB', 0);
model.result('pg4').feature('glob1').setIndex('unit', 'V', 0);
model.result('pg4').feature('glob1').setIndex('descr', 'Mean electron energy, Boltzmann', 0);
model.result('pg4').run;
model.result.dataset.duplicate('dset4', 'dset3');
model.result.dataset('dset4').set('comp', 'plas_eedf_xdim');
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').label('EEDF vs. time');
model.result('pg5').set('data', 'dset4');
model.result('pg5').set('titletype', 'label');
model.result('pg5').setIndex('looplevelinput', 'manual', 0);
model.result('pg5').setIndex('looplevel', [1 61 81 101 141], 0);
model.result('pg5').set('xlabelactive', true);
model.result('pg5').set('xlabel', 'Energy (eV)');
model.result('pg5').set('ylabelactive', true);
model.result('pg5').set('ylabel', 'EEDF (eV <sup>-3/2</sup>)');
model.result('pg5').set('axislimits', true);
model.result('pg5').set('xmin', 0);
model.result('pg5').set('xmax', 40);
model.result('pg5').set('ymin', '1e-12');
model.result('pg5').set('ymax', 0.5);
model.result('pg5').set('ylog', true);
model.result('pg5').create('lngr1', 'LineGraph');
model.result('pg5').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg5').feature('lngr1').set('linewidth', 'preference');
model.result('pg5').feature('lngr1').selection.all;
model.result('pg5').feature('lngr1').set('expr', 'plas.fcap');
model.result('pg5').feature('lngr1').set('xdata', 'expr');
model.result('pg5').feature('lngr1').set('xdataexpr', 'plas.xeedf');
model.result('pg5').feature('lngr1').set('legend', true);
model.result('pg5').run;

model.title('Global Model Coupled with the Two-Term Boltzmann Equation');

model.description(['The electron energy distribution function (EEDF) plays an important role in the overall behavior of discharges. In this example, the formation period of an Argon plasma is studied with special attention paid to the EEDF. The plasma is created within a 4' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'cm gap by a DC source voltage of 1' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'kV at 100' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'mTorr. A global model in the local field approximation is used to describe the temporal evolution of the plasma species. The rate coefficients for electron impact reactions and electron mobility are obtained from suitable integration of cross sections over the EEDF, and the EEDF is computed at every time step using the Boltzmann equation in the two-term approximation.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('boltzmann_global_model_argon.mph');

model.modelNode.label('Components');

out = model;
