function out = model
%
% activation_energy.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Chemical_Reaction_Engineering_Module/Tutorials');

model.modelNode.create('comp1', true);

model.physics.create('re', 'ReactionEng');
model.physics('re').model('comp1');

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/re', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('Aex', '49', 'Rate constant parameter');
model.param.set('c_init_PhN2Cl', '1000[mol/m^3]', 'Initial concentration PhN2Cl');
model.param.set('E', '150e3[J/mol]', 'Activation energy');
model.param.set('T_iso', '313[K]', 'Temperature');

model.physics('re').prop('energybalance').set('T', 'T_iso');
model.physics('re').create('rch1', 'ReactionChem', -1);
model.physics('re').feature('rch1').set('formula', 'PhN2Cl=>PhCl+N2');
model.physics('re').feature('inits1').setIndex('initialValue', 'c_init_PhN2Cl', 2, 0);

model.common.create('glso1', 'GlobalLeastSquaresObjective', 'comp1');
model.common('glso1').set('filename', 'activation_energy_experiment313K.csv');
model.common('glso1').importData;
model.common('glso1').setEntry('modelExpression', 'col2', 'c_PhN2Cl');
model.common('glso1').setEntry('variableName', 'col2', 'c_PhN2Cl');
model.common('glso1').setEntry('modelExpression', 'col2', 're.c_PhN2Cl');
model.common('glso1').setEntry('unit', 'col2', 'mol/m^3');
model.common('glso1').setIndex('paramNames', 'Aex', 0);
model.common('glso1').setIndex('paramExprs', '', 0);
model.common('glso1').setIndex('paramNames', 'Aex', 0);
model.common('glso1').setIndex('paramExprs', '', 0);
model.common('glso1').setIndex('paramNames', 'T_iso', 0);
model.common('glso1').setIndex('paramExprs', '313[K]', 0);
model.common('glso1').label('Experimental data 313 K');
model.common.duplicate('glso2', 'glso1');
model.common('glso2').label('Experimental data 319 K');
model.common('glso2').discardData;
model.common('glso2').set('filename', 'activation_energy_experiment319K.csv');
model.common('glso2').importData;
model.common('glso2').setIndex('paramExprs', '319[K]', 0);
model.common.duplicate('glso3', 'glso2');
model.common('glso3').label('Experimental data 323 K');
model.common('glso3').discardData;
model.common('glso3').set('filename', 'activation_energy_experiment323K.csv');
model.common('glso3').importData;
model.common('glso3').setIndex('paramExprs', '323[K]', 0);
model.common.duplicate('glso4', 'glso3');
model.common('glso4').label('Experimental data 328 K');
model.common('glso4').discardData;
model.common('glso4').set('filename', 'activation_energy_experiment328K.csv');
model.common('glso4').importData;
model.common('glso4').setIndex('paramExprs', '328[K]', 0);
model.common.duplicate('glso5', 'glso4');
model.common('glso5').label('Experimental data 333 K');
model.common('glso5').discardData;
model.common('glso5').set('filename', 'activation_energy_experiment333K.csv');
model.common('glso5').importData;
model.common('glso5').setIndex('paramExprs', '333[K]', 0);

model.physics('re').feature('rch1').set('useArrhenius', true);
model.physics('re').feature('rch1').set('Af', 'exp(Aex)');
model.physics('re').feature('rch1').set('Ef', 'E');

model.study('std1').create('lsqo', 'LSQOptimization');
model.study('std1').feature('lsqo').setIndex('pname', 'Aex', 0);
model.study('std1').feature('lsqo').setIndex('initval', 49, 0);
model.study('std1').feature('lsqo').setIndex('scale', 1, 0);
model.study('std1').feature('lsqo').setIndex('lbound', '', 0);
model.study('std1').feature('lsqo').setIndex('ubound', '', 0);
model.study('std1').feature('lsqo').setIndex('pname', 'Aex', 0);
model.study('std1').feature('lsqo').setIndex('initval', 49, 0);
model.study('std1').feature('lsqo').setIndex('scale', 1, 0);
model.study('std1').feature('lsqo').setIndex('lbound', '', 0);
model.study('std1').feature('lsqo').setIndex('ubound', '', 0);
model.study('std1').feature('lsqo').setIndex('pname', 'c_init_PhN2Cl', 1);
model.study('std1').feature('lsqo').setIndex('initval', '1000[mol/m^3]', 1);
model.study('std1').feature('lsqo').setIndex('scale', 1, 1);
model.study('std1').feature('lsqo').setIndex('lbound', '', 1);
model.study('std1').feature('lsqo').setIndex('ubound', '', 1);
model.study('std1').feature('lsqo').setIndex('pname', 'c_init_PhN2Cl', 1);
model.study('std1').feature('lsqo').setIndex('initval', '1000[mol/m^3]', 1);
model.study('std1').feature('lsqo').setIndex('scale', 1, 1);
model.study('std1').feature('lsqo').setIndex('lbound', '', 1);
model.study('std1').feature('lsqo').setIndex('ubound', '', 1);
model.study('std1').feature('lsqo').setIndex('scale', 49, 0);
model.study('std1').feature('lsqo').setIndex('lbound', 10, 0);
model.study('std1').feature('lsqo').setIndex('ubound', 100, 0);
model.study('std1').feature('lsqo').setIndex('pname', 'E', 1);
model.study('std1').feature('lsqo').setIndex('scale', '150e3[J/mol]', 1);
model.study('std1').feature('lsqo').setIndex('lbound', '1e5', 1);
model.study('std1').feature('lsqo').setIndex('ubound', '2e5', 1);
model.study('std1').feature('lsqo').set('lsqdatamethod', 'lsq');

model.sol.create('sol1');
model.sol('sol1').study('std1');

model.study('std1').feature('lsqo').set('lsqmessage', {});

model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('o1', 'Optimization');
model.sol('sol1').feature('o1').set('opttol', 0.001);
model.sol('sol1').feature('o1').set('gradorder', 'second');
model.sol('sol1').feature('o1').set('control', 'lsqo');
model.sol('sol1').feature('o1').create('t1', 'TimeAttrib');
model.sol('sol1').feature('o1').feature('t1').set('tout', 'tsteps');
model.sol('sol1').feature('o1').feature('t1').set('rtol', 1.0E-5);
model.sol('sol1').feature('o1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('o1').feature('t1').set('reacf', true);
model.sol('sol1').feature('o1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('o1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('o1').feature('t1').set('consistent', 'bweuler');
model.sol('sol1').feature('o1').feature('t1').set('control', 'time');
model.sol('sol1').feature('o1').feature('t1').create('tp1', 'TimeParametric');
model.sol('sol1').feature('o1').feature('t1').feature('tp1').set('control', 'time');
model.sol('sol1').feature('o1').feature('t1').set('control', 'time');
model.sol('sol1').feature('o1').feature('t1').feature('tp1').set('plistarrlsq', {'313.0, 319.0, 323.0, 328.0, 333.0'});
model.sol('sol1').feature('o1').feature('t1').feature('tp1').set('lsqparamsout', ['     T_iso' newline '       313' newline '       319' newline '       323' newline '       328' newline '       333' newline ]);
model.sol('sol1').feature('o1').feature('t1').feature('tp1').set('pnamelsq', {'T_iso'});
model.sol('sol1').feature('v1').set('cname', {'t' 'timestep'});
model.sol('sol1').feature('v1').set('clist', {'range(0,0.1,1)[s]' '0.001[s]'});
model.sol('sol1').feature('v1').set('clistctrl', {'t1_t' 't1_timestep'});
model.sol('sol1').feature('v1').set('cname', {'t' 'timestep' 'T_iso'});
model.sol('sol1').feature('v1').set('clist', {'range(0,0.1,1)[s]' '0.001[s]' '313.0, 319.0, 323.0, 328.0, 333.0'});
model.sol('sol1').feature('v1').set('clistctrl', {'t1_t' 't1_timestep' 'tp1lsq'});
model.sol('sol1').feature('o1').feature('t1').set('tlistlsq', [500 1000 1500 2000 2500 3000 3500 4000 4500 5000; 300 600 900 1200 1500 1800 2100 2400 2700 3000; 150 300 450 600 750 900 1050 1200 1350 1500; 50 100 150 200 250 300 350 400 450 500; 30 60 90 120 150 180 210 240 270 300]);
model.sol('sol1').feature('o1').feature('t1').set('lsqtimesout', ['      30.0' newline '      50.0' newline '      60.0' newline '      90.0' newline '       100' newline '       120' newline '       150' newline '       180' newline '       200' newline '       210' newline '       240' newline '       250' newline '       270' newline '       300' newline '       350' newline '       400' newline '       450' newline '       500' newline '       600' newline '       750' newline '       900' newline '  1.00e+03' newline '  1.05e+03' newline '  1.20e+03' newline '  1.35e+03' newline '  1.50e+03' newline '  1.80e+03' newline '  2.00e+03' newline '  2.10e+03' newline '  2.40e+03' newline '  2.50e+03' newline '  2.70e+03' newline '  3.00e+03' newline '  3.50e+03' newline '  4.00e+03' newline '  4.50e+03' newline '  5.00e+03' newline ]);
model.sol('sol1').feature('o1').feature('t1').set('tout', 'tlist');
model.sol('sol1').feature('o1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('o1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('o1').feature('t1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('o1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('o1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').create('glob1', 'Global');
model.result('pg1').feature('glob1').set('expr', {'re.c_PhN2Cl' 're.c_PhCl' 're.c_N2'});
model.result('pg1').feature('glob1').set('descr', {'Concentration' 'Concentration' 'Concentration'});
model.result('pg1').feature('glob1').set('unit', {'' '' ''});
model.result('pg1').feature('glob1').set('expr', {'re.c_PhN2Cl' 're.c_PhCl' 're.c_N2'});
model.result('pg1').feature('glob1').set('descr', {'Concentration' 'Concentration' 'Concentration'});
model.result('pg1').label('Concentration (re)');
model.result('pg1').feature('glob1').set('xdatasolnumtype', 'level1');
model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').label('Parameter estimation');
model.result('pg2').set('data', 'dset1');
model.result('pg2').set('xlabelactive', true);
model.result('pg2').set('xlabel', 'Time');
model.result('pg2').set('titletype', 'none');
model.result('pg2').create('glob1', 'Global');
model.result('pg2').feature('glob1').label('Column 2 (model)');
model.result('pg2').feature('glob1').set('expr', {'glso1.c_PhN2Cl.model'});
model.result('pg2').feature('glob1').set('descr', {'Column 2 (model)'});
model.result('pg2').feature('glob1').set('xdata', 'expr');
model.result('pg2').feature('glob1').set('xdataexpr', 't');
model.result('pg2').create('glob2', 'Global');
model.result('pg2').feature('glob2').label('Column 2 (data)');
model.result('pg2').feature('glob2').set('expr', {'glso1.c_PhN2Cl.data'});
model.result('pg2').feature('glob2').set('descr', {'Column 2 (data)'});
model.result('pg2').feature('glob2').set('xdata', 'expr');
model.result('pg2').feature('glob2').set('xdataexpr', 't');
model.result('pg2').feature('glob2').set('linestyle', 'none');
model.result('pg2').feature('glob2').set('linemarker', 'point');
model.result('pg2').feature('glob2').set('markerpos', 'datapoints');
model.result('pg2').feature('glob2').set('linecolor', 'cyclereset');
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').label('Parameter estimation 1');
model.result('pg3').set('data', 'dset1');
model.result('pg3').set('xlabelactive', true);
model.result('pg3').set('xlabel', 'Time');
model.result('pg3').set('titletype', 'none');
model.result('pg3').create('glob1', 'Global');
model.result('pg3').feature('glob1').label('Column 2 (model)');
model.result('pg3').feature('glob1').set('expr', {'glso2.c_PhN2Cl.model'});
model.result('pg3').feature('glob1').set('descr', {'Column 2 (model)'});
model.result('pg3').feature('glob1').set('xdata', 'expr');
model.result('pg3').feature('glob1').set('xdataexpr', 't');
model.result('pg3').create('glob2', 'Global');
model.result('pg3').feature('glob2').label('Column 2 (data)');
model.result('pg3').feature('glob2').set('expr', {'glso2.c_PhN2Cl.data'});
model.result('pg3').feature('glob2').set('descr', {'Column 2 (data)'});
model.result('pg3').feature('glob2').set('xdata', 'expr');
model.result('pg3').feature('glob2').set('xdataexpr', 't');
model.result('pg3').feature('glob2').set('linestyle', 'none');
model.result('pg3').feature('glob2').set('linemarker', 'point');
model.result('pg3').feature('glob2').set('markerpos', 'datapoints');
model.result('pg3').feature('glob2').set('linecolor', 'cyclereset');
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').label('Parameter estimation 2');
model.result('pg4').set('data', 'dset1');
model.result('pg4').set('xlabelactive', true);
model.result('pg4').set('xlabel', 'Time');
model.result('pg4').set('titletype', 'none');
model.result('pg4').create('glob1', 'Global');
model.result('pg4').feature('glob1').label('Column 2 (model)');
model.result('pg4').feature('glob1').set('expr', {'glso3.c_PhN2Cl.model'});
model.result('pg4').feature('glob1').set('descr', {'Column 2 (model)'});
model.result('pg4').feature('glob1').set('xdata', 'expr');
model.result('pg4').feature('glob1').set('xdataexpr', 't');
model.result('pg4').create('glob2', 'Global');
model.result('pg4').feature('glob2').label('Column 2 (data)');
model.result('pg4').feature('glob2').set('expr', {'glso3.c_PhN2Cl.data'});
model.result('pg4').feature('glob2').set('descr', {'Column 2 (data)'});
model.result('pg4').feature('glob2').set('xdata', 'expr');
model.result('pg4').feature('glob2').set('xdataexpr', 't');
model.result('pg4').feature('glob2').set('linestyle', 'none');
model.result('pg4').feature('glob2').set('linemarker', 'point');
model.result('pg4').feature('glob2').set('markerpos', 'datapoints');
model.result('pg4').feature('glob2').set('linecolor', 'cyclereset');
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').label('Parameter estimation 3');
model.result('pg5').set('data', 'dset1');
model.result('pg5').set('xlabelactive', true);
model.result('pg5').set('xlabel', 'Time');
model.result('pg5').set('titletype', 'none');
model.result('pg5').create('glob1', 'Global');
model.result('pg5').feature('glob1').label('Column 2 (model)');
model.result('pg5').feature('glob1').set('expr', {'glso4.c_PhN2Cl.model'});
model.result('pg5').feature('glob1').set('descr', {'Column 2 (model)'});
model.result('pg5').feature('glob1').set('xdata', 'expr');
model.result('pg5').feature('glob1').set('xdataexpr', 't');
model.result('pg5').create('glob2', 'Global');
model.result('pg5').feature('glob2').label('Column 2 (data)');
model.result('pg5').feature('glob2').set('expr', {'glso4.c_PhN2Cl.data'});
model.result('pg5').feature('glob2').set('descr', {'Column 2 (data)'});
model.result('pg5').feature('glob2').set('xdata', 'expr');
model.result('pg5').feature('glob2').set('xdataexpr', 't');
model.result('pg5').feature('glob2').set('linestyle', 'none');
model.result('pg5').feature('glob2').set('linemarker', 'point');
model.result('pg5').feature('glob2').set('markerpos', 'datapoints');
model.result('pg5').feature('glob2').set('linecolor', 'cyclereset');
model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').label('Parameter estimation 4');
model.result('pg6').set('data', 'dset1');
model.result('pg6').set('xlabelactive', true);
model.result('pg6').set('xlabel', 'Time');
model.result('pg6').set('titletype', 'none');
model.result('pg6').create('glob1', 'Global');
model.result('pg6').feature('glob1').label('Column 2 (model)');
model.result('pg6').feature('glob1').set('expr', {'glso5.c_PhN2Cl.model'});
model.result('pg6').feature('glob1').set('descr', {'Column 2 (model)'});
model.result('pg6').feature('glob1').set('xdata', 'expr');
model.result('pg6').feature('glob1').set('xdataexpr', 't');
model.result('pg6').create('glob2', 'Global');
model.result('pg6').feature('glob2').label('Column 2 (data)');
model.result('pg6').feature('glob2').set('expr', {'glso5.c_PhN2Cl.data'});
model.result('pg6').feature('glob2').set('descr', {'Column 2 (data)'});
model.result('pg6').feature('glob2').set('xdata', 'expr');
model.result('pg6').feature('glob2').set('xdataexpr', 't');
model.result('pg6').feature('glob2').set('linestyle', 'none');
model.result('pg6').feature('glob2').set('linemarker', 'point');
model.result('pg6').feature('glob2').set('markerpos', 'datapoints');
model.result('pg6').feature('glob2').set('linecolor', 'cyclereset');
model.result('pg1').run;

model.study('std1').feature('lsqo').set('probewindow', '');

model.result('pg2').run;
model.result('pg2').label('Parameter estimation 313 K');
model.result('pg2').setIndex('looplevelinput', 'manual', 1);
model.result('pg2').setIndex('looplevel', [1], 1);
model.result('pg2').set('xlabel', 'Time (s)');
model.result('pg2').set('ylabelactive', true);
model.result('pg2').set('ylabel', 'Concentration PhN<sub>2</sub>Cl (mol/m<sup>3</sup>)');
model.result('pg2').set('legendlayout', 'outside');
model.result('pg2').set('legendposoutside', 'top');
model.result('pg2').run;
model.result('pg2').feature('glob1').label('Simulation at 313 K');
model.result('pg2').feature('glob1').set('autoplotlabel', true);
model.result('pg2').feature('glob1').set('autosolution', false);
model.result('pg2').feature('glob1').set('autoexpr', false);
model.result('pg2').run;
model.result('pg2').feature('glob2').label('Experiment at 313 K');
model.result('pg2').feature('glob2').set('autoplotlabel', true);
model.result('pg2').feature('glob2').set('autosolution', false);
model.result('pg2').feature('glob2').set('autoexpr', false);
model.result('pg2').run;
model.result('pg3').run;
model.result('pg3').label('Parameter estimation 319 K');
model.result('pg3').setIndex('looplevelinput', 'manual', 1);
model.result('pg3').setIndex('looplevel', [2], 1);
model.result('pg3').set('xlabel', 'Time (s)');
model.result('pg3').set('ylabelactive', true);
model.result('pg3').set('ylabel', 'Concentration PhN<sub>2</sub>Cl (mol/m<sup>3</sup>)');
model.result('pg3').set('legendlayout', 'outside');
model.result('pg3').set('legendposoutside', 'top');
model.result('pg3').run;
model.result('pg3').feature('glob1').label('Simulation at 319 K');
model.result('pg3').feature('glob1').set('autoplotlabel', true);
model.result('pg3').feature('glob1').set('autosolution', false);
model.result('pg3').feature('glob1').set('autoexpr', false);
model.result('pg3').run;
model.result('pg3').feature('glob2').label('Experiment at 319 K');
model.result('pg3').feature('glob2').set('autoplotlabel', true);
model.result('pg3').feature('glob2').set('autosolution', false);
model.result('pg3').feature('glob2').set('autoexpr', false);
model.result('pg3').run;
model.result('pg4').run;
model.result('pg4').label('Parameter estimation 323 K');
model.result('pg4').setIndex('looplevelinput', 'manual', 1);
model.result('pg4').setIndex('looplevel', [3], 1);
model.result('pg4').set('xlabel', 'Time (s)');
model.result('pg4').set('ylabelactive', true);
model.result('pg4').set('ylabel', 'Concentration PhN<sub>2</sub>Cl (mol/m<sup>3</sup>)');
model.result('pg4').set('legendlayout', 'outside');
model.result('pg4').set('legendposoutside', 'top');
model.result('pg4').run;
model.result('pg4').feature('glob1').label('Simulation at 323 K');
model.result('pg4').feature('glob1').set('autoplotlabel', true);
model.result('pg4').feature('glob1').set('autosolution', false);
model.result('pg4').feature('glob1').set('autoexpr', false);
model.result('pg4').run;
model.result('pg4').feature('glob2').label('Experiment at 323 K');
model.result('pg4').feature('glob2').set('autoplotlabel', true);
model.result('pg4').feature('glob2').set('autosolution', false);
model.result('pg4').feature('glob2').set('autoexpr', false);
model.result('pg4').run;
model.result('pg5').run;
model.result('pg5').label('Parameter estimation 328 K');
model.result('pg5').setIndex('looplevelinput', 'manual', 1);
model.result('pg5').setIndex('looplevel', [4], 1);
model.result('pg5').set('xlabel', 'Time (s)');
model.result('pg5').set('ylabelactive', true);
model.result('pg5').set('ylabel', 'Concentration PhN<sub>2</sub>Cl (mol/m<sup>3</sup>)');
model.result('pg5').set('legendlayout', 'outside');
model.result('pg5').set('legendposoutside', 'top');
model.result('pg5').run;
model.result('pg5').feature('glob1').label('Simulation at 328 K');
model.result('pg5').feature('glob1').set('autoplotlabel', true);
model.result('pg5').feature('glob1').set('autosolution', false);
model.result('pg5').feature('glob1').set('autoexpr', false);
model.result('pg5').run;
model.result('pg5').feature('glob2').label('Experiment at 328 K');
model.result('pg5').feature('glob2').set('autoplotlabel', true);
model.result('pg5').feature('glob2').set('autosolution', false);
model.result('pg5').feature('glob2').set('autoexpr', false);
model.result('pg5').run;
model.result('pg6').run;
model.result('pg6').label('Parameter estimation 333 K');
model.result('pg6').setIndex('looplevelinput', 'manual', 1);
model.result('pg6').setIndex('looplevel', [5], 1);
model.result('pg6').set('xlabel', 'Time (s)');
model.result('pg6').set('ylabelactive', true);
model.result('pg6').set('ylabel', 'Concentration PhN<sub>2</sub>Cl (mol/m<sup>3</sup>)');
model.result('pg6').set('legendlayout', 'outside');
model.result('pg6').set('legendposoutside', 'top');
model.result('pg6').run;
model.result('pg6').feature('glob1').label('Simulation at 333 K');
model.result('pg6').feature('glob1').set('autoplotlabel', true);
model.result('pg6').feature('glob1').set('autosolution', false);
model.result('pg6').feature('glob1').set('autoexpr', false);
model.result('pg6').run;
model.result('pg6').feature('glob2').label('Experiment at 333 K');
model.result('pg6').feature('glob2').set('autoplotlabel', true);
model.result('pg6').feature('glob2').set('autosolution', false);
model.result('pg6').feature('glob2').set('autoexpr', false);
model.result('pg6').run;
model.result('pg1').run;
model.result.remove('pg1');
model.result('pg2').run;

model.title('Finding Kinetic Arrhenius Parameters Using Parameter Estimation');

model.description('Parameter Estimation is important in experimental calibration of theoretical models. This example uses the Parameter Estimation and Experiment features in the Reaction Engineering interface. It utilizes multiple experimental data input files to find the Arrhenius parameters of a first order reaction. The reaction involves benzene diazonium chloride decomposing to benzene chloride and nitrogen.');

model.label('activation_energy.mph');

model.modelNode.label('Components');

out = model;
