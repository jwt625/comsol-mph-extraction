function out = model
%
% quenching_of_a_steel_billet.m
%
% Model exported on May 26 2025, 21:30 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Metal_Processing_Module/Steel_Quenching');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('ht', 'HeatTransfer', 'geom1');
model.physics('ht').model('comp1');
model.physics('ht').prop('ShapeProperty').set('order_temperature', '1');
model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');
model.physics('solid').prop('StructuralTransientBehavior').set('StructuralTransientBehavior', 'Quasistatic');
model.physics.create('audc', 'AusteniteDecomposition', 'geom1');
model.physics('audc').model('comp1');
model.physics('audc').prop('SolidMechanics').set('trip', '1');
model.physics('audc').prop('SolidMechanics').set('plasticity', '0');
model.physics('audc').prop('SolidMechanics').set('dilstrain', '1');
model.physics('audc').prop('HeatTransfer').set('latentheat', '1');
model.physics('audc').prop('ShapeProperty').set('order_straindiscr_disc', '2');

model.multiphysics.create('lht1', 'PhaseTransformationLatentHeat', 'geom1', 2);
model.multiphysics('lht1').set('Metphase_physics', 'audc');
model.multiphysics('lht1').set('HeatTransfer_physics', 'ht');
model.multiphysics('lht1').selection.all;
model.multiphysics.create('ptstr1', 'PhaseTransformationStrain', 'geom1', 2);
model.multiphysics('ptstr1').set('Metphase_physics', 'audc');
model.multiphysics('ptstr1').set('SolidMechanics_physics', 'solid');
model.multiphysics('ptstr1').selection.all;

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/ht', true);
model.study('std1').feature('time').setSolveFor('/physics/solid', true);
model.study('std1').feature('time').setSolveFor('/physics/audc', true);
model.study('std1').feature('time').setSolveFor('/multiphysics/lht1', true);
model.study('std1').feature('time').setSolveFor('/multiphysics/ptstr1', true);

model.nodeGroup.create('grp1', 'GlobalDefinitions');
model.nodeGroup('grp1').label('Austenite to Ferrite');

model.func.create('int1', 'Interpolation');

model.nodeGroup('grp1').add('func', 'int1');

model.func('int1').set('funcname', 'K_Austenite_to_Ferrite');
model.func('int1').set('table', {'0' '0'; '450' '0'; '620' '0.005'; '750' '0'; '1000' '0'});
model.func('int1').set('interp', 'piecewisecubic');
model.func('int1').setIndex('argunit', 'degC', 0);
model.func('int1').setIndex('fununit', '1/s', 0);
model.func.create('int2', 'Interpolation');

model.nodeGroup('grp1').add('func', 'int2');

model.func('int2').set('funcname', 'L_Austenite_to_Ferrite');
model.func('int2').set('table', {'0' '0'; '450' '0'; '620' '0.001'; '750' '0'; '1000' '0'});
model.func('int2').set('interp', 'piecewisecubic');
model.func('int2').setIndex('argunit', 'degC', 0);
model.func('int2').setIndex('fununit', '1/s', 0);

model.nodeGroup.create('grp2', 'GlobalDefinitions');
model.nodeGroup('grp2').label('Austenite to Pearlite');

model.func.create('int3', 'Interpolation');

model.nodeGroup('grp2').add('func', 'int3');

model.func('int3').set('funcname', 'K_Austenite_to_Pearlite');
model.func('int3').set('table', {'0' '0'; '450' '0'; '550' '0.015'; '750' '0'; '1000' '0'});
model.func('int3').set('interp', 'piecewisecubic');
model.func('int3').setIndex('argunit', 'degC', 0);
model.func('int3').setIndex('fununit', '1/s', 0);
model.func.create('int4', 'Interpolation');

model.nodeGroup('grp2').add('func', 'int4');

model.func('int4').set('funcname', 'L_Austenite_to_Pearlite');
model.func('int4').set('table', {'0' '0'; '450' '0'; '550' '0.001'; '750' '0'; '1000' '0'});
model.func('int4').set('interp', 'piecewisecubic');
model.func('int4').setIndex('argunit', 'degC', 0);
model.func('int4').setIndex('fununit', '1/s', 0);

model.nodeGroup.create('grp3', 'GlobalDefinitions');
model.nodeGroup('grp3').label('Austenite to Bainite');

model.func.create('int5', 'Interpolation');

model.nodeGroup('grp3').add('func', 'int5');

model.func('int5').set('funcname', 'K_Austenite_to_Bainite');
model.func('int5').set('table', {'100' '0'; '380' '0'; '490' '0.06'; '550' '0'});
model.func('int5').set('interp', 'piecewisecubic');
model.func('int5').setIndex('argunit', 'degC', 0);
model.func('int5').setIndex('fununit', '1/s', 0);
model.func.create('int6', 'Interpolation');

model.nodeGroup('grp3').add('func', 'int6');

model.func('int6').set('funcname', 'L_Austenite_to_Bainite');
model.func('int6').set('table', {'0' '0'; '200' '0'; '490' '0.010'; '630' '0'});
model.func('int6').set('interp', 'piecewisecubic');
model.func('int6').setIndex('argunit', 'degC', 0);
model.func('int6').setIndex('fununit', '1/s', 0);
model.func.create('int7', 'Interpolation');
model.func('int7').set('funcname', 'EYoung');
model.func('int7').set('table', {'0' '210'; '300' '180'; '600' '165'; '900' '120'; '' ''});
model.func('int7').setIndex('argunit', 'degC', 0);
model.func('int7').setIndex('fununit', 'GPa', 0);
model.func.create('int8', 'Interpolation');
model.func('int8').set('funcname', 'htc');
model.func('int8').set('table', {'0' '200'; '300' '200'; '500' '2800'; '650' '750'; '1300' '750'});
model.func('int8').setIndex('argunit', 'degC', 0);
model.func('int8').setIndex('fununit', 'W/(m^2*K)', 0);

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', [0.02 0.1]);
model.geom('geom1').run('fin');

model.physics('audc').prop('HeatTransfer').set('latentheat', false);
model.physics('audc').prop('SolidMechanics').set('plasticity', true);
model.physics('audc').prop('MaterialProperties').runCommand('makecompoundmaterial');
model.physics('audc').feature('phase1').runCommand('makephasematerial');
model.physics('audc').feature('phase1').set('IsotropicHardeningModel', 'LinearIsotropicHardening');
model.physics('audc').feature('phase2').runCommand('makephasematerial');
model.physics('audc').feature('phase2').set('IsotropicHardeningModel', 'LinearIsotropicHardening');
model.physics('audc').feature('phase3').runCommand('makephasematerial');
model.physics('audc').feature('phase3').set('IsotropicHardeningModel', 'LinearIsotropicHardening');
model.physics('audc').feature('phase4').runCommand('makephasematerial');
model.physics('audc').feature('phase4').set('IsotropicHardeningModel', 'LinearIsotropicHardening');
model.physics('audc').feature('phase5').runCommand('makephasematerial');
model.physics('audc').feature('phase5').set('IsotropicHardeningModel', 'LinearIsotropicHardening');

model.material('audcphase1mat').propertyGroup('def').func.create('int1', 'Interpolation');
model.material('audcphase1mat').propertyGroup('def').func('int1').set('funcname', 'k');
model.material('audcphase1mat').propertyGroup('def').func('int1').set('table', {'0' '15'; '300' '20'; '600' '22'; '900' '25'; '' ''});
model.material('audcphase1mat').propertyGroup('def').func('int1').setIndex('argunit', 'degC', 0);
model.material('audcphase1mat').propertyGroup('def').func('int1').setIndex('fununit', 'W/(m*K)', 0);
model.material('audcphase1mat').propertyGroup('def').addInput('temperature');
model.material('audcphase1mat').propertyGroup('def').func.create('int2', 'Interpolation');
model.material('audcphase1mat').propertyGroup('def').func('int2').set('funcname', 'Cp');
model.material('audcphase1mat').propertyGroup('def').func('int2').set('table', {'0' '520'; '300' '560'; '600' '590'; '900' '620'});
model.material('audcphase1mat').propertyGroup('def').func('int2').setIndex('argunit', 'degC', 0);
model.material('audcphase1mat').propertyGroup('def').func('int2').setIndex('fununit', 'J/(kg*K)', 0);
model.material('audcphase1mat').propertyGroup('def').set('thermalconductivity', {'k(T)'});
model.material('audcphase1mat').propertyGroup('def').set('density', {'7930'});
model.material('audcphase1mat').propertyGroup('def').set('heatcapacity', {'Cp(T)'});
model.material('audcphase1mat').propertyGroup('ThermalExpansion').set('thermalexpansioncoefficient', {'2.2e-5'});
model.material('audcphase1mat').propertyGroup('Enu').addInput('temperature');
model.material('audcphase1mat').propertyGroup('Enu').set('E', {'EYoung(T)'});
model.material('audcphase1mat').propertyGroup('Enu').set('nu', {'0.3'});
model.material('audcphase1mat').propertyGroup('ElastoplasticModel').addInput('temperature');
model.material('audcphase1mat').propertyGroup('ElastoplasticModel').func.create('int1', 'Interpolation');
model.material('audcphase1mat').propertyGroup('ElastoplasticModel').func('int1').set('funcname', 'sY');
model.material('audcphase1mat').propertyGroup('ElastoplasticModel').func('int1').set('table', {'0' '200'; '300' '135'; '600' '40'; '850' '36'});
model.material('audcphase1mat').propertyGroup('ElastoplasticModel').func('int1').setIndex('argunit', 'degC', 0);
model.material('audcphase1mat').propertyGroup('ElastoplasticModel').func('int1').setIndex('fununit', 'MPa', 0);
model.material('audcphase1mat').propertyGroup('ElastoplasticModel').func.create('int2', 'Interpolation');
model.material('audcphase1mat').propertyGroup('ElastoplasticModel').func('int2').set('funcname', 'h');
model.material('audcphase1mat').propertyGroup('ElastoplasticModel').func('int2').set('table', {'0' '1'; '300' '15'; '600' '11'; '900' '0.6'});
model.material('audcphase1mat').propertyGroup('ElastoplasticModel').func('int2').setIndex('argunit', 'degC', 0);
model.material('audcphase1mat').propertyGroup('ElastoplasticModel').func('int2').setIndex('fununit', 'GPa', 0);
model.material('audcphase1mat').propertyGroup('ElastoplasticModel').set('sigmags', {'sY(T)'});
model.material('audcphase1mat').propertyGroup('ElastoplasticModel').set('Et', {'h(T)'});
model.material('audcphase2mat').propertyGroup('def').addInput('temperature');
model.material('audcphase2mat').propertyGroup('def').func.create('int1', 'Interpolation');
model.material('audcphase2mat').propertyGroup('def').func('int1').set('funcname', 'k');
model.material('audcphase2mat').propertyGroup('def').func('int1').set('table', {'0' '50'; '300' '42'; '600' '35'; '900' '26'});
model.material('audcphase2mat').propertyGroup('def').func('int1').setIndex('argunit', 'degC', 0);
model.material('audcphase2mat').propertyGroup('def').func('int1').setIndex('fununit', 'K/(m*K)', 0);
model.material('audcphase2mat').propertyGroup('def').func.create('int2', 'Interpolation');
model.material('audcphase2mat').propertyGroup('def').func('int2').set('funcname', 'Cp');
model.material('audcphase2mat').propertyGroup('def').func('int2').set('table', {'0' '480'; '300' '570'; '600' '640'; '900' '700'; '' ''});
model.material('audcphase2mat').propertyGroup('def').func('int2').setIndex('argunit', 'degC', 0);
model.material('audcphase2mat').propertyGroup('def').func('int2').setIndex('fununit', 'J/(kg*K)', 0);
model.material('audcphase2mat').propertyGroup('def').set('thermalconductivity', {'k(T)'});
model.material('audcphase2mat').propertyGroup('def').set('density', {'7850'});
model.material('audcphase2mat').propertyGroup('def').set('heatcapacity', {'Cp(T)'});
model.material('audcphase2mat').propertyGroup('ThermalExpansion').set('thermalexpansioncoefficient', {'1.5e-5'});
model.material('audcphase2mat').propertyGroup('Enu').addInput('temperature');
model.material('audcphase2mat').propertyGroup('Enu').set('E', {'EYoung(T)'});
model.material('audcphase2mat').propertyGroup('Enu').set('nu', {'0.3'});
model.material('audcphase2mat').propertyGroup('ElastoplasticModel').addInput('temperature');
model.material('audcphase2mat').propertyGroup('ElastoplasticModel').func.create('int1', 'Interpolation');
model.material('audcphase2mat').propertyGroup('ElastoplasticModel').func('int1').set('funcname', 'sY');
model.material('audcphase2mat').propertyGroup('ElastoplasticModel').func('int1').set('table', {'0' '400'; '300' '200'; '600' '150'; '900' '35'});
model.material('audcphase2mat').propertyGroup('ElastoplasticModel').func('int1').setIndex('argunit', 'degC', 0);
model.material('audcphase2mat').propertyGroup('ElastoplasticModel').func('int1').setIndex('fununit', 'MPa', 0);
model.material('audcphase2mat').propertyGroup('ElastoplasticModel').func.create('int2', 'Interpolation');
model.material('audcphase2mat').propertyGroup('ElastoplasticModel').func('int2').set('funcname', 'h');
model.material('audcphase2mat').propertyGroup('ElastoplasticModel').func('int2').set('table', {'0' '1'; '300' '15'; '600' '11'; '900' '0.6'});
model.material('audcphase2mat').propertyGroup('ElastoplasticModel').func('int2').setIndex('argunit', 'degC', 0);
model.material('audcphase2mat').propertyGroup('ElastoplasticModel').func('int2').setIndex('fununit', 'GPa', 0);
model.material('audcphase2mat').propertyGroup('ElastoplasticModel').set('sigmags', {'sY(T)'});
model.material('audcphase2mat').propertyGroup('ElastoplasticModel').set('Et', {'h(T)'});
model.material('audcphase3mat').propertyGroup('def').addInput('temperature');
model.material('audcphase3mat').propertyGroup('def').func.create('int1', 'Interpolation');
model.material('audcphase3mat').propertyGroup('def').func('int1').set('funcname', 'k');
model.material('audcphase3mat').propertyGroup('def').func('int1').set('table', {'0' '50'; '300' '42'; '600' '35'; '900' '26'});
model.material('audcphase3mat').propertyGroup('def').func('int1').setIndex('argunit', 'degC', 0);
model.material('audcphase3mat').propertyGroup('def').func('int1').setIndex('fununit', 'W/(m*K)', 0);
model.material('audcphase3mat').propertyGroup('def').func.create('int2', 'Interpolation');
model.material('audcphase3mat').propertyGroup('def').func('int2').set('funcname', 'Cp');
model.material('audcphase3mat').propertyGroup('def').func('int2').set('table', {'0' '480'; '300' '570'; '600' '640'; '900' '700'; '' ''});
model.material('audcphase3mat').propertyGroup('def').func('int2').setIndex('argunit', 'degC', 0);
model.material('audcphase3mat').propertyGroup('def').func('int2').setIndex('fununit', 'J/(kg*K)', 0);
model.material('audcphase3mat').propertyGroup('def').set('thermalconductivity', {'k(T)'});
model.material('audcphase3mat').propertyGroup('def').set('density', {'7850'});
model.material('audcphase3mat').propertyGroup('def').set('heatcapacity', {'Cp(T)'});
model.material('audcphase3mat').propertyGroup('ThermalExpansion').set('thermalexpansioncoefficient', {'1.5e-5'});
model.material('audcphase3mat').propertyGroup('Enu').addInput('temperature');
model.material('audcphase3mat').propertyGroup('Enu').set('E', {'EYoung(T)'});
model.material('audcphase3mat').propertyGroup('Enu').set('nu', {'0.3'});
model.material('audcphase3mat').propertyGroup('ElastoplasticModel').addInput('temperature');
model.material('audcphase3mat').propertyGroup('ElastoplasticModel').func.create('int1', 'Interpolation');
model.material('audcphase3mat').propertyGroup('ElastoplasticModel').func('int1').set('funcname', 'sY');
model.material('audcphase3mat').propertyGroup('ElastoplasticModel').func('int1').set('table', {'0' '400'; '300' '200'; '600' '150'; '900' '35'});
model.material('audcphase3mat').propertyGroup('ElastoplasticModel').func('int1').setIndex('argunit', 'degC', 0);
model.material('audcphase3mat').propertyGroup('ElastoplasticModel').func('int1').setIndex('fununit', 'MPa', 0);
model.material('audcphase3mat').propertyGroup('ElastoplasticModel').func.create('int2', 'Interpolation');
model.material('audcphase3mat').propertyGroup('ElastoplasticModel').func('int2').set('funcname', 'h');
model.material('audcphase3mat').propertyGroup('ElastoplasticModel').func('int2').set('table', {'0' '1'; '300' '15'; '600' '11'; '900' '0.6'});
model.material('audcphase3mat').propertyGroup('ElastoplasticModel').func('int2').setIndex('argunit', 'degC', 0);
model.material('audcphase3mat').propertyGroup('ElastoplasticModel').func('int2').setIndex('fununit', 'GPa', 0);
model.material('audcphase3mat').propertyGroup('ElastoplasticModel').set('sigmags', {'sY(T)'});
model.material('audcphase3mat').propertyGroup('ElastoplasticModel').set('Et', {'h(T)'});
model.material('audcphase4mat').propertyGroup('def').addInput('temperature');
model.material('audcphase4mat').propertyGroup('def').func.create('int1', 'Interpolation');
model.material('audcphase4mat').propertyGroup('def').func('int1').set('funcname', 'k');
model.material('audcphase4mat').propertyGroup('def').func('int1').set('table', {'0' '50'; '300' '42'; '600' '35'; '900' '26'});
model.material('audcphase4mat').propertyGroup('def').func('int1').setIndex('argunit', 'degC', 0);
model.material('audcphase4mat').propertyGroup('def').func('int1').setIndex('fununit', 'W/(m*K)', 0);
model.material('audcphase4mat').propertyGroup('def').func.create('int2', 'Interpolation');
model.material('audcphase4mat').propertyGroup('def').func('int2').set('funcname', 'Cp');
model.material('audcphase4mat').propertyGroup('def').func('int2').set('table', {'0' '480'; '300' '570'; '600' '640'; '900' '700'; '' ''});
model.material('audcphase4mat').propertyGroup('def').func('int2').setIndex('argunit', 'degC', 0);
model.material('audcphase4mat').propertyGroup('def').func('int2').setIndex('fununit', 'J/(kg*K)', 0);
model.material('audcphase4mat').propertyGroup('def').set('thermalconductivity', {'k(T)'});
model.material('audcphase4mat').propertyGroup('def').set('density', {'7850'});
model.material('audcphase4mat').propertyGroup('def').set('heatcapacity', {'Cp(T)'});
model.material('audcphase4mat').propertyGroup('ThermalExpansion').set('thermalexpansioncoefficient', {'1.5e-5'});
model.material('audcphase4mat').propertyGroup('Enu').addInput('temperature');
model.material('audcphase4mat').propertyGroup('Enu').set('E', {'EYoung(T)'});
model.material('audcphase4mat').propertyGroup('Enu').set('nu', {'0.3'});
model.material('audcphase4mat').propertyGroup('ElastoplasticModel').addInput('temperature');
model.material('audcphase4mat').propertyGroup('ElastoplasticModel').func.create('int1', 'Interpolation');
model.material('audcphase4mat').propertyGroup('ElastoplasticModel').func('int1').set('funcname', 'sY');
model.material('audcphase4mat').propertyGroup('ElastoplasticModel').func('int1').set('table', {'0' '400'; '300' '200'; '600' '150'; '900' '35'});
model.material('audcphase4mat').propertyGroup('ElastoplasticModel').func('int1').setIndex('argunit', 'degC', 0);
model.material('audcphase4mat').propertyGroup('ElastoplasticModel').func('int1').setIndex('fununit', 'MPa', 0);
model.material('audcphase4mat').propertyGroup('ElastoplasticModel').func.create('int2', 'Interpolation');
model.material('audcphase4mat').propertyGroup('ElastoplasticModel').func('int2').set('funcname', 'h');
model.material('audcphase4mat').propertyGroup('ElastoplasticModel').func('int2').set('table', {'0' '1'; '300' '15'; '600' '11'; '900' '0.6'});
model.material('audcphase4mat').propertyGroup('ElastoplasticModel').func('int2').setIndex('argunit', 'degC', 0);
model.material('audcphase4mat').propertyGroup('ElastoplasticModel').func('int2').setIndex('fununit', 'GPa', 0);
model.material('audcphase4mat').propertyGroup('ElastoplasticModel').set('sigmags', {'sY(T)'});
model.material('audcphase4mat').propertyGroup('ElastoplasticModel').set('Et', {'h(T)'});
model.material('audcphase5mat').propertyGroup('def').addInput('temperature');
model.material('audcphase5mat').propertyGroup('def').func.create('int1', 'Interpolation');
model.material('audcphase5mat').propertyGroup('def').func('int1').set('funcname', 'k');
model.material('audcphase5mat').propertyGroup('def').func('int1').set('table', {'0' '44'; '300' '38'; '600' '30'; '900' '24'});
model.material('audcphase5mat').propertyGroup('def').func('int1').setIndex('argunit', 'degC', 0);
model.material('audcphase5mat').propertyGroup('def').func('int1').setIndex('fununit', 'W/(m*K)', 0);
model.material('audcphase5mat').propertyGroup('def').func.create('int2', 'Interpolation');
model.material('audcphase5mat').propertyGroup('def').func('int2').set('funcname', 'Cp');
model.material('audcphase5mat').propertyGroup('def').func('int2').set('table', {'0' '480'; '300' '570'; '600' '640'; '900' '650'; '' ''});
model.material('audcphase5mat').propertyGroup('def').func('int2').setIndex('argunit', 'degC', 0);
model.material('audcphase5mat').propertyGroup('def').func('int2').setIndex('fununit', 'J/(kg*K)', 0);
model.material('audcphase5mat').propertyGroup('def').set('thermalconductivity', {'k(T)'});
model.material('audcphase5mat').propertyGroup('def').set('density', {'7850'});
model.material('audcphase5mat').propertyGroup('def').set('heatcapacity', {'Cp(T)'});
model.material('audcphase5mat').propertyGroup('ThermalExpansion').set('thermalexpansioncoefficient', {'1.4e-5'});
model.material('audcphase5mat').propertyGroup('Enu').addInput('temperature');
model.material('audcphase5mat').propertyGroup('Enu').set('E', {'EYoung(T)'});
model.material('audcphase5mat').propertyGroup('Enu').set('nu', {'0.3'});
model.material('audcphase5mat').propertyGroup('ElastoplasticModel').addInput('temperature');
model.material('audcphase5mat').propertyGroup('ElastoplasticModel').func.create('int1', 'Interpolation');
model.material('audcphase5mat').propertyGroup('ElastoplasticModel').func('int1').set('funcname', 'sY');
model.material('audcphase5mat').propertyGroup('ElastoplasticModel').func('int1').set('table', {'0' '1600'; '300' '1500'; '600' '1400'; '900' '100'; '' ''});
model.material('audcphase5mat').propertyGroup('ElastoplasticModel').func('int1').setIndex('argunit', 'degC', 0);
model.material('audcphase5mat').propertyGroup('ElastoplasticModel').func('int1').setIndex('fununit', 'MPa', 0);
model.material('audcphase5mat').propertyGroup('ElastoplasticModel').func.create('int2', 'Interpolation');
model.material('audcphase5mat').propertyGroup('ElastoplasticModel').func('int2').set('funcname', 'h');
model.material('audcphase5mat').propertyGroup('ElastoplasticModel').func('int2').set('table', {'0' '1'; '300' '15'; '600' '11'; '900' '0.6'});
model.material('audcphase5mat').propertyGroup('ElastoplasticModel').func('int2').setIndex('argunit', 'degC', 0);
model.material('audcphase5mat').propertyGroup('ElastoplasticModel').func('int2').setIndex('fununit', 'GPa', 0);
model.material('audcphase5mat').propertyGroup('ElastoplasticModel').set('sigmags', {'sY(T)'});
model.material('audcphase5mat').propertyGroup('ElastoplasticModel').set('Et', {'h(T)'});

model.physics('ht').feature('init1').set('Tinit', '900[degC]');
model.physics('ht').create('sym1', 'Symmetry', 1);
model.physics('ht').feature('sym1').selection.set([2]);
model.physics('ht').create('hf1', 'HeatFluxBoundary', 1);
model.physics('ht').feature('hf1').selection.set([3 4]);
model.physics('ht').feature('hf1').set('HeatFluxType', 'ConvectiveHeatFlux');
model.physics('ht').feature('hf1').set('h', 'htc(T)');
model.physics('ht').feature('hf1').set('Text', '80[degC]');
model.physics('solid').feature('lemm1').create('plsty1', 'Plasticity', 2);
model.physics('solid').feature('lemm1').feature('plsty1').set('IsotropicHardeningModel', 'HardeningFunction');
model.physics('solid').feature('lemm1').create('iss1', 'InitialStressandStrain', 2);
model.physics('solid').feature('lemm1').feature('iss1').set('eil', [0.005 0 0 0 0.005 0 0 0 0.005]);
model.physics('solid').create('symp1', 'SymmetryPlane', 1);
model.physics('solid').feature('symp1').selection.set([2]);

model.common.create('minpt1', 'CommonInputDef', 'comp1');
model.common('minpt1').set('quantity', 'strainreferencetemperature');
model.common('minpt1').selection.geom('geom1', 2);
model.common('minpt1').selection.set([1]);
model.common('minpt1').selection.inherit(false);
model.common('minpt1').set('value', '900[degC]');

model.physics('audc').feature('ptran1').set('K', 'K_Austenite_to_Ferrite(audc.T)');
model.physics('audc').feature('ptran1').set('L', 'L_Austenite_to_Ferrite(audc.T)');
model.physics('audc').feature('ptran1').set('trip', true);
model.physics('audc').feature('ptran1').set('recovery', true);
model.physics('audc').feature('ptran2').set('K', 'K_Austenite_to_Pearlite(audc.T)');
model.physics('audc').feature('ptran2').set('L', 'L_Austenite_to_Pearlite(audc.T)');
model.physics('audc').feature('ptran2').set('trip', true);
model.physics('audc').feature('ptran2').set('recovery', true);
model.physics('audc').feature('ptran3').set('K', 'K_Austenite_to_Bainite(audc.T)');
model.physics('audc').feature('ptran3').set('L', 'L_Austenite_to_Bainite(audc.T)');
model.physics('audc').feature('ptran3').set('trip', true);
model.physics('audc').feature('ptran3').set('recovery', true);
model.physics('audc').feature('ptran4').set('Ms', '300[degC]');
model.physics('audc').feature('ptran4').set('trip', true);
model.physics('audc').feature('ptran4').set('recovery', true);

model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('size').set('hauto', 2);
model.mesh('mesh1').create('bl1', 'BndLayer');
model.mesh('mesh1').feature('bl1').create('blp', 'BndLayerProp');
model.mesh('mesh1').feature('bl1').selection.geom(2);
model.mesh('mesh1').feature('bl1').selection.set([]);
model.mesh('mesh1').feature('bl1').selection.allGeom;
model.mesh('mesh1').feature('bl1').feature('blp').selection.set([3 4]);
model.mesh('mesh1').feature('bl1').feature('blp').set('blnlayers', 6);
model.mesh('mesh1').feature('bl1').feature('blp').set('blstretch', 1.5);
model.mesh('mesh1').run;

model.study('std1').feature('time').set('tlist', 'range(0,5,600)');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_audc_phasefractions').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_audc_phasefractions').set('scaleval', '1');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.10198039027185572');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,5,600)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('atolmethod', {'comp1_audc_phasefractions' 'global' 'comp1_ptstr1_ptstrains' 'global' 'comp1_ptstr1_t_old' 'global' 'comp1_T' 'global' 'comp1_u' 'global'});
model.sol('sol1').feature('t1').set('atol', {'comp1_audc_phasefractions' '1e-3' 'comp1_ptstr1_ptstrains' '1e-3' 'comp1_ptstr1_t_old' '1e-3' 'comp1_T' '1e-3' 'comp1_u' '1e-3'});
model.sol('sol1').feature('t1').set('atolvaluemethod', {'comp1_audc_phasefractions' 'factor' 'comp1_ptstr1_ptstrains' 'factor' 'comp1_ptstr1_t_old' 'factor' 'comp1_T' 'factor' 'comp1_u' 'factor'});
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('estrat', 'exclude');
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').label('Direct (Merged)');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('t1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('t1').feature('i1').set('maxlinit', 10000);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i1').label('AMG, heat transfer variables (ht)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runFromTo('st1', 'v1');

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').label('Temperature (ht)');
model.result('pg1').set('dataisaxisym', 'off');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 1, 0);
model.result('pg1').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pg2');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('solutionparams', 'parent');
model.result('pg1').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 1, 0);
model.result('pg2').set('defaultPlotID', 'stress');
model.result('pg2').label('Stress (solid)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg2').feature('surf1').set('threshold', 'manual');
model.result('pg2').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg2').feature('surf1').set('colortable', 'Rainbow');
model.result('pg2').feature('surf1').set('colortabletrans', 'none');
model.result('pg2').feature('surf1').set('colorscalemode', 'linear');
model.result('pg2').feature('surf1').set('resolution', 'normal');
model.result('pg2').feature('surf1').set('colortable', 'Prism');
model.result('pg2').feature('surf1').create('def', 'Deform');
model.result('pg2').feature('surf1').feature('def').set('expr', {'u' 'w'});
model.result('pg2').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result.dataset.create('dset1solidrev', 'Revolve2D');
model.result.dataset('dset1solidrev').set('data', 'dset1');
model.result.dataset('dset1solidrev').set('revangle', 225);
model.result.dataset('dset1solidrev').set('startangle', -90);
model.result.dataset('dset1solidrev').set('hasspacevars', true);
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').set('data', 'dset1solidrev');
model.result('pg3').setIndex('looplevel', 1, 0);
model.result('pg3').set('defaultPlotID', 'stress3D');
model.result('pg3').label('Stress, 3D (solid)');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg3').feature('surf1').set('threshold', 'manual');
model.result('pg3').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg3').feature('surf1').set('colortable', 'Rainbow');
model.result('pg3').feature('surf1').set('colortabletrans', 'none');
model.result('pg3').feature('surf1').set('colorscalemode', 'linear');
model.result('pg3').feature('surf1').set('colortable', 'Prism');
model.result('pg3').feature('surf1').create('def', 'Deform');
model.result.dataset('dset1solidrev').set('hasspacevars', true);
model.result('pg3').feature('surf1').feature('def').set('revcoordsys', 'cylindrical');
model.result('pg3').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg3').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg3').feature('surf1').feature('def').set('descractive', true);
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').set('data', 'dset1');
model.result('pg4').setIndex('looplevel', 1, 0);
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', {'audc.phase1.xi'});
model.result('pg4').label('Austenite (audc)');
model.result('pg4').feature('surf1').set('coloring', 'gradient');
model.result('pg4').feature('surf1').set('topcolor', 'custom');
model.result('pg4').feature('surf1').set('customtopcolor', [0.9 0.4 0.15]);
model.result('pg4').feature('surf1').set('bottomcolor', 'custom');
model.result('pg4').feature('surf1').set('custombottomcolor', [0 0 0.5]);
model.result('pg4').feature('surf1').set('colortablerev', false);
model.result('pg4').feature('surf1').set('titletype', 'manual');
model.result('pg4').feature('surf1').set('title', 'Austenite');
model.result.dataset.create('rev1', 'Revolve2D');
model.result.dataset('rev1').set('data', 'dset1');
model.result.dataset('rev1').set('revangle', 225);
model.result.dataset('rev1').set('startangle', -90);
model.result.dataset('rev1').set('hasspacevars', false);
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').set('data', 'rev1');
model.result('pg5').setIndex('looplevel', 1, 0);
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', {'audc.phase1.xi'});
model.result('pg5').label('Austenite, 3D (audc)');
model.result('pg5').feature('surf1').set('coloring', 'gradient');
model.result('pg5').feature('surf1').set('topcolor', 'custom');
model.result('pg5').feature('surf1').set('customtopcolor', [0.9 0.4 0.15]);
model.result('pg5').feature('surf1').set('bottomcolor', 'custom');
model.result('pg5').feature('surf1').set('custombottomcolor', [0 0 0.5]);
model.result('pg5').feature('surf1').set('colortablerev', false);
model.result('pg5').feature('surf1').set('titletype', 'manual');
model.result('pg5').feature('surf1').set('title', 'Austenite');
model.result.create('pg6', 'PlotGroup2D');
model.result('pg6').set('data', 'dset1');
model.result('pg6').setIndex('looplevel', 1, 0);
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', {'audc.phase2.xi'});
model.result('pg6').label('Ferrite (audc)');
model.result('pg6').feature('surf1').set('coloring', 'gradient');
model.result('pg6').feature('surf1').set('topcolor', 'custom');
model.result('pg6').feature('surf1').set('customtopcolor', [0.9 0.4 0.15]);
model.result('pg6').feature('surf1').set('bottomcolor', 'custom');
model.result('pg6').feature('surf1').set('custombottomcolor', [0 0 0.5]);
model.result('pg6').feature('surf1').set('colortablerev', false);
model.result('pg6').feature('surf1').set('titletype', 'manual');
model.result('pg6').feature('surf1').set('title', 'Ferrite');
model.result.create('pg7', 'PlotGroup3D');
model.result('pg7').set('data', 'rev1');
model.result('pg7').setIndex('looplevel', 1, 0);
model.result('pg7').create('surf1', 'Surface');
model.result('pg7').feature('surf1').set('expr', {'audc.phase2.xi'});
model.result('pg7').label('Ferrite, 3D (audc)');
model.result('pg7').feature('surf1').set('coloring', 'gradient');
model.result('pg7').feature('surf1').set('topcolor', 'custom');
model.result('pg7').feature('surf1').set('customtopcolor', [0.9 0.4 0.15]);
model.result('pg7').feature('surf1').set('bottomcolor', 'custom');
model.result('pg7').feature('surf1').set('custombottomcolor', [0 0 0.5]);
model.result('pg7').feature('surf1').set('colortablerev', false);
model.result('pg7').feature('surf1').set('titletype', 'manual');
model.result('pg7').feature('surf1').set('title', 'Ferrite');
model.result.create('pg8', 'PlotGroup2D');
model.result('pg8').set('data', 'dset1');
model.result('pg8').setIndex('looplevel', 1, 0);
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').feature('surf1').set('expr', {'audc.phase3.xi'});
model.result('pg8').label('Pearlite (audc)');
model.result('pg8').feature('surf1').set('coloring', 'gradient');
model.result('pg8').feature('surf1').set('topcolor', 'custom');
model.result('pg8').feature('surf1').set('customtopcolor', [0.9 0.4 0.15]);
model.result('pg8').feature('surf1').set('bottomcolor', 'custom');
model.result('pg8').feature('surf1').set('custombottomcolor', [0 0 0.5]);
model.result('pg8').feature('surf1').set('colortablerev', false);
model.result('pg8').feature('surf1').set('titletype', 'manual');
model.result('pg8').feature('surf1').set('title', 'Pearlite');
model.result.create('pg9', 'PlotGroup3D');
model.result('pg9').set('data', 'rev1');
model.result('pg9').setIndex('looplevel', 1, 0);
model.result('pg9').create('surf1', 'Surface');
model.result('pg9').feature('surf1').set('expr', {'audc.phase3.xi'});
model.result('pg9').label('Pearlite, 3D (audc)');
model.result('pg9').feature('surf1').set('coloring', 'gradient');
model.result('pg9').feature('surf1').set('topcolor', 'custom');
model.result('pg9').feature('surf1').set('customtopcolor', [0.9 0.4 0.15]);
model.result('pg9').feature('surf1').set('bottomcolor', 'custom');
model.result('pg9').feature('surf1').set('custombottomcolor', [0 0 0.5]);
model.result('pg9').feature('surf1').set('colortablerev', false);
model.result('pg9').feature('surf1').set('titletype', 'manual');
model.result('pg9').feature('surf1').set('title', 'Pearlite');
model.result.create('pg10', 'PlotGroup2D');
model.result('pg10').set('data', 'dset1');
model.result('pg10').setIndex('looplevel', 1, 0);
model.result('pg10').create('surf1', 'Surface');
model.result('pg10').feature('surf1').set('expr', {'audc.phase4.xi'});
model.result('pg10').label('Bainite (audc)');
model.result('pg10').feature('surf1').set('coloring', 'gradient');
model.result('pg10').feature('surf1').set('topcolor', 'custom');
model.result('pg10').feature('surf1').set('customtopcolor', [0.9 0.4 0.15]);
model.result('pg10').feature('surf1').set('bottomcolor', 'custom');
model.result('pg10').feature('surf1').set('custombottomcolor', [0 0 0.5]);
model.result('pg10').feature('surf1').set('colortablerev', false);
model.result('pg10').feature('surf1').set('titletype', 'manual');
model.result('pg10').feature('surf1').set('title', 'Bainite');
model.result.create('pg11', 'PlotGroup3D');
model.result('pg11').set('data', 'rev1');
model.result('pg11').setIndex('looplevel', 1, 0);
model.result('pg11').create('surf1', 'Surface');
model.result('pg11').feature('surf1').set('expr', {'audc.phase4.xi'});
model.result('pg11').label('Bainite, 3D (audc)');
model.result('pg11').feature('surf1').set('coloring', 'gradient');
model.result('pg11').feature('surf1').set('topcolor', 'custom');
model.result('pg11').feature('surf1').set('customtopcolor', [0.9 0.4 0.15]);
model.result('pg11').feature('surf1').set('bottomcolor', 'custom');
model.result('pg11').feature('surf1').set('custombottomcolor', [0 0 0.5]);
model.result('pg11').feature('surf1').set('colortablerev', false);
model.result('pg11').feature('surf1').set('titletype', 'manual');
model.result('pg11').feature('surf1').set('title', 'Bainite');
model.result.create('pg12', 'PlotGroup2D');
model.result('pg12').set('data', 'dset1');
model.result('pg12').setIndex('looplevel', 1, 0);
model.result('pg12').create('surf1', 'Surface');
model.result('pg12').feature('surf1').set('expr', {'audc.phase5.xi'});
model.result('pg12').label('Martensite (audc)');
model.result('pg12').feature('surf1').set('coloring', 'gradient');
model.result('pg12').feature('surf1').set('topcolor', 'custom');
model.result('pg12').feature('surf1').set('customtopcolor', [0.9 0.4 0.15]);
model.result('pg12').feature('surf1').set('bottomcolor', 'custom');
model.result('pg12').feature('surf1').set('custombottomcolor', [0 0 0.5]);
model.result('pg12').feature('surf1').set('colortablerev', false);
model.result('pg12').feature('surf1').set('titletype', 'manual');
model.result('pg12').feature('surf1').set('title', 'Martensite');
model.result.create('pg13', 'PlotGroup3D');
model.result('pg13').set('data', 'rev1');
model.result('pg13').setIndex('looplevel', 1, 0);
model.result('pg13').create('surf1', 'Surface');
model.result('pg13').feature('surf1').set('expr', {'audc.phase5.xi'});
model.result('pg13').label('Martensite, 3D (audc)');
model.result('pg13').feature('surf1').set('coloring', 'gradient');
model.result('pg13').feature('surf1').set('topcolor', 'custom');
model.result('pg13').feature('surf1').set('customtopcolor', [0.9 0.4 0.15]);
model.result('pg13').feature('surf1').set('bottomcolor', 'custom');
model.result('pg13').feature('surf1').set('custombottomcolor', [0 0 0.5]);
model.result('pg13').feature('surf1').set('colortablerev', false);
model.result('pg13').feature('surf1').set('titletype', 'manual');
model.result('pg13').feature('surf1').set('title', 'Martensite');
model.result('pg1').run;

model.sol('sol1').study('std1');
model.sol('sol1').feature.remove('t1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_audc_phasefractions').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_audc_phasefractions').set('scaleval', '1');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.10198039027185572');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,5,600)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'pg1');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('atolmethod', {'comp1_audc_phasefractions' 'global' 'comp1_ptstr1_ptstrains' 'global' 'comp1_ptstr1_t_old' 'global' 'comp1_T' 'global' 'comp1_u' 'global'});
model.sol('sol1').feature('t1').set('atol', {'comp1_audc_phasefractions' '1e-3' 'comp1_ptstr1_ptstrains' '1e-3' 'comp1_ptstr1_t_old' '1e-3' 'comp1_T' '1e-3' 'comp1_u' '1e-3'});
model.sol('sol1').feature('t1').set('atolvaluemethod', {'comp1_audc_phasefractions' 'factor' 'comp1_ptstr1_ptstrains' 'factor' 'comp1_ptstr1_t_old' 'factor' 'comp1_T' 'factor' 'comp1_u' 'factor'});
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('estrat', 'exclude');
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').label('Direct (Merged)');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('t1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('t1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('t1').feature('i1').set('maxlinit', 10000);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('t1').feature('i1').label('AMG, heat transfer variables (ht)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 0);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('damp', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runFromTo('st1', 'v1');

model.result('pg1').run;

model.sol('sol1').feature('t1').set('tstepsbdf', 'intermediate');
model.sol('sol1').runAll;

model.result('pg1').run;
model.result.create('pg14', 'PlotGroup1D');
model.result('pg14').run;
model.result('pg14').label('Phase fractions at the billet center');
model.result('pg14').set('titletype', 'none');
model.result('pg14').set('ylabelactive', true);
model.result('pg14').set('ylabel', 'Phase fractions');
model.result('pg14').create('ptgr1', 'PointGraph');
model.result('pg14').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg14').feature('ptgr1').set('linewidth', 'preference');
model.result('pg14').feature('ptgr1').selection.set([1]);
model.result('pg14').feature('ptgr1').set('expr', 'audc.phase1.xi');
model.result('pg14').feature('ptgr1').set('descr', 'Phase fraction');
model.result('pg14').feature('ptgr1').set('linewidth', 2);
model.result('pg14').feature('ptgr1').set('linemarker', 'cycle');
model.result('pg14').feature('ptgr1').set('markerpos', 'interp');
model.result('pg14').feature('ptgr1').set('legend', true);
model.result('pg14').feature('ptgr1').set('legendmethod', 'manual');
model.result('pg14').feature('ptgr1').setIndex('legends', 'Austenite', 0);
model.result('pg14').feature.duplicate('ptgr2', 'ptgr1');
model.result('pg14').run;
model.result('pg14').feature('ptgr2').set('expr', 'audc.phase2.xi');
model.result('pg14').feature('ptgr2').setIndex('legends', 'Ferrite', 0);
model.result('pg14').run;
model.result('pg14').feature.duplicate('ptgr3', 'ptgr1');
model.result('pg14').run;
model.result('pg14').feature('ptgr3').set('expr', 'audc.phase3.xi');
model.result('pg14').feature('ptgr3').setIndex('legends', 'Pearlite', 0);
model.result('pg14').run;
model.result('pg14').feature.duplicate('ptgr4', 'ptgr1');
model.result('pg14').run;
model.result('pg14').feature('ptgr4').set('expr', 'audc.phase4.xi');
model.result('pg14').feature('ptgr4').setIndex('legends', 'Bainite', 0);
model.result('pg14').run;
model.result('pg14').feature.duplicate('ptgr5', 'ptgr1');
model.result('pg14').run;
model.result('pg14').feature('ptgr5').set('expr', 'audc.phase5.xi');
model.result('pg14').feature('ptgr5').setIndex('legends', 'Martensite', 0);
model.result('pg14').run;
model.result.duplicate('pg15', 'pg14');
model.result('pg15').run;
model.result('pg15').label('Phase fractions at the billet surface');
model.result('pg15').run;
model.result('pg15').feature('ptgr1').selection.set([3]);
model.result('pg15').run;
model.result('pg15').feature('ptgr2').selection.set([3]);
model.result('pg15').run;
model.result('pg15').feature('ptgr3').selection.set([3]);
model.result('pg15').run;
model.result('pg15').feature('ptgr4').selection.set([3]);
model.result('pg15').run;
model.result('pg15').feature('ptgr5').selection.set([3]);
model.result('pg15').run;
model.result.create('pg16', 'PlotGroup1D');
model.result('pg16').run;
model.result('pg16').label('Axial stress profile');
model.result('pg16').setIndex('looplevelinput', 'last', 0);
model.result('pg16').create('lngr1', 'LineGraph');
model.result('pg16').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg16').feature('lngr1').set('linewidth', 'preference');
model.result('pg16').feature('lngr1').selection.set([2]);
model.result('pg16').feature('lngr1').set('expr', 'solid.sGpzz');
model.result('pg16').feature('lngr1').set('descr', 'Stress tensor, zz-component');
model.result('pg16').feature('lngr1').set('unit', 'MPa');
model.result('pg16').feature('lngr1').set('xdata', 'expr');
model.result('pg16').feature('lngr1').set('xdataexpr', 'R');
model.result('pg16').feature('lngr1').set('linewidth', 2);
model.result('pg16').run;
model.result.dataset.create('mir1', 'Mirror3D');
model.result.dataset('mir1').set('quickplane', 'xy');
model.result.create('pg17', 'PlotGroup3D');
model.result('pg17').run;
model.result('pg17').set('data', 'mir1');
model.result('pg17').set('titletype', 'none');
model.result('pg17').set('plotarrayenable', true);
model.result('pg17').set('arrayaxis', 'y');
model.result('pg17').set('paddinglinear', 'absolute');
model.result('pg17').set('padding', 0.05);
model.result('pg17').create('surf1', 'Surface');
model.result('pg17').feature('surf1').set('arraydim', '1');
model.result('pg17').feature('surf1').label('Axial stress');
model.result('pg17').feature('surf1').set('expr', 'solid.sGpzz');
model.result('pg17').feature('surf1').set('descr', 'Stress tensor, zz-component');
model.result('pg17').feature('surf1').set('unit', 'MPa');
model.result('pg17').feature.duplicate('surf2', 'surf1');
model.result('pg17').feature('surf2').set('arraydim', '1');
model.result('pg17').run;
model.result('pg17').feature('surf2').label('Equivalent plastic strain');
model.result('pg17').feature('surf2').set('expr', 'solid.epeGp');
model.result('pg17').feature('surf2').set('descr', 'Equivalent plastic strain');
model.result('pg17').feature('surf2').set('colortable', 'Traffic');
model.result('pg13').run;
model.result('pg17').run;
model.result('pg17').feature.copy('surf3', 'pg13/surf1');
model.result('pg17').feature('surf3').set('arraydim', '1');
model.result('pg17').run;
model.result('pg17').feature('surf3').label('Martensite phase fraction');

model.title('Quenching of a Steel Billet');

model.description('A steel billet is quenched in oil from its austenitic state. A 2D axisymmetric model is used to simulate the coupled problem of austenite decomposition, heat transfer, and solid mechanics. During the quenching process, the austenite decomposes into a combination of ferrite, pearlite, bainite, and martensite. Phase transformation strains resulting from thermal expansion and transformation induced plasticity (TRIP) are computed. The resulting residual stress state is computed.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;

model.label('quenching_of_a_steel_billet.mph');

model.modelNode.label('Components');

out = model;
