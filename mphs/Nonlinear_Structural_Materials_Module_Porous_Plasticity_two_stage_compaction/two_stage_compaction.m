function out = model
%
% two_stage_compaction.m
%
% Model exported on May 26 2025, 21:31 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Nonlinear_Structural_Materials_Module/Porous_Plasticity');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');
model.geom('geom1').axisymmetric(true);

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');
model.physics.create('solid2', 'SolidMechanics', 'geom1');
model.physics('solid2').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/solid', true);
model.study('std1').feature('stat').setSolveFor('/physics/solid2', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('para', '0[1]', 'Parameter');
model.param.set('disp', '0[mm]', 'Displacement parameter');
model.param.set('H0', '20[mm]', 'Initial height of the powder mold');
model.param.set('R0', 'H0', 'Initial radius of the powder mold');
model.param.set('sigmay0', '200[MPa]', 'Initial yield stress');
model.param.set('q1', '1.5', 'Tvergaard correction coefficient');
model.param.set('q2', '1', 'Tvergaard correction coefficient');
model.param.set('q3', '2.25', 'Tvergaard correction coefficient');
model.param.set('F0', '0.28', 'Initial void volume fraction');
model.param.set('Fc', '0.36', 'Critical void volume fraction');
model.param.set('Ff', '0.4', 'Failure void volume fraction');

model.func.create('int1', 'Interpolation');
model.func('int1').label('Punch Force');
model.func('int1').set('funcname', 'PunchForce');
model.func('int1').setIndex('table', 0, 0, 0);
model.func('int1').setIndex('table', 0, 0, 1);
model.func('int1').setIndex('table', 1, 1, 0);
model.func('int1').setIndex('table', 300, 1, 1);
model.func('int1').setIndex('table', 1.1, 2, 0);
model.func('int1').setIndex('table', 0, 2, 1);
model.func('int1').setIndex('table', 2, 3, 0);
model.func('int1').setIndex('table', 300, 3, 1);
model.func('int1').setIndex('argunit', 1, 0);
model.func('int1').setIndex('fununit', 'kN', 0);

model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').set('size', {'R0' 'H0'});
model.geom('geom1').feature.duplicate('r2', 'r1');
model.geom('geom1').feature('r2').set('pos', {'0' 'H0'});
model.geom('geom1').run('r2');
model.geom('geom1').create('uni1', 'Union');
model.geom('geom1').feature('uni1').selection('input').set({'r1' 'r2'});
model.geom('geom1').run('uni1');
model.geom('geom1').create('r3', 'Rectangle');
model.geom('geom1').feature('r3').set('size', {'R0/4' '2.5*H0'});
model.geom('geom1').feature('r3').set('pos', {'R0' '-H0/4'});
model.geom('geom1').runPre('fin');
model.geom('geom1').feature('fin').set('action', 'assembly');
model.geom('geom1').feature('fin').set('pairtype', 'contact');
model.geom('geom1').run('fin');

model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl('intop1').set('axisym', true);
model.cpl('intop1').selection.geom('geom1', 1);
model.cpl('intop1').selection.set([5]);
model.cpl.duplicate('intop2', 'intop1');
model.cpl('intop2').selection.set([6 7]);
model.cpl('intop2').set('axisym', false);

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').set('Force1', 'PunchForce(para)');
model.variable('var1').descr('Force1', 'Punch force, two-stage compaction');
model.variable('var1').set('Force2', 'intop1(-solid2.sz)');
model.variable('var1').descr('Force2', 'Punch force, single-stage compaction');
model.variable('var1').set('delta', '1-intop2(1)/(2*H0)');
model.variable('var1').descr('delta', 'Axial compaction');

model.physics('solid').feature('lemm1').create('popl1', 'PorousPlasticity', 2);
model.physics('solid').feature('lemm1').feature('popl1').set('YieldFunction', 'GTN');
model.physics('solid').feature('lemm1').create('act1', 'Activation', 2);
model.physics('solid').feature('lemm1').feature('act1').selection.set([2]);
model.physics('solid').feature('lemm1').feature('act1').set('activation_expression', 'para>1');
model.physics('solid').create('rd1', 'RigidDomain', 2);
model.physics('solid').feature('rd1').selection.set([3]);
model.physics('solid').feature('rd1').create('fix1', 'FixedConstraint', -1);
model.physics('solid').feature('dcnt1').create('fric1', 'Friction', 1);
model.physics('solid').feature('dcnt1').feature('fric1').set('mu_fric', 0.05);
model.physics('solid').create('disp1', 'Displacement1', 1);
model.physics('solid').feature('disp1').selection.set([2]);
model.physics('solid').feature('disp1').setIndex('Direction', 'prescribed', 2);
model.physics('solid').create('bndl1', 'BoundaryLoad', 1);
model.physics('solid').feature('bndl1').selection.set([4]);
model.physics('solid').feature('bndl1').set('LoadType', 'TotalForce');
model.physics('solid').feature('bndl1').set('Ftot', {'0' '0' '-PunchForce(para)*(para<=1)'});
model.physics('solid').feature.duplicate('bndl2', 'bndl1');
model.physics('solid').feature('bndl2').selection.set([5]);
model.physics('solid').feature('bndl2').set('Ftot', {'0' '0' '-PunchForce(para)*(para>=1.1)'});
model.physics('solid2').feature('lemm1').create('popl1', 'PorousPlasticity', 2);
model.physics('solid2').feature('lemm1').feature('popl1').set('YieldFunction', 'GTN');
model.physics('solid2').create('rd1', 'RigidDomain', 2);
model.physics('solid2').feature('rd1').selection.set([3]);
model.physics('solid2').feature('rd1').create('fix1', 'FixedConstraint', -1);
model.physics('solid2').feature('dcnt1').create('fric1', 'Friction', 1);
model.physics('solid2').feature('dcnt1').feature('fric1').set('mu_fric', 0.05);
model.physics('solid2').create('disp1', 'Displacement1', 1);
model.physics('solid2').feature('disp1').selection.set([2]);
model.physics('solid2').feature('disp1').setIndex('Direction', 'prescribed', 2);
model.physics('solid2').feature.duplicate('disp2', 'disp1');
model.physics('solid2').feature('disp2').selection.set([5]);
model.physics('solid2').feature('disp2').setIndex('U0', '-disp', 2);

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat1').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat1').label('Aluminum');
model.material('mat1').set('family', 'aluminum');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('heatcapacity', '900[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'238[W/(m*K)]' '0' '0' '0' '238[W/(m*K)]' '0' '0' '0' '238[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'3.774e7[S/m]' '0' '0' '0' '3.774e7[S/m]' '0' '0' '0' '3.774e7[S/m]'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'23e-6[1/K]' '0' '0' '0' '23e-6[1/K]' '0' '0' '0' '23e-6[1/K]'});
model.material('mat1').propertyGroup('def').set('density', '2700[kg/m^3]');
model.material('mat1').propertyGroup('Enu').set('E', '70[GPa]');
model.material('mat1').propertyGroup('Enu').set('nu', '0.33');
model.material('mat1').propertyGroup('Murnaghan').set('l', '-250[GPa]');
model.material('mat1').propertyGroup('Murnaghan').set('m', '-330[GPa]');
model.material('mat1').propertyGroup('Murnaghan').set('n', '-350[GPa]');
model.material('mat1').propertyGroup.create('PoroplasticModel', 'Poroplastic_material_model');
model.material('mat1').propertyGroup('PoroplasticModel').set('sigmags', {'sigmay0'});
model.material('mat1').propertyGroup('PoroplasticModel').set('f0', {'F0'});
model.material('mat1').propertyGroup('PoroplasticModel').set('fc', {'Fc'});
model.material('mat1').propertyGroup('PoroplasticModel').set('ff', {'Ff'});
model.material('mat1').propertyGroup('PoroplasticModel').set('q1GTN', {'q1'});
model.material('mat1').propertyGroup('PoroplasticModel').set('q2GTN', {'q2'});
model.material('mat1').propertyGroup('PoroplasticModel').set('q3GTN', {'q3'});

model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('map1').feature('dis1').selection.set([10 11]);
model.mesh('mesh1').feature('map1').feature('dis1').set('numelem', 1);
model.mesh('mesh1').run;
model.mesh('mesh1').feature('size').set('hauto', 3);
model.mesh('mesh1').run;

model.study('std1').label('Study: Two-Stage Compaction');
model.study('std1').feature('stat').set('useadvanceddisable', true);
model.study('std1').feature('stat').setSolveFor('/physics/solid2', false);
model.study('std1').feature('stat').set('disabledphysics', {'solid2'});
model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 'para', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 1, 0);
model.study('std1').feature('stat').setIndex('pname', 'para', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', 1, 0);
model.study('std1').feature('stat').setIndex('plistarr', 'range(0,1e-1,2)', 0);
model.study('std1').feature('stat').setIndex('punit', '', 0);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_solid_rd_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_rd_disp').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_rd_disp').set('scaleval', '5.590169943749475E-4');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.05590169943749475');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol1').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s1').set('control', 'stat');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'ddog');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'ddog');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 21, 0);
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('surf1').set('threshold', 'manual');
model.result('pg1').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg1').feature('surf1').set('colortable', 'Rainbow');
model.result('pg1').feature('surf1').set('colortabletrans', 'none');
model.result('pg1').feature('surf1').set('colorscalemode', 'linear');
model.result('pg1').feature('surf1').set('resolution', 'normal');
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg1').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg1').feature('surf1').feature('def').set('scale', '1');
model.result('pg1').feature('surf1').feature('def').set('expr', {'u' 'w'});
model.result('pg1').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg1').feature('surf1').create('filt1', 'Filter');
model.result('pg1').feature('surf1').feature('filt1').set('expr', 'solid.isactive');
model.result.dataset.create('dset1solidrev', 'Revolve2D');
model.result.dataset('dset1solidrev').set('data', 'dset1');
model.result.dataset('dset1solidrev').set('revangle', 225);
model.result.dataset('dset1solidrev').set('startangle', -90);
model.result.dataset('dset1solidrev').set('hasspacevars', true);
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'dset1solidrev');
model.result('pg2').setIndex('looplevel', 21, 0);
model.result('pg2').set('defaultPlotID', 'stress3D');
model.result('pg2').label('Stress, 3D (solid)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'solid.misesGp'});
model.result('pg2').feature('surf1').set('threshold', 'manual');
model.result('pg2').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg2').feature('surf1').set('colortable', 'Rainbow');
model.result('pg2').feature('surf1').set('colortabletrans', 'none');
model.result('pg2').feature('surf1').set('colorscalemode', 'linear');
model.result('pg2').feature('surf1').set('colortable', 'Prism');
model.result('pg2').feature('surf1').create('def', 'Deform');
model.result.dataset('dset1solidrev').set('hasspacevars', true);
model.result('pg2').feature('surf1').feature('def').set('revcoordsys', 'cylindrical');
model.result('pg2').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg2').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg2').feature('surf1').feature('def').set('descractive', true);
model.result('pg2').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg2').feature('surf1').feature('def').set('scale', '1');
model.result('pg2').feature('surf1').create('filt1', 'Filter');
model.result('pg2').feature('surf1').feature('filt1').set('expr', 'solid.isactive');
model.result('pg1').run;
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').set('data', 'dset1');
model.result('pg3').setIndex('looplevel', 21, 0);
model.result('pg3').label('Volumetric Plastic Strain (solid)');
model.result('pg3').set('defaultPlotID', 'volumetricPlasticStrain');
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', {'solid.epvolGp'});
model.result('pg3').feature('surf1').create('filt1', 'Filter');
model.result('pg3').feature('surf1').feature('filt1').set('expr', 'solid.isactive');
model.result('pg3').feature('surf1').set('inheritplot', 'none');
model.result('pg3').feature('surf1').set('resolution', 'normal');
model.result('pg3').feature('surf1').set('colortabletype', 'discrete');
model.result('pg3').feature('surf1').set('bandcount', 11);
model.result('pg3').feature('surf1').set('colortable', 'AuroraAustralisDark');
model.result('pg3').feature('surf1').set('descractive', true);
model.result('pg3').feature('surf1').set('descr', 'Volumetric plastic strain');
model.result('pg3').label('Volumetric Plastic Strain (solid)');
model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').set('data', 'dset1');
model.result('pg4').setIndex('looplevel', 21, 0);
model.result('pg4').label('Current Void Volume Fraction (solid)');
model.result('pg4').set('defaultPlotID', 'voidVolumeFraction');
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', {'solid.fGp'});
model.result('pg4').feature('surf1').create('filt1', 'Filter');
model.result('pg4').feature('surf1').feature('filt1').set('expr', 'solid.isactive');
model.result('pg4').feature('surf1').create('def', 'Deform');
model.result('pg4').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg4').feature('surf1').feature('def').set('scale', '1');
model.result('pg4').feature('surf1').feature('def').set('expr', {'u' 'w'});
model.result('pg4').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg4').feature('surf1').set('resolution', 'normal');
model.result('pg4').feature('surf1').set('colortabletype', 'discrete');
model.result('pg4').feature('surf1').set('bandcount', 11);
model.result('pg4').feature('surf1').set('colortable', 'Traffic');
model.result('pg4').feature('surf1').set('descractive', true);
model.result('pg4').feature('surf1').set('descr', 'Current void volume fraction');
model.result('pg4').label('Current Void Volume Fraction (solid)');
model.result('pg4').run;

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/solid', true);
model.study('std2').feature('stat').setSolveFor('/physics/solid2', true);
model.study('std2').label('Study: Single-Stage Compaction');
model.study('std2').feature('stat').set('useadvanceddisable', true);
model.study('std2').feature('stat').setSolveFor('/physics/solid', false);
model.study('std2').feature('stat').set('disabledphysics', {'solid'});
model.study('std2').feature('stat').set('useparam', true);
model.study('std2').feature('stat').setIndex('pname', 'para', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 1, 0);
model.study('std2').feature('stat').setIndex('pname', 'para', 0);
model.study('std2').feature('stat').setIndex('plistarr', '', 0);
model.study('std2').feature('stat').setIndex('punit', 1, 0);
model.study('std2').feature('stat').setIndex('pname', 'disp', 0);
model.study('std2').feature('stat').setIndex('plistarr', 'range(0,0.1,6.2)', 0);
model.study('std2').feature('stat').setIndex('punit', 'mm', 0);

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_u2').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_rd_disp2').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_rd_disp2').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_u2').set('scaleval', '1e-2*0.05590169943749475');
model.sol('sol2').feature('v1').feature('comp1_solid_rd_disp2').set('scaleval', '5.590169943749475E-4');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('p1', 'Parametric');
model.sol('sol2').feature('s1').feature.remove('pDef');
model.sol('sol2').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol2').feature('s1').feature('p1').set('control', 'stat');
model.sol('sol2').feature('s1').set('control', 'stat');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature('fc1').set('dtech', 'ddog');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol2').feature('s1').feature('fc1').set('dtech', 'ddog');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol2').runAll;

model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').set('data', 'dset2');
model.result('pg5').setIndex('looplevel', 63, 0);
model.result('pg5').set('defaultPlotID', 'stress');
model.result('pg5').label('Stress (solid2)');
model.result('pg5').set('frametype', 'spatial');
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', {'solid2.misesGp'});
model.result('pg5').feature('surf1').set('threshold', 'manual');
model.result('pg5').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg5').feature('surf1').set('colortable', 'Rainbow');
model.result('pg5').feature('surf1').set('colortabletrans', 'none');
model.result('pg5').feature('surf1').set('colorscalemode', 'linear');
model.result('pg5').feature('surf1').set('resolution', 'normal');
model.result('pg5').feature('surf1').set('colortable', 'Prism');
model.result('pg5').feature('surf1').create('def', 'Deform');
model.result('pg5').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg5').feature('surf1').feature('def').set('scale', '1');
model.result('pg5').feature('surf1').feature('def').set('expr', {'u2' 'w2'});
model.result('pg5').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result.dataset.create('dset2solid2rev', 'Revolve2D');
model.result.dataset('dset2solid2rev').set('data', 'dset2');
model.result.dataset('dset2solid2rev').set('revangle', 225);
model.result.dataset('dset2solid2rev').set('startangle', -90);
model.result.dataset('dset2solid2rev').set('hasspacevars', true);
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').set('data', 'dset2solid2rev');
model.result('pg6').setIndex('looplevel', 63, 0);
model.result('pg6').set('defaultPlotID', 'stress3D');
model.result('pg6').label('Stress, 3D (solid2)');
model.result('pg6').set('frametype', 'spatial');
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', {'solid2.misesGp'});
model.result('pg6').feature('surf1').set('threshold', 'manual');
model.result('pg6').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg6').feature('surf1').set('colortable', 'Rainbow');
model.result('pg6').feature('surf1').set('colortabletrans', 'none');
model.result('pg6').feature('surf1').set('colorscalemode', 'linear');
model.result('pg6').feature('surf1').set('colortable', 'Prism');
model.result('pg6').feature('surf1').create('def', 'Deform');
model.result.dataset('dset2solid2rev').set('hasspacevars', true);
model.result('pg6').feature('surf1').feature('def').set('revcoordsys', 'cylindrical');
model.result('pg6').feature('surf1').feature('def').set('expr', {'u2' 'v2' 'w2'});
model.result('pg6').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg6').feature('surf1').feature('def').set('descractive', true);
model.result('pg6').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg6').feature('surf1').feature('def').set('scale', '1');
model.result('pg5').run;
model.result.dataset.duplicate('dset3', 'dset1');
model.result.dataset('dset3').selection.geom('geom1', 2);
model.result.dataset('dset3').selection.geom('geom1', 2);
model.result.dataset('dset3').selection.set([3]);
model.result.dataset.duplicate('dset1solidrev1', 'dset1solidrev');
model.result.dataset('dset1solidrev1').set('data', 'dset3');
model.result.dataset.duplicate('dset4', 'dset2');
model.result.dataset('dset4').selection.geom('geom1', 2);
model.result.dataset('dset4').selection.geom('geom1', 2);
model.result.dataset('dset4').selection.set([3]);
model.result.dataset.duplicate('dset1solidrev2', 'dset1solidrev1');
model.result.dataset('dset1solidrev2').set('data', 'dset4');

model.nodeGroup.create('grp1', 'Results');
model.nodeGroup('grp1').set('type', 'dataset');
model.nodeGroup('grp1').placeAfter('dataset', 'dset2solid2rev');
model.nodeGroup('grp1').add('dataset', 'dset3');
model.nodeGroup('grp1').add('dataset', 'dset1solidrev1');
model.nodeGroup('grp1').add('dataset', 'dset4');
model.nodeGroup('grp1').add('dataset', 'dset1solidrev2');
model.nodeGroup('grp1').label('Datasets for Die');

model.result('pg1').run;
model.result('pg1').label('Stress, Two-Stage Compaction');
model.result('pg1').run;
model.result('pg1').feature('surf1').create('sel1', 'Selection');
model.result('pg1').feature('surf1').feature('sel1').selection.set([1 2]);
model.result('pg1').run;
model.result('pg1').feature.duplicate('surf2', 'surf1');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('surf2').feature.remove('sel1');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('surf2').set('data', 'dset3');
model.result('pg1').feature('surf2').set('titletype', 'none');
model.result('pg1').feature('surf2').create('mtrl1', 'MaterialAppearance');
model.result('pg1').run;
model.result('pg1').feature('surf2').feature('mtrl1').set('appearance', 'custom');
model.result('pg1').feature('surf2').feature('mtrl1').set('family', 'steel');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg5').run;
model.result.move('pg5', 1);
model.result('pg5').label('Stress, Single-Stage Compaction');
model.result('pg5').run;
model.result('pg5').feature('surf1').create('sel1', 'Selection');
model.result('pg5').feature('surf1').feature('sel1').selection.set([1 2]);
model.result('pg5').run;
model.result('pg5').feature.duplicate('surf2', 'surf1');
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').feature('surf2').feature.remove('sel1');
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').feature('surf2').set('data', 'dset4');
model.result('pg5').feature('surf2').set('titletype', 'none');
model.result('pg5').feature('surf2').create('mtrl1', 'MaterialAppearance');
model.result('pg5').run;
model.result('pg5').feature('surf2').feature('mtrl1').set('appearance', 'custom');
model.result('pg5').feature('surf2').feature('mtrl1').set('family', 'steel');
model.result('pg5').run;
model.result('pg5').run;
model.result('pg2').run;
model.result('pg2').label('Relative Density, Two-Stage Compaction');
model.result('pg2').run;
model.result('pg2').feature('surf1').set('expr', 'solid.rhorelGp');
model.result('pg2').feature('surf1').set('descr', 'Current relative density');
model.result('pg2').feature.duplicate('surf2', 'surf1');
model.result('pg2').run;
model.result('pg2').feature('surf2').set('data', 'dset1solidrev1');
model.result('pg2').feature('surf2').set('solutionparams', 'parent');
model.result('pg2').feature('surf2').set('expr', '1');
model.result('pg2').feature('surf2').set('titletype', 'none');
model.result('pg2').feature('surf2').set('coloring', 'uniform');
model.result('pg2').feature('surf2').set('color', 'gray');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg6').run;
model.result.move('pg6', 3);
model.result('pg6').label('Relative Density, Single-Stage Compaction');
model.result('pg6').run;
model.result('pg6').feature('surf1').set('expr', 'solid2.rhorelGp');
model.result('pg6').feature('surf1').set('descr', 'Current relative density');
model.result('pg6').feature.duplicate('surf2', 'surf1');
model.result('pg6').run;
model.result('pg6').feature('surf2').set('data', 'dset1solidrev2');
model.result('pg6').feature('surf2').set('solutionparams', 'parent');
model.result('pg6').feature('surf2').set('expr', '1');
model.result('pg6').feature('surf2').set('titletype', 'none');
model.result('pg6').feature('surf2').set('coloring', 'uniform');
model.result('pg6').feature('surf2').set('color', 'gray');
model.result('pg6').run;
model.result('pg6').run;
model.result('pg3').run;
model.result('pg3').label('Volumetric Plastic Strain');
model.result('pg3').set('edges', false);
model.result('pg3').run;
model.result('pg3').feature.duplicate('surf2', 'surf1');
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').feature('surf2').feature.remove('filt1');
model.result('pg3').run;
model.result('pg3').feature('surf2').set('data', 'dset2');
model.result('pg3').feature('surf2').set('expr', 'if(isnan(solid2.epvol),NaN,solid2.epvol)');
model.result('pg3').feature('surf2').set('titletype', 'none');
model.result('pg3').feature('surf2').set('inheritplot', 'surf1');
model.result('pg3').feature('surf2').create('trn1', 'Translation');
model.result('pg3').run;
model.result('pg3').feature('surf2').feature('trn1').set('trans', {'0' '50[mm]'});
model.result('pg3').run;
model.result('pg3').create('tlan1', 'TableAnnotation');
model.result('pg3').feature('tlan1').set('source', 'localtable');
model.result('pg3').feature('tlan1').setIndex('localtablematrix', 0.025, 0, 0);
model.result('pg3').feature('tlan1').setIndex('localtablematrix', 0.02, 0, 1);
model.result('pg3').feature('tlan1').setIndex('localtablematrix', 'Two-stage compaction', 0, 2);
model.result('pg3').feature('tlan1').setIndex('localtablematrix', 0.025, 1, 0);
model.result('pg3').feature('tlan1').setIndex('localtablematrix', 0.07, 1, 1);
model.result('pg3').feature('tlan1').setIndex('localtablematrix', 'Single-stage compaction', 1, 2);
model.result('pg3').feature('tlan1').set('showpoint', false);
model.result('pg3').run;
model.result('pg4').run;
model.result('pg4').label('Void Volume Fraction');
model.result('pg4').set('edges', false);
model.result('pg4').run;
model.result('pg4').feature.duplicate('surf2', 'surf1');
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').feature('surf1').feature.remove('def');
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').feature('surf2').feature.remove('filt1');
model.result('pg4').feature('surf2').feature.remove('def');
model.result('pg4').run;
model.result('pg4').feature('surf2').set('data', 'dset2');
model.result('pg4').feature('surf2').set('expr', 'if(isnan(solid2.f),NaN,solid2.f)');
model.result('pg4').feature('surf2').set('titletype', 'none');
model.result('pg4').feature('surf2').set('inheritplot', 'surf1');
model.result('pg4').feature('surf2').create('trn1', 'Translation');
model.result('pg4').run;
model.result('pg4').feature('surf2').feature('trn1').set('trans', {'0' '50[mm]'});
model.result('pg4').run;
model.result('pg4').create('tlan1', 'TableAnnotation');
model.result('pg4').feature('tlan1').set('source', 'localtable');
model.result('pg4').feature('tlan1').setIndex('localtablematrix', 0.025, 0, 0);
model.result('pg4').feature('tlan1').setIndex('localtablematrix', 0.02, 0, 1);
model.result('pg4').feature('tlan1').setIndex('localtablematrix', 'Two-stage compaction', 0, 2);
model.result('pg4').feature('tlan1').setIndex('localtablematrix', 0.025, 1, 0);
model.result('pg4').feature('tlan1').setIndex('localtablematrix', 0.07, 1, 1);
model.result('pg4').feature('tlan1').setIndex('localtablematrix', 'Single-stage compaction', 1, 2);
model.result('pg4').feature('tlan1').set('showpoint', false);
model.result('pg4').run;
model.result.evaluationGroup.create('eg1', 'EvaluationGroup');
model.result.evaluationGroup('eg1').label('Average Elastic Volumetric Strain, Two-Stage Compaction');
model.result.evaluationGroup('eg1').create('av1', 'AvSurface');
model.result.evaluationGroup('eg1').feature('av1').set('intvolume', true);
model.result.evaluationGroup('eg1').feature('av1').selection.set([1]);
model.result.evaluationGroup('eg1').feature('av1').setIndex('expr', 'para', 0);
model.result.evaluationGroup('eg1').feature('av1').setIndex('unit', 1, 0);
model.result.evaluationGroup('eg1').feature('av1').setIndex('descr', 'Parameter', 0);
model.result.evaluationGroup('eg1').feature('av1').setIndex('expr', 'solid.eelvol*solid.isactive', 1);
model.result.evaluationGroup('eg1').feature('av1').setIndex('unit', 1, 1);
model.result.evaluationGroup('eg1').feature('av1').setIndex('descr', 'Elastic volumetric strain', 1);
model.result.evaluationGroup('eg1').create('av2', 'AvSurface');
model.result.evaluationGroup('eg1').feature('av2').set('intvolume', true);
model.result.evaluationGroup('eg1').feature('av2').selection.set([2]);
model.result.evaluationGroup('eg1').feature('av2').setIndex('expr', 'solid.eelvol*solid.isactive', 0);
model.result.evaluationGroup('eg1').feature('av2').setIndex('unit', 1, 0);
model.result.evaluationGroup('eg1').feature('av2').setIndex('descr', 'Elastic volumetric strain', 0);
model.result.evaluationGroup('eg1').set('includeparameters', false);
model.result.evaluationGroup('eg1').run;
model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').run;
model.result('pg7').label('Average Elastic Volumetric Strain, Two-Stage Compaction');
model.result('pg7').create('tblp1', 'Table');
model.result('pg7').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg7').feature('tblp1').set('linewidth', 'preference');
model.result('pg7').feature('tblp1').set('source', 'evaluationgroup');
model.result('pg7').feature('tblp1').set('xaxisdata', 1);
model.result('pg7').feature('tblp1').set('legend', true);
model.result('pg7').feature('tblp1').set('legendmethod', 'manual');
model.result('pg7').feature('tblp1').setIndex('legends', 'First powder mold', 0);
model.result('pg7').feature('tblp1').setIndex('legends', 'Second powder mold', 1);
model.result('pg7').run;
model.result('pg7').create('ann1', 'Annotation');
model.result('pg7').feature('ann1').set('text', 'Elastic rebounding');
model.result('pg7').feature('ann1').set('posxexpr', 1.05);
model.result('pg7').feature('ann1').set('posyexpr', -0.0015);
model.result('pg7').feature('ann1').set('showpoint', false);
model.result('pg7').feature('ann1').set('showframe', true);
model.result('pg7').run;
model.result.create('pg8', 'PlotGroup1D');
model.result('pg8').run;
model.result('pg8').label('Punch Force vs. Axial Compaction');
model.result('pg8').set('xlabelactive', true);
model.result('pg8').set('ylabelactive', true);
model.result('pg8').set('ylabel', 'Punch force (kN)');
model.result('pg8').set('xlabel', 'Axial compaction (1)');
model.result('pg8').set('axislimits', true);
model.result('pg8').set('xmin', -0.003);
model.result('pg8').set('xmax', 0.16);
model.result('pg8').set('ymin', -10);
model.result('pg8').set('ymax', 320);
model.result('pg8').set('legendpos', 'lowerright');
model.result('pg8').create('glob1', 'Global');
model.result('pg8').feature('glob1').set('markerpos', 'datapoints');
model.result('pg8').feature('glob1').set('linewidth', 'preference');
model.result('pg8').feature('glob1').setIndex('expr', 'Force1', 0);
model.result('pg8').feature('glob1').setIndex('unit', 'kN', 0);
model.result('pg8').feature('glob1').setIndex('descr', 'Punch force, two-stage compaction', 0);
model.result('pg8').feature('glob1').set('xdata', 'expr');
model.result('pg8').feature('glob1').set('xdataexpr', 'delta');
model.result('pg8').feature('glob1').set('legendmethod', 'manual');
model.result('pg8').feature('glob1').setIndex('legends', 'Two-stage compaction', 0);
model.result('pg8').feature.duplicate('glob2', 'glob1');
model.result('pg8').run;
model.result('pg8').feature('glob2').set('data', 'dset2');
model.result('pg8').feature('glob2').setIndex('expr', 'Force2', 0);
model.result('pg8').feature('glob2').setIndex('unit', 'kN', 0);
model.result('pg8').feature('glob2').setIndex('descr', 'Punch force, single-stage compaction', 0);
model.result('pg8').feature('glob2').setIndex('legends', 'Single-stage compaction', 0);
model.result('pg8').run;
model.result.export.create('anim1', 'Animation');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('fontsize', '9');
model.result.export('anim1').set('colortheme', 'globaltheme');
model.result.export('anim1').set('customcolor', [1 1 1]);
model.result.export('anim1').set('background', 'color');
model.result.export('anim1').set('gltfincludelines', 'on');
model.result.export('anim1').set('title1d', 'on');
model.result.export('anim1').set('legend1d', 'on');
model.result.export('anim1').set('logo1d', 'on');
model.result.export('anim1').set('options1d', 'on');
model.result.export('anim1').set('title2d', 'on');
model.result.export('anim1').set('legend2d', 'on');
model.result.export('anim1').set('logo2d', 'on');
model.result.export('anim1').set('options2d', 'off');
model.result.export('anim1').set('title3d', 'on');
model.result.export('anim1').set('legend3d', 'on');
model.result.export('anim1').set('logo3d', 'on');
model.result.export('anim1').set('options3d', 'off');
model.result.export('anim1').set('axisorientation', 'on');
model.result.export('anim1').set('grid', 'on');
model.result.export('anim1').set('axes1d', 'on');
model.result.export('anim1').set('axes2d', 'on');
model.result.export('anim1').set('showgrid', 'on');
model.result.export('anim1').showFrame;
model.result.export('anim1').label('Relative Density, Two-Stage Compaction');
model.result.export('anim1').set('plotgroup', 'pg2');
model.result.export('anim1').set('frametime', 0.5);
model.result.export('anim1').set('synchronize', false);
model.result.export('anim1').showFrame;
model.result.export('anim1').set('maxframes', 21);
model.result.export('anim1').set('showframe', 21);
model.result.export.duplicate('anim2', 'anim1');
model.result.export('anim2').showFrame;
model.result.export('anim2').label('Relative Density, Single-Stage Compaction');
model.result.export('anim2').set('plotgroup', 'pg6');
model.result.export('anim2').showFrame;
model.result('pg2').run;

model.title('Two-Stage Powder Compaction Process');

model.description(['Powder compaction is a key process in powder metallurgy, where it gives the flexibility to produce quality products of complex shapes for sintering. The density of the compact is a key factor to determine the overall quality of the sintered product, as regions with lower density could reduce its mechanical strength.' newline  newline 'A multistage compaction process is one of way to achieve homogeneous density in the workpiece. In this example, a two-stage compaction process is demonstrated in a simple setup, and the outcome is compared with the results of a single-stage process.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('two_stage_compaction.mph');

model.modelNode.label('Components');

out = model;
