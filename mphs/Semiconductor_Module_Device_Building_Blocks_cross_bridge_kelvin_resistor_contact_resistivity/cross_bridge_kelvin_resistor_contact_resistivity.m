function out = model
%
% cross_bridge_kelvin_resistor_contact_resistivity.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Semiconductor_Module/Device_Building_Blocks');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('semi', 'Semiconductor', 'geom1');
model.physics('semi').model('comp1');
model.physics.create('gb', 'GeneralFormBoundaryPDE', 'geom1', {'V2D'});
model.physics('gb').prop('EquationForm').set('form', 'Automatic');
model.physics('gb').field('dimensionless').field('V2D');
model.physics('gb').prop('Units').set('DependentVariableQuantity', 'none');
model.physics('gb').prop('Units').set('CustomDependentVariableUnit', 'V');
model.physics('gb').prop('Units').set('CustomSourceTermUnit', 'V*m^-2');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/semi', true);
model.study('std1').feature('stat').setSolveFor('/physics/gb', true);

model.geom('geom1').lengthUnit([native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']);

model.param.set('l', '5[um]');
model.param.descr('l', 'Contact window size');
model.param.set('w', 'l+5[um]');
model.param.descr('w', 'Diffusion tap width');
model.param.set('lb', 'w');
model.param.descr('lb', 'Length of bridge');
model.param.set('d', '5000[angstrom]');
model.param.descr('d', 'Thickness of Si');
model.param.set('Rs', '11.0[ohm]');
model.param.descr('Rs', 'Sheet resistance');
model.param.set('mun0', '1450[cm^2/(V*s)]');
model.param.descr('mun0', 'Electron mobility');
model.param.set('Nd0', '1/(d*e_const*mun0*Rs)');
model.param.descr('Nd0', 'Doping concentration from Rs');
model.param.set('rho_c', '4.5e-8[ohm*cm^2]');
model.param.descr('rho_c', 'Specific contact resistivity');
model.param.set('lt', 'sqrt(rho_c/Rs)');
model.param.descr('lt', 'Transfer length');
model.param.set('V0', '100[uV]');
model.param.descr('V0', 'Applied voltage');

model.geom('geom1').create('wp1', 'WorkPlane');
model.geom('geom1').feature('wp1').set('unite', true);
model.geom('geom1').feature('wp1').geom.create('sq1', 'Square');
model.geom('geom1').feature('wp1').geom.feature('sq1').label('Square 1 - Contact window');
model.geom('geom1').feature('wp1').geom.feature('sq1').set('size', 'l');
model.geom('geom1').feature('wp1').geom.feature('sq1').set('base', 'center');
model.geom('geom1').feature('wp1').geom.run('sq1');
model.geom('geom1').feature('wp1').geom.create('pol1', 'Polygon');
model.geom('geom1').feature('wp1').geom.feature('pol1').set('source', 'table');
model.geom('geom1').feature('wp1').geom.feature('pol1').label('Polygon 1 - Bridge');
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', '-w/2-lb', 0, 0);
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', '-w/2', 0, 1);
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', '-w/2-lb', 1, 0);
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', 'w/2', 1, 1);
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', 'w/2', 2, 0);
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', 'w/2', 2, 1);
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', 'w/2', 3, 0);
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', '-w/2-lb', 3, 1);
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', '-w/2', 4, 0);
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', '-w/2-lb', 4, 1);
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', '-w/2', 5, 0);
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', '-w/2', 5, 1);
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', '-w/2-lb', 6, 0);
model.geom('geom1').feature('wp1').geom.feature('pol1').setIndex('table', '-w/2', 6, 1);
model.geom('geom1').run('wp1');
model.geom('geom1').feature.create('ext1', 'Extrude');
model.geom('geom1').feature('ext1').setIndex('distance', 'd', 0);
model.geom('geom1').runPre('fin');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('AroraMobilityModel', 'Arora mobility model');
model.material('mat1').propertyGroup.create('PowerLawMobilityModel', 'Power law mobility model');
model.material('mat1').propertyGroup.create('Auger', 'Auger recombination');
model.material('mat1').propertyGroup.create('Direct', 'Direct recombination');
model.material('mat1').propertyGroup.create('SRH', ['Shockley' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Read' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Hall recombination']);
model.material('mat1').propertyGroup.create('FletcherMobilityModel', 'Fletcher mobility model');
model.material('mat1').propertyGroup.create('CaugheyThomasMobilityModel', ['Caughey' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Thomas mobility model']);
model.material('mat1').propertyGroup.create('SemicondMaterial', 'Semiconductor material');
model.material('mat1').propertyGroup.create('LombardiSurfaceMobilityModel', 'Lombardi surface mobility model');
model.material('mat1').propertyGroup.create('ImpactIonization', 'Impact ionization');
model.material('mat1').propertyGroup.create('SlotboomModel', 'Slotboom model');
model.material('mat1').propertyGroup.create('JainRoulstonModel', ['Jain' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Roulston model']);
model.material('mat1').propertyGroup.create('KlaassenUnifiedMobilityModel', 'Klaassen unified mobility model');
model.material('mat1').label('Si - Silicon');
model.material('mat1').propertyGroup('def').set('relpermittivity', {'11.7' '0' '0' '0' '11.7' '0' '0' '0' '11.7'});
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'131[W/(m*K)]' '0' '0' '0' '131[W/(m*K)]' '0' '0' '0' '131[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('density', '2329[kg/m^3]');
model.material('mat1').propertyGroup('def').set('heatcapacity', '700[J/(kg*K)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mun0_ref_arora', '1252[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mup0_ref_arora', '407[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mun_min_ref_arora', '88[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('mup_min_ref_arora', '54.3[cm^2/(V*s)]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('Nn0_ref_arora', '1.26e17[1/cm^3]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('Np0_ref_arora', '2.35e17[1/cm^3]');
model.material('mat1').propertyGroup('AroraMobilityModel').set('alpha0_arora', '0.88');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta1_arora', '-0.57');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta2_arora', '-2.33');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta3_arora', '-2.33');
model.material('mat1').propertyGroup('AroraMobilityModel').set('beta4_arora', '-0.146');
model.material('mat1').propertyGroup('AroraMobilityModel').set('Tref_arora', '300[K]');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('mun0_pl', '1448[cm^2/(V*s)]');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('mup0_pl', '473[cm^2/(V*s)]');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('alphan_pl', '2.33');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('alphap_pl', '2.23');
model.material('mat1').propertyGroup('PowerLawMobilityModel').set('Tref_pl', '300[K]');
model.material('mat1').propertyGroup('Auger').set('Cn', '2.8e-31[cm^6/s]');
model.material('mat1').propertyGroup('Auger').set('Cp', '9.9e-32[cm^6/s]');
model.material('mat1').propertyGroup('Direct').set('C', '0[cm^3/s]');
model.material('mat1').propertyGroup('SRH').set('taun', '10[us]');
model.material('mat1').propertyGroup('SRH').set('taup', '10[us]');
model.material('mat1').propertyGroup('FletcherMobilityModel').set('F1_fl', '1.04e21[1/(cm^1*V*s)]');
model.material('mat1').propertyGroup('FletcherMobilityModel').set('F2_fl', '7.45e13[1/cm^2]');
model.material('mat1').propertyGroup('FletcherMobilityModel').set('Tref_fl', '300[K]');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').label(['Caughey' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Thomas mobility model']);
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('alphan0_ct', '1.11');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('alphap0_ct', '1.21');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('vn0_ct', '1e7[cm/s]');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('vp0_ct', '8.37e6[cm/s]');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betan1_ct', '0.66');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betap1_ct', '0.17');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betan2_ct', '-0.87');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('betap2_ct', '-0.52');
model.material('mat1').propertyGroup('CaugheyThomasMobilityModel').set('Tref_ct', '300[K]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Eg0', '1.12[V]');
model.material('mat1').propertyGroup('SemicondMaterial').set('chi0', '4.05[V]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Nv', '(T/300[K])^(3/2)*1.04e19[1/cm^3]');
model.material('mat1').propertyGroup('SemicondMaterial').set('Nc', '(T/300[K])^(3/2)*2.8e19[1/cm^3]');
model.material('mat1').propertyGroup('SemicondMaterial').set('mun', '1450[cm^2/(V*s)]');
model.material('mat1').propertyGroup('SemicondMaterial').set('mup', '500[cm^2/(V*s)]');
model.material('mat1').propertyGroup('SemicondMaterial').addInput('temperature');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('deltan_ls', '5.82e14[V/s]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('deltap_ls', '2.05e14[V/s]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mun1_ls', '4.75e7[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mup1_ls', '9.93e7[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mun2_ls', '1.74e5[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('mup2_ls', '8.84e5[cm^2/(V*s)]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('alphan_ls', '0.125');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('alphap_ls', '0.0317');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('Tref_ls', '1[K]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('Eref_ls', '1[V/cm]');
model.material('mat1').propertyGroup('LombardiSurfaceMobilityModel').set('Nref_ls', '1[1/cm^3]');
model.material('mat1').propertyGroup('ImpactIonization').set('an', '0.426');
model.material('mat1').propertyGroup('ImpactIonization').set('ap', '0.243');
model.material('mat1').propertyGroup('ImpactIonization').set('bn', '4.81E5[V/cm]');
model.material('mat1').propertyGroup('ImpactIonization').set('bp', '6.53E5[V/cm]');
model.material('mat1').propertyGroup('ImpactIonization').set('cnii', '3.05E-4');
model.material('mat1').propertyGroup('ImpactIonization').set('cpii', '5.35E-4');
model.material('mat1').propertyGroup('ImpactIonization').set('dn', '6.86E-4');
model.material('mat1').propertyGroup('ImpactIonization').set('dp', '5.67E-4');
model.material('mat1').propertyGroup('SlotboomModel').set('Eref_sb', '0.00692[V]');
model.material('mat1').propertyGroup('SlotboomModel').set('Nref_sb', '1.3e17[1/cm^3]');
model.material('mat1').propertyGroup('SlotboomModel').set('alpha_sb', '0.5');
model.material('mat1').propertyGroup('JainRoulstonModel').set('An_jr', '3.5e-8[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Bn_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Cn_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Ap_jr', '3.5e-8[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Bp_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Cp_jr', '0[V]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('Nref_jr', '1[1/cm^3]');
model.material('mat1').propertyGroup('JainRoulstonModel').set('alpha_jr', '0.5');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('T_ref_kl', '300[K]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_e_max_kl', '1414.0[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_h_max_kl', '470.5[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_e_min_kl', '68.5[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('mu_h_min_kl', '44.9[cm^2/V/s]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('theta_e_kl', '2.285');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('theta_h_kl', '2.247');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('alpha_e_1_kl', '0.711');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('alpha_h_1_kl', '0.719');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_e_1_kl', '9.20e16[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_h_1_kl', '2.23e17[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('c_D_kl', '0.21');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('c_A_kl', '0.50');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_D_kl', '4.0e20[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_ref_A_kl', '7.2e20[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('f_BH_kl', '3.828');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('f_CW_kl', '2.459');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('N_BH_kl', '1.36e20[cm^-3]');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('P_CW_kl', '3.97e13');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_1_kl', '0.89233');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_2_kl', '0.41372');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_3_kl', '0.19778');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_4_kl', '0.28227');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_5_kl', '0.005978');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_6_kl', '1.80618');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('s_7_kl', '0.72169');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_1_kl', '0.7643');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_2_kl', '2.2999');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_3_kl', '6.5502');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_4_kl', '2.3670');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_5_kl', '-0.01552');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('r_6_kl', '0.6478');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('m_e_kl', 'me_const');
model.material('mat1').propertyGroup('KlaassenUnifiedMobilityModel').set('m_h_kl', '1.258*me_const');

model.geom('geom1').run;

model.material('mat1').propertyGroup('SemicondMaterial').set('mun', {'mun0'});

model.physics('semi').prop('ModelProperties').set('Compute', 'MajorityPsi');
model.physics('semi').create('adm1', 'AnalyticDopingModel', 3);
model.physics('semi').feature('adm1').selection.all;
model.physics('semi').feature('adm1').set('impurityType', 'donor');
model.physics('semi').feature('adm1').set('NDc', 'Nd0');
model.physics('semi').create('mc1', 'MetalContact', 2);
model.physics('semi').feature('mc1').label('Metal Contact 1 - Input current');
model.physics('semi').feature('mc1').selection.set([1]);
model.physics('semi').feature('mc1').set('V0', 'V0');
model.physics('semi').create('mc2', 'MetalContact', 2);
model.physics('semi').feature('mc2').label('Metal Contact 2 - Bridge voltmeter');
model.physics('semi').feature('mc2').selection.set([7]);
model.physics('semi').feature('mc2').set('TerminalType', 'Current');
model.physics('semi').feature('mc2').set('V0_init', 'V0');
model.physics('semi').create('mc3', 'MetalContact', 2);
model.physics('semi').feature('mc3').label('Metal Contact 3 - Contact window');
model.physics('semi').feature('mc3').selection.set([11]);

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');
model.selection('sel1').geom(2);
model.selection('sel1').label('Contact window');
model.selection('sel1').set([11]);

model.physics('semi').feature('mc3').selection.named('sel1');
model.physics('semi').feature('mc3').set('ContactResistance', true);
model.physics('semi').feature('mc3').set('rho_c', 'rho_c');
model.physics('gb').selection.set([4 11]);
model.physics('gb').feature('gfeq1').label('General Form PDE 1 - L.H.S. of Eq. 17 in ref. paper');
model.physics('gb').feature('gfeq1').setIndex('Ga', {'V2DTx' '-V2DTy' '-V2DTz'}, 0);
model.physics('gb').feature('gfeq1').setIndex('Ga', {'V2DTx' 'V2DTy' '-V2DTz'}, 0);
model.physics('gb').feature('gfeq1').setIndex('Ga', {'V2DTx' 'V2DTy' 'V2DTz'}, 0);
model.physics('gb').feature('gfeq1').setIndex('f', 0, 0);
model.physics('gb').feature('gfeq1').setIndex('da', 0, 0);
model.physics('gb').create('src1', 'SourceTerm', 2);
model.physics('gb').feature('src1').label('Source 1 - R.H.S. of Eq. 17 in ref. paper');
model.physics('gb').feature('src1').selection.named('sel1');
model.physics('gb').feature('src1').setIndex('f', 'V2D/lt^2', 0);
model.physics('gb').create('dir1', 'DirichletBoundary', 1);
model.physics('gb').feature('dir1').label('Dirichlet Boundary Condition 1 - Input current');
model.physics('gb').feature('dir1').selection.set([4]);
model.physics('gb').feature('dir1').setIndex('r', 'V0', 0);

model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').geom(1);
model.selection('sel2').label('Input current (2D model)');
model.selection('sel2').set([4]);

model.physics('gb').feature('dir1').selection.named('sel2');
model.physics('gb').feature('dir1').setIndex('weakConstraints', 1, 0);

model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl('intop1').set('axisym', true);
model.cpl('intop1').label('Integration 1 - Input current');
model.cpl('intop1').selection.geom('geom1', 1);
model.cpl('intop1').selection.named('sel2');
model.cpl.create('intop2', 'Integration', 'geom1');
model.cpl('intop2').set('axisym', true);
model.cpl('intop2').label('Integration 2 - Bridge voltmeter');
model.cpl('intop2').selection.geom('geom1', 1);
model.cpl('intop2').selection.set([13]);

model.selection.create('sel3', 'Explicit');
model.selection('sel3').model('comp1');
model.selection('sel3').geom(1);
model.selection('sel3').label('Bridge voltmeter (2D model)');
model.selection('sel3').set([13]);

model.cpl('intop2').selection.named('sel3');
model.cpl.create('intop3', 'Integration', 'geom1');
model.cpl('intop3').set('axisym', true);
model.cpl('intop3').label('Integration 3 - Contact window');
model.cpl('intop3').selection.geom('geom1', 2);
model.cpl('intop3').selection.named('sel1');

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').set('I2D_1', 'intop1(V2D_lm[V/m]/Rs)');
model.variable('var1').descr('I2D_1', 'Input current (2D model)');
model.variable('var1').set('I2D_2', 'intop2(V2D_lm[V/m]/Rs)');
model.variable('var1').descr('I2D_2', 'Voltmeter current (2D model)');
model.variable('var1').set('I2D_3', 'intop3(V2D/rho_c)');
model.variable('var1').descr('I2D_3', 'Contact window current (2D model)');

model.physics('gb').create('dir2', 'DirichletBoundary', 1);
model.physics('gb').feature('dir2').label('Dirichlet Boundary Condition 2 - Bridge voltmeter');
model.physics('gb').feature('dir2').selection.named('sel3');
model.physics('gb').feature('dir2').setIndex('r', 'V2D_ode', 0);
model.physics('gb').feature('dir2').setIndex('weakConstraints', 1, 0);
model.physics('gb').create('ge1', 'GlobalEquations', -1);
model.physics('gb').feature('ge1').label('Global Equations 1 - Bridge voltmeter');
model.physics('gb').feature('ge1').set('CustomDependentVariableUnit', '1');
model.physics('gb').feature('ge1').set('DependentVariableQuantity', 'none');
model.physics('gb').feature('ge1').setIndex('CustomDependentVariableUnit', 'V', 0, 0);
model.physics('gb').feature('ge1').set('CustomSourceTermUnit', '1');
model.physics('gb').feature('ge1').set('SourceTermQuantity', 'none');
model.physics('gb').feature('ge1').setIndex('CustomSourceTermUnit', 'A', 0, 0);
model.physics('gb').feature('ge1').setIndex('name', 'V2D_ode', 0, 0);
model.physics('gb').feature('ge1').setIndex('equation', 'I2D_2', 0, 0);

model.mesh('mesh1').create('edg1', 'Edge');
model.mesh('mesh1').feature('edg1').selection.set([18 19 22 25]);
model.mesh('mesh1').feature('edg1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('edg1').feature('dis1').set('numelem', '20*l/5[um]');
model.mesh('mesh1').feature('size').set('custom', true);
model.mesh('mesh1').feature('size').set('hmax', 1.2);
model.mesh('mesh1').feature('size').set('hgrad', 1.3);
model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.set([4 11]);
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('swe1').feature('dis1').set('elemratio', 5);
model.mesh('mesh1').run;

model.study('std1').label('Study 1 - Rc vs. l');
model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'l', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);
model.study('std1').feature('param').setIndex('pname', 'l', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);
model.study('std1').feature('param').setIndex('plistarr', 'range(5,10,65)', 0);
model.study('std1').feature('param').setIndex('punit', 'um', 0);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 1.0E-5);
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', false);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').feature('aDef').set('assemtol', 0);
model.sol('sol1').feature('s1').create('se1', 'Segregated');
model.sol('sol1').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_V2D' 'comp1_V2D_lm' 'comp1_ODE1'});
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').label('General Form Boundary PDE');
model.sol('sol1').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_V' 'comp1_Ne' 'comp1_semi_n_bnd' 'comp1_semi_nJw' 'comp1_semi_V_dae' 'comp1_semi_mc2_V0_ode'});
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol1').feature('s1').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol1').feature('s1').feature('d1').set('ooc', 'off');
model.sol('sol1').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').label('Semiconductor');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'l'});
model.batch('p1').set('plistarr', {'range(5,10,65)'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol.create('sol2');
model.sol('sol2').study('std1');
model.sol('sol2').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').run('compute');

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').label('Electron Concentration (semi)');
model.result('pg1').set('data', 'dset2');
model.result('pg1').setIndex('looplevel', 7, 0);
model.result('pg1').set('showlegendsmaxmin', true);
model.result('pg1').set('data', 'dset2');
model.result('pg1').setIndex('looplevel', 7, 0);
model.result('pg1').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond3/pg1');
model.result('pg1').feature.create('vol1', 'Volume');
model.result('pg1').feature('vol1').set('showsolutionparams', 'on');
model.result('pg1').feature('vol1').set('expr', 'semi.N');
model.result('pg1').feature('vol1').set('unit', '1/cm^3');
model.result('pg1').feature('vol1').set('colortable', 'Prism');
model.result('pg1').feature('vol1').set('colorscalemode', 'logarithmic');
model.result('pg1').feature('vol1').set('resolution', 'norefine');
model.result('pg1').feature('vol1').set('smooth', 'internal');
model.result('pg1').feature('vol1').set('showsolutionparams', 'on');
model.result('pg1').feature('vol1').set('data', 'parent');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Hole Concentration (semi)');
model.result('pg2').set('data', 'dset2');
model.result('pg2').setIndex('looplevel', 7, 0);
model.result('pg2').set('showlegendsmaxmin', true);
model.result('pg2').set('data', 'dset2');
model.result('pg2').setIndex('looplevel', 7, 0);
model.result('pg2').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond3/pg2');
model.result('pg2').feature.create('vol1', 'Volume');
model.result('pg2').feature('vol1').set('showsolutionparams', 'on');
model.result('pg2').feature('vol1').set('expr', 'semi.P');
model.result('pg2').feature('vol1').set('unit', '1/cm^3');
model.result('pg2').feature('vol1').set('colortable', 'Prism');
model.result('pg2').feature('vol1').set('colorscalemode', 'logarithmic');
model.result('pg2').feature('vol1').set('resolution', 'norefine');
model.result('pg2').feature('vol1').set('smooth', 'internal');
model.result('pg2').feature('vol1').set('showsolutionparams', 'on');
model.result('pg2').feature('vol1').set('data', 'parent');
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').label('Electric Potential (semi)');
model.result('pg3').set('data', 'dset2');
model.result('pg3').setIndex('looplevel', 7, 0);
model.result('pg3').set('data', 'dset2');
model.result('pg3').setIndex('looplevel', 7, 0);
model.result('pg3').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond3/pg3');
model.result('pg3').feature.create('vol1', 'Volume');
model.result('pg3').feature('vol1').set('showsolutionparams', 'on');
model.result('pg3').feature('vol1').set('expr', 'V');
model.result('pg3').feature('vol1').set('resolution', 'norefine');
model.result('pg3').feature('vol1').set('smooth', 'internal');
model.result('pg3').feature('vol1').set('showsolutionparams', 'on');
model.result('pg3').feature('vol1').set('data', 'parent');
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').set('data', 'dset2');
model.result('pg4').create('vol2', 'Volume');
model.result('pg4').create('vol1', 'Volume');
model.result('pg4').feature('vol2').set('expr', 'semi.Nnetdop');
model.result('pg4').feature('vol2').set('unit', '1/cm^3');
model.result('pg4').feature('vol2').set('coloring', 'gradient');
model.result('pg4').feature('vol2').set('colorscalemode', 'logarithmic');
model.result('pg4').feature('vol2').set('topcolor', 'red');
model.result('pg4').feature('vol2').set('bottomcolor', 'custom');
model.result('pg4').feature('vol2').set('custombottomcolor', [1 0.8 0.8]);
model.result('pg4').feature('vol2').set('smooth', 'internal');
model.result('pg4').feature('vol2').set('showsolutionparams', 'on');
model.result('pg4').feature('vol2').set('data', 'parent');
model.result('pg4').feature('vol2').set('titletype', 'none');
model.result('pg4').feature('vol2').feature.create('filt1', 'Filter');
model.result('pg4').feature('vol2').feature('filt1').set('expr', 'semi.Na-semi.Nd > 1[1/cm^3]');
model.result('pg4').feature('vol2').feature('filt1').set('useder', true);
model.result('pg4').feature('vol1').set('expr', 'semi.Nnetdop');
model.result('pg4').feature('vol1').set('unit', '1/cm^3');
model.result('pg4').feature('vol1').set('coloring', 'gradient');
model.result('pg4').feature('vol1').set('colorscalemode', 'logarithmic');
model.result('pg4').feature('vol1').set('topcolor', 'blue');
model.result('pg4').feature('vol1').set('bottomcolor', 'custom');
model.result('pg4').feature('vol1').set('custombottomcolor', [0.8 0.8 1]);
model.result('pg4').feature('vol1').set('smooth', 'internal');
model.result('pg4').feature('vol1').set('showsolutionparams', 'on');
model.result('pg4').feature('vol1').set('data', 'parent');
model.result('pg4').feature('vol1').set('titletype', 'none');
model.result('pg4').feature('vol1').feature.create('filt1', 'Filter');
model.result('pg4').feature('vol1').feature('filt1').set('expr', 'semi.Nd-semi.Na > 1[1/cm^3]');
model.result('pg4').feature('vol1').feature('filt1').set('useder', true);
model.result('pg4').set('titletype', 'manual');
model.result('pg4').set('title', 'Net Dopant Concentration \vert N<sub>d</sub> - N<sub>a</sub>\vert: P-type (Red), N-type (Blue)');
model.result('pg4').set('showlegendsmaxmin', true);
model.result('pg4').set('showlegendsunit', true);
model.result('pg4').set('legendpos', 'alternating');
model.result('pg4').feature('vol2').label('P-type');
model.result('pg4').feature('vol1').label('N-type');
model.result('pg4').label('Net Dopant Concentration (semi)');
model.result.numerical.create('gev1', 'EvalGlobal');
model.result.numerical('gev1').set('data', 'dset2');
model.result.numerical('gev1').set('expr', {'V2D_ode'});
model.result.numerical('gev1').set('descr', {'State variable V2D_ode'});
model.result.create('pg5', 'PlotGroup3D');
model.result('pg5').set('data', 'dset2');
model.result('pg5').setIndex('looplevel', 7, 0);
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').label('General Form Boundary PDE');
model.result('pg5').feature('surf1').set('expr', 'V2D');
model.result('pg1').run;
model.result.evaluationGroup.create('eg1', 'EvaluationGroup');
model.result.evaluationGroup('eg1').label('Evaluation Group 1 - Rc vs. l');
model.result.evaluationGroup('eg1').set('data', 'dset2');
model.result.evaluationGroup('eg1').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Bridge voltmeter (2D model)', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'semi.V0_2', 1);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Bridge voltmeter', 1);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'I2D_1', 2);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Input current (2D model)', 2);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'I2D_3', 3);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Contact window current (2D model)', 3);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'semi.I0_1', 4);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Input current', 4);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'semi.I0_3', 5);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Contact window current', 5);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'I2D_2', 6);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Voltmeter current (2D model)', 6);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'semi.I0_2', 7);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', 'Voltmeter current', 7);
model.result.evaluationGroup('eg1').run;
model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').run;
model.result('pg6').label('Rc vs. l');
model.result('pg6').set('data', 'dset2');
model.result('pg6').set('ylabelactive', true);
model.result('pg6').set('ylabel', ['Kelvin contact resistance (' 'ohm' ')']);
model.result('pg6').set('axislimits', true);
model.result('pg6').set('xmin', 10);
model.result('pg6').set('xmax', '1e4');
model.result('pg6').set('ymin', 0.01);
model.result('pg6').set('ymax', 10);
model.result('pg6').set('xlog', true);
model.result('pg6').set('ylog', true);
model.result('pg6').create('glob1', 'Global');
model.result('pg6').feature('glob1').set('markerpos', 'datapoints');
model.result('pg6').feature('glob1').set('linewidth', 'preference');
model.result('pg6').feature('glob1').setIndex('expr', '-V2D_ode/I2D_1', 0);
model.result('pg6').feature('glob1').setIndex('descr', 'Rc (2D model)', 0);
model.result('pg6').feature('glob1').setIndex('expr', 'semi.V0_2/semi.I0_1', 1);
model.result('pg6').feature('glob1').setIndex('descr', 'Rc', 1);
model.result('pg6').feature('glob1').set('xdata', 'expr');
model.result('pg6').feature('glob1').set('xdataexpr', 'l^2');
model.result('pg6').feature('glob1').set('xdataunit', [native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm^2']);
model.result('pg6').feature('glob1').set('xdatadescractive', true);
model.result('pg6').feature('glob1').set('xdatadescr', 'Contact area');
model.result('pg6').feature('glob1').set('linestyle', 'cycle');
model.result('pg6').feature('glob1').set('linewidth', 2);
model.result('pg6').run;

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/semi', true);
model.study('std2').feature('stat').setSolveFor('/physics/gb', true);

model.geom('geom1').run;

model.study('std2').label('Study 2 - Rc vs. w');
model.study('std2').create('param', 'Parametric');
model.study('std2').feature('param').setIndex('pname', 'l', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', 'm', 0);
model.study('std2').feature('param').setIndex('pname', 'l', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', 'm', 0);
model.study('std2').feature('param').setIndex('pname', 'w', 0);
model.study('std2').feature('param').setIndex('plistarr', '5.5 7 10 16 30 60', 0);
model.study('std2').feature('param').setIndex('punit', 'um', 0);

model.sol.create('sol10');
model.sol('sol10').study('std2');
model.sol('sol10').create('st1', 'StudyStep');
model.sol('sol10').feature('st1').set('study', 'std2');
model.sol('sol10').feature('st1').set('studystep', 'stat');
model.sol('sol10').create('v1', 'Variables');
model.sol('sol10').feature('v1').set('control', 'stat');
model.sol('sol10').create('s1', 'Stationary');
model.sol('sol10').feature('s1').set('stol', 1.0E-5);
model.sol('sol10').feature('s1').feature('aDef').set('complexfun', false);
model.sol('sol10').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol10').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol10').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol10').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol10').feature('s1').feature('aDef').set('assemtol', 0);
model.sol('sol10').feature('s1').create('se1', 'Segregated');
model.sol('sol10').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol10').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol10').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_V2D' 'comp1_V2D_lm' 'comp1_ODE1'});
model.sol('sol10').feature('s1').feature('se1').feature('ss1').set('linsolver', 'dDef');
model.sol('sol10').feature('s1').feature('se1').feature('ss1').label('General Form Boundary PDE');
model.sol('sol10').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol10').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_V' 'comp1_Ne' 'comp1_semi_n_bnd' 'comp1_semi_nJw' 'comp1_semi_V_dae' 'comp1_semi_mc2_V0_ode'});
model.sol('sol10').feature('s1').create('d1', 'Direct');
model.sol('sol10').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol10').feature('s1').feature('d1').set('mumpsalloc', 1.2);
model.sol('sol10').feature('s1').feature('d1').set('ooc', 'off');
model.sol('sol10').feature('s1').feature('d1').set('errorchk', 'off');
model.sol('sol10').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd1');
model.sol('sol10').feature('s1').feature('se1').feature('ss2').label('Semiconductor');
model.sol('sol10').feature('s1').feature.remove('fcDef');
model.sol('sol10').attach('std2');

model.batch.create('p2', 'Parametric');
model.batch('p2').study('std2');
model.batch('p2').create('so1', 'Solutionseq');
model.batch('p2').feature('so1').set('seq', 'sol10');
model.batch('p2').feature('so1').set('store', 'on');
model.batch('p2').feature('so1').set('clear', 'on');
model.batch('p2').feature('so1').set('psol', 'none');
model.batch('p2').set('pname', {'w'});
model.batch('p2').set('plistarr', {'5.5 7 10 16 30 60'});
model.batch('p2').set('sweeptype', 'sparse');
model.batch('p2').set('probesel', 'all');
model.batch('p2').set('probes', {});
model.batch('p2').set('plot', 'off');
model.batch('p2').set('err', 'on');
model.batch('p2').attach('std2');
model.batch('p2').set('control', 'param');

model.sol.create('sol11');
model.sol('sol11').study('std2');
model.sol('sol11').label('Parametric Solutions 2');

model.batch('p2').feature('so1').set('psol', 'sol11');
model.batch('p2').run('compute');

model.result.create('pg7', 'PlotGroup3D');
model.result('pg7').label('Electron Concentration (semi) 1');
model.result('pg7').set('data', 'dset4');
model.result('pg7').setIndex('looplevel', 6, 0);
model.result('pg7').set('showlegendsmaxmin', true);
model.result('pg7').set('data', 'dset4');
model.result('pg7').setIndex('looplevel', 6, 0);
model.result('pg7').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond3/pg1');
model.result('pg7').feature.create('vol1', 'Volume');
model.result('pg7').feature('vol1').set('showsolutionparams', 'on');
model.result('pg7').feature('vol1').set('expr', 'semi.N');
model.result('pg7').feature('vol1').set('unit', '1/cm^3');
model.result('pg7').feature('vol1').set('colortable', 'Prism');
model.result('pg7').feature('vol1').set('colorscalemode', 'logarithmic');
model.result('pg7').feature('vol1').set('resolution', 'norefine');
model.result('pg7').feature('vol1').set('smooth', 'internal');
model.result('pg7').feature('vol1').set('showsolutionparams', 'on');
model.result('pg7').feature('vol1').set('data', 'parent');
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').label('Hole Concentration (semi) 1');
model.result('pg8').set('data', 'dset4');
model.result('pg8').setIndex('looplevel', 6, 0);
model.result('pg8').set('showlegendsmaxmin', true);
model.result('pg8').set('data', 'dset4');
model.result('pg8').setIndex('looplevel', 6, 0);
model.result('pg8').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond3/pg2');
model.result('pg8').feature.create('vol1', 'Volume');
model.result('pg8').feature('vol1').set('showsolutionparams', 'on');
model.result('pg8').feature('vol1').set('expr', 'semi.P');
model.result('pg8').feature('vol1').set('unit', '1/cm^3');
model.result('pg8').feature('vol1').set('colortable', 'Prism');
model.result('pg8').feature('vol1').set('colorscalemode', 'logarithmic');
model.result('pg8').feature('vol1').set('resolution', 'norefine');
model.result('pg8').feature('vol1').set('smooth', 'internal');
model.result('pg8').feature('vol1').set('showsolutionparams', 'on');
model.result('pg8').feature('vol1').set('data', 'parent');
model.result.create('pg9', 'PlotGroup3D');
model.result('pg9').label('Electric Potential (semi) 1');
model.result('pg9').set('data', 'dset4');
model.result('pg9').setIndex('looplevel', 6, 0);
model.result('pg9').set('data', 'dset4');
model.result('pg9').setIndex('looplevel', 6, 0);
model.result('pg9').set('defaultPlotID', 'Semiconductor/phys3/pdef1/pcond3/pg3');
model.result('pg9').feature.create('vol1', 'Volume');
model.result('pg9').feature('vol1').set('showsolutionparams', 'on');
model.result('pg9').feature('vol1').set('expr', 'V');
model.result('pg9').feature('vol1').set('resolution', 'norefine');
model.result('pg9').feature('vol1').set('smooth', 'internal');
model.result('pg9').feature('vol1').set('showsolutionparams', 'on');
model.result('pg9').feature('vol1').set('data', 'parent');
model.result.create('pg10', 'PlotGroup3D');
model.result('pg10').set('data', 'dset4');
model.result('pg10').create('vol2', 'Volume');
model.result('pg10').create('vol1', 'Volume');
model.result('pg10').feature('vol2').set('expr', 'semi.Nnetdop');
model.result('pg10').feature('vol2').set('unit', '1/cm^3');
model.result('pg10').feature('vol2').set('coloring', 'gradient');
model.result('pg10').feature('vol2').set('colorscalemode', 'logarithmic');
model.result('pg10').feature('vol2').set('topcolor', 'red');
model.result('pg10').feature('vol2').set('bottomcolor', 'custom');
model.result('pg10').feature('vol2').set('custombottomcolor', [1 0.8 0.8]);
model.result('pg10').feature('vol2').set('smooth', 'internal');
model.result('pg10').feature('vol2').set('showsolutionparams', 'on');
model.result('pg10').feature('vol2').set('data', 'parent');
model.result('pg10').feature('vol2').set('titletype', 'none');
model.result('pg10').feature('vol2').feature.create('filt1', 'Filter');
model.result('pg10').feature('vol2').feature('filt1').set('expr', 'semi.Na-semi.Nd > 1[1/cm^3]');
model.result('pg10').feature('vol2').feature('filt1').set('useder', true);
model.result('pg10').feature('vol1').set('expr', 'semi.Nnetdop');
model.result('pg10').feature('vol1').set('unit', '1/cm^3');
model.result('pg10').feature('vol1').set('coloring', 'gradient');
model.result('pg10').feature('vol1').set('colorscalemode', 'logarithmic');
model.result('pg10').feature('vol1').set('topcolor', 'blue');
model.result('pg10').feature('vol1').set('bottomcolor', 'custom');
model.result('pg10').feature('vol1').set('custombottomcolor', [0.8 0.8 1]);
model.result('pg10').feature('vol1').set('smooth', 'internal');
model.result('pg10').feature('vol1').set('showsolutionparams', 'on');
model.result('pg10').feature('vol1').set('data', 'parent');
model.result('pg10').feature('vol1').set('titletype', 'none');
model.result('pg10').feature('vol1').feature.create('filt1', 'Filter');
model.result('pg10').feature('vol1').feature('filt1').set('expr', 'semi.Nd-semi.Na > 1[1/cm^3]');
model.result('pg10').feature('vol1').feature('filt1').set('useder', true);
model.result('pg10').set('titletype', 'manual');
model.result('pg10').set('title', 'Net Dopant Concentration \vert N<sub>d</sub> - N<sub>a</sub>\vert: P-type (Red), N-type (Blue)');
model.result('pg10').set('showlegendsmaxmin', true);
model.result('pg10').set('showlegendsunit', true);
model.result('pg10').set('legendpos', 'alternating');
model.result('pg10').feature('vol2').label('P-type');
model.result('pg10').feature('vol1').label('N-type');
model.result('pg10').label('Net Dopant Concentration (semi) 1');
model.result.numerical.create('gev2', 'EvalGlobal');
model.result.numerical('gev2').set('data', 'dset4');
model.result.numerical('gev2').set('expr', {'V2D_ode'});
model.result.numerical('gev2').set('descr', {'State variable V2D_ode'});
model.result.create('pg11', 'PlotGroup3D');
model.result('pg11').set('data', 'dset4');
model.result('pg11').setIndex('looplevel', 6, 0);
model.result('pg11').create('surf1', 'Surface');
model.result('pg11').label('General Form Boundary PDE 1');
model.result('pg11').feature('surf1').set('expr', 'V2D');
model.result('pg7').run;
model.result.evaluationGroup.duplicate('eg2', 'eg1');
model.result.evaluationGroup('eg2').label('Evaluation Group 2 - Rc vs. w');
model.result.evaluationGroup('eg2').set('data', 'dset4');
model.result.evaluationGroup('eg2').run;
model.result('pg6').run;
model.result.duplicate('pg12', 'pg6');
model.result('pg12').run;
model.result('pg12').label('Rc vs. w');
model.result('pg12').set('data', 'dset4');
model.result('pg12').set('xmin', 0);
model.result('pg12').set('xmax', 70);
model.result('pg12').set('ymin', 0.1);
model.result('pg12').set('xlog', false);
model.result('pg12').run;
model.result('pg12').feature('glob1').set('xdata', 'solution');
model.result('pg12').run;
model.result('pg3').run;
model.result.duplicate('pg13', 'pg3');
model.result('pg13').run;
model.result('pg13').label('Model Thumbnail');
model.result('pg13').setIndex('looplevel', 1, 0);
model.result('pg13').set('view', 'new');
model.result('pg13').set('showlegends', false);
model.result('pg13').run;

model.view('view3').camera.set('viewscaletype', 'manual');
model.view('view3').camera.set('zscale', 5);

model.result('pg13').run;
model.result('pg13').feature('vol1').set('colortable', 'JupiterAuroraBorealis');
model.result('pg13').feature('vol1').create('tran1', 'Transparency');
model.result('pg13').run;
model.result('pg13').run;
model.result('pg13').create('str1', 'Streamline');
model.result('pg13').feature('str1').set('expr', {'semi.JX' 'semi.JY' 'semi.JZ'});
model.result('pg13').feature('str1').set('descr', 'Total current density, nodal value');
model.result('pg13').feature('str1').set('posmethod', 'start');
model.result('pg13').feature('str1').set('startmethod', 'coord');
model.result('pg13').feature('str1').set('xcoord', '-15 -15 -15 -15 -15 -15 -15 -15 -15 -15 -15 -15 -15 -15 -15 -15 -15 -15');
model.result('pg13').feature('str1').set('ycoord', '-4.17 -2.5 -0.83 0.83 2.5 4.17 -4.17 -2.5 -0.83 0.83 2.5 4.17 -4.17 -2.5 -0.83 0.83 2.5 4.17');
model.result('pg13').feature('str1').set('zcoord', '0.083 0.083 0.083 0.083 0.083 0.083 0.25 0.25 0.25 0.25 0.25 0.25 0.417 0.417 0.417 0.417 0.417 0.417');
model.result('pg13').feature('str1').set('pointtype', 'arrow');
model.result('pg13').run;
model.result('pg13').create('arws1', 'ArrowSurface');
model.result('pg13').feature('arws1').set('expr', {'semi.JX' 'semi.JY' 'semi.JZ'});
model.result('pg13').feature('arws1').set('descr', 'Total current density, nodal value');
model.result('pg13').feature('arws1').set('placement', 'uniformani');
model.result('pg13').feature('arws1').set('arrowcount', 18);
model.result('pg13').feature('arws1').set('weight', [1 1 10]);
model.result('pg13').feature('arws1').set('arrowbase', 'head');
model.result('pg13').feature('arws1').set('scaleactive', true);
model.result('pg13').feature('arws1').set('scale', '1e-6');
model.result('pg13').feature('arws1').create('sel1', 'Selection');
model.result('pg13').feature('arws1').feature('sel1').selection.set([1]);
model.result('pg13').run;
model.result('pg13').create('arws2', 'ArrowSurface');
model.result('pg13').feature('arws2').set('expr', {'semi.JX' 'semi.JY' 'semi.JZ'});
model.result('pg13').feature('arws2').set('descr', 'Total current density, nodal value');
model.result('pg13').feature('arws2').set('arrowcount', 30);
model.result('pg13').feature('arws2').set('arrowlength', 'logarithmic');
model.result('pg13').feature('arws2').set('scaleactive', true);
model.result('pg13').feature('arws2').set('scale', '1.5e-6');
model.result('pg13').feature('arws2').create('sel1', 'Selection');
model.result('pg13').feature('arws2').feature('sel1').selection.named('sel1');
model.result('pg13').run;

model.title('A Cross-Bridge Kelvin Resistor Model for the Extraction of Specific Contact Resistivity');

model.description('This benchmark example builds two models of a cross-bridge Kelvin resistor used for extracting the specific contact resistivity. The first model simulates the system in 3D, using the contact resistance feature built in the Semiconductor interface. The other model is a 2D approximation of the system developed in the reference paper, implemented using a boundary PDE math interface. The computed Kelvin contact resistance as a function of the contact window size and the diffusion tap width correlates well between the two models, and agrees well with the result shown in the reference paper.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;
model.sol('sol8').clearSolutionData;
model.sol('sol9').clearSolutionData;
model.sol('sol10').clearSolutionData;
model.sol('sol11').clearSolutionData;
model.sol('sol12').clearSolutionData;
model.sol('sol13').clearSolutionData;
model.sol('sol14').clearSolutionData;
model.sol('sol15').clearSolutionData;
model.sol('sol16').clearSolutionData;
model.sol('sol17').clearSolutionData;

model.label('cross_bridge_kelvin_resistor_contact_resistivity.mph');

model.modelNode.label('Components');

out = model;
