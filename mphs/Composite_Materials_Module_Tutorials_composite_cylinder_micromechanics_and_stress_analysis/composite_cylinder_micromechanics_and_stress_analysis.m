function out = model
%
% composite_cylinder_micromechanics_and_stress_analysis.m
%
% Model exported on May 26 2025, 21:27 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Composite_Materials_Module/Tutorials');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('L', '1[mm]', 'Unit cell length');
model.param.set('V', 'L^3', 'Unit cell volume');
model.param.set('v_f', '0.6', 'Fiber volume fraction');
model.param.set('V_f', 'v_f*V', 'Fiber volume');
model.param.set('E1_f', '230[GPa]', 'Fiber Young''s modulus, 11 direction');
model.param.set('E2_f', '15[GPa]', 'Fiber Young''s modulus, 22 direction');
model.param.set('G12_f', '15[GPa]', 'Fiber shear modulus, 12 direction');
model.param.set('nu12_f', '0.2', 'Fiber Poisson''s ratio, 12 direction');
model.param.set('nu23_f', '0.07', 'Fiber Poisson''s ratio, 23 direction');
model.param.set('E_r', '4[GPa]', 'Resin Young''s modulus');
model.param.set('nu_r', '0.35', 'Resin Poisson''s ratio');
model.param.set('rho_f', '1800[kg/m^3]', 'Fiber density');
model.param.set('rho_r', '1100[kg/m^3]', 'Resin density');
model.param.set('rho_l', 'rho_f*v_f+rho_r*(1-v_f)', 'Lamina density');
model.param.set('th', '1[mm]', 'Lamina thickness');
model.param.set('rc', '100[mm]', 'Cylinder radius');
model.param.set('hc', '500[mm]', 'Cylinder height');
model.param.set('Ftot', '1000[N]', 'Total load');

model.geom.load({'part1'}, 'COMSOL_Multiphysics/Unit_Cells_and_RVEs/Fiber_Composites/unidirectional_fiber_square_packing.mph', {'part2'});
model.geom('geom1').create('pi1', 'PartInstance');
model.geom('geom1').feature('pi1').set('selkeepnoncontr', false);
model.geom('geom1').feature('pi1').set('part', 'part1');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'vf', 'v_f');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'wm', 'L');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'dm', 'L');
model.geom('geom1').feature('pi1').setEntry('inputexpr', 'hm', 'L');
model.geom('geom1').run('fin');

model.physics('solid').create('cp1', 'CellPeriodicity', 3);
model.physics('solid').feature('cp1').set('BoundaryExpansion', 'PrescribedStrain');
model.physics('solid').feature('cp1').set('EffectivePropertiese', 'ElasticityMatrixStandard');
model.physics('solid').feature('cp1').create('bp1', 'BoundaryPair', 2);
model.physics('solid').feature('cp1').feature('bp1').selection.set([1 5 11 12]);
model.physics('solid').feature('cp1').feature.duplicate('bp2', 'bp1');
model.physics('solid').feature('cp1').feature('bp2').selection.set([2 10]);
model.physics('solid').feature('cp1').feature.duplicate('bp3', 'bp2');
model.physics('solid').feature('cp1').feature('bp3').selection.set([3 4]);
model.physics('solid').feature('cp1').runCommand('createLoadGroupsandStudy');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').label('Material 1: Epoxy Resin');
model.material('mat1').selection.set([1]);
model.material('mat1').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat1').propertyGroup('Enu').set('E', {'E_r'});
model.material('mat1').propertyGroup('Enu').set('nu', {'nu_r'});
model.material('mat1').propertyGroup('def').set('density', {'rho_r'});

model.physics('solid').feature('lemm1').set('SolidModel', 'Orthotropic');
model.physics('solid').feature('lemm1').set('TransverseIsotropic', true);

model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').label('Material 2: Carbon Fiber');
model.material('mat2').selection.set([2]);
model.material('mat2').propertyGroup.create('TransverseIsotropic', 'Transversely_isotropic');
model.material('mat2').propertyGroup('TransverseIsotropic').set('Evect', {'E1_f' 'E2_f'});
model.material('mat2').propertyGroup('TransverseIsotropic').set('nuvect', {'nu12_f' 'nu23_f'});
model.material('mat2').propertyGroup('TransverseIsotropic').set('Gvect1', {'G12_f'});
model.material('mat2').propertyGroup('def').set('density', {'rho_f'});

model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.set([1 5]);
model.mesh('mesh1').run('ftri1');
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').run('swe1');

model.sol('solidcp1sol').study('solidcp1std');
model.sol('solidcp1sol').feature.remove('s1');
model.sol('solidcp1sol').feature.remove('v1');
model.sol('solidcp1sol').feature.remove('st1');
model.sol('solidcp1sol').create('st1', 'StudyStep');
model.sol('solidcp1sol').feature('st1').set('study', 'solidcp1std');
model.sol('solidcp1sol').feature('st1').set('studystep', 'solidcp1stat');
model.sol('solidcp1sol').create('v1', 'Variables');
model.sol('solidcp1sol').feature('v1').set('control', 'solidcp1stat');
model.sol('solidcp1sol').create('s1', 'Stationary');
model.sol('solidcp1sol').feature('s1').create('p1', 'Parametric');
model.sol('solidcp1sol').feature('s1').feature.remove('pDef');
model.sol('solidcp1sol').feature('s1').feature('p1').set('control', 'solidcp1stat');
model.sol('solidcp1sol').feature('s1').set('control', 'solidcp1stat');
model.sol('solidcp1sol').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('solidcp1sol').feature('s1').create('fc1', 'FullyCoupled');
model.sol('solidcp1sol').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('solidcp1sol').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('solidcp1sol').feature('s1').create('d1', 'Direct');
model.sol('solidcp1sol').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('solidcp1sol').feature('s1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('solidcp1sol').feature('s1').create('i1', 'Iterative');
model.sol('solidcp1sol').feature('s1').feature('i1').set('linsolver', 'fgmres');
model.sol('solidcp1sol').feature('s1').feature('i1').set('rhob', 400);
model.sol('solidcp1sol').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('solidcp1sol').feature('s1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('solidcp1sol').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('solidcp1sol').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('solidcp1sol').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('solidcp1sol').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('solidcp1sol').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('solidcp1sol').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('solidcp1sol').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('solidcp1sol').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('solidcp1sol').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('solidcp1sol').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('solidcp1sol').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('solidcp1sol').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('solidcp1sol').feature('s1').feature.remove('fcDef');
model.sol('solidcp1sol').attach('solidcp1std');
model.sol('solidcp1sol').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 6, 0);
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('vol1', 'Volume');
model.result('pg1').feature('vol1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('vol1').set('threshold', 'manual');
model.result('pg1').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg1').feature('vol1').set('colortable', 'Rainbow');
model.result('pg1').feature('vol1').set('colortabletrans', 'none');
model.result('pg1').feature('vol1').set('colorscalemode', 'linear');
model.result('pg1').feature('vol1').set('resolution', 'custom');
model.result('pg1').feature('vol1').set('refine', 2);
model.result('pg1').feature('vol1').set('colortable', 'Prism');
model.result('pg1').feature('vol1').create('def', 'Deform');
model.result('pg1').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg1').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result.evaluationGroup.create('solidcp1stdEg', 'EvaluationGroup');
model.result.evaluationGroup('solidcp1stdEg').set('defaultPlotID', 'homogenizedMaterialTablecp1');
model.result.evaluationGroup('solidcp1stdEg').set('data', 'dset1');
model.result.evaluationGroup('solidcp1stdEg').set('includeparameters', 'off');
model.result.evaluationGroup('solidcp1stdEg').setIndex('looplevelinput', 'last', 0);
model.result.evaluationGroup('solidcp1stdEg').label('Material Properties (Cell Periodicity Study)');
model.result.evaluationGroup('solidcp1stdEg').create('gmevcp1', 'EvalGlobalMatrix');
model.result.evaluationGroup('solidcp1stdEg').feature('gmevcp1').set('expr', 'root.comp1.solid.cp1.D');
model.result.evaluationGroup('solidcp1stdEg').feature('gmevcp1').set('descr', 'Elasticity matrix');
model.result.evaluationGroup('solidcp1stdEg').run;
model.result('pg1').run;
model.result('pg1').label('Stress, Unit Cell');
model.result('pg1').setIndex('looplevel', 1, 0);
model.result('pg1').run;
model.result('pg1').setIndex('looplevel', 2, 0);
model.result('pg1').run;
model.result('pg1').setIndex('looplevel', 5, 0);
model.result('pg1').run;
model.result('pg1').setIndex('looplevel', 6, 0);
model.result('pg1').run;

model.physics('solid').feature('cp1').runCommand('createMaterialbyValue');

model.modelNode.create('comp2', true);

model.geom.create('geom2', 3);
model.geom('geom2').model('comp2');

model.mesh.create('mesh2', 'geom2');

model.geom('geom2').create('cyl1', 'Cylinder');
model.geom('geom2').feature('cyl1').set('type', 'surface');
model.geom('geom2').feature('cyl1').set('r', 'rc');
model.geom('geom2').feature('cyl1').set('h', 'hc');
model.geom('geom2').feature('cyl1').set('axistype', 'x');
model.geom('geom2').run('cyl1');
model.geom('geom2').run;

model.coordSystem('sys2').set('mastercoordsystcomp', '1');

model.physics.create('lshell', 'LayeredShell', 'geom2');
model.physics('lshell').model('comp2');

model.study('solidcp1std').feature('solidcp1stat').setSolveFor('/physics/lshell', false);

model.physics('lshell').prop('LayerSelection').set('bndType', 'allShell');

model.material.create('lmat1', 'LayeredMaterial', '');
model.material('lmat1').label('Layered Material: [0/45/90/-45/0]');
model.material('lmat1').setIndex('link', 'solidcp1mat', 0);
model.material('lmat1').setIndex('rotation', 0, 0);
model.material('lmat1').setIndex('thickness', 'th', 0);
model.material('lmat1').setIndex('meshPoints', 1, 0);
model.material('lmat1').setIndex('layername', 'Layer 2', 1);
model.material('lmat1').setIndex('link', 'solidcp1mat', 1);
model.material('lmat1').setIndex('rotation', 0, 1);
model.material('lmat1').setIndex('thickness', 'th', 1);
model.material('lmat1').setIndex('meshPoints', 1, 1);
model.material('lmat1').setIndex('tag', 'lmat1_2', 1);
model.material('lmat1').setIndex('layername', 'Layer 2', 1);
model.material('lmat1').setIndex('link', 'solidcp1mat', 1);
model.material('lmat1').setIndex('rotation', 0, 1);
model.material('lmat1').setIndex('thickness', 'th', 1);
model.material('lmat1').setIndex('meshPoints', 1, 1);
model.material('lmat1').setIndex('tag', 'lmat1_2', 1);
model.material('lmat1').setIndex('layername', 'Layer 3', 2);
model.material('lmat1').setIndex('link', 'solidcp1mat', 2);
model.material('lmat1').setIndex('rotation', 0, 2);
model.material('lmat1').setIndex('thickness', 'th', 2);
model.material('lmat1').setIndex('meshPoints', 1, 2);
model.material('lmat1').setIndex('tag', 'lmat1_3', 2);
model.material('lmat1').setIndex('layername', 'Layer 3', 2);
model.material('lmat1').setIndex('link', 'solidcp1mat', 2);
model.material('lmat1').setIndex('rotation', 0, 2);
model.material('lmat1').setIndex('thickness', 'th', 2);
model.material('lmat1').setIndex('meshPoints', 1, 2);
model.material('lmat1').setIndex('tag', 'lmat1_3', 2);
model.material('lmat1').setIndex('rotation', 45, 1);
model.material('lmat1').setIndex('rotation', 90, 2);
model.material.create('llmat1', 'LayeredMaterialLink', 'comp2');
model.material('llmat1').set('transform', 'antisymmetry');
model.material('llmat1').set('merge', true);
model.material('llmat1').set('widthRatio', 0.4);
model.material('solidcp1mat').propertyGroup('def').set('density', {'rho_l'});

model.physics('lshell').feature('lemm1').set('SolidModel', 'Anisotropic');
model.physics('lshell').create('fix1', 'Fixed', 1);
model.physics('lshell').feature('fix1').selection.set([1 2 4 6]);
model.physics('lshell').create('roll1', 'Roller', 1);
model.physics('lshell').feature('roll1').selection.set([9 10 11 12]);
model.physics('lshell').create('bl1', 'BodyLoad', 2);
model.physics('lshell').feature('bl1').selection.set([2]);
model.physics('lshell').feature('bl1').set('LoadType', 'TotalForce');
model.physics('lshell').feature('bl1').set('Ftot', {'0' '0' 'Ftot'});

model.mesh('mesh2').create('map1', 'Map');
model.mesh('mesh2').feature('map1').selection.all;
model.mesh('mesh2').feature('map1').create('dis1', 'Distribution');
model.mesh('mesh2').feature('map1').feature('dis1').selection.all;
model.mesh('mesh2').feature('map1').feature('dis1').set('numelem', 20);
model.mesh('mesh2').run;

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/solid', false);
model.study('std1').feature('stat').setSolveFor('/physics/lshell', true);
model.study('std1').label('Study 1: Stationary (Layerwise Theory)');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.dataset.create('dset3lshelllshl', 'LayeredMaterial');
model.result.dataset('dset3lshelllshl').set('data', 'dset3');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'dset3lshelllshl');
model.result('pg2').set('defaultPlotID', 'stress');
model.result('pg2').label('Stress (lshell)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('showlegends', true);
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'lshell.misesGp'});
model.result('pg2').feature('surf1').set('threshold', 'manual');
model.result('pg2').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg2').feature('surf1').set('colortable', 'Rainbow');
model.result('pg2').feature('surf1').set('colortabletrans', 'none');
model.result('pg2').feature('surf1').set('colorscalemode', 'linear');
model.result('pg2').feature('surf1').set('colortable', 'Prism');
model.result('pg2').feature('surf1').create('def', 'Deform');
model.result('pg2').feature('surf1').feature('def').set('expr', {'u2' 'v2' 'w2'});
model.result('pg2').feature('surf1').feature('def').set('descr', 'Displacement field (material and geometry frames)');
model.result('pg2').run;
model.result.dataset('dset3lshelllshl').set('scale', 5);
model.result.dataset.create('cpt1', 'CutPoint3D');
model.result.dataset('cpt1').set('data', 'dset3');
model.result.dataset('cpt1').set('pointx', 'hc/2');
model.result.dataset('cpt1').set('pointy', 'rc');
model.result.dataset('cpt1').set('pointz', 'rc');
model.result.dataset('cpt1').set('snapping', 'boundary');
model.result('pg2').run;
model.result('pg2').label('Stress (mises)');
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').set('data', 'dset3');
model.result('pg3').set('defaultPlotID', 'stressSlice');
model.result('pg3').label('Stress, Slice (lshell)');
model.result('pg3').set('showlegends', true);
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').create('lss1', 'LayeredMaterialSlice');
model.result('pg3').feature('lss1').set('expr', {'lshell.misesGp'});
model.result('pg3').feature('lss1').set('threshold', 'manual');
model.result('pg3').feature('lss1').set('thresholdvalue', 0.2);
model.result('pg3').feature('lss1').set('colortable', 'Prism');
model.result('pg3').feature('lss1').set('colortabletrans', 'none');
model.result('pg3').feature('lss1').set('colorscalemode', 'linear');
model.result('pg3').feature('lss1').set('locdef', 'relative');
model.result('pg3').feature('lss1').set('localzrel', 'lshell.z');
model.result('pg3').feature('lss1').create('def', 'Deform');
model.result('pg3').feature('lss1').feature('def').set('expr', {'u2' 'v2' 'w2'});
model.result('pg3').feature('lss1').feature('def').set('descr', 'Displacement field (material and geometry frames)');
model.result('pg3').label('Stress, Slice (lshell)');
model.result('pg3').run;
model.result('pg3').label('Stress, Slice (mises)');
model.result('pg3').set('edges', false);
model.result('pg3').set('view', 'new');
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').feature('lss1').set('locdef', 'layermidplanes');
model.result('pg3').feature('lss1').set('slicedisplacement', 'rectangular');
model.result('pg3').feature('lss1').set('orientationrectangular', 'zx');
model.result('pg3').feature('lss1').set('xseparation', 0.3);
model.result('pg3').feature('lss1').set('zseparation', 0.7);
model.result('pg3').feature('lss1').set('showdescriptions', true);
model.result('pg3').feature('lss1').set('descriptionseparation', 0.6);
model.result('pg3').feature('lss1').set('rangecoloractive', true);
model.result('pg3').feature('lss1').set('rangecolormin', 0);
model.result('pg3').feature('lss1').set('rangecolormax', '5e6');
model.result('pg3').feature('lss1').set('resolution', 'norefine');
model.result('pg3').run;
model.result('pg3').feature('lss1').feature('def').active(false);
model.result('pg3').run;
model.result('pg3').run;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').set('data', 'dset3');
model.result('pg4').set('defaultPlotID', 'stressThroughThickness');
model.result('pg4').set('showlegends', true);
model.result('pg4').create('thr1', 'ThroughThickness');
model.result('pg4').feature('thr1').set('expr', {'lshell.misesGp'});
model.result('pg4').feature('thr1').set('legend', true);
model.result('pg4').feature('thr1').set('posentry', 'selection');
model.result('pg4').feature('thr1').selection.geom('geom2', 0);
model.result('pg4').feature('thr1').selection.set([1]);
model.result('pg4').label('Stress, Through Thickness (lshell)');
model.result('pg4').label('Stress, Through Thickness (lshell)');
model.result('pg4').run;
model.result('pg4').label('Stress, Through Thickness (Slm11)');
model.result('pg4').set('xlabelactive', true);
model.result('pg4').set('xlabel', 'Slm11 (MPa)');
model.result('pg4').run;
model.result('pg4').feature('thr1').set('data', 'cpt1');
model.result('pg4').feature('thr1').set('expr', 'lshell.Slm11');
model.result('pg4').feature('thr1').set('unit', 'MPa');
model.result('pg4').feature('thr1').set('legendmethod', 'manual');
model.result('pg4').feature('thr1').setIndex('legends', 'Layerwise Theory', 0);
model.result('pg4').run;
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').set('data', 'dset3');
model.result('pg5').set('defaultPlotID', 'stressThroughThickness');
model.result('pg5').set('showlegends', true);
model.result('pg5').create('thr1', 'ThroughThickness');
model.result('pg5').feature('thr1').set('expr', {'lshell.misesGp'});
model.result('pg5').feature('thr1').set('legend', true);
model.result('pg5').feature('thr1').set('posentry', 'selection');
model.result('pg5').feature('thr1').selection.geom('geom2', 0);
model.result('pg5').feature('thr1').selection.set([1]);
model.result('pg5').label('Stress, Through Thickness (lshell)');
model.result('pg5').label('Stress, Through Thickness (lshell)');
model.result('pg5').run;
model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').set('data', 'dset3');
model.result('pg6').set('defaultPlotID', 'thicknessOrientation');
model.result('pg6').label('Thickness and Orientation (lshell)');
model.result('pg6').set('titletype', 'label');
model.result('pg6').set('showlegendsunit', true);
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', {'lshell.d'});
model.result('pg6').feature('surf1').set('threshold', 'manual');
model.result('pg6').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg6').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg6').feature('surf1').set('colortabletrans', 'reverse');
model.result('pg6').feature('surf1').set('colorscalemode', 'linear');
model.result('pg6').feature('surf1').label('Thickness');
model.result('pg6').create('syss1', 'CoordSysSurface');
model.result('pg6').feature('syss1').set('mode', 'matrix');
model.result('pg6').feature('syss1').set('expr', 'lshell.dsdX');
model.result('pg6').label('Thickness and Orientation (lshell)');
model.result('pg6').run;
model.result.dataset.create('dset3lshelllshlfi', 'LayeredMaterial');
model.result.dataset('dset3lshelllshlfi').label('Layered Material 2 (Material Direction)');
model.result.dataset('dset3lshelllshlfi').set('data', 'dset3');
model.result.dataset('dset3lshelllshlfi').set('evaluatein', 'layermidplanes');
model.result.dataset('dset3lshelllshlfi').set('scale', '200*0.057445626465380296');
model.result.dataset('dset3lshelllshlfi').set('defaultPlotIDs', {'firstPrincipalMaterialDirection|lshell'});
model.result.dataset('dset3lshelllshlfi').label('Layered Material 2 (Material Direction)');
model.result.create('pg7', 'PlotGroup3D');
model.result('pg7').set('data', 'dset3lshelllshlfi');
model.result('pg7').set('defaultPlotID', 'firstPrincipalMaterialDirection');
model.result('pg7').label('First Principal Material Direction (lshell)');
model.result('pg7').set('titletype', 'label');
model.result('pg7').set('edgecolor', 'white');
model.result('pg7').set('showlegends', false);
model.result('pg7').create('surf1', 'Surface');
model.result('pg7').feature('surf1').set('expr', {'lshell.rot'});
model.result('pg7').feature('surf1').set('threshold', 'manual');
model.result('pg7').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg7').feature('surf1').set('colortabletrans', 'none');
model.result('pg7').feature('surf1').set('colorscalemode', 'linear');
model.result('pg7').feature('surf1').set('unit', 'deg');
model.result('pg7').feature('surf1').set('colortable', 'Rainbow');
model.result('pg7').feature('surf1').set('rangecoloractive', true);
model.result('pg7').feature('surf1').set('rangecolormin', -90);
model.result('pg7').feature('surf1').set('rangecolormax', 90);
model.result('pg7').create('arws1', 'ArrowSurface');
model.result('pg7').feature('arws1').set('expr', {'lshell.tm11' 'lshell.tm12' 'lshell.tm13'});
model.result('pg7').feature('arws1').set('placement', 'elements');
model.result('pg7').feature('arws1').set('arrowtype', 'cone');
model.result('pg7').feature('arws1').set('color', 'white');
model.result('pg7').label('First Principal Material Direction (lshell)');
model.result('pg7').run;
model.result('pg7').run;

model.study.create('std2');
model.study('std2').create('eig', 'Eigenfrequency');
model.study('std2').feature('eig').set('plotgroup', 'Default');
model.study('std2').feature('eig').set('chkeigregion', true);
model.study('std2').feature('eig').set('conrad', '1');
model.study('std2').feature('eig').set('conradynhm', '1');
model.study('std2').feature('eig').set('storefact', false);
model.study('std2').feature('eig').set('solnum', 'auto');
model.study('std2').feature('eig').set('notsolnum', 'auto');
model.study('std2').feature('eig').set('outputmap', {});
model.study('std2').feature('eig').set('ngenAUX', '1');
model.study('std2').feature('eig').set('goalngenAUX', '1');
model.study('std2').feature('eig').set('ngenAUX', '1');
model.study('std2').feature('eig').set('goalngenAUX', '1');
model.study('std2').feature('eig').setSolveFor('/physics/solid', false);
model.study('std2').feature('eig').setSolveFor('/physics/lshell', true);
model.study('std2').label('Study 2: Eigenfrequency (Layerwise Theory)');
model.study('std2').feature('eig').set('neigsactive', true);
model.study('std2').feature('eig').set('neigs', 12);

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'eig');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'eig');
model.sol('sol2').create('e1', 'Eigenvalue');
model.sol('sol2').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol2').feature('e1').set('eigvfunscaleparam', '5.739999999999999E-7');
model.sol('sol2').feature('e1').set('control', 'eig');
model.sol('sol2').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result.dataset.create('dset5lshelllshl', 'LayeredMaterial');
model.result.dataset('dset5lshelllshl').set('data', 'dset5');
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').set('data', 'dset5lshelllshl');
model.result('pg8').setIndex('looplevel', 1, 0);
model.result('pg8').set('defaultPlotID', 'modeShape');
model.result('pg8').label('Mode Shape (lshell)');
model.result('pg8').set('showlegends', false);
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').feature('surf1').set('expr', {'lshell.disp'});
model.result('pg8').feature('surf1').set('threshold', 'manual');
model.result('pg8').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg8').feature('surf1').set('colortable', 'Rainbow');
model.result('pg8').feature('surf1').set('colortabletrans', 'none');
model.result('pg8').feature('surf1').set('colorscalemode', 'linear');
model.result('pg8').feature('surf1').set('colortable', 'AuroraBorealis');
model.result('pg8').feature('surf1').create('def', 'Deform');
model.result('pg8').feature('surf1').feature('def').set('expr', {'u2' 'v2' 'w2'});
model.result('pg8').feature('surf1').feature('def').set('descr', 'Displacement field (material and geometry frames)');
model.result.evaluationGroup.create('std2EvgFrq', 'EvaluationGroup');
model.result.evaluationGroup('std2EvgFrq').set('defaultPlotID', 'eigenfrequenciesTable_lshell');
model.result.evaluationGroup('std2EvgFrq').set('data', 'dset5');
model.result.evaluationGroup('std2EvgFrq').label('Eigenfrequencies (Study 2: Eigenfrequency (Layerwise Theory))');
model.result.evaluationGroup('std2EvgFrq').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('std2EvgFrq').feature('gev1').setIndex('expr', '2*pi*freq', 0);
model.result.evaluationGroup('std2EvgFrq').feature('gev1').setIndex('unit', 'rad/s', 0);
model.result.evaluationGroup('std2EvgFrq').feature('gev1').setIndex('descr', 'Angular frequency', 0);
model.result.evaluationGroup('std2EvgFrq').feature('gev1').setIndex('expr', 'imag(freq)/abs(freq)', 1);
model.result.evaluationGroup('std2EvgFrq').feature('gev1').setIndex('unit', '1', 1);
model.result.evaluationGroup('std2EvgFrq').feature('gev1').setIndex('descr', 'Damping ratio', 1);
model.result.evaluationGroup('std2EvgFrq').feature('gev1').setIndex('expr', 'abs(freq)/imag(freq)/2', 2);
model.result.evaluationGroup('std2EvgFrq').feature('gev1').setIndex('unit', '1', 2);
model.result.evaluationGroup('std2EvgFrq').feature('gev1').setIndex('descr', 'Quality factor', 2);
model.result.evaluationGroup('std2EvgFrq').run;
model.result('pg8').run;
model.result('pg8').label('Mode Shape (Layerwise Theory)');
model.result('pg8').set('view', 'new');
model.result('pg8').run;
model.result('pg8').run;
model.result('pg8').set('looplevel', [3]);
model.result('pg8').run;
model.result('pg8').set('looplevel', [5]);
model.result('pg8').run;
model.result('pg8').set('looplevel', [7]);
model.result('pg8').run;
model.result('pg8').set('looplevel', [9]);
model.result('pg8').run;
model.result('pg8').set('looplevel', [12]);
model.result('pg8').run;

model.geom('geom2').create('mov1', 'Move');
model.geom('geom2').feature('mov1').selection('input').set({'cyl1'});
model.geom('geom2').feature('mov1').set('keep', true);
model.geom('geom2').feature('mov1').set('disply', 'hc');
model.geom('geom2').run('mov1');
model.geom('geom2').run;

model.physics('lshell').selection.set([1 2 3 4]);
model.physics.create('shell', 'Shell', 'geom2');
model.physics('shell').model('comp2');

model.study('solidcp1std').feature('solidcp1stat').setSolveFor('/physics/shell', false);
model.study('std1').feature('stat').setSolveFor('/physics/shell', false);
model.study('std2').feature('eig').setSolveFor('/physics/shell', false);

model.physics('shell').selection.set([5 6 7 8]);
model.physics('shell').prop('ShellAdvancedSettings').set('UseMITCInterp', false);
model.physics('shell').create('llem1', 'LayeredElastic', 2);
model.physics('shell').feature('llem1').selection.all;
model.physics('shell').feature('llem1').set('SolidModel', 'Anisotropic');
model.physics('shell').create('fix1', 'Fixed', 1);
model.physics('shell').feature('fix1').selection.set([9 10 12 14]);
model.physics('shell').create('sym1', 'SymmetrySolid1', 1);
model.physics('shell').feature('sym1').selection.set([21 22 23 24]);
model.physics('shell').create('fl1', 'FaceLoad', 2);
model.physics('shell').feature('fl1').selection.set([6]);
model.physics('shell').feature('fl1').set('LoadTypeForce', 'TotalForce');
model.physics('shell').feature('fl1').set('FfTot', {'0' '0' 'Ftot'});

model.study.create('std3');
model.study('std3').create('stat', 'Stationary');
model.study('std3').feature('stat').setSolveFor('/physics/solid', false);
model.study('std3').feature('stat').setSolveFor('/physics/lshell', false);
model.study('std3').feature('stat').setSolveFor('/physics/shell', true);
model.study('std3').label('Study 3: Stationary (ESL Theory)');
model.study('std3').setGenPlots(false);

model.sol.create('sol3');
model.sol('sol3').study('std3');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std3');
model.sol('sol3').feature('st1').set('studystep', 'stat');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').feature('comp2_ar').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp2_ar').set('resscalemethod', 'parent');
model.sol('sol3').feature('v1').feature('comp2_ar').set('scaleval', '0.01');
model.sol('sol3').feature('v1').set('control', 'stat');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol3').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol3').feature('s1').feature('fc1').set('termonres', 'auto');
model.sol('sol3').feature('s1').feature('fc1').set('reserrfact', 1000);
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol('sol3').attach('std3');
model.sol('sol3').runAll;

model.result.dataset.create('lshl1', 'LayeredMaterial');
model.result.dataset('lshl1').set('data', 'dset7');
model.result.dataset.duplicate('cpt2', 'cpt1');
model.result.dataset('cpt2').set('pointy', 'hc+rc');
model.result.dataset('cpt2').set('data', 'dset7');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature.duplicate('surf2', 'surf1');
model.result('pg2').run;
model.result('pg2').feature('surf2').set('expr', 'shell.mises');
model.result('pg2').feature('surf2').set('data', 'lshl1');
model.result('pg2').feature('surf2').set('titletype', 'none');
model.result('pg2').feature('surf2').set('inheritplot', 'surf1');
model.result('pg2').run;
model.result('pg2').feature('surf2').feature('def').set('expr', {'u3' 'v3' 'w3'});
model.result('pg2').run;
model.result('pg2').create('tlan1', 'TableAnnotation');
model.result('pg2').feature('tlan1').set('source', 'localtable');
model.result('pg2').feature('tlan1').setIndex('localtablematrix', '-2*hc/5', 0, 0);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 0, 0, 1);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 0, 0, 2);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 'Layerwise Theory', 0, 3);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', '-2*hc/5', 1, 0);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 'hc', 1, 1);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 0, 1, 2);
model.result('pg2').feature('tlan1').setIndex('localtablematrix', 'ESL Theory', 1, 3);
model.result('pg2').feature('tlan1').set('showpoint', false);
model.result('pg2').feature('tlan1').set('anchorpoint', 'lowermiddle');
model.result('pg2').run;
model.result('pg4').run;
model.result('pg4').feature.duplicate('thr2', 'thr1');
model.result('pg4').run;
model.result('pg4').feature('thr2').set('data', 'cpt2');
model.result('pg4').feature('thr2').set('expr', 'shell.Sl11');
model.result('pg4').feature('thr2').set('titletype', 'none');
model.result('pg4').feature('thr2').set('linestyle', 'dashed');
model.result('pg4').feature('thr2').setIndex('legends', 'ESL Theory', 0);
model.result('pg4').run;

model.study.create('std4');
model.study('std4').create('eig', 'Eigenfrequency');
model.study('std4').feature('eig').set('plotgroup', 'Default');
model.study('std4').feature('eig').set('chkeigregion', true);
model.study('std4').feature('eig').set('conrad', '1');
model.study('std4').feature('eig').set('conradynhm', '1');
model.study('std4').feature('eig').set('storefact', false);
model.study('std4').feature('eig').set('solnum', 'auto');
model.study('std4').feature('eig').set('notsolnum', 'auto');
model.study('std4').feature('eig').set('outputmap', {});
model.study('std4').feature('eig').set('ngenAUX', '1');
model.study('std4').feature('eig').set('goalngenAUX', '1');
model.study('std4').feature('eig').set('ngenAUX', '1');
model.study('std4').feature('eig').set('goalngenAUX', '1');
model.study('std4').feature('eig').setSolveFor('/physics/solid', false);
model.study('std4').feature('eig').setSolveFor('/physics/lshell', false);
model.study('std4').feature('eig').setSolveFor('/physics/shell', true);
model.study('std4').label('Study 4: Eigenfrequency (ESL Theory)');
model.study('std4').setGenPlots(false);
model.study('std4').feature('eig').set('neigsactive', true);
model.study('std4').feature('eig').set('neigs', 12);

model.sol.create('sol4');
model.sol('sol4').study('std4');
model.sol('sol4').create('st1', 'StudyStep');
model.sol('sol4').feature('st1').set('study', 'std4');
model.sol('sol4').feature('st1').set('studystep', 'eig');
model.sol('sol4').create('v1', 'Variables');
model.sol('sol4').feature('v1').feature('comp2_ar').set('scalemethod', 'manual');
model.sol('sol4').feature('v1').feature('comp2_ar').set('resscalemethod', 'parent');
model.sol('sol4').feature('v1').feature('comp2_ar').set('scaleval', '0.01');
model.sol('sol4').feature('v1').set('control', 'eig');
model.sol('sol4').create('e1', 'Eigenvalue');
model.sol('sol4').feature('e1').set('eigvfunscale', 'maximum');
model.sol('sol4').feature('e1').set('eigvfunscaleparam', '8.83E-7');
model.sol('sol4').feature('e1').set('control', 'eig');
model.sol('sol4').feature('e1').feature('aDef').set('cachepattern', true);
model.sol('sol4').attach('std4');
model.sol('sol4').runAll;

model.result.dataset.create('lshl2', 'LayeredMaterial');
model.result.dataset('lshl2').set('data', 'dset9');
model.result.dataset('lshl2').selection.geom('geom2', 2);
model.result.dataset('lshl2').selection.set([5 6 7 8]);
model.result('pg8').run;
model.result.duplicate('pg9', 'pg8');
model.result('pg9').run;
model.result('pg9').label('Mode Shape (ESL Theory)');
model.result('pg9').set('data', 'none');
model.result('pg9').run;
model.result('pg9').feature('surf1').set('expr', 'shell.disp');
model.result('pg9').run;
model.result('pg9').feature('surf1').feature('def').set('expr', {'u3' 'v3' 'w3'});
model.result('pg9').run;
model.result('pg9').set('data', 'lshl2');
model.result('pg9').set('looplevel', [12]);
model.result('pg9').set('view', 'new');
model.result('pg9').run;
model.result('pg3').run;

model.title('Micromechanics and Macromechanics of a Composite Cylinder');

model.description(['In this example, stresses are computed in a cylindrical shell made from a fiber composite laminate. The example consists of two parts: ' newline  newline 'First, the homogenized elastic properties of a single layer in the laminate are determined using a micromechanics model. A single fiber in an epoxy resin is used to compute homogenized elastic properties. Together with the ply orientation, the elastic properties that are determined define an individual layer (ply) in the laminate.' newline  newline 'Then, by using the layer information and a specified stacking sequence, the entire laminate is defined. A stress analysis is then performed for the cylindrical shell. Two laminate theories are compared: the Layerwise theory and the Equivalent Single Layer (ESL) theory. In addition to the stress analysis, eigenfrequencies and mode shapes are computed to examine the dynamic behavior of the cylindrical shell.']);

model.mesh.clearMeshes;

model.sol('solidcp1sol').clearSolutionData;
model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;

model.label('composite_cylinder_micromechanics_and_stress_analysis.mph');

model.modelNode.label('Components');

out = model;
