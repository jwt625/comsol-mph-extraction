function out = model
%
% disc_brake_wear.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Structural_Mechanics_Module/Contact_and_Friction');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/solid', true);

model.param.set('v', '60[km/h]');
model.param.descr('v', 'Vehicle speed');
model.param.set('r_wheel', '0.25[m]');
model.param.descr('r_wheel', 'Wheel radius');
model.param.set('omega', 'v/r_wheel');
model.param.descr('omega', 'Wheel angular velocity');
model.param.set('wear_accel', '100');
model.param.descr('wear_accel', 'Wear acceleration factor');

model.geom('geom1').insertFile('disc_brake_geom_sequence.mph', 'geom1');

model.view('view1').set('showgrid', false);
model.view('view1').set('showaxisorientation', false);

model.geom('geom1').feature('fin').set('createpairs', true);
model.geom('geom1').feature('fin').set('pairtype', 'contact');
model.geom('geom1').run('fin');

model.pair('ap1').mapping('initial');

model.coordSystem.create('sys2', 'geom1', 'Cylindrical');
model.coordSystem('sys1').set('frametype', 'material');
model.coordSystem('sys1').set('mastersystem', 'sys2');
model.coordSystem('sys1').set('mastercoordsystcomp', '2');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').label('Disc');
model.material('mat1').selection.set([1 2]);
model.material('mat1').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat1').propertyGroup('Enu').set('E', {'210[GPa]'});
model.material('mat1').propertyGroup('Enu').set('nu', {'0.3'});
model.material('mat1').propertyGroup('def').set('density', {'7850[kg/m^3]'});
model.material('mat1').set('family', 'steel');

model.view('view1').set('showmaterial', true);
model.view('view1').set('environmentmap', 'envmap_machineshop2');

model.material.create('mat2', 'Common', 'comp1');
model.material('mat2').selection.set([3]);
model.material('mat2').label('Pad');
model.material('mat2').propertyGroup.create('Enu', 'Young''s_modulus_and_Poisson''s_ratio');
model.material('mat2').propertyGroup('Enu').set('E', {'10[GPa]'});
model.material('mat2').propertyGroup('Enu').set('nu', {'0.1'});
model.material('mat2').propertyGroup('def').set('density', {'2000'});
model.material('mat2').set('color', 'black');

model.physics('solid').prop('StructuralTransientBehavior').set('StructuralTransientBehavior', 'Quasistatic');
model.physics('solid').create('fix1', 'Fixed', 2);
model.physics('solid').feature('fix1').selection.set([8]);
model.physics('solid').create('sym1', 'SymmetrySolid', 2);
model.physics('solid').feature('sym1').selection.set([3]);
model.physics('solid').create('disp1', 'Displacement2', 2);
model.physics('solid').feature('disp1').setIndex('Direction', 'prescribed', 0);
model.physics('solid').feature('disp1').setIndex('Direction', 'prescribed', 1);
model.physics('solid').feature('disp1').selection.set([16]);
model.physics('solid').create('bndl1', 'BoundaryLoad', 2);
model.physics('solid').feature('bndl1').selection.set([16]);
model.physics('solid').feature('bndl1').set('LoadType', 'TotalForce');
model.physics('solid').feature('bndl1').set('Ftot', {'0' '0' '-10[kN]'});
model.physics('solid').feature('dcnt1').set('ContactMethodCtrl', 'AugmentedLagrange');
model.physics('solid').feature('dcnt1').set('tunedFor', 'Speed');
model.physics('solid').feature('dcnt1').create('sv1', 'FrictionSlipVelocity', 2);
model.physics('solid').feature('dcnt1').feature('sv1').set('mu_fric', 0.45);
model.physics('solid').feature('dcnt1').feature('sv1').set('vslip', {'omega*sys2.r' '0' '0'});
model.physics('solid').feature('dcnt1').feature('sv1').set('sliptotStore', true);
model.physics('solid').feature('dcnt1').create('wear1', 'Wear', 2);
model.physics('solid').feature('dcnt1').feature('wear1').set('k', '1e-14*wear_accel');

model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.set([4 8]);
model.mesh('mesh1').feature('ftri1').create('se1', 'SizeExpression');
model.mesh('mesh1').feature('ftri1').feature('se1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('ftri1').feature('se1').selection.set([4 8]);
model.mesh('mesh1').feature('ftri1').feature('se1').set('sizeexpr', 'if((x/60[mm])^2+((y-115[mm])/40[mm])^2<1, 6[mm], 40[mm])');
model.mesh('mesh1').feature('ftri1').feature('se1').set('hmeshgrad', 1.25);
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe1').selection.set([1 2]);
model.mesh('mesh1').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis1').set('numelem', 2);
model.mesh('mesh1').create('ftri2', 'FreeTri');
model.mesh('mesh1').feature('ftri2').selection.set([16]);
model.mesh('mesh1').feature('ftri2').create('size1', 'Size');
model.mesh('mesh1').feature('ftri2').feature('size1').set('custom', true);
model.mesh('mesh1').feature('ftri2').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('ftri2').feature('size1').set('hmax', '3.5[mm]');
model.mesh('mesh1').create('swe2', 'Sweep');
model.mesh('mesh1').feature('swe2').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe2').feature('dis1').set('numelem', 3);
model.mesh('mesh1').run;

model.study('std1').feature('stat').setEntry('activate', 'frame:material1', false);

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([3]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_material_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_Tn_ap1').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_material_disp').set('scaleval', '0.0034083931306057393');
model.sol('sol1').feature('v1').feature('comp1_solid_Tn_ap1').set('scaleval', '100000000');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.39664719840180396');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('se1', 'Segregated');
model.sol('sol1').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_u'});
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subdtech', 'ddog');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subtermauto', 'itertol');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subiter', 7);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subntolfact', 1);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('s1').feature('d1').set('nliniterrefine', true);
model.sol('sol1').feature('s1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').label('Solid Mechanics');
model.sol('sol1').feature('s1').feature('se1').create('ls1', 'LumpedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ls1').set('segvar', {'comp1_solid_Tn_ap1'});
model.sol('sol1').feature('s1').feature('se1').set('maxsegiter', 15);
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'right');
model.sol('sol1').feature('s1').feature('i1').set('rhob', 40);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol1').feature('s1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('mglevels', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('maxcoarsedof', 10000);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('v1').feature('comp1_solid_Tn_ap1').set('scaleval', '5e6');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').set('defaultPlotID', 'stress');
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').create('vol1', 'Volume');
model.result('pg1').feature('vol1').set('expr', {'solid.misesGp'});
model.result('pg1').feature('vol1').set('threshold', 'manual');
model.result('pg1').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg1').feature('vol1').set('colortable', 'Rainbow');
model.result('pg1').feature('vol1').set('colortabletrans', 'none');
model.result('pg1').feature('vol1').set('colorscalemode', 'linear');
model.result('pg1').feature('vol1').set('resolution', 'custom');
model.result('pg1').feature('vol1').set('refine', 2);
model.result('pg1').feature('vol1').set('colortable', 'Prism');
model.result('pg1').feature('vol1').create('def', 'Deform');
model.result('pg1').feature('vol1').feature('def').set('scaleactive', true);
model.result('pg1').feature('vol1').feature('def').set('scale', '1');
model.result('pg1').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg1').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result('pg1').run;
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').set('defaultPlotID', 'contactForces');
model.result('pg2').label('Contact Forces (solid)');
model.result('pg2').set('showlegends', true);
model.result('pg2').set('titletype', 'label');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('showlegendsunit', true);
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'1'});
model.result('pg2').feature('surf1').label('Gray Surfaces');
model.result('pg2').feature('surf1').set('coloring', 'uniform');
model.result('pg2').feature('surf1').set('color', 'gray');
model.result('pg2').feature('surf1').create('def', 'Deform');
model.result('pg2').feature('surf1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg2').feature('surf1').feature('def').set('descr', 'Displacement field');
model.result('pg2').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg2').feature('surf1').feature('def').set('scale', 1);
model.result('pg2').feature('surf1').create('sel1', 'Selection');
model.result('pg2').feature('surf1').feature('sel1').selection.geom('geom1', 2);
model.result('pg2').feature('surf1').feature('sel1').selection.set([1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18]);
model.result('pg2').feature('surf1').create('tran1', 'Transparency');
model.result('pg2').feature('surf1').feature('tran1').set('transparency', 0.8);
model.result('pg2').create('arws1', 'ArrowSurface');
model.result('pg2').feature('arws1').set('arrowbase', 'head');
model.result('pg2').feature('arws1').set('expr', {'solid.dcnt1.Tnx' 'solid.dcnt1.Tny' 'solid.dcnt1.Tnz'});
model.result('pg2').feature('arws1').set('placement', 'gausspoints');
model.result('pg2').feature('arws1').set('gporder', 4);
model.result('pg2').feature('arws1').label('Contact 1, Pressure');
model.result('pg2').feature('arws1').set('inheritplot', 'none');
model.result('pg2').feature('arws1').set('color', 'green');
model.result('pg2').feature('arws1').create('col', 'Color');
model.result('pg2').feature('arws1').feature('col').set('colortable', 'Rainbow');
model.result('pg2').feature('arws1').feature('col').set('colortabletrans', 'none');
model.result('pg2').feature('arws1').feature('col').set('colorscalemode', 'linear');
model.result('pg2').feature('arws1').feature('col').set('colordata', 'arrowlength');
model.result('pg2').feature('arws1').feature('col').set('coloring', 'gradient');
model.result('pg2').feature('arws1').feature('col').set('topcolor', 'green');
model.result('pg2').feature('arws1').feature('col').set('bottomcolor', 'custom');
model.result('pg2').feature('arws1').feature('col').set('custombottomcolor', [0.509804 0.54902 0.509804]);
model.result('pg2').feature('arws1').create('def', 'Deform');
model.result('pg2').feature('arws1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg2').feature('arws1').feature('def').set('descr', 'Displacement field');
model.result('pg2').feature('arws1').feature('def').set('scaleactive', true);
model.result('pg2').feature('arws1').feature('def').set('scale', 1);
model.result('pg2').feature.move('surf1', 1);
model.result('pg2').set('legendpos', 'rightdouble');
model.result('pg2').create('arws2', 'ArrowSurface');
model.result('pg2').feature('arws2').set('arrowbase', 'tail');
model.result('pg2').feature('arws2').set('expr', {'solid.dcnt1.Ttx' 'solid.dcnt1.Tty' 'solid.dcnt1.Ttz'});
model.result('pg2').feature('arws2').set('placement', 'gausspoints');
model.result('pg2').feature('arws2').set('gporder', 4);
model.result('pg2').feature('arws2').label('Contact 1, Friction Force');
model.result('pg2').feature('arws2').set('inheritplot', 'none');
model.result('pg2').feature('arws2').set('color', 'magenta');
model.result('pg2').feature('arws2').create('col', 'Color');
model.result('pg2').feature('arws2').feature('col').set('colortable', 'Rainbow');
model.result('pg2').feature('arws2').feature('col').set('colortabletrans', 'none');
model.result('pg2').feature('arws2').feature('col').set('colorscalemode', 'linear');
model.result('pg2').feature('arws2').feature('col').set('colordata', 'arrowlength');
model.result('pg2').feature('arws2').feature('col').set('coloring', 'gradient');
model.result('pg2').feature('arws2').feature('col').set('topcolor', 'magenta');
model.result('pg2').feature('arws2').feature('col').set('bottomcolor', 'custom');
model.result('pg2').feature('arws2').feature('col').set('custombottomcolor', [0.54902 0.509804 0.54902]);
model.result('pg2').feature('arws2').create('def', 'Deform');
model.result('pg2').feature('arws2').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg2').feature('arws2').feature('def').set('descr', 'Displacement field');
model.result('pg2').feature('arws2').feature('def').set('scaleactive', true);
model.result('pg2').feature('arws2').feature('def').set('scale', 1);
model.result('pg2').feature.move('surf1', 2);
model.result('pg2').label('Contact Forces (solid)');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('arws1').active(false);
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('arws2').feature('col').set('coloring', 'colortable');
model.result('pg2').feature('arws2').feature('col').set('colortable', 'RainbowLight');

model.study.create('std2');
model.study('std2').create('time', 'Transient');
model.study('std2').feature('time').setSolveFor('/physics/solid', true);
model.study('std2').feature('time').set('tlist', 'range(0, 0.1, 5)');
model.study('std2').feature('time').set('useinitsol', true);
model.study('std2').feature('time').set('initmethod', 'sol');
model.study('std2').feature('time').set('initstudy', 'std1');

model.sol.create('sol2');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([3]);

model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'time');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').feature('comp1_material_disp').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_Tn_ap1').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_dcnt1_wear1_h_ap1').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol2').feature('v1').feature('comp1_solid_dcnt1_wear1_h_ap1').set('resscalemethod', 'parent');
model.sol('sol2').feature('v1').feature('comp1_material_disp').set('scaleval', '0.0034083931306057393');
model.sol('sol2').feature('v1').feature('comp1_solid_Tn_ap1').set('scaleval', '100000000');
model.sol('sol2').feature('v1').feature('comp1_solid_dcnt1_wear1_h_ap1').set('scaleval', '3.9664719840180395E-5');
model.sol('sol2').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.39664719840180396');
model.sol('sol2').feature('v1').set('control', 'time');
model.sol('sol2').create('t1', 'Time');
model.sol('sol2').feature('t1').set('tlist', 'range(0, 0.1, 5)');
model.sol('sol2').feature('t1').set('plot', 'off');
model.sol('sol2').feature('t1').set('plotgroup', 'pg1');
model.sol('sol2').feature('t1').set('plotfreq', 'tout');
model.sol('sol2').feature('t1').set('probesel', 'all');
model.sol('sol2').feature('t1').set('probes', {});
model.sol('sol2').feature('t1').set('probefreq', 'tsteps');
model.sol('sol2').feature('t1').set('rtol', 0.001);
model.sol('sol2').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol2').feature('t1').set('reacf', true);
model.sol('sol2').feature('t1').set('storeudot', true);
model.sol('sol2').feature('t1').set('endtimeinterpolation', true);
model.sol('sol2').feature('t1').set('control', 'time');
model.sol('sol2').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('t1').create('se1', 'Segregated');
model.sol('sol2').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol2').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol2').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_material_disp'});
model.sol('sol2').feature('t1').feature('se1').feature('ss1').set('linsolver', 'dDef');
model.sol('sol2').feature('t1').feature('se1').feature('ss1').label('Material Frame Variables');
model.sol('sol2').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_u' 'comp1_solid_dcnt1_wear1_h_ap1'});
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('subdtech', 'auto');
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('subminstep', 0.5);
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('usesubminsteprecovery', 'on');
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('subtermauto', 'itertol');
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('subiter', 7);
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('subntolfact', 1);
model.sol('sol2').feature('t1').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol2').feature('t1').feature('d1').set('nliniterrefine', true);
model.sol('sol2').feature('t1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('linsolver', 'd1');
model.sol('sol2').feature('t1').feature('se1').feature('ss2').label('Solid Mechanics');
model.sol('sol2').feature('t1').feature('se1').create('ls1', 'LumpedStep');
model.sol('sol2').feature('t1').feature('se1').feature('ls1').set('segvar', {'comp1_solid_Tn_ap1'});
model.sol('sol2').feature('t1').feature('se1').set('maxsegiter', 15);
model.sol('sol2').feature('t1').create('i1', 'Iterative');
model.sol('sol2').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('t1').feature('i1').set('prefuntype', 'right');
model.sol('sol2').feature('t1').feature('i1').set('rhob', 40);
model.sol('sol2').feature('t1').feature('i1').set('nlinnormuse', true);
model.sol('sol2').feature('t1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol2').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 1);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 1);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').create('mg1', 'Multigrid');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('iter', 2);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('mglevels', 2);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('mg1').set('maxcoarsedof', 10000);
model.sol('sol2').feature('t1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runFromTo('st1', 'v1');

model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').set('data', 'dset2');
model.result('pg3').set('defaultPlotID', 'stress');
model.result('pg3').label('Stress (solid) 1');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').create('vol1', 'Volume');
model.result('pg3').feature('vol1').set('expr', {'solid.misesGp'});
model.result('pg3').feature('vol1').set('threshold', 'manual');
model.result('pg3').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg3').feature('vol1').set('colortable', 'Rainbow');
model.result('pg3').feature('vol1').set('colortabletrans', 'none');
model.result('pg3').feature('vol1').set('colorscalemode', 'linear');
model.result('pg3').feature('vol1').set('resolution', 'custom');
model.result('pg3').feature('vol1').set('refine', 2);
model.result('pg3').feature('vol1').set('colortable', 'Prism');
model.result('pg3').feature('vol1').create('def', 'Deform');
model.result('pg3').feature('vol1').feature('def').set('scaleactive', true);
model.result('pg3').feature('vol1').feature('def').set('scale', '1');
model.result('pg3').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg3').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result('pg3').run;
model.result.dataset.create('tran1', 'Transformation3D');
model.result.dataset('tran1').set('data', 'dset2');
model.result.dataset('tran1').set('enablerot', true);
model.result.dataset('tran1').set('rotangle', '-omega*t/200');
model.result.dataset.create('surf1', 'Surface');
model.result.dataset('surf1').set('data', 'dset2');
model.result.dataset('surf1').set('param', 'xy');
model.result.dataset('surf1').selection.set([15]);
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').run;
model.result('pg4').label('Wear Depth');
model.result('pg4').set('data', 'dset2');
model.result('pg4').set('titletype', 'label');
model.result('pg4').set('edges', false);
model.result('pg4').set('showlegendsunit', true);
model.result('pg4').create('vol1', 'Volume');
model.result('pg4').feature('vol1').set('expr', '1');
model.result('pg4').feature('vol1').create('sel1', 'Selection');
model.result('pg4').feature('vol1').feature('sel1').selection.set([1 2]);
model.result('pg4').run;
model.result('pg4').feature('vol1').create('mtrl1', 'MaterialAppearance');
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').create('arws1', 'ArrowSurface');
model.result('pg4').feature('arws1').set('data', 'tran1');
model.result('pg4').feature('arws1').set('expr', {'y*omega' '-x*omega' 'w'});
model.result('pg4').feature('arws1').setIndex('expr', 0, 2);
model.result('pg4').feature('arws1').set('arrowcount', 100);
model.result('pg4').feature('arws1').set('color', 'black');
model.result('pg4').feature('arws1').create('sel1', 'Selection');
model.result('pg4').feature('arws1').feature('sel1').selection.set([4]);
model.result('pg4').run;
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('data', 'surf1');
model.result('pg4').feature('surf1').set('expr', 'solid.htot');
model.result('pg4').feature('surf1').set('unit', 'um');
model.result('pg4').feature('surf1').set('colortable', 'WaveLight');
model.result('pg4').feature('surf1').create('trn1', 'Translation');
model.result('pg4').run;
model.result('pg4').feature('surf1').feature('trn1').set('trans', {'0' '0' '2[mm]'});

model.study('std2').feature('time').set('plot', true);
model.study('std2').feature('time').set('plotgroup', 'pg4');

model.sol('sol2').feature('v1').feature('comp1_solid_Tn_ap1').set('scaleval', '5e6');
model.sol('sol2').feature('t1').set('tstepsbdf', 'strict');
model.sol('sol2').feature('t1').set('consistent', false);
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_u' 'comp1_solid_dcnt1_wear1_h_ap1' 'comp1_material_disp'});
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('subdtech', 'const');
model.sol('sol2').feature('t1').feature('se1').feature('ss2').set('subtermconst', 'tol');
model.sol('sol2').feature('t1').feature('se1').feature.remove('ss1');
model.sol('sol2').runAll;

model.result('pg3').run;
model.result('pg4').run;
model.result('pg4').feature('arws1').set('solutionparams', 'parent');
model.result('pg4').run;
model.result('pg4').feature('surf1').set('solutionparams', 'parent');
model.result.configuration.create('ssol1', 'SingleSelectSolution');
model.result.configuration('ssol1').set('solution', 'sol2');
model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').run;
model.result('pg5').label('Pressure Distribution');
model.result('pg5').set('solutionparams', 'configuration');
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', 'gpeval(4, solid.dcnt1.wear1.Tn)');
model.result('pg5').feature('surf1').set('unit', 'MPa');
model.result('pg5').run;

model.view('view3').set('showgrid', false);

model.result('pg5').run;
model.result.duplicate('pg6', 'pg5');
model.result('pg6').run;
model.result('pg6').label('Slip Distance');
model.result('pg6').run;
model.result('pg6').feature('surf1').set('expr', 'gpeval(4, solid.sliptot)*wear_accel');
model.result('pg6').feature('surf1').set('unit', 'km');
model.result('pg6').run;
model.result('pg6').run;
model.result.duplicate('pg7', 'pg6');
model.result('pg7').run;
model.result('pg7').label('Wear Rate');
model.result('pg7').run;
model.result('pg7').feature('surf1').set('expr', 'gpeval(4, solid.h_tEff)');
model.result('pg7').feature('surf1').set('unit', 'um/s');
model.result('pg7').run;
model.result.evaluationGroup.create('eg1', 'EvaluationGroup');
model.result.evaluationGroup('eg1').set('data', 'dset2');
model.result.evaluationGroup('eg1').setIndex('looplevelinput', 'last', 0);
model.result.evaluationGroup('eg1').create('av1', 'AvSurface');
model.result.evaluationGroup('eg1').feature('av1').set('intvolume', true);
model.result.evaluationGroup('eg1').feature('av1').selection.set([15]);
model.result.evaluationGroup('eg1').feature('av1').setIndex('expr', 'solid.htot', 0);
model.result.evaluationGroup('eg1').feature('av1').setIndex('unit', 'um', 0);
model.result.evaluationGroup('eg1').feature('av1').setIndex('descr', 'Average wear depth', 0);
model.result.evaluationGroup('eg1').create('min1', 'MinSurface');
model.result.evaluationGroup('eg1').feature('min1').selection.set([15]);
model.result.evaluationGroup('eg1').feature('min1').setIndex('expr', 'solid.htot', 0);
model.result.evaluationGroup('eg1').feature('min1').setIndex('unit', 'um', 0);
model.result.evaluationGroup('eg1').feature('min1').setIndex('descr', 'Minimum wear depth', 0);
model.result.evaluationGroup('eg1').create('max1', 'MaxSurface');
model.result.evaluationGroup('eg1').feature('max1').selection.set([15]);
model.result.evaluationGroup('eg1').feature('max1').setIndex('expr', 'solid.htot', 0);
model.result.evaluationGroup('eg1').feature('max1').setIndex('unit', 'um', 0);
model.result.evaluationGroup('eg1').feature('max1').setIndex('descr', 'Maximum wear depth', 0);
model.result.evaluationGroup('eg1').run;
model.result('pg4').run;

model.view('view1').set('showgrid', true);
model.view('view1').set('showaxisorientation', true);

model.title('Disc Brake Pad Wear');

model.description('In this example, wear of the friction material in a disc brake is studied. Quasistatic friction forces are prescribed from simple kinematic considerations. The geometry of the brake pad is continuously updated to account for the material removal due to wear following the well-known Archard equation. Both the contact pressure and the wear rate changes over time as an effect of the updated pad geometry.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;

model.label('disc_brake_wear.mph');

model.modelNode.label('Components');

out = model;
