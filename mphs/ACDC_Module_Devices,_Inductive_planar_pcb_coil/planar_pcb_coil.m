function out = model
%
% planar_pcb_coil.m
%
% Model exported on May 26 2025, 21:24 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/ACDC_Module/Devices,_Inductive');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('ecis', 'ElectricCurrentsShell', 'geom1');
model.physics('ecis').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/ecis', true);

model.material.create('mat1', 'Common', '');
model.material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat1').propertyGroup.create('linzRes', 'Linearized resistivity');
model.material('mat1').label('Copper');
model.material('mat1').set('family', 'copper');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'5.998e7[S/m]' '0' '0' '0' '5.998e7[S/m]' '0' '0' '0' '5.998e7[S/m]'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'17e-6[1/K]' '0' '0' '0' '17e-6[1/K]' '0' '0' '0' '17e-6[1/K]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', '385[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('density', '8960[kg/m^3]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'400[W/(m*K)]' '0' '0' '0' '400[W/(m*K)]' '0' '0' '0' '400[W/(m*K)]'});
model.material('mat1').propertyGroup('Enu').set('E', '110[GPa]');
model.material('mat1').propertyGroup('Enu').set('nu', '0.35');
model.material('mat1').propertyGroup('linzRes').set('rho0', '1.72e-8[ohm*m]');
model.material('mat1').propertyGroup('linzRes').set('alpha', '0.0039[1/K]');
model.material('mat1').propertyGroup('linzRes').set('Tref', '298[K]');
model.material('mat1').propertyGroup('linzRes').addInput('temperature');
model.material.create('mat2', 'Common', '');
model.material('mat2').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat2').label('FR4 (Circuit Board)');
model.material('mat2').set('family', 'pcbgreen');
model.material('mat2').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('electricconductivity', {'0.004[S/m]' '0' '0' '0' '0.004[S/m]' '0' '0' '0' '0.004[S/m]'});
model.material('mat2').propertyGroup('def').set('relpermittivity', {'4.5' '0' '0' '0' '4.5' '0' '0' '0' '4.5'});
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'18e-6[1/K]' '0' '0' '0' '18e-6[1/K]' '0' '0' '0' '18e-6[1/K]'});
model.material('mat2').propertyGroup('def').set('heatcapacity', '1369[J/(kg*K)]');
model.material('mat2').propertyGroup('def').set('density', '1900[kg/m^3]');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'0.3[W/(m*K)]' '0' '0' '0' '0.3[W/(m*K)]' '0' '0' '0' '0.3[W/(m*K)]'});
model.material('mat2').propertyGroup('Enu').set('E', '22[GPa]');
model.material('mat2').propertyGroup('Enu').set('nu', '0.15');
model.material.create('lmat1', 'LayeredMaterial', '');
model.material('lmat1').label('Upper Metalization');
model.material('lmat1').setIndex('layername', 'Cu_up', 0);
model.material('lmat1').setIndex('thickness', '1E-4', 0);
model.material.create('lmat2', 'LayeredMaterial', '');
model.material('lmat2').label('Lower Metalization');
model.material('lmat2').setIndex('layername', 'Cu_down', 0);
model.material('lmat2').setIndex('thickness', '1E-4', 0);
model.material.create('lmat3', 'LayeredMaterial', '');
model.material('lmat3').label('Vias Metalization');
model.material('lmat3').setIndex('layername', 'Cu_vias', 0);
model.material('lmat3').setIndex('thickness', '2E-4', 0);

model.geom('geom1').lengthUnit('mm');
model.geom('geom1').create('wp1', 'WorkPlane');
model.geom('geom1').feature('wp1').set('unite', true);
model.geom('geom1').feature('wp1').geom.create('pol1', 'Polygon');
model.geom('geom1').feature('wp1').geom.feature('pol1').set('source', 'vectors');
model.geom('geom1').feature('wp1').geom.feature('pol1').set('x', '-6 -6 -5.5 -5.5 -4 -4 4.5 4.5 -3 -3 3.5 3.5 -2 -2 -2 2.5 2.5 -1 -1 -0.5 -0.5 2 2 -1.5 -1.5 -1.5 3 3 -2.5 -2.5 4 4 -3.5 -3.5 -5.5 -5.5 -6');
model.geom('geom1').feature('wp1').geom.feature('pol1').set('y', '0.5 2 2 1.5 1.5 3.5 3.5 -4 -4 2.5 2.5 -3 -3 -2 1.5 1.5 -2 -2 -1 -1 -1.5 -1.5 1 1 -2 -2.5 -2.5 2 2 -3.5 -3.5 3 3 1 1 0.5 0.5');
model.geom('geom1').feature('wp1').geom.run('pol1');
model.geom('geom1').feature('wp1').geom.create('c1', 'Circle');
model.geom('geom1').feature('wp1').geom.feature('c1').set('r', 0.5);
model.geom('geom1').feature('wp1').geom.feature('c1').set('pos', [-0.75 -0.75]);
model.geom('geom1').feature('wp1').geom.run('c1');
model.geom('geom1').feature('wp1').geom.create('pol2', 'Polygon');
model.geom('geom1').feature('wp1').geom.feature('pol2').set('source', 'vectors');
model.geom('geom1').feature('wp1').geom.feature('pol2').set('x', '-6  -6 -5.5 -5.5 -4 -4 -5.5 -5.5');
model.geom('geom1').feature('wp1').geom.feature('pol2').set('y', '-1.5 0 0 -0.5 -0.5 -1 -1 -1.5');
model.geom('geom1').feature('wp1').geom.run('pol2');
model.geom('geom1').feature('wp1').geom.create('c2', 'Circle');
model.geom('geom1').feature('wp1').geom.feature('c2').set('r', 0.5);
model.geom('geom1').feature('wp1').geom.feature('c2').set('pos', [-3.75 -0.75]);
model.geom('geom1').feature('wp1').geom.run('c2');
model.geom('geom1').feature('wp1').geom.create('uni1', 'Union');
model.geom('geom1').feature('wp1').geom.feature('uni1').selection('input').set({'c1' 'c2' 'pol1' 'pol2'});
model.geom('geom1').feature('wp1').geom.run('uni1');
model.geom('geom1').feature('wp1').geom.create('del1', 'Delete');
model.geom('geom1').feature('wp1').geom.feature('del1').selection('input').set('uni1', [15 16 17 38 39 42]);
model.geom('geom1').run('wp1');
model.geom('geom1').create('wp2', 'WorkPlane');
model.geom('geom1').feature('wp2').set('unite', true);
model.geom('geom1').feature('wp2').geom.create('pol1', 'Polygon');
model.geom('geom1').feature('wp2').geom.feature('pol1').set('source', 'vectors');
model.geom('geom1').feature('wp2').geom.feature('pol1').set('x', '-3.5  -1 -1 -3.5');
model.geom('geom1').feature('wp2').geom.feature('pol1').set('y', '-0.5 -0.5 -1 -1');
model.geom('geom1').feature('wp2').geom.run('pol1');
model.geom('geom1').feature('wp2').geom.create('c1', 'Circle');
model.geom('geom1').feature('wp2').geom.feature('c1').set('r', 0.5);
model.geom('geom1').feature('wp2').geom.feature('c1').set('pos', [-0.75 -0.75]);
model.geom('geom1').feature('wp2').geom.run('c1');
model.geom('geom1').feature('wp2').geom.create('c2', 'Circle');
model.geom('geom1').feature('wp2').geom.feature('c2').set('r', 0.5);
model.geom('geom1').feature('wp2').geom.feature('c2').set('pos', [-3.75 -0.75]);
model.geom('geom1').feature('wp2').geom.run('c2');
model.geom('geom1').feature('wp2').geom.create('uni1', 'Union');
model.geom('geom1').feature('wp2').geom.feature('uni1').selection('input').set({'c1' 'c2' 'pol1'});
model.geom('geom1').feature('wp2').geom.run('uni1');
model.geom('geom1').feature('wp2').geom.create('del1', 'Delete');
model.geom('geom1').feature('wp2').geom.feature('del1').selection('input').set('uni1', [1 2 3 6 7 8]);
model.geom('geom1').run('wp2');
model.geom('geom1').create('wp3', 'WorkPlane');
model.geom('geom1').feature('wp3').set('unite', true);
model.geom('geom1').feature('wp3').geom.create('r1', 'Rectangle');
model.geom('geom1').feature('wp3').geom.feature('r1').set('size', [0.5 0.5]);
model.geom('geom1').feature('wp3').geom.feature('r1').set('pos', [-6 0]);
model.geom('geom1').feature('wp1').label('Upper Layer');
model.geom('geom1').selection.create('csel1', 'CumulativeSelection');
model.geom('geom1').selection('csel1').label('Top');
model.geom('geom1').feature('wp1').set('contributeto', 'csel1');
model.geom('geom1').feature('wp2').label('Lower Layer');
model.geom('geom1').selection.create('csel2', 'CumulativeSelection');
model.geom('geom1').selection('csel2').label('Bottom');
model.geom('geom1').feature('wp2').set('contributeto', 'csel2');
model.geom('geom1').feature('wp3').label('Magnetic Insulation Layer');
model.geom('geom1').selection.create('csel3', 'CumulativeSelection');
model.geom('geom1').selection('csel3').label('Insulation');
model.geom('geom1').feature('wp3').set('contributeto', 'csel3');
model.geom('geom1').run('wp3');
model.geom('geom1').create('blk1', 'Block');
model.geom('geom1').feature('blk1').set('size', [18 17 10]);
model.geom('geom1').feature('blk1').set('base', 'center');
model.geom('geom1').run('blk1');
model.geom('geom1').run('fin');

model.view('view1').hideObjects.create('hide1');
model.view('view1').hideObjects('hide1').init(2);
model.view('view1').hideObjects('hide1').set('fin', [1 2 4]);

model.geom('geom1').create('sel1', 'ExplicitSelection');
model.geom('geom1').feature('sel1').label('Vias');
model.geom('geom1').feature('sel1').selection('selection').init(2);
model.geom('geom1').feature('sel1').selection('selection').set('fin', [9 17]);
model.geom('geom1').run('sel1');
model.geom('geom1').create('unisel1', 'UnionSelection');
model.geom('geom1').feature('unisel1').set('entitydim', 2);
model.geom('geom1').feature('unisel1').label('PCB');
model.geom('geom1').feature('unisel1').set('input', {'csel1' 'csel2'});
model.geom('geom1').run('unisel1');
model.geom('geom1').create('intsel1', 'IntersectionSelection');
model.geom('geom1').feature('intsel1').set('entitydim', 2);
model.geom('geom1').feature('intsel1').label('Intersections and Vias');
model.geom('geom1').feature('intsel1').set('input', {'csel1' 'csel2'});
model.geom('geom1').run('intsel1');
model.geom('geom1').create('difsel1', 'DifferenceSelection');
model.geom('geom1').feature('difsel1').set('entitydim', 2);
model.geom('geom1').feature('difsel1').label('Intersections');
model.geom('geom1').feature('difsel1').set('add', {'intsel1'});
model.geom('geom1').feature('difsel1').set('subtract', {'sel1'});
model.geom('geom1').run('difsel1');

model.material.create('mat3', 'Common', 'comp1');
model.material('mat3').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat3').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat3').propertyGroup('def').func.create('rho', 'Analytic');
model.material('mat3').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat3').propertyGroup('def').func.create('cs', 'Analytic');
model.material('mat3').propertyGroup('def').func.create('an1', 'Analytic');
model.material('mat3').propertyGroup('def').func.create('an2', 'Analytic');
model.material('mat3').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat3').propertyGroup.create('NonlinearModel', 'Nonlinear model');
model.material('mat3').propertyGroup.create('idealGas', 'Ideal gas');
model.material('mat3').propertyGroup('idealGas').func.create('Cp', 'Piecewise');
model.material('mat3').label('Air');
model.material('mat3').set('family', 'air');
model.material('mat3').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat3').propertyGroup('def').func('eta').set('pieces', {'200.0' '1600.0' '-8.38278E-7+8.35717342E-8*T^1-7.69429583E-11*T^2+4.6437266E-14*T^3-1.06585607E-17*T^4'});
model.material('mat3').propertyGroup('def').func('eta').set('argunit', 'K');
model.material('mat3').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.material('mat3').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat3').propertyGroup('def').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat3').propertyGroup('def').func('Cp').set('argunit', 'K');
model.material('mat3').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat3').propertyGroup('def').func('rho').set('expr', 'pA*0.02897/R_const[K*mol/J]/T');
model.material('mat3').propertyGroup('def').func('rho').set('args', {'pA' 'T'});
model.material('mat3').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.material('mat3').propertyGroup('def').func('rho').set('argunit', {'Pa' 'K'});
model.material('mat3').propertyGroup('def').func('rho').set('plotaxis', {'off' 'on'});
model.material('mat3').propertyGroup('def').func('rho').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat3').propertyGroup('def').func('rho').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '293.15'});
model.material('mat3').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat3').propertyGroup('def').func('k').set('pieces', {'200.0' '1600.0' '-0.00227583562+1.15480022E-4*T^1-7.90252856E-8*T^2+4.11702505E-11*T^3-7.43864331E-15*T^4'});
model.material('mat3').propertyGroup('def').func('k').set('argunit', 'K');
model.material('mat3').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.material('mat3').propertyGroup('def').func('cs').set('expr', 'sqrt(1.4*R_const[K*mol/J]/0.02897*T)');
model.material('mat3').propertyGroup('def').func('cs').set('args', {'T'});
model.material('mat3').propertyGroup('def').func('cs').set('fununit', 'm/s');
model.material('mat3').propertyGroup('def').func('cs').set('argunit', {'K'});
model.material('mat3').propertyGroup('def').func('cs').set('plotfixedvalue', {'273.15'});
model.material('mat3').propertyGroup('def').func('cs').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat3').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.material('mat3').propertyGroup('def').func('an1').set('expr', '-1/rho(pA,T)*d(rho(pA,T),T)');
model.material('mat3').propertyGroup('def').func('an1').set('args', {'pA' 'T'});
model.material('mat3').propertyGroup('def').func('an1').set('fununit', '1/K');
model.material('mat3').propertyGroup('def').func('an1').set('argunit', {'Pa' 'K'});
model.material('mat3').propertyGroup('def').func('an1').set('plotaxis', {'off' 'on'});
model.material('mat3').propertyGroup('def').func('an1').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat3').propertyGroup('def').func('an1').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '373.15'});
model.material('mat3').propertyGroup('def').func('an2').set('funcname', 'muB');
model.material('mat3').propertyGroup('def').func('an2').set('expr', '0.6*eta(T)');
model.material('mat3').propertyGroup('def').func('an2').set('args', {'T'});
model.material('mat3').propertyGroup('def').func('an2').set('fununit', 'Pa*s');
model.material('mat3').propertyGroup('def').func('an2').set('argunit', {'K'});
model.material('mat3').propertyGroup('def').func('an2').set('plotfixedvalue', {'200'});
model.material('mat3').propertyGroup('def').func('an2').set('plotargs', {'T' '200' '1600'});
model.material('mat3').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.material('mat3').propertyGroup('def').set('molarmass', '');
model.material('mat3').propertyGroup('def').set('bulkviscosity', '');
model.material('mat3').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)'});
model.material('mat3').propertyGroup('def').set('molarmass', '0.02897[kg/mol]');
model.material('mat3').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.material('mat3').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.material('mat3').propertyGroup('def').set('ratioofspecificheat', '1.4');
model.material('mat3').propertyGroup('def').set('electricconductivity', {'0[S/m]' '0' '0' '0' '0[S/m]' '0' '0' '0' '0[S/m]'});
model.material('mat3').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.material('mat3').propertyGroup('def').set('density', 'rho(pA,T)');
model.material('mat3').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.material('mat3').propertyGroup('def').set('soundspeed', 'cs(T)');
model.material('mat3').propertyGroup('def').addInput('temperature');
model.material('mat3').propertyGroup('def').addInput('pressure');
model.material('mat3').propertyGroup('RefractiveIndex').set('n', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('NonlinearModel').set('BA', 'def.gamma-1');
model.material('mat3').propertyGroup('idealGas').func('Cp').label('Piecewise 2');
model.material('mat3').propertyGroup('idealGas').func('Cp').set('arg', 'T');
model.material('mat3').propertyGroup('idealGas').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat3').propertyGroup('idealGas').func('Cp').set('argunit', 'K');
model.material('mat3').propertyGroup('idealGas').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat3').propertyGroup('idealGas').set('Rs', 'R_const/Mn');
model.material('mat3').propertyGroup('idealGas').set('heatcapacity', 'Cp(T)');
model.material('mat3').propertyGroup('idealGas').set('ratioofspecificheat', '1.4');
model.material('mat3').propertyGroup('idealGas').set('molarmass', '0.02897');
model.material('mat3').propertyGroup('idealGas').addInput('temperature');
model.material('mat3').propertyGroup('idealGas').addInput('pressure');
model.material('mat3').materialType('nonSolid');
model.material('mat3').selection.geom('geom1', 3);
model.material('mat3').selection.all;
model.material.create('stlmat1', 'LayeredMaterialStack', 'comp1');
model.material('stlmat1').label('Upper Metalization');
model.material('stlmat1').selection.named('geom1_csel1_bnd');
model.material('stlmat1').set('middlePlane', 'bottom');
model.material('stlmat1').feature.create('lmat1', 'LayeredMaterial', 'comp1');
model.material('stlmat1').feature('lmat1').setIndex('layername', 'Backing', 0);
model.material('stlmat1').feature('lmat1').setIndex('link', 'mat2', 0);
model.material('stlmat1').feature('lmat1').setIndex('thickness', '3E-4', 0);
model.material('stlmat1').feature('lmat1').label('Backing Under Upper Metalization');
model.material('stlmat1').feature.move('lmat1', 0);
model.material('stlmat1').feature('stllmat1').label('Upper Metalization');
model.material.create('stlmat2', 'LayeredMaterialStack', 'comp1');
model.material('stlmat2').label('Lower Metalization');
model.material('stlmat2').selection.named('geom1_csel2_bnd');
model.material('stlmat2').set('middlePlane', 'bottom');
model.material('stlmat2').feature('stllmat1').set('link', 'lmat2');
model.material('stlmat2').feature('stllmat1').label('Lower Metalization');
model.material.create('stlmat3', 'LayeredMaterialStack', 'comp1');
model.material('stlmat3').label('Intersections');
model.material('stlmat3').selection.named('geom1_difsel1');
model.material('stlmat3').set('middlePlane', 'bottom');
model.material('stlmat3').feature('stllmat1').set('link', 'lmat2');
model.material('stlmat3').feature('stllmat1').label('Lower Metalization');
model.material('stlmat3').feature.create('lmat1', 'LayeredMaterial', 'comp1');
model.material('stlmat3').feature('lmat1').label('Intersection Insulator');
model.material('stlmat3').feature('lmat1').setIndex('layername', 'Insulator', 0);
model.material('stlmat3').feature('lmat1').setIndex('link', 'mat2', 0);
model.material('stlmat3').feature('lmat1').setIndex('thickness', '2E-4', 0);
model.material('stlmat3').feature.create('stllmat2', 'LayeredMaterialStackLink', 'comp1');
model.material('stlmat3').feature('stllmat2').label('Upper Metalization');
model.material.create('stlmat4', 'LayeredMaterialStack', 'comp1');
model.material('stlmat4').selection.named('geom1_sel1');
model.material('stlmat4').label('Vias');
model.material('stlmat4').set('middlePlane', 'bottom');
model.material('stlmat4').feature('stllmat1').label('Lower Metalization');
model.material('stlmat4').feature('stllmat1').set('link', 'lmat2');
model.material('stlmat4').feature.create('stllmat2', 'LayeredMaterialStackLink', 'comp1');
model.material('stlmat4').feature('stllmat2').set('link', 'lmat3');
model.material('stlmat4').feature('stllmat2').label('Vias Metalization');
model.material('stlmat4').feature.create('stllmat3', 'LayeredMaterialStackLink', 'comp1');
model.material('stlmat4').feature('stllmat3').label('Upper Metalization');

model.physics('ecis').selection.named('geom1_unisel1');
model.physics('ecis').prop('LayerSelection').set('lth_mat', 'from_mat');
model.physics('ecis').feature('csh1').create('bterm1', 'BoundaryTerminal', 1);
model.physics('ecis').feature('csh1').feature('bterm1').selection.set([12]);
model.physics('ecis').feature('csh1').feature('bterm1').set('I0', 1);
model.physics('ecis').feature('csh1').create('bgnd1', 'BoundaryGround', 1);
model.physics('ecis').feature('csh1').feature('bgnd1').selection.set([14]);
model.physics('ecis').create('inl1', 'InsulatingLayer', 2);
model.physics('ecis').feature('inl1').selection.all;
model.physics('ecis').feature('inl1').setIndex('shelllist_lCheck', 0, 1, 0);
model.physics('ecis').create('inl2', 'InsulatingLayer', 2);
model.physics('ecis').feature('inl2').selection.all;
model.physics('ecis').feature('inl2').set('shelllist', 'stlmat3');
model.physics('ecis').feature('inl2').setIndex('shelllist_lCheck', 0, 0, 0);
model.physics('ecis').feature('inl2').setIndex('shelllist_lCheck', 0, 2, 0);
model.physics('ecis').create('cls1', 'ContinuityLayeredShell', 1);
model.physics('ecis').feature('cls1').set('shelllist_src', 'stlmat1');
model.physics('ecis').feature('cls1').set('shelllist', 'stlmat3');
model.physics('ecis').create('cls2', 'ContinuityLayeredShell', 1);
model.physics('ecis').feature('cls2').set('shelllist_src', 'stlmat1');
model.physics('ecis').feature('cls2').set('shelllist', 'stlmat4');
model.physics('ecis').create('cls3', 'ContinuityLayeredShell', 1);
model.physics('ecis').feature('cls3').set('shelllist_src', 'stlmat2');
model.physics('ecis').feature('cls3').set('shelllist', 'stlmat3');
model.physics('ecis').create('cls4', 'ContinuityLayeredShell', 1);
model.physics('ecis').feature('cls4').set('shelllist_src', 'stlmat2');
model.physics('ecis').feature('cls4').set('shelllist', 'stlmat4');
model.physics.create('mf', 'InductionCurrents', 'geom1');
model.physics('mf').model('comp1');

model.study('std1').feature('stat').setSolveFor('/physics/mf', true);

model.physics('mf').create('scu1', 'SurfaceCurrent', 2);
model.physics('mf').feature('scu1').set('Js0', {'ecis.JsX' 'ecis.JsY' 'ecis.JsZ'});
model.physics('mf').feature('scu1').selection.named('geom1_unisel1');
model.physics('mf').create('mi2', 'MagneticInsulation', 2);
model.physics('mf').feature('mi2').selection.named('geom1_csel3_bnd');

model.mesh('mesh1').create('ftet1', 'FreeTet');
model.mesh('mesh1').feature('ftet1').create('size1', 'Size');
model.mesh('mesh1').feature('ftet1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('ftet1').feature('size1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('ftet1').feature('size1').selection.named('geom1_unisel1');
model.mesh('mesh1').feature('ftet1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('ftet1').feature('size1').set('hmax', 0.35);
model.mesh('mesh1').run;

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('se1', 'Segregated');
model.sol('sol1').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_ecis_Vc' 'comp1_ecis_csh1_bterm1_V0_ode'});
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').label('Electric Currents in Shells');
model.sol('sol1').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_A'});
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'fgmres');
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('ams1', 'AMS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('ams1').set('prefun', 'ams');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('ams1').set('sorvecdof', {'comp1_A'});
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('linsolver', 'i1');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').label('Magnetic Fields');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.dataset.create('lshl1', 'LayeredMaterial');
model.result.dataset('lshl1').set('data', 'dset1');
model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').label('Electric Potential (ecis)');
model.result('pg1').set('data', 'lshl1');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').set('showlegendsmaxmin', true);
model.result('pg1').set('data', 'lshl1');
model.result('pg1').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom2/pdef1/pcond4/pcond1/pcond1/pg1');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('solutionparams', 'parent');
model.result('pg1').feature('surf1').set('colortable', 'Dipole');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Magnetic Flux Density Norm (mf)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('showlegendsmaxmin', true);
model.result('pg2').set('data', 'dset1');
model.result('pg2').set('defaultPlotID', 'InterfaceComponents/PlotDefaults/icom6/pdef1/pcond2/pcond1/pg1');
model.result('pg2').feature.create('mslc1', 'Multislice');
model.result('pg2').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg2').feature('mslc1').set('solutionparams', 'parent');
model.result('pg2').feature('mslc1').set('expr', 'mf.normB');
model.result('pg2').feature('mslc1').set('multiplanexmethod', 'coord');
model.result('pg2').feature('mslc1').set('xcoord', 'mf.CPx');
model.result('pg2').feature('mslc1').set('multiplaneymethod', 'coord');
model.result('pg2').feature('mslc1').set('ycoord', 'mf.CPy');
model.result('pg2').feature('mslc1').set('multiplanezmethod', 'coord');
model.result('pg2').feature('mslc1').set('zcoord', 'mf.CPz');
model.result('pg2').feature('mslc1').set('colortable', 'Prism');
model.result('pg2').feature('mslc1').set('colortabletrans', 'nonlinear');
model.result('pg2').feature('mslc1').set('colorcalibration', -0.8);
model.result('pg2').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg2').feature('mslc1').set('data', 'parent');
model.result('pg2').feature.create('strmsl1', 'StreamlineMultislice');
model.result('pg2').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg2').feature('strmsl1').set('solutionparams', 'parent');
model.result('pg2').feature('strmsl1').set('expr', {'mf.Bx' 'mf.By' 'mf.Bz'});
model.result('pg2').feature('strmsl1').set('multiplanexmethod', 'coord');
model.result('pg2').feature('strmsl1').set('xcoord', 'mf.CPx');
model.result('pg2').feature('strmsl1').set('multiplaneymethod', 'coord');
model.result('pg2').feature('strmsl1').set('ycoord', 'mf.CPy');
model.result('pg2').feature('strmsl1').set('multiplanezmethod', 'coord');
model.result('pg2').feature('strmsl1').set('zcoord', 'mf.CPz');
model.result('pg2').feature('strmsl1').set('titletype', 'none');
model.result('pg2').feature('strmsl1').set('posmethod', 'uniform');
model.result('pg2').feature('strmsl1').set('udist', 0.02);
model.result('pg2').feature('strmsl1').set('maxlen', 0.4);
model.result('pg2').feature('strmsl1').set('maxtime', Inf);
model.result('pg2').feature('strmsl1').set('inheritcolor', false);
model.result('pg2').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg2').feature('strmsl1').set('maxtime', Inf);
model.result('pg2').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg2').feature('strmsl1').set('maxtime', Inf);
model.result('pg2').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg2').feature('strmsl1').set('maxtime', Inf);
model.result('pg2').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg2').feature('strmsl1').set('maxtime', Inf);
model.result('pg2').feature('strmsl1').set('data', 'parent');
model.result('pg2').feature('strmsl1').set('inheritplot', 'mslc1');
model.result('pg2').feature('strmsl1').feature.create('col1', 'Color');
model.result('pg2').feature('strmsl1').feature('col1').set('expr', 'mf.normB');
model.result('pg2').feature('strmsl1').feature('col1').set('colortable', 'PrismDark');
model.result('pg2').feature('strmsl1').feature('col1').set('colorlegend', false);
model.result('pg2').feature('strmsl1').feature('col1').set('colortabletrans', 'nonlinear');
model.result('pg2').feature('strmsl1').feature('col1').set('colorcalibration', -0.8);
model.result('pg2').feature('strmsl1').feature.create('filt1', 'Filter');
model.result('pg2').feature('strmsl1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result('pg1').run;
model.result('pg2').run;
model.result('pg2').feature('mslc1').set('multiplanexmethod', 'number');
model.result('pg2').feature('mslc1').set('xnumber', '0');
model.result('pg2').feature('mslc1').set('multiplaneymethod', 'number');
model.result('pg2').feature('mslc1').set('ynumber', '0');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature.remove('strmsl1');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').create('arws1', 'ArrowSurface');
model.result('pg2').feature('arws1').set('expr', {'mf.scu1.Js0x' 'mf.scu1.Js0y' 'mf.scu1.Js0z'});
model.result('pg2').feature('arws1').set('descr', 'Surface current density');
model.result('pg2').feature('arws1').set('scaleactive', true);
model.result('pg2').feature('arws1').set('scale', '2e-4');
model.result('pg2').feature('arws1').set('arrowcount', '1e4');
model.result('pg2').feature('arws1').set('color', 'black');
model.result('pg2').run;
model.result.numerical.create('gev1', 'EvalGlobal');
model.result.numerical('gev1').set('expr', {'ecis.V0_1'});
model.result.numerical('gev1').set('descr', {'Terminal voltage'});
model.result.numerical('gev1').setIndex('expr', 'ecis.V0_1/ecis.I0_1', 0);
model.result.numerical('gev1').setIndex('unit', ['m' 'ohm' ], 0);
model.result.numerical('gev1').setIndex('descr', 'Resistance', 0);
model.result.numerical('gev1').setIndex('expr', '2*mf.intWm/ecis.I0_1^2', 1);
model.result.numerical('gev1').setIndex('unit', 'uH', 1);
model.result.numerical('gev1').setIndex('descr', 'Inductance', 1);
model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').comments('Global Evaluation 1');
model.result.numerical('gev1').set('table', 'tbl1');
model.result.numerical('gev1').setResult;

model.title('Planar PCB Coil');

model.description('This tutorial example shows how to use the Electric Currents, Layered Shell interface together with the Magnetic Field interface to estimate the resistance and inductance of a planar PCB coil in the stationary regime. Typical applications for such a device spans from energy harvesting to wireless recharging.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;

model.label('planar_pcb_coil.mph');

model.modelNode.label('Components');

out = model;
