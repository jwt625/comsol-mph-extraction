function out = model
%
% rectangular_horn_shape_optimization.m
%
% Model exported on May 26 2025, 21:25 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Acoustics_Module/Optimization');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('acpr', 'PressureAcoustics', 'geom1');
model.physics('acpr').model('comp1');
model.physics.create('cir', 'Circuit', 'geom1');
model.physics('cir').model('comp1');

model.study.create('std1');
model.study('std1').create('freq', 'Frequency');
model.study('std1').feature('freq').setSolveFor('/physics/acpr', true);
model.study('std1').feature('freq').setSolveFor('/physics/cir', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('f0', 'c0/1/h0', 'Frequency');
model.param.set('c0', '343[m/s]', 'Speed of sound');
model.param.set('R0', '4*h0', 'Evaluation distance');
model.param.set('theta0', '15[deg]', 'Desired rotation of beam');
model.param.set('h0', '0.3[m]', 'Horn height');
model.param.set('w0', 'h0', 'Horn width');
model.param.set('L0', '0.8*h0', 'Horn length');
model.param.set('scaleMax', '0.2', 'Maximum displacement');
model.param.set('Rair', '2*h0', 'Air radius');
model.param.set('V0', '1[V]', 'Driving voltage');
model.param.set('rSpeaker', 'L0/2.2', 'Speaker radius');
model.param.set('backV', '10[cm^3]', 'Back volume');
model.param.set('meshsz', 'c0/f0/6', 'Mesh size');

model.geom('geom1').insertFile('rectangular_horn_shape_optimization_geom_sequence.mph', 'geom1');
model.geom('geom1').run('boxsel3');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('rho', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('cs', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an1', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an2', 'Analytic');
model.material('mat1').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat1').propertyGroup.create('NonlinearModel', 'Nonlinear model');
model.material('mat1').propertyGroup.create('idealGas', 'Ideal gas');
model.material('mat1').propertyGroup('idealGas').func.create('Cp', 'Piecewise');
model.material('mat1').label('Air');
model.material('mat1').set('family', 'air');
model.material('mat1').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('eta').set('pieces', {'200.0' '1600.0' '-8.38278E-7+8.35717342E-8*T^1-7.69429583E-11*T^2+4.6437266E-14*T^3-1.06585607E-17*T^4'});
model.material('mat1').propertyGroup('def').func('eta').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat1').propertyGroup('def').func('Cp').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('def').func('rho').set('expr', 'pA*0.02897/R_const[K*mol/J]/T');
model.material('mat1').propertyGroup('def').func('rho').set('args', {'pA' 'T'});
model.material('mat1').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.material('mat1').propertyGroup('def').func('rho').set('argunit', {'Pa' 'K'});
model.material('mat1').propertyGroup('def').func('rho').set('plotaxis', {'off' 'on'});
model.material('mat1').propertyGroup('def').func('rho').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat1').propertyGroup('def').func('rho').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '293.15'});
model.material('mat1').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('k').set('pieces', {'200.0' '1600.0' '-0.00227583562+1.15480022E-4*T^1-7.90252856E-8*T^2+4.11702505E-11*T^3-7.43864331E-15*T^4'});
model.material('mat1').propertyGroup('def').func('k').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.material('mat1').propertyGroup('def').func('cs').set('expr', 'sqrt(1.4*R_const[K*mol/J]/0.02897*T)');
model.material('mat1').propertyGroup('def').func('cs').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('cs').set('fununit', 'm/s');
model.material('mat1').propertyGroup('def').func('cs').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('cs').set('plotfixedvalue', {'273.15'});
model.material('mat1').propertyGroup('def').func('cs').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.material('mat1').propertyGroup('def').func('an1').set('expr', '-1/rho(pA,T)*d(rho(pA,T),T)');
model.material('mat1').propertyGroup('def').func('an1').set('args', {'pA' 'T'});
model.material('mat1').propertyGroup('def').func('an1').set('fununit', '1/K');
model.material('mat1').propertyGroup('def').func('an1').set('argunit', {'Pa' 'K'});
model.material('mat1').propertyGroup('def').func('an1').set('plotaxis', {'off' 'on'});
model.material('mat1').propertyGroup('def').func('an1').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat1').propertyGroup('def').func('an1').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an2').set('funcname', 'muB');
model.material('mat1').propertyGroup('def').func('an2').set('expr', '0.6*eta(T)');
model.material('mat1').propertyGroup('def').func('an2').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('an2').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('an2').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an2').set('plotfixedvalue', {'200'});
model.material('mat1').propertyGroup('def').func('an2').set('plotargs', {'T' '200' '1600'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.material('mat1').propertyGroup('def').set('molarmass', '');
model.material('mat1').propertyGroup('def').set('bulkviscosity', '');
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)'});
model.material('mat1').propertyGroup('def').set('molarmass', '0.02897[kg/mol]');
model.material('mat1').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.material('mat1').propertyGroup('def').set('ratioofspecificheat', '1.4');
model.material('mat1').propertyGroup('def').set('electricconductivity', {'0[S/m]' '0' '0' '0' '0[S/m]' '0' '0' '0' '0[S/m]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.material('mat1').propertyGroup('def').set('density', 'rho(pA,T)');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.material('mat1').propertyGroup('def').set('soundspeed', 'cs(T)');
model.material('mat1').propertyGroup('def').addInput('temperature');
model.material('mat1').propertyGroup('def').addInput('pressure');
model.material('mat1').propertyGroup('RefractiveIndex').set('n', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('NonlinearModel').set('BA', 'def.gamma-1');
model.material('mat1').propertyGroup('idealGas').func('Cp').label('Piecewise 2');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat1').propertyGroup('idealGas').func('Cp').set('argunit', 'K');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('idealGas').set('Rs', 'R_const/Mn');
model.material('mat1').propertyGroup('idealGas').set('heatcapacity', 'Cp(T)');
model.material('mat1').propertyGroup('idealGas').set('ratioofspecificheat', '1.4');
model.material('mat1').propertyGroup('idealGas').set('molarmass', '0.02897');
model.material('mat1').propertyGroup('idealGas').addInput('temperature');
model.material('mat1').propertyGroup('idealGas').addInput('pressure');
model.material('mat1').materialType('nonSolid');

model.physics('acpr').create('efc1', 'ExteriorFieldCalculation', 2);
model.physics('acpr').feature('efc1').selection.named('geom1_ballsel1');
model.physics('acpr').feature('efc1').setIndex('SymmetryCondition1', 1, 0);
model.physics('acpr').feature('efc1').setIndex('SymmetryCondition2', 1, 0);
model.physics('acpr').create('lsb1', 'LumpedSpeakerBoundary', 2);
model.physics('acpr').feature('lsb1').selection.named('geom1_cylsel1');
model.physics('acpr').feature('lsb1').set('SpeakerArea', 'UseSymmetries');
model.physics('acpr').feature('lsb1').set('e_ax', [0 0 1]);
model.physics('acpr').feature('lsb1').set('V_back', 'backV');
model.physics('acpr').create('pmb1', 'PerfectlyMatchedBoundary', 2);
model.physics('acpr').feature('pmb1').selection.named('geom1_ballsel1');
model.physics('acpr').create('sym1', 'Symmetry', 2);
model.physics('acpr').feature('sym1').selection.named('geom1_boxsel3');
model.physics('cir').create('V1', 'VoltageSource', -1);
model.physics('cir').feature('V1').setIndex('Connections', 0, 1, 0);
model.physics('cir').feature('V1').set('value', 'V0');
model.physics('cir').create('R1', 'Resistor', -1);
model.physics('cir').feature('R1').setIndex('Connections', 1, 0, 0);
model.physics('cir').feature('R1').setIndex('Connections', 2, 1, 0);
model.physics('cir').feature('R1').set('R', '3[ohm]');
model.physics('cir').create('L1', 'Inductor', -1);
model.physics('cir').feature('L1').setIndex('Connections', 2, 0, 0);
model.physics('cir').feature('L1').setIndex('Connections', 3, 1, 0);
model.physics('cir').feature('L1').set('L', '0.25[mH]');
model.physics('cir').feature.duplicate('L2', 'L1');
model.physics('cir').feature('L2').setIndex('Connections', 6, 0, 0);
model.physics('cir').feature('L2').setIndex('Connections', 7, 1, 0);
model.physics('cir').feature('L2').set('L', '6[g]*1[H/kg]');
model.physics('cir').create('H1', 'CurrentVoltageSource', -1);
model.physics('cir').feature('H1').setIndex('Connections', 3, 0, 0);
model.physics('cir').feature('H1').setIndex('Connections', 0, 1, 0);
model.physics('cir').feature('H1').set('device', 'L2');
model.physics('cir').feature('H1').set('gain', '5[T*m]/1[T*m/ohm]');
model.physics('cir').feature.duplicate('H2', 'H1');
model.physics('cir').feature('H2').setIndex('Connections', 6, 0, 0);
model.physics('cir').feature('H2').setIndex('Connections', 0, 1, 0);
model.physics('cir').feature('H2').set('device', 'R1');
model.physics('cir').create('R2', 'Resistor', -1);
model.physics('cir').feature('R2').setIndex('Connections', 7, 0, 0);
model.physics('cir').feature('R2').setIndex('Connections', 8, 1, 0);
model.physics('cir').feature('R2').set('R', '0.7[kg/s]*1[ohm/kg*s]');
model.physics('cir').create('C1', 'Capacitor', -1);
model.physics('cir').feature('C1').setIndex('Connections', 8, 0, 0);
model.physics('cir').feature('C1').setIndex('Connections', 9, 1, 0);
model.physics('cir').feature('C1').set('C', '0.4[mm/N]*1[F*N/m]');
model.physics('cir').create('IvsU1', 'ModelDeviceIV', -1);
model.physics('cir').feature('IvsU1').setIndex('Connections', 9, 0, 0);
model.physics('cir').feature('IvsU1').setIndex('Connections', 0, 1, 0);
model.physics('cir').feature('IvsU1').set('V_src', 'root.comp1.acpr.lsb1.V_cir');

model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').feature('ftri1').selection.named('geom1_boxsel1');
model.mesh('mesh1').feature('size').set('hmax', 'meshsz');
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe1').selection.named('geom1_pyr1_dom');
model.mesh('mesh1').create('ftet1', 'FreeTet');
model.mesh('mesh1').feature('ftet1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('ftet1').selection.named('geom1_sph1_dom');
model.mesh('mesh1').create('bl1', 'BndLayer');
model.mesh('mesh1').feature('bl1').create('blp', 'BndLayerProp');
model.mesh('mesh1').feature('bl1').selection.geom(3);
model.mesh('mesh1').feature('bl1').selection.set([]);
model.mesh('mesh1').feature('bl1').selection.allGeom;
model.mesh('mesh1').feature('bl1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('bl1').selection.named('geom1_sph1_dom');
model.mesh('mesh1').feature('bl1').set('smoothtransition', false);
model.mesh('mesh1').feature('bl1').feature('blp').selection.named('geom1_ballsel1');
model.mesh('mesh1').feature('bl1').feature('blp').set('blnlayers', 1);

model.study('std1').feature('freq').set('plist', 'f0');
model.study('std1').label('Initial Design');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 1.0E-6);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'f0'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'Default');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol1').feature('s1').feature('d1').label('Suggested Direct Solver () (Merged)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').label('Suggested Iterative Solver (GMRES with GMG) ()');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol1').feature('s1').create('i2', 'Iterative');
model.sol('sol1').feature('s1').feature('i2').set('linsolver', 'fgmres');
model.sol('sol1').feature('s1').feature('i2').label('Suggested Iterative Solver (FGMRES with GMG) ()');
model.sol('sol1').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('prefun', 'gmg');
model.sol('sol1').feature('s1').create('i3', 'Iterative');
model.sol('sol1').feature('s1').feature('i3').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i3').label('Suggested Iterative Solver (Shifted Laplace) ()');
model.sol('sol1').feature('s1').feature('i3').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('prefun', 'gmg');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('mcasegen', 'coarse');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('scale', '3');
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('slaplacemain', false);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('slaplacemg', true);
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('addweakcontribslaplacemain', {'cir' 'off'});
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('addweakcontribslaplacemg', {'cir' 'off'});
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('epsslaplacemain', {'acpr' '0.4'});
model.sol('sol1').feature('s1').feature('i3').feature('mg1').set('epsslaplacemg', {'acpr' '0.4'});
model.sol('sol1').feature('s1').create('i4', 'Iterative');
model.sol('sol1').feature('s1').feature('i4').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i4').label('Suggested Iterative Solver (Domain Decomposition) ()');
model.sol('sol1').feature('s1').feature('i4').create('dd1', 'DomainDecomposition');
model.sol('sol1').feature('s1').feature('i4').feature('dd1').set('prefun', 'ddhyb');
model.sol('sol1').feature('s1').feature('i4').feature('dd1').set('ddolhandling', 'ddrestricted');
model.sol('sol1').feature('s1').feature('i4').feature('dd1').set('dompernodemax', 1);
model.sol('sol1').feature('s1').feature('i4').feature('dd1').set('dompernodemaxactive', 'on');
model.sol('sol1').feature('s1').feature('i4').feature('dd1').set('userac', 'off');
model.sol('sol1').feature('s1').feature('i4').feature('dd1').set('usecoarse', false);
model.sol('sol1').feature('s1').feature('i4').feature('dd1').set('ddboundary', 'absorbing');
model.sol('sol1').feature('s1').feature('i4').feature('dd1').set('slaplacemain', true);
model.sol('sol1').feature('s1').feature('i4').feature('dd1').set('slaplacemg', 'on');
model.sol('sol1').feature('s1').feature('i4').feature('dd1').set('alphaabsorbing', {'acpr' '1'});
model.sol('sol1').feature('s1').feature('i4').feature('dd1').set('betaabsorbing', {'acpr' '0.1'});
model.sol('sol1').feature('s1').feature('i4').feature('dd1').set('sndorderabsorbing', {'acpr' 'on'});
model.sol('sol1').feature('s1').feature('i4').feature('dd1').set('epsslaplacemain', {'acpr' '0.4'});
model.sol('sol1').feature('s1').feature('i4').feature('dd1').set('epsslaplacemg', {'acpr' '0.4'});
model.sol('sol1').feature('s1').feature('i4').feature('dd1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i4').feature('dd1').feature('ds').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i4').feature('dd1').feature('ds').feature('mg1').set('slaplacemg', 'on');
model.sol('sol1').feature('s1').feature('i4').feature('dd1').feature('ds').feature('mg1').set('epsslaplacemg', {'acpr' '0.4'});
model.sol('sol1').feature('s1').feature('i4').feature('dd1').feature('ds').feature('mg1').set('iter', 1);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').setIndex('looplevel', 1, 0);
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'acpr.p_t'});
model.result('pg1').feature('surf1').set('colortable', 'Wave');
model.result('pg1').feature('surf1').set('colorscalemode', 'linearsymmetric');
model.result('pg1').set('showlegendsunit', true);
model.result('pg1').label('Acoustic Pressure (acpr)');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').setIndex('looplevel', 1, 0);
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'acpr.Lp_t'});
model.result('pg2').feature('surf1').set('colortable', 'Rainbow');
model.result('pg2').feature('surf1').set('colorscalemode', 'linear');
model.result('pg2').set('showlegendsunit', true);
model.result('pg2').label('Sound Pressure Level (acpr)');
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').set('data', 'dset1');
model.result('pg3').setIndex('looplevel', 1, 0);
model.result('pg3').create('iso1', 'Isosurface');
model.result('pg3').feature('iso1').set('expr', {'acpr.p_t'});
model.result('pg3').feature('iso1').set('number', '10');
model.result('pg3').feature('iso1').set('colortable', 'Wave');
model.result('pg3').feature('iso1').set('colorscalemode', 'linearsymmetric');
model.result('pg3').set('showlegendsunit', true);
model.result('pg3').label('Acoustic Pressure, Isosurfaces (acpr)');
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').set('data', 'dset1');
model.result('pg4').setIndex('looplevel', 1, 0);
model.result('pg4').set('edges', 'off');
model.result('pg4').set('view', 'new');
model.result('pg4').create('rp1', 'RadiationPattern');
model.result('pg4').feature('rp1').set('expr', {'acpr.efc1.Lp_pext'});
model.result('pg4').feature('rp1').set('thetadisc', 40);
model.result('pg4').feature('rp1').set('phidisc', 60);
model.result('pg4').feature('rp1').set('grid', 'fine');
model.result('pg4').feature('rp1').set('colortable', 'Rainbow');
model.result('pg4').feature('rp1').set('colorscalemode', 'linear');
model.result('pg4').set('showlegendsunit', true);
model.result('pg4').label('Exterior-Field Sound Pressure Level (acpr)');
model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').set('data', 'none');
model.result('pg5').create('rp1', 'RadiationPattern');
model.result('pg5').feature('rp1').set('data', 'dset1');
model.result('pg5').feature('rp1').set('expr', {'acpr.efc1.pext'});
model.result('pg5').feature('rp1').set('thetadisc', 40);
model.result('pg5').feature('rp1').set('phidisc', 60);
model.result('pg5').feature('rp1').set('colortable', 'Cividis');
model.result('pg5').set('showlegendsunit', true);
model.result('pg5').label('Exterior-Field Pressure (acpr)');
model.result.create('pg6', 'PolarGroup');
model.result('pg6').set('data', 'dset1');
model.result('pg6').create('rp1', 'RadiationPattern');
model.result('pg6').feature('rp1').set('expr', {'acpr.efc1.Lp_pext'});
model.result('pg6').feature('rp1').set('legend', true);
model.result('pg6').feature('rp1').set('phidisc', 180);
model.result('pg6').label('Exterior-Field Sound Pressure Level xy-plane (acpr)');
model.result('pg6').setIndex('looplevelinput', 'last', 0);
model.result('pg1').run;

model.nodeGroup.create('grp1', 'Results');
model.nodeGroup('grp1').set('type', 'plotgroup');
model.nodeGroup('grp1').add('plotgroup', 'pg1');
model.nodeGroup('grp1').add('plotgroup', 'pg2');
model.nodeGroup('grp1').add('plotgroup', 'pg3');
model.nodeGroup('grp1').add('plotgroup', 'pg4');
model.nodeGroup('grp1').add('plotgroup', 'pg5');
model.nodeGroup('grp1').add('plotgroup', 'pg6');
model.nodeGroup('grp1').label('Initial Design');

model.result.evaluationGroup.create('eg1', 'EvaluationGroup');
model.result.evaluationGroup('eg1').label('Objective Function');
model.result.evaluationGroup('eg1').create('gev1', 'EvalGlobal');
model.result.evaluationGroup('eg1').feature('gev1').setIndex('expr', 'Lp_pext_opt(0,0,R0)', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('unit', 'dB', 0);
model.result.evaluationGroup('eg1').feature('gev1').setIndex('descr', '', 0);
model.result.evaluationGroup('eg1').feature('gev1').set('expr', {'Lp_pext_opt(0,0,R0)' 'acpr.lsb1.P_front'});
model.result.evaluationGroup('eg1').feature('gev1').set('descr', {'' 'Radiated power (front)'});
model.result.evaluationGroup('eg1').run;

model.param.set('P0', '2.25[uW]');
model.param.descr('P0', 'Initial radiated power');

model.common.create('cfunc1', 'ControlFunction', 'comp1');
model.common('cfunc1').set('order', '7');
model.common('cfunc1').set('fmin', '-scaleMax');
model.common('cfunc1').set('fmax', 'scaleMax');
model.common('cfunc1').set('fleftType', 'Dirichlet');
model.common('cfunc1').set('frightType', 'Dirichlet');
model.common('cfunc1').set('c_0', '0');
model.common('cfunc1').set('inUnit', '1');
model.common.create('pres1', 'PrescribedDeformationDeformedGeometry', 'comp1');
model.common('pres1').selection.all;
model.common('pres1').selection.named('geom1_pyr1_dom');
model.common('pres1').set('prescribedDeformation', {'cfunc1((h0+Zg)/h0)*Xg' 'cfunc1((h0+Zg)/h0)*Yg' '0'});

model.study.create('std2');
model.study('std2').create('freq', 'Frequency');
model.study('std2').feature('freq').setSolveFor('/physics/acpr', true);
model.study('std2').feature('freq').setSolveFor('/physics/cir', true);
model.study('std2').feature('freq').set('plist', 'f0');
model.study('std2').label('Shape Optimization - On Axis');
model.study('std2').create('sho', 'ShapeOptimization');
model.study('std2').feature('sho').set('mmamaxiter', 20);
model.study('std2').feature('sho').set('optobj', {'comp1.acpr.lsb1.P_front'});
model.study('std2').feature('sho').set('descr', {'Radiated power (front)'});
model.study('std2').feature('sho').setIndex('optobj', 'comp1.Lp_pext_opt(0,0,R0)', 0);
model.study('std2').feature('sho').setIndex('descr', 'On axis objective', 0);
model.study('std2').feature('sho').set('objectivetype', 'maximization');
model.study('std2').feature('sho').set('objectivescaling', 'init');
model.study('std2').feature('sho').set('constraintExpression', {'comp1.acpr.lsb1.P_front'});
model.study('std2').feature('sho').setIndex('constraintExpression', 'log10(comp1.acpr.lsb1.P_front/P0)', 0);
model.study('std2').feature('sho').setIndex('constraintLbound', '', 0);
model.study('std2').feature('sho').setIndex('constraintUbound', '', 0);
model.study('std2').feature('sho').setIndex('constraintUbound', 0, 0);

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'freq');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'freq');
model.sol('sol2').create('o1', 'Optimization');
model.sol('sol2').feature('o1').set('control', 'sho');
model.sol('sol2').feature('o1').create('s1', 'StationaryAttrib');
model.sol('sol2').feature('o1').feature('s1').set('stol', 1.0E-6);
model.sol('sol2').feature('o1').feature('s1').create('p1', 'Parametric');
model.sol('sol2').feature('o1').feature('s1').feature.remove('pDef');
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('plistarr', {'f0'});
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol2').feature('o1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol2').feature('o1').feature('s1').set('control', 'freq');
model.sol('sol2').feature('o1').feature('s1').set('linpmethod', 'sol');
model.sol('sol2').feature('o1').feature('s1').set('linpsol', 'zero');
model.sol('sol2').feature('o1').feature('s1').set('control', 'freq');
model.sol('sol2').feature('o1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol2').feature('o1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('o1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol2').feature('o1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol2').feature('o1').feature('s1').create('seDef', 'Segregated');
model.sol('sol2').feature('o1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('o1').feature('s1').create('d1', 'Direct');
model.sol('sol2').feature('o1').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol2').feature('o1').feature('s1').feature('d1').label('Suggested Direct Solver () (Merged)');
model.sol('sol2').feature('o1').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('o1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol2').feature('o1').feature('s1').feature('i1').label('Suggested Iterative Solver (GMRES with GMG) ()');
model.sol('sol2').feature('o1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('o1').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol2').feature('o1').feature('s1').create('i2', 'Iterative');
model.sol('sol2').feature('o1').feature('s1').feature('i2').set('linsolver', 'fgmres');
model.sol('sol2').feature('o1').feature('s1').feature('i2').label('Suggested Iterative Solver (FGMRES with GMG) ()');
model.sol('sol2').feature('o1').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol2').feature('o1').feature('s1').feature('i2').feature('mg1').set('prefun', 'gmg');
model.sol('sol2').feature('o1').feature('s1').create('i3', 'Iterative');
model.sol('sol2').feature('o1').feature('s1').feature('i3').set('linsolver', 'gmres');
model.sol('sol2').feature('o1').feature('s1').feature('i3').label('Suggested Iterative Solver (Shifted Laplace) ()');
model.sol('sol2').feature('o1').feature('s1').feature('i3').create('mg1', 'Multigrid');
model.sol('sol2').feature('o1').feature('s1').feature('i3').feature('mg1').set('prefun', 'gmg');
model.sol('sol2').feature('o1').feature('s1').feature('i3').feature('mg1').set('iter', 1);
model.sol('sol2').feature('o1').feature('s1').feature('i3').feature('mg1').set('mcasegen', 'coarse');
model.sol('sol2').feature('o1').feature('s1').feature('i3').feature('mg1').set('scale', '3');
model.sol('sol2').feature('o1').feature('s1').feature('i3').feature('mg1').set('slaplacemain', false);
model.sol('sol2').feature('o1').feature('s1').feature('i3').feature('mg1').set('slaplacemg', true);
model.sol('sol2').feature('o1').feature('s1').feature('i3').feature('mg1').set('addweakcontribslaplacemain', {'cir' 'off'});
model.sol('sol2').feature('o1').feature('s1').feature('i3').feature('mg1').set('addweakcontribslaplacemg', {'cir' 'off'});
model.sol('sol2').feature('o1').feature('s1').feature('i3').feature('mg1').set('epsslaplacemain', {'acpr' '0.4'});
model.sol('sol2').feature('o1').feature('s1').feature('i3').feature('mg1').set('epsslaplacemg', {'acpr' '0.4'});
model.sol('sol2').feature('o1').feature('s1').create('i4', 'Iterative');
model.sol('sol2').feature('o1').feature('s1').feature('i4').set('linsolver', 'gmres');
model.sol('sol2').feature('o1').feature('s1').feature('i4').label('Suggested Iterative Solver (Domain Decomposition) ()');
model.sol('sol2').feature('o1').feature('s1').feature('i4').create('dd1', 'DomainDecomposition');
model.sol('sol2').feature('o1').feature('s1').feature('i4').feature('dd1').set('prefun', 'ddhyb');
model.sol('sol2').feature('o1').feature('s1').feature('i4').feature('dd1').set('ddolhandling', 'ddrestricted');
model.sol('sol2').feature('o1').feature('s1').feature('i4').feature('dd1').set('dompernodemax', 1);
model.sol('sol2').feature('o1').feature('s1').feature('i4').feature('dd1').set('dompernodemaxactive', 'on');
model.sol('sol2').feature('o1').feature('s1').feature('i4').feature('dd1').set('userac', 'off');
model.sol('sol2').feature('o1').feature('s1').feature('i4').feature('dd1').set('usecoarse', false);
model.sol('sol2').feature('o1').feature('s1').feature('i4').feature('dd1').set('ddboundary', 'absorbing');
model.sol('sol2').feature('o1').feature('s1').feature('i4').feature('dd1').set('slaplacemain', true);
model.sol('sol2').feature('o1').feature('s1').feature('i4').feature('dd1').set('slaplacemg', 'on');
model.sol('sol2').feature('o1').feature('s1').feature('i4').feature('dd1').set('alphaabsorbing', {'acpr' '1'});
model.sol('sol2').feature('o1').feature('s1').feature('i4').feature('dd1').set('betaabsorbing', {'acpr' '0.1'});
model.sol('sol2').feature('o1').feature('s1').feature('i4').feature('dd1').set('sndorderabsorbing', {'acpr' 'on'});
model.sol('sol2').feature('o1').feature('s1').feature('i4').feature('dd1').set('epsslaplacemain', {'acpr' '0.4'});
model.sol('sol2').feature('o1').feature('s1').feature('i4').feature('dd1').set('epsslaplacemg', {'acpr' '0.4'});
model.sol('sol2').feature('o1').feature('s1').feature('i4').feature('dd1').set('iter', 1);
model.sol('sol2').feature('o1').feature('s1').feature('i4').feature('dd1').feature('ds').create('mg1', 'Multigrid');
model.sol('sol2').feature('o1').feature('s1').feature('i4').feature('dd1').feature('ds').feature('mg1').set('slaplacemg', 'on');
model.sol('sol2').feature('o1').feature('s1').feature('i4').feature('dd1').feature('ds').feature('mg1').set('epsslaplacemg', {'acpr' '0.4'});
model.sol('sol2').feature('o1').feature('s1').feature('i4').feature('dd1').feature('ds').feature('mg1').set('iter', 1);
model.sol('sol2').feature('o1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('o1').feature('s1').feature.remove('fcDef');
model.sol('sol2').feature('o1').feature('s1').feature.remove('seDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runFromTo('st1', 'v1');

model.result.create('pg7', 'PlotGroup3D');
model.result('pg7').set('data', 'dset2');
model.result('pg7').create('surf1', 'Surface');
model.result('pg7').feature('surf1').set('expr', {'acpr.p_t'});
model.result('pg7').feature('surf1').set('colortable', 'Wave');
model.result('pg7').feature('surf1').set('colorscalemode', 'linearsymmetric');
model.result('pg7').set('showlegendsunit', true);
model.result('pg7').label('Acoustic Pressure (acpr) 1');
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').set('data', 'dset2');
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').feature('surf1').set('expr', {'acpr.Lp_t'});
model.result('pg8').feature('surf1').set('colortable', 'Rainbow');
model.result('pg8').feature('surf1').set('colorscalemode', 'linear');
model.result('pg8').set('showlegendsunit', true);
model.result('pg8').label('Sound Pressure Level (acpr) 1');
model.result.create('pg9', 'PlotGroup3D');
model.result('pg9').set('data', 'dset2');
model.result('pg9').create('iso1', 'Isosurface');
model.result('pg9').feature('iso1').set('expr', {'acpr.p_t'});
model.result('pg9').feature('iso1').set('number', '10');
model.result('pg9').feature('iso1').set('colortable', 'Wave');
model.result('pg9').feature('iso1').set('colorscalemode', 'linearsymmetric');
model.result('pg9').set('showlegendsunit', true);
model.result('pg9').label('Acoustic Pressure, Isosurfaces (acpr) 1');
model.result.create('pg10', 'PlotGroup3D');
model.result('pg10').set('data', 'dset2');
model.result('pg10').set('edges', 'off');
model.result('pg10').set('view', 'new');
model.result('pg10').create('rp1', 'RadiationPattern');
model.result('pg10').feature('rp1').set('expr', {'acpr.efc1.Lp_pext'});
model.result('pg10').feature('rp1').set('thetadisc', 40);
model.result('pg10').feature('rp1').set('phidisc', 60);
model.result('pg10').feature('rp1').set('grid', 'fine');
model.result('pg10').feature('rp1').set('colortable', 'Rainbow');
model.result('pg10').feature('rp1').set('colorscalemode', 'linear');
model.result('pg10').set('showlegendsunit', true);
model.result('pg10').label('Exterior-Field Sound Pressure Level (acpr) 1');
model.result.create('pg11', 'PlotGroup2D');
model.result('pg11').set('data', 'none');
model.result('pg11').create('rp1', 'RadiationPattern');
model.result('pg11').feature('rp1').set('data', 'dset2');
model.result('pg11').feature('rp1').set('expr', {'acpr.efc1.pext'});
model.result('pg11').feature('rp1').set('thetadisc', 40);
model.result('pg11').feature('rp1').set('phidisc', 60);
model.result('pg11').feature('rp1').set('colortable', 'Cividis');
model.result('pg11').set('showlegendsunit', true);
model.result('pg11').label('Exterior-Field Pressure (acpr) 1');
model.result.create('pg12', 'PolarGroup');
model.result('pg12').set('data', 'dset2');
model.result('pg12').create('rp1', 'RadiationPattern');
model.result('pg12').feature('rp1').set('expr', {'acpr.efc1.Lp_pext'});
model.result('pg12').feature('rp1').set('legend', true);
model.result('pg12').feature('rp1').set('phidisc', 180);
model.result('pg12').label('Exterior-Field Sound Pressure Level xy-plane (acpr) 1');
model.result.create('pg13', 'PlotGroup3D');
model.result('pg13').set('data', 'dset2');
model.result('pg13').label('Deformed Geometry');
model.result('pg13').create('mesh1', 'Mesh');
model.result('pg13').feature('mesh1').set('meshdomain', 'volume');
model.result('pg13').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg13').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg13').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg13').feature('mesh1').create('sel1', 'MeshSelection');
model.result('pg13').feature('mesh1').feature('sel1').selection.set([2]);
model.result('pg13').feature('mesh1').set('qualmeasure', 'custom');
model.result('pg13').feature('mesh1').set('qualexpr', 'comp1.material.relVol');
model.result('pg13').feature('mesh1').set('colorrangeunitinterval', false);
model.result('pg7').run;

model.nodeGroup.create('grp2', 'Results');
model.nodeGroup('grp2').set('type', 'plotgroup');
model.nodeGroup.move('grp2', 1);
model.nodeGroup('grp2').add('plotgroup', 'pg7');
model.nodeGroup('grp2').add('plotgroup', 'pg8');
model.nodeGroup('grp2').add('plotgroup', 'pg9');
model.nodeGroup('grp2').add('plotgroup', 'pg10');
model.nodeGroup('grp2').add('plotgroup', 'pg11');
model.nodeGroup('grp2').add('plotgroup', 'pg12');
model.nodeGroup('grp2').add('plotgroup', 'pg13');
model.nodeGroup('grp2').label('Shape Optimization - On Axis');

model.study('std2').feature('sho').set('plot', true);
model.study('std2').feature('sho').set('plotgroup', 'pg7');

model.sol('sol2').feature('o1').set('gcmma', false);
model.sol('sol2').runAll;

model.result('pg7').run;

model.study('std2').feature('sho').set('probewindow', '');

model.result.dataset.create('filt1', 'Filter');
model.result.dataset('filt1').set('data', 'dset2');
model.result.dataset('filt1').set('expr', '1');
model.result.dataset('filt1').createMeshPart('mcomp1', 'mgeom1', 'mpart1', 'imp1');

model.modelNode.create('comp2', true);

model.geom.create('geom2', 3);
model.geom('geom2').model('comp2');

model.mesh.create('mesh2', 'geom2');

model.geom('geom2').insertFile('rectangular_horn_shape_optimization_geom_sequence.mph', 'geom1');
model.geom('geom2').feature.remove('pyr1');
model.geom('geom2').feature.remove('wp2');
model.geom('geom2').feature.remove('boxsel1');
model.geom('geom2').feature.remove('cylsel1');
model.geom('geom2').feature.remove('boxsel2');
model.geom('geom2').run('del1');
model.geom('geom2').create('imp1', 'Import');
model.geom('geom2').feature('imp1').set('type', 'mesh');
model.geom('geom2').feature('imp1').set('mesh', 'mpart1');
model.geom('geom2').feature('imp1').set('simplifymesh', false);
model.geom('geom2').feature('fin').set('repairtoltype', 'relative');
model.geom('geom2').feature('fin').set('repairtol', '1.0E-3');
model.geom('geom2').run('fin');
model.geom('geom2').run;

model.physics.copy('acpr2', 'acpr', 'comp2');
model.physics.copy('cir2', 'cir', 'comp2');
model.physics('acpr2').feature('efc1').selection.named('geom2_ballsel1');
model.physics('acpr2').feature('lsb1').selection.named('geom2_imp1_mpart1_imp1_geom1_cylsel1');
model.physics('acpr2').feature('lsb1').set('e_ax', {'-nx' '-ny' '-nz'});
model.physics('acpr2').feature('pmb1').selection.named('geom2_ballsel1');
model.physics('acpr2').feature('sym1').selection.named('geom2_imp1_mpart1_imp1_geom1_boxsel3');
model.physics('cir2').feature('IvsU1').set('V_src', 'root.comp2.acpr2.lsb1.V_cir');

model.material.create('mat2', 'Common', 'comp2');
model.material('mat2').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat2').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat2').propertyGroup('def').func.create('rho', 'Analytic');
model.material('mat2').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat2').propertyGroup('def').func.create('cs', 'Analytic');
model.material('mat2').propertyGroup('def').func.create('an1', 'Analytic');
model.material('mat2').propertyGroup('def').func.create('an2', 'Analytic');
model.material('mat2').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat2').propertyGroup.create('NonlinearModel', 'Nonlinear model');
model.material('mat2').propertyGroup.create('idealGas', 'Ideal gas');
model.material('mat2').propertyGroup('idealGas').func.create('Cp', 'Piecewise');
model.material('mat2').label('Air');
model.material('mat2').set('family', 'air');
model.material('mat2').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat2').propertyGroup('def').func('eta').set('pieces', {'200.0' '1600.0' '-8.38278E-7+8.35717342E-8*T^1-7.69429583E-11*T^2+4.6437266E-14*T^3-1.06585607E-17*T^4'});
model.material('mat2').propertyGroup('def').func('eta').set('argunit', 'K');
model.material('mat2').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.material('mat2').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat2').propertyGroup('def').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat2').propertyGroup('def').func('Cp').set('argunit', 'K');
model.material('mat2').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat2').propertyGroup('def').func('rho').set('expr', 'pA*0.02897/R_const[K*mol/J]/T');
model.material('mat2').propertyGroup('def').func('rho').set('args', {'pA' 'T'});
model.material('mat2').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.material('mat2').propertyGroup('def').func('rho').set('argunit', {'Pa' 'K'});
model.material('mat2').propertyGroup('def').func('rho').set('plotaxis', {'off' 'on'});
model.material('mat2').propertyGroup('def').func('rho').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat2').propertyGroup('def').func('rho').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '293.15'});
model.material('mat2').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat2').propertyGroup('def').func('k').set('pieces', {'200.0' '1600.0' '-0.00227583562+1.15480022E-4*T^1-7.90252856E-8*T^2+4.11702505E-11*T^3-7.43864331E-15*T^4'});
model.material('mat2').propertyGroup('def').func('k').set('argunit', 'K');
model.material('mat2').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.material('mat2').propertyGroup('def').func('cs').set('expr', 'sqrt(1.4*R_const[K*mol/J]/0.02897*T)');
model.material('mat2').propertyGroup('def').func('cs').set('args', {'T'});
model.material('mat2').propertyGroup('def').func('cs').set('fununit', 'm/s');
model.material('mat2').propertyGroup('def').func('cs').set('argunit', {'K'});
model.material('mat2').propertyGroup('def').func('cs').set('plotfixedvalue', {'273.15'});
model.material('mat2').propertyGroup('def').func('cs').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat2').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.material('mat2').propertyGroup('def').func('an1').set('expr', '-1/rho(pA,T)*d(rho(pA,T),T)');
model.material('mat2').propertyGroup('def').func('an1').set('args', {'pA' 'T'});
model.material('mat2').propertyGroup('def').func('an1').set('fununit', '1/K');
model.material('mat2').propertyGroup('def').func('an1').set('argunit', {'Pa' 'K'});
model.material('mat2').propertyGroup('def').func('an1').set('plotaxis', {'off' 'on'});
model.material('mat2').propertyGroup('def').func('an1').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat2').propertyGroup('def').func('an1').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '373.15'});
model.material('mat2').propertyGroup('def').func('an2').set('funcname', 'muB');
model.material('mat2').propertyGroup('def').func('an2').set('expr', '0.6*eta(T)');
model.material('mat2').propertyGroup('def').func('an2').set('args', {'T'});
model.material('mat2').propertyGroup('def').func('an2').set('fununit', 'Pa*s');
model.material('mat2').propertyGroup('def').func('an2').set('argunit', {'K'});
model.material('mat2').propertyGroup('def').func('an2').set('plotfixedvalue', {'200'});
model.material('mat2').propertyGroup('def').func('an2').set('plotargs', {'T' '200' '1600'});
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.material('mat2').propertyGroup('def').set('molarmass', '');
model.material('mat2').propertyGroup('def').set('bulkviscosity', '');
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)'});
model.material('mat2').propertyGroup('def').set('molarmass', '0.02897[kg/mol]');
model.material('mat2').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.material('mat2').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.material('mat2').propertyGroup('def').set('ratioofspecificheat', '1.4');
model.material('mat2').propertyGroup('def').set('electricconductivity', {'0[S/m]' '0' '0' '0' '0[S/m]' '0' '0' '0' '0[S/m]'});
model.material('mat2').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.material('mat2').propertyGroup('def').set('density', 'rho(pA,T)');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.material('mat2').propertyGroup('def').set('soundspeed', 'cs(T)');
model.material('mat2').propertyGroup('def').addInput('temperature');
model.material('mat2').propertyGroup('def').addInput('pressure');
model.material('mat2').propertyGroup('RefractiveIndex').set('n', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('NonlinearModel').set('BA', 'def.gamma-1');
model.material('mat2').propertyGroup('idealGas').func('Cp').label('Piecewise 2');
model.material('mat2').propertyGroup('idealGas').func('Cp').set('arg', 'T');
model.material('mat2').propertyGroup('idealGas').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat2').propertyGroup('idealGas').func('Cp').set('argunit', 'K');
model.material('mat2').propertyGroup('idealGas').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat2').propertyGroup('idealGas').set('Rs', 'R_const/Mn');
model.material('mat2').propertyGroup('idealGas').set('heatcapacity', 'Cp(T)');
model.material('mat2').propertyGroup('idealGas').set('ratioofspecificheat', '1.4');
model.material('mat2').propertyGroup('idealGas').set('molarmass', '0.02897');
model.material('mat2').propertyGroup('idealGas').addInput('temperature');
model.material('mat2').propertyGroup('idealGas').addInput('pressure');
model.material('mat2').materialType('nonSolid');

model.common.create('fsd1', 'FreeShapeDomain', 'comp2');
model.common('fsd1').selection.all;
model.common('fsd1').selection.named('geom2_imp1_mpart1_imp1_geom1_pyr1_dom');
model.common.create('fsb1', 'FreeShapeBoundary', 'comp2');
model.common('fsb1').selection.named('geom2_imp1_mpart1_imp1_geom1_boxsel2');
model.common('fsb1').set('maximumDisplacement', '0.2');
model.common('fsb1').set('filterRadiusType', 'Medium');
model.common.create('tsf1', 'Transformation', 'comp2');
model.common('tsf1').selection.geom('geom2', 2);
model.common('tsf1').selection.named('geom2_imp1_mpart1_imp1_geom1_boxsel1');
model.common('tsf1').setIndex('move_lock', false, 0);
model.common('tsf1').setIndex('move_lBound', -0.1, 0);
model.common('tsf1').setIndex('move_uBound', 0.1, 0);
model.common('tsf1').setIndex('move_lock', true, 1);
model.common('tsf1').setIndex('move_lock', false, 2);
model.common('tsf1').setIndex('move_lBound', -0.1, 2);
model.common('tsf1').setIndex('move_uBound', 0.1, 2);
model.common('tsf1').set('scalingType', 'No_scaling');
model.common('tsf1').set('rotateType', 'Axis');
model.common('tsf1').set('rotateAxis', 'Yaxis');
model.common('tsf1').setIndex('rotate_lBound', '-20[deg]', 0);
model.common('tsf1').setIndex('rotate_uBound', '20[deg]', 0);
model.common.create('fsr1', 'FreeShapeSymmetry', 'comp2');
model.common('fsr1').selection.named('geom2_imp1_mpart1_imp1_geom1_boxsel3');

model.mesh('mesh2').create('ftri1', 'FreeTri');
model.mesh('mesh2').feature('ftri1').selection.named('geom2_imp1_mpart1_imp1_geom1_boxsel1');
model.mesh('mesh2').feature('size').set('hmax', 'meshsz');
model.mesh('mesh2').create('swe1', 'Sweep');
model.mesh('mesh2').feature('swe1').selection.geom('geom2', 3);
model.mesh('mesh2').feature('swe1').selection.named('geom2_imp1_mpart1_imp1_geom1_pyr1_dom');
model.mesh('mesh2').create('ftet1', 'FreeTet');
model.mesh('mesh2').feature('ftet1').selection.geom('geom2', 3);
model.mesh('mesh2').feature('ftet1').selection.named('geom2_sph1_dom');
model.mesh('mesh2').create('bl1', 'BndLayer');
model.mesh('mesh2').feature('bl1').create('blp', 'BndLayerProp');
model.mesh('mesh2').feature('bl1').selection.geom(3);
model.mesh('mesh2').feature('bl1').selection.set([]);
model.mesh('mesh2').feature('bl1').selection.allGeom;
model.mesh('mesh2').feature('bl1').selection.geom('geom2', 3);
model.mesh('mesh2').feature('bl1').selection.named('geom2_sph1_dom');
model.mesh('mesh2').feature('bl1').set('smoothtransition', false);
model.mesh('mesh2').feature('bl1').feature('blp').selection.named('geom2_ballsel1');
model.mesh('mesh2').feature('bl1').feature('blp').set('blnlayers', 1);

model.study.create('std3');
model.study('std3').create('freq', 'Frequency');
model.study('std3').feature('freq').setSolveFor('/physics/acpr', false);
model.study('std3').feature('freq').setSolveFor('/physics/cir', false);
model.study('std3').feature('freq').setSolveFor('/physics/acpr2', true);
model.study('std3').feature('freq').setSolveFor('/physics/cir2', true);
model.study('std3').feature('freq').set('plist', 'f0');
model.study('std2').feature('sho').setEntry('controlVariableActive', 'cfunc1', true);
model.study('std2').feature('sho').setEntry('controlVariableActive', 'fsb1.c', false);
model.study('std2').feature('sho').setEntry('controlVariableActive', 'tsf1', false);
model.study('std3').feature.copy('sho1', 'std2/sho');
model.study('std3').feature('sho1').setIndex('optobj', 'comp2.Lp_pext_opt(R0*sin(theta0),0,R0*cos(theta0))', 0);
model.study('std3').feature('sho1').setIndex('descr', 'Off axis objective', 0);
model.study('std3').feature('sho1').setEntry('controlVariableActive', 'cfunc1', false);
model.study('std3').feature('sho1').setEntry('controlVariableActive', 'fsb1.c', true);
model.study('std3').feature('sho1').setEntry('controlVariableActive', 'tsf1', true);
model.study('std3').feature('sho1').setIndex('constraintExpression', 'log10(comp2.acpr2.lsb1.P_front/P0)', 0);
model.study('std3').feature('sho1').setIndex('constraintUbound', 0, 0);
model.study('std3').feature('sho1').set('objtable', 'new');
model.study('std3').label('Shape Optimization - Off Axis');

model.sol.create('sol3');

model.mesh('mesh2').stat.selection.geom(3);
model.mesh('mesh2').stat.selection.set([2]);

model.sol('sol3').study('std3');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std3');
model.sol('sol3').feature('st1').set('studystep', 'freq');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').feature('comp2_fsb1_d').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp2_material_disp').set('scalemethod', 'manual');
model.sol('sol3').feature('v1').feature('comp2_fsb1_d').set('scaleval', '0.2');
model.sol('sol3').feature('v1').feature('comp2_material_disp').set('scaleval', '0.03778440354303817');
model.sol('sol3').feature('v1').set('control', 'freq');
model.sol('sol3').create('o1', 'Optimization');
model.sol('sol3').feature('o1').set('control', 'sho1');
model.sol('sol3').feature('o1').create('s1', 'StationaryAttrib');
model.sol('sol3').feature('o1').feature('s1').set('stol', 1.0E-6);
model.sol('sol3').feature('o1').feature('s1').create('p1', 'Parametric');
model.sol('sol3').feature('o1').feature('s1').feature.remove('pDef');
model.sol('sol3').feature('o1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol3').feature('o1').feature('s1').feature('p1').set('plistarr', {'f0'});
model.sol('sol3').feature('o1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol3').feature('o1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol3').feature('o1').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol3').feature('o1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol3').feature('o1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol3').feature('o1').feature('s1').set('control', 'freq');
model.sol('sol3').feature('o1').feature('s1').set('linpmethod', 'sol');
model.sol('sol3').feature('o1').feature('s1').set('linpsol', 'zero');
model.sol('sol3').feature('o1').feature('s1').set('control', 'freq');
model.sol('sol3').feature('o1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol3').feature('o1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('o1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol3').feature('o1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol3').feature('o1').feature('s1').create('seDef', 'Segregated');
model.sol('sol3').feature('o1').feature('s1').create('se1', 'Segregated');
model.sol('sol3').feature('o1').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol3').feature('o1').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol3').feature('o1').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp2_fsb1_c' 'comp2_material_disp' 'comp2_fsb1_d' 'comp1_cfunc1' 'comp2_tsf1_move' 'comp2_tsf1_rotate'});
model.sol('sol3').feature('o1').feature('s1').create('i1', 'Iterative');
model.sol('sol3').feature('o1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol3').feature('o1').feature('s1').feature('i1').label('Suggested Iterative Solver (GMRES with AMG) (opt)');
model.sol('sol3').feature('o1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol3').feature('o1').feature('s1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol3').feature('o1').feature('s1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol3').feature('o1').feature('s1').feature('se1').feature('ss1').label('Optimization');
model.sol('sol3').feature('o1').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol3').feature('o1').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp2_current_time2' 'comp2_currents2' 'comp2_voltages2' 'comp2_p' 'comp2_fsb1_c' 'comp1_cfunc1' 'comp2_tsf1_move' 'comp2_tsf1_rotate'});
model.sol('sol3').feature('o1').feature('s1').create('d1', 'Direct');
model.sol('sol3').feature('o1').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol3').feature('o1').feature('s1').feature('d1').label('Suggested Direct Solver () (Merged)');
model.sol('sol3').feature('o1').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd1');
model.sol('sol3').feature('o1').feature('s1').feature('se1').feature('ss2').label('Merged Variables');
model.sol('sol3').feature('o1').feature('s1').create('i2', 'Iterative');
model.sol('sol3').feature('o1').feature('s1').feature('i2').set('linsolver', 'gmres');
model.sol('sol3').feature('o1').feature('s1').feature('i2').label('Suggested Iterative Solver (GMRES with GMG) ()');
model.sol('sol3').feature('o1').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol3').feature('o1').feature('s1').feature('i2').feature('mg1').set('prefun', 'gmg');
model.sol('sol3').feature('o1').feature('s1').create('i3', 'Iterative');
model.sol('sol3').feature('o1').feature('s1').feature('i3').set('linsolver', 'fgmres');
model.sol('sol3').feature('o1').feature('s1').feature('i3').label('Suggested Iterative Solver (FGMRES with GMG) ()');
model.sol('sol3').feature('o1').feature('s1').feature('i3').create('mg1', 'Multigrid');
model.sol('sol3').feature('o1').feature('s1').feature('i3').feature('mg1').set('prefun', 'gmg');
model.sol('sol3').feature('o1').feature('s1').create('i4', 'Iterative');
model.sol('sol3').feature('o1').feature('s1').feature('i4').set('linsolver', 'gmres');
model.sol('sol3').feature('o1').feature('s1').feature('i4').label('Suggested Iterative Solver (Shifted Laplace) ()');
model.sol('sol3').feature('o1').feature('s1').feature('i4').create('mg1', 'Multigrid');
model.sol('sol3').feature('o1').feature('s1').feature('i4').feature('mg1').set('prefun', 'gmg');
model.sol('sol3').feature('o1').feature('s1').feature('i4').feature('mg1').set('iter', 1);
model.sol('sol3').feature('o1').feature('s1').feature('i4').feature('mg1').set('mcasegen', 'coarse');
model.sol('sol3').feature('o1').feature('s1').feature('i4').feature('mg1').set('scale', '3');
model.sol('sol3').feature('o1').feature('s1').feature('i4').feature('mg1').set('slaplacemain', false);
model.sol('sol3').feature('o1').feature('s1').feature('i4').feature('mg1').set('slaplacemg', true);
model.sol('sol3').feature('o1').feature('s1').feature('i4').feature('mg1').set('addweakcontribslaplacemain', {'acpr' 'off' 'cir' 'off' 'cir2' 'off'});
model.sol('sol3').feature('o1').feature('s1').feature('i4').feature('mg1').set('addweakcontribslaplacemg', {'acpr' 'off' 'cir' 'off' 'cir2' 'off'});
model.sol('sol3').feature('o1').feature('s1').feature('i4').feature('mg1').set('epsslaplacemain', {'acpr2' '0.4'});
model.sol('sol3').feature('o1').feature('s1').feature('i4').feature('mg1').set('epsslaplacemg', {'acpr2' '0.4'});
model.sol('sol3').feature('o1').feature('s1').create('i5', 'Iterative');
model.sol('sol3').feature('o1').feature('s1').feature('i5').set('linsolver', 'gmres');
model.sol('sol3').feature('o1').feature('s1').feature('i5').label('Suggested Iterative Solver (Domain Decomposition) ()');
model.sol('sol3').feature('o1').feature('s1').feature('i5').create('dd1', 'DomainDecomposition');
model.sol('sol3').feature('o1').feature('s1').feature('i5').feature('dd1').set('prefun', 'ddhyb');
model.sol('sol3').feature('o1').feature('s1').feature('i5').feature('dd1').set('ddolhandling', 'ddrestricted');
model.sol('sol3').feature('o1').feature('s1').feature('i5').feature('dd1').set('dompernodemax', 1);
model.sol('sol3').feature('o1').feature('s1').feature('i5').feature('dd1').set('dompernodemaxactive', 'on');
model.sol('sol3').feature('o1').feature('s1').feature('i5').feature('dd1').set('userac', 'off');
model.sol('sol3').feature('o1').feature('s1').feature('i5').feature('dd1').set('usecoarse', false);
model.sol('sol3').feature('o1').feature('s1').feature('i5').feature('dd1').set('ddboundary', 'absorbing');
model.sol('sol3').feature('o1').feature('s1').feature('i5').feature('dd1').set('slaplacemain', true);
model.sol('sol3').feature('o1').feature('s1').feature('i5').feature('dd1').set('slaplacemg', 'on');
model.sol('sol3').feature('o1').feature('s1').feature('i5').feature('dd1').set('alphaabsorbing', {'acpr2' '1'});
model.sol('sol3').feature('o1').feature('s1').feature('i5').feature('dd1').set('betaabsorbing', {'acpr2' '0.1'});
model.sol('sol3').feature('o1').feature('s1').feature('i5').feature('dd1').set('sndorderabsorbing', {'acpr2' 'on'});
model.sol('sol3').feature('o1').feature('s1').feature('i5').feature('dd1').set('epsslaplacemain', {'acpr2' '0.4'});
model.sol('sol3').feature('o1').feature('s1').feature('i5').feature('dd1').set('epsslaplacemg', {'acpr2' '0.4'});
model.sol('sol3').feature('o1').feature('s1').feature('i5').feature('dd1').set('iter', 1);
model.sol('sol3').feature('o1').feature('s1').feature('i5').feature('dd1').feature('ds').create('mg1', 'Multigrid');
model.sol('sol3').feature('o1').feature('s1').feature('i5').feature('dd1').feature('ds').feature('mg1').set('slaplacemg', 'on');
model.sol('sol3').feature('o1').feature('s1').feature('i5').feature('dd1').feature('ds').feature('mg1').set('epsslaplacemg', {'acpr2' '0.4'});
model.sol('sol3').feature('o1').feature('s1').feature('i5').feature('dd1').feature('ds').feature('mg1').set('iter', 1);
model.sol('sol3').feature('o1').feature('s1').feature.remove('fcDef');
model.sol('sol3').feature('o1').feature('s1').feature.remove('seDef');
model.sol('sol3').attach('std3');
model.sol('sol3').runFromTo('st1', 'v1');

model.result.create('pg14', 'PlotGroup3D');
model.result('pg14').set('data', 'dset4');
model.result('pg14').create('surf1', 'Surface');
model.result('pg14').feature('surf1').set('expr', {'acpr2.p_t'});
model.result('pg14').feature('surf1').set('colortable', 'Wave');
model.result('pg14').feature('surf1').set('colorscalemode', 'linearsymmetric');
model.result('pg14').set('showlegendsunit', true);
model.result('pg14').label('Acoustic Pressure (acpr2)');
model.result.create('pg15', 'PlotGroup3D');
model.result('pg15').set('data', 'dset4');
model.result('pg15').create('surf1', 'Surface');
model.result('pg15').feature('surf1').set('expr', {'acpr2.Lp_t'});
model.result('pg15').feature('surf1').set('colortable', 'Rainbow');
model.result('pg15').feature('surf1').set('colorscalemode', 'linear');
model.result('pg15').set('showlegendsunit', true);
model.result('pg15').label('Sound Pressure Level (acpr2)');
model.result.create('pg16', 'PlotGroup3D');
model.result('pg16').set('data', 'dset4');
model.result('pg16').create('iso1', 'Isosurface');
model.result('pg16').feature('iso1').set('expr', {'acpr2.p_t'});
model.result('pg16').feature('iso1').set('number', '10');
model.result('pg16').feature('iso1').set('colortable', 'Wave');
model.result('pg16').feature('iso1').set('colorscalemode', 'linearsymmetric');
model.result('pg16').set('showlegendsunit', true);
model.result('pg16').label('Acoustic Pressure, Isosurfaces (acpr2)');
model.result.create('pg17', 'PlotGroup3D');
model.result('pg17').set('data', 'dset4');
model.result('pg17').set('edges', 'off');
model.result('pg17').set('view', 'new');
model.result('pg17').create('rp1', 'RadiationPattern');
model.result('pg17').feature('rp1').set('expr', {'acpr2.efc1.Lp_pext'});
model.result('pg17').feature('rp1').set('thetadisc', 40);
model.result('pg17').feature('rp1').set('phidisc', 60);
model.result('pg17').feature('rp1').set('grid', 'fine');
model.result('pg17').feature('rp1').set('colortable', 'Rainbow');
model.result('pg17').feature('rp1').set('colorscalemode', 'linear');
model.result('pg17').set('showlegendsunit', true);
model.result('pg17').label('Exterior-Field Sound Pressure Level (acpr2)');
model.result.create('pg18', 'PlotGroup2D');
model.result('pg18').set('data', 'none');
model.result('pg18').create('rp1', 'RadiationPattern');
model.result('pg18').feature('rp1').set('data', 'dset4');
model.result('pg18').feature('rp1').set('expr', {'acpr2.efc1.pext'});
model.result('pg18').feature('rp1').set('thetadisc', 40);
model.result('pg18').feature('rp1').set('phidisc', 60);
model.result('pg18').feature('rp1').set('colortable', 'Cividis');
model.result('pg18').set('showlegendsunit', true);
model.result('pg18').label('Exterior-Field Pressure (acpr2)');
model.result.create('pg19', 'PolarGroup');
model.result('pg19').set('data', 'dset4');
model.result('pg19').create('rp1', 'RadiationPattern');
model.result('pg19').feature('rp1').set('expr', {'acpr2.efc1.Lp_pext'});
model.result('pg19').feature('rp1').set('legend', true);
model.result('pg19').feature('rp1').set('phidisc', 180);
model.result('pg19').label('Exterior-Field Sound Pressure Level xy-plane (acpr2)');
model.result.create('pg20', 'PlotGroup3D');
model.result('pg20').set('data', 'dset3');
model.result('pg20').label('Deformed Geometry 1');
model.result('pg20').create('mesh1', 'Mesh');
model.result('pg20').feature('mesh1').set('meshdomain', 'volume');
model.result('pg20').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg20').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg20').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg20').feature('mesh1').create('sel1', 'MeshSelection');
model.result('pg20').feature('mesh1').feature('sel1').selection.set([2]);
model.result('pg20').feature('mesh1').set('qualmeasure', 'custom');
model.result('pg20').feature('mesh1').set('qualexpr', 'comp1.material.relVol');
model.result('pg20').feature('mesh1').set('colorrangeunitinterval', false);
model.result.create('pg21', 'PlotGroup3D');
model.result.dataset.duplicate('dset4g1', 'dset4');
model.result.dataset('dset4g1').label('Shape Optimization - Off Axis/Solution 3 (4) - Geometry');
model.result.dataset('dset4g1').set('frametype', 'geometry');
model.result('pg21').label('Shape Optimization');
model.result('pg21').set('data', 'dset4');
model.result('pg21').set('frametype', 'geometry');
model.result('pg21').set('edgecolor', 'gray');
model.result('pg21').set('titletype', 'none');
model.result('pg21').create('line1', 'Line');
model.result('pg21').feature('line1').set('expr', '1');
model.result('pg21').feature('line1').set('coloring', 'uniform');
model.result('pg21').feature('line1').set('color', 'fromtheme');
model.result('pg21').create('con1', 'Surface');
model.result('pg21').feature('con1').set('expr', 'fsd1.rel_disp');
model.result('pg21').feature('con1').set('colortabletype', 'discrete');
model.result('pg21').feature('con1').set('bandcount', 20);
model.result('pg21').feature('con1').set('rangecoloractive', true);
model.result('pg21').feature('con1').set('rangecolormin', 0);
model.result('pg21').feature('con1').set('rangecolormax', 1);
model.result('pg21').feature('con1').set('colortable', 'RainbowLight');
model.result('pg21').feature('con1').set('smooth', 'none');
model.result('pg21').create('arws1', 'ArrowSurface');
model.result('pg21').feature('arws1').set('data', 'dset4g1');
model.result('pg21').feature('arws1').set('expr', {'fsd1.dXg' 'fsd1.dYg' 'fsd1.dZg'});
model.result('pg21').feature('arws1').set('scaleactive', true);
model.result('pg21').feature('arws1').set('scale', '1');
model.result('pg21').feature('arws1').set('placement', 'uniform');
model.result('pg21').feature('arws1').set('arrowcount', 200);
model.result('pg21').feature('arws1').create('sel1', 'Selection');
model.result('pg21').feature('arws1').feature('sel1').selection.named('dsel_fsd1');
model.result('pg21').create('arwp1', 'ArrowPoint');
model.result('pg21').feature('arwp1').label('Translation (Transformation 1)');
model.result('pg21').feature('arwp1').set('expr', {'tsf1.moveXg' 'tsf1.moveYg' 'tsf1.moveZg'});
model.result('pg21').feature('arwp1').set('arrowbase', 'head');
model.result('pg21').feature('arwp1').set('scaleactive', true);
model.result('pg21').feature('arwp1').set('scale', '1');
model.result('pg21').feature('arwp1').create('def1', 'Deform');
model.result('pg21').feature('arwp1').feature('def1').set('expr', {'-tsf1.scaleXg-tsf1.rotateXg' '-tsf1.scaleYg-tsf1.rotateYg' '-tsf1.scaleZg-tsf1.rotateZg'});
model.result('pg21').feature('arwp1').feature('def1').set('scaleactive', true);
model.result('pg21').feature('arwp1').feature('def1').set('scale', '1');
model.result('pg21').feature('arwp1').create('col1', 'Color');
model.result('pg21').feature('arwp1').feature('col1').set('expr', 'tsf1.rel_move');
model.result('pg21').feature('arwp1').feature('col1').set('rangecoloractive', 'on');
model.result('pg21').feature('arwp1').feature('col1').set('rangecolormin', 0);
model.result('pg21').feature('arwp1').feature('col1').set('rangecolormax', 1);
model.result('pg21').feature('arwp1').set('inheritplot', 'con1');
model.result('pg21').create('arwp2', 'ArrowPoint');
model.result('pg21').feature('arwp2').label('Scaling (Transformation 1)');
model.result('pg21').feature('arwp2').set('expr', {'tsf1.scaleXg' 'tsf1.scaleYg' 'tsf1.scaleZg'});
model.result('pg21').feature('arwp2').set('arrowbase', 'head');
model.result('pg21').feature('arwp2').set('scaleactive', true);
model.result('pg21').feature('arwp2').set('scale', '1');
model.result('pg21').feature('arwp2').set('inheritplot', 'arwp1');
model.result('pg21').feature('arwp2').create('def1', 'Deform');
model.result('pg21').feature('arwp2').feature('def1').set('expr', {'-tsf1.rotateXg' '-tsf1.rotateYg' '-tsf1.rotateZg'});
model.result('pg21').feature('arwp2').feature('def1').set('scaleactive', true);
model.result('pg21').feature('arwp2').feature('def1').set('scale', '1');
model.result('pg21').feature('arwp2').create('col1', 'Color');
model.result('pg21').feature('arwp2').feature('col1').set('expr', 'tsf1.rel_scale');
model.result('pg21').feature('arwp2').feature('col1').set('rangecoloractive', 'on');
model.result('pg21').feature('arwp2').feature('col1').set('rangecolormin', 0);
model.result('pg21').feature('arwp2').feature('col1').set('rangecolormax', 1);
model.result('pg21').create('arwp3', 'ArrowPoint');
model.result('pg21').feature('arwp3').label('Rotation (Transformation 1)');
model.result('pg21').feature('arwp3').set('expr', {'tsf1.rotateXg' 'tsf1.rotateYg' 'tsf1.rotateZg'});
model.result('pg21').feature('arwp3').set('arrowbase', 'head');
model.result('pg21').feature('arwp3').set('scaleactive', true);
model.result('pg21').feature('arwp3').set('scale', '1');
model.result('pg21').feature('arwp3').set('inheritplot', 'arwp1');
model.result('pg21').feature('arwp3').create('col1', 'Color');
model.result('pg21').feature('arwp3').feature('col1').set('expr', 'tsf1.rel_rotate');
model.result('pg21').feature('arwp3').feature('col1').set('rangecoloractive', 'on');
model.result('pg21').feature('arwp3').feature('col1').set('rangecolormin', 0);
model.result('pg21').feature('arwp3').feature('col1').set('rangecolormax', 1);
model.result('pg14').run;

model.nodeGroup.create('grp3', 'Results');
model.nodeGroup('grp3').set('type', 'plotgroup');
model.nodeGroup.move('grp3', 2);
model.nodeGroup('grp3').add('plotgroup', 'pg14');
model.nodeGroup('grp3').add('plotgroup', 'pg15');
model.nodeGroup('grp3').add('plotgroup', 'pg16');
model.nodeGroup('grp3').add('plotgroup', 'pg17');
model.nodeGroup('grp3').add('plotgroup', 'pg18');
model.nodeGroup('grp3').add('plotgroup', 'pg19');
model.nodeGroup('grp3').add('plotgroup', 'pg20');
model.nodeGroup('grp3').add('plotgroup', 'pg21');
model.nodeGroup('grp3').label('Shape Optimization - Off Axis');

model.study('std2').feature('freq').setEntry('activate', 'acpr2', false);
model.study('std2').feature('freq').setEntry('activate', 'cir2', false);
model.study('std2').feature('freq').setEntry('activate', 'frame:material4', false);
model.study('std2').feature('freq').setEntry('activate', 'comp2:shape', false);
model.study('std1').feature('freq').setEntry('activate', 'acpr2', false);
model.study('std1').feature('freq').setEntry('activate', 'cir2', false);
model.study('std1').feature('freq').setEntry('activate', 'frame:material4', false);
model.study('std1').feature('freq').setEntry('activate', 'comp2:shape', false);
model.study('std3').feature('sho1').set('plotgroup', 'pg21');

model.sol('sol3').feature('o1').set('gcmma', false);
model.sol('sol3').feature('o1').feature('s1').feature('se1').feature.move('ss2', 0);
model.sol('sol3').runAll;

model.result('pg14').run;

model.study('std3').feature('sho1').set('probewindow', '');

model.result.evaluationGroup('eg1').feature.duplicate('gev2', 'gev1');
model.result.evaluationGroup('eg1').feature('gev2').set('data', 'dset2');
model.result.evaluationGroup('eg1').feature.duplicate('gev3', 'gev2');
model.result.evaluationGroup('eg1').feature('gev3').set('data', 'dset4');
model.result.evaluationGroup('eg1').feature('gev3').setIndex('expr', 'Lp_pext_opt(R0*cos(theta0),0,R0*sin(theta0))', 0);
model.result.evaluationGroup('eg1').feature('gev3').setIndex('unit', 'dB', 0);
model.result.evaluationGroup('eg1').feature('gev3').setIndex('descr', '', 0);
model.result.evaluationGroup('eg1').feature('gev3').setIndex('expr', 'acpr2.lsb1.P_front', 1);
model.result.evaluationGroup('eg1').feature('gev3').setIndex('unit', 'W', 1);
model.result.evaluationGroup('eg1').feature('gev3').setIndex('descr', 'Radiated power (front)', 1);
model.result.evaluationGroup('eg1').run;
model.result.create('pg22', 'PolarGroup');
model.result('pg22').run;
model.result('pg22').label('Radiation Comparison');
model.result('pg22').set('titletype', 'none');
model.result('pg22').set('zeroangle', 'up');
model.result('pg22').create('rp1', 'RadiationPattern');
model.result('pg22').feature('rp1').set('markerpos', 'datapoints');
model.result('pg22').feature('rp1').set('linewidth', 'preference');
model.result('pg22').feature('rp1').set('phidisc', 500);
model.result('pg22').feature('rp1').set('anglerestr', 'manual');
model.result('pg22').feature('rp1').set('phimin', -90);
model.result('pg22').feature('rp1').set('phirange', 180);
model.result('pg22').feature('rp1').set('normal', [0 1 0]);
model.result('pg22').feature('rp1').set('refdir', [0 0 1]);
model.result('pg22').feature('rp1').set('legend', true);
model.result('pg22').feature('rp1').set('legendmethod', 'manual');
model.result('pg22').feature('rp1').setIndex('legends', 'Initial Design', 0);
model.result('pg22').feature.duplicate('rp2', 'rp1');
model.result('pg22').run;
model.result('pg22').feature('rp2').set('data', 'dset2');
model.result('pg22').feature('rp2').setIndex('legends', 'On Axis Design', 0);
model.result('pg22').feature.duplicate('rp3', 'rp2');
model.result('pg22').run;
model.result('pg22').feature('rp3').set('data', 'dset4');
model.result('pg22').feature('rp3').set('expr', 'acpr2.efc1.Lp_pext');
model.result('pg22').feature('rp3').set('descr', 'Exterior-field sound pressure level');
model.result('pg22').feature('rp3').setIndex('legends', 'Off Axis Design', 0);
model.result('pg22').run;
model.result('pg4').run;
model.result('pg4').feature('rp1').set('anglerestr', 'manual');
model.result('pg4').feature('rp1').set('thetarange', 90);
model.result('pg5').run;
model.result('pg5').feature('rp1').set('anglerestr', 'manual');
model.result('pg5').feature('rp1').set('thetarange', 90);
model.result('pg6').run;
model.result('pg6').set('zeroangle', 'up');
model.result('pg6').run;
model.result('pg6').feature('rp1').set('phidisc', 500);
model.result('pg6').feature('rp1').set('anglerestr', 'manual');
model.result('pg6').feature('rp1').set('phimin', -90);
model.result('pg6').feature('rp1').set('phirange', 180);
model.result('pg6').feature('rp1').set('normal', [0 1 0]);
model.result('pg6').feature('rp1').set('refdir', [0 0 1]);
model.result('pg10').run;
model.result('pg10').feature('rp1').set('anglerestr', 'manual');
model.result('pg10').feature('rp1').set('thetarange', 90);
model.result('pg11').run;
model.result('pg11').feature('rp1').set('anglerestr', 'manual');
model.result('pg11').feature('rp1').set('thetarange', 90);
model.result('pg12').run;
model.result('pg12').set('zeroangle', 'up');
model.result('pg12').run;
model.result('pg12').feature('rp1').set('phidisc', 500);
model.result('pg12').feature('rp1').set('anglerestr', 'manual');
model.result('pg12').feature('rp1').set('phimin', -90);
model.result('pg12').feature('rp1').set('phirange', 180);
model.result('pg12').feature('rp1').set('normal', [0 1 0]);
model.result('pg12').feature('rp1').set('refdir', [0 0 1]);
model.result('pg17').run;
model.result('pg17').feature('rp1').set('anglerestr', 'manual');
model.result('pg17').feature('rp1').set('thetarange', 90);
model.result('pg18').run;
model.result('pg18').feature('rp1').set('anglerestr', 'manual');
model.result('pg18').feature('rp1').set('thetarange', 90);
model.result('pg19').run;
model.result('pg19').set('zeroangle', 'up');
model.result('pg19').run;
model.result('pg19').feature('rp1').set('phidisc', 500);
model.result('pg19').feature('rp1').set('anglerestr', 'manual');
model.result('pg19').feature('rp1').set('phimin', -90);
model.result('pg19').feature('rp1').set('phirange', 180);
model.result('pg19').feature('rp1').set('normal', [0 1 0]);
model.result('pg19').feature('rp1').set('refdir', [0 0 1]);
model.result.dataset.create('mir1', 'Mirror3D');
model.result.dataset('mir1').set('quickplane', 'zx');
model.result.dataset('mir1').set('hasvar', true);
model.result.dataset.duplicate('mir2', 'mir1');
model.result.dataset('mir2').set('data', 'dset2');
model.result.dataset.duplicate('mir3', 'mir2');
model.result.dataset('mir3').set('data', 'dset4');
model.result.create('pg23', 'PlotGroup3D');
model.result('pg23').run;
model.result('pg23').label('Design Comparison');
model.result('pg23').set('data', 'mir1');
model.result('pg23').set('titletype', 'none');
model.result('pg23').set('edges', false);
model.result('pg23').create('line1', 'Line');
model.result('pg23').feature('line1').set('expr', '1');
model.result('pg23').feature('line1').set('linetype', 'tube');
model.result('pg23').feature('line1').set('radiusexpr', '2e-3');
model.result('pg23').feature('line1').set('tuberadiusscaleactive', true);
model.result('pg23').feature('line1').set('coloring', 'uniform');
model.result('pg23').feature('line1').set('color', 'black');
model.result('pg23').feature('line1').create('filt1', 'Filter');
model.result('pg23').run;
model.result('pg23').feature('line1').feature('filt1').set('expr', 'mir1z<eps && abs(mir1x)<L0*1.01 && abs(mir1y)<w0*1.01');
model.result('pg23').run;
model.result('pg23').create('slc1', 'Slice');
model.result('pg23').feature('slc1').set('quickplane', 'zx');
model.result('pg23').feature('slc1').set('quickynumber', 1);
model.result('pg23').feature('slc1').create('filt1', 'Filter');
model.result('pg23').run;
model.result('pg23').feature('slc1').feature('filt1').set('expr', '0<mir1z');
model.result('pg23').run;
model.result('pg23').create('surf1', 'Surface');
model.result('pg23').feature('surf1').set('expr', '1');
model.result('pg23').feature('surf1').set('coloring', 'uniform');
model.result('pg23').feature('surf1').set('color', 'gray');
model.result('pg23').feature('surf1').create('filt1', 'Filter');
model.result('pg23').run;
model.result('pg23').feature('surf1').feature('filt1').set('expr', 'mir1y*L0/w0<mir1x && mir1z < 0 && eps<abs(mir1y)');
model.result('pg23').run;
model.result('pg23').create('str1', 'Streamline');
model.result('pg23').feature('str1').set('data', 'dset1');
model.result('pg23').feature('str1').set('expr', {'acpr.Ix' 'acpr.Iy' 'acpr.Iz'});
model.result('pg23').feature('str1').set('descr', 'Intensity');
model.result('pg23').feature('str1').set('posmethod', 'selection');
model.result('pg23').feature('str1').selection.named('geom1_cylsel1');
model.result('pg23').feature('str1').set('linetype', 'tube');
model.result('pg23').feature('str1').set('radiusexpr', '2e-3');
model.result('pg23').feature('str1').set('tuberadiusscaleactive', true);
model.result('pg23').feature('str1').set('pointtype', 'arrow');
model.result('pg23').feature('str1').set('color', 'black');
model.result('pg23').run;
model.result('pg23').feature.duplicate('line2', 'line1');
model.result('pg23').run;
model.result('pg23').feature('line2').set('data', 'mir2');
model.result('pg23').feature('line2').create('trn1', 'Translation');
model.result('pg23').run;
model.result('pg23').feature('line2').feature('trn1').set('trans', {'-1.2*Rair' '0.2*Rair' '0'});
model.result('pg23').run;
model.result('pg23').feature.duplicate('slc2', 'slc1');
model.result('pg23').run;
model.result('pg23').feature('slc2').set('data', 'mir2');
model.result('pg23').run;
model.result('pg23').run;
model.result('pg23').feature('slc2').set('inheritplot', 'slc1');
model.result('pg23').feature('slc2').feature.copy('trn1', 'pg23/line2/trn1');
model.result('pg23').run;
model.result('pg23').run;
model.result('pg23').feature.duplicate('surf2', 'surf1');
model.result('pg23').run;
model.result('pg23').feature('surf2').set('data', 'mir2');
model.result('pg23').feature('surf2').feature.copy('trn1', 'pg23/line2/trn1');
model.result('pg23').run;
model.result('pg23').run;
model.result('pg23').feature.duplicate('str2', 'str1');
model.result('pg23').run;
model.result('pg23').feature('str2').set('data', 'dset2');
model.result('pg23').feature('str2').feature.copy('trn1', 'pg23/line2/trn1');
model.result('pg23').run;
model.result('pg23').run;
model.result('pg23').feature.duplicate('line3', 'line2');
model.result('pg23').run;
model.result('pg23').feature('line3').set('data', 'mir3');
model.result('pg23').run;
model.result('pg23').feature('line3').feature('trn1').set('trans', {'-2.4*Rair' '0.4*Rair' '0'});
model.result('pg23').run;
model.result('pg23').feature.duplicate('slc3', 'slc2');
model.result('pg23').run;
model.result('pg23').feature('slc3').set('data', 'mir3');
model.result('pg23').feature('slc3').set('expr', 'acpr2.p_t');
model.result('pg23').feature('slc3').set('descr', 'Total acoustic pressure');
model.result('pg23').run;
model.result('pg23').feature('slc3').feature('trn1').set('trans', {'-2.4*Rair' '0.4*Rair' '0'});
model.result('pg23').run;
model.result('pg23').feature.duplicate('surf3', 'surf2');
model.result('pg23').run;
model.result('pg23').feature('surf3').set('data', 'mir3');
model.result('pg23').run;
model.result('pg23').feature('surf3').feature('trn1').set('trans', {'-2.4*Rair' '0.4*Rair' '0'});
model.result('pg23').run;
model.result('pg23').feature.duplicate('str3', 'str2');
model.result('pg23').run;
model.result('pg23').feature('str3').set('data', 'dset4');
model.result('pg23').feature('str3').set('expr', {'acpr2.Ix' 'acpr2.Iy' 'acpr2.Iz'});
model.result('pg23').feature('str3').set('descr', 'Intensity (spatial and material frames)');
model.result('pg23').feature('str3').selection.named('geom2_imp1_mpart1_imp1_geom1_cylsel1');
model.result('pg23').run;
model.result('pg23').feature('str3').feature('trn1').set('trans', {'-2.4*Rair' '0.4*Rair' '0'});
model.result('pg23').run;
model.result('pg23').run;
model.result('pg23').run;

model.title('Shape Optimization of a Rectangular Loudspeaker Horn in 3D');

model.description('This model demonstrates how to use the Control Function feature to perform shape optimization on a rectangular horn for an improved on axis response. The results of the initial design are exported to a new component via a Filter dataset. Further, the off-axis spatial response is improved using the Free Shape Boundary and Transformation shape optimization features.');

model.mesh('mesh1').clearMesh;
model.mesh('acpr_pmb1_xdim').clearMesh;
model.mesh('cfunc1_xdim').clearMesh;
model.mesh('mpart1').clearMesh;
model.mesh('mesh2').clearMesh;
model.mesh('acpr2_pmb1_xdim').clearMesh;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;

model.label('rectangular_horn_shape_optimization.mph');

model.modelNode.label('Components');

out = model;
