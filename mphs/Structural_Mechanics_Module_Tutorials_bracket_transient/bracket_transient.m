function out = model
%
% bracket_transient.m
%
% Model exported on May 26 2025, 21:33 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Structural_Mechanics_Module/Tutorials');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('solid', 'SolidMechanics', 'geom1');
model.physics('solid').model('comp1');

model.geom('geom1').create('imp1', 'Import');
model.geom('geom1').feature('imp1').set('type', 'native');
model.geom('geom1').feature('imp1').set('filename', 'bracket.mphbin');
model.geom('geom1').feature('imp1').importData;

model.param.set('elSize', '6[mm]');
model.param.descr('elSize', 'Element Size');

model.geom('geom1').create('blk1', 'Block');
model.geom('geom1').selection.create('csel1', 'CumulativeSelection');
model.geom('geom1').selection('csel1').label('Partition block');
model.geom('geom1').feature('blk1').set('contributeto', 'csel1');
model.geom('geom1').feature('blk1').set('size', [0.025 0.13 0.04]);
model.geom('geom1').feature('blk1').set('pos', [-0.11 -0.12 0.025]);
model.geom('geom1').run('blk1');
model.geom('geom1').create('mir1', 'Mirror');
model.geom('geom1').feature('mir1').selection('input').named('csel1');
model.geom('geom1').feature('mir1').set('keep', true);
model.geom('geom1').feature('mir1').set('contributeto', 'csel1');
model.geom('geom1').run('mir1');
model.geom('geom1').create('mir2', 'Mirror');
model.geom('geom1').feature('mir2').selection('input').named('csel1');
model.geom('geom1').feature('mir2').set('keep', true);
model.geom('geom1').feature('mir2').set('axis', [1 0 0]);
model.geom('geom1').feature('mir2').set('contributeto', 'csel1');
model.geom('geom1').run('mir2');
model.geom('geom1').create('par1', 'Partition');
model.geom('geom1').feature('par1').selection('input').set({'imp1'});
model.geom('geom1').feature('par1').selection('tool').named('csel1');
model.geom('geom1').run('par1');
model.geom('geom1').run('fin');
model.geom('geom1').run('par1');
model.geom('geom1').create('cm1', 'CentroidMeasurement');
model.geom('geom1').feature('cm1').selection('ent').set('par1', [2 5]);
model.geom('geom1').run('cm1');
model.geom('geom1').feature('cm1').setIndex('parname', 'PinHoleX', 0);
model.geom('geom1').feature('cm1').setIndex('parname', 'PinHoleY', 1);
model.geom('geom1').feature('cm1').setIndex('parname', 'PinHoleZ', 2);

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');

model.geom('geom1').run;

model.selection('sel1').label('Bolt 1');
model.selection('sel1').geom(2);
model.selection('sel1').set([41]);
model.selection('sel1').set('groupcontang', true);
model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').label('Bolt 2');
model.selection('sel2').geom(2);
model.selection('sel2').set([43]);
model.selection('sel2').set('groupcontang', true);
model.selection.create('sel3', 'Explicit');
model.selection('sel3').model('comp1');
model.selection('sel3').label('Bolt 3');
model.selection('sel3').geom(2);
model.selection('sel3').set([55]);
model.selection('sel3').set('groupcontang', true);
model.selection.create('sel4', 'Explicit');
model.selection('sel4').model('comp1');
model.selection('sel4').label('Bolt 4');
model.selection('sel4').geom(2);
model.selection('sel4').set([57]);
model.selection('sel4').set('groupcontang', true);
model.selection.create('uni1', 'Union');
model.selection('uni1').model('comp1');
model.selection('uni1').label('Bolt Holes');
model.selection('uni1').set('entitydim', 2);
model.selection('uni1').set('input', {'sel1' 'sel2' 'sel3' 'sel4'});
model.selection.create('sel5', 'Explicit');
model.selection('sel5').model('comp1');
model.selection('sel5').label('Left Pin Hole');
model.selection('sel5').geom(2);
model.selection('sel5').set([4]);
model.selection('sel5').set('groupcontang', true);
model.selection.create('sel6', 'Explicit');
model.selection('sel6').model('comp1');
model.selection('sel6').label('Right Pin Hole');
model.selection('sel6').geom(2);
model.selection('sel6').set([75]);
model.selection('sel6').set('groupcontang', true);
model.selection.create('uni2', 'Union');
model.selection('uni2').model('comp1');
model.selection('uni2').label('Pin Holes');
model.selection('uni2').set('entitydim', 2);
model.selection('uni2').set('input', {'sel5' 'sel6'});
model.selection.create('adj1', 'Adjacent');
model.selection('adj1').model('comp1');
model.selection('adj1').label('Bolt Hole Edges');
model.selection('adj1').set('entitydim', 2);
model.selection('adj1').set('outputdim', 1);
model.selection('adj1').set('input', {'uni1'});

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat1').propertyGroup('Enu').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup('Enu').func.create('int2', 'Interpolation');
model.material('mat1').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat1').propertyGroup.create('ElastoplasticModel', 'Elastoplastic material model');
model.material('mat1').propertyGroup('ElastoplasticModel').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('Ludwik', 'Ludwik');
model.material('mat1').propertyGroup('Ludwik').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('JohnsonCook', 'Johnson-Cook');
model.material('mat1').propertyGroup.create('Swift', 'Swift');
model.material('mat1').propertyGroup.create('Voce', 'Voce');
model.material('mat1').propertyGroup('Voce').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('HockettSherby', 'Hockett-Sherby');
model.material('mat1').propertyGroup('HockettSherby').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('ArmstrongFrederick', 'Armstrong-Frederick');
model.material('mat1').propertyGroup('ArmstrongFrederick').func.create('int1', 'Interpolation');
model.material('mat1').propertyGroup.create('Norton', 'Norton');
model.material('mat1').propertyGroup.create('Garofalo', 'Garofalo (hyperbolic sine)');
model.material('mat1').propertyGroup.create('ChabocheViscoplasticity', 'Chaboche viscoplasticity');
model.material('mat1').label('Structural steel');
model.material('mat1').set('family', 'custom');
model.material('mat1').set('customspecular', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.material('mat1').set('customdiffuse', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat1').set('customambient', [0.6666666666666666 0.6666666666666666 0.6666666666666666]);
model.material('mat1').set('noise', true);
model.material('mat1').set('fresnel', 0.9);
model.material('mat1').set('roughness', 0.3);
model.material('mat1').set('metallic', 0);
model.material('mat1').set('pearl', 0);
model.material('mat1').set('diffusewrap', 0);
model.material('mat1').set('clearcoat', 0);
model.material('mat1').set('reflectance', 0);
model.material('mat1').propertyGroup('def').set('lossfactor', '0.02');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('heatcapacity', '475[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]'});
model.material('mat1').propertyGroup('def').set('density', '7850[kg/m^3]');
model.material('mat1').propertyGroup('Enu').func('int1').set('funcname', 'E');
model.material('mat1').propertyGroup('Enu').func('int1').set('table', {'293.15' '200e9'; '793.15' '166.6e9'});
model.material('mat1').propertyGroup('Enu').func('int1').set('extrap', 'linear');
model.material('mat1').propertyGroup('Enu').func('int1').set('fununit', {'Pa'});
model.material('mat1').propertyGroup('Enu').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Enu').func('int2').set('funcname', 'nu');
model.material('mat1').propertyGroup('Enu').func('int2').set('table', {'293.15' '0.30'; '793.15' '0.315'});
model.material('mat1').propertyGroup('Enu').func('int2').set('extrap', 'linear');
model.material('mat1').propertyGroup('Enu').func('int2').set('fununit', {'1'});
model.material('mat1').propertyGroup('Enu').func('int2').set('argunit', {'K'});
model.material('mat1').propertyGroup('Enu').set('E', 'E(T)');
model.material('mat1').propertyGroup('Enu').set('nu', 'nu(T)');
model.material('mat1').propertyGroup('Enu').addInput('temperature');
model.material('mat1').propertyGroup('Murnaghan').set('l', '-3.0e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('m', '-6.2e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('n', '-7.2e11[Pa]');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('ElastoplasticModel').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmags', '350[MPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('Et', '1.045[GPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('Ek', '1.045[GPa]*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').set('sigmagh', '1.050[GPa]*epe*a(T)');
model.material('mat1').propertyGroup('ElastoplasticModel').addInput('temperature');
model.material('mat1').propertyGroup('ElastoplasticModel').addInput('effectiveplasticstrain');
model.material('mat1').propertyGroup('Ludwik').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('Ludwik').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('Ludwik').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('Ludwik').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Ludwik').set('k_lud', '560[MPa]*a(T)');
model.material('mat1').propertyGroup('Ludwik').set('n_lud', '0.61');
model.material('mat1').propertyGroup('Ludwik').addInput('temperature');
model.material('mat1').propertyGroup('JohnsonCook').set('k_jcook', '560[MPa]');
model.material('mat1').propertyGroup('JohnsonCook').set('n_jcook', '0.61');
model.material('mat1').propertyGroup('JohnsonCook').set('C_jcook', '0.12');
model.material('mat1').propertyGroup('JohnsonCook').set('epet0_jcook', '1[1/s]');
model.material('mat1').propertyGroup('JohnsonCook').set('m_jcook', '0.6');
model.material('mat1').propertyGroup('Swift').set('e0_swi', '0.021');
model.material('mat1').propertyGroup('Swift').set('n_swi', '0.2');
model.material('mat1').propertyGroup('Voce').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('Voce').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('Voce').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('Voce').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('Voce').set('sigma_voc', '249[MPa]*a(T)');
model.material('mat1').propertyGroup('Voce').set('beta_voc', '9.3');
model.material('mat1').propertyGroup('Voce').addInput('temperature');
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('HockettSherby').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('HockettSherby').set('sigma_hoc', '684[MPa]*a(T)');
model.material('mat1').propertyGroup('HockettSherby').set('m_hoc', '3.9');
model.material('mat1').propertyGroup('HockettSherby').set('n_hoc', '0.85');
model.material('mat1').propertyGroup('HockettSherby').addInput('temperature');
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('funcname', 'a');
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('table', {'600' '1'; '1100' '0.1'; '1643' '0'});
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('fununit', {'1'});
model.material('mat1').propertyGroup('ArmstrongFrederick').func('int1').set('argunit', {'K'});
model.material('mat1').propertyGroup('ArmstrongFrederick').set('Ck', '2.070[GPa]*a(T)');
model.material('mat1').propertyGroup('ArmstrongFrederick').set('gammak', '8.0');
model.material('mat1').propertyGroup('ArmstrongFrederick').addInput('temperature');
model.material('mat1').propertyGroup('Norton').set('A_nor', '1.2e-15[1/s]');
model.material('mat1').propertyGroup('Norton').set('sigRef_nor', '1[MPa]');
model.material('mat1').propertyGroup('Norton').set('n_nor', '4.5');
model.material('mat1').propertyGroup('Garofalo').set('A_gar', '1e-6[1/s]');
model.material('mat1').propertyGroup('Garofalo').set('sigRef_gar', '100[MPa]');
model.material('mat1').propertyGroup('Garofalo').set('n_gar', '4.6');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('A_cha', '1');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('sigRef_cha', '490[MPa]');
model.material('mat1').propertyGroup('ChabocheViscoplasticity').set('n_cha', '9');

model.physics('solid').create('fix1', 'Fixed', 2);
model.physics('solid').feature('fix1').selection.named('uni1');

model.mesh('mesh1').create('edg1', 'Edge');
model.mesh('mesh1').feature('edg1').selection.named('adj1');
model.mesh('mesh1').feature('edg1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('edg1').feature('dis1').set('numelem', 8);
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe1').selection.set([1 4 5 6 9]);
model.mesh('mesh1').feature('swe1').selection('sourceface').set([1 33 37 50 72]);
model.mesh('mesh1').feature('swe1').create('size1', 'Size');
model.mesh('mesh1').feature('swe1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('swe1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('swe1').feature('size1').set('hmax', 'elSize');
model.mesh('mesh1').feature('size').set('hauto', 4);
model.mesh('mesh1').create('ftet1', 'FreeTet');
model.mesh('mesh1').feature('ftet1').create('size1', 'Size');
model.mesh('mesh1').feature('ftet1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('ftet1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('ftet1').feature('size1').set('hmax', 'elSize');
model.mesh('mesh1').feature('ftet1').create('size2', 'Size');
model.mesh('mesh1').feature('ftet1').feature('size2').selection.geom('geom1', 2);
model.mesh('mesh1').feature('ftet1').feature('size2').selection.set([24 28 63 70]);
model.mesh('mesh1').feature('ftet1').feature('size2').set('hauto', 1);
model.mesh('mesh1').run;

model.title('Bracket Geometry');

model.description('This is a base for all bracket tutorials, which contains the bracket geometry.');

model.label('bracket_basic.mph');

model.physics('solid').feature('lemm1').create('dmp1', 'Damping', 3);
model.physics('solid').feature('lemm1').feature('dmp1').set('InputParameters', 'DampingRatios');
model.physics('solid').feature('lemm1').feature('dmp1').set('f1', 200);
model.physics('solid').feature('lemm1').feature('dmp1').set('zeta1', '1e-2');
model.physics('solid').feature('lemm1').feature('dmp1').set('f2', 1500);
model.physics('solid').feature('lemm1').feature('dmp1').set('zeta2', '2e-2');

model.result.table.create('tbl1', 'Table');
model.result.table('tbl1').setTableData([34.33032811627975 0.04393039272074171; 40.50978717721011 0.03737378713625216; 46.68924623814046 0.03257347791533529; 52.86870529907082 0.028913620878556527; 59.048164360001174 0.02603616708438414; 65.22762342093154 0.023718749295445794; 71.40708248186189 0.021815973548844188; 77.58654154279225 0.02022876608225108; 83.7660006037226 0.01888728801402523; 89.94545966465296 0.017740892826945923; 96.12491872558331 0.016751957393934886; 102.30437778651367 0.015891948739422703; 108.48383684744402 0.015138835072146913; 114.66329590837438 0.014475333969021394; 120.84275496930474 0.013887698048045816; 127.02221403023509 0.013364855093446946; 133.20167309116545 0.012897787527430093; 139.3811321520958 0.012479076948558232; 145.56059121302616 0.01210256468394026; 151.7400502739565 0.01176309528341846; 157.91950933488687 0.011456320236859805; 164.09896839581722 0.01117854603984168; 170.27842745674758 0.010926615341809266; 176.45788651767793 0.01069781306699364; 182.6373455786083 0.010489791593489338; 188.81680463953865 0.010300510624440335; 194.996263700469 0.010128188492169551; 201.17572276139936 0.009971262436973867; 207.3551818223297 0.009828355988386304; 213.53464088326007 0.009698252010141852; 219.71409994419042 0.009579870293805307; 225.89355900512078 0.009472248830040764; 232.07301806605113 0.009374528072045136; 238.2524771269815 0.0092859376478998; 244.43193618791184 0.009205785088464428; 250.6113952488422 0.009133446222924856; 256.79085430977256 0.00906835696108005; 262.9703133707029 0.009010006234262237; 269.14977243163327 0.00895792990868129; 275.3292314925636 0.008911705518418515; 281.508690553494 0.008870947692123692; 287.68814961442433 0.008835304169111538; 293.8676086753547 0.008804452318100201; 300.04706773628504 0.00877809608612853; 306.2265267972154 0.008755963316886953; 312.40598585814575 0.008737803387312362; 318.5854449190761 0.00872338511923448; 324.76490398000647 0.008712494929438907; 330.9443630409368 0.00870493518698452; 337.1238221018672 0.008700522751182495; 343.30328116279753 0.008699087667473605; 405.0978717721011 0.008818515820196547; 466.89246238140464 0.009113573609276757; 528.6870529907083 0.009522676616770781; 590.4816436000118 0.01001001994852544; 652.2762342093154 0.010553366880803505; 714.0708248186189 0.011138178017315242; 775.8654154279225 0.011754545981827829; 837.660006037226 0.012395486886177141; 899.4545966465296 0.01305593607864111; 961.2491872558331 0.013732131246511903; 1023.0437778651367 0.014421219092232583; 1084.8383684744404 0.015120996436676902; 1146.632959083744 0.015829735037536253; 1208.4275496930477 0.01654606015661059; 1270.2221403023514 0.017268864572322608; 1332.016730911655 0.01799724652689282; 1393.8113215209587 0.01873046418017753; 1455.6059121302624 0.019467901664887634; 1517.400502739566 0.020209043436007355; 1579.1950933488697 0.02095345464252339; 1640.9896839581734 0.021700765933993473; 1702.784274567477 0.02245066157536213; 1764.5788651767807 0.02320287005905247; 1826.3734557860844 0.023957156622873937; 1888.168046395388 0.02471331723714094; 1949.9626370046917 0.02547117373508576; 2011.7572276139954 0.026230569840738092; 2073.551818223299 0.026991367907051235; 2135.3464088326027 0.027753446220398686; 2197.1409994419064 0.02851669675993693; 2258.93559005121 0.02928102332473238; 2320.7301806605137 0.030046339960104716; 2382.5247712698174 0.03081256962886208; 2444.319361879121 0.03157964308409044; 2506.1139524884247 0.03234749790870838; 2567.9085430977284 0.0331160776936958; 2629.703133707032 0.03388533133218592; 2691.4977243163357 0.034655212410799725; 2753.2923149256394 0.03542567868294535; 2815.086905534943 0.036196691611487766; 2876.8814961442467 0.03696821597035845; 2938.6760867535504 0.037740219496429216; 3000.470677362854 0.038512672584403954; 3062.2652679721577 0.03928554801865169; 3124.0598585814614 0.04005882073686613; 3185.854449190765 0.040832467621230245; 3247.6490398000687 0.04160646731342258; 3309.4436304093724 0.04238080005034904; 3371.238221018676 0.04315544751794074; 3433.0328116279798 0.04393039272074176]);
model.result.table('tbl1').label('Damping Ratio Plot');
model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').label('Damping Ratio Plot');
model.result('pg1').create('tblp11', 'Table');
model.result('pg1').feature('tblp11').set('markerpos', 'datapoints');
model.result('pg1').feature('tblp11').set('table', 'tbl1');
model.result('pg1').feature('tblp11').label('Damping 1');
model.result('pg1').set('xlabel', 'Frequency (Hz)');
model.result('pg1').set('ylabel', 'Damping ratio');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').run;

model.func.create('step1', 'Step');
model.func('step1').set('location', '1[ms]');
model.func('step1').set('smooth', '2[ms]');
model.func.create('rect1', 'Rectangle');
model.func('rect1').set('lower', '4[ms]');
model.func('rect1').set('upper', '4.5[ms]');
model.func('rect1').set('smoothactive', false);

model.param.set('t', '0[s]');
model.param.descr('t', 'Time');
model.param.set('F_x', '400[N]*rect1(t)');
model.param.descr('F_x', 'Applied force, x-component');
model.param.set('F_y', '500[N]*sin(2*pi*300[Hz]*t)');
model.param.descr('F_y', 'Applied force, y-component');
model.param.set('F_z', '-100[N]*step1(t)');
model.param.descr('F_z', 'Applied force, z-component');

model.physics('solid').create('rig1', 'RigidConnector', 2);
model.physics('solid').feature('rig1').selection.named('uni2');
model.physics('solid').feature('rig1').create('rf1', 'RigidBodyForce', -1);
model.physics('solid').feature('rig1').feature('rf1').set('Ft', {'F_x' 'F_y' 'F_z'});

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').setSolveFor('/physics/solid', true);
model.study('std1').feature('time').set('tunit', 'ms');
model.study('std1').feature('time').set('tlist', 'range(0,0.2,10)');
model.study('std1').feature('time').set('plot', true);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_disp').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_rot').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_disp').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_rot').set('resscalemethod', 'parent');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_disp').set('scaleval', '0.0042275879647855966');
model.sol('sol1').feature('v1').feature('comp1_solid_rig_rot').set('scaleval', '0.01');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.42275879647855963');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.2,10)');
model.sol('sol1').feature('t1').set('plot', 'on');
model.sol('sol1').feature('t1').set('plotgroup', 'pg1');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('reacf', true);
model.sol('sol1').feature('t1').set('storeudot', true);
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('timemethod', 'genalpha');
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('t1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('t1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('t1').feature('i1').set('nlinnormuse', true);
model.sol('sol1').feature('t1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-4');

model.probe.create('var1', 'GlobalVariable');
model.probe('var1').model('comp1');
model.probe('var1').label('Pin displacement, x-component');
model.probe('var1').set('expr', 'solid.rig1.u');
model.probe('var1').set('descr', 'Rigid body displacement, x-component');
model.probe('var1').set('unit', 'mm');
model.probe.create('var2', 'GlobalVariable');
model.probe('var2').model('comp1');
model.probe('var2').label('Pin displacement, y-component');
model.probe('var2').set('expr', 'solid.rig1.v');
model.probe('var2').set('descr', 'Rigid body displacement, y-component');
model.probe('var2').set('unit', 'mm');
model.probe.create('var3', 'GlobalVariable');
model.probe('var3').model('comp1');
model.probe('var3').set('expr', 'solid.rig1.w');
model.probe('var3').set('descr', 'Rigid body displacement, z-component');
model.probe('var3').set('unit', 'mm');
model.probe('var3').label('Pin displacement, z-component');
model.probe('var1').genResult('none');
model.probe('var2').genResult('none');
model.probe('var3').genResult('none');

model.sol('sol1').runAll;

model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').set('data', 'dset1');
model.result('pg3').setIndex('looplevel', 51, 0);
model.result('pg3').set('defaultPlotID', 'stress');
model.result('pg3').label('Stress (solid)');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').create('vol1', 'Volume');
model.result('pg3').feature('vol1').set('expr', {'solid.misesGp'});
model.result('pg3').feature('vol1').set('threshold', 'manual');
model.result('pg3').feature('vol1').set('thresholdvalue', 0.2);
model.result('pg3').feature('vol1').set('colortable', 'Rainbow');
model.result('pg3').feature('vol1').set('colortabletrans', 'none');
model.result('pg3').feature('vol1').set('colorscalemode', 'linear');
model.result('pg3').feature('vol1').set('resolution', 'custom');
model.result('pg3').feature('vol1').set('refine', 2);
model.result('pg3').feature('vol1').set('colortable', 'Prism');
model.result('pg3').feature('vol1').create('def', 'Deform');
model.result('pg3').feature('vol1').feature('def').set('expr', {'u' 'v' 'w'});
model.result('pg3').feature('vol1').feature('def').set('descr', 'Displacement field');
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').feature('vol1').set('unit', 'MPa');
model.result('pg3').feature('vol1').set('rangecoloractive', true);
model.result('pg3').feature('vol1').set('rangecolormax', 50);
model.result('pg3').feature('vol1').set('colortabletrans', 'nonlinear');
model.result('pg3').feature('vol1').set('colorcalibration', -1);
model.result.export.create('anim1', 'Animation');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('fontsize', '9');
model.result.export('anim1').set('colortheme', 'globaltheme');
model.result.export('anim1').set('customcolor', [1 1 1]);
model.result.export('anim1').set('background', 'color');
model.result.export('anim1').set('gltfincludelines', 'on');
model.result.export('anim1').set('title1d', 'on');
model.result.export('anim1').set('legend1d', 'on');
model.result.export('anim1').set('logo1d', 'on');
model.result.export('anim1').set('options1d', 'on');
model.result.export('anim1').set('title2d', 'on');
model.result.export('anim1').set('legend2d', 'on');
model.result.export('anim1').set('logo2d', 'on');
model.result.export('anim1').set('options2d', 'off');
model.result.export('anim1').set('title3d', 'on');
model.result.export('anim1').set('legend3d', 'on');
model.result.export('anim1').set('logo3d', 'on');
model.result.export('anim1').set('options3d', 'off');
model.result.export('anim1').set('axisorientation', 'on');
model.result.export('anim1').set('grid', 'on');
model.result.export('anim1').set('axes1d', 'on');
model.result.export('anim1').set('axes2d', 'on');
model.result.export('anim1').set('showgrid', 'on');
model.result.export('anim1').set('plotgroup', 'pg3');
model.result.export('anim1').set('framesel', 'all');
model.result.export('anim1').showFrame;
model.result.export('anim1').set('maxframes', 51);
model.result('pg3').run;
model.result('pg3').setIndex('looplevel', 36, 0);
model.result('pg3').run;
model.result('pg3').setIndex('looplevel', 41, 0);
model.result('pg3').run;
model.result('pg3').setIndex('looplevel', 46, 0);
model.result('pg3').run;
model.result('pg3').setIndex('looplevel', 51, 0);
model.result('pg3').run;
model.result('pg2').set('window', 'window1');
model.result('pg2').run;
model.result('pg2').label('Displacement at Center of Pin');
model.result('pg2').set('titletype', 'manual');
model.result('pg2').set('title', 'Pin center of rotation displacement');
model.result('pg2').set('ylabelactive', true);
model.result('pg2').set('ylabel', 'Displacement (mm)');
model.result('pg2').set('legendpos', 'upperleft');
model.result('pg2').set('window', 'window1');
model.result('pg2').run;
model.result('pg2').feature('tblp1').set('linewidth', 2);
model.result('pg2').feature('tblp1').set('legendmethod', 'manual');
model.result('pg2').feature('tblp1').setIndex('legends', 'x-component', 0);
model.result('pg2').feature('tblp1').setIndex('legends', 'y-component', 1);
model.result('pg2').feature('tblp1').setIndex('legends', 'z-component', 2);
model.result('pg2').set('window', 'window1');
model.result('pg2').run;

model.title(['Bracket ' native2unicode(hex2dec({'20' '14'}), 'unicode') ' Transient Analysis']);

model.description('This example computes the structural stress within a bracket subjected to a time-varying load.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;

model.label('bracket_transient.mph');

model.modelNode.label('Components');

out = model;
