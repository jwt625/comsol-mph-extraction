function out = model
%
% helmholtz_resonator_with_flow.m
%
% Model exported on May 26 2025, 21:25 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Acoustics_Module/Aeroacoustics_and_Noise');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 3);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('spf', 'TurbulentFlowSST', 'geom1');
model.physics('spf').model('comp1');

model.study.create('std1');
model.study('std1').create('wdi', 'WallDistanceInitialization');
model.study('std1').feature('wdi').set('solnum', 'auto');
model.study('std1').feature('wdi').set('notsolnum', 'auto');
model.study('std1').feature('wdi').set('outputmap', {});
model.study('std1').feature('wdi').set('ngenAUX', '1');
model.study('std1').feature('wdi').set('goalngenAUX', '1');
model.study('std1').feature('wdi').set('ngenAUX', '1');
model.study('std1').feature('wdi').set('goalngenAUX', '1');
model.study('std1').feature('wdi').setSolveFor('/physics/spf', true);
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').set('solnum', 'auto');
model.study('std1').feature('stat').set('notsolnum', 'auto');
model.study('std1').feature('stat').set('outputmap', {});
model.study('std1').feature('stat').set('ngenAUX', '1');
model.study('std1').feature('stat').set('goalngenAUX', '1');
model.study('std1').feature('stat').set('ngenAUX', '1');
model.study('std1').feature('stat').set('goalngenAUX', '1');
model.study('std1').feature('stat').setSolveFor('/physics/spf', true);

% To import content from file, use:
% model.param.loadFile('FILENAME');
model.param.set('Ma', '0.0', 'Flow Mach number');
model.param.set('c0', '343[m/s]', 'Speed of sound');
model.param.set('Uin', 'Ma*c0', 'Inflow velocity');
model.param.set('Lin', '60[cm]', 'Inlet duct length');
model.param.set('Lout', '50[cm]', 'Outlet duct length');
model.param.set('Lpml', '10[cm]', 'PML domain length');
model.param.set('Dmain', '4.859[cm]', 'Main duct diameter');
model.param.set('Dneck', '4.044[cm]', 'Neck diameter');
model.param.set('Lneck', '32.47[cm]-24.42[cm]', 'Neck length');
model.param.set('Dreson', '15.32[cm]', 'Resonator volume diameter');
model.param.set('Lreson', '24.42[cm]', 'Resonator volume length');
model.param.set('Lsource', '5[cm]', 'Source domain length');
model.param.set('f0', '200[Hz]', 'Maximal frequency');
model.param.set('dvisc', '0.22[mm]*sqrt(100[Hz]/f0)', 'Viscous boundary layer thickness at f0');

model.geom('geom1').create('cyl1', 'Cylinder');
model.geom('geom1').feature('cyl1').set('r', 'Dmain/2');
model.geom('geom1').feature('cyl1').set('h', 'Lin+Lout+2*Lpml');
model.geom('geom1').feature('cyl1').set('pos', {'0' '0' '-Lin-Lpml'});
model.geom('geom1').feature('cyl1').setIndex('layername', 'Layer 1', 0);
model.geom('geom1').feature('cyl1').setIndex('layer', 'Lpml', 0);
model.geom('geom1').feature('cyl1').set('layerside', false);
model.geom('geom1').feature('cyl1').set('layerbottom', true);
model.geom('geom1').feature('cyl1').set('layertop', true);
model.geom('geom1').run('cyl1');
model.geom('geom1').create('cyl2', 'Cylinder');
model.geom('geom1').feature('cyl2').set('r', 'Dneck/2');
model.geom('geom1').feature('cyl2').set('h', '1.2*Lneck');
model.geom('geom1').feature('cyl2').set('pos', {'Dmain/2-0.2*Lneck' '0' '0'});
model.geom('geom1').feature('cyl2').set('axistype', 'x');
model.geom('geom1').run('cyl2');
model.geom('geom1').create('cyl3', 'Cylinder');
model.geom('geom1').feature('cyl3').set('r', 'Dreson/2');
model.geom('geom1').feature('cyl3').set('h', 'Lreson');
model.geom('geom1').feature('cyl3').set('pos', {'Dmain/2+Lneck' '0' '0'});
model.geom('geom1').feature('cyl3').set('axistype', 'x');
model.geom('geom1').run('cyl3');
model.geom('geom1').create('cyl4', 'Cylinder');
model.geom('geom1').feature('cyl4').set('r', 'Dmain/2');
model.geom('geom1').feature('cyl4').set('h', 'Lsource');
model.geom('geom1').feature('cyl4').set('pos', {'0' '0' '-Lin'});
model.geom('geom1').run('cyl4');
model.geom('geom1').create('cyl5', 'Cylinder');
model.geom('geom1').feature('cyl5').set('r', 'Dmain/2');
model.geom('geom1').feature('cyl5').set('h', 0.2);
model.geom('geom1').feature('cyl5').set('pos', [0 0 -0.1]);
model.geom('geom1').run('cyl5');
model.geom('geom1').create('pard1', 'PartitionDomains');
model.geom('geom1').feature('pard1').selection('domain').set('cyl2', 1);
model.geom('geom1').feature('pard1').set('partitionwith', 'extendedfaces');
model.geom('geom1').feature('pard1').selection('extendedface').set('cyl1', [12 15]);
model.geom('geom1').feature('pard1').set('repairtoltype', 'relative');
model.geom('geom1').runPre('fin');

model.view('view1').set('renderwireframe', true);

model.geom('geom1').create('del1', 'Delete');
model.geom('geom1').feature('del1').selection('input').init(3);
model.geom('geom1').feature('del1').selection('input').set('pard1', 1);
model.geom('geom1').run('del1');
model.geom('geom1').create('uni1', 'Union');
model.geom('geom1').feature('uni1').selection('input').set({'cyl1' 'cyl3' 'cyl4' 'cyl5' 'del1'});
model.geom('geom1').run('uni1');
model.geom('geom1').create('wp1', 'WorkPlane');
model.geom('geom1').feature('wp1').set('unite', true);
model.geom('geom1').feature('wp1').set('quickplane', 'zx');
model.geom('geom1').run('wp1');
model.geom('geom1').create('par1', 'Partition');
model.geom('geom1').feature('par1').selection('input').set({'uni1'});
model.geom('geom1').feature('par1').set('partitionwith', 'workplane');
model.geom('geom1').run('par1');
model.geom('geom1').create('del2', 'Delete');
model.geom('geom1').feature('del2').selection('input').init(3);
model.geom('geom1').feature('del2').selection('input').set('par1', [2 4 6 8 10 12 14 16]);
model.geom('geom1').runPre('fin');

model.view('view1').camera.setIndex('position', 1.412147283554077, 0);
model.view('view1').camera.setIndex('position', 6.02532577514648, 1);
model.view('view1').camera.setIndex('position', -2.9503412246704, 2);
model.view('view1').camera.set('zoomanglefull', 11.27378273010253);
model.view('view1').camera.setIndex('target', -3.218650817871093E-6, 0);
model.view('view1').camera.setIndex('target', 6.19888305664025E-6, 1);
model.view('view1').camera.setIndex('target', -0.0499846935272216, 2);
model.view('view1').camera.setIndex('up', 0.964228153228759, 0);
model.view('view1').camera.setIndex('up', -0.1098663508892059, 1);
model.view('view1').camera.setIndex('up', 0.241231024265289, 2);
model.view('view1').camera.setIndex('rotationpoint', '0.0', 0);
model.view('view1').camera.setIndex('rotationpoint', '0.0', 1);
model.view('view1').camera.set('rotationpoint', {'0.0' '0.0' '-0.0499999523162841'});
model.view('view1').camera.setIndex('viewoffset', 0.01030091382563114, 0);
model.view('view1').camera.setIndex('viewoffset', -0.055994182825088, 1);

model.selection.create('sel1', 'Explicit');
model.selection('sel1').model('comp1');

model.geom('geom1').run;

model.selection('sel1').geom(2);
model.selection('sel1').set([2 5 8 11 14 17 29 34]);
model.selection('sel1').label('Symmetry');
model.selection.create('sel2', 'Explicit');
model.selection('sel2').model('comp1');
model.selection('sel2').geom(2);
model.selection('sel2').set([1 4 7 10 13 16 20 21 22 23 24 25 27 28 30 31 32 35]);
model.selection('sel2').label('Walls');

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('rho', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('cs', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an1', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('an2', 'Analytic');
model.material('mat1').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat1').propertyGroup.create('NonlinearModel', 'Nonlinear model');
model.material('mat1').propertyGroup.create('idealGas', 'Ideal gas');
model.material('mat1').propertyGroup('idealGas').func.create('Cp', 'Piecewise');
model.material('mat1').label('Air');
model.material('mat1').set('family', 'air');
model.material('mat1').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('eta').set('pieces', {'200.0' '1600.0' '-8.38278E-7+8.35717342E-8*T^1-7.69429583E-11*T^2+4.6437266E-14*T^3-1.06585607E-17*T^4'});
model.material('mat1').propertyGroup('def').func('eta').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat1').propertyGroup('def').func('Cp').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('def').func('rho').set('expr', 'pA*0.02897/R_const[K*mol/J]/T');
model.material('mat1').propertyGroup('def').func('rho').set('args', {'pA' 'T'});
model.material('mat1').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.material('mat1').propertyGroup('def').func('rho').set('argunit', {'Pa' 'K'});
model.material('mat1').propertyGroup('def').func('rho').set('plotaxis', {'off' 'on'});
model.material('mat1').propertyGroup('def').func('rho').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat1').propertyGroup('def').func('rho').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '293.15'});
model.material('mat1').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('k').set('pieces', {'200.0' '1600.0' '-0.00227583562+1.15480022E-4*T^1-7.90252856E-8*T^2+4.11702505E-11*T^3-7.43864331E-15*T^4'});
model.material('mat1').propertyGroup('def').func('k').set('argunit', 'K');
model.material('mat1').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.material('mat1').propertyGroup('def').func('cs').set('expr', 'sqrt(1.4*R_const[K*mol/J]/0.02897*T)');
model.material('mat1').propertyGroup('def').func('cs').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('cs').set('fununit', 'm/s');
model.material('mat1').propertyGroup('def').func('cs').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('cs').set('plotfixedvalue', {'273.15'});
model.material('mat1').propertyGroup('def').func('cs').set('plotargs', {'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.material('mat1').propertyGroup('def').func('an1').set('expr', '-1/rho(pA,T)*d(rho(pA,T),T)');
model.material('mat1').propertyGroup('def').func('an1').set('args', {'pA' 'T'});
model.material('mat1').propertyGroup('def').func('an1').set('fununit', '1/K');
model.material('mat1').propertyGroup('def').func('an1').set('argunit', {'Pa' 'K'});
model.material('mat1').propertyGroup('def').func('an1').set('plotaxis', {'off' 'on'});
model.material('mat1').propertyGroup('def').func('an1').set('plotfixedvalue', {'101325' '273.15'});
model.material('mat1').propertyGroup('def').func('an1').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '373.15'});
model.material('mat1').propertyGroup('def').func('an2').set('funcname', 'muB');
model.material('mat1').propertyGroup('def').func('an2').set('expr', '0.6*eta(T)');
model.material('mat1').propertyGroup('def').func('an2').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('an2').set('fununit', 'Pa*s');
model.material('mat1').propertyGroup('def').func('an2').set('argunit', {'K'});
model.material('mat1').propertyGroup('def').func('an2').set('plotfixedvalue', {'200'});
model.material('mat1').propertyGroup('def').func('an2').set('plotargs', {'T' '200' '1600'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.material('mat1').propertyGroup('def').set('molarmass', '');
model.material('mat1').propertyGroup('def').set('bulkviscosity', '');
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)'});
model.material('mat1').propertyGroup('def').set('molarmass', '0.02897[kg/mol]');
model.material('mat1').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.material('mat1').propertyGroup('def').set('ratioofspecificheat', '1.4');
model.material('mat1').propertyGroup('def').set('electricconductivity', {'0[S/m]' '0' '0' '0' '0[S/m]' '0' '0' '0' '0[S/m]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.material('mat1').propertyGroup('def').set('density', 'rho(pA,T)');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.material('mat1').propertyGroup('def').set('soundspeed', 'cs(T)');
model.material('mat1').propertyGroup('def').addInput('temperature');
model.material('mat1').propertyGroup('def').addInput('pressure');
model.material('mat1').propertyGroup('RefractiveIndex').set('n', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('NonlinearModel').set('BA', 'def.gamma-1');
model.material('mat1').propertyGroup('idealGas').func('Cp').label('Piecewise 2');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat1').propertyGroup('idealGas').func('Cp').set('argunit', 'K');
model.material('mat1').propertyGroup('idealGas').func('Cp').set('fununit', 'J/(kg*K)');
model.material('mat1').propertyGroup('idealGas').set('Rs', 'R_const/Mn');
model.material('mat1').propertyGroup('idealGas').set('heatcapacity', 'Cp(T)');
model.material('mat1').propertyGroup('idealGas').set('ratioofspecificheat', '1.4');
model.material('mat1').propertyGroup('idealGas').set('molarmass', '0.02897');
model.material('mat1').propertyGroup('idealGas').addInput('temperature');
model.material('mat1').propertyGroup('idealGas').addInput('pressure');
model.material('mat1').materialType('nonSolid');

model.physics('spf').prop('PhysicalModelProperty').set('Compressibility', 'CompressibleMALT03');
model.physics('spf').create('sym1', 'Symmetry', 2);
model.physics('spf').feature('sym1').selection.named('sel1');
model.physics('spf').create('out1', 'OutletBoundary', 2);
model.physics('spf').feature('out1').selection.set([19]);
model.physics('spf').create('inl1', 'InletBoundary', 2);
model.physics('spf').feature('inl1').selection.set([3]);
model.physics('spf').feature('inl1').set('BoundaryCondition', 'FullyDevelopedFlow');
model.physics('spf').feature('inl1').set('Uavfdf', 'Uin');

model.mesh('mesh1').label('Mesh - CFD');
model.mesh('mesh1').create('fq1', 'FreeQuad');
model.mesh('mesh1').feature('fq1').selection.set([3 19]);
model.mesh('mesh1').feature('fq1').create('size1', 'Size');
model.mesh('mesh1').feature('fq1').feature('size1').set('table', 'cfd');
model.mesh('mesh1').feature('fq1').feature('size1').set('hauto', 1);
model.mesh('mesh1').feature('size').set('table', 'cfd');
model.mesh('mesh1').feature('size').set('custom', true);
model.mesh('mesh1').feature('size').set('hmax', 0.005);
model.mesh('mesh1').feature('size').set('hmin', 0.001);
model.mesh('mesh1').feature('size').set('hgrad', 1.1);
model.mesh('mesh1').feature('size').set('hcurve', 0.4);
model.mesh('mesh1').feature('size').set('hnarrow', 1);
model.mesh('mesh1').create('swe1', 'Sweep');
model.mesh('mesh1').feature('swe1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe1').selection.set([1 2]);
model.mesh('mesh1').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis1').selection.set([1]);
model.mesh('mesh1').feature('swe1').feature('dis1').set('numelem', 8);
model.mesh('mesh1').feature('swe1').create('dis2', 'Distribution');
model.mesh('mesh1').feature('swe1').feature('dis2').selection.set([2]);
model.mesh('mesh1').create('swe2', 'Sweep');
model.mesh('mesh1').feature('swe2').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe2').selection.set([3]);
model.mesh('mesh1').feature('swe2').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe2').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('swe2').feature('dis1').set('elemcount', 50);
model.mesh('mesh1').feature('swe2').feature('dis1').set('elemratio', 4);
model.mesh('mesh1').feature('swe2').feature('dis1').set('reverse', true);
model.mesh('mesh1').create('swe3', 'Sweep');
model.mesh('mesh1').feature('swe3').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe3').selection.set([6]);
model.mesh('mesh1').feature('swe3').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe3').feature('dis1').set('numelem', 8);
model.mesh('mesh1').create('swe4', 'Sweep');
model.mesh('mesh1').feature('swe4').selection.geom('geom1', 3);
model.mesh('mesh1').feature('swe4').selection.set([5]);
model.mesh('mesh1').feature('swe4').create('dis1', 'Distribution');
model.mesh('mesh1').feature('swe4').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('swe4').feature('dis1').set('elemcount', 50);
model.mesh('mesh1').feature('swe4').feature('dis1').set('elemratio', 4);
model.mesh('mesh1').feature('swe4').feature('dis1').set('reverse', true);
model.mesh('mesh1').create('cr1', 'CornerRefinement');
model.mesh('mesh1').feature('cr1').selection('boundary').named('sel2');
model.mesh('mesh1').create('ftet1', 'FreeTet');
model.mesh('mesh1').feature('ftet1').create('size1', 'Size');
model.mesh('mesh1').feature('ftet1').feature('size1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('ftet1').feature('size1').selection.set([26]);
model.mesh('mesh1').feature('ftet1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('ftet1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('ftet1').feature('size1').set('hmax', 0.0015);
model.mesh('mesh1').create('bl1', 'BndLayer');
model.mesh('mesh1').feature('bl1').create('blp', 'BndLayerProp');
model.mesh('mesh1').feature('bl1').feature('blp').selection.named('sel2');
model.mesh('mesh1').feature('bl1').feature('blp').set('blhminfact', 1.4);
model.mesh('mesh1').run;

model.study('std1').label('Study 1 - CFD');
model.study('std1').setGenPlots(false);
model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').setIndex('pname', 'Ma', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', '', 0);
model.study('std1').feature('stat').setIndex('pname', 'Ma', 0);
model.study('std1').feature('stat').setIndex('plistarr', '', 0);
model.study('std1').feature('stat').setIndex('punit', '', 0);
model.study('std1').feature('stat').setIndex('plistarr', '0.05 0.1', 0);
model.study('std1').feature('stat').setIndex('punit', '', 0);

model.sol.create('sol1');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3 4 5 6 7 8]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3 4 5 6 7 8]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3 4 5 6 7 8]);

model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'wdi');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'wdi');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 1.0E-6);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, wall distance (spf)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, wall distance (spf)');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'stat');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'stat');
model.sol('sol1').create('s2', 'Stationary');
model.sol('sol1').feature('s2').create('p1', 'Parametric');
model.sol('sol1').feature('s2').feature.remove('pDef');
model.sol('sol1').feature('s2').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s2').set('control', 'stat');
model.sol('sol1').feature('s2').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s2').create('se1', 'Segregated');
model.sol('sol1').feature('s2').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s2').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('segvar', {'comp1_p' 'comp1_u' 'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('subdamp', 0.5);
model.sol('sol1').feature('s2').create('i1', 'Iterative');
model.sol('sol1').feature('s2').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s2').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s2').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s2').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s2').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s2').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s2').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol1').feature('s2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('s2').feature('se1').feature('ss1').label('Velocity u, Pressure p');
model.sol('sol1').feature('s2').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('segvar', {'comp1_k' 'comp1_om'});
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('subdamp', 0.45);
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('subiter', 3);
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('subtermconst', 'itertol');
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('subntolfact', 1);
model.sol('sol1').feature('s2').create('i2', 'Iterative');
model.sol('sol1').feature('s2').feature('i2').set('linsolver', 'gmres');
model.sol('sol1').feature('s2').feature('i2').set('prefuntype', 'left');
model.sol('sol1').feature('s2').feature('i2').set('itrestart', 50);
model.sol('sol1').feature('s2').feature('i2').set('rhob', 20);
model.sol('sol1').feature('s2').feature('i2').set('maxlinit', 1000);
model.sol('sol1').feature('s2').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('s2').feature('i2').label('AMG, turbulence variables (spf)');
model.sol('sol1').feature('s2').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('iter', 0);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('linsolver', 'i2');
model.sol('sol1').feature('s2').feature('se1').feature('ss2').label('Turbulence Variables');
model.sol('sol1').feature('s2').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol1').feature('s2').feature('se1').set('subinitcfl', 2);
model.sol('sol1').feature('s2').feature('se1').set('submincfl', 10000);
model.sol('sol1').feature('s2').feature('se1').set('subkppid', 0.65);
model.sol('sol1').feature('s2').feature('se1').set('subkdpid', 0.05);
model.sol('sol1').feature('s2').feature('se1').set('subkipid', 0.05);
model.sol('sol1').feature('s2').feature('se1').set('subcfltol', 0.1);
model.sol('sol1').feature('s2').feature('se1').set('segcflaa', true);
model.sol('sol1').feature('s2').feature('se1').set('segcflaacfl', 9000);
model.sol('sol1').feature('s2').feature('se1').set('segcflaafact', 1);
model.sol('sol1').feature('s2').feature('se1').set('maxsegiter', 400);
model.sol('sol1').feature('s2').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol1').feature('s2').feature('se1').feature('ll1').set('lowerlimit', 'comp1.k 0 comp1.om 0 ');
model.sol('sol1').feature('s2').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol1').feature('s2').create('d2', 'Direct');
model.sol('sol1').feature('s2').feature('d2').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').feature('d2').label('Direct, turbulence variables (spf)');
model.sol('sol1').feature('s2').feature.remove('fcDef');
model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol1').feature('v2').set('solnum', 'auto');
model.sol('sol1').feature('v2').set('solvertype', 'solnum');
model.sol('sol1').attach('std1');

model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3 4 5 6 7 8]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3 4 5 6 7 8]);
model.mesh('mesh1').stat.selection.geom(3);
model.mesh('mesh1').stat.selection.set([1 2 3 4 5 6 7 8]);

model.sol('sol1').study('std1');
model.sol('sol2').copySolution('sol3');

model.result.dataset('dset2').set('solution', 'none');

model.sol('sol1').feature.remove('s2');
model.sol('sol1').feature.remove('v2');
model.sol('sol1').feature.remove('st2');
model.sol('sol1').feature.remove('su1');
model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol3').copySolution('sol2');
model.sol.remove('sol3');
model.sol('sol2').label('Solution Store 1');

model.result.dataset.remove('dset4');

model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'wdi');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'wdi');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 1.0E-6);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 400);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, wall distance (spf)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, wall distance (spf)');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').feature('su1').set('sol', 'sol2');
model.sol('sol1').feature('su1').label('Solution Store 1');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').feature('st2').set('study', 'std1');
model.sol('sol1').feature('st2').set('studystep', 'stat');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('control', 'stat');
model.sol('sol1').create('s2', 'Stationary');
model.sol('sol1').feature('s2').create('p1', 'Parametric');
model.sol('sol1').feature('s2').feature.remove('pDef');
model.sol('sol1').feature('s2').feature('p1').set('control', 'stat');
model.sol('sol1').feature('s2').set('control', 'stat');
model.sol('sol1').feature('s2').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s2').create('se1', 'Segregated');
model.sol('sol1').feature('s2').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s2').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('segvar', {'comp1_p' 'comp1_u' 'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('subdamp', 0.5);
model.sol('sol1').feature('s2').create('i1', 'Iterative');
model.sol('sol1').feature('s2').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s2').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s2').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s2').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s2').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s2').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s2').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol1').feature('s2').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsrelax', 0.7);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsmethod', 'lines');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsvertexrelax', 0.7);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('relax', 0.5);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', 'on');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgssolv', 'stored');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('s2').feature('se1').feature('ss1').label('Velocity u, Pressure p');
model.sol('sol1').feature('s2').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('segvar', {'comp1_k' 'comp1_om'});
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('subdamp', 0.45);
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('subiter', 3);
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('subtermconst', 'itertol');
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('subntolfact', 1);
model.sol('sol1').feature('s2').create('i2', 'Iterative');
model.sol('sol1').feature('s2').feature('i2').set('linsolver', 'gmres');
model.sol('sol1').feature('s2').feature('i2').set('prefuntype', 'left');
model.sol('sol1').feature('s2').feature('i2').set('itrestart', 50);
model.sol('sol1').feature('s2').feature('i2').set('rhob', 20);
model.sol('sol1').feature('s2').feature('i2').set('maxlinit', 1000);
model.sol('sol1').feature('s2').feature('i2').set('nlinnormuse', 'on');
model.sol('sol1').feature('s2').feature('i2').label('AMG, turbulence variables (spf)');
model.sol('sol1').feature('s2').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('iter', 0);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('linealgorithm', 'mesh');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('seconditer', 1);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').feature('se1').feature('ss2').set('linsolver', 'i2');
model.sol('sol1').feature('s2').feature('se1').feature('ss2').label('Turbulence Variables');
model.sol('sol1').feature('s2').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol1').feature('s2').feature('se1').set('subinitcfl', 2);
model.sol('sol1').feature('s2').feature('se1').set('submincfl', 10000);
model.sol('sol1').feature('s2').feature('se1').set('subkppid', 0.65);
model.sol('sol1').feature('s2').feature('se1').set('subkdpid', 0.05);
model.sol('sol1').feature('s2').feature('se1').set('subkipid', 0.05);
model.sol('sol1').feature('s2').feature('se1').set('subcfltol', 0.1);
model.sol('sol1').feature('s2').feature('se1').set('segcflaa', true);
model.sol('sol1').feature('s2').feature('se1').set('segcflaacfl', 9000);
model.sol('sol1').feature('s2').feature('se1').set('segcflaafact', 1);
model.sol('sol1').feature('s2').feature('se1').set('maxsegiter', 400);
model.sol('sol1').feature('s2').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol1').feature('s2').feature('se1').feature('ll1').set('lowerlimit', 'comp1.k 0 comp1.om 0 ');
model.sol('sol1').feature('s2').create('d1', 'Direct');
model.sol('sol1').feature('s2').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol1').feature('s2').create('d2', 'Direct');
model.sol('sol1').feature('s2').feature('d2').set('linsolver', 'pardiso');
model.sol('sol1').feature('s2').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s2').feature('d2').label('Direct, turbulence variables (spf)');
model.sol('sol1').feature('s2').feature.remove('fcDef');

model.result.dataset('dset2').set('solution', 'sol2');

model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('notsolvertype', 'solnum');
model.sol('sol1').feature('v2').set('solnum', 'auto');
model.sol('sol1').feature('v2').set('solvertype', 'solnum');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result.dataset.create('cln1', 'CutLine3D');
model.result.dataset('cln1').setIndex('genpoints', '-0.0001', 0, 1);
model.result.dataset('cln1').setIndex('genpoints', -1, 0, 2);
model.result.dataset('cln1').setIndex('genpoints', 0, 1, 0);
model.result.dataset('cln1').setIndex('genpoints', '-0.0001', 1, 1);
model.result.dataset('cln1').setIndex('genpoints', 1, 1, 2);
model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').run;
model.result('pg1').label('CFD: Velocity');
model.result('pg1').create('vol1', 'Volume');
model.result('pg1').feature('vol1').create('tran1', 'Transparency');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').create('str1', 'Streamline');
model.result('pg1').feature('str1').set('selnumber', 50);
model.result('pg1').feature('str1').selection.set([12 26]);
model.result('pg1').feature('str1').set('inheritplot', 'vol1');
model.result('pg1').feature('str1').create('col1', 'Color');
model.result('pg1').run;
model.result('pg1').run;
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').run;
model.result('pg2').label('CFD: Turbulent Viscosity');
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', 'spf.muT');
model.result('pg2').run;
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('CFD: Turbulent Viscosity Axial');
model.result('pg3').set('data', 'cln1');
model.result('pg3').set('titletype', 'label');
model.result('pg3').create('lngr1', 'LineGraph');
model.result('pg3').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg3').feature('lngr1').set('linewidth', 'preference');
model.result('pg3').feature('lngr1').label('CFD: Turbulent Viscosity Axial');
model.result('pg3').feature('lngr1').set('expr', 'spf.muT');
model.result('pg3').feature('lngr1').set('xdata', 'expr');
model.result('pg3').feature('lngr1').set('xdataexpr', 'z');
model.result('pg3').feature('lngr1').set('legend', true);
model.result('pg3').feature('lngr1').set('legendmethod', 'evaluated');
model.result('pg3').feature('lngr1').set('legendpattern', 'Ma = eval(Ma)');
model.result('pg3').run;

model.physics.create('lnsf', 'LinearizedNavierStokesFrequency', 'geom1');
model.physics('lnsf').model('comp1');

model.study('std1').feature('wdi').setSolveFor('/physics/lnsf', false);
model.study('std1').feature('stat').setSolveFor('/physics/lnsf', false);

model.multiphysics.create('bffc1', 'BackgroundFluidFlowCoupling', 'geom1', 3);
model.multiphysics('bffc1').selection.all;
model.multiphysics('bffc1').set('mapTurbulentViscosity', true);

model.mesh.create('mesh2', 'geom1');
model.mesh('mesh2').label('Mesh - Acoustics');
model.mesh('mesh2').create('ftet1', 'FreeTet');
model.mesh('mesh2').feature('size').set('custom', true);
model.mesh('mesh2').feature('size').set('hmax', 'Dmain/8');
model.mesh('mesh2').feature('size').set('hmin', 'Dmain/15');
model.mesh('mesh2').feature('ftet1').selection.geom('geom1', 3);
model.mesh('mesh2').feature('ftet1').selection.set([2 3 4 5 7 8]);
model.mesh('mesh2').feature('ftet1').create('size1', 'Size');
model.mesh('mesh2').feature('ftet1').feature('size1').selection.geom('geom1', 2);
model.mesh('mesh2').feature('ftet1').feature('size1').selection.set([26]);
model.mesh('mesh2').feature('ftet1').feature('size1').set('custom', true);
model.mesh('mesh2').feature('ftet1').feature('size1').set('hmaxactive', true);
model.mesh('mesh2').feature('ftet1').feature('size1').set('hmax', 'Dmain/15');
model.mesh('mesh2').run('ftet1');
model.mesh('mesh2').create('swe1', 'Sweep');
model.mesh('mesh2').feature('swe1').create('dis1', 'Distribution');
model.mesh('mesh2').feature('swe1').feature('dis1').set('numelem', 16);
model.mesh('mesh2').run('swe1');
model.mesh('mesh2').create('bl1', 'BndLayer');
model.mesh('mesh2').feature('bl1').create('blp', 'BndLayerProp');
model.mesh('mesh2').feature('bl1').selection.geom(3);
model.mesh('mesh2').feature('bl1').selection.set([]);
model.mesh('mesh2').feature('bl1').selection.allGeom;
model.mesh('mesh2').feature('bl1').set('smoothtransition', false);
model.mesh('mesh2').feature('bl1').feature('blp').selection.named('sel2');
model.mesh('mesh2').feature('bl1').feature('blp').set('blnlayers', 2);
model.mesh('mesh2').feature('bl1').feature('blp').set('inittype', 'blhmin');
model.mesh('mesh2').feature('bl1').feature('blp').set('blhmin', 'Dmain/40');
model.mesh('mesh2').run;

model.study.create('std2');
model.study('std2').create('mapp', 'Mapping');
model.study('std2').feature('mapp').set('solnum', 'auto');
model.study('std2').feature('mapp').set('notsolnum', 'auto');
model.study('std2').feature('mapp').set('outputmap', {});
model.study('std2').feature('mapp').setSolveFor('/physics/spf', false);
model.study('std2').feature('mapp').setSolveFor('/physics/lnsf', false);
model.study('std2').feature('mapp').setSolveFor('/multiphysics/bffc1', true);
model.study('std2').feature('mapp').setSolveFor('/physics/spf', false);
model.study('std2').feature('mapp').setSolveFor('/physics/lnsf', false);
model.study('std2').feature('mapp').set('notstudy', 'std1');
model.study('std2').feature('mapp').set('notsol', 'sol1');
model.study('std2').feature('mapp').set('notsolnum', 'all');
model.study('std2').label('Study 2 - Mapping');

model.sol.create('sol3');

model.mesh('mesh2').stat.selection.geom(3);
model.mesh('mesh2').stat.selection.set([1 2 3 4 5 6 7 8]);

model.sol('sol3').study('std2');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').feature('st1').set('study', 'std2');
model.sol('sol3').feature('st1').set('studystep', 'mapp');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').feature('v1').set('control', 'mapp');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').create('p1', 'Parametric');
model.sol('sol3').feature('s1').feature.remove('pDef');
model.sol('sol3').feature('s1').feature('p1').set('control', 'mapp');
model.sol('sol3').feature('s1').set('control', 'mapp');
model.sol('sol3').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol('sol3').attach('std2');
model.sol('sol3').runAll;

model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').label('Mapping Comparison: z velocity');
model.result('pg4').set('titletype', 'label');
model.result('pg4').create('lngr1', 'LineGraph');
model.result('pg4').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg4').feature('lngr1').set('linewidth', 'preference');
model.result('pg4').feature('lngr1').selection.set([12]);
model.result('pg4').feature('lngr1').set('expr', 'w');
model.result('pg4').feature('lngr1').set('xdata', 'expr');
model.result('pg4').feature('lngr1').set('xdataexpr', 'x');
model.result('pg4').feature('lngr1').set('legend', true);
model.result('pg4').feature('lngr1').set('legendmethod', 'evaluated');
model.result('pg4').feature('lngr1').set('legendpattern', 'Ma = eval(Ma)');
model.result('pg4').run;
model.result('pg4').create('lngr2', 'LineGraph');
model.result('pg4').feature('lngr2').set('markerpos', 'datapoints');
model.result('pg4').feature('lngr2').set('linewidth', 'preference');
model.result('pg4').feature('lngr2').set('data', 'dset3');
model.result('pg4').feature('lngr2').selection.set([12]);
model.result('pg4').feature('lngr2').set('expr', 'bffc1.u_mapz');
model.result('pg4').feature('lngr2').set('descr', 'Mapped velocity, z-component');
model.result('pg4').feature('lngr2').set('xdata', 'expr');
model.result('pg4').feature('lngr2').set('xdataexpr', 'x');
model.result('pg4').feature('lngr2').set('linestyle', 'dashed');
model.result('pg4').feature('lngr2').set('legend', true);
model.result('pg4').feature('lngr2').set('legendmethod', 'evaluated');
model.result('pg4').feature('lngr2').set('legendpattern', 'Ma = eval(Ma)');
model.result('pg4').run;
model.result('pg4').run;
model.result.duplicate('pg5', 'pg4');
model.result('pg5').run;
model.result('pg5').label('Mapping Comparison: Dynamic Viscosity');
model.result('pg5').run;
model.result('pg5').feature('lngr1').set('expr', 'spf.mu_eff');
model.result('pg5').run;
model.result('pg5').feature('lngr2').set('expr', 'bffc1.mu_eff_map');
model.result('pg5').feature('lngr2').set('descr', 'Mapped turbulent viscosity');
model.result('pg5').run;

model.variable.create('var1');
model.variable('var1').model('comp1');
model.variable('var1').label('Variables: Plane Wave');

% To import content from file, use:
% model.variable('var1').loadFile('FILENAME');
model.variable('var1').set('k0', 'lnsf.omega/(lnsf.c0+Uin)', 'Convected wave number');
model.variable('var1').set('pb', '1[Pa]*exp(-i*k0*z)', 'Background acoustic pressure');
model.variable('var1').set('ub', '0', 'Background acoustic x-velocity');
model.variable('var1').set('vb', '0', 'Background acoustic y-velocity');
model.variable('var1').set('wb', '-1/(lnsf.iomega*lnsf.rho0)*d(pb,z)', 'Background acoustic z-velocity');
model.variable('var1').set('Tb', 'lnsf.alpha_p*lnsf.T0/(lnsf.rho0*lnsf.Cp)*pb', 'Background acoustic temperature');

model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl('intop1').set('axisym', true);
model.cpl('intop1').selection.geom('geom1', 2);
model.cpl('intop1').selection.set([6]);
model.cpl('intop1').set('opname', 'intop_in');
model.cpl.create('intop2', 'Integration', 'geom1');
model.cpl('intop2').set('axisym', true);
model.cpl('intop2').selection.geom('geom1', 2);
model.cpl('intop2').selection.set([18]);
model.cpl('intop2').set('opname', 'intop_out');

model.coordSystem.create('pml1', 'geom1', 'PML');
model.coordSystem('pml1').selection.set([1 6]);

model.physics('lnsf').feature('wall1').set('MechanicalCondition', 'Slip');
model.physics('lnsf').feature('wall1').set('ThermalCondition', 'Adiabatic');
model.physics('lnsf').create('sym1', 'Symmetry', 2);
model.physics('lnsf').feature('sym1').selection.named('sel1');
model.physics('lnsf').create('baf1', 'BackgroundAcousticFields', 3);
model.physics('lnsf').feature('baf1').selection.set([2]);
model.physics('lnsf').feature('baf1').set('p', 'pb');
model.physics('lnsf').feature('baf1').set('u', {'ub' 'vb' 'wb'});
model.physics('lnsf').feature('baf1').set('T', 'Tb');

model.study.create('std3');
model.study('std3').create('freq', 'Frequency');
model.study('std3').feature('freq').setSolveFor('/physics/spf', false);
model.study('std3').feature('freq').setSolveFor('/physics/lnsf', true);
model.study('std3').feature('freq').setSolveFor('/multiphysics/bffc1', false);
model.study('std3').feature('freq').set('plist', 'range(50,10,200)');
model.study('std3').feature('freq').set('usesol', true);
model.study('std3').feature('freq').set('notsolmethod', 'sol');
model.study('std3').feature('freq').set('notstudy', 'std2');
model.study('std3').feature('freq').set('notsolnum', 'all');
model.study('std3').feature('freq').set('useparam', true);
model.study('std3').feature('freq').setIndex('pname_aux', 'Ma', 0);
model.study('std3').feature('freq').setIndex('plistarr_aux', '', 0);
model.study('std3').feature('freq').setIndex('punit_aux', '', 0);
model.study('std3').feature('freq').setIndex('pname_aux', 'Ma', 0);
model.study('std3').feature('freq').setIndex('plistarr_aux', '', 0);
model.study('std3').feature('freq').setIndex('punit_aux', '', 0);
model.study('std3').feature('freq').setIndex('plistarr_aux', '0.05 0.1', 0);
model.study('std3').feature('freq').setIndex('punit_aux', '', 0);
model.study('std3').feature('freq').set('pcontinuationmode', 'manual');
model.study('std3').feature('freq').set('pcontinuation', 'freq');
model.study('std3').setGenPlots(false);
model.study('std3').label('Study 3 - Acoustics, Ma = 0.05 and Ma = 0.1');

model.sol.create('sol4');

model.mesh('mesh2').stat.selection.geom(3);
model.mesh('mesh2').stat.selection.set([2 3 4 5 7 8]);

model.sol('sol4').study('std3');
model.sol('sol4').create('st1', 'StudyStep');
model.sol('sol4').feature('st1').set('study', 'std3');
model.sol('sol4').feature('st1').set('studystep', 'freq');
model.sol('sol4').create('v1', 'Variables');
model.sol('sol4').feature('v1').set('control', 'freq');
model.sol('sol4').create('s1', 'Stationary');
model.sol('sol4').feature('s1').set('stol', 0.001);
model.sol('sol4').feature('s1').create('p1', 'Parametric');
model.sol('sol4').feature('s1').feature.remove('pDef');
model.sol('sol4').feature('s1').feature('p1').set('pname', {'freq' 'Ma'});
model.sol('sol4').feature('s1').feature('p1').set('punit', {'Hz' ''});
model.sol('sol4').feature('s1').feature('p1').set('sweeptype', 'filled');
model.sol('sol4').feature('s1').feature('p1').set('plistarr', {'range(50,10,200)' '0.05 0.1'});
model.sol('sol4').feature('s1').feature('p1').set('pcontinuationmode', 'manual');
model.sol('sol4').feature('s1').feature('p1').set('pcontinuation', 'freq');
model.sol('sol4').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol4').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol4').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol4').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol4').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol4').feature('s1').feature('p1').set('probes', {});
model.sol('sol4').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol4').feature('s1').set('linpmethod', 'sol');
model.sol('sol4').feature('s1').set('linpsol', 'zero');
model.sol('sol4').feature('s1').set('control', 'freq');
model.sol('sol4').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol4').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol4').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol4').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol4').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol4').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol4').feature('s1').create('d1', 'Direct');
model.sol('sol4').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('s1').feature('d1').label('Suggested Direct Solver (lnsf)');
model.sol('sol4').feature('s1').create('i1', 'Iterative');
model.sol('sol4').feature('s1').feature('i1').label('Suggested Iterative Solver (GMRES with Direct Precon.) (lnsf)');
model.sol('sol4').feature('s1').feature('i1').create('dp1', 'DirectPreconditioner');
model.sol('sol4').feature('s1').feature('i1').feature('dp1').set('hybridization', 'multi');
model.sol('sol4').feature('s1').feature('i1').feature('dp1').set('hybridvar', {'comp1_u2' 'comp1_p2'});
model.sol('sol4').feature('s1').feature('i1').feature('dp1').set('linsolver', 'pardiso');
model.sol('sol4').feature('s1').feature('i1').feature('dp1').set('pivotperturb', '1.0E-13');
model.sol('sol4').feature('s1').feature('i1').create('dp2', 'DirectPreconditioner');
model.sol('sol4').feature('s1').feature('i1').feature('dp2').set('hybridization', 'multi');
model.sol('sol4').feature('s1').feature('i1').feature('dp2').set('hybridvar', {'comp1_T'});
model.sol('sol4').feature('s1').feature('i1').feature('dp2').set('linsolver', 'pardiso');
model.sol('sol4').feature('s1').feature('i1').feature('dp2').set('pivotperturb', '1.0E-13');
model.sol('sol4').feature('s1').create('i2', 'Iterative');
model.sol('sol4').feature('s1').feature('i2').label('Suggested Iterative Solver (GMRES with DD) (lnsf)');
model.sol('sol4').feature('s1').feature('i2').create('dd1', 'DomainDecomposition');
model.sol('sol4').feature('s1').feature('i2').feature('dd1').set('prefun', 'ddhyb');
model.sol('sol4').feature('s1').feature('i2').feature('dd1').set('domdofmax', 200000);
model.sol('sol4').feature('s1').feature('i2').feature('dd1').set('ddolhandling', 'ddrestricted');
model.sol('sol4').feature('s1').feature('i2').feature('dd1').set('userac', false);
model.sol('sol4').feature('s1').feature('i2').feature('dd1').set('usecoarse', 'aggregation');
model.sol('sol4').feature('s1').feature('i2').feature('dd1').feature('ds').create('dp1', 'DirectPreconditioner');
model.sol('sol4').feature('s1').feature('i2').feature('dd1').feature('ds').feature('dp1').set('hybridization', 'multi');
model.sol('sol4').feature('s1').feature('i2').feature('dd1').feature('ds').feature('dp1').set('hybridvar', {'comp1_u2' 'comp1_p2'});
model.sol('sol4').feature('s1').feature('i2').feature('dd1').feature('ds').feature('dp1').set('linsolver', 'pardiso');
model.sol('sol4').feature('s1').feature('i2').feature('dd1').feature('ds').feature('dp1').set('pivotperturb', '1.0E-13');
model.sol('sol4').feature('s1').feature('i2').feature('dd1').feature('ds').create('dp2', 'DirectPreconditioner');
model.sol('sol4').feature('s1').feature('i2').feature('dd1').feature('ds').feature('dp2').set('hybridization', 'multi');
model.sol('sol4').feature('s1').feature('i2').feature('dd1').feature('ds').feature('dp2').set('hybridvar', {'comp1_T'});
model.sol('sol4').feature('s1').feature('i2').feature('dd1').feature('ds').feature('dp2').set('linsolver', 'pardiso');
model.sol('sol4').feature('s1').feature('i2').feature('dd1').feature('ds').feature('dp2').set('pivotperturb', '1.0E-13');
model.sol('sol4').feature('s1').feature('i2').feature('dd1').feature('cs').create('d1', 'Direct');
model.sol('sol4').feature('s1').feature('i2').feature('dd1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol4').feature('s1').feature('i2').feature('dd1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol4').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol4').feature('s1').feature.remove('fcDef');
model.sol('sol4').attach('std3');
model.sol('sol4').feature('s1').feature('i1').active(true);
model.sol('sol4').runAll;

model.physics.create('acpr', 'PressureAcoustics', 'geom1');
model.physics('acpr').model('comp1');

model.study('std1').feature('wdi').setSolveFor('/physics/acpr', false);
model.study('std1').feature('stat').setSolveFor('/physics/acpr', false);
model.study('std2').feature('mapp').setSolveFor('/physics/acpr', false);
model.study('std3').feature('freq').setSolveFor('/physics/acpr', false);

model.physics('acpr').create('nra1', 'NarrowRegionAcousticsModel', 3);
model.physics('acpr').feature('nra1').selection.set([7]);
model.physics('acpr').feature('nra1').set('DuctType', 'CircularDuct');
model.physics('acpr').feature('nra1').set('a', 'Dneck/2');
model.physics('acpr').create('bpf1', 'BackgroundPressureField', 3);
model.physics('acpr').feature('bpf1').selection.set([2]);
model.physics('acpr').feature('bpf1').set('pamp', 1);
model.physics('acpr').feature('bpf1').set('c_mat', 'from_mat');
model.physics('acpr').feature('bpf1').set('dir', [0 0 1]);

model.study.create('std4');
model.study('std4').create('freq', 'Frequency');
model.study('std4').feature('freq').setSolveFor('/physics/spf', false);
model.study('std4').feature('freq').setSolveFor('/physics/lnsf', false);
model.study('std4').feature('freq').setSolveFor('/physics/acpr', true);
model.study('std4').feature('freq').setSolveFor('/multiphysics/bffc1', false);
model.study('std4').feature('freq').set('plist', 'range(50,10,200)');
model.study('std4').setGenPlots(false);
model.study('std4').label('Study 4 - Acoustics, Ma = 0');

model.sol.create('sol5');

model.mesh('mesh2').stat.selection.geom(3);
model.mesh('mesh2').stat.selection.set([2 3 4 5 7 8]);

model.sol('sol5').study('std4');
model.sol('sol5').create('st1', 'StudyStep');
model.sol('sol5').feature('st1').set('study', 'std4');
model.sol('sol5').feature('st1').set('studystep', 'freq');
model.sol('sol5').create('v1', 'Variables');
model.sol('sol5').feature('v1').set('control', 'freq');
model.sol('sol5').create('s1', 'Stationary');
model.sol('sol5').feature('s1').set('stol', 0.001);
model.sol('sol5').feature('s1').create('p1', 'Parametric');
model.sol('sol5').feature('s1').feature.remove('pDef');
model.sol('sol5').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol5').feature('s1').feature('p1').set('plistarr', {'range(50,10,200)'});
model.sol('sol5').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol5').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol5').feature('s1').feature('p1').set('preusesol', 'no');
model.sol('sol5').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol5').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol5').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol5').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol5').feature('s1').feature('p1').set('probes', {});
model.sol('sol5').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol5').feature('s1').set('linpmethod', 'sol');
model.sol('sol5').feature('s1').set('linpsol', 'zero');
model.sol('sol5').feature('s1').set('control', 'freq');
model.sol('sol5').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol5').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol5').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol5').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol5').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol5').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol5').feature('s1').create('d1', 'Direct');
model.sol('sol5').feature('s1').feature('d1').set('linsolver', 'mumps');
model.sol('sol5').feature('s1').feature('d1').label('Suggested Direct Solver (acpr)');
model.sol('sol5').feature('s1').create('i1', 'Iterative');
model.sol('sol5').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol5').feature('s1').feature('i1').label('Suggested Iterative Solver (GMRES with GMG) (acpr)');
model.sol('sol5').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol5').feature('s1').feature('i1').feature('mg1').set('prefun', 'gmg');
model.sol('sol5').feature('s1').create('i2', 'Iterative');
model.sol('sol5').feature('s1').feature('i2').set('linsolver', 'fgmres');
model.sol('sol5').feature('s1').feature('i2').label('Suggested Iterative Solver (FGMRES with GMG) (acpr)');
model.sol('sol5').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol5').feature('s1').feature('i2').feature('mg1').set('prefun', 'gmg');
model.sol('sol5').feature('s1').create('i3', 'Iterative');
model.sol('sol5').feature('s1').feature('i3').set('linsolver', 'gmres');
model.sol('sol5').feature('s1').feature('i3').label('Suggested Iterative Solver (Shifted Laplace) (acpr)');
model.sol('sol5').feature('s1').feature('i3').create('mg1', 'Multigrid');
model.sol('sol5').feature('s1').feature('i3').feature('mg1').set('prefun', 'gmg');
model.sol('sol5').feature('s1').feature('i3').feature('mg1').set('iter', 1);
model.sol('sol5').feature('s1').feature('i3').feature('mg1').set('mcasegen', 'coarse');
model.sol('sol5').feature('s1').feature('i3').feature('mg1').set('scale', '3');
model.sol('sol5').feature('s1').feature('i3').feature('mg1').set('slaplacemain', false);
model.sol('sol5').feature('s1').feature('i3').feature('mg1').set('slaplacemg', true);
model.sol('sol5').feature('s1').feature('i3').feature('mg1').set('addweakcontribslaplacemain', {'spf' 'off' 'lnsf' 'off'});
model.sol('sol5').feature('s1').feature('i3').feature('mg1').set('addweakcontribslaplacemg', {'spf' 'off' 'lnsf' 'off'});
model.sol('sol5').feature('s1').feature('i3').feature('mg1').set('epsslaplacemain', {'acpr' '0.4'});
model.sol('sol5').feature('s1').feature('i3').feature('mg1').set('epsslaplacemg', {'acpr' '0.4'});
model.sol('sol5').feature('s1').create('i4', 'Iterative');
model.sol('sol5').feature('s1').feature('i4').set('linsolver', 'gmres');
model.sol('sol5').feature('s1').feature('i4').label('Suggested Iterative Solver (Domain Decomposition) (acpr)');
model.sol('sol5').feature('s1').feature('i4').create('dd1', 'DomainDecomposition');
model.sol('sol5').feature('s1').feature('i4').feature('dd1').set('prefun', 'ddhyb');
model.sol('sol5').feature('s1').feature('i4').feature('dd1').set('ddolhandling', 'ddrestricted');
model.sol('sol5').feature('s1').feature('i4').feature('dd1').set('dompernodemax', 1);
model.sol('sol5').feature('s1').feature('i4').feature('dd1').set('dompernodemaxactive', 'on');
model.sol('sol5').feature('s1').feature('i4').feature('dd1').set('userac', 'off');
model.sol('sol5').feature('s1').feature('i4').feature('dd1').set('usecoarse', false);
model.sol('sol5').feature('s1').feature('i4').feature('dd1').set('ddboundary', 'absorbing');
model.sol('sol5').feature('s1').feature('i4').feature('dd1').set('slaplacemain', true);
model.sol('sol5').feature('s1').feature('i4').feature('dd1').set('slaplacemg', 'on');
model.sol('sol5').feature('s1').feature('i4').feature('dd1').set('alphaabsorbing', {'acpr' '1'});
model.sol('sol5').feature('s1').feature('i4').feature('dd1').set('betaabsorbing', {'acpr' '0.1'});
model.sol('sol5').feature('s1').feature('i4').feature('dd1').set('sndorderabsorbing', {'acpr' 'on'});
model.sol('sol5').feature('s1').feature('i4').feature('dd1').set('epsslaplacemain', {'acpr' '0.4'});
model.sol('sol5').feature('s1').feature('i4').feature('dd1').set('epsslaplacemg', {'acpr' '0.4'});
model.sol('sol5').feature('s1').feature('i4').feature('dd1').set('iter', 1);
model.sol('sol5').feature('s1').feature('i4').feature('dd1').feature('ds').create('mg1', 'Multigrid');
model.sol('sol5').feature('s1').feature('i4').feature('dd1').feature('ds').feature('mg1').set('slaplacemg', 'on');
model.sol('sol5').feature('s1').feature('i4').feature('dd1').feature('ds').feature('mg1').set('epsslaplacemg', {'acpr' '0.4'});
model.sol('sol5').feature('s1').feature('i4').feature('dd1').feature('ds').feature('mg1').set('iter', 1);
model.sol('sol5').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol5').feature('s1').feature.remove('fcDef');
model.sol('sol5').attach('std4');
model.sol('sol5').runAll;

model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').run;
model.result('pg6').label('Acoustics: Pressure, Ma = 0');
model.result('pg6').set('data', 'dset5');
model.result('pg6').setIndex('looplevel', 11, 0);
model.result('pg6').selection.geom('geom1', 3);
model.result('pg6').selection.geom('geom1', 3);
model.result('pg6').selection.set([3 4 5 7 8]);
model.result('pg6').set('applyselectiontodatasetedges', true);
model.result('pg6').create('surf1', 'Surface');
model.result('pg6').feature('surf1').set('expr', 'acpr.p_t');
model.result('pg6').feature('surf1').set('colortable', 'Wave');
model.result('pg6').feature('surf1').set('colorscalemode', 'linearsymmetric');
model.result('pg6').run;
model.result.create('pg7', 'PlotGroup3D');
model.result('pg7').set('applyselectiontodatasetedges', false);
model.result('pg7').run;
model.result('pg7').label('Acoustics: Pressure, Ma = 0.1');
model.result('pg7').set('data', 'dset4');
model.result('pg7').setIndex('looplevel', 11, 0);
model.result('pg7').selection.geom('geom1', 3);
model.result('pg7').selection.geom('geom1', 3);
model.result('pg7').selection.set([3 4 5 7 8]);
model.result('pg7').set('applyselectiontodatasetedges', true);
model.result('pg7').create('surf1', 'Surface');
model.result('pg7').feature('surf1').set('expr', 'lnsf.p_t');
model.result('pg7').feature('surf1').set('colortable', 'Wave');
model.result('pg7').feature('surf1').set('colorscalemode', 'linearsymmetric');
model.result('pg7').run;
model.result('pg7').run;
model.result('pg7').setIndex('looplevel', 1, 1);
model.result('pg7').run;
model.result('pg7').setIndex('looplevel', 2, 1);
model.result.duplicate('pg8', 'pg7');
model.result('pg8').run;
model.result('pg8').label('Acoustics: Sound Pressure Level, Ma = 0.05');
model.result('pg8').setIndex('looplevel', 1, 1);
model.result('pg8').run;
model.result('pg8').feature('surf1').set('expr', 'lnsf.Lp');
model.result('pg8').feature('surf1').set('colortable', 'Rainbow');
model.result('pg8').feature('surf1').set('colorscalemode', 'linear');
model.result('pg8').feature('surf1').set('resolution', 'finer');
model.result('pg8').run;
model.result.create('pg9', 'PlotGroup1D');
model.result('pg9').run;
model.result('pg9').label('Transmission Loss');
model.result('pg9').set('data', 'none');
model.result('pg9').set('titletype', 'label');
model.result('pg9').set('xlabelactive', true);
model.result('pg9').set('xlabel', 'f (Hz)');
model.result('pg9').set('ylabelactive', true);
model.result('pg9').set('ylabel', 'TL (dB)');
model.result('pg9').set('axislimits', true);
model.result('pg9').set('ymin', 0);
model.result('pg9').set('ymax', 40);
model.result('pg9').set('xmin', 50);
model.result('pg9').set('xmax', 200);
model.result('pg9').create('glob1', 'Global');
model.result('pg9').feature('glob1').set('markerpos', 'datapoints');
model.result('pg9').feature('glob1').set('linewidth', 'preference');
model.result('pg9').feature('glob1').set('data', 'dset5');
model.result('pg9').feature('glob1').setIndex('expr', '20*log10(abs(intop_in(1[Pa])/intop_out(acpr.p_t)))', 0);
model.result('pg9').feature('glob1').setIndex('unit', '', 0);
model.result('pg9').feature('glob1').setIndex('descr', 'Ma = 0', 0);
model.result('pg9').feature('glob1').set('linemarker', 'point');
model.result('pg9').run;
model.result('pg9').create('glob2', 'Global');
model.result('pg9').feature('glob2').set('markerpos', 'datapoints');
model.result('pg9').feature('glob2').set('linewidth', 'preference');
model.result('pg9').feature('glob2').set('data', 'dset4');
model.result('pg9').feature('glob2').setIndex('expr', '20*log10(abs(intop_in(pb)/intop_out(lnsf.p_t)))', 0);
model.result('pg9').feature('glob2').setIndex('unit', '', 0);
model.result('pg9').feature('glob2').setIndex('descr', '', 0);
model.result('pg9').feature('glob2').set('xdatasolnumtype', 'level1');
model.result('pg9').feature('glob2').set('linemarker', 'point');

model.study('std1').feature('wdi').set('useadvanceddisable', true);
model.study('std1').feature('wdi').set('disabledcoordinatesystems', {'pml1'});
model.study('std1').feature('stat').set('useadvanceddisable', true);
model.study('std1').feature('stat').set('disabledcoordinatesystems', {'pml1'});

model.result('pg7').run;

model.title('Helmholtz Resonator with Flow: Interaction of Flow and Acoustics');

model.description(['Helmholtz resonators are used in exhaust systems, as they can attenuate a specific narrow frequency band. The presence of a flow in the system alters the acoustic properties of the resonator and the transmission loss of the subsystem. In this tutorial model, a Helmholtz resonator is located as a side branch to a main duct. The transmission loss through the main duct is investigated when a flow is introduced.' newline  newline 'The mean flow is calculated with the SST turbulence model for Ma = 0.05 and Ma = 0.1. The acoustics problem is then solved using the Linearized Navier' native2unicode(hex2dec({'20' '13'}), 'unicode') 'Stokes, Frequency Domain (LNS) interface. The mean flow velocity, pressure, and turbulent viscosity are coupled to the LNS model. Results are compared to measurements found in a journal paper and the amplitudes and resonance locations show good agreement with the measurement data (as seen in the 1D plot). The balance between attenuation and flow effects needs to be modeled rigorously in order for the resonance location to be correct.']);

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;

model.label('helmholtz_resonator_with_flow.mph');

model.modelNode.label('Components');

out = model;
