function out = model
%
% localized_heat_source.m
%
% Model exported on May 26 2025, 21:29 by COMSOL 6.2.0.339.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Applications/COMSOL62/Multiphysics/applications/Heat_Transfer_Module/Verification_Examples');

model.modelNode.create('comp1', true);

model.geom.create('geom1', 2);
model.geom('geom1').model('comp1');

model.mesh.create('mesh1', 'geom1');

model.physics.create('ht', 'HeatTransfer', 'geom1');
model.physics('ht').model('comp1');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').setSolveFor('/physics/ht', true);

model.param.set('R_disk', '0.1[m]');
model.param.descr('R_disk', 'Disk radius');
model.param.set('R_source', '0.01[m]');
model.param.descr('R_source', 'Source radius');
model.param.set('T0', '300[K]');
model.param.descr('T0', 'Disk boundary temperature');
model.param.set('k_cork', '0.042[W/(m*K)]');
model.param.descr('k_cork', 'Thermal conductivity, cork');
model.param.set('cp_cork', '1.88[kJ/(kg*K)]');
model.param.descr('cp_cork', 'Heat capacity at constant pressure, cork');
model.param.set('rho_cork', '150[kg/m^3]');
model.param.descr('rho_cork', 'Density, cork');
model.param.set('mh', '0.01[m]');
model.param.descr('mh', 'Mesh size parameter');

model.func.create('an1', 'Analytic');
model.func('an1').set('expr', '-1/(2*pi*k_cork)*log(sqrt(x^2+y^2)/R_disk) + T0');
model.func('an1').set('args', 'x,y');
model.func('an1').setIndex('argunit', 'm', 0);
model.func('an1').set('fununit', 'K');
model.func('an1').setIndex('plotargs', '-R_disk', 0, 1);
model.func('an1').setIndex('plotargs', 'R_disk', 0, 2);
model.func('an1').setIndex('plotargs', '-R_disk', 1, 1);
model.func('an1').setIndex('plotargs', 'R_disk', 1, 2);
model.func.create('an2', 'Analytic');
model.func('an2').set('expr', 'if(sqrt(x^2+y^2)>R_source, (-1/(2*pi*k_cork)*log(sqrt(x^2+y^2)/R_disk) + T0), (1/(2*pi*k_cork)*(-(x^2+y^2)/(2*R_source^2)+0.5-log(R_source/R_disk)) + T0))');
model.func('an2').set('args', 'x,y');
model.func('an2').setIndex('plotargs', '-R_disk', 0, 1);
model.func('an2').setIndex('plotargs', 'R_disk', 0, 2);
model.func('an2').setIndex('plotargs', '-R_disk', 1, 1);
model.func('an2').setIndex('plotargs', 'R_disk', 1, 2);
model.func('an2').setIndex('argunit', 'm', 0);
model.func('an2').set('fununit', 'K');

model.geom('geom1').create('c1', 'Circle');
model.geom('geom1').feature('c1').set('r', 'R_disk');
model.geom('geom1').run('c1');
model.geom('geom1').create('pt1', 'Point');
model.geom('geom1').runPre('fin');
model.geom('geom1').run;

model.material.create('mat1', 'Common', 'comp1');
model.material('mat1').label('Cork');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'k_cork'});
model.material('mat1').propertyGroup('def').set('density', {'rho_cork'});
model.material('mat1').propertyGroup('def').set('heatcapacity', {'cp_cork'});

model.physics('ht').create('temp1', 'TemperatureBoundary', 1);
model.physics('ht').feature('temp1').selection.all;
model.physics('ht').feature('temp1').set('T0', 'T0');
model.physics('ht').create('lihs1', 'LineHeatSource', 0);
model.physics('ht').feature('lihs1').selection.set([3]);
model.physics('ht').feature('lihs1').set('heatSourceType', 'HeatRate');
model.physics('ht').feature('lihs1').set('Pl', 1);

model.mesh('mesh1').automatic(false);
model.mesh('mesh1').feature('size').set('hauto', 6);
model.mesh('mesh1').feature('ftri1').create('size1', 'Size');
model.mesh('mesh1').feature('ftri1').feature('size1').selection.geom('geom1', 0);
model.mesh('mesh1').feature('ftri1').feature('size1').selection.set([3]);
model.mesh('mesh1').feature('ftri1').feature('size1').set('hauto', 6);
model.mesh('mesh1').feature('ftri1').feature('size1').set('custom', true);
model.mesh('mesh1').feature('ftri1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 'mh');
model.mesh('mesh1').run;

model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl('intop1').set('axisym', true);
model.cpl('intop1').selection.all;
model.cpl.create('maxop1', 'Maximum', 'geom1');
model.cpl('maxop1').selection.all;

model.study('std1').label('Study 1: Point Source');
model.study('std1').create('param', 'Parametric');
model.study('std1').feature('param').setIndex('pname', 'R_disk', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);
model.study('std1').feature('param').setIndex('pname', 'R_disk', 0);
model.study('std1').feature('param').setIndex('plistarr', '', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);
model.study('std1').feature('param').setIndex('pname', 'mh', 0);
model.study('std1').feature('param').setIndex('plistarr', '10^{range(-6,0.5,-2)}', 0);
model.study('std1').feature('param').setIndex('punit', 'm', 0);

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'stat');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'stat');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('d1').label('Direct, heat transfer variables (ht)');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol1').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol1').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 10000);
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol1').feature('s1').feature('i1').label('AMG, heat transfer variables (ht)');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'mh'});
model.batch('p1').set('plistarr', {'10^{range(-6,0.5,-2)}'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std1');
model.batch('p1').set('control', 'param');

model.sol.create('sol2');
model.sol('sol2').study('std1');
model.sol('sol2').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').run('compute');

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').label('Temperature (ht)');
model.result('pg1').set('data', 'dset2');
model.result('pg1').setIndex('looplevel', 9, 0);
model.result('pg1').set('data', 'dset2');
model.result('pg1').setIndex('looplevel', 9, 0);
model.result('pg1').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pg2');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('solutionparams', 'parent');
model.result('pg1').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result('pg1').run;
model.result('pg1').label('Temperature - Study 1');
model.result('pg1').setIndex('looplevel', 7, 0);
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('surf1').set('expr', 'T-T0');
model.result('pg1').feature('surf1').create('hght1', 'Height');
model.result('pg1').run;
model.result('pg1').run;
model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').run;
model.result('pg2').label('L2 Error from Analytical Solution - Study 1');
model.result('pg2').set('data', 'dset2');
model.result('pg2').create('lngr1', 'LineGraph');
model.result('pg2').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg2').feature('lngr1').set('linewidth', 'preference');
model.result('pg2').feature('lngr1').selection.all;
model.result('pg2').feature('lngr1').set('expr', 'sqrt(intop1((T-an1(x,y))^2))/sqrt(intop1((T-T0)^2))');
model.result('pg2').feature('lngr1').set('xdata', 'expr');
model.result('pg2').feature('lngr1').set('xdataexpr', '1/mh');
model.result('pg2').feature('lngr1').set('linecolor', 'blue');
model.result('pg2').feature('lngr1').set('linewidth', 5);
model.result('pg2').run;
model.result('pg2').set('xlog', true);
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').label('Maximum Temperature - Study 1');
model.result('pg3').set('data', 'dset2');
model.result('pg3').create('lngr1', 'LineGraph');
model.result('pg3').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg3').feature('lngr1').set('linewidth', 'preference');
model.result('pg3').feature('lngr1').selection.all;
model.result('pg3').feature('lngr1').set('expr', 'maxop1(T)');
model.result('pg3').feature('lngr1').set('xdata', 'expr');
model.result('pg3').feature('lngr1').set('xdataexpr', '1/mh');
model.result('pg3').feature('lngr1').set('linecolor', 'blue');
model.result('pg3').feature('lngr1').set('linewidth', 5);
model.result('pg3').run;
model.result('pg3').set('xlog', true);

model.physics('ht').create('lihs2', 'LineHeatSource', 0);
model.physics('ht').feature('lihs2').selection.set([3]);
model.physics('ht').feature('lihs2').set('heatSourceType', 'HeatRate');
model.physics('ht').feature('lihs2').set('Pl', 1);
model.physics('ht').feature('lihs2').set('specifyHeatSourceRadius', true);
model.physics('ht').feature('lihs2').set('radius', 'R_source');

model.study('std1').feature('stat').set('useadvanceddisable', true);
model.study('std1').feature('stat').set('disabledphysics', {'ht/lihs2'});
model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/ht', true);
model.study('std2').feature('stat').set('useadvanceddisable', true);
model.study('std2').feature('stat').set('disabledphysics', {'ht/lihs1'});
model.study('std2').label('Study 2: Point Source with Radius');
model.study('std2').create('param', 'Parametric');
model.study('std2').feature('param').setIndex('pname', 'R_disk', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', 'm', 0);
model.study('std2').feature('param').setIndex('pname', 'R_disk', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', 'm', 0);
model.study('std2').feature('param').setIndex('pname', 'mh', 0);
model.study('std2').feature('param').setIndex('plistarr', '10^{range(-6,0.5,-2)}', 0);
model.study('std2').feature('param').setIndex('punit', 'm', 0);

model.sol.create('sol12');
model.sol('sol12').study('std2');
model.sol('sol12').create('st1', 'StudyStep');
model.sol('sol12').feature('st1').set('study', 'std2');
model.sol('sol12').feature('st1').set('studystep', 'stat');
model.sol('sol12').create('v1', 'Variables');
model.sol('sol12').feature('v1').set('control', 'stat');
model.sol('sol12').create('s1', 'Stationary');
model.sol('sol12').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol12').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol12').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol12').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol12').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol12').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol12').feature('s1').create('d1', 'Direct');
model.sol('sol12').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol12').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol12').feature('s1').feature('d1').label('Direct, heat transfer variables (ht)');
model.sol('sol12').feature('s1').create('i1', 'Iterative');
model.sol('sol12').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol12').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol12').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol12').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol12').feature('s1').feature('i1').set('maxlinit', 10000);
model.sol('sol12').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol12').feature('s1').feature('i1').label('AMG, heat transfer variables (ht)');
model.sol('sol12').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol12').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol12').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol12').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol12').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol12').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol12').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol12').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol12').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol12').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol12').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol12').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol12').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol12').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol12').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol12').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol12').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol12').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol12').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol12').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol12').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol12').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol12').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol12').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol12').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol12').feature('s1').feature.remove('fcDef');
model.sol('sol12').attach('std2');

model.batch.create('p2', 'Parametric');
model.batch('p2').study('std2');
model.batch('p2').create('so1', 'Solutionseq');
model.batch('p2').feature('so1').set('seq', 'sol12');
model.batch('p2').feature('so1').set('store', 'on');
model.batch('p2').feature('so1').set('clear', 'on');
model.batch('p2').feature('so1').set('psol', 'none');
model.batch('p2').set('pname', {'mh'});
model.batch('p2').set('plistarr', {'10^{range(-6,0.5,-2)}'});
model.batch('p2').set('sweeptype', 'sparse');
model.batch('p2').set('probesel', 'all');
model.batch('p2').set('probes', {});
model.batch('p2').set('plot', 'off');
model.batch('p2').set('err', 'on');
model.batch('p2').attach('std2');
model.batch('p2').set('control', 'param');

model.sol.create('sol13');
model.sol('sol13').study('std2');
model.sol('sol13').label('Parametric Solutions 2');

model.batch('p2').feature('so1').set('psol', 'sol13');
model.batch('p2').run('compute');

model.result.create('pg4', 'PlotGroup2D');
model.result('pg4').label('Temperature (ht)');
model.result('pg4').set('data', 'dset4');
model.result('pg4').setIndex('looplevel', 9, 0);
model.result('pg4').set('data', 'dset4');
model.result('pg4').setIndex('looplevel', 9, 0);
model.result('pg4').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pg2');
model.result('pg4').feature.create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('showsolutionparams', 'on');
model.result('pg4').feature('surf1').set('solutionparams', 'parent');
model.result('pg4').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg4').feature('surf1').set('showsolutionparams', 'on');
model.result('pg4').feature('surf1').set('data', 'parent');
model.result('pg4').run;
model.result('pg4').label('Temperature - Study 2');
model.result('pg4').setIndex('looplevel', 7, 0);
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').feature('surf1').set('expr', 'T-T0');
model.result('pg4').feature('surf1').create('hght1', 'Height');
model.result('pg4').run;
model.result('pg4').run;
model.result.dataset.create('cln1', 'CutLine2D');
model.result.dataset('cln1').set('data', 'dset4');
model.result.dataset('cln1').setIndex('genpoints', 'R_disk', 1, 0);
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').label('Analytical Solutions, Point Source with/without Radius');
model.result('pg5').set('data', 'cln1');
model.result('pg5').setIndex('looplevelinput', 'first', 0);
model.result('pg5').set('titletype', 'manual');
model.result('pg5').set('title', 'Temperature comparison with different point sources');
model.result('pg5').set('ylabelactive', true);
model.result('pg5').set('ylabel', 'Temperature (K)');
model.result('pg5').create('lngr1', 'LineGraph');
model.result('pg5').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg5').feature('lngr1').set('linewidth', 'preference');
model.result('pg5').feature('lngr1').set('expr', 'an1(x,y)');
model.result('pg5').feature('lngr1').set('linewidth', 3);
model.result('pg5').feature('lngr1').set('legend', true);
model.result('pg5').feature('lngr1').set('legendmethod', 'manual');
model.result('pg5').feature('lngr1').setIndex('legends', 'Without specified radius', 0);
model.result('pg5').run;
model.result('pg5').create('lngr2', 'LineGraph');
model.result('pg5').feature('lngr2').set('markerpos', 'datapoints');
model.result('pg5').feature('lngr2').set('linewidth', 'preference');
model.result('pg5').feature('lngr2').set('expr', 'an2(x,y)');
model.result('pg5').feature('lngr2').set('linewidth', 3);
model.result('pg5').feature('lngr2').set('titletype', 'none');
model.result('pg5').feature('lngr2').set('legend', true);
model.result('pg5').feature('lngr2').set('legendmethod', 'manual');
model.result('pg5').feature('lngr2').setIndex('legends', 'With specified radius', 0);
model.result('pg5').run;
model.result.create('pg6', 'PlotGroup1D');
model.result('pg6').run;
model.result('pg6').label('Temperature vs. Radius - Study 2');
model.result('pg6').set('data', 'cln1');
model.result('pg6').setIndex('looplevelinput', 'last', 0);
model.result('pg6').create('lngr1', 'LineGraph');
model.result('pg6').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg6').feature('lngr1').set('linewidth', 'preference');
model.result('pg6').feature('lngr1').set('linestyle', 'none');
model.result('pg6').feature('lngr1').set('linemarker', 'circle');
model.result('pg6').feature('lngr1').set('markerpos', 'interp');
model.result('pg6').feature('lngr1').set('markers', 25);
model.result('pg6').feature('lngr1').set('legend', true);
model.result('pg6').feature('lngr1').set('legendmethod', 'manual');
model.result('pg6').feature('lngr1').setIndex('legends', 'Numerical, mh = 0.01', 0);
model.result('pg6').run;
model.result('pg6').create('lngr2', 'LineGraph');
model.result('pg6').feature('lngr2').set('markerpos', 'datapoints');
model.result('pg6').feature('lngr2').set('linewidth', 'preference');
model.result('pg6').feature('lngr2').set('expr', 'an2(x,y)');
model.result('pg6').feature('lngr2').set('linewidth', 3);
model.result('pg6').feature('lngr2').set('legend', true);
model.result('pg6').feature('lngr2').set('legendmethod', 'manual');
model.result('pg6').feature('lngr2').setIndex('legends', 'Analytical', 0);
model.result('pg6').run;
model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').run;
model.result('pg7').label('L2 Error from Analytical Solution - Study 2');
model.result('pg7').set('data', 'dset4');
model.result('pg7').create('lngr1', 'LineGraph');
model.result('pg7').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg7').feature('lngr1').set('linewidth', 'preference');
model.result('pg7').feature('lngr1').selection.all;
model.result('pg7').feature('lngr1').set('expr', 'sqrt(intop1((T-an2(x,y))^2))/sqrt(intop1((T-T0)^2))');
model.result('pg7').feature('lngr1').set('xdata', 'expr');
model.result('pg7').feature('lngr1').set('xdataexpr', '1/mh');
model.result('pg7').feature('lngr1').set('linecolor', 'blue');
model.result('pg7').feature('lngr1').set('linewidth', 5);
model.result('pg7').run;
model.result('pg7').set('xlog', true);
model.result.dataset.create('cln2', 'CutLine2D');
model.result.dataset('cln2').set('data', 'dset2');
model.result.dataset('cln2').setIndex('genpoints', 'R_disk', 1, 0);
model.result.create('pg8', 'PlotGroup1D');
model.result('pg8').run;
model.result('pg8').label('L1 Error from Analytical Solutions - Study 1 and Study 2');
model.result('pg8').set('data', 'cln2');
model.result('pg8').setIndex('looplevelinput', 'last', 0);
model.result('pg8').create('lngr1', 'LineGraph');
model.result('pg8').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg8').feature('lngr1').set('linewidth', 'preference');
model.result('pg8').feature('lngr1').set('expr', 'abs(T-an2(x,y))');
model.result('pg8').feature('lngr1').set('linewidth', 3);
model.result('pg8').feature('lngr1').set('legend', true);
model.result('pg8').feature('lngr1').set('legendmethod', 'manual');
model.result('pg8').feature('lngr1').setIndex('legends', 'Point source without specified radius', 0);
model.result('pg8').run;
model.result('pg8').create('lngr2', 'LineGraph');
model.result('pg8').feature('lngr2').set('markerpos', 'datapoints');
model.result('pg8').feature('lngr2').set('linewidth', 'preference');
model.result('pg8').feature('lngr2').set('data', 'cln1');
model.result('pg8').feature('lngr2').setIndex('looplevelinput', 'last', 0);
model.result('pg8').feature('lngr2').set('expr', 'abs(T-an2(x,y))');
model.result('pg8').feature('lngr2').set('titletype', 'none');
model.result('pg8').feature('lngr2').set('linewidth', 3);
model.result('pg8').feature('lngr2').set('legend', true);
model.result('pg8').feature('lngr2').set('legendmethod', 'manual');
model.result('pg8').feature('lngr2').setIndex('legends', 'Point source with specified radius', 0);
model.result('pg8').run;

model.mesh.create('mesh2', 'geom1');
model.mesh('mesh2').automatic(false);
model.mesh('mesh2').feature('size').set('custom', true);
model.mesh('mesh2').feature('size').set('hmax', 'mh');
model.mesh('mesh2').feature('size').set('hmin', 'mh');
model.mesh('mesh2').run;

model.study.create('std3');
model.study('std3').create('stat', 'Stationary');
model.study('std3').feature('stat').setSolveFor('/physics/ht', true);
model.study('std3').feature('stat').set('useadvanceddisable', true);
model.study('std3').feature('stat').set('disabledphysics', {'ht/lihs1'});
model.study('std3').label('Study 3: Point Source with Radius, Coarse Mesh');
model.study('std3').create('param', 'Parametric');
model.study('std3').feature('param').setIndex('pname', 'R_disk', 0);
model.study('std3').feature('param').setIndex('plistarr', '', 0);
model.study('std3').feature('param').setIndex('punit', 'm', 0);
model.study('std3').feature('param').setIndex('pname', 'R_disk', 0);
model.study('std3').feature('param').setIndex('plistarr', '', 0);
model.study('std3').feature('param').setIndex('punit', 'm', 0);
model.study('std3').feature('param').setIndex('pname', 'mh', 0);
model.study('std3').feature('param').setIndex('plistarr', 'range(0.01,0.012,0.06)', 0);
model.study('std3').feature('param').setIndex('punit', 'm', 0);

model.sol.create('sol23');
model.sol('sol23').study('std3');
model.sol('sol23').create('st1', 'StudyStep');
model.sol('sol23').feature('st1').set('study', 'std3');
model.sol('sol23').feature('st1').set('studystep', 'stat');
model.sol('sol23').create('v1', 'Variables');
model.sol('sol23').feature('v1').set('control', 'stat');
model.sol('sol23').create('s1', 'Stationary');
model.sol('sol23').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol23').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol23').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol23').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol23').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol23').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol23').feature('s1').create('d1', 'Direct');
model.sol('sol23').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol23').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol23').feature('s1').feature('d1').label('Direct, heat transfer variables (ht)');
model.sol('sol23').feature('s1').create('i1', 'Iterative');
model.sol('sol23').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol23').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol23').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol23').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol23').feature('s1').feature('i1').set('maxlinit', 10000);
model.sol('sol23').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol23').feature('s1').feature('i1').label('AMG, heat transfer variables (ht)');
model.sol('sol23').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol23').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol23').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol23').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol23').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol23').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol23').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol23').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol23').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol23').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol23').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol23').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol23').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol23').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol23').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol23').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol23').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol23').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol23').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol23').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol23').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol23').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol23').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol23').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol23').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol23').feature('s1').feature.remove('fcDef');
model.sol('sol23').attach('std3');

model.batch.create('p3', 'Parametric');
model.batch('p3').study('std3');
model.batch('p3').create('so1', 'Solutionseq');
model.batch('p3').feature('so1').set('seq', 'sol23');
model.batch('p3').feature('so1').set('store', 'on');
model.batch('p3').feature('so1').set('clear', 'on');
model.batch('p3').feature('so1').set('psol', 'none');
model.batch('p3').set('pname', {'mh'});
model.batch('p3').set('plistarr', {'range(0.01,0.012,0.06)'});
model.batch('p3').set('sweeptype', 'sparse');
model.batch('p3').set('probesel', 'all');
model.batch('p3').set('probes', {});
model.batch('p3').set('plot', 'off');
model.batch('p3').set('err', 'on');
model.batch('p3').attach('std3');
model.batch('p3').set('control', 'param');

model.sol.create('sol24');
model.sol('sol24').study('std3');
model.sol('sol24').label('Parametric Solutions 3');

model.batch('p3').feature('so1').set('psol', 'sol24');
model.batch('p3').run('compute');

model.result.create('pg9', 'PlotGroup2D');
model.result('pg9').label('Temperature (ht)');
model.result('pg9').set('data', 'dset6');
model.result('pg9').setIndex('looplevel', 5, 0);
model.result('pg9').set('data', 'dset6');
model.result('pg9').setIndex('looplevel', 5, 0);
model.result('pg9').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pg2');
model.result('pg9').feature.create('surf1', 'Surface');
model.result('pg9').feature('surf1').set('showsolutionparams', 'on');
model.result('pg9').feature('surf1').set('solutionparams', 'parent');
model.result('pg9').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg9').feature('surf1').set('showsolutionparams', 'on');
model.result('pg9').feature('surf1').set('data', 'parent');
model.result('pg9').run;
model.result('pg9').label('Mesh Resolution - Study 3');
model.result('pg9').run;
model.result('pg9').feature('surf1').set('coloring', 'uniform');
model.result('pg9').feature('surf1').set('wireframe', true);
model.result('pg9').run;
model.result('pg9').create('con1', 'Contour');
model.result('pg9').feature('con1').set('expr', 'sqrt(x^2+y^2)');
model.result('pg9').feature('con1').set('levelmethod', 'levels');
model.result('pg9').feature('con1').set('levels', 'R_source');
model.result('pg9').feature('con1').set('contourtype', 'tubes');
model.result('pg9').feature('con1').set('coloring', 'uniform');
model.result('pg9').feature('con1').set('color', 'blue');
model.result('pg9').feature('con1').set('colorlegend', false);
model.result('pg9').run;
model.result('pg9').run;
model.result('pg9').setIndex('looplevel', 1, 0);
model.result('pg9').run;
model.result.create('pg10', 'PlotGroup1D');
model.result('pg10').run;
model.result('pg10').label('L2 Error from Analytical Solution - Study 3');
model.result('pg10').set('data', 'dset6');
model.result('pg10').create('lngr1', 'LineGraph');
model.result('pg10').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg10').feature('lngr1').set('linewidth', 'preference');
model.result('pg10').feature('lngr1').selection.all;
model.result('pg10').feature('lngr1').set('expr', 'sqrt(intop1((T-an2(x,y))^2))/sqrt(intop1((T-T0)^2))');
model.result('pg10').feature('lngr1').set('xdata', 'expr');
model.result('pg10').feature('lngr1').set('xdataexpr', '1/mh');
model.result('pg10').feature('lngr1').set('linecolor', 'blue');
model.result('pg10').feature('lngr1').set('linewidth', 5);
model.result('pg10').run;

model.modelNode.create('comp2', true);

model.geom.create('geom2', 2);
model.geom('geom2').model('comp2');

model.mesh.create('mesh3', 'geom2');

model.geom('geom2').create('imp1', 'Import');
model.geom('geom2').feature('imp1').set('type', 'sequence');
model.geom('geom2').feature('imp1').set('sequence', 'geom1');
model.geom('geom2').feature('imp1').importData;
model.geom('geom2').create('c1', 'Circle');
model.geom('geom2').feature('c1').set('r', 'R_source');
model.geom('geom2').runPre('fin');

model.physics.create('ht2', 'HeatTransfer', 'geom2');
model.physics('ht2').model('comp2');

model.study('std1').feature('stat').setSolveFor('/physics/ht2', false);
model.study('std2').feature('stat').setSolveFor('/physics/ht2', false);
model.study('std3').feature('stat').setSolveFor('/physics/ht2', false);

model.geom('geom2').run;

model.physics('ht2').create('temp1', 'TemperatureBoundary', 1);
model.physics('ht2').feature('temp1').selection.set([1 2 5 8]);
model.physics('ht2').feature('temp1').set('T0', 'T0');
model.physics('ht2').create('hs1', 'HeatSource', 2);
model.physics('ht2').feature('hs1').selection.set([2]);
model.physics('ht2').feature('hs1').set('heatSourceType', 'HeatRate');
model.physics('ht2').feature('hs1').set('P0', 1);

model.material.create('mat2', 'Common', 'comp2');
model.material('mat2').label('Cork');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'k_cork'});
model.material('mat2').propertyGroup('def').set('density', {'rho_cork'});
model.material('mat2').propertyGroup('def').set('heatcapacity', {'cp_cork'});

model.mesh('mesh3').run;

model.study.create('std4');
model.study('std4').create('stat', 'Stationary');
model.study('std4').feature('stat').setSolveFor('/physics/ht', false);
model.study('std4').feature('stat').setSolveFor('/physics/ht2', true);
model.study('std4').label('Study 4: Surface Source');

model.sol.create('sol30');
model.sol('sol30').study('std4');
model.sol('sol30').create('st1', 'StudyStep');
model.sol('sol30').feature('st1').set('study', 'std4');
model.sol('sol30').feature('st1').set('studystep', 'stat');
model.sol('sol30').create('v1', 'Variables');
model.sol('sol30').feature('v1').set('control', 'stat');
model.sol('sol30').create('s1', 'Stationary');
model.sol('sol30').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol30').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol30').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol30').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol30').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol30').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol30').feature('s1').create('d1', 'Direct');
model.sol('sol30').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol30').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol30').feature('s1').feature('d1').label('Direct, heat transfer variables (ht2)');
model.sol('sol30').feature('s1').create('i1', 'Iterative');
model.sol('sol30').feature('s1').feature('i1').set('linsolver', 'gmres');
model.sol('sol30').feature('s1').feature('i1').set('prefuntype', 'left');
model.sol('sol30').feature('s1').feature('i1').set('itrestart', 50);
model.sol('sol30').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol30').feature('s1').feature('i1').set('maxlinit', 10000);
model.sol('sol30').feature('s1').feature('i1').set('nlinnormuse', 'on');
model.sol('sol30').feature('s1').feature('i1').label('AMG, heat transfer variables (ht2)');
model.sol('sol30').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol30').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol30').feature('s1').feature('i1').feature('mg1').set('mgcycle', 'v');
model.sol('sol30').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol30').feature('s1').feature('i1').feature('mg1').set('strconn', 0.01);
model.sol('sol30').feature('s1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol30').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol30').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol30').feature('s1').feature('i1').feature('mg1').set('loweramg', true);
model.sol('sol30').feature('s1').feature('i1').feature('mg1').set('compactaggregation', false);
model.sol('sol30').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol30').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('iter', 2);
model.sol('sol30').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol30').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol30').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('iter', 2);
model.sol('sol30').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol30').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol30').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol30').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol30').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol30').feature('s1').feature('fc1').set('dtech', 'auto');
model.sol('sol30').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol30').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol30').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol30').feature('s1').feature('fc1').set('termonres', 'off');
model.sol('sol30').feature('s1').feature.remove('fcDef');
model.sol('sol30').attach('std4');
model.sol('sol30').runAll;

model.result.create('pg11', 'PlotGroup2D');
model.result('pg11').label('Temperature (ht2)');
model.result('pg11').set('data', 'dset8');
model.result('pg11').set('defaultPlotID', 'ht/HT_PhysicsInterfaces/icom8/pdef1/pcond2/pcond4/pg2');
model.result('pg11').feature.create('surf1', 'Surface');
model.result('pg11').feature('surf1').set('showsolutionparams', 'on');
model.result('pg11').feature('surf1').set('solutionparams', 'parent');
model.result('pg11').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg11').feature('surf1').set('showsolutionparams', 'on');
model.result('pg11').feature('surf1').set('data', 'parent');
model.result('pg11').run;
model.result('pg11').label('Temperature - Study 4');
model.result.dataset.create('cln3', 'CutLine2D');
model.result.dataset('cln3').set('data', 'dset8');
model.result.dataset('cln3').setIndex('genpoints', 'R_disk', 1, 0);
model.result.create('pg12', 'PlotGroup1D');
model.result('pg12').run;
model.result('pg12').label('Temperature vs. Radius - Study 4');
model.result('pg12').set('data', 'cln3');
model.result('pg12').create('lngr1', 'LineGraph');
model.result('pg12').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg12').feature('lngr1').set('linewidth', 'preference');
model.result('pg12').feature('lngr1').set('linestyle', 'none');
model.result('pg12').feature('lngr1').set('linemarker', 'cycle');
model.result('pg12').feature('lngr1').set('markerpos', 'interp');
model.result('pg12').feature('lngr1').set('markers', 25);
model.result('pg12').feature('lngr1').set('legend', true);
model.result('pg12').feature('lngr1').set('legendmethod', 'manual');
model.result('pg12').feature('lngr1').setIndex('legends', 'Numerical', 0);
model.result('pg12').run;
model.result('pg12').create('lngr2', 'LineGraph');
model.result('pg12').feature('lngr2').set('markerpos', 'datapoints');
model.result('pg12').feature('lngr2').set('linewidth', 'preference');
model.result('pg12').feature('lngr2').set('expr', 'an2(x,y)');
model.result('pg12').feature('lngr2').set('linewidth', 3);
model.result('pg12').feature('lngr2').set('legend', true);
model.result('pg12').feature('lngr2').set('legendmethod', 'manual');
model.result('pg12').feature('lngr2').setIndex('legends', 'Analytical', 0);
model.result('pg12').run;

model.title('Heat Conduction with a Localized Heat Source on a Disk');

model.description('This conductive heat transfer example shows how to define a heat source localized on a small domain using the Heat Transfer interface. The accuracy and the numerical cost of the different features to model the heat source are compared. The results bring guidelines to select the suitable option depending on the ratio between the source and surrounding geometry typical sizes.');

model.mesh.clearMeshes;

model.sol('sol1').clearSolutionData;
model.sol('sol2').clearSolutionData;
model.sol('sol3').clearSolutionData;
model.sol('sol4').clearSolutionData;
model.sol('sol5').clearSolutionData;
model.sol('sol6').clearSolutionData;
model.sol('sol7').clearSolutionData;
model.sol('sol8').clearSolutionData;
model.sol('sol9').clearSolutionData;
model.sol('sol10').clearSolutionData;
model.sol('sol11').clearSolutionData;
model.sol('sol12').clearSolutionData;
model.sol('sol13').clearSolutionData;
model.sol('sol14').clearSolutionData;
model.sol('sol15').clearSolutionData;
model.sol('sol16').clearSolutionData;
model.sol('sol17').clearSolutionData;
model.sol('sol18').clearSolutionData;
model.sol('sol19').clearSolutionData;
model.sol('sol20').clearSolutionData;
model.sol('sol21').clearSolutionData;
model.sol('sol22').clearSolutionData;
model.sol('sol23').clearSolutionData;
model.sol('sol24').clearSolutionData;
model.sol('sol25').clearSolutionData;
model.sol('sol26').clearSolutionData;
model.sol('sol27').clearSolutionData;
model.sol('sol28').clearSolutionData;
model.sol('sol29').clearSolutionData;
model.sol('sol30').clearSolutionData;

model.label('localized_heat_source.mph');

model.modelNode.label('Components');

out = model;
