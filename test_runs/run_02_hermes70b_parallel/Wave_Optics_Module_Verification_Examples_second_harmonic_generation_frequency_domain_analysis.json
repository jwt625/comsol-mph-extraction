{
  "model_name": "Wave_Optics_Module_Verification_Examples_second_harmonic_generation_frequency_domain",
  "metadata": {
    "apiClass": "Model",
    "author": "COMSOL",
    "created": "1696094761625",
    "description": "This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).",
    "displayLabel": "second_harmonic_generation_frequency_domain.mph",
    "icon": "comsol_modelroot.png",
    "keyword": [
      "verification"
    ],
    "label": "second_harmonic_generation_frequency_domain.mph",
    "language": "en_US",
    "lastComputationDate": "1696094728587",
    "lastComputationTime": "3653",
    "lastComputationVersion": "COMSOL 6.2.0.259",
    "lastModified": "1696094761632",
    "lastModifiedBy": "COMSOL",
    "modelEntityPath": "/",
    "name": "root",
    "nodes": [
      {
        "apiClass": "NonEntity",
        "icon": "global_branch.png",
        "label": "Global Definitions",
        "nodes": [
          {
            "apiClass": "ModelParamGroup",
            "author": "COMSOL",
            "created": "1696094700097",
            "displayLabel": "Parameters 1",
            "icon": "parameter.png",
            "label": "Parameters 1",
            "lastModified": "0",
            "lastModifiedBy": "COMSOL",
            "modelEntityPath": "/param/group/default",
            "settings": [
              {
                "description": "Fundamental wavelength",
                "name": "lambda1",
                "scalarImag": "0.0",
                "scalarReal": "1.064E-6",
                "value": "1.064[um]"
              },
              {
                "description": "Fundamental frequency",
                "name": "f1",
                "scalarImag": "0.0",
                "scalarReal": "2.817598289473684E14",
                "value": "c_const/lambda1"
              },
              {
                "description": "Second harmonic frequency",
                "name": "f2",
                "scalarImag": "0.0",
                "scalarReal": "5.635196578947368E14",
                "value": "2*f1"
              },
              {
                "description": "Second harmonic wavelength",
                "name": "lambda2",
                "scalarImag": "0.0",
                "scalarReal": "5.32E-7",
                "value": "c_const/f2"
              },
              {
                "description": "Simulation length",
                "name": "sim_l",
                "scalarImag": "0.0",
                "scalarReal": "2.6600000000000003E-5",
                "value": "lambda1*25"
              },
              {
                "description": "Simulation height",
                "name": "sim_h",
                "scalarImag": "0.0",
                "scalarReal": "3.325E-8",
                "value": "lambda2/16"
              },
              {
                "description": "Nonlinear coefficient",
                "name": "d",
                "scalarImag": "0.0",
                "scalarReal": "1.0E-18",
                "value": "1e-18[C/V^2]"
              },
              {
                "description": "Length of nonlinear region",
                "name": "L",
                "scalarImag": "0.0",
                "scalarReal": "2.3408000000000004E-5",
                "value": "sim_l - 3*lambda1"
              },
              {
                "description": "Incident fundamental intensity",
                "name": "I1",
                "scalarImag": "0.0",
                "scalarReal": "3.0E7",
                "value": "30[MW/m^2]"
              },
              {
                "description": "Incident fundamental electric field strength",
                "name": "E1",
                "scalarImag": "0.0",
                "scalarReal": "150345.6644240112",
                "value": "sqrt(2*I1/c_const/epsilon0_const)"
              },
              {
                "description": "Start of nonlinear region",
                "name": "offset",
                "scalarImag": "0.0",
                "scalarReal": "1.596E-6",
                "value": "1.5*lambda1"
              }
            ],
            "tag": "default",
            "type": "Parameters",
            "windowType": 1
          },
          {
            "apiClass": "CommonFeature",
            "apiType": "CommonInputDefault",
            "author": "COMSOL",
            "created": "1696094700107",
            "displayLabel": "Default Model Inputs",
            "icon": "commonmodelinput.png",
            "label": "Default Model Inputs",
            "lastModified": "0",
            "lastModifiedBy": "COMSOL",
            "modelEntityPath": "/common/cminpt",
            "settings": [
              {
                "description": "Model input",
                "name": "quantity"
              }
            ],
            "tag": "cminpt",
            "type": "Default_model_inputs",
            "windowType": 1
          },
          {
            "apiClass": "MaterialList",
            "author": "COMSOL",
            "created": "1696094700107",
            "displayLabel": "Materials",
            "icon": "global_materials.png",
            "label": "Materials",
            "lastModified": "0",
            "lastModifiedBy": "COMSOL",
            "modelEntityPath": "/material",
            "tag": "material",
            "type": "Materials",
            "windowType": 1
          }
        ],
        "tag": "nonEntity1",
        "windowType": 1
      },
      {
        "apiClass": "ModelNode",
        "author": "COMSOL",
        "axisymmetric": false,
        "created": "1696094700213",
        "displayLabel": "Component 1",
        "icon": "model_2d.png",
        "label": "Component 1",
        "lastModified": "0",
        "lastModifiedBy": "COMSOL",
        "modelEntityPath": "/modelNode/comp1",
        "name": "comp1",
        "nodes": [
          {
            "apiClass": "NonEntity",
            "icon": "definitions.png",
            "label": "Definitions",
            "nodes": [
              {
                "apiClass": "Expr",
                "author": "COMSOL",
                "created": "1696094719586",
                "displayLabel": "Variables 1",
                "icon": "expression.png",
                "label": "Variables 1",
                "lastModified": "0",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/expr/var1",
                "settings": [
                  {
                    "description": "Coupling coefficient",
                    "name": "gamma",
                    "value": "sqrt(8*d^2*Z0_const^3*(2*pi*ewfd1.freq)^2*I1)"
                  }
                ],
                "tag": "var1",
                "type": "Variables",
                "windowType": 1
              },
              {
                "apiClass": "Coordsys",
                "apiType": "Boundary",
                "author": "COMSOL",
                "created": "1696094700214",
                "displayLabel": "Boundary System 1",
                "icon": "coordsys_boundary_coordinate.png",
                "label": "Boundary System 1",
                "lastModified": "0",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/coordsys/sys1",
                "name": "sys1",
                "settings": [
                  {
                    "description": "Name",
                    "name": "name",
                    "value": "sys1"
                  },
                  {
                    "apiValue": "spatial",
                    "description": "Frame",
                    "name": "frametype",
                    "value": "Deformed configuration"
                  },
                  {
                    "apiValue": "off",
                    "description": "Reverse normal direction",
                    "name": "reversenormal",
                    "value": "false"
                  },
                  {
                    "apiValue": "3",
                    "description": "Axis",
                    "name": "mastercoordsystcomp",
                    "value": "z"
                  },
                  {
                    "apiValue": "globalCartesianSpatial",
                    "description": "Create first tangent direction from",
                    "name": "mastersystem",
                    "value": "Global Cartesian (spatial)"
                  }
                ],
                "tag": "sys1",
                "type": "Boundary_system",
                "windowType": 1
              },
              {
                "apiClass": "View",
                "apiType": "ModelView2D",
                "author": "COMSOL",
                "created": "1696094700222",
                "displayLabel": "View 1",
                "icon": "view2d.png",
                "label": "View 1",
                "lastModified": "0",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/view/view1",
                "nodes": [
                  {
                    "apiClass": "ViewFeature",
                    "apiType": "Axis2D",
                    "author": "COMSOL",
                    "created": "1696094700222",
                    "displayLabel": "Axis",
                    "icon": "view_axis.png",
                    "label": "Axis",
                    "lastModified": "1696094761629",
                    "lastModifiedBy": "COMSOL",
                    "modelEntityPath": "/view/view1/axis",
                    "settings": [
                      {
                        "description": "x minimum",
                        "name": "xmin",
                        "scalarReal": "-1.3299995771376416E-6",
                        "value": "-1.3299995771376416E-6"
                      },
                      {
                        "description": "x maximum",
                        "name": "xmax",
                        "scalarReal": "2.7930002033826895E-5",
                        "value": "2.7930002033826895E-5"
                      },
                      {
                        "description": "y minimum",
                        "name": "ymin",
                        "scalarReal": "-1.6625012477788914E-9",
                        "value": "-1.6625012477788914E-9"
                      },
                      {
                        "description": "y maximum",
                        "name": "ymax",
                        "scalarReal": "3.491250311071781E-8",
                        "value": "3.491250311071781E-8"
                      },
                      {
                        "apiValue": "automatic",
                        "description": "View scale",
                        "name": "viewscaletype",
                        "value": "Automatic"
                      },
                      {
                        "apiValue": "autofit",
                        "description": "Automatic",
                        "name": "autocontext",
                        "value": "Autofit"
                      },
                      {
                        "apiValue": "off",
                        "description": "Manual spacing",
                        "name": "manualgrid",
                        "value": "false"
                      }
                    ],
                    "tag": "axis",
                    "type": "Axis",
                    "windowType": 1
                  }
                ],
                "settings": [
                  {
                    "apiValue": "off",
                    "description": "Show geometry labels",
                    "name": "showlabels",
                    "value": "false"
                  },
                  {
                    "apiValue": "off",
                    "description": "Show edge direction arrows",
                    "name": "showDirections",
                    "value": "false"
                  },
                  {
                    "apiValue": "on",
                    "description": "Show grid",
                    "name": "showgrid",
                    "value": "true"
                  },
                  {
                    "apiValue": "on",
                    "description": "Mesh rendering",
                    "name": "rendermesh",
                    "value": "true"
                  },
                  {
                    "apiValue": "on",
                    "description": "Show axis units",
                    "name": "showunits",
                    "value": "true"
                  },
                  {
                    "apiValue": "off",
                    "description": "Lock axis",
                    "name": "locked",
                    "value": "false"
                  },
                  {
                    "apiValue": "on",
                    "description": "Show selection colors",
                    "name": "showselection",
                    "value": "true"
                  },
                  {
                    "apiValue": "off",
                    "description": "Show material color and texture",
                    "name": "showmaterial",
                    "value": "false"
                  }
                ],
                "tag": "view1",
                "type": "View",
                "windowType": 1
              }
            ],
            "tag": "nonEntity2",
            "windowType": 1
          },
          {
            "apiClass": "GeomSequence",
            "author": "COMSOL",
            "axisymmetric": false,
            "created": "1696094700214",
            "displayLabel": "Geometry 1",
            "icon": "geometry.png",
            "label": "Geometry 1",
            "lastModified": "0",
            "lastModifiedBy": "COMSOL",
            "modelEntityPath": "/geom/geom1",
            "nodes": [
              {
                "apiClass": "GeomFeature",
                "apiType": "Rectangle",
                "author": "COMSOL",
                "created": "1696094704451",
                "displayLabel": "Rectangle 1",
                "icon": "rectangle.png",
                "label": "Rectangle 1",
                "lastModified": "0",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/geom/geom1/feature/r1",
                "name": "r1",
                "settings": [
                  {
                    "apiValue": "off",
                    "description": "Construction geometry",
                    "name": "assignedconstruction",
                    "value": "false"
                  },
                  {
                    "apiValue": "off",
                    "description": "Resulting objects selection",
                    "name": "selresult",
                    "value": "false"
                  },
                  {
                    "apiValue": "off",
                    "description": "Constrain Rotation",
                    "name": "rotconstr",
                    "value": "false"
                  },
                  {
                    "description": "Rotation",
                    "name": "rot",
                    "scalarReal": "0.0",
                    "value": "0"
                  },
                  {
                    "apiValue": "solid",
                    "description": "Type",
                    "name": "type",
                    "value": "Solid"
                  },
                  {
                    "apiValue": "corner",
                    "description": "Base",
                    "name": "base",
                    "value": "Corner"
                  },
                  {
                    "apiValue": "on",
                    "description": "Layers to the left",
                    "name": "layerleft",
                    "value": "true"
                  },
                  {
                    "apiValue": "on",
                    "description": "Layers to the right",
                    "name": "layerright",
                    "value": "true"
                  },
                  {
                    "apiValue": "off",
                    "description": "Layers on bottom",
                    "name": "layerbottom",
                    "value": "false"
                  },
                  {
                    "apiValue": "off",
                    "description": "Layers on top",
                    "name": "layertop",
                    "value": "false"
                  }
                ],
                "tag": "r1",
                "type": "Rectangle[geometry]",
                "windowType": 1
              },
              {
                "apiClass": "GeomFeature",
                "apiType": "Finalize",
                "author": "COMSOL",
                "created": "1696094700218",
                "displayLabel": "Form Union",
                "icon": "geom_form_union_assembly.png",
                "label": "Form Union",
                "lastModified": "0",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/geom/geom1/feature/fin",
                "name": "fin",
                "settings": [
                  {
                    "apiValue": "union",
                    "description": "Action",
                    "name": "action",
                    "value": "Form a union"
                  },
                  {
                    "apiValue": "auto",
                    "description": "Repair tolerance",
                    "name": "repairtoltype",
                    "value": "Automatic"
                  }
                ],
                "tag": "fin",
                "type": "Form_union/assembly",
                "windowType": 1
              }
            ],
            "settings": [
              {
                "apiValue": "off",
                "description": "Scale values when changing units",
                "name": "scale",
                "value": "false"
              },
              {
                "apiValue": "m",
                "description": "Length unit",
                "name": "lengthunit",
                "value": "m"
              },
              {
                "apiValue": "deg",
                "description": "Angular unit",
                "name": "angularunit",
                "value": "Degrees"
              },
              {
                "apiValue": "auto",
                "description": "Default repair tolerance",
                "name": "repairtoltype",
                "value": "Automatic"
              },
              {
                "apiValue": "on",
                "description": "Build new operations automatically",
                "name": "autoBuildNew",
                "value": "true"
              },
              {
                "apiValue": "on",
                "description": "Build automatically when leaving geometry",
                "name": "autorebuild",
                "value": "true"
              }
            ],
            "spaceDimension": 2,
            "tag": "geom1",
            "type": "Geometry",
            "windowType": 1
          },
          {
            "apiClass": "NonEntity",
            "icon": "material.png",
            "label": "Materials",
            "nodes": [
              {
                "apiClass": "Material",
                "apiType": "Common",
                "author": "COMSOL",
                "created": "1696094706445",
                "displayLabel": "Material 1",
                "icon": "material.png",
                "label": "Material 1",
                "lastModified": "0",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/material/mat1",
                "name": "mat1",
                "nodes": [
                  {
                    "apiClass": "MaterialModel",
                    "author": "COMSOL",
                    "created": "1696094706448",
                    "displayLabel": "Basic",
                    "icon": "material_property_group.png",
                    "label": "Basic",
                    "lastModified": "0",
                    "lastModifiedBy": "COMSOL",
                    "modelEntityPath": "/material/mat1/materialmodel/def",
                    "name": "def",
                    "tag": "def",
                    "type": "Basic",
                    "windowType": 1
                  },
                  {
                    "apiClass": "MaterialModel",
                    "author": "COMSOL",
                    "created": "1696094707237",
                    "displayLabel": "Refractive index",
                    "icon": "material_property_group.png",
                    "label": "Refractive index",
                    "lastModified": "0",
                    "lastModifiedBy": "COMSOL",
                    "modelEntityPath": "/material/mat1/materialmodel/RefractiveIndex",
                    "name": "rfi",
                    "settings": [
                      {
                        "description": "Refractive index, real part",
                        "name": "n",
                        "scalarImag": "0.0",
                        "scalarReal": "1.0",
                        "value": "1"
                      },
                      {
                        "description": "Refractive index, imaginary part",
                        "name": "ki",
                        "scalarImag": "0.0",
                        "scalarReal": "0.0",
                        "value": "0"
                      }
                    ],
                    "tag": "RefractiveIndex",
                    "type": "Refractive_index",
                    "windowType": 1
                  }
                ],
                "settings": [
                  {
                    "apiValue": "plastic",
                    "description": "Material type",
                    "name": "family",
                    "value": "Plastic"
                  },
                  {
                    "apiValue": "white",
                    "description": "Color",
                    "name": "color",
                    "value": "White"
                  },
                  {
                    "description": "Refractive index, real part",
                    "name": "n",
                    "scalarImag": "0.0",
                    "scalarReal": "1.0",
                    "value": "1"
                  },
                  {
                    "description": "Refractive index, imaginary part",
                    "name": "ki",
                    "scalarImag": "0.0",
                    "scalarReal": "0.0",
                    "value": "0"
                  }
                ],
                "tag": "mat1",
                "type": "Material",
                "windowType": 1
              }
            ],
            "tag": "nonEntity3",
            "windowType": 1
          },
          {
            "apiClass": "Physics",
            "apiType": "ElectromagneticWavesFrequencyDomain",
            "author": "COMSOL",
            "created": "1696094700235",
            "displayLabel": "Fundamental",
            "icon": "phys_electromagnetic_waves_frequency_domain.png",
            "label": "Fundamental",
            "lastModified": "0",
            "lastModifiedBy": "COMSOL",
            "modelEntityPath": "/physics/ewfd1",
            "name": "ewfd1",
            "nodes": [
              {
                "apiClass": "PhysicsFeature",
                "apiType": "WaveEquationElectric",
                "author": "COMSOL",
                "created": "1696094700280",
                "displayLabel": "Wave Equation, Electric 1",
                "icon": "domainlevel_2d.png",
                "label": "Wave Equation, Electric 1",
                "lastModified": "0",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/physics/ewfd1/feature/wee1",
                "settings": [
                  {
                    "apiValue": "RefractiveIndex",
                    "description": "Electric displacement field model",
                    "name": "DisplacementFieldModel",
                    "value": "Refractive index"
                  },
                  {
                    "apiValue": "from_mat",
                    "description": "Refractive index, real part",
                    "name": "n_mat",
                    "value": "From material"
                  },
                  {
                    "apiValue": "from_mat",
                    "description": "Refractive index, imaginary part",
                    "name": "ki_mat",
                    "value": "From material"
                  },
                  {
                    "apiValue": "root.freq",
                    "description": "Frequency",
                    "name": "minput_frequency_src",
                    "value": "From solver"
                  },
                  {
                    "apiValue": "GlobalSystem",
                    "description": "Coordinate system",
                    "name": "coordinateSystem",
                    "value": "Global coordinate system"
                  },
                  {
                    "apiValue": "fromCommonDef",
                    "description": "Temperature",
                    "name": "minput_temperature_src",
                    "value": "Common model input"
                  }
                ],
                "tag": "wee1",
                "type": "Wave_equation_electric",
                "windowType": 1
              },
              {
                "apiClass": "PhysicsFeature",
                "apiType": "PerfectElectricConductor",
                "author": "COMSOL",
                "created": "1696094700290",
                "displayLabel": "Perfect Electric Conductor 1",
                "icon": "boundarylevel_2d.png",
                "label": "Perfect Electric Conductor 1",
                "lastModified": "0",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/physics/ewfd1/feature/pec1",
                "settings": [
                  {
                    "apiValue": "pointwiseConstraints",
                    "description": "Constraint",
                    "name": "constraintOptions",
                    "value": "Pointwise constraints"
                  },
                  {
                    "apiValue": "symmetricConstraint",
                    "description": "Apply reaction terms on",
                    "name": "constraintType",
                    "value": "All physics (symmetric)"
                  },
                  {
                    "apiValue": "elemental",
                    "description": "Constraint method",
                    "name": "constraintMethod",
                    "value": "Elemental"
                  }
                ],
                "tag": "pec1",
                "type": "Perfect_electric_conductor",
                "windowType": 1
              },
              {
                "apiClass": "PhysicsFeature",
                "apiType": "init",
                "author": "COMSOL",
                "created": "1696094700297",
                "displayLabel": "Initial Values 1",
                "icon": "domainlevel_2d.png",
                "label": "Initial Values 1",
                "lastModified": "0",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/physics/ewfd1/feature/init1",
                "settings": [
                  {
                    "description": "Electric field",
                    "name": "E"
                  },
                  {
                    "apiValue": "GlobalSystem",
                    "description": "Coordinate system",
                    "name": "coordinateSystem",
                    "value": "Global coordinate system"
                  }
                ],
                "tag": "init1",
                "type": "Initial_values",
                "windowType": 1
              },
              {
                "apiClass": "PhysicsFeature",
                "apiType": "Polarization",
                "author": "COMSOL",
                "created": "1696094708902",
                "displayLabel": "Polarization 1",
                "icon": "domainlevel_2d.png",
                "label": "Polarization 1",
                "lastModified": "0",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/physics/ewfd1/feature/pol1",
                "settings": [
                  {
                    "description": [
                      "Polarization, x-component",
                      "Polarization, y-component",
                      "Polarization, z-component"
                    ],
                    "name": "P"
                  }
                ],
                "tag": "pol1",
                "type": "Polarization",
                "windowType": 1
              },
              {
                "apiClass": "PhysicsFeature",
                "apiType": "Scattering",
                "author": "COMSOL",
                "created": "1696094710460",
                "displayLabel": "Scattering Boundary Condition 1",
                "icon": "boundarylevel_2d.png",
                "label": "Scattering Boundary Condition 1",
                "lastModified": "0",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/physics/ewfd1/feature/sctr1",
                "settings": [
                  {
                    "apiValue": "EField",
                    "description": "Incident field",
                    "name": "IncidentField",
                    "value": "Wave given by E field"
                  },
                  {
                    "description": [
                      "Incident electric field amplitude, x-component",
                      "Incident electric field amplitude, y-component",
                      "Incident electric field amplitude, z-component"
                    ],
                    "name": "E0i"
                  },
                  {
                    "apiValue": "PlaneWave",
                    "description": "Scattered wave type",
                    "name": "WaveType",
                    "value": "Plane wave"
                  },
                  {
                    "description": [
                      "Incident wave direction, x-component",
                      "Incident wave direction, y-component",
                      "Incident wave direction, z-component"
                    ],
                    "name": "kdir"
                  },
                  {
                    "apiValue": "FirstOrder",
                    "description": "Order",
                    "name": "Order",
                    "value": "First order"
                  },
                  {
                    "description": "Subtract propagation constant from material wave number",
                    "name": "UseReducedWaveNumber"
                  },
                  {
                    "apiValue": "GlobalSystem",
                    "description": "Coordinate system",
                    "name": "coordinateSystem",
                    "value": "Global coordinate system"
                  }
                ],
                "tag": "sctr1",
                "type": "Scattering_boundary_condition",
                "windowType": 1
              },
              {
                "apiClass": "PhysicsFeature",
                "apiType": "Scattering",
                "author": "COMSOL",
                "created": "1696094712761",
                "displayLabel": "Scattering Boundary Condition 2",
                "icon": "boundarylevel_2d.png",
                "label": "Scattering Boundary Condition 2",
                "lastModified": "0",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/physics/ewfd1/feature/sctr2",
                "settings": [
                  {
                    "apiValue": "NoIncidentField",
                    "description": "Incident field",
                    "name": "IncidentField",
                    "value": "No incident field"
                  },
                  {
                    "apiValue": "PlaneWave",
                    "description": "Scattered wave type",
                    "name": "WaveType",
                    "value": "Plane wave"
                  },
                  {
                    "apiValue": "FirstOrder",
                    "description": "Order",
                    "name": "Order",
                    "value": "First order"
                  },
                  {
                    "description": "Subtract propagation constant from material wave number",
                    "name": "UseReducedWaveNumber"
                  },
                  {
                    "apiValue": "GlobalSystem",
                    "description": "Coordinate system",
                    "name": "coordinateSystem",
                    "value": "Global coordinate system"
                  }
                ],
                "tag": "sctr2",
                "type": "Scattering_boundary_condition",
                "windowType": 1
              }
            ],
            "settings": [
              {
                "apiValue": "2",
                "description": "Electric field",
                "name": "order_electricfield",
                "value": "Quadratic"
              },
              {
                "apiValue": "FromStudy",
                "description": "Maximum mesh element size control parameter",
                "name": "SizeControlParameter",
                "value": "From study"
              },
              {
                "description": "Resolve wave in lossy media",
                "name": "ResolveWaveInLossyMedia"
              },
              {
                "apiValue": "inplane",
                "description": "Electric field components solved for",
                "name": "components",
                "value": "In-plane vector"
              },
              {
                "apiValue": "fullField",
                "name": "SolveFor",
                "value": "Full field"
              },
              {
                "description": "Use manual port sweep",
                "name": "useSweep"
              },
              {
                "description": "Out-of-plane wave number",
                "name": "kz",
                "scalarReal": "0.0",
                "value": "0"
              },
              {
                "apiValue": "Weak",
                "description": "Port formulation",
                "name": "PortFormulation",
                "value": "Weak formulation"
              },
              {
                "description": [
                  "Electric field",
                  "Electric field components"
                ],
                "name": "E",
                "value": [
                  "E",
                  "Ex",
                  "Ey",
                  "Ez"
                ]
              }
            ],
            "tag": "ewfd1",
            "type": "Electromagnetic_waves_frequency_domain",
            "windowType": 1
          },
          {
            "apiClass": "Physics",
            "apiType": "ElectromagneticWavesFrequencyDomain",
            "author": "COMSOL",
            "created": "1696094700463",
            "displayLabel": "Second Harmonic",
            "icon": "phys_electromagnetic_waves_frequency_domain.png",
            "label": "Second Harmonic",
            "lastModified": "0",
            "lastModifiedBy": "COMSOL",
            "modelEntityPath": "/physics/ewfd2",
            "name": "ewfd2",
            "nodes": [
              {
                "apiClass": "PhysicsFeature",
                "apiType": "WaveEquationElectric",
                "author": "COMSOL",
                "created": "1696094700499",
                "displayLabel": "Wave Equation, Electric 1",
                "icon": "domainlevel_2d.png",
                "label": "Wave Equation, Electric 1",
                "lastModified": "0",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/physics/ewfd2/feature/wee1",
                "settings": [
                  {
                    "apiValue": "RefractiveIndex",
                    "description": "Electric displacement field model",
                    "name": "DisplacementFieldModel",
                    "value": "Refractive index"
                  },
                  {
                    "apiValue": "from_mat",
                    "description": "Refractive index, real part",
                    "name": "n_mat",
                    "value": "From material"
                  },
                  {
                    "apiValue": "from_mat",
                    "description": "Refractive index, imaginary part",
                    "name": "ki_mat",
                    "value": "From material"
                  },
                  {
                    "apiValue": "root.freq",
                    "description": "Frequency",
                    "name": "minput_frequency_src",
                    "value": "Frequency (ewfd2)"
                  },
                  {
                    "apiValue": "GlobalSystem",
                    "description": "Coordinate system",
                    "name": "coordinateSystem",
                    "value": "Global coordinate system"
                  },
                  {
                    "apiValue": "fromCommonDef",
                    "description": "Temperature",
                    "name": "minput_temperature_src",
                    "value": "Common model input"
                  }
                ],
                "tag": "wee1",
                "type": "Wave_equation_electric",
                "windowType": 1
              },
              {
                "apiClass": "PhysicsFeature",
                "apiType": "PerfectElectricConductor",
                "author": "COMSOL",
                "created": "1696094700507",
                "displayLabel": "Perfect Electric Conductor 1",
                "icon": "boundarylevel_2d.png",
                "label": "Perfect Electric Conductor 1",
                "lastModified": "0",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/physics/ewfd2/feature/pec1",
                "settings": [
                  {
                    "apiValue": "pointwiseConstraints",
                    "description": "Constraint",
                    "name": "constraintOptions",
                    "value": "Pointwise constraints"
                  },
                  {
                    "apiValue": "symmetricConstraint",
                    "description": "Apply reaction terms on",
                    "name": "constraintType",
                    "value": "All physics (symmetric)"
                  },
                  {
                    "apiValue": "elemental",
                    "description": "Constraint method",
                    "name": "constraintMethod",
                    "value": "Elemental"
                  }
                ],
                "tag": "pec1",
                "type": "Perfect_electric_conductor",
                "windowType": 1
              },
              {
                "apiClass": "PhysicsFeature",
                "apiType": "init",
                "author": "COMSOL",
                "created": "1696094700514",
                "displayLabel": "Initial Values 1",
                "icon": "domainlevel_2d.png",
                "label": "Initial Values 1",
                "lastModified": "0",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/physics/ewfd2/feature/init1",
                "settings": [
                  {
                    "description": "Electric field",
                    "name": "E2"
                  },
                  {
                    "apiValue": "GlobalSystem",
                    "description": "Coordinate system",
                    "name": "coordinateSystem",
                    "value": "Global coordinate system"
                  }
                ],
                "tag": "init1",
                "type": "Initial_values",
                "windowType": 1
              },
              {
                "apiClass": "PhysicsFeature",
                "apiType": "Polarization",
                "author": "COMSOL",
                "created": "1696094715049",
                "displayLabel": "Polarization 1",
                "icon": "domainlevel_2d.png",
                "label": "Polarization 1",
                "lastModified": "0",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/physics/ewfd2/feature/pol1",
                "settings": [
                  {
                    "description": [
                      "Polarization, x-component",
                      "Polarization, y-component",
                      "Polarization, z-component"
                    ],
                    "name": "P"
                  }
                ],
                "tag": "pol1",
                "type": "Polarization",
                "windowType": 1
              },
              {
                "apiClass": "PhysicsFeature",
                "apiType": "Scattering",
                "author": "COMSOL",
                "created": "1696094716410",
                "displayLabel": "Scattering Boundary Condition 1",
                "icon": "boundarylevel_2d.png",
                "label": "Scattering Boundary Condition 1",
                "lastModified": "0",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/physics/ewfd2/feature/sctr1",
                "settings": [
                  {
                    "apiValue": "NoIncidentField",
                    "description": "Incident field",
                    "name": "IncidentField",
                    "value": "No incident field"
                  },
                  {
                    "apiValue": "PlaneWave",
                    "description": "Scattered wave type",
                    "name": "WaveType",
                    "value": "Plane wave"
                  },
                  {
                    "apiValue": "FirstOrder",
                    "description": "Order",
                    "name": "Order",
                    "value": "First order"
                  },
                  {
                    "description": "Subtract propagation constant from material wave number",
                    "name": "UseReducedWaveNumber"
                  },
                  {
                    "apiValue": "GlobalSystem",
                    "description": "Coordinate system",
                    "name": "coordinateSystem",
                    "value": "Global coordinate system"
                  }
                ],
                "tag": "sctr1",
                "type": "Scattering_boundary_condition",
                "windowType": 1
              }
            ],
            "settings": [
              {
                "apiValue": "2",
                "description": "Electric field",
                "name": "order_electricfield",
                "value": "Quadratic"
              },
              {
                "apiValue": "FromStudy",
                "description": "Maximum mesh element size control parameter",
                "name": "SizeControlParameter",
                "value": "From study"
              },
              {
                "description": "Resolve wave in lossy media",
                "name": "ResolveWaveInLossyMedia"
              },
              {
                "apiValue": "inplane",
                "description": "Electric field components solved for",
                "name": "components",
                "value": "In-plane vector"
              },
              {
                "apiValue": "fullField",
                "name": "SolveFor",
                "value": "Full field"
              },
              {
                "description": "Use manual port sweep",
                "name": "useSweep"
              },
              {
                "description": "Out-of-plane wave number",
                "name": "kz",
                "scalarReal": "0.0",
                "value": "0"
              },
              {
                "apiValue": "Weak",
                "description": "Port formulation",
                "name": "PortFormulation",
                "value": "Weak formulation"
              },
              {
                "description": [
                  "Electric field",
                  "Electric field components"
                ],
                "name": "E2",
                "value": [
                  "E2",
                  "E2x",
                  "E2y",
                  "E2z"
                ]
              }
            ],
            "tag": "ewfd2",
            "type": "Electromagnetic_waves_frequency_domain",
            "windowType": 1
          },
          {
            "apiClass": "MeshSequence",
            "author": "COMSOL",
            "created": "1696094700234",
            "displayLabel": "Mesh 1",
            "icon": "mesh.png",
            "label": "Mesh 1",
            "lastModified": "1696094761629",
            "lastModifiedBy": "COMSOL",
            "modelEntityPath": "/mesh/mesh1",
            "nodes": [
              {
                "apiClass": "MeshFeature",
                "apiType": "MeshSizeDefault",
                "author": "COMSOL",
                "created": "1696094705646",
                "displayLabel": "Size",
                "icon": "mesh_size.png",
                "label": "Size",
                "lastModified": "0",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/mesh/mesh1/feature/size",
                "settings": [
                  {
                    "apiValue": "default",
                    "description": "Calibrate for",
                    "name": "table",
                    "value": "General physics"
                  },
                  {
                    "description": "Maximum element size",
                    "name": "hmax",
                    "value": "sim_h"
                  },
                  {
                    "description": "Minimum element size",
                    "name": "hmin",
                    "value": "sim_h"
                  },
                  {
                    "description": "Curvature factor",
                    "name": "hcurve",
                    "scalarReal": "0.3",
                    "value": "0.3"
                  },
                  {
                    "description": "Resolution of narrow regions",
                    "name": "hnarrow",
                    "scalarReal": "1.0",
                    "value": "1"
                  },
                  {
                    "description": "Maximum element growth rate",
                    "name": "hgrad",
                    "scalarReal": "1.3",
                    "value": "1.3"
                  },
                  {
                    "apiValue": "5",
                    "description": "Predefined size",
                    "name": "hauto",
                    "value": "Normal"
                  },
                  {
                    "apiValue": "on",
                    "description": "Custom element size",
                    "name": "custom",
                    "value": "Custom"
                  }
                ],
                "tag": "size",
                "type": "Size",
                "windowType": 1
              },
              {
                "apiClass": "MeshFeature",
                "apiType": "Map",
                "author": "COMSOL",
                "created": "1696094718384",
                "displayLabel": "Mapped 1",
                "icon": "mesh_mapped.png",
                "label": "Mapped 1",
                "lastModified": "1696094761629",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/mesh/mesh1/feature/map1",
                "settings": [
                  {
                    "apiValue": "off",
                    "description": "Adjust edge mesh",
                    "name": "adjustedgdistr",
                    "value": "false"
                  },
                  {
                    "apiValue": "on",
                    "description": "Smooth across removed control entities",
                    "name": "smoothcontrol",
                    "value": "true"
                  },
                  {
                    "description": "Number of iterations",
                    "name": "smoothmaxiter",
                    "scalarReal": "4.0",
                    "value": "4"
                  },
                  {
                    "description": "Maximum element depth to process",
                    "name": "smoothmaxdepth",
                    "scalarReal": "4.0",
                    "value": "4"
                  },
                  {
                    "description": "Last build time",
                    "name": "buildtime",
                    "scalarReal": "0.0",
                    "value": "0"
                  },
                  {
                    "description": "Built with",
                    "name": "buildinfo",
                    "value": "COMSOL 6.2.0.259 (glnxa64)|2023-09-30T19:25:22.065689"
                  }
                ],
                "tag": "map1",
                "type": "Mapped",
                "windowType": 1
              }
            ],
            "settings": [
              {
                "apiValue": "manual",
                "description": "Type",
                "name": "meshtype",
                "value": "User-controlled mesh"
              },
              {
                "apiValue": "off",
                "description": "Build new operations automatically",
                "name": "autoBuildNew",
                "value": "false"
              }
            ],
            "tag": "mesh1",
            "type": "Mesh",
            "windowType": 1
          }
        ],
        "settings": [
          {
            "apiValue": "useglobal",
            "description": "Unit system",
            "name": "basesystem",
            "value": "Same as global system (SI)"
          },
          {
            "apiValue": "on",
            "description": "Always define all frames",
            "name": "defineAllFrames",
            "value": "true"
          },
          {
            "apiValue": "automatic",
            "description": "Geometry shape function",
            "name": "sorderprop",
            "value": "Automatic"
          },
          {
            "apiValue": "on",
            "description": "Avoid inverted elements by curving interior domain elements",
            "name": "curvedinterior",
            "value": "true"
          }
        ],
        "spaceDimension": 2,
        "tag": "comp1",
        "type": "Component[model]",
        "windowType": 1
      },
      {
        "apiClass": "Study",
        "author": "COMSOL",
        "created": "1696094700635",
        "displayLabel": "Study 1",
        "icon": "study.png",
        "label": "Study 1",
        "lastComputationDate": "1696094728587",
        "lastComputationTime": "3653",
        "lastComputationVersion": "COMSOL 6.2.0.259",
        "lastModified": "1696094761629",
        "lastModifiedBy": "COMSOL",
        "modelEntityPath": "/study/std1",
        "nodes": [
          {
            "apiClass": "StudyFeature",
            "apiType": "Frequency",
            "author": "COMSOL",
            "created": "1696094700636",
            "displayLabel": "Frequency Domain",
            "icon": "study_frequency_domain.png",
            "label": "Frequency Domain",
            "lastModified": "1696094761629",
            "lastModifiedBy": "COMSOL",
            "modelEntityPath": "/study/std1/feature/freq",
            "settings": [
              {
                "apiValue": "THz",
                "description": "Frequency unit",
                "name": "punit",
                "value": "THz"
              },
              {
                "description": "Load parameter values",
                "name": "loadparameters"
              },
              {
                "apiValue": "no",
                "description": "Reuse solution from previous step",
                "name": "preusesol",
                "value": "No"
              },
              {
                "apiValue": "off",
                "description": "Plot",
                "name": "plot",
                "value": "false"
              },
              {
                "apiValue": "all",
                "description": "Probes",
                "name": "probesel",
                "value": "All"
              },
              {
                "apiValue": "off",
                "description": [
                  "Settings",
                  "Initial values of variables solved for"
                ],
                "name": "useinitsol",
                "value": "false"
              },
              {
                "apiValue": "off",
                "description": [
                  "Settings",
                  "Values of variables not solved for"
                ],
                "name": "usesol",
                "value": "false"
              },
              {
                "apiValue": "none",
                "description": "Adaptation and error estimates",
                "name": "errestandadap",
                "value": "None"
              },
              {
                "apiValue": "off",
                "description": "Auxiliary sweep",
                "name": "useparam",
                "value": "false"
              },
              {
                "apiValue": "off",
                "description": "Define load cases",
                "name": "useloadcase",
                "value": "false"
              },
              {
                "apiValue": "off",
                "description": "Use asymptotic waveform evaluation",
                "name": "awe",
                "value": "false"
              }
            ],
            "tag": "freq",
            "type": "Frequency_domain",
            "windowType": 1
          },
          {
            "apiClass": "NonEntity",
            "icon": "solver_sequence.png",
            "label": "Solver Configurations",
            "nodes": [
              {
                "apiClass": "SolverSequence",
                "author": "COMSOL",
                "created": "1696094722057",
                "displayLabel": "Solution 1",
                "icon": "solver_sequence1.png",
                "label": "Solution 1",
                "lastModified": "1696094761629",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/sol/sol1",
                "name": "sol1",
                "nodes": [
                  {
                    "apiClass": "SolverFeature",
                    "apiType": "StudyStep",
                    "author": "COMSOL",
                    "created": "1696094722740",
                    "displayLabel": "Compile Equations: Frequency Domain",
                    "icon": "solver_studystep.png",
                    "label": "Compile Equations: Frequency Domain",
                    "lastModified": "1696094761629",
                    "lastModifiedBy": "COMSOL",
                    "modelEntityPath": "/sol/sol1/feature/st1",
                    "settings": [
                      {
                        "apiValue": "freq",
                        "description": "Use study step",
                        "name": "studystep",
                        "value": "Frequency Domain"
                      },
                      {
                        "apiValue": "on",
                        "description": "Split complex variables in real and imaginary parts",
                        "name": "splitcomplex",
                        "value": "true"
                      },
                      {
                        "apiValue": "parent",
                        "description": "Partitioning method for distributed computing",
                        "name": "partmethod",
                        "value": "From parent"
                      },
                      {
                        "apiValue": "off",
                        "description": "Save previous solution",
                        "name": "saveprevioussolution",
                        "value": "false"
                      },
                      {
                        "apiValue": "all",
                        "description": "Use entities",
                        "name": "useent",
                        "value": "All"
                      },
                      {
                        "apiValue": "off",
                        "description": "Keep warnings in stored log",
                        "name": "keeplog",
                        "value": "false"
                      }
                    ],
                    "tag": "st1",
                    "type": "Compile_equations",
                    "windowType": 1
                  },
                  {
                    "apiClass": "SolverFeature",
                    "apiType": "Variables",
                    "author": "COMSOL",
                    "created": "1696094722746",
                    "displayLabel": "Dependent Variables 1",
                    "icon": "solver_variables.png",
                    "label": "Dependent Variables 1",
                    "lastModified": "1696094761629",
                    "lastModifiedBy": "COMSOL",
                    "modelEntityPath": "/sol/sol1/feature/v1",
                    "nodes": [
                      {
                        "apiClass": "SolverFeature",
                        "apiType": "Field",
                        "author": "COMSOL",
                        "created": "1696094723340",
                        "displayLabel": "Electric field (comp1.E)",
                        "icon": "solver_field.png",
                        "label": "Electric field (comp1.E)",
                        "lastModified": "0",
                        "lastModifiedBy": "COMSOL",
                        "modelEntityPath": "/sol/sol1/feature/v1/feature/comp1_E",
                        "settings": [
                          {
                            "apiValue": "parent",
                            "description": "Method",
                            "name": "scalemethod",
                            "value": "From parent"
                          },
                          {
                            "apiValue": "parent",
                            "description": "Method",
                            "name": "resscalemethod",
                            "value": "From parent"
                          }
                        ],
                        "tag": "comp1_E",
                        "type": "Field",
                        "windowType": 1
                      },
                      {
                        "apiClass": "SolverFeature",
                        "apiType": "Field",
                        "author": "COMSOL",
                        "created": "1696094723343",
                        "displayLabel": "Electric field (comp1.E2)",
                        "icon": "solver_field.png",
                        "label": "Electric field (comp1.E2)",
                        "lastModified": "0",
                        "lastModifiedBy": "COMSOL",
                        "modelEntityPath": "/sol/sol1/feature/v1/feature/comp1_E2",
                        "settings": [
                          {
                            "apiValue": "parent",
                            "description": "Method",
                            "name": "scalemethod",
                            "value": "From parent"
                          },
                          {
                            "apiValue": "parent",
                            "description": "Method",
                            "name": "resscalemethod",
                            "value": "From parent"
                          }
                        ],
                        "tag": "comp1_E2",
                        "type": "Field",
                        "windowType": 1
                      }
                    ],
                    "settings": [
                      {
                        "apiValue": "auto",
                        "description": "Method",
                        "name": "scalemethod",
                        "value": "Automatic"
                      },
                      {
                        "apiValue": "auto",
                        "description": "Method",
                        "name": "resscalemethod",
                        "value": "Automatic"
                      },
                      {
                        "apiValue": "auto",
                        "description": "Parameters",
                        "name": "initparametersmethod",
                        "value": "Automatic"
                      },
                      {
                        "apiValue": "off",
                        "description": "Keep warnings in stored log",
                        "name": "keeplog",
                        "value": "false"
                      }
                    ],
                    "tag": "v1",
                    "type": "Dependent_variables",
                    "windowType": 1
                  },
                  {
                    "apiClass": "SolverFeature",
                    "apiType": "Stationary",
                    "author": "COMSOL",
                    "created": "1696094723348",
                    "displayLabel": "Stationary Solver 1",
                    "icon": "solver_stationary.png",
                    "label": "Stationary Solver 1",
                    "lastModified": "1696094761629",
                    "lastModifiedBy": "COMSOL",
                    "modelEntityPath": "/sol/sol1/feature/s1",
                    "nodes": [
                      {
                        "apiClass": "SolverFeature",
                        "apiType": "Advanced",
                        "author": "COMSOL",
                        "created": "1696094723352",
                        "displayLabel": "Advanced",
                        "icon": "solver_advanced.png",
                        "label": "Advanced",
                        "lastModified": "0",
                        "lastModifiedBy": "COMSOL",
                        "modelEntityPath": "/sol/sol1/feature/s1/feature/aDef",
                        "settings": [
                          {
                            "apiValue": "auto",
                            "description": "Matrix symmetry",
                            "name": "symmetric",
                            "value": "Automatic"
                          },
                          {
                            "apiValue": "auto",
                            "description": "Matrix format",
                            "name": "matrixformat",
                            "value": "Automatic"
                          },
                          {
                            "apiValue": "on",
                            "description": "Row equilibration",
                            "name": "rowscale",
                            "value": "true"
                          },
                          {
                            "apiValue": "auto",
                            "description": "Null-space function",
                            "name": "nullfun",
                            "value": "Automatic"
                          },
                          {
                            "description": "Orthonormal block limit",
                            "name": "orthonormallimit",
                            "scalarReal": "1.0E7",
                            "value": "10000000"
                          },
                          {
                            "apiValue": "off",
                            "description": "Store last residual",
                            "name": "storeresidual",
                            "value": "false"
                          },
                          {
                            "apiValue": "on",
                            "description": "Solver log",
                            "name": "convinfo",
                            "value": "Normal"
                          },
                          {
                            "apiValue": "frompreferences",
                            "description": "Recovery saving",
                            "name": "recoverysavinginfo",
                            "value": "From preferences"
                          },
                          {
                            "apiValue": "frompreferences",
                            "description": "Force save of recovery file",
                            "name": "recoverysaveforce",
                            "value": "From preferences"
                          },
                          {
                            "apiValue": "on",
                            "description": "Automatic rescaling of linear equations",
                            "name": "autorescale",
                            "value": "true"
                          },
                          {
                            "description": "Assembly block size",
                            "name": "blocksize",
                            "scalarReal": "1000.0",
                            "value": "1000"
                          },
                          {
                            "apiValue": "off",
                            "description": "Assembly block size",
                            "name": "blocksizeactive",
                            "value": "false"
                          },
                          {
                            "apiValue": "auto",
                            "description": "Use distributed solution for assembly",
                            "name": "assemdistrsol",
                            "value": "Automatic"
                          },
                          {
                            "apiValue": "off",
                            "description": "Reuse sparsity pattern",
                            "name": "cachepattern",
                            "value": "false"
                          },
                          {
                            "apiValue": "on",
                            "description": "Optimize data locality on cluster",
                            "name": "assemloc",
                            "value": "true"
                          },
                          {
                            "apiValue": "off",
                            "description": "Use thread scheduling for matrix assembly",
                            "name": "optthread",
                            "value": "false"
                          },
                          {
                            "apiValue": "off",
                            "description": "Use static distribution of assembly blocks",
                            "name": "statblockdistr",
                            "value": "false"
                          },
                          {
                            "apiValue": "on",
                            "description": "Allow complex-valued output from functions with real input",
                            "name": "complexfun",
                            "value": "true"
                          },
                          {
                            "apiValue": "on",
                            "description": "Stop when undefined mathematical operation is detected",
                            "name": "matherr",
                            "value": "true"
                          },
                          {
                            "apiValue": "off",
                            "description": "Check for undefined numerical values after each operation",
                            "name": "checkmatherr",
                            "value": "false"
                          },
                          {
                            "apiValue": "on",
                            "description": "Optimize element data initialization",
                            "name": "elemdatainit",
                            "value": "true"
                          },
                          {
                            "description": "Drop tolerance for local matrix contributions",
                            "name": "assemtol",
                            "scalarReal": "1.0E-12",
                            "value": "1.0E-12"
                          },
                          {
                            "apiValue": "off",
                            "description": "Manual control of reassembly",
                            "name": "keep",
                            "value": "false"
                          }
                        ],
                        "tag": "aDef",
                        "type": "Advanced",
                        "windowType": 1
                      },
                      {
                        "apiClass": "SolverFeature",
                        "apiType": "Parametric",
                        "author": "COMSOL",
                        "created": "1696094723365",
                        "displayLabel": "Parametric 1",
                        "icon": "solver_parametric.png",
                        "label": "Parametric 1",
                        "lastModified": "1696094761629",
                        "lastModifiedBy": "COMSOL",
                        "modelEntityPath": "/sol/sol1/feature/s1/feature/p1",
                        "settings": [
                          {
                            "apiValue": "stop",
                            "description": "On error",
                            "name": "ponerror",
                            "value": "Stop"
                          },
                          {
                            "apiValue": "auto",
                            "description": "Parameter value run order",
                            "name": "plooporder",
                            "value": "Automatic"
                          },
                          {
                            "apiValue": "plist",
                            "description": "Parameters to store",
                            "name": "pout",
                            "value": "Steps given"
                          }
                        ],
                        "tag": "p1",
                        "type": "Parametric",
                        "windowType": 1
                      },
                      {
                        "apiClass": "SolverFeature",
                        "apiType": "FullyCoupled",
                        "author": "COMSOL",
                        "created": "1696094723376",
                        "displayLabel": "Fully Coupled 1",
                        "icon": "solver_fullycoupled.png",
                        "label": "Fully Coupled 1",
                        "lastModified": "1696094761629",
                        "lastModifiedBy": "COMSOL",
                        "modelEntityPath": "/sol/sol1/feature/s1/feature/fc1",
                        "settings": [
                          {
                            "apiValue": "auto",
                            "description": "Nonlinear method",
                            "name": "dtech",
                            "value": "Automatic (Newton)"
                          },
                          {
                            "description": "Initial damping factor",
                            "name": "initstep",
                            "scalarReal": "1.0",
                            "value": "1"
                          },
                          {
                            "description": "Minimum damping factor",
                            "name": "minstep",
                            "scalarReal": "1.0E-4",
                            "value": "1.0E-4"
                          },
                          {
                            "description": "Restriction for step-size update",
                            "name": "rstep",
                            "scalarReal": "10.0",
                            "value": "10"
                          },
                          {
                            "description": "Restriction for step-size increase",
                            "name": "rstepabs",
                            "scalarReal": "1.0",
                            "value": "1"
                          },
                          {
                            "apiValue": "auto",
                            "description": "Use recovery damping factor",
                            "name": "useminsteprecovery",
                            "value": "Automatic"
                          },
                          {
                            "description": "Recovery damping factor",
                            "name": "minsteprecovery",
                            "scalarReal": "0.75",
                            "value": "0.75"
                          },
                          {
                            "apiValue": "on",
                            "description": "Update automatic scale factors in weights",
                            "name": "updweightsauto",
                            "value": "true"
                          },
                          {
                            "apiValue": "tol",
                            "description": "Termination technique",
                            "name": "ntermauto",
                            "value": "Tolerance"
                          },
                          {
                            "description": "Maximum number of iterations",
                            "name": "maxiter",
                            "scalarReal": "25.0",
                            "value": "25"
                          },
                          {
                            "description": "Tolerance factor",
                            "name": "ntolfact",
                            "scalarReal": "1.0",
                            "value": "1"
                          },
                          {
                            "apiValue": "auto",
                            "description": "Termination criterion",
                            "name": "termonres",
                            "value": "Solution or residual"
                          },
                          {
                            "description": "Residual factor",
                            "name": "reserrfact",
                            "scalarReal": "1000.0",
                            "value": "1000"
                          },
                          {
                            "apiValue": "off",
                            "description": "Plot",
                            "name": "plot",
                            "value": "false"
                          },
                          {
                            "apiValue": "none",
                            "description": "Probes",
                            "name": "probesel",
                            "value": "None"
                          }
                        ],
                        "tag": "fc1",
                        "type": "Fully_coupled",
                        "windowType": 1
                      },
                      {
                        "apiClass": "SolverFeature",
                        "apiType": "Direct",
                        "author": "COMSOL",
                        "created": "1696094723377",
                        "displayLabel": "Suggested Direct Solver (ewfd1) (Merged)",
                        "icon": "solver_direct.png",
                        "label": "Suggested Direct Solver (ewfd1) (Merged)",
                        "lastModified": "0",
                        "lastModifiedBy": "COMSOL",
                        "modelEntityPath": "/sol/sol1/feature/s1/feature/d1",
                        "settings": [
                          {
                            "apiValue": "mumps",
                            "description": "Solver",
                            "name": "linsolver",
                            "value": "MUMPS"
                          },
                          {
                            "description": "Memory allocation factor",
                            "name": "mumpsalloc",
                            "scalarReal": "1.2",
                            "value": "1.2"
                          },
                          {
                            "apiValue": "auto",
                            "description": "Preordering algorithm",
                            "name": "mumpsreorder",
                            "value": "Automatic"
                          },
                          {
                            "apiValue": "on",
                            "description": "Row preordering",
                            "name": "mumpsrreorder",
                            "value": "true"
                          },
                          {
                            "apiValue": "on",
                            "description": "Reuse preordering",
                            "name": "reusereorder",
                            "value": "true"
                          },
                          {
                            "apiValue": "on",
                            "description": "Use pivoting",
                            "name": "pivotenable",
                            "value": "true"
                          },
                          {
                            "description": "Pivot threshold",
                            "name": "thresh",
                            "scalarReal": "0.01",
                            "value": "0.01"
                          },
                          {
                            "apiValue": "off",
                            "description": "Block low rank factorization",
                            "name": "mumpsblr",
                            "value": "false"
                          },
                          {
                            "apiValue": "auto",
                            "description": "Out-of-core",
                            "name": "ooc",
                            "value": "Automatic"
                          },
                          {
                            "description": "Memory fraction for out-of-core",
                            "name": "memfracooc",
                            "scalarReal": "0.99",
                            "value": "0.99"
                          },
                          {
                            "apiValue": "auto",
                            "description": "In-core memory method",
                            "name": "incore",
                            "value": "Automatic"
                          },
                          {
                            "description": "Minimum in-core memory (MB)",
                            "name": "minicmemory",
                            "scalarReal": "512.0",
                            "value": "512"
                          },
                          {
                            "description": "Used fraction of total memory",
                            "name": "usetotmemory",
                            "scalarReal": "0.8",
                            "value": "0.8"
                          },
                          {
                            "description": "Internal memory usage factor",
                            "name": "internalmemusage",
                            "scalarReal": "3.0",
                            "value": "3"
                          },
                          {
                            "apiValue": "auto",
                            "description": "Check error estimate",
                            "name": "errorchk",
                            "value": "Automatic"
                          },
                          {
                            "description": "Factor in error estimate",
                            "name": "rhob",
                            "scalarReal": "1.0",
                            "value": "1"
                          },
                          {
                            "apiValue": "on",
                            "description": "Iterative refinement",
                            "name": "iterrefine",
                            "value": "true"
                          },
                          {
                            "description": "Maximum number of refinements",
                            "name": "maxrefinesteps",
                            "scalarReal": "15.0",
                            "value": "15"
                          },
                          {
                            "description": "Error ratio bound",
                            "name": "errorratiobound",
                            "scalarReal": "0.5",
                            "value": "0.5"
                          },
                          {
                            "apiValue": "off",
                            "description": "Use in nonlinear solver",
                            "name": "nliniterrefine",
                            "value": "false"
                          }
                        ],
                        "tag": "d1",
                        "type": "Direct",
                        "windowType": 1
                      }
                    ],
                    "settings": [
                      {
                        "description": "Relative tolerance",
                        "name": "stol",
                        "scalarReal": "0.001",
                        "value": "0.001"
                      },
                      {
                        "apiValue": "auto",
                        "description": "Linearity",
                        "name": "nonlin",
                        "value": "Automatic"
                      },
                      {
                        "apiValue": "on",
                        "description": "Reaction forces",
                        "name": "reacf",
                        "value": "true"
                      },
                      {
                        "apiValue": "off",
                        "description": "Use lumping when computing fluxes",
                        "name": "lumpedflux",
                        "value": "false"
                      },
                      {
                        "apiValue": "off",
                        "description": "Keep warnings in stored log",
                        "name": "keeplog",
                        "value": "false"
                      }
                    ],
                    "tag": "s1",
                    "type": "Stationary_solver",
                    "windowType": 1
                  }
                ],
                "tag": "sol1",
                "type": "Solution",
                "windowType": 1
              }
            ],
            "tag": "nonEntity4",
            "windowType": 1
          }
        ],
        "settings": [
          {
            "apiValue": "on",
            "description": "Generate default plots",
            "name": "genPlots",
            "value": "true"
          },
          {
            "apiValue": "on",
            "description": "Generate convergence plots",
            "name": "genConv",
            "value": "true"
          },
          {
            "apiValue": "off",
            "description": "Store solution for all intermediate study steps",
            "name": "storeSol",
            "value": "false"
          },
          {
            "apiValue": "off",
            "description": "Generate default plots for intermediately stored solutions",
            "name": "genIntermediatePlots",
            "value": "false"
          },
          {
            "apiValue": "off",
            "description": "Plot the location of undefined values",
            "name": "plotUndefVals",
            "value": "false"
          },
          {
            "description": "Last computation time",
            "name": "lastComputationTime",
            "value": "4 s"
          },
          {
            "description": "Last computation date",
            "name": "lastComputationDate",
            "value": "Sep 30, 2023, 7:25:28 PM"
          },
          {
            "description": "Computed in version",
            "name": "lastComputationVersion",
            "value": "COMSOL 6.2.0.259"
          }
        ],
        "tag": "std1",
        "type": "Study",
        "windowType": 1
      },
      {
        "apiClass": "Results",
        "author": "COMSOL",
        "created": "1696094700122",
        "displayLabel": "Results",
        "icon": "post.png",
        "label": "Results",
        "lastModified": "0",
        "lastModifiedBy": "COMSOL",
        "modelEntityPath": "/result",
        "nodes": [
          {
            "apiClass": "DatasetFeatureList",
            "author": "COMSOL",
            "created": "1696094700122",
            "displayLabel": "Datasets",
            "icon": "dataset.png",
            "label": "Datasets",
            "lastModified": "0",
            "lastModifiedBy": "COMSOL",
            "modelEntityPath": "/result/dataset",
            "nodes": [
              {
                "apiClass": "DatasetFeature",
                "apiType": "Solution",
                "author": "COMSOL",
                "created": "1696094722057",
                "displayLabel": "Study 1/Solution 1",
                "icon": "dataset_solution.png",
                "label": "Study 1/Solution 1",
                "lastModified": "1696094761629",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/result/dataset/dset1",
                "name": "sol1",
                "settings": [
                  {
                    "apiValue": "comp1",
                    "description": "Component",
                    "name": "comp",
                    "value": "Component 1 (comp1)"
                  },
                  {
                    "apiValue": "material",
                    "description": "Frame",
                    "name": "frametype",
                    "value": "Material  (X, Y, Z)"
                  },
                  {
                    "description": "Solution at angle (phase)",
                    "name": "phase",
                    "scalarReal": "0.0",
                    "value": "0"
                  },
                  {
                    "description": "Scale factor",
                    "name": "scalefactor",
                    "scalarReal": "1.0",
                    "value": "1"
                  }
                ],
                "tag": "dset1",
                "type": "Solution",
                "windowType": 1
              }
            ],
            "tag": "dataset",
            "type": "Datasets",
            "windowType": 1
          },
          {
            "apiClass": "NumericalFeatureList",
            "author": "COMSOL",
            "created": "1696094700122",
            "displayLabel": "Derived Values",
            "icon": "numerical_results.png",
            "label": "Derived Values",
            "lastModified": "0",
            "lastModifiedBy": "COMSOL",
            "modelEntityPath": "/result/numerical",
            "tag": "numerical",
            "type": "Derived_values",
            "windowType": 1
          },
          {
            "apiClass": "TableFeatureList",
            "author": "COMSOL",
            "created": "1696094700122",
            "displayLabel": "Tables",
            "icon": "post_table.png",
            "label": "Tables",
            "lastModified": "0",
            "lastModifiedBy": "COMSOL",
            "modelEntityPath": "/result/table",
            "tag": "table",
            "type": "Tables",
            "windowType": 1
          },
          {
            "apiClass": "ResultFeature",
            "apiType": "PlotGroup2D",
            "author": "COMSOL",
            "created": "1696094728588",
            "displayLabel": "Fundamental",
            "icon": "plot_group2d.png",
            "label": "Fundamental",
            "lastModified": "1696094761629",
            "lastModifiedBy": "COMSOL",
            "modelEntityPath": "/result/feature/pg1",
            "nodes": [
              {
                "apiClass": "ResultFeature",
                "apiType": "Surface",
                "author": "COMSOL",
                "created": "1696094728609",
                "displayLabel": "Surface 1",
                "icon": "post_surface2d.png",
                "label": "Surface 1",
                "lastModified": "1696094761629",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/result/feature/pg1/feature/surf1",
                "settings": [
                  {
                    "description": "Expression",
                    "name": "expr",
                    "value": "ewfd1.Ey"
                  },
                  {
                    "apiValue": "V/m",
                    "description": "Unit",
                    "name": "unit",
                    "value": "V/m"
                  },
                  {
                    "description": "Description",
                    "name": "descr",
                    "value": "Electric field, y-component"
                  },
                  {
                    "apiValue": "auto",
                    "description": "Title type",
                    "name": "titletype",
                    "value": "Automatic"
                  },
                  {
                    "apiValue": "off",
                    "description": "Manual color range",
                    "name": "rangecoloractive",
                    "value": "false"
                  },
                  {
                    "apiValue": "off",
                    "description": "Manual data range",
                    "name": "rangedataactive",
                    "value": "false"
                  },
                  {
                    "apiValue": "colortable",
                    "description": "Coloring",
                    "name": "coloring",
                    "value": "Color table"
                  },
                  {
                    "apiValue": "RainbowLight",
                    "description": "Color table",
                    "name": "colortable",
                    "value": "RainbowLight"
                  },
                  {
                    "apiValue": "on",
                    "description": "Color legend",
                    "name": "colorlegend",
                    "value": "true"
                  },
                  {
                    "apiValue": "none",
                    "description": "Color table transformation",
                    "name": "colortabletrans",
                    "value": "None"
                  },
                  {
                    "apiValue": "continuous",
                    "description": "Color table type",
                    "name": "colortabletype",
                    "value": "Continuous"
                  },
                  {
                    "apiValue": "linear",
                    "description": "Scale",
                    "name": "colorscalemode",
                    "value": "Linear"
                  },
                  {
                    "apiValue": "off",
                    "description": "Wireframe",
                    "name": "wireframe",
                    "value": "false"
                  },
                  {
                    "apiValue": "normal",
                    "description": "Resolution",
                    "name": "resolution",
                    "value": "Normal"
                  },
                  {
                    "apiValue": "internal",
                    "description": "Smoothing",
                    "name": "smooth",
                    "value": "Inside geometry domains"
                  },
                  {
                    "apiValue": "none",
                    "description": "Smoothing threshold",
                    "name": "threshold",
                    "value": "None"
                  },
                  {
                    "apiValue": "off",
                    "description": "Recover",
                    "name": "recover",
                    "value": "false"
                  },
                  {
                    "apiValue": "on",
                    "description": "Color",
                    "name": "inheritcolor",
                    "value": "true"
                  },
                  {
                    "apiValue": "on",
                    "description": "Color and data range",
                    "name": "inheritrange",
                    "value": "true"
                  },
                  {
                    "apiValue": "on",
                    "description": "Deform scale factor",
                    "name": "inheritdeformscale",
                    "value": "true"
                  },
                  {
                    "apiValue": "on",
                    "description": "Height scale factor",
                    "name": "inheritheightscale",
                    "value": "true"
                  },
                  {
                    "apiValue": "on",
                    "description": "Belongs to array",
                    "name": "belongstoplotarray",
                    "value": "true"
                  },
                  {
                    "apiValue": "off",
                    "description": "Manual indexing",
                    "name": "manualindexing",
                    "value": "false"
                  },
                  {
                    "apiValue": "on",
                    "description": "Apply to dataset edges",
                    "name": "applytodatasetedgesplotarr",
                    "value": "true"
                  }
                ],
                "tag": "surf1",
                "type": "Surface",
                "windowType": 1
              }
            ],
            "settings": [
              {
                "apiValue": "off",
                "description": "Apply to dataset edges",
                "name": "applyselectiontodatasetedges",
                "value": "false"
              },
              {
                "apiValue": "off",
                "description": "Save plot data",
                "name": "savedatainmodel",
                "value": "false"
              },
              {
                "apiValue": "manual",
                "description": "Title type",
                "name": "titletype",
                "value": "Manual"
              },
              {
                "apiValue": "fromtheme",
                "description": "Color",
                "name": "titlecolor",
                "value": "From theme"
              },
              {
                "apiValue": "default",
                "description": "Number format",
                "name": "titlenumberformat",
                "value": "Default"
              },
              {
                "description": "Title",
                "name": "title"
              },
              {
                "description": "Parameter indicator",
                "name": "paramindicator",
                "value": "freq(1)=281.76 THz"
              },
              {
                "description": "Help",
                "name": "help1"
              },
              {
                "description": "Help",
                "name": "help2"
              },
              {
                "description": "Help",
                "name": "help3"
              },
              {
                "description": "x-axis label",
                "name": "xlabel"
              },
              {
                "apiValue": "off",
                "description": "x-axis label",
                "name": "xlabelactive",
                "value": "false"
              },
              {
                "description": "y-axis label",
                "name": "ylabel"
              },
              {
                "apiValue": "off",
                "description": "y-axis label",
                "name": "ylabelactive",
                "value": "false"
              },
              {
                "apiValue": "off",
                "description": "Show hidden entities",
                "name": "showhiddenobjects",
                "value": "false"
              },
              {
                "apiValue": "off",
                "description": "Propagate hiding to lower dimensions",
                "name": "inherithide",
                "value": "false"
              },
              {
                "apiValue": "on",
                "description": "Plot dataset edges",
                "name": "edges",
                "value": "true"
              },
              {
                "apiValue": "fromtheme",
                "description": "Color",
                "name": "edgecolor",
                "value": "From theme"
              },
              {
                "apiValue": "spatial",
                "description": "Frame",
                "name": "frametype",
                "value": "Spatial  (x, y, z)"
              },
              {
                "apiValue": "on",
                "description": "Show legends",
                "name": "showlegends",
                "value": "true"
              },
              {
                "apiValue": "off",
                "description": "Show maximum and minimum values",
                "name": "showlegendsmaxmin",
                "value": "false"
              },
              {
                "apiValue": "off",
                "description": "Show units",
                "name": "showlegendsunit",
                "value": "false"
              },
              {
                "apiValue": "right",
                "description": "Position",
                "name": "legendpos",
                "value": "Right"
              },
              {
                "apiValue": "fromtheme",
                "description": "Text color",
                "name": "legendcolor",
                "value": "From theme"
              },
              {
                "apiValue": "off",
                "description": "Manual color legend settings",
                "name": "legendactive",
                "value": "false"
              },
              {
                "apiValue": "off",
                "description": "Manual axis settings",
                "name": "axisactive",
                "value": "false"
              },
              {
                "apiValue": "off",
                "description": "Enable",
                "name": "plotarrayenable",
                "value": "false"
              },
              {
                "apiValue": "graphics",
                "description": "Plot window",
                "name": "window",
                "value": "Graphics"
              }
            ],
            "tag": "pg1",
            "type": "2D_plot_group",
            "windowType": 1
          },
          {
            "apiClass": "ResultFeature",
            "apiType": "PlotGroup2D",
            "author": "COMSOL",
            "created": "1696094728624",
            "displayLabel": "Second Harmonic",
            "icon": "plot_group2d.png",
            "label": "Second Harmonic",
            "lastModified": "1696094761629",
            "lastModifiedBy": "COMSOL",
            "modelEntityPath": "/result/feature/pg2",
            "nodes": [
              {
                "apiClass": "ResultFeature",
                "apiType": "Surface",
                "author": "COMSOL",
                "created": "1696094728631",
                "displayLabel": "Surface 1",
                "icon": "post_surface2d.png",
                "label": "Surface 1",
                "lastModified": "1696094761629",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/result/feature/pg2/feature/surf1",
                "settings": [
                  {
                    "description": "Expression",
                    "name": "expr",
                    "value": "ewfd2.Ey"
                  },
                  {
                    "apiValue": "V/m",
                    "description": "Unit",
                    "name": "unit",
                    "value": "V/m"
                  },
                  {
                    "description": "Description",
                    "name": "descr",
                    "value": "Electric field, y-component"
                  },
                  {
                    "apiValue": "auto",
                    "description": "Title type",
                    "name": "titletype",
                    "value": "Automatic"
                  },
                  {
                    "apiValue": "off",
                    "description": "Manual color range",
                    "name": "rangecoloractive",
                    "value": "false"
                  },
                  {
                    "apiValue": "off",
                    "description": "Manual data range",
                    "name": "rangedataactive",
                    "value": "false"
                  },
                  {
                    "apiValue": "colortable",
                    "description": "Coloring",
                    "name": "coloring",
                    "value": "Color table"
                  },
                  {
                    "apiValue": "RainbowLight",
                    "description": "Color table",
                    "name": "colortable",
                    "value": "RainbowLight"
                  },
                  {
                    "apiValue": "on",
                    "description": "Color legend",
                    "name": "colorlegend",
                    "value": "true"
                  },
                  {
                    "apiValue": "none",
                    "description": "Color table transformation",
                    "name": "colortabletrans",
                    "value": "None"
                  },
                  {
                    "apiValue": "continuous",
                    "description": "Color table type",
                    "name": "colortabletype",
                    "value": "Continuous"
                  },
                  {
                    "apiValue": "linear",
                    "description": "Scale",
                    "name": "colorscalemode",
                    "value": "Linear"
                  },
                  {
                    "apiValue": "off",
                    "description": "Wireframe",
                    "name": "wireframe",
                    "value": "false"
                  },
                  {
                    "apiValue": "normal",
                    "description": "Resolution",
                    "name": "resolution",
                    "value": "Normal"
                  },
                  {
                    "apiValue": "internal",
                    "description": "Smoothing",
                    "name": "smooth",
                    "value": "Inside geometry domains"
                  },
                  {
                    "apiValue": "none",
                    "description": "Smoothing threshold",
                    "name": "threshold",
                    "value": "None"
                  },
                  {
                    "apiValue": "off",
                    "description": "Recover",
                    "name": "recover",
                    "value": "false"
                  },
                  {
                    "apiValue": "on",
                    "description": "Color",
                    "name": "inheritcolor",
                    "value": "true"
                  },
                  {
                    "apiValue": "on",
                    "description": "Color and data range",
                    "name": "inheritrange",
                    "value": "true"
                  },
                  {
                    "apiValue": "on",
                    "description": "Deform scale factor",
                    "name": "inheritdeformscale",
                    "value": "true"
                  },
                  {
                    "apiValue": "on",
                    "description": "Height scale factor",
                    "name": "inheritheightscale",
                    "value": "true"
                  },
                  {
                    "apiValue": "on",
                    "description": "Belongs to array",
                    "name": "belongstoplotarray",
                    "value": "true"
                  },
                  {
                    "apiValue": "off",
                    "description": "Manual indexing",
                    "name": "manualindexing",
                    "value": "false"
                  },
                  {
                    "apiValue": "on",
                    "description": "Apply to dataset edges",
                    "name": "applytodatasetedgesplotarr",
                    "value": "true"
                  }
                ],
                "tag": "surf1",
                "type": "Surface",
                "windowType": 1
              }
            ],
            "settings": [
              {
                "apiValue": "off",
                "description": "Apply to dataset edges",
                "name": "applyselectiontodatasetedges",
                "value": "false"
              },
              {
                "apiValue": "off",
                "description": "Save plot data",
                "name": "savedatainmodel",
                "value": "false"
              },
              {
                "apiValue": "manual",
                "description": "Title type",
                "name": "titletype",
                "value": "Manual"
              },
              {
                "apiValue": "fromtheme",
                "description": "Color",
                "name": "titlecolor",
                "value": "From theme"
              },
              {
                "apiValue": "default",
                "description": "Number format",
                "name": "titlenumberformat",
                "value": "Default"
              },
              {
                "description": "Title",
                "name": "title"
              },
              {
                "description": "Parameter indicator",
                "name": "paramindicator",
                "value": "freq(1)=281.76 THz"
              },
              {
                "description": "Help",
                "name": "help1"
              },
              {
                "description": "Help",
                "name": "help2"
              },
              {
                "description": "Help",
                "name": "help3"
              },
              {
                "description": "x-axis label",
                "name": "xlabel"
              },
              {
                "apiValue": "off",
                "description": "x-axis label",
                "name": "xlabelactive",
                "value": "false"
              },
              {
                "description": "y-axis label",
                "name": "ylabel"
              },
              {
                "apiValue": "off",
                "description": "y-axis label",
                "name": "ylabelactive",
                "value": "false"
              },
              {
                "apiValue": "off",
                "description": "Show hidden entities",
                "name": "showhiddenobjects",
                "value": "false"
              },
              {
                "apiValue": "off",
                "description": "Propagate hiding to lower dimensions",
                "name": "inherithide",
                "value": "false"
              },
              {
                "apiValue": "on",
                "description": "Plot dataset edges",
                "name": "edges",
                "value": "true"
              },
              {
                "apiValue": "fromtheme",
                "description": "Color",
                "name": "edgecolor",
                "value": "From theme"
              },
              {
                "apiValue": "spatial",
                "description": "Frame",
                "name": "frametype",
                "value": "Spatial  (x, y, z)"
              },
              {
                "apiValue": "on",
                "description": "Show legends",
                "name": "showlegends",
                "value": "true"
              },
              {
                "apiValue": "off",
                "description": "Show maximum and minimum values",
                "name": "showlegendsmaxmin",
                "value": "false"
              },
              {
                "apiValue": "off",
                "description": "Show units",
                "name": "showlegendsunit",
                "value": "false"
              },
              {
                "apiValue": "right",
                "description": "Position",
                "name": "legendpos",
                "value": "Right"
              },
              {
                "apiValue": "fromtheme",
                "description": "Text color",
                "name": "legendcolor",
                "value": "From theme"
              },
              {
                "apiValue": "off",
                "description": "Manual color legend settings",
                "name": "legendactive",
                "value": "false"
              },
              {
                "apiValue": "off",
                "description": "Manual axis settings",
                "name": "axisactive",
                "value": "false"
              },
              {
                "apiValue": "off",
                "description": "Enable",
                "name": "plotarrayenable",
                "value": "false"
              },
              {
                "apiValue": "graphics",
                "description": "Plot window",
                "name": "window",
                "value": "Graphics"
              }
            ],
            "tag": "pg2",
            "type": "2D_plot_group",
            "windowType": 1
          },
          {
            "apiClass": "ResultFeature",
            "apiType": "PlotGroup1D",
            "author": "COMSOL",
            "created": "1696094738801",
            "displayLabel": "Electric Fields",
            "icon": "plot_group1d.png",
            "label": "Electric Fields",
            "lastModified": "1696094761629",
            "lastModifiedBy": "COMSOL",
            "modelEntityPath": "/result/feature/pg3",
            "nodes": [
              {
                "apiClass": "ResultFeature",
                "apiType": "LineGraph",
                "author": "COMSOL",
                "created": "1696094740613",
                "displayLabel": "Fundamental",
                "icon": "plot_line_graph.png",
                "label": "Fundamental",
                "lastModified": "1696094761629",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/result/feature/pg3/feature/lngr1",
                "settings": [
                  {
                    "apiValue": "off",
                    "description": "Plot on secondary y-axis",
                    "name": "plotonsecyaxis",
                    "value": "false"
                  },
                  {
                    "description": "Expression",
                    "name": "expr",
                    "value": "ewfd1.Ey"
                  },
                  {
                    "apiValue": "V/m",
                    "description": "Unit",
                    "name": "unit",
                    "value": "V/m"
                  },
                  {
                    "description": "Description",
                    "name": "descr",
                    "value": "Electric field, y-component"
                  },
                  {
                    "apiValue": "auto",
                    "description": "Title type",
                    "name": "titletype",
                    "value": "Automatic"
                  },
                  {
                    "apiValue": "expr",
                    "description": "Parameter",
                    "name": "xdata",
                    "value": "Expression"
                  },
                  {
                    "description": "Expression",
                    "name": "xdataexpr",
                    "value": "x"
                  },
                  {
                    "apiValue": "m",
                    "description": "Unit",
                    "name": "xdataunit",
                    "value": "m"
                  },
                  {
                    "description": "Description",
                    "name": "xdatadescr",
                    "value": "x-coordinate"
                  },
                  {
                    "apiValue": "solid",
                    "description": [
                      "Line",
                      "Line style"
                    ],
                    "name": "linestyle",
                    "value": "Solid"
                  },
                  {
                    "apiValue": "cycle",
                    "description": "Color",
                    "name": "linecolor",
                    "value": "Cycle"
                  },
                  {
                    "apiValue": "default",
                    "description": "Color cycle",
                    "name": "colorcycle",
                    "value": "Default"
                  },
                  {
                    "apiValue": "2",
                    "description": "Width",
                    "name": "linewidth",
                    "scalarReal": "2.0",
                    "value": "2"
                  },
                  {
                    "description": "Width",
                    "name": "linewidthslider",
                    "scalarReal": "2.0",
                    "value": "2"
                  },
                  {
                    "apiValue": "none",
                    "description": [
                      "Marker",
                      "Line markers"
                    ],
                    "name": "linemarker",
                    "value": "None"
                  },
                  {
                    "apiValue": "on",
                    "description": "Show legends",
                    "name": "legend",
                    "value": "true"
                  },
                  {
                    "apiValue": "automatic",
                    "description": "Legends",
                    "name": "legendmethod",
                    "value": "Automatic"
                  },
                  {
                    "apiValue": "on",
                    "description": [
                      "Label",
                      "Include"
                    ],
                    "name": "autoplotlabel",
                    "value": "true"
                  },
                  {
                    "apiValue": "off",
                    "description": "Solution",
                    "name": "autosolution",
                    "value": "false"
                  },
                  {
                    "apiValue": "off",
                    "description": "Description",
                    "name": "autodescr",
                    "value": "false"
                  },
                  {
                    "apiValue": "off",
                    "description": "Expression",
                    "name": "autoexpr",
                    "value": "false"
                  },
                  {
                    "apiValue": "off",
                    "description": "Unit",
                    "name": "autounit",
                    "value": "false"
                  },
                  {
                    "description": [
                      "Prefix",
                      "Prefix and suffix"
                    ],
                    "name": "legendprefix"
                  },
                  {
                    "description": "Suffix",
                    "name": "legendsuffix"
                  },
                  {
                    "description": "Help",
                    "name": "legendallowexprshelp"
                  },
                  {
                    "description": "Precision",
                    "name": "legendexprprecision",
                    "scalarReal": "3.0",
                    "value": "3"
                  },
                  {
                    "apiValue": "normal",
                    "description": "Resolution",
                    "name": "resolution",
                    "value": "Normal"
                  },
                  {
                    "apiValue": "material",
                    "description": "Smoothing",
                    "name": "smooth",
                    "value": "Inside material domains"
                  },
                  {
                    "apiValue": "none",
                    "description": "Smoothing threshold",
                    "name": "threshold",
                    "value": "None"
                  },
                  {
                    "apiValue": "off",
                    "description": "Recover",
                    "name": "recover",
                    "value": "false"
                  }
                ],
                "tag": "lngr1",
                "type": "Line_graph",
                "windowType": 1
              },
              {
                "apiClass": "ResultFeature",
                "apiType": "LineGraph",
                "author": "COMSOL",
                "created": "1696094743176",
                "displayLabel": "Second Harmonic",
                "icon": "plot_line_graph.png",
                "label": "Second Harmonic",
                "lastModified": "1696094761629",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/result/feature/pg3/feature/lngr2",
                "settings": [
                  {
                    "apiValue": "off",
                    "description": "Plot on secondary y-axis",
                    "name": "plotonsecyaxis",
                    "value": "false"
                  },
                  {
                    "description": "Expression",
                    "name": "expr",
                    "value": "ewfd2.Ey"
                  },
                  {
                    "apiValue": "V/m",
                    "description": "Unit",
                    "name": "unit",
                    "value": "V/m"
                  },
                  {
                    "description": "Description",
                    "name": "descr",
                    "value": "Electric field, y-component"
                  },
                  {
                    "apiValue": "auto",
                    "description": "Title type",
                    "name": "titletype",
                    "value": "Automatic"
                  },
                  {
                    "apiValue": "expr",
                    "description": "Parameter",
                    "name": "xdata",
                    "value": "Expression"
                  },
                  {
                    "description": "Expression",
                    "name": "xdataexpr",
                    "value": "x"
                  },
                  {
                    "apiValue": "m",
                    "description": "Unit",
                    "name": "xdataunit",
                    "value": "m"
                  },
                  {
                    "description": "Description",
                    "name": "xdatadescr",
                    "value": "x-coordinate"
                  },
                  {
                    "apiValue": "solid",
                    "description": [
                      "Line",
                      "Line style"
                    ],
                    "name": "linestyle",
                    "value": "Solid"
                  },
                  {
                    "apiValue": "cycle",
                    "description": "Color",
                    "name": "linecolor",
                    "value": "Cycle"
                  },
                  {
                    "apiValue": "default",
                    "description": "Color cycle",
                    "name": "colorcycle",
                    "value": "Default"
                  },
                  {
                    "apiValue": "2",
                    "description": "Width",
                    "name": "linewidth",
                    "scalarReal": "2.0",
                    "value": "2"
                  },
                  {
                    "description": "Width",
                    "name": "linewidthslider",
                    "scalarReal": "2.0",
                    "value": "2"
                  },
                  {
                    "apiValue": "none",
                    "description": [
                      "Marker",
                      "Line markers"
                    ],
                    "name": "linemarker",
                    "value": "None"
                  },
                  {
                    "apiValue": "on",
                    "description": "Show legends",
                    "name": "legend",
                    "value": "true"
                  },
                  {
                    "apiValue": "automatic",
                    "description": "Legends",
                    "name": "legendmethod",
                    "value": "Automatic"
                  },
                  {
                    "apiValue": "on",
                    "description": [
                      "Label",
                      "Include"
                    ],
                    "name": "autoplotlabel",
                    "value": "true"
                  },
                  {
                    "apiValue": "off",
                    "description": "Solution",
                    "name": "autosolution",
                    "value": "false"
                  },
                  {
                    "apiValue": "off",
                    "description": "Description",
                    "name": "autodescr",
                    "value": "false"
                  },
                  {
                    "apiValue": "off",
                    "description": "Expression",
                    "name": "autoexpr",
                    "value": "false"
                  },
                  {
                    "apiValue": "off",
                    "description": "Unit",
                    "name": "autounit",
                    "value": "false"
                  },
                  {
                    "description": [
                      "Prefix",
                      "Prefix and suffix"
                    ],
                    "name": "legendprefix"
                  },
                  {
                    "description": "Suffix",
                    "name": "legendsuffix"
                  },
                  {
                    "description": "Help",
                    "name": "legendallowexprshelp"
                  },
                  {
                    "description": "Precision",
                    "name": "legendexprprecision",
                    "scalarReal": "3.0",
                    "value": "3"
                  },
                  {
                    "apiValue": "normal",
                    "description": "Resolution",
                    "name": "resolution",
                    "value": "Normal"
                  },
                  {
                    "apiValue": "material",
                    "description": "Smoothing",
                    "name": "smooth",
                    "value": "Inside material domains"
                  },
                  {
                    "apiValue": "none",
                    "description": "Smoothing threshold",
                    "name": "threshold",
                    "value": "None"
                  },
                  {
                    "apiValue": "off",
                    "description": "Recover",
                    "name": "recover",
                    "value": "false"
                  }
                ],
                "tag": "lngr2",
                "type": "Line_graph",
                "windowType": 1
              }
            ],
            "settings": [
              {
                "apiValue": "off",
                "description": "Save plot data",
                "name": "savedatainmodel",
                "value": "false"
              },
              {
                "apiValue": "manual",
                "description": "Title type",
                "name": "titletype",
                "value": "Manual"
              },
              {
                "apiValue": "fromtheme",
                "description": "Color",
                "name": "titlecolor",
                "value": "From theme"
              },
              {
                "apiValue": "default",
                "description": "Number format",
                "name": "titlenumberformat",
                "value": "Default"
              },
              {
                "description": "Title",
                "name": "title"
              },
              {
                "description": "Parameter indicator",
                "name": "paramindicator"
              },
              {
                "description": "Help",
                "name": "help1"
              },
              {
                "description": "Help",
                "name": "help2"
              },
              {
                "description": "Help",
                "name": "help3"
              },
              {
                "description": "x-axis label",
                "name": "xlabel",
                "value": "x-coordinate (m)"
              },
              {
                "apiValue": "off",
                "description": "x-axis label",
                "name": "xlabelactive",
                "value": "false"
              },
              {
                "description": "y-axis label",
                "name": "ylabel",
                "value": "Electric field, y-component (V/m)"
              },
              {
                "apiValue": "off",
                "description": "y-axis label",
                "name": "ylabelactive",
                "value": "false"
              },
              {
                "apiValue": "off",
                "description": "Two y-axes",
                "name": "twoyaxes",
                "value": "false"
              },
              {
                "apiValue": "off",
                "description": "Flip the x- and y-axes",
                "name": "switchxy",
                "value": "false"
              },
              {
                "apiValue": "off",
                "description": "Manual axis limits",
                "name": "axislimits",
                "value": "false"
              },
              {
                "apiValue": "off",
                "description": "Preserve aspect ratio",
                "name": "preserveaspect",
                "value": "false"
              },
              {
                "apiValue": "off",
                "description": "x-axis log scale",
                "name": "xlog",
                "value": "false"
              },
              {
                "apiValue": "off",
                "description": "y-axis log scale",
                "name": "ylog",
                "value": "false"
              },
              {
                "apiValue": "on",
                "description": "Show grid",
                "name": "showgrid",
                "value": "true"
              },
              {
                "apiValue": "off",
                "description": "Manual spacing",
                "name": "manualgrid",
                "value": "false"
              },
              {
                "apiValue": "on",
                "description": "Show legends",
                "name": "showlegends",
                "value": "true"
              },
              {
                "apiValue": "inside",
                "description": "Layout",
                "name": "legendlayout",
                "value": "Inside graph axis area"
              },
              {
                "apiValue": "upperright",
                "description": "Position",
                "name": "legendpos",
                "value": "Upper right"
              },
              {
                "description": "Number of columns",
                "name": "legendcolumncount",
                "scalarReal": "1.0",
                "value": "1"
              },
              {
                "description": "Maximum relative width",
                "name": "legendmaxwidthinside",
                "scalarReal": "0.5",
                "value": "0.5"
              },
              {
                "apiValue": "off",
                "description": "Manual axis settings",
                "name": "axisactive",
                "value": "false"
              },
              {
                "apiValue": "graphics",
                "description": "Plot window",
                "name": "window",
                "value": "Graphics"
              }
            ],
            "tag": "pg3",
            "type": "1D_plot_group",
            "windowType": 1
          },
          {
            "apiClass": "ResultFeature",
            "apiType": "PlotGroup1D",
            "author": "COMSOL",
            "created": "1696094746736",
            "displayLabel": "Photon Flux Density",
            "icon": "plot_group1d.png",
            "label": "Photon Flux Density",
            "lastModified": "1696094761629",
            "lastModifiedBy": "COMSOL",
            "modelEntityPath": "/result/feature/pg4",
            "nodes": [
              {
                "apiClass": "ResultFeature",
                "apiType": "LineGraph",
                "author": "COMSOL",
                "created": "1696094747211",
                "displayLabel": "Simulation Fundamental",
                "icon": "plot_line_graph.png",
                "label": "Simulation Fundamental",
                "lastModified": "1696094761629",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/result/feature/pg4/feature/lngr1",
                "settings": [
                  {
                    "apiValue": "off",
                    "description": "Plot on secondary y-axis",
                    "name": "plotonsecyaxis",
                    "value": "false"
                  },
                  {
                    "description": "Expression",
                    "name": "expr",
                    "value": "ewfd1.Ey*conj(ewfd1.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd1.freq)"
                  },
                  {
                    "apiValue": "1/(m^2*s)",
                    "description": "Unit",
                    "name": "unit",
                    "value": "1/(m^2*s)"
                  },
                  {
                    "description": "Description",
                    "name": "descr",
                    "value": "ewfd1.Ey*conj(ewfd1.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd1.freq)"
                  },
                  {
                    "apiValue": "auto",
                    "description": "Title type",
                    "name": "titletype",
                    "value": "Automatic"
                  },
                  {
                    "apiValue": "expr",
                    "description": "Parameter",
                    "name": "xdata",
                    "value": "Expression"
                  },
                  {
                    "description": "Expression",
                    "name": "xdataexpr",
                    "value": "x"
                  },
                  {
                    "apiValue": "m",
                    "description": "Unit",
                    "name": "xdataunit",
                    "value": "m"
                  },
                  {
                    "description": "Description",
                    "name": "xdatadescr",
                    "value": "x-coordinate"
                  },
                  {
                    "apiValue": "none",
                    "description": [
                      "Line",
                      "Line style"
                    ],
                    "name": "linestyle",
                    "value": "None"
                  },
                  {
                    "apiValue": "cycle",
                    "description": "Color",
                    "name": "linecolor",
                    "value": "Cycle"
                  },
                  {
                    "apiValue": "default",
                    "description": "Color cycle",
                    "name": "colorcycle",
                    "value": "Default"
                  },
                  {
                    "apiValue": "5",
                    "description": "Width",
                    "name": "linewidth",
                    "scalarReal": "5.0",
                    "value": "5"
                  },
                  {
                    "description": "Width",
                    "name": "linewidthslider",
                    "scalarReal": "5.0",
                    "value": "5"
                  },
                  {
                    "apiValue": "diamond",
                    "description": [
                      "Marker",
                      "Line markers"
                    ],
                    "name": "linemarker",
                    "value": "Diamond"
                  },
                  {
                    "apiValue": "interp",
                    "description": "Positioning",
                    "name": "markerpos",
                    "value": "Interpolated"
                  },
                  {
                    "description": "Number",
                    "name": "markers",
                    "scalarReal": "20.0",
                    "value": "20"
                  },
                  {
                    "apiValue": "on",
                    "description": "Show legends",
                    "name": "legend",
                    "value": "true"
                  },
                  {
                    "apiValue": "automatic",
                    "description": "Legends",
                    "name": "legendmethod",
                    "value": "Automatic"
                  },
                  {
                    "apiValue": "on",
                    "description": [
                      "Label",
                      "Include"
                    ],
                    "name": "autoplotlabel",
                    "value": "true"
                  },
                  {
                    "apiValue": "off",
                    "description": "Solution",
                    "name": "autosolution",
                    "value": "false"
                  },
                  {
                    "apiValue": "off",
                    "description": "Description",
                    "name": "autodescr",
                    "value": "false"
                  },
                  {
                    "apiValue": "off",
                    "description": "Expression",
                    "name": "autoexpr",
                    "value": "false"
                  },
                  {
                    "apiValue": "off",
                    "description": "Unit",
                    "name": "autounit",
                    "value": "false"
                  },
                  {
                    "description": [
                      "Prefix",
                      "Prefix and suffix"
                    ],
                    "name": "legendprefix"
                  },
                  {
                    "description": "Suffix",
                    "name": "legendsuffix"
                  },
                  {
                    "description": "Help",
                    "name": "legendallowexprshelp"
                  },
                  {
                    "description": "Precision",
                    "name": "legendexprprecision",
                    "scalarReal": "3.0",
                    "value": "3"
                  },
                  {
                    "apiValue": "normal",
                    "description": "Resolution",
                    "name": "resolution",
                    "value": "Normal"
                  },
                  {
                    "apiValue": "material",
                    "description": "Smoothing",
                    "name": "smooth",
                    "value": "Inside material domains"
                  },
                  {
                    "apiValue": "none",
                    "description": "Smoothing threshold",
                    "name": "threshold",
                    "value": "None"
                  },
                  {
                    "apiValue": "off",
                    "description": "Recover",
                    "name": "recover",
                    "value": "false"
                  }
                ],
                "tag": "lngr1",
                "type": "Line_graph",
                "windowType": 1
              },
              {
                "apiClass": "ResultFeature",
                "apiType": "LineGraph",
                "author": "COMSOL",
                "created": "1696094748750",
                "displayLabel": "Simulation Second Harmonic",
                "icon": "plot_line_graph.png",
                "label": "Simulation Second Harmonic",
                "lastModified": "1696094761629",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/result/feature/pg4/feature/lngr2",
                "settings": [
                  {
                    "apiValue": "off",
                    "description": "Plot on secondary y-axis",
                    "name": "plotonsecyaxis",
                    "value": "false"
                  },
                  {
                    "description": "Expression",
                    "name": "expr",
                    "value": "ewfd2.Ey*conj(ewfd2.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd2.freq)"
                  },
                  {
                    "apiValue": "1/(m^2*s)",
                    "description": "Unit",
                    "name": "unit",
                    "value": "1/(m^2*s)"
                  },
                  {
                    "description": "Description",
                    "name": "descr",
                    "value": "ewfd2.Ey*conj(ewfd2.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd2.freq)"
                  },
                  {
                    "apiValue": "auto",
                    "description": "Title type",
                    "name": "titletype",
                    "value": "Automatic"
                  },
                  {
                    "apiValue": "expr",
                    "description": "Parameter",
                    "name": "xdata",
                    "value": "Expression"
                  },
                  {
                    "description": "Expression",
                    "name": "xdataexpr",
                    "value": "x"
                  },
                  {
                    "apiValue": "m",
                    "description": "Unit",
                    "name": "xdataunit",
                    "value": "m"
                  },
                  {
                    "description": "Description",
                    "name": "xdatadescr",
                    "value": "x-coordinate"
                  },
                  {
                    "apiValue": "none",
                    "description": [
                      "Line",
                      "Line style"
                    ],
                    "name": "linestyle",
                    "value": "None"
                  },
                  {
                    "apiValue": "cycle",
                    "description": "Color",
                    "name": "linecolor",
                    "value": "Cycle"
                  },
                  {
                    "apiValue": "default",
                    "description": "Color cycle",
                    "name": "colorcycle",
                    "value": "Default"
                  },
                  {
                    "apiValue": "5",
                    "description": "Width",
                    "name": "linewidth",
                    "scalarReal": "5.0",
                    "value": "5"
                  },
                  {
                    "description": "Width",
                    "name": "linewidthslider",
                    "scalarReal": "5.0",
                    "value": "5"
                  },
                  {
                    "apiValue": "diamond",
                    "description": [
                      "Marker",
                      "Line markers"
                    ],
                    "name": "linemarker",
                    "value": "Diamond"
                  },
                  {
                    "apiValue": "interp",
                    "description": "Positioning",
                    "name": "markerpos",
                    "value": "Interpolated"
                  },
                  {
                    "description": "Number",
                    "name": "markers",
                    "scalarReal": "20.0",
                    "value": "20"
                  },
                  {
                    "apiValue": "on",
                    "description": "Show legends",
                    "name": "legend",
                    "value": "true"
                  },
                  {
                    "apiValue": "automatic",
                    "description": "Legends",
                    "name": "legendmethod",
                    "value": "Automatic"
                  },
                  {
                    "apiValue": "on",
                    "description": [
                      "Label",
                      "Include"
                    ],
                    "name": "autoplotlabel",
                    "value": "true"
                  },
                  {
                    "apiValue": "off",
                    "description": "Solution",
                    "name": "autosolution",
                    "value": "false"
                  },
                  {
                    "apiValue": "off",
                    "description": "Description",
                    "name": "autodescr",
                    "value": "false"
                  },
                  {
                    "apiValue": "off",
                    "description": "Expression",
                    "name": "autoexpr",
                    "value": "false"
                  },
                  {
                    "apiValue": "off",
                    "description": "Unit",
                    "name": "autounit",
                    "value": "false"
                  },
                  {
                    "description": [
                      "Prefix",
                      "Prefix and suffix"
                    ],
                    "name": "legendprefix"
                  },
                  {
                    "description": "Suffix",
                    "name": "legendsuffix"
                  },
                  {
                    "description": "Help",
                    "name": "legendallowexprshelp"
                  },
                  {
                    "description": "Precision",
                    "name": "legendexprprecision",
                    "scalarReal": "3.0",
                    "value": "3"
                  },
                  {
                    "apiValue": "normal",
                    "description": "Resolution",
                    "name": "resolution",
                    "value": "Normal"
                  },
                  {
                    "apiValue": "material",
                    "description": "Smoothing",
                    "name": "smooth",
                    "value": "Inside material domains"
                  },
                  {
                    "apiValue": "none",
                    "description": "Smoothing threshold",
                    "name": "threshold",
                    "value": "None"
                  },
                  {
                    "apiValue": "off",
                    "description": "Recover",
                    "name": "recover",
                    "value": "false"
                  }
                ],
                "tag": "lngr2",
                "type": "Line_graph",
                "windowType": 1
              },
              {
                "apiClass": "ResultFeature",
                "apiType": "LineGraph",
                "author": "COMSOL",
                "created": "1696094750004",
                "displayLabel": "Slowly Varying Envelope Approximation (SVEA) Fundamental",
                "icon": "plot_line_graph.png",
                "label": "Slowly Varying Envelope Approximation (SVEA) Fundamental",
                "lastModified": "1696094761629",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/result/feature/pg4/feature/lngr3",
                "settings": [
                  {
                    "apiValue": "off",
                    "description": "Plot on secondary y-axis",
                    "name": "plotonsecyaxis",
                    "value": "false"
                  },
                  {
                    "description": "Expression",
                    "name": "expr",
                    "value": "(sech(gamma*(x - offset)/2))^2*I1/hbar_const/(2*pi*ewfd1.freq)"
                  },
                  {
                    "apiValue": "1/(m^2*s)",
                    "description": "Unit",
                    "name": "unit",
                    "value": "1/(m^2*s)"
                  },
                  {
                    "description": "Description",
                    "name": "descr",
                    "value": "(sech(gamma*(x - offset)/2))^2*I1/hbar_const/(2*pi*ewfd1.freq)"
                  },
                  {
                    "apiValue": "auto",
                    "description": "Title type",
                    "name": "titletype",
                    "value": "Automatic"
                  },
                  {
                    "apiValue": "expr",
                    "description": "Parameter",
                    "name": "xdata",
                    "value": "Expression"
                  },
                  {
                    "description": "Expression",
                    "name": "xdataexpr",
                    "value": "x"
                  },
                  {
                    "apiValue": "m",
                    "description": "Unit",
                    "name": "xdataunit",
                    "value": "m"
                  },
                  {
                    "description": "Description",
                    "name": "xdatadescr",
                    "value": "x-coordinate"
                  },
                  {
                    "apiValue": "solid",
                    "description": [
                      "Line",
                      "Line style"
                    ],
                    "name": "linestyle",
                    "value": "Solid"
                  },
                  {
                    "apiValue": "cycle",
                    "description": "Color",
                    "name": "linecolor",
                    "value": "Cycle"
                  },
                  {
                    "apiValue": "default",
                    "description": "Color cycle",
                    "name": "colorcycle",
                    "value": "Default"
                  },
                  {
                    "apiValue": "2",
                    "description": "Width",
                    "name": "linewidth",
                    "scalarReal": "2.0",
                    "value": "2"
                  },
                  {
                    "description": "Width",
                    "name": "linewidthslider",
                    "scalarReal": "2.0",
                    "value": "2"
                  },
                  {
                    "apiValue": "none",
                    "description": [
                      "Marker",
                      "Line markers"
                    ],
                    "name": "linemarker",
                    "value": "None"
                  },
                  {
                    "apiValue": "on",
                    "description": "Show legends",
                    "name": "legend",
                    "value": "true"
                  },
                  {
                    "apiValue": "manual",
                    "description": "Legends",
                    "name": "legendmethod",
                    "value": "Manual"
                  },
                  {
                    "apiValue": "normal",
                    "description": "Resolution",
                    "name": "resolution",
                    "value": "Normal"
                  },
                  {
                    "apiValue": "material",
                    "description": "Smoothing",
                    "name": "smooth",
                    "value": "Inside material domains"
                  },
                  {
                    "apiValue": "none",
                    "description": "Smoothing threshold",
                    "name": "threshold",
                    "value": "None"
                  },
                  {
                    "apiValue": "off",
                    "description": "Recover",
                    "name": "recover",
                    "value": "false"
                  }
                ],
                "tag": "lngr3",
                "type": "Line_graph",
                "windowType": 1
              },
              {
                "apiClass": "ResultFeature",
                "apiType": "LineGraph",
                "author": "COMSOL",
                "created": "1696094751561",
                "displayLabel": "Slowly Varying Envelope Approximation (SVEA) Second Harmonic",
                "icon": "plot_line_graph.png",
                "label": "Slowly Varying Envelope Approximation (SVEA) Second Harmonic",
                "lastModified": "1696094761629",
                "lastModifiedBy": "COMSOL",
                "modelEntityPath": "/result/feature/pg4/feature/lngr4",
                "settings": [
                  {
                    "apiValue": "off",
                    "description": "Plot on secondary y-axis",
                    "name": "plotonsecyaxis",
                    "value": "false"
                  },
                  {
                    "description": "Expression",
                    "name": "expr",
                    "value": "(tanh(gamma*(x - offset)/2))^2*I1/hbar_const/(2*pi*ewfd2.freq)"
                  },
                  {
                    "apiValue": "1/(m^2*s)",
                    "description": "Unit",
                    "name": "unit",
                    "value": "1/(m^2*s)"
                  },
                  {
                    "description": "Description",
                    "name": "descr",
                    "value": "(tanh(gamma*(x - offset)/2))^2*I1/hbar_const/(2*pi*ewfd2.freq)"
                  },
                  {
                    "apiValue": "auto",
                    "description": "Title type",
                    "name": "titletype",
                    "value": "Automatic"
                  },
                  {
                    "apiValue": "expr",
                    "description": "Parameter",
                    "name": "xdata",
                    "value": "Expression"
                  },
                  {
                    "description": "Expression",
                    "name": "xdataexpr",
                    "value": "x"
                  },
                  {
                    "apiValue": "m",
                    "description": "Unit",
                    "name": "xdataunit",
                    "value": "m"
                  },
                  {
                    "description": "Description",
                    "name": "xdatadescr",
                    "value": "x-coordinate"
                  },
                  {
                    "apiValue": "solid",
                    "description": [
                      "Line",
                      "Line style"
                    ],
                    "name": "linestyle",
                    "value": "Solid"
                  },
                  {
                    "apiValue": "cycle",
                    "description": "Color",
                    "name": "linecolor",
                    "value": "Cycle"
                  },
                  {
                    "apiValue": "default",
                    "description": "Color cycle",
                    "name": "colorcycle",
                    "value": "Default"
                  },
                  {
                    "apiValue": "2",
                    "description": "Width",
                    "name": "linewidth",
                    "scalarReal": "2.0",
                    "value": "2"
                  },
                  {
                    "description": "Width",
                    "name": "linewidthslider",
                    "scalarReal": "2.0",
                    "value": "2"
                  },
                  {
                    "apiValue": "none",
                    "description": [
                      "Marker",
                      "Line markers"
                    ],
                    "name": "linemarker",
                    "value": "None"
                  },
                  {
                    "apiValue": "on",
                    "description": "Show legends",
                    "name": "legend",
                    "value": "true"
                  },
                  {
                    "apiValue": "manual",
                    "description": "Legends",
                    "name": "legendmethod",
                    "value": "Manual"
                  },
                  {
                    "apiValue": "normal",
                    "description": "Resolution",
                    "name": "resolution",
                    "value": "Normal"
                  },
                  {
                    "apiValue": "material",
                    "description": "Smoothing",
                    "name": "smooth",
                    "value": "Inside material domains"
                  },
                  {
                    "apiValue": "none",
                    "description": "Smoothing threshold",
                    "name": "threshold",
                    "value": "None"
                  },
                  {
                    "apiValue": "off",
                    "description": "Recover",
                    "name": "recover",
                    "value": "false"
                  }
                ],
                "tag": "lngr4",
                "type": "Line_graph",
                "windowType": 1
              }
            ],
            "settings": [
              {
                "apiValue": "off",
                "description": "Save plot data",
                "name": "savedatainmodel",
                "value": "false"
              },
              {
                "apiValue": "manual",
                "description": "Title type",
                "name": "titletype",
                "value": "Manual"
              },
              {
                "apiValue": "fromtheme",
                "description": "Color",
                "name": "titlecolor",
                "value": "From theme"
              },
              {
                "apiValue": "default",
                "description": "Number format",
                "name": "titlenumberformat",
                "value": "Default"
              },
              {
                "description": "Title",
                "name": "title"
              },
              {
                "description": "Parameter indicator",
                "name": "paramindicator"
              },
              {
                "description": "Help",
                "name": "help1"
              },
              {
                "description": "Help",
                "name": "help2"
              },
              {
                "description": "Help",
                "name": "help3"
              },
              {
                "description": "x-axis label",
                "name": "xlabel",
                "value": "x-coordinate (m)"
              },
              {
                "apiValue": "off",
                "description": "x-axis label",
                "name": "xlabelactive",
                "value": "false"
              },
              {
                "description": "y-axis label",
                "name": "ylabel",
                "value": "Photon Flux Density (photons per m^2 s)"
              },
              {
                "apiValue": "on",
                "description": "y-axis label",
                "name": "ylabelactive",
                "value": "true"
              },
              {
                "apiValue": "off",
                "description": "Two y-axes",
                "name": "twoyaxes",
                "value": "false"
              },
              {
                "apiValue": "off",
                "description": "Flip the x- and y-axes",
                "name": "switchxy",
                "value": "false"
              },
              {
                "apiValue": "off",
                "description": "Manual axis limits",
                "name": "axislimits",
                "value": "false"
              },
              {
                "apiValue": "off",
                "description": "Preserve aspect ratio",
                "name": "preserveaspect",
                "value": "false"
              },
              {
                "apiValue": "off",
                "description": "x-axis log scale",
                "name": "xlog",
                "value": "false"
              },
              {
                "apiValue": "off",
                "description": "y-axis log scale",
                "name": "ylog",
                "value": "false"
              },
              {
                "apiValue": "on",
                "description": "Show grid",
                "name": "showgrid",
                "value": "true"
              },
              {
                "apiValue": "off",
                "description": "Manual spacing",
                "name": "manualgrid",
                "value": "false"
              },
              {
                "apiValue": "on",
                "description": "Show legends",
                "name": "showlegends",
                "value": "true"
              },
              {
                "apiValue": "inside",
                "description": "Layout",
                "name": "legendlayout",
                "value": "Inside graph axis area"
              },
              {
                "apiValue": "upperright",
                "description": "Position",
                "name": "legendpos",
                "value": "Upper right"
              },
              {
                "description": "Number of columns",
                "name": "legendcolumncount",
                "scalarReal": "1.0",
                "value": "1"
              },
              {
                "description": "Maximum relative width",
                "name": "legendmaxwidthinside",
                "scalarReal": "0.5",
                "value": "0.5"
              },
              {
                "apiValue": "off",
                "description": "Manual axis settings",
                "name": "axisactive",
                "value": "false"
              },
              {
                "apiValue": "graphics",
                "description": "Plot window",
                "name": "window",
                "value": "Graphics"
              }
            ],
            "tag": "pg4",
            "type": "1D_plot_group",
            "windowType": 1
          },
          {
            "apiClass": "ExportFeatureList",
            "author": "COMSOL",
            "created": "1696094700122",
            "displayLabel": "Export",
            "icon": "results_export.png",
            "label": "Export",
            "lastModified": "0",
            "lastModifiedBy": "COMSOL",
            "modelEntityPath": "/result/export",
            "tag": "export",
            "type": "Export[noun]",
            "windowType": 1
          },
          {
            "apiClass": "ReportFeatureList",
            "author": "COMSOL",
            "created": "1696094700170",
            "displayLabel": "Reports",
            "icon": "results_report.png",
            "label": "Reports",
            "lastModified": "0",
            "lastModifiedBy": "COMSOL",
            "modelEntityPath": "/result/report",
            "tag": "report",
            "type": "Reports",
            "windowType": 1
          }
        ],
        "settings": [
          {
            "apiValue": "off",
            "description": "Only plot when requested",
            "name": "onlyplotwhenrequested",
            "value": "false"
          },
          {
            "apiValue": "off",
            "description": "Recompute all plot data after solving",
            "name": "autoregenerateplot",
            "value": "false"
          },
          {
            "apiValue": "off",
            "description": "Reevaluate all evaluation groups after solving",
            "name": "autoregenerateevalgroups",
            "value": "false"
          },
          {
            "apiValue": "AUTOMATIC",
            "description": "Save plot data",
            "name": "saveplotdatainmodel",
            "value": "Automatic"
          }
        ],
        "tag": "result",
        "type": "Results",
        "windowType": 1
      }
    ],
    "settings": [
      {
        "apiValue": "SI",
        "description": "Unit system",
        "name": "basesystem",
        "value": "SI"
      },
      {
        "apiValue": "automatic",
        "description": "Graphics color theme",
        "name": "colortheme",
        "value": "Default from application theme (Default)"
      },
      {
        "apiValue": "automatic",
        "description": "Image export color theme",
        "name": "imagecolortheme",
        "value": "Default from image export theme (Default)"
      },
      {
        "apiValue": "automatic",
        "description": [
          "Family",
          "Font"
        ],
        "name": "fontfamily",
        "value": "Default from preferences (Vera)"
      },
      {
        "apiValue": "default",
        "description": "Size",
        "name": "fontsize",
        "value": "Default size"
      },
      {
        "apiValue": "off",
        "description": "Ask to save application when closing",
        "name": "asktosave",
        "value": "false"
      },
      {
        "apiValue": "edit",
        "description": "When starting with COMSOL Multiphysics",
        "name": "startmode",
        "value": "Edit application"
      },
      {
        "apiValue": "off",
        "description": "Ignore license errors during launch",
        "name": "ignorelicenseerrors",
        "value": "false"
      },
      {
        "apiValue": "off",
        "description": "Use built-in COMSOL resources",
        "name": "localize",
        "value": "false"
      }
    ],
    "tag": "Model",
    "title": "Second Harmonic Generation in the Frequency Domain",
    "type": "Root",
    "windowType": 1
  },
  "code_segments": [
    {
      "segment_id": 1,
      "start_line": 1,
      "end_line": 13,
      "code_description": "This code segment initializes a COMSOL model for simulating second harmonic generation in the frequency domain.",
      "modeling_purpose": "This step is needed to set up the model environment and specify the model path for the simulation.",
      "comsol_ids": [
        "ModelUtil.create('Model')",
        "model.modelPath()"
      ],
      "category": "other",
      "key_operations": [
        "create model",
        "set model path"
      ],
      "code": "function out = model\n%\n% second_harmonic_generation_frequency_domain.m\n%\n% Model exported on May 26 2025, 21:34 by COMSOL 6.2.0.339.\n\nimport com.comsol.model.*\nimport com.comsol.model.util.*\n\nmodel = ModelUtil.create('Model');\n\nmodel.modelPath('/Applications/COMSOL62/Multiphysics/applications/Wave_Optics_Module/Verification_Examples');"
    },
    {
      "segment_id": 2,
      "start_line": 14,
      "end_line": 15,
      "code_description": "Creates a component named 'comp1' in the model",
      "modeling_purpose": "Needed to organize the model into different components for better management and readability",
      "comsol_ids": [
        "comp1"
      ],
      "category": "other",
      "key_operations": [
        "create_component"
      ],
      "code": "model.modelNode.create('comp1', true);"
    },
    {
      "segment_id": 3,
      "start_line": 16,
      "end_line": 16,
      "code_description": "Creates a 2D geometry named 'geom1' in the COMSOL model",
      "modeling_purpose": "This step is needed to define the geometry for the simulation domain",
      "comsol_ids": [
        "geom1"
      ],
      "category": "geometry",
      "key_operations": [
        "create"
      ],
      "code": "model.geom.create('geom1', 2);"
    },
    {
      "segment_id": 4,
      "start_line": 17,
      "end_line": 18,
      "code_description": "Accesses the geometry and component of the COMSOL model",
      "modeling_purpose": "This step is needed to set up the geometry and component for the simulation",
      "comsol_ids": [
        "geom1",
        "comp1"
      ],
      "category": "geometry",
      "key_operations": [
        "access_geometry",
        "access_component"
      ],
      "code": "model.geom('geom1').model('comp1');"
    },
    {
      "segment_id": 5,
      "start_line": 19,
      "end_line": 20,
      "code_description": "Creates a mesh named 'mesh1' based on the geometry 'geom1'",
      "modeling_purpose": "This step is needed to generate a mesh for the geometry, which is required for the simulation to solve the physics equations",
      "comsol_ids": [
        "mesh1",
        "geom1"
      ],
      "category": "mesh",
      "key_operations": [
        "create mesh"
      ],
      "code": "model.mesh.create('mesh1', 'geom1');"
    },
    {
      "segment_id": 6,
      "start_line": 21,
      "end_line": 21,
      "code_description": "Creates an Electromagnetic Waves, Frequency Domain physics interface for the fundamental wave",
      "modeling_purpose": "To model the propagation of the fundamental wave in the second harmonic generation process",
      "comsol_ids": [
        "ewfd"
      ],
      "category": "physics",
      "key_operations": [
        "create"
      ],
      "code": "model.physics.create('ewfd', 'ElectromagneticWavesFrequencyDomain', 'geom1');"
    },
    {
      "segment_id": 7,
      "start_line": 22,
      "end_line": 22,
      "code_description": "Accesses the Electromagnetic Waves, Frequency Domain interface and its model in component 1",
      "modeling_purpose": "This step is needed to set up the physics of the model for the fundamental wave and the second harmonic wave",
      "comsol_ids": [
        "ewfd",
        "comp1"
      ],
      "category": "physics",
      "key_operations": [
        "access_interface",
        "access_model"
      ],
      "code": "model.physics('ewfd').model('comp1');"
    },
    {
      "segment_id": 8,
      "start_line": 23,
      "end_line": 23,
      "code_description": "Creates a second Electromagnetic Waves, Frequency Domain interface for the second harmonic wave",
      "modeling_purpose": "To simulate the second harmonic generation process",
      "comsol_ids": [
        "ewfd2"
      ],
      "category": "physics",
      "key_operations": [
        "create"
      ],
      "code": "model.physics.create('ewfd2', 'ElectromagneticWavesFrequencyDomain', 'geom1');"
    },
    {
      "segment_id": 9,
      "start_line": 24,
      "end_line": 25,
      "code_description": "Sets up the Electromagnetic Waves, Frequency Domain interface for the second harmonic wave in component 1",
      "modeling_purpose": "This step is needed to define the physics governing the second harmonic wave propagation in the simulation",
      "comsol_ids": [
        "ewfd2",
        "comp1"
      ],
      "category": "physics",
      "key_operations": [
        "model"
      ],
      "code": "model.physics('ewfd2').model('comp1');"
    },
    {
      "segment_id": 10,
      "start_line": 26,
      "end_line": 26,
      "code_description": "Creates a new study with the identifier 'std1'.",
      "modeling_purpose": "This step is needed to set up the study for the simulation, which will be used to solve the model and analyze the results.",
      "comsol_ids": [
        "std1"
      ],
      "category": "study",
      "key_operations": [
        "create"
      ],
      "code": "model.study.create('std1');"
    },
    {
      "segment_id": 11,
      "start_line": 27,
      "end_line": 27,
      "code_description": "Creates a frequency study in the model",
      "modeling_purpose": "To analyze the frequency domain behavior of the second harmonic generation process",
      "comsol_ids": [
        "std1"
      ],
      "category": "study",
      "key_operations": [
        "create"
      ],
      "code": "model.study('std1').create('freq', 'Frequency');"
    },
    {
      "segment_id": 12,
      "start_line": 28,
      "end_line": 28,
      "code_description": "Sets the solution number for the frequency domain study to 'auto'",
      "modeling_purpose": "This step is needed to automatically determine the appropriate solution number for the frequency domain study in the simulation",
      "comsol_ids": [
        "std1",
        "freq"
      ],
      "category": "study",
      "key_operations": [
        "set('solnum', 'auto')"
      ],
      "code": "model.study('std1').feature('freq').set('solnum', 'auto');"
    },
    {
      "segment_id": 13,
      "start_line": 29,
      "end_line": 29,
      "code_description": "Sets the solution number to automatic for the frequency domain study",
      "modeling_purpose": "Determines the number of solutions to compute for the frequency domain study in the model",
      "comsol_ids": [
        "std1",
        "freq"
      ],
      "category": "study",
      "key_operations": [
        "set"
      ],
      "code": "model.study('std1').feature('freq').set('notsolnum', 'auto');"
    },
    {
      "segment_id": 14,
      "start_line": 30,
      "end_line": 30,
      "code_description": "Sets the output map for the frequency domain study",
      "modeling_purpose": "This step is needed to define the output settings for the frequency domain study in the simulation",
      "comsol_ids": [
        "std1",
        "freq"
      ],
      "category": "study",
      "key_operations": [
        "set"
      ],
      "code": "model.study('std1').feature('freq').set('outputmap', {});"
    },
    {
      "segment_id": 15,
      "start_line": 31,
      "end_line": 31,
      "code_description": "Sets the number of auxiliary sweeps for the frequency study",
      "modeling_purpose": "To refine the frequency study and obtain more accurate results",
      "comsol_ids": [
        "std1",
        "freq"
      ],
      "category": "study",
      "key_operations": [
        "set"
      ],
      "code": "model.study('std1').feature('freq').set('ngenAUX', '1');"
    },
    {
      "segment_id": 16,
      "start_line": 32,
      "end_line": 32,
      "code_description": "Sets the number of generated auxiliary variables for the frequency study",
      "modeling_purpose": "This step is needed to control the number of auxiliary variables generated during the frequency study, which can help in analyzing the second harmonic generation process",
      "comsol_ids": [
        "std1",
        "freq"
      ],
      "category": "study",
      "key_operations": [
        "set"
      ],
      "code": "model.study('std1').feature('freq').set('goalngenAUX', '1');"
    },
    {
      "segment_id": 17,
      "start_line": 33,
      "end_line": 33,
      "code_description": "Sets the number of auxiliary sweeps for the frequency study",
      "modeling_purpose": "To refine the frequency study and obtain more accurate results for the second harmonic generation process",
      "comsol_ids": [
        "std1",
        "freq"
      ],
      "category": "study",
      "key_operations": [
        "set"
      ],
      "code": "model.study('std1').feature('freq').set('ngenAUX', '1');"
    },
    {
      "segment_id": 18,
      "start_line": 34,
      "end_line": 34,
      "code_description": "Sets the number of generated auxiliary variables for the frequency study",
      "modeling_purpose": "This step is needed to control the number of auxiliary variables generated during the frequency study, which can affect the accuracy and computational efficiency of the simulation",
      "comsol_ids": [
        "std1",
        "freq"
      ],
      "category": "study",
      "key_operations": [
        "set('goalngenAUX', '1')"
      ],
      "code": "model.study('std1').feature('freq').set('goalngenAUX', '1');"
    },
    {
      "segment_id": 19,
      "start_line": 35,
      "end_line": 35,
      "code_description": "Sets up the study to solve for the electromagnetic waves in the frequency domain physics interface",
      "modeling_purpose": "This step is needed to configure the solver to compute the electromagnetic field distribution for the fundamental wave and the second harmonic wave",
      "comsol_ids": [
        "std1",
        "freq",
        "ewfd"
      ],
      "category": "study",
      "key_operations": [
        "setSolveFor"
      ],
      "code": "model.study('std1').feature('freq').setSolveFor('/physics/ewfd', true);"
    },
    {
      "segment_id": 20,
      "start_line": 36,
      "end_line": 51,
      "code_description": "Sets up parameters for the simulation, including wavelengths, frequencies, simulation dimensions, and material properties",
      "modeling_purpose": "These parameters are necessary to define the geometry, materials, and physics of the second harmonic generation simulation",
      "comsol_ids": [
        "std1",
        "freq"
      ],
      "category": "parameters",
      "key_operations": [
        "setSolveFor",
        "set"
      ],
      "code": "model.study('std1').feature('freq').setSolveFor('/physics/ewfd2', true);\n\n% To import content from file, use:\n% model.param.loadFile('FILENAME');\nmodel.param.set('lambda1', '1.064[um]', 'Fundamental wavelength');\nmodel.param.set('f1', 'c_const/lambda1', 'Fundamental frequency');\nmodel.param.set('f2', '2*f1', 'Second harmonic frequency');\nmodel.param.set('lambda2', 'c_const/f2', 'Second harmonic wavelength');\nmodel.param.set('sim_l', 'lambda1*25', 'Simulation length');\nmodel.param.set('sim_h', 'lambda2/16', 'Simulation height');\nmodel.param.set('d', '1e-18[C/V^2]', 'Nonlinear coefficient');\nmodel.param.set('L', 'sim_l - 3*lambda1', 'Length of nonlinear region');\nmodel.param.set('I1', '30[MW/m^2]', 'Incident fundamental intensity');\nmodel.param.set('E1', 'sqrt(2*I1/c_const/epsilon0_const)', 'Incident fundamental electric field strength');\nmodel.param.set('offset', '1.5*lambda1', 'Start of nonlinear region');"
    },
    {
      "segment_id": 21,
      "start_line": 52,
      "end_line": 52,
      "code_description": "Creates a rectangle geometry object named 'r1' in the geometry 'geom1'",
      "modeling_purpose": "Defines the geometry for the simulation domain",
      "comsol_ids": [
        "geom1",
        "r1"
      ],
      "category": "geometry",
      "key_operations": [
        "create"
      ],
      "code": "model.geom('geom1').create('r1', 'Rectangle');"
    },
    {
      "segment_id": 22,
      "start_line": 53,
      "end_line": 53,
      "code_description": "Sets the size of the geometry object 'r1' in 'geom1' to 'sim_l' and 'sim_h'",
      "modeling_purpose": "Adjusting the geometry size to match the simulation domain for the second harmonic generation process",
      "comsol_ids": [
        "geom1",
        "r1"
      ],
      "category": "geometry",
      "key_operations": [
        "set size"
      ],
      "code": "model.geom('geom1').feature('r1').set('size', {'sim_l' 'sim_h'});"
    },
    {
      "segment_id": 23,
      "start_line": 54,
      "end_line": 54,
      "code_description": "Sets the refractive index of 'Layer 1' to 0 in the geometry 'geom1', feature 'r1'",
      "modeling_purpose": "To perfectly match the refractive index for each frequency in the second harmonic generation process",
      "comsol_ids": [
        "geom1",
        "r1"
      ],
      "category": "geometry",
      "key_operations": [
        "setIndex"
      ],
      "code": "model.geom('geom1').feature('r1').setIndex('layername', 'Layer 1', 0);"
    },
    {
      "segment_id": 24,
      "start_line": 55,
      "end_line": 55,
      "code_description": "Sets the layer offset to 0 for the geometry object 'geom1', feature 'r1'",
      "modeling_purpose": "This step is needed to define the geometry of the model accurately",
      "comsol_ids": [
        "geom1",
        "r1"
      ],
      "category": "geometry",
      "key_operations": [
        "setIndex"
      ],
      "code": "model.geom('geom1').feature('r1').setIndex('layer', 'offset', 0);"
    },
    {
      "segment_id": 25,
      "start_line": 56,
      "end_line": 56,
      "code_description": "Sets the 'layerleft' property of the 'r1' feature in the 'geom1' geometry to true",
      "modeling_purpose": "This step is needed to define the geometry for the simulation",
      "comsol_ids": [
        "geom1",
        "r1"
      ],
      "category": "geometry",
      "key_operations": [
        "set"
      ],
      "code": "model.geom('geom1').feature('r1').set('layerleft', true);"
    },
    {
      "segment_id": 26,
      "start_line": 57,
      "end_line": 57,
      "code_description": "Sets the 'layerright' property of the 'r1' feature in the 'geom1' geometry to true",
      "modeling_purpose": "This step is needed to define the geometry for the simulation",
      "comsol_ids": [
        "geom1",
        "r1"
      ],
      "category": "geometry",
      "key_operations": [
        "set"
      ],
      "code": "model.geom('geom1').feature('r1').set('layerright', true);"
    },
    {
      "segment_id": 27,
      "start_line": 58,
      "end_line": 61,
      "code_description": "Disables the bottom layer of the geometry and sets the view axis scaling to automatic",
      "modeling_purpose": "This step is needed to simplify the geometry and adjust the view for better visualization",
      "comsol_ids": [
        "geom1",
        "view1"
      ],
      "category": "geometry|results",
      "key_operations": [
        "set('layerbottom', false)",
        "set('viewscaletype', 'automatic')"
      ],
      "code": "model.geom('geom1').feature('r1').set('layerbottom', false);\n\nmodel.view('view1').axis.set('viewscaletype', 'automatic');"
    },
    {
      "segment_id": 28,
      "start_line": 62,
      "end_line": 63,
      "code_description": "Runs the geometry sequence 'geom1' to create the geometry for the simulation",
      "modeling_purpose": "This step is needed to create the geometry for the second harmonic generation simulation",
      "comsol_ids": [
        "geom1"
      ],
      "category": "geometry",
      "key_operations": [
        "run"
      ],
      "code": "model.geom('geom1').run;"
    },
    {
      "segment_id": 29,
      "start_line": 64,
      "end_line": 64,
      "code_description": "Creates a new material with the name 'mat1' in the component 'comp1' using the 'Common' material model",
      "modeling_purpose": "This step is needed to define the material properties for the simulation, which will be used to set up the physics interfaces and boundary conditions",
      "comsol_ids": [
        "mat1"
      ],
      "category": "materials",
      "key_operations": [
        "create material"
      ],
      "code": "model.material.create('mat1', 'Common', 'comp1');"
    },
    {
      "segment_id": 30,
      "start_line": 65,
      "end_line": 65,
      "code_description": "Creates a property group for refractive index in material 'mat1'",
      "modeling_purpose": "Defines the refractive index properties for the material used in the simulation",
      "comsol_ids": [
        "mat1",
        "RefractiveIndex"
      ],
      "category": "materials",
      "key_operations": [
        "create",
        "propertyGroup"
      ],
      "code": "model.material('mat1').propertyGroup.create('RefractiveIndex', 'Refractive_index');"
    },
    {
      "segment_id": 31,
      "start_line": 66,
      "end_line": 66,
      "code_description": "Sets the refractive index of material 'mat1' to 1",
      "modeling_purpose": "To perfectly match the refractive index for each frequency in the second harmonic generation process",
      "comsol_ids": [
        "mat1",
        "RefractiveIndex"
      ],
      "category": "materials",
      "key_operations": [
        "set"
      ],
      "code": "model.material('mat1').propertyGroup('RefractiveIndex').set('n', {'1'});"
    },
    {
      "segment_id": 32,
      "start_line": 67,
      "end_line": 68,
      "code_description": "Sets the imaginary part of the refractive index to zero for material 'mat1'",
      "modeling_purpose": "Ensures perfect matching of refractive index for each frequency in the second harmonic generation process",
      "comsol_ids": [
        "mat1",
        "RefractiveIndex"
      ],
      "category": "materials",
      "key_operations": [
        "set"
      ],
      "code": "model.material('mat1').propertyGroup('RefractiveIndex').set('ki', {'0'});"
    },
    {
      "segment_id": 33,
      "start_line": 69,
      "end_line": 69,
      "code_description": "Sets the label for the physics interface of the fundamental wave",
      "modeling_purpose": "This step is needed to organize and identify the physics interface for the fundamental wave in the simulation",
      "comsol_ids": [
        "ewfd"
      ],
      "category": "physics",
      "key_operations": [
        "label"
      ],
      "code": "model.physics('ewfd').label('Fundamental');"
    },
    {
      "segment_id": 34,
      "start_line": 70,
      "end_line": 70,
      "code_description": "Sets the tag for the Electromagnetic Waves, Frequency Domain interface to 'ewfd1'",
      "modeling_purpose": "This step is needed to differentiate between the two Electromagnetic Waves, Frequency Domain interfaces used in the model for the fundamental wave and the second harmonic",
      "comsol_ids": [
        "ewfd"
      ],
      "category": "physics",
      "key_operations": [
        "tag"
      ],
      "code": "model.physics('ewfd').tag('ewfd1');"
    },
    {
      "segment_id": 35,
      "start_line": 71,
      "end_line": 71,
      "code_description": "Sets the components of the Electromagnetic Waves, Frequency Domain interface to in-plane",
      "modeling_purpose": "This step is needed to define the direction of the electric field components for the fundamental wave",
      "comsol_ids": [
        "ewfd1"
      ],
      "category": "physics",
      "key_operations": [
        "set components to in-plane"
      ],
      "code": "model.physics('ewfd1').prop('components').set('components', 'inplane');"
    },
    {
      "segment_id": 36,
      "start_line": 72,
      "end_line": 72,
      "code_description": "Creates a polarization feature for the fundamental wave using the Electromagnetic Waves, Frequency Domain interface",
      "modeling_purpose": "To implement the coupling between the fundamental wave and the second harmonic wave in the second harmonic generation process",
      "comsol_ids": [
        "ewfd1",
        "pol1"
      ],
      "category": "physics",
      "key_operations": [
        "create"
      ],
      "code": "model.physics('ewfd1').create('pol1', 'Polarization', 2);"
    },
    {
      "segment_id": 37,
      "start_line": 73,
      "end_line": 73,
      "code_description": "Sets the selection for the polarization feature of the fundamental wave interface",
      "modeling_purpose": "This step is needed to define the domain where the polarization feature is active, which is used to couple the fundamental wave and the second harmonic wave in the SHG process",
      "comsol_ids": [
        "ewfd1",
        "pol1"
      ],
      "category": "physics",
      "key_operations": [
        "set selection"
      ],
      "code": "model.physics('ewfd1').feature('pol1').selection.set([2]);"
    },
    {
      "segment_id": 38,
      "start_line": 74,
      "end_line": 74,
      "code_description": "Sets the polarization coupling term between the fundamental wave and the second harmonic wave",
      "modeling_purpose": "To implement the coupling between the fundamental wave and the second harmonic wave in the second harmonic generation process",
      "comsol_ids": [
        "ewfd1",
        "ewfd2"
      ],
      "category": "physics",
      "key_operations": [
        "set polarization"
      ],
      "code": "model.physics('ewfd1').feature('pol1').set('P', {'0' '2*d*ewfd2.Ey*conj(ewfd1.Ey)' '0'});"
    },
    {
      "segment_id": 39,
      "start_line": 75,
      "end_line": 75,
      "code_description": "Creates a Scattering boundary condition for the fundamental wave interface",
      "modeling_purpose": "This step is needed to define the scattering boundary condition for the fundamental wave interface in the second harmonic generation process",
      "comsol_ids": [
        "ewfd1",
        "sctr1"
      ],
      "category": "physics",
      "key_operations": [
        "create"
      ],
      "code": "model.physics('ewfd1').create('sctr1', 'Scattering', 1);"
    },
    {
      "segment_id": 40,
      "start_line": 76,
      "end_line": 76,
      "code_description": "Sets the selection for the scattering feature of the first Electromagnetic Waves, Frequency Domain interface to domain 1",
      "modeling_purpose": "This step is needed to define the domain where the scattering feature is applied for the fundamental wave",
      "comsol_ids": [
        "ewfd1",
        "sctr1"
      ],
      "category": "physics",
      "key_operations": [
        "set selection"
      ],
      "code": "model.physics('ewfd1').feature('sctr1').selection.set([1]);"
    },
    {
      "segment_id": 41,
      "start_line": 77,
      "end_line": 77,
      "code_description": "Sets the incident field for the fundamental wave to EField",
      "modeling_purpose": "This step is needed to define the incident field for the fundamental wave in the second harmonic generation process",
      "comsol_ids": [
        "ewfd1",
        "sctr1"
      ],
      "category": "physics",
      "key_operations": [
        "set",
        "IncidentField"
      ],
      "code": "model.physics('ewfd1').feature('sctr1').set('IncidentField', 'EField');"
    },
    {
      "segment_id": 42,
      "start_line": 78,
      "end_line": 78,
      "code_description": "Sets the incident electric field for the fundamental wave in the second harmonic generation model",
      "modeling_purpose": "This step is needed to define the input electric field for the fundamental wave, which will interact with the second harmonic wave in the simulation",
      "comsol_ids": [
        "ewfd1",
        "sctr1"
      ],
      "category": "physics",
      "key_operations": [
        "set"
      ],
      "code": "model.physics('ewfd1').feature('sctr1').set('E0i', {'0' 'E1' '0'});"
    },
    {
      "segment_id": 43,
      "start_line": 79,
      "end_line": 79,
      "code_description": "Creates a Scattering boundary condition for the second harmonic wave in the frequency domain model",
      "modeling_purpose": "This step is needed to define the scattering behavior of the second harmonic wave at the boundaries of the computational domain",
      "comsol_ids": [
        "ewfd1",
        "sctr2"
      ],
      "category": "physics",
      "key_operations": [
        "create"
      ],
      "code": "model.physics('ewfd1').create('sctr2', 'Scattering', 1);"
    },
    {
      "segment_id": 44,
      "start_line": 80,
      "end_line": 80,
      "code_description": "Sets the selection for the scattering variable 'sctr2' in the 'ewfd1' physics interface to element 10",
      "modeling_purpose": "This step is needed to define the region where the scattering variable is applied in the second harmonic generation process",
      "comsol_ids": [
        "ewfd1",
        "sctr2"
      ],
      "category": "physics",
      "key_operations": [
        "set selection"
      ],
      "code": "model.physics('ewfd1').feature('sctr2').selection.set([10]);"
    },
    {
      "segment_id": 45,
      "start_line": 81,
      "end_line": 81,
      "code_description": "Defines the second harmonic wave physics using the Electromagnetic Waves, Frequency Domain interface",
      "modeling_purpose": "To simulate the second harmonic generation process in the frequency domain",
      "comsol_ids": [
        "ewfd2"
      ],
      "category": "physics",
      "key_operations": [
        "label"
      ],
      "code": "model.physics('ewfd2').label('Second Harmonic');"
    },
    {
      "segment_id": 46,
      "start_line": 82,
      "end_line": 82,
      "code_description": "Sets the components of the second harmonic wave to in-plane",
      "modeling_purpose": "This step is needed to define the direction of the second harmonic wave propagation in the simulation",
      "comsol_ids": [
        "ewfd2"
      ],
      "category": "physics",
      "key_operations": [
        "set components to in-plane"
      ],
      "code": "model.physics('ewfd2').prop('components').set('components', 'inplane');"
    },
    {
      "segment_id": 47,
      "start_line": 83,
      "end_line": 83,
      "code_description": "Sets the equation form of the second harmonic frequency domain interface to frequency form",
      "modeling_purpose": "This step is needed to define the frequency domain equation form for the second harmonic wave in the SHG process",
      "comsol_ids": [
        "ewfd2"
      ],
      "category": "physics",
      "key_operations": [
        "setIndex"
      ],
      "code": "model.physics('ewfd2').prop('EquationForm').setIndex('form', 'Frequency', 0);"
    },
    {
      "segment_id": 48,
      "start_line": 84,
      "end_line": 84,
      "code_description": "Sets the equation form for the second harmonic frequency domain interface to use a user-defined source term",
      "modeling_purpose": "This step is needed to define the coupling between the fundamental wave and the second harmonic wave in the second harmonic generation process",
      "comsol_ids": [
        "ewfd2"
      ],
      "category": "physics",
      "key_operations": [
        "setIndex"
      ],
      "code": "model.physics('ewfd2').prop('EquationForm').setIndex('freq_src', 'userdef', 0);"
    },
    {
      "segment_id": 49,
      "start_line": 85,
      "end_line": 85,
      "code_description": "Sets the equation form index for the second harmonic frequency domain interface",
      "modeling_purpose": "This step is needed to define the equation form for the second harmonic frequency domain interface in the multi-physics simulation of second harmonic generation",
      "comsol_ids": [
        "ewfd2"
      ],
      "category": "physics",
      "key_operations": [
        "setIndex"
      ],
      "code": "model.physics('ewfd2').prop('EquationForm').setIndex('freq', 'f2', 0);"
    },
    {
      "segment_id": 50,
      "start_line": 86,
      "end_line": 86,
      "code_description": "Creates a polarization feature for the second harmonic wave using the Electromagnetic Waves, Frequency Domain interface",
      "modeling_purpose": "To implement the coupling between the fundamental wave and the second harmonic wave in the second harmonic generation process",
      "comsol_ids": [
        "ewfd2",
        "pol1"
      ],
      "category": "physics",
      "key_operations": [
        "create"
      ],
      "code": "model.physics('ewfd2').create('pol1', 'Polarization', 2);"
    },
    {
      "segment_id": 51,
      "start_line": 87,
      "end_line": 87,
      "code_description": "Sets the selection for the polarization feature of the second harmonic wave to domain 2",
      "modeling_purpose": "This step is needed to define the coupling between the fundamental wave and the second harmonic wave in the second domain",
      "comsol_ids": [
        "ewfd2",
        "pol1"
      ],
      "category": "physics",
      "key_operations": [
        "set selection"
      ],
      "code": "model.physics('ewfd2').feature('pol1').selection.set([2]);"
    },
    {
      "segment_id": 52,
      "start_line": 88,
      "end_line": 88,
      "code_description": "Sets the polarization source term for the second harmonic generation process",
      "modeling_purpose": "This step is needed to define the coupling between the fundamental wave and the second harmonic wave in the frequency domain simulation",
      "comsol_ids": [
        "ewfd2",
        "pol1",
        "ewfd1"
      ],
      "category": "physics",
      "key_operations": [
        "set polarization source term"
      ],
      "code": "model.physics('ewfd2').feature('pol1').set('P', {'0' 'd*ewfd1.Ey*ewfd1.Ey' '0'});"
    },
    {
      "segment_id": 53,
      "start_line": 89,
      "end_line": 89,
      "code_description": "Creates a Scattering boundary condition for the second harmonic wave",
      "modeling_purpose": "This step is needed to define the scattering boundary condition for the second harmonic wave in the simulation",
      "comsol_ids": [
        "ewfd2",
        "sctr1"
      ],
      "category": "physics",
      "key_operations": [
        "create"
      ],
      "code": "model.physics('ewfd2').create('sctr1', 'Scattering', 1);"
    },
    {
      "segment_id": 54,
      "start_line": 90,
      "end_line": 91,
      "code_description": "Sets the selection for the scattering variable 'sctr1' in the 'ewfd2' physics interface to domains 1 and 10",
      "modeling_purpose": "This step is needed to define the domains where the second harmonic generation process occurs",
      "comsol_ids": [
        "ewfd2",
        "sctr1"
      ],
      "category": "physics",
      "key_operations": [
        "set selection"
      ],
      "code": "model.physics('ewfd2').feature('sctr1').selection.set([1 10]);"
    },
    {
      "segment_id": 55,
      "start_line": 92,
      "end_line": 92,
      "code_description": "Creates a mesh mapping named 'map1' of type 'Map' using the mesh named 'mesh1' in the model",
      "modeling_purpose": "This step is needed to create a mesh suitable for the simulation of the second harmonic generation process",
      "comsol_ids": [
        "mesh1",
        "map1"
      ],
      "category": "mesh",
      "key_operations": [
        "create"
      ],
      "code": "model.mesh('mesh1').create('map1', 'Map');"
    },
    {
      "segment_id": 56,
      "start_line": 93,
      "end_line": 93,
      "code_description": "Sets the mesh size to custom in the model",
      "modeling_purpose": "To have a finer control over the mesh size for accurate results in the second harmonic generation simulation",
      "comsol_ids": [
        "mesh1",
        "size"
      ],
      "category": "mesh",
      "key_operations": [
        "set",
        "custom"
      ],
      "code": "model.mesh('mesh1').feature('size').set('custom', true);"
    },
    {
      "segment_id": 57,
      "start_line": 94,
      "end_line": 94,
      "code_description": "Sets the maximum element size for the mesh to the value of the variable sim_h",
      "modeling_purpose": "This step is needed to control the mesh size for accurate simulation results",
      "comsol_ids": [
        "mesh1",
        "size"
      ],
      "category": "mesh",
      "key_operations": [
        "set maximum element size"
      ],
      "code": "model.mesh('mesh1').feature('size').set('hmax', 'sim_h');"
    },
    {
      "segment_id": 58,
      "start_line": 95,
      "end_line": 96,
      "code_description": "Sets the minimum mesh size to a variable 'sim_h' for mesh 'mesh1' in the model",
      "modeling_purpose": "This step is needed to control the mesh size for accurate simulation results",
      "comsol_ids": [
        "mesh1",
        "size"
      ],
      "category": "mesh",
      "key_operations": [
        "set_minimum_mesh_size"
      ],
      "code": "model.mesh('mesh1').feature('size').set('hmin', 'sim_h');"
    },
    {
      "segment_id": 59,
      "start_line": 97,
      "end_line": 101,
      "code_description": "Creates a variable 'var1' and sets its value to a coupling coefficient formula",
      "modeling_purpose": "To define the coupling coefficient for the second harmonic generation process",
      "comsol_ids": [
        "var1"
      ],
      "category": "parameters",
      "key_operations": [
        "create variable",
        "set variable value"
      ],
      "code": "model.variable.create('var1');\nmodel.variable('var1').model('comp1');\nmodel.variable('var1').set('gamma', 'sqrt(8*d^2*Z0_const^3*(2*pi*ewfd1.freq)^2*I1)');\nmodel.variable('var1').descr('gamma', 'Coupling coefficient');"
    },
    {
      "segment_id": 60,
      "start_line": 102,
      "end_line": 103,
      "code_description": "Sets the frequency list for the study 'std1' to 'f1'",
      "modeling_purpose": "This step is needed to define the frequency range for the study, which is important for the frequency domain analysis of the second harmonic generation process",
      "comsol_ids": [
        "std1",
        "freq"
      ],
      "category": "study",
      "key_operations": [
        "set_frequency_list"
      ],
      "code": "model.study('std1').feature('freq').set('plist', 'f1');"
    },
    {
      "segment_id": 61,
      "start_line": 104,
      "end_line": 104,
      "code_description": "Creates a solution object named 'sol1' for the model",
      "modeling_purpose": "To store and manage the solutions of the physics simulations",
      "comsol_ids": [
        "sol1"
      ],
      "category": "study",
      "key_operations": [
        "create_solution_object"
      ],
      "code": "model.sol.create('sol1');"
    },
    {
      "segment_id": 62,
      "start_line": 105,
      "end_line": 105,
      "code_description": "Solves the study 'std1' using the solution 'sol1' from the model",
      "modeling_purpose": "This step is needed to solve the study and obtain the results for analysis and comparison with the analytical solution",
      "comsol_ids": [
        "sol1",
        "std1"
      ],
      "category": "study",
      "key_operations": [
        "solve_study"
      ],
      "code": "model.sol('sol1').study('std1');"
    },
    {
      "segment_id": 63,
      "start_line": 106,
      "end_line": 108,
      "code_description": "Creates a study step for the frequency domain study",
      "modeling_purpose": "This step is needed to set up the frequency domain study for the second harmonic generation process",
      "comsol_ids": [
        "sol1",
        "st1",
        "std1",
        "freq"
      ],
      "category": "study",
      "key_operations": [
        "create",
        "set"
      ],
      "code": "model.sol('sol1').create('st1', 'StudyStep');\nmodel.sol('sol1').feature('st1').set('study', 'std1');\nmodel.sol('sol1').feature('st1').set('studystep', 'freq');"
    },
    {
      "segment_id": 64,
      "start_line": 109,
      "end_line": 110,
      "code_description": "Creates a new variable 'v1' in the solution 'sol1' and sets its control to frequency",
      "modeling_purpose": "This step is needed to define a variable for controlling the frequency in the study",
      "comsol_ids": [
        "sol1",
        "v1"
      ],
      "category": "study",
      "key_operations": [
        "create variable",
        "set control"
      ],
      "code": "model.sol('sol1').create('v1', 'Variables');\nmodel.sol('sol1').feature('v1').set('control', 'freq');"
    },
    {
      "segment_id": 65,
      "start_line": 111,
      "end_line": 112,
      "code_description": "Creates a stationary solver and sets the tolerance for the solution",
      "modeling_purpose": "This step is needed to set up the solver for the stationary study in the simulation",
      "comsol_ids": [
        "sol1",
        "s1"
      ],
      "category": "study",
      "key_operations": [
        "create",
        "set"
      ],
      "code": "model.sol('sol1').create('s1', 'Stationary');\nmodel.sol('sol1').feature('s1').set('stol', 0.01);"
    },
    {
      "segment_id": 66,
      "start_line": 113,
      "end_line": 130,
      "code_description": "Creates a parametric solver with frequency as the parameter and sets various solver settings",
      "modeling_purpose": "This step is needed to set up a parametric study for the frequency domain analysis of the second harmonic generation process",
      "comsol_ids": [
        "sol1",
        "s1",
        "p1"
      ],
      "category": "study",
      "key_operations": [
        "create parametric solver",
        "set solver settings"
      ],
      "code": "model.sol('sol1').feature('s1').create('p1', 'Parametric');\nmodel.sol('sol1').feature('s1').feature.remove('pDef');\nmodel.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});\nmodel.sol('sol1').feature('s1').feature('p1').set('plistarr', {'f1'});\nmodel.sol('sol1').feature('s1').feature('p1').set('punit', {'THz'});\nmodel.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');\nmodel.sol('sol1').feature('s1').feature('p1').set('preusesol', 'no');\nmodel.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');\nmodel.sol('sol1').feature('s1').feature('p1').set('plot', 'off');\nmodel.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'Default');\nmodel.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');\nmodel.sol('sol1').feature('s1').feature('p1').set('probes', {});\nmodel.sol('sol1').feature('s1').feature('p1').set('control', 'freq');\nmodel.sol('sol1').feature('s1').set('linpmethod', 'sol');\nmodel.sol('sol1').feature('s1').set('linpsol', 'zero');\nmodel.sol('sol1').feature('s1').set('control', 'freq');\nmodel.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);\nmodel.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);"
    },
    {
      "segment_id": 67,
      "start_line": 131,
      "end_line": 131,
      "code_description": "Creates a segregated solver for the solution 'sol1'",
      "modeling_purpose": "Needed to solve the multi-physics problem of second harmonic generation",
      "comsol_ids": [
        "sol1",
        "s1"
      ],
      "category": "study",
      "key_operations": [
        "create",
        "segregated"
      ],
      "code": "model.sol('sol1').feature('s1').create('seDef', 'Segregated');"
    },
    {
      "segment_id": 68,
      "start_line": 132,
      "end_line": 132,
      "code_description": "Creates a fully coupled solver for the solution 'sol1' using the 's1' study",
      "modeling_purpose": "Needed to solve the multi-physics problem involving second harmonic generation",
      "comsol_ids": [
        "sol1",
        "s1"
      ],
      "category": "study",
      "key_operations": [
        "create",
        "fully_coupled_solver"
      ],
      "code": "model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');"
    },
    {
      "segment_id": 69,
      "start_line": 133,
      "end_line": 143,
      "code_description": "Configures the solver settings for the study 'sol1', including the direct solver, tolerance, and splitting complex numbers",
      "modeling_purpose": "This step is needed to set up the solver for the second harmonic generation simulation, ensuring accurate and efficient computation of the electromagnetic waves",
      "comsol_ids": [
        "sol1",
        "s1",
        "d1",
        "fc1",
        "std1",
        "st1"
      ],
      "category": "study",
      "key_operations": [
        "create_direct_solver",
        "set_solver_settings",
        "remove_default_features",
        "attach_study",
        "set_split_complex",
        "set_tolerance",
        "run_study"
      ],
      "code": "model.sol('sol1').feature('s1').create('d1', 'Direct');\nmodel.sol('sol1').feature('s1').feature('d1').set('linsolver', 'mumps');\nmodel.sol('sol1').feature('s1').feature('d1').label('Suggested Direct Solver (ewfd1) (Merged)');\nmodel.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');\nmodel.sol('sol1').feature('s1').feature.remove('fcDef');\nmodel.sol('sol1').feature('s1').feature.remove('seDef');\nmodel.sol('sol1').attach('std1');\nmodel.sol('sol1').feature('st1').set('splitcomplex', true);\nmodel.sol('sol1').feature('s1').set('stol', 0.001);\nmodel.sol('sol1').runAll;"
    },
    {
      "segment_id": 70,
      "start_line": 144,
      "end_line": 149,
      "code_description": "Creates a 2D plot group for the electric field of the fundamental wave and sets its properties.",
      "modeling_purpose": "To visualize and analyze the electric field distribution of the fundamental wave in the second harmonic generation process.",
      "comsol_ids": [
        "pg1",
        "dset1",
        "pdef1",
        "pcond2"
      ],
      "category": "results",
      "key_operations": [
        "create plot group",
        "set plot properties"
      ],
      "code": "model.result.create('pg1', 'PlotGroup2D');\nmodel.result('pg1').label('Electric Field (ewfd1)');\nmodel.result('pg1').set('frametype', 'spatial');\nmodel.result('pg1').set('data', 'dset1');\nmodel.result('pg1').setIndex('looplevel', 1, 0);\nmodel.result('pg1').set('defaultPlotID', 'ElectromagneticWavesFrequencyDomain/phys1/pdef1/pcond2/pg1');"
    },
    {
      "segment_id": 71,
      "start_line": 150,
      "end_line": 152,
      "code_description": "Creates a smooth surface plot of the results from the 'pg1' plot group",
      "modeling_purpose": "To visualize the second harmonic generation process in the frequency domain",
      "comsol_ids": [
        "surf1"
      ],
      "category": "results",
      "key_operations": [
        "create_surface_plot",
        "set_surface_properties"
      ],
      "code": "model.result('pg1').feature.create('surf1', 'Surface');\nmodel.result('pg1').feature('surf1').set('smooth', 'internal');\nmodel.result('pg1').feature('surf1').set('data', 'parent');"
    },
    {
      "segment_id": 72,
      "start_line": 153,
      "end_line": 158,
      "code_description": "Creates a 2D plot group for the electric field of the second harmonic wave and sets its properties.",
      "modeling_purpose": "To visualize and analyze the electric field distribution of the second harmonic wave in the simulation.",
      "comsol_ids": [
        "pg2",
        "dset1",
        "ElectromagneticWavesFrequencyDomain/phys1/pdef1/pcond2/pg1"
      ],
      "category": "results",
      "key_operations": [
        "create plot group",
        "set plot properties"
      ],
      "code": "model.result.create('pg2', 'PlotGroup2D');\nmodel.result('pg2').label('Electric Field (ewfd2)');\nmodel.result('pg2').set('frametype', 'spatial');\nmodel.result('pg2').set('data', 'dset1');\nmodel.result('pg2').setIndex('looplevel', 1, 0);\nmodel.result('pg2').set('defaultPlotID', 'ElectromagneticWavesFrequencyDomain/phys1/pdef1/pcond2/pg1');"
    },
    {
      "segment_id": 73,
      "start_line": 159,
      "end_line": 178,
      "code_description": "This code segment creates surface plots for the electric field y-component of the fundamental and second harmonic waves in a second harmonic generation simulation.",
      "modeling_purpose": "The surface plots provide a visual representation of the electric field distribution for both the fundamental and second harmonic waves, allowing for analysis and comparison with the analytical solution from the Slowly Varying Envelope Approximation (SVEA).",
      "comsol_ids": [
        "pg1",
        "pg2"
      ],
      "category": "results",
      "key_operations": [
        "create surface plots",
        "set expressions for electric field y-component"
      ],
      "code": "model.result('pg2').feature.create('surf1', 'Surface');\nmodel.result('pg2').feature('surf1').set('expr', 'ewfd2.normE');\nmodel.result('pg2').feature('surf1').set('smooth', 'internal');\nmodel.result('pg2').feature('surf1').set('data', 'parent');\nmodel.result('pg1').run;\nmodel.result('pg1').label('Fundamental');\nmodel.result('pg1').run;\nmodel.result('pg1').feature('surf1').set('expr', 'ewfd1.Ey');\nmodel.result('pg1').run;\nmodel.result('pg1').set('titletype', 'manual');\nmodel.result('pg1').set('title', 'Electric field, y-component (V/m) for fundamental wave');\nmodel.result('pg1').run;\nmodel.result('pg2').run;\nmodel.result('pg2').label('Second Harmonic');\nmodel.result('pg2').run;\nmodel.result('pg2').feature('surf1').set('expr', 'ewfd2.Ey');\nmodel.result('pg2').run;\nmodel.result('pg2').set('titletype', 'manual');\nmodel.result('pg2').set('title', 'Electric field, y-component (V/m) for second harmonic wave');\nmodel.result('pg2').run;"
    },
    {
      "segment_id": 74,
      "start_line": 179,
      "end_line": 181,
      "code_description": "Creates a 1D plot group for electric fields and runs it",
      "modeling_purpose": "To visualize and analyze the electric field distribution in the model",
      "comsol_ids": [
        "pg3"
      ],
      "category": "results",
      "key_operations": [
        "create",
        "run"
      ],
      "code": "model.result.create('pg3', 'PlotGroup1D');\nmodel.result('pg3').run;\nmodel.result('pg3').label('Electric Fields');"
    },
    {
      "segment_id": 75,
      "start_line": 182,
      "end_line": 200,
      "code_description": "Creates line graphs for fundamental and second harmonic electric fields and sets their properties",
      "modeling_purpose": "To visualize and analyze the electric field distribution of the fundamental and second harmonic waves in the second harmonic generation process",
      "comsol_ids": [
        "pg3",
        "lngr1",
        "lngr2"
      ],
      "category": "results",
      "key_operations": [
        "create line graphs",
        "set line properties",
        "duplicate line graph"
      ],
      "code": "model.result('pg3').create('lngr1', 'LineGraph');\nmodel.result('pg3').feature('lngr1').set('markerpos', 'datapoints');\nmodel.result('pg3').feature('lngr1').set('linewidth', 'preference');\nmodel.result('pg3').feature('lngr1').label('Fundamental');\nmodel.result('pg3').feature('lngr1').selection.set([2 5 8]);\nmodel.result('pg3').feature('lngr1').set('expr', 'ewfd1.Ey');\nmodel.result('pg3').feature('lngr1').set('xdata', 'expr');\nmodel.result('pg3').feature('lngr1').set('xdataexpr', 'x');\nmodel.result('pg3').feature('lngr1').set('linewidth', 2);\nmodel.result('pg3').feature('lngr1').set('legend', true);\nmodel.result('pg3').feature('lngr1').set('autoplotlabel', true);\nmodel.result('pg3').feature('lngr1').set('autosolution', false);\nmodel.result('pg3').feature.duplicate('lngr2', 'lngr1');\nmodel.result('pg3').run;\nmodel.result('pg3').feature('lngr2').label('Second Harmonic');\nmodel.result('pg3').feature('lngr2').set('expr', 'ewfd2.Ey');\nmodel.result('pg3').run;\nmodel.result('pg3').set('titletype', 'manual');\nmodel.result('pg3').set('title', 'Fundamental and Second Harmonic Electric Fields');"
    },
    {
      "segment_id": 76,
      "start_line": 201,
      "end_line": 203,
      "code_description": "Creates a 1D plot group, runs it, and labels it as 'Photon Flux Density'",
      "modeling_purpose": "To visualize and analyze the photon flux density results from the second harmonic generation simulation",
      "comsol_ids": [
        "pg4"
      ],
      "category": "results",
      "key_operations": [
        "create_plot_group",
        "run_plot_group",
        "label_plot_group"
      ],
      "code": "model.result.create('pg4', 'PlotGroup1D');\nmodel.result('pg4').run;\nmodel.result('pg4').label('Photon Flux Density');"
    },
    {
      "segment_id": 77,
      "start_line": 204,
      "end_line": 258,
      "code_description": "Creates line graphs for fundamental and second harmonic photon flux densities and compares them with the analytical solution from the Slowly Varying Envelope Approximation (SVEA).",
      "modeling_purpose": "This step is needed to visualize and analyze the results of the second harmonic generation simulation, comparing the simulation results with the analytical solution.",
      "comsol_ids": [
        "pg4",
        "lngr1",
        "lngr2",
        "lngr3",
        "lngr4"
      ],
      "category": "results",
      "key_operations": [
        "create line graphs",
        "set line graph properties",
        "compare with analytical solution"
      ],
      "code": "model.result('pg4').create('lngr1', 'LineGraph');\nmodel.result('pg4').feature('lngr1').set('markerpos', 'datapoints');\nmodel.result('pg4').feature('lngr1').set('linewidth', 'preference');\nmodel.result('pg4').feature('lngr1').label('Simulation Fundamental');\nmodel.result('pg4').feature('lngr1').selection.set([2 5 8]);\nmodel.result('pg4').feature('lngr1').set('expr', 'ewfd1.Ey*conj(ewfd1.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd1.freq)');\nmodel.result('pg4').feature('lngr1').set('xdata', 'expr');\nmodel.result('pg4').feature('lngr1').set('xdataexpr', 'x');\nmodel.result('pg4').feature('lngr1').set('linestyle', 'none');\nmodel.result('pg4').feature('lngr1').set('linewidth', 5);\nmodel.result('pg4').feature('lngr1').set('linemarker', 'diamond');\nmodel.result('pg4').feature('lngr1').set('markerpos', 'interp');\nmodel.result('pg4').feature('lngr1').set('markers', 20);\nmodel.result('pg4').feature('lngr1').set('legend', true);\nmodel.result('pg4').feature('lngr1').set('autoplotlabel', true);\nmodel.result('pg4').feature('lngr1').set('autosolution', false);\nmodel.result('pg4').feature.duplicate('lngr2', 'lngr1');\nmodel.result('pg4').run;\nmodel.result('pg4').feature('lngr2').label('Simulation Second Harmonic');\nmodel.result('pg4').feature('lngr2').set('expr', 'ewfd2.Ey*conj(ewfd2.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd2.freq)');\nmodel.result('pg4').feature.duplicate('lngr3', 'lngr2');\nmodel.result('pg4').run;\nmodel.result('pg4').feature('lngr3').label('Slowly Varying Envelope Approximation (SVEA) Fundamental');\nmodel.result('pg4').feature('lngr3').selection.set([5]);\nmodel.result('pg4').feature('lngr3').set('expr', '(sech(gamma*(x - offset)/2))^2*I1/hbar_const/(2*pi*ewfd1.freq)');\nmodel.result('pg4').feature('lngr3').set('linestyle', 'solid');\nmodel.result('pg4').feature('lngr3').set('linewidth', 2);\nmodel.result('pg4').feature('lngr3').set('linemarker', 'none');\nmodel.result('pg4').feature('lngr3').set('legendmethod', 'manual');\nmodel.result('pg4').feature('lngr3').setIndex('legends', 'SVEA Fundamental', 0);\nmodel.result('pg4').feature.duplicate('lngr4', 'lngr3');\nmodel.result('pg4').run;\nmodel.result('pg4').feature('lngr4').label('Slowly Varying Envelope Approximation (SVEA) Second Harmonic');\nmodel.result('pg4').feature('lngr4').set('expr', '(tanh(gamma*(x - offset)/2))^2*I1/hbar_const/(2*pi*ewfd2.freq)');\nmodel.result('pg4').feature('lngr4').setIndex('legends', 'SVEA Second Harmonic', 0);\nmodel.result('pg4').run;\nmodel.result('pg4').set('titletype', 'manual');\nmodel.result('pg4').set('title', 'Fundamental and Second Harmonic Photon Flux Density');\nmodel.result('pg4').set('ylabelactive', true);\nmodel.result('pg4').set('ylabel', 'Photon Flux Density (photons per m^2 s)');\n\nmodel.title('Second Harmonic Generation in the Frequency Domain');\n\nmodel.description(['This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.' newline  newline 'For convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.' newline  newline 'The results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).']);\n\nmodel.mesh.clearMeshes;\n\nmodel.sol('sol1').clearSolutionData;\n\nmodel.label('second_harmonic_generation_frequency_domain.mph');\n\nmodel.modelNode.label('Components');\n\nout = model;"
    }
  ],
  "pdf_sections": [
    {
      "section_id": 1,
      "title": "Rectangle 1 (r1)",
      "instructions": "1 In the Geometry toolbar, click \n\nRectangle.\n\n2 In the Settings window for Rectangle, locate the Size and Shape section.\n\n3 In the Width text field, type sim_l.\n\n4 In the Height text field, type sim_h.\n\n5 Click to expand the Layers section. In the table, enter the following settings:",
      "comsol_ids": [
        "r1"
      ],
      "purpose": "Section 1 instructions",
      "keywords": [
        "rectangle",
        "1",
        "(r1)"
      ]
    },
    {
      "section_id": 2,
      "title": "Layer name\n\nThickness (m)",
      "instructions": "Layer 1\n\noffset\n\n6 Select the Layers to the left check box.\n\n7 Select the Layers to the right check box.\n\n8 Clear the Layers on bottom check box.\n\nD E F I N I T I O N S\n\nIn the Model Builder window, expand the Component 1 (comp1)>Definitions node.\n\nAxis\nTo get a more interesting aspect ratio for the graphics, set the View scale for the Axis to \nAutomatic.\n\n1 In the Model Builder window, expand the Component 1 (comp1)>Definitions>View 1 \n\nnode, then click Axis.\n\n2 In the Settings window for Axis, locate the Axis section.\n\n3 From the View scale list, choose Automatic.\n\n4 Click \n\nUpdate.\n\n5 Click the \n\nZoom Extents button in the Graphics toolbar.",
      "comsol_ids": [
        "m"
      ],
      "purpose": "Section 2 instructions",
      "keywords": [
        "layer",
        "name",
        "thickness",
        "(m)"
      ]
    },
    {
      "section_id": 3,
      "title": "M A T E R I A L S\n\nMaterial 1 (mat1)",
      "instructions": "1 In the Model Builder window, under Component 1 (comp1) right-click Materials and \n\nchoose Blank Material.\n\n2 In the Settings window for Material, locate the Material Contents section.\n\n9  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f3 In the table, enter the following settings:\n\nProperty\n\nVariable\n\nValue\n\nUnit\n\nProperty group\n\nRefractive index, real \npart\n\nn_iso ; nii = n_iso, \nnij = 0\n\nRefractive index, \nimaginary part\n\nki_iso ; kiii = \nki_iso, kiij = 0\n\n1\n\n0\n\n1\n\n1\n\nRefractive index\n\nRefractive index\n\nF U N D A M E N T A L\n\n1 In the Model Builder window, under Component 1 (comp1) click Electromagnetic Waves,",
      "comsol_ids": [
        "mat1"
      ],
      "purpose": "Section 3 instructions",
      "keywords": [
        "m",
        "a",
        "t",
        "e",
        "r",
        "i",
        "a",
        "l",
        "s",
        "material",
        "1",
        "(mat1)"
      ]
    },
    {
      "section_id": 4,
      "title": "Solution 1 (sol1)",
      "instructions": "1 In the Study toolbar, click \n\nShow Default Solver.\n\n2 In the Model Builder window, expand the Solution 1 (sol1) node, then click \n\nCompile Equations: Frequency Domain.\n\n3 In the Settings window for Compile Equations, locate the Study and Step section.\n\n4 Select the Split complex variables in real and imaginary parts check box.\n\n5 In the Model Builder window, under Study 1>Solver Configurations>Solution 1 (sol1) click \n\nStationary Solver 1.\n\n6 In the Settings window for Stationary Solver, locate the General section.\n\n7 In the Relative tolerance text field, type 0.001.\n\n8 In the Study toolbar, click \n\nCompute.\n\nSince the polarization expression for the fundamental harmonic contains the complex \nconjugate of the electric field, it is advisable to split complex variables in real and \nimaginary parts in order to improve convergence. Moreover, the tolerance has been \nmanually decreased to 0.001 to ensure that the nonlinear solver has converged to a \nsolution and not just incidentally reached below the tolerance.\n\nR E S U L T S\n\nFundamental\nIn the Settings window for 2D Plot Group, type Fundamental in the Label text field.\n\n16  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\fSurface 1\n1 In the Model Builder window, expand the Fundamental node, then click Surface 1.\n\n2 In the Settings window for Surface, locate the Expression section.\n\n3 In the Expression text field, type ewfd1.Ey.\n\nFundamental\nBefore finishing the plot, update the plot title.\n\n1 In the Model Builder window, click Fundamental.\n\n2 In the Settings window for 2D Plot Group, click to expand the Title section.\n\n3 From the Title type list, choose Manual.\n\n4 In the Title text area, type Electric field, y-component (V/m) for fundamental \n\nwave.\n\n5 In the Fundamental toolbar, click \n\nPlot.\n\nSecond Harmonic\n1 In the Model Builder window, under Results click Electric Field (ewfd2).\n\n2 In the Settings window for 2D Plot Group, type Second Harmonic in the Label text field.\n\nSurface 1\n1 In the Model Builder window, expand the Second Harmonic node, then click Surface 1.\n\n17  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f2 In the Settings window for Surface, locate the Expression section.\n\n3 In the Expression text field, type ewfd2.Ey.\n\nSecond Harmonic\nAgain, update the plot title.\n\n1 In the Model Builder window, click Second Harmonic.\n\n2 In the Settings window for 2D Plot Group, locate the Title section.\n\n3 From the Title type list, choose Manual.\n\n4 In the Title text area, type Electric field, y-component (V/m) for second \n\nharmonic wave.\n\n5 In the Second Harmonic toolbar, click \n\nPlot.\n\nNotice that the wavelength is half of that displayed in the Fundamental plot group for \nthe fundamental wave.\n\nElectric Fields\nNow create a line graph showing the electric fields for the fundamental and the second \nharmonic waves.\n\n1 In the Home toolbar, click \n\nAdd Plot Group and choose 1D Plot Group.\n\n2 In the Settings window for 1D Plot Group, type Electric Fields in the Label text field.\n\n18  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\fFundamental\n1 Right-click Electric Fields and choose Line Graph.\n\n2 In the Settings window for Line Graph, type Fundamental in the Label text field.\n\n3 Select Boundaries 2, 5, and 8 only.\n\n4 Locate the y-Axis Data section. In the Expression text field, type ewfd1.Ey.\n\n5 Locate the x-Axis Data section. From the Parameter list, choose Expression.\n\n6 In the Expression text field, type x.\n\n7 Click to expand the Coloring and Style section. From the Width list, choose 2.\n\n8 Click to expand the Legends section. Select the Show legends check box.\n\n9 Find the Include subsection. Select the Label check box.\n\n10 Clear the Solution check box.\n\n11 Right-click Fundamental and choose Duplicate.\n\nSecond Harmonic\n1 In the Model Builder window, under Results>Electric Fields click Fundamental 1.\n\n2 In the Settings window for Line Graph, type Second Harmonic in the Label text field.\n\n3 Locate the y-Axis Data section. In the Expression text field, type ewfd2.Ey.\n\nElectric Fields\n1 In the Model Builder window, click Electric Fields.\n\n2 In the Settings window for 1D Plot Group, click to expand the Title section.\n\n3 From the Title type list, choose Manual.\n\n19  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f4 In the Title text area, type Fundamental and Second Harmonic Electric Fields.\n\nPhoton Flux Density\n1 In the Home toolbar, click \n\nAdd Plot Group and choose 1D Plot Group.\n\n2 In the Settings window for 1D Plot Group, type Photon Flux Density in the Label text \n\nfield.\n\nSimulation Fundamental\n1 Right-click Photon Flux Density and choose Line Graph.\n\n2 In the Settings window for Line Graph, type Simulation Fundamental in the Label text \n\nfield.\n\n3 Select Boundaries 2, 5, and 8 only.\n\n4 Locate the y-Axis Data section. In the Expression text field, type ewfd1.Ey*\nconj(ewfd1.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd1.freq).\n\n5 Locate the x-Axis Data section. From the Parameter list, choose Expression.\n\n6 In the Expression text field, type x.\n\n7 Locate the Coloring and Style section. Find the Line style subsection. From the Line list, \n\nchoose None.\n\n8 From the Width list, choose 5.\n\n20  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f9 Find the Line markers subsection. From the Marker list, choose Diamond.\n\n10 From the Positioning list, choose Interpolated.\n\n11 In the Number text field, type 20.\n\n12 Locate the Legends section. Select the Show legends check box.\n\n13 Find the Include subsection. Select the Label check box.\n\n14 Clear the Solution check box.\n\n15 Right-click Simulation Fundamental and choose Duplicate.\n\nSimulation Second Harmonic\n1 In the Model Builder window, under Results>Photon Flux Density click \n\nSimulation Fundamental 1.\n\n2 In the Settings window for Line Graph, type Simulation Second Harmonic in the Label \n\ntext field.\n\n3 Locate the y-Axis Data section. In the Expression text field, type ewfd2.Ey*\nconj(ewfd2.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd2.freq).\n\n4 Right-click Simulation Second Harmonic and choose Duplicate.",
      "comsol_ids": [
        "sol1"
      ],
      "purpose": "Section 4 instructions",
      "keywords": [
        "solution",
        "1",
        "(sol1)"
      ]
    }
  ],
  "matches": [
    {
      "code_segment_id": 1,
      "pdf_section_id": 2,
      "match_confidence": 0.1,
      "matching_factors": [
        "Assigned unused PDF section"
      ],
      "reasoning": "Assigned to unused PDF section 2"
    },
    {
      "code_segment_id": 2,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 3,
      "pdf_section_id": 1,
      "match_confidence": 0.5,
      "matching_factors": [
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 0.50"
    },
    {
      "code_segment_id": 4,
      "pdf_section_id": 1,
      "match_confidence": 0.5,
      "matching_factors": [
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 0.50"
    },
    {
      "code_segment_id": 5,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 6,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 7,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 8,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 9,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 10,
      "pdf_section_id": 4,
      "match_confidence": 0.5,
      "matching_factors": [
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 0.50"
    },
    {
      "code_segment_id": 11,
      "pdf_section_id": 4,
      "match_confidence": 0.5,
      "matching_factors": [
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 0.50"
    },
    {
      "code_segment_id": 12,
      "pdf_section_id": 4,
      "match_confidence": 0.5,
      "matching_factors": [
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 0.50"
    },
    {
      "code_segment_id": 13,
      "pdf_section_id": 4,
      "match_confidence": 0.5,
      "matching_factors": [
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 0.50"
    },
    {
      "code_segment_id": 14,
      "pdf_section_id": 4,
      "match_confidence": 0.5,
      "matching_factors": [
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 0.50"
    },
    {
      "code_segment_id": 15,
      "pdf_section_id": 4,
      "match_confidence": 0.5,
      "matching_factors": [
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 0.50"
    },
    {
      "code_segment_id": 16,
      "pdf_section_id": 4,
      "match_confidence": 0.5,
      "matching_factors": [
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 0.50"
    },
    {
      "code_segment_id": 17,
      "pdf_section_id": 4,
      "match_confidence": 0.5,
      "matching_factors": [
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 0.50"
    },
    {
      "code_segment_id": 18,
      "pdf_section_id": 4,
      "match_confidence": 0.5,
      "matching_factors": [
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 0.50"
    },
    {
      "code_segment_id": 19,
      "pdf_section_id": 4,
      "match_confidence": 0.5,
      "matching_factors": [
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 0.50"
    },
    {
      "code_segment_id": 20,
      "pdf_section_id": 2,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 21,
      "pdf_section_id": 1,
      "match_confidence": 1.3,
      "matching_factors": [
        "Matching IDs: {'r1'}",
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 1.30"
    },
    {
      "code_segment_id": 22,
      "pdf_section_id": 1,
      "match_confidence": 1.3,
      "matching_factors": [
        "Matching IDs: {'r1'}",
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 1.30"
    },
    {
      "code_segment_id": 23,
      "pdf_section_id": 1,
      "match_confidence": 1.3,
      "matching_factors": [
        "Matching IDs: {'r1'}",
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 1.30"
    },
    {
      "code_segment_id": 24,
      "pdf_section_id": 1,
      "match_confidence": 1.3,
      "matching_factors": [
        "Matching IDs: {'r1'}",
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 1.30"
    },
    {
      "code_segment_id": 25,
      "pdf_section_id": 1,
      "match_confidence": 1.3,
      "matching_factors": [
        "Matching IDs: {'r1'}",
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 1.30"
    },
    {
      "code_segment_id": 26,
      "pdf_section_id": 1,
      "match_confidence": 1.3,
      "matching_factors": [
        "Matching IDs: {'r1'}",
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 1.30"
    },
    {
      "code_segment_id": 27,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 28,
      "pdf_section_id": 1,
      "match_confidence": 0.5,
      "matching_factors": [
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 0.50"
    },
    {
      "code_segment_id": 29,
      "pdf_section_id": 3,
      "match_confidence": 1.3,
      "matching_factors": [
        "Matching IDs: {'mat1'}",
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 1.30"
    },
    {
      "code_segment_id": 30,
      "pdf_section_id": 3,
      "match_confidence": 1.3,
      "matching_factors": [
        "Matching IDs: {'mat1'}",
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 1.30"
    },
    {
      "code_segment_id": 31,
      "pdf_section_id": 3,
      "match_confidence": 1.3,
      "matching_factors": [
        "Matching IDs: {'mat1'}",
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 1.30"
    },
    {
      "code_segment_id": 32,
      "pdf_section_id": 3,
      "match_confidence": 1.3,
      "matching_factors": [
        "Matching IDs: {'mat1'}",
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 1.30"
    },
    {
      "code_segment_id": 33,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 34,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 35,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 36,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 37,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 38,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 39,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 40,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 41,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 42,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 43,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 44,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 45,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 46,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 47,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 48,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 49,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 50,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 51,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 52,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 53,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 54,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 55,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 56,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 57,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 58,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 59,
      "pdf_section_id": 1,
      "match_confidence": 0.3,
      "matching_factors": [
        "Keyword similarity"
      ],
      "reasoning": "Confidence: 0.30"
    },
    {
      "code_segment_id": 60,
      "pdf_section_id": 4,
      "match_confidence": 0.5,
      "matching_factors": [
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 0.50"
    },
    {
      "code_segment_id": 61,
      "pdf_section_id": 4,
      "match_confidence": 1.3,
      "matching_factors": [
        "Matching IDs: {'sol1'}",
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 1.30"
    },
    {
      "code_segment_id": 62,
      "pdf_section_id": 4,
      "match_confidence": 1.3,
      "matching_factors": [
        "Matching IDs: {'sol1'}",
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 1.30"
    },
    {
      "code_segment_id": 63,
      "pdf_section_id": 4,
      "match_confidence": 1.3,
      "matching_factors": [
        "Matching IDs: {'sol1'}",
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 1.30"
    },
    {
      "code_segment_id": 64,
      "pdf_section_id": 4,
      "match_confidence": 1.3,
      "matching_factors": [
        "Matching IDs: {'sol1'}",
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 1.30"
    },
    {
      "code_segment_id": 65,
      "pdf_section_id": 4,
      "match_confidence": 1.3,
      "matching_factors": [
        "Matching IDs: {'sol1'}",
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 1.30"
    },
    {
      "code_segment_id": 66,
      "pdf_section_id": 4,
      "match_confidence": 1.3,
      "matching_factors": [
        "Matching IDs: {'sol1'}",
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 1.30"
    },
    {
      "code_segment_id": 67,
      "pdf_section_id": 4,
      "match_confidence": 1.3,
      "matching_factors": [
        "Matching IDs: {'sol1'}",
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 1.30"
    },
    {
      "code_segment_id": 68,
      "pdf_section_id": 4,
      "match_confidence": 1.3,
      "matching_factors": [
        "Matching IDs: {'sol1'}",
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 1.30"
    },
    {
      "code_segment_id": 69,
      "pdf_section_id": 4,
      "match_confidence": 1.3,
      "matching_factors": [
        "Matching IDs: {'sol1'}",
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 1.30"
    },
    {
      "code_segment_id": 70,
      "pdf_section_id": 4,
      "match_confidence": 0.5,
      "matching_factors": [
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 0.50"
    },
    {
      "code_segment_id": 71,
      "pdf_section_id": 4,
      "match_confidence": 0.5,
      "matching_factors": [
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 0.50"
    },
    {
      "code_segment_id": 72,
      "pdf_section_id": 4,
      "match_confidence": 0.5,
      "matching_factors": [
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 0.50"
    },
    {
      "code_segment_id": 73,
      "pdf_section_id": 4,
      "match_confidence": 0.2,
      "matching_factors": [
        "Category match"
      ],
      "reasoning": "Confidence: 0.20"
    },
    {
      "code_segment_id": 74,
      "pdf_section_id": 4,
      "match_confidence": 0.5,
      "matching_factors": [
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 0.50"
    },
    {
      "code_segment_id": 75,
      "pdf_section_id": 4,
      "match_confidence": 0.5,
      "matching_factors": [
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 0.50"
    },
    {
      "code_segment_id": 76,
      "pdf_section_id": 4,
      "match_confidence": 0.5,
      "matching_factors": [
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 0.50"
    },
    {
      "code_segment_id": 77,
      "pdf_section_id": 4,
      "match_confidence": 0.5,
      "matching_factors": [
        "Keyword similarity",
        "Category match"
      ],
      "reasoning": "Confidence: 0.50"
    }
  ],
  "enhanced_examples": [
    {
      "instruction": "[Model] This code segment initializes a COMSOL model for simulating second harmonic generation in the frequency domain.",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to set up the model environment and specify the model path for the simulation.\nWhat to do: This code segment initializes a COMSOL model for simulating second harmonic generation in the frequency domain.",
      "output": "function out = model\n%\n% second_harmonic_generation_frequency_domain.m\n%\n% Model exported on May 26 2025, 21:34 by COMSOL 6.2.0.339.\n\nimport com.comsol.model.*\nimport com.comsol.model.util.*\n\nmodel = ModelUtil.create('Model');\n\nmodel.modelPath('/Applications/COMSOL62/Multiphysics/applications/Wave_Optics_Module/Verification_Examples');",
      "explanation": "Physics: Unknown. Purpose: This step is needed to set up the model environment and specify the model path for the simulation.",
      "confidence": 0.1,
      "source": "code_first",
      "category": "other",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "ModelUtil.create('Model')",
        "model.modelPath()"
      ]
    },
    {
      "instruction": "[Model] Creates a component named 'comp1' in the model",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: Needed to organize the model into different components for better management and readability\nWhat to do: Creates a component named 'comp1' in the model",
      "output": "model.modelNode.create('comp1', true);",
      "explanation": "Physics: Unknown. Purpose: Needed to organize the model into different components for better management and readability",
      "confidence": 0.3,
      "source": "code_first",
      "category": "other",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "comp1"
      ]
    },
    {
      "instruction": "[Model] Creates a 2D geometry named 'geom1' in the COMSOL model",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to define the geometry for the simulation domain\nWhat to do: Creates a 2D geometry named 'geom1' in the COMSOL model",
      "output": "model.geom.create('geom1', 2);",
      "explanation": "Physics: Unknown. Purpose: This step is needed to define the geometry for the simulation domain",
      "confidence": 0.5,
      "source": "code_first",
      "category": "geometry",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "geom1"
      ]
    },
    {
      "instruction": "[Model] Accesses the geometry and component of the COMSOL model",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to set up the geometry and component for the simulation\nWhat to do: Accesses the geometry and component of the COMSOL model",
      "output": "model.geom('geom1').model('comp1');",
      "explanation": "Physics: Unknown. Purpose: This step is needed to set up the geometry and component for the simulation",
      "confidence": 0.5,
      "source": "code_first",
      "category": "geometry",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "geom1",
        "comp1"
      ]
    },
    {
      "instruction": "[Model] Creates a mesh named 'mesh1' based on the geometry 'geom1'",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to generate a mesh for the geometry, which is required for the simulation to solve the physics equations\nWhat to do: Creates a mesh named 'mesh1' based on the geometry 'geom1'",
      "output": "model.mesh.create('mesh1', 'geom1');",
      "explanation": "Physics: Unknown. Purpose: This step is needed to generate a mesh for the geometry, which is required for the simulation to solve the physics equations",
      "confidence": 0.3,
      "source": "code_first",
      "category": "mesh",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "mesh1",
        "geom1"
      ]
    },
    {
      "instruction": "[Model] Creates an Electromagnetic Waves, Frequency Domain physics interface for the fundamental wave",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: To model the propagation of the fundamental wave in the second harmonic generation process\nWhat to do: Creates an Electromagnetic Waves, Frequency Domain physics interface for the fundamental wave",
      "output": "model.physics.create('ewfd', 'ElectromagneticWavesFrequencyDomain', 'geom1');",
      "explanation": "Physics: Unknown. Purpose: To model the propagation of the fundamental wave in the second harmonic generation process",
      "confidence": 0.3,
      "source": "code_first",
      "category": "physics",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "ewfd"
      ]
    },
    {
      "instruction": "[Model] Accesses the Electromagnetic Waves, Frequency Domain interface and its model in component 1",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to set up the physics of the model for the fundamental wave and the second harmonic wave\nWhat to do: Accesses the Electromagnetic Waves, Frequency Domain interface and its model in component 1",
      "output": "model.physics('ewfd').model('comp1');",
      "explanation": "Physics: Unknown. Purpose: This step is needed to set up the physics of the model for the fundamental wave and the second harmonic wave",
      "confidence": 0.3,
      "source": "code_first",
      "category": "physics",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "ewfd",
        "comp1"
      ]
    },
    {
      "instruction": "[Model] Creates a second Electromagnetic Waves, Frequency Domain interface for the second harmonic wave",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: To simulate the second harmonic generation process\nWhat to do: Creates a second Electromagnetic Waves, Frequency Domain interface for the second harmonic wave",
      "output": "model.physics.create('ewfd2', 'ElectromagneticWavesFrequencyDomain', 'geom1');",
      "explanation": "Physics: Unknown. Purpose: To simulate the second harmonic generation process",
      "confidence": 0.3,
      "source": "code_first",
      "category": "physics",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "ewfd2"
      ]
    },
    {
      "instruction": "[Model] Sets up the Electromagnetic Waves, Frequency Domain interface for the second harmonic wave in component 1",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to define the physics governing the second harmonic wave propagation in the simulation\nWhat to do: Sets up the Electromagnetic Waves, Frequency Domain interface for the second harmonic wave in component 1",
      "output": "model.physics('ewfd2').model('comp1');",
      "explanation": "Physics: Unknown. Purpose: This step is needed to define the physics governing the second harmonic wave propagation in the simulation",
      "confidence": 0.3,
      "source": "code_first",
      "category": "physics",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "ewfd2",
        "comp1"
      ]
    },
    {
      "instruction": "[Model] Creates a new study with the identifier 'std1'.",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to set up the study for the simulation, which will be used to solve the model and analyze the results.\nWhat to do: Creates a new study with the identifier 'std1'.",
      "output": "model.study.create('std1');",
      "explanation": "Physics: Unknown. Purpose: This step is needed to set up the study for the simulation, which will be used to solve the model and analyze the results.",
      "confidence": 0.5,
      "source": "code_first",
      "category": "study",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "std1"
      ]
    },
    {
      "instruction": "[Model] Creates a frequency study in the model",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: To analyze the frequency domain behavior of the second harmonic generation process\nWhat to do: Creates a frequency study in the model",
      "output": "model.study('std1').create('freq', 'Frequency');",
      "explanation": "Physics: Unknown. Purpose: To analyze the frequency domain behavior of the second harmonic generation process",
      "confidence": 0.5,
      "source": "code_first",
      "category": "study",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "std1"
      ]
    },
    {
      "instruction": "[Model] Sets the solution number for the frequency domain study to 'auto'",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to automatically determine the appropriate solution number for the frequency domain study in the simulation\nWhat to do: Sets the solution number for the frequency domain study to 'auto'",
      "output": "model.study('std1').feature('freq').set('solnum', 'auto');",
      "explanation": "Physics: Unknown. Purpose: This step is needed to automatically determine the appropriate solution number for the frequency domain study in the simulation",
      "confidence": 0.5,
      "source": "code_first",
      "category": "study",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "std1",
        "freq"
      ]
    },
    {
      "instruction": "[Model] Sets the solution number to automatic for the frequency domain study",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: Determines the number of solutions to compute for the frequency domain study in the model\nWhat to do: Sets the solution number to automatic for the frequency domain study",
      "output": "model.study('std1').feature('freq').set('notsolnum', 'auto');",
      "explanation": "Physics: Unknown. Purpose: Determines the number of solutions to compute for the frequency domain study in the model",
      "confidence": 0.5,
      "source": "code_first",
      "category": "study",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "std1",
        "freq"
      ]
    },
    {
      "instruction": "[Model] Sets the output map for the frequency domain study",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to define the output settings for the frequency domain study in the simulation\nWhat to do: Sets the output map for the frequency domain study",
      "output": "model.study('std1').feature('freq').set('outputmap', {});",
      "explanation": "Physics: Unknown. Purpose: This step is needed to define the output settings for the frequency domain study in the simulation",
      "confidence": 0.5,
      "source": "code_first",
      "category": "study",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "std1",
        "freq"
      ]
    },
    {
      "instruction": "[Model] Sets the number of auxiliary sweeps for the frequency study",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: To refine the frequency study and obtain more accurate results\nWhat to do: Sets the number of auxiliary sweeps for the frequency study",
      "output": "model.study('std1').feature('freq').set('ngenAUX', '1');",
      "explanation": "Physics: Unknown. Purpose: To refine the frequency study and obtain more accurate results",
      "confidence": 0.5,
      "source": "code_first",
      "category": "study",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "std1",
        "freq"
      ]
    },
    {
      "instruction": "[Model] Sets the number of generated auxiliary variables for the frequency study",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to control the number of auxiliary variables generated during the frequency study, which can help in analyzing the second harmonic generation process\nWhat to do: Sets the number of generated auxiliary variables for the frequency study",
      "output": "model.study('std1').feature('freq').set('goalngenAUX', '1');",
      "explanation": "Physics: Unknown. Purpose: This step is needed to control the number of auxiliary variables generated during the frequency study, which can help in analyzing the second harmonic generation process",
      "confidence": 0.5,
      "source": "code_first",
      "category": "study",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "std1",
        "freq"
      ]
    },
    {
      "instruction": "[Model] Sets the number of auxiliary sweeps for the frequency study",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: To refine the frequency study and obtain more accurate results for the second harmonic generation process\nWhat to do: Sets the number of auxiliary sweeps for the frequency study",
      "output": "model.study('std1').feature('freq').set('ngenAUX', '1');",
      "explanation": "Physics: Unknown. Purpose: To refine the frequency study and obtain more accurate results for the second harmonic generation process",
      "confidence": 0.5,
      "source": "code_first",
      "category": "study",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "std1",
        "freq"
      ]
    },
    {
      "instruction": "[Model] Sets the number of generated auxiliary variables for the frequency study",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to control the number of auxiliary variables generated during the frequency study, which can affect the accuracy and computational efficiency of the simulation\nWhat to do: Sets the number of generated auxiliary variables for the frequency study",
      "output": "model.study('std1').feature('freq').set('goalngenAUX', '1');",
      "explanation": "Physics: Unknown. Purpose: This step is needed to control the number of auxiliary variables generated during the frequency study, which can affect the accuracy and computational efficiency of the simulation",
      "confidence": 0.5,
      "source": "code_first",
      "category": "study",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "std1",
        "freq"
      ]
    },
    {
      "instruction": "[Model] Sets up the study to solve for the electromagnetic waves in the frequency domain physics interface",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to configure the solver to compute the electromagnetic field distribution for the fundamental wave and the second harmonic wave\nWhat to do: Sets up the study to solve for the electromagnetic waves in the frequency domain physics interface",
      "output": "model.study('std1').feature('freq').setSolveFor('/physics/ewfd', true);",
      "explanation": "Physics: Unknown. Purpose: This step is needed to configure the solver to compute the electromagnetic field distribution for the fundamental wave and the second harmonic wave",
      "confidence": 0.5,
      "source": "code_first",
      "category": "study",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "std1",
        "freq",
        "ewfd"
      ]
    },
    {
      "instruction": "[Model] Sets up parameters for the simulation, including wavelengths, frequencies, simulation dimensions, and material properties",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: These parameters are necessary to define the geometry, materials, and physics of the second harmonic generation simulation\nWhat to do: Sets up parameters for the simulation, including wavelengths, frequencies, simulation dimensions, and material properties",
      "output": "model.study('std1').feature('freq').setSolveFor('/physics/ewfd2', true);\n\n% To import content from file, use:\n% model.param.loadFile('FILENAME');\nmodel.param.set('lambda1', '1.064[um]', 'Fundamental wavelength');\nmodel.param.set('f1', 'c_const/lambda1', 'Fundamental frequency');\nmodel.param.set('f2', '2*f1', 'Second harmonic frequency');\nmodel.param.set('lambda2', 'c_const/f2', 'Second harmonic wavelength');\nmodel.param.set('sim_l', 'lambda1*25', 'Simulation length');\nmodel.param.set('sim_h', 'lambda2/16', 'Simulation height');\nmodel.param.set('d', '1e-18[C/V^2]', 'Nonlinear coefficient');\nmodel.param.set('L', 'sim_l - 3*lambda1', 'Length of nonlinear region');\nmodel.param.set('I1', '30[MW/m^2]', 'Incident fundamental intensity');\nmodel.param.set('E1', 'sqrt(2*I1/c_const/epsilon0_const)', 'Incident fundamental electric field strength');\nmodel.param.set('offset', '1.5*lambda1', 'Start of nonlinear region');",
      "explanation": "Physics: Unknown. Purpose: These parameters are necessary to define the geometry, materials, and physics of the second harmonic generation simulation",
      "confidence": 0.3,
      "source": "code_first",
      "category": "parameters",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "std1",
        "freq"
      ]
    },
    {
      "instruction": "[Model] Creates a rectangle geometry object named 'r1' in the geometry 'geom1'",
      "input": "1 In the Geometry toolbar, click \n\nRectangle.\n\n2 In the Settings window for Rectangle, locate the Size and Shape section.\n\n3 In the Width text field, type sim_l.\n\n4 In the Height text field, type sim_h.\n\n5 Click to expand the Layers section. In the table, enter the following settings:",
      "output": "model.geom('geom1').create('r1', 'Rectangle');",
      "explanation": "Physics: Unknown. Purpose: Defines the geometry for the simulation domain",
      "confidence": 1.3,
      "source": "code_first",
      "category": "geometry",
      "match_info": "Matched to PDF section: Rectangle 1 (r1)",
      "comsol_ids": [
        "geom1",
        "r1"
      ]
    },
    {
      "instruction": "[Model] Sets the size of the geometry object 'r1' in 'geom1' to 'sim_l' and 'sim_h'",
      "input": "1 In the Geometry toolbar, click \n\nRectangle.\n\n2 In the Settings window for Rectangle, locate the Size and Shape section.\n\n3 In the Width text field, type sim_l.\n\n4 In the Height text field, type sim_h.\n\n5 Click to expand the Layers section. In the table, enter the following settings:",
      "output": "model.geom('geom1').feature('r1').set('size', {'sim_l' 'sim_h'});",
      "explanation": "Physics: Unknown. Purpose: Adjusting the geometry size to match the simulation domain for the second harmonic generation process",
      "confidence": 1.3,
      "source": "code_first",
      "category": "geometry",
      "match_info": "Matched to PDF section: Rectangle 1 (r1)",
      "comsol_ids": [
        "geom1",
        "r1"
      ]
    },
    {
      "instruction": "[Model] Sets the refractive index of 'Layer 1' to 0 in the geometry 'geom1', feature 'r1'",
      "input": "1 In the Geometry toolbar, click \n\nRectangle.\n\n2 In the Settings window for Rectangle, locate the Size and Shape section.\n\n3 In the Width text field, type sim_l.\n\n4 In the Height text field, type sim_h.\n\n5 Click to expand the Layers section. In the table, enter the following settings:",
      "output": "model.geom('geom1').feature('r1').setIndex('layername', 'Layer 1', 0);",
      "explanation": "Physics: Unknown. Purpose: To perfectly match the refractive index for each frequency in the second harmonic generation process",
      "confidence": 1.3,
      "source": "code_first",
      "category": "geometry",
      "match_info": "Matched to PDF section: Rectangle 1 (r1)",
      "comsol_ids": [
        "geom1",
        "r1"
      ]
    },
    {
      "instruction": "[Model] Sets the layer offset to 0 for the geometry object 'geom1', feature 'r1'",
      "input": "1 In the Geometry toolbar, click \n\nRectangle.\n\n2 In the Settings window for Rectangle, locate the Size and Shape section.\n\n3 In the Width text field, type sim_l.\n\n4 In the Height text field, type sim_h.\n\n5 Click to expand the Layers section. In the table, enter the following settings:",
      "output": "model.geom('geom1').feature('r1').setIndex('layer', 'offset', 0);",
      "explanation": "Physics: Unknown. Purpose: This step is needed to define the geometry of the model accurately",
      "confidence": 1.3,
      "source": "code_first",
      "category": "geometry",
      "match_info": "Matched to PDF section: Rectangle 1 (r1)",
      "comsol_ids": [
        "geom1",
        "r1"
      ]
    },
    {
      "instruction": "[Model] Sets the 'layerleft' property of the 'r1' feature in the 'geom1' geometry to true",
      "input": "1 In the Geometry toolbar, click \n\nRectangle.\n\n2 In the Settings window for Rectangle, locate the Size and Shape section.\n\n3 In the Width text field, type sim_l.\n\n4 In the Height text field, type sim_h.\n\n5 Click to expand the Layers section. In the table, enter the following settings:",
      "output": "model.geom('geom1').feature('r1').set('layerleft', true);",
      "explanation": "Physics: Unknown. Purpose: This step is needed to define the geometry for the simulation",
      "confidence": 1.3,
      "source": "code_first",
      "category": "geometry",
      "match_info": "Matched to PDF section: Rectangle 1 (r1)",
      "comsol_ids": [
        "geom1",
        "r1"
      ]
    },
    {
      "instruction": "[Model] Sets the 'layerright' property of the 'r1' feature in the 'geom1' geometry to true",
      "input": "1 In the Geometry toolbar, click \n\nRectangle.\n\n2 In the Settings window for Rectangle, locate the Size and Shape section.\n\n3 In the Width text field, type sim_l.\n\n4 In the Height text field, type sim_h.\n\n5 Click to expand the Layers section. In the table, enter the following settings:",
      "output": "model.geom('geom1').feature('r1').set('layerright', true);",
      "explanation": "Physics: Unknown. Purpose: This step is needed to define the geometry for the simulation",
      "confidence": 1.3,
      "source": "code_first",
      "category": "geometry",
      "match_info": "Matched to PDF section: Rectangle 1 (r1)",
      "comsol_ids": [
        "geom1",
        "r1"
      ]
    },
    {
      "instruction": "[Model] Disables the bottom layer of the geometry and sets the view axis scaling to automatic",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to simplify the geometry and adjust the view for better visualization\nWhat to do: Disables the bottom layer of the geometry and sets the view axis scaling to automatic",
      "output": "model.geom('geom1').feature('r1').set('layerbottom', false);\n\nmodel.view('view1').axis.set('viewscaletype', 'automatic');",
      "explanation": "Physics: Unknown. Purpose: This step is needed to simplify the geometry and adjust the view for better visualization",
      "confidence": 0.3,
      "source": "code_first",
      "category": "geometry|results",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "geom1",
        "view1"
      ]
    },
    {
      "instruction": "[Model] Runs the geometry sequence 'geom1' to create the geometry for the simulation",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to create the geometry for the second harmonic generation simulation\nWhat to do: Runs the geometry sequence 'geom1' to create the geometry for the simulation",
      "output": "model.geom('geom1').run;",
      "explanation": "Physics: Unknown. Purpose: This step is needed to create the geometry for the second harmonic generation simulation",
      "confidence": 0.5,
      "source": "code_first",
      "category": "geometry",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "geom1"
      ]
    },
    {
      "instruction": "[Model] Creates a new material with the name 'mat1' in the component 'comp1' using the 'Common' material model",
      "input": "1 In the Model Builder window, under Component 1 (comp1) right-click Materials and \n\nchoose Blank Material.\n\n2 In the Settings window for Material, locate the Material Contents section.\n\n9  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f3 In the table, enter the following settings:\n\nProperty\n\nVariable\n\nValue\n\nUnit\n\nProperty group\n\nRefractive index, real \npart\n\nn_iso ; nii = n_iso, \nnij = 0\n\nRefractive index, \nimaginary part\n\nki_iso ; kiii = \nki_iso, kiij = 0\n\n1\n\n0\n\n1\n\n1\n\nRefractive index\n\nRefractive index\n\nF U N D A M E N T A L\n\n1 In the Model Builder window, under Component 1 (comp1) click Electromagnetic Waves,",
      "output": "model.material.create('mat1', 'Common', 'comp1');",
      "explanation": "Physics: Unknown. Purpose: This step is needed to define the material properties for the simulation, which will be used to set up the physics interfaces and boundary conditions",
      "confidence": 1.3,
      "source": "code_first",
      "category": "materials",
      "match_info": "Matched to PDF section: M A T E R I A L S\n\nMaterial 1 (mat1)",
      "comsol_ids": [
        "mat1"
      ]
    },
    {
      "instruction": "[Model] Creates a property group for refractive index in material 'mat1'",
      "input": "1 In the Model Builder window, under Component 1 (comp1) right-click Materials and \n\nchoose Blank Material.\n\n2 In the Settings window for Material, locate the Material Contents section.\n\n9  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f3 In the table, enter the following settings:\n\nProperty\n\nVariable\n\nValue\n\nUnit\n\nProperty group\n\nRefractive index, real \npart\n\nn_iso ; nii = n_iso, \nnij = 0\n\nRefractive index, \nimaginary part\n\nki_iso ; kiii = \nki_iso, kiij = 0\n\n1\n\n0\n\n1\n\n1\n\nRefractive index\n\nRefractive index\n\nF U N D A M E N T A L\n\n1 In the Model Builder window, under Component 1 (comp1) click Electromagnetic Waves,",
      "output": "model.material('mat1').propertyGroup.create('RefractiveIndex', 'Refractive_index');",
      "explanation": "Physics: Unknown. Purpose: Defines the refractive index properties for the material used in the simulation",
      "confidence": 1.3,
      "source": "code_first",
      "category": "materials",
      "match_info": "Matched to PDF section: M A T E R I A L S\n\nMaterial 1 (mat1)",
      "comsol_ids": [
        "mat1",
        "RefractiveIndex"
      ]
    },
    {
      "instruction": "[Model] Sets the refractive index of material 'mat1' to 1",
      "input": "1 In the Model Builder window, under Component 1 (comp1) right-click Materials and \n\nchoose Blank Material.\n\n2 In the Settings window for Material, locate the Material Contents section.\n\n9  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f3 In the table, enter the following settings:\n\nProperty\n\nVariable\n\nValue\n\nUnit\n\nProperty group\n\nRefractive index, real \npart\n\nn_iso ; nii = n_iso, \nnij = 0\n\nRefractive index, \nimaginary part\n\nki_iso ; kiii = \nki_iso, kiij = 0\n\n1\n\n0\n\n1\n\n1\n\nRefractive index\n\nRefractive index\n\nF U N D A M E N T A L\n\n1 In the Model Builder window, under Component 1 (comp1) click Electromagnetic Waves,",
      "output": "model.material('mat1').propertyGroup('RefractiveIndex').set('n', {'1'});",
      "explanation": "Physics: Unknown. Purpose: To perfectly match the refractive index for each frequency in the second harmonic generation process",
      "confidence": 1.3,
      "source": "code_first",
      "category": "materials",
      "match_info": "Matched to PDF section: M A T E R I A L S\n\nMaterial 1 (mat1)",
      "comsol_ids": [
        "mat1",
        "RefractiveIndex"
      ]
    },
    {
      "instruction": "[Model] Sets the imaginary part of the refractive index to zero for material 'mat1'",
      "input": "1 In the Model Builder window, under Component 1 (comp1) right-click Materials and \n\nchoose Blank Material.\n\n2 In the Settings window for Material, locate the Material Contents section.\n\n9  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f3 In the table, enter the following settings:\n\nProperty\n\nVariable\n\nValue\n\nUnit\n\nProperty group\n\nRefractive index, real \npart\n\nn_iso ; nii = n_iso, \nnij = 0\n\nRefractive index, \nimaginary part\n\nki_iso ; kiii = \nki_iso, kiij = 0\n\n1\n\n0\n\n1\n\n1\n\nRefractive index\n\nRefractive index\n\nF U N D A M E N T A L\n\n1 In the Model Builder window, under Component 1 (comp1) click Electromagnetic Waves,",
      "output": "model.material('mat1').propertyGroup('RefractiveIndex').set('ki', {'0'});",
      "explanation": "Physics: Unknown. Purpose: Ensures perfect matching of refractive index for each frequency in the second harmonic generation process",
      "confidence": 1.3,
      "source": "code_first",
      "category": "materials",
      "match_info": "Matched to PDF section: M A T E R I A L S\n\nMaterial 1 (mat1)",
      "comsol_ids": [
        "mat1",
        "RefractiveIndex"
      ]
    },
    {
      "instruction": "[Model] Sets the label for the physics interface of the fundamental wave",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to organize and identify the physics interface for the fundamental wave in the simulation\nWhat to do: Sets the label for the physics interface of the fundamental wave",
      "output": "model.physics('ewfd').label('Fundamental');",
      "explanation": "Physics: Unknown. Purpose: This step is needed to organize and identify the physics interface for the fundamental wave in the simulation",
      "confidence": 0.3,
      "source": "code_first",
      "category": "physics",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "ewfd"
      ]
    },
    {
      "instruction": "[Model] Sets the tag for the Electromagnetic Waves, Frequency Domain interface to 'ewfd1'",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to differentiate between the two Electromagnetic Waves, Frequency Domain interfaces used in the model for the fundamental wave and the second harmonic\nWhat to do: Sets the tag for the Electromagnetic Waves, Frequency Domain interface to 'ewfd1'",
      "output": "model.physics('ewfd').tag('ewfd1');",
      "explanation": "Physics: Unknown. Purpose: This step is needed to differentiate between the two Electromagnetic Waves, Frequency Domain interfaces used in the model for the fundamental wave and the second harmonic",
      "confidence": 0.3,
      "source": "code_first",
      "category": "physics",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "ewfd"
      ]
    },
    {
      "instruction": "[Model] Sets the components of the Electromagnetic Waves, Frequency Domain interface to in-plane",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to define the direction of the electric field components for the fundamental wave\nWhat to do: Sets the components of the Electromagnetic Waves, Frequency Domain interface to in-plane",
      "output": "model.physics('ewfd1').prop('components').set('components', 'inplane');",
      "explanation": "Physics: Unknown. Purpose: This step is needed to define the direction of the electric field components for the fundamental wave",
      "confidence": 0.3,
      "source": "code_first",
      "category": "physics",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "ewfd1"
      ]
    },
    {
      "instruction": "[Model] Creates a polarization feature for the fundamental wave using the Electromagnetic Waves, Frequency Domain interface",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: To implement the coupling between the fundamental wave and the second harmonic wave in the second harmonic generation process\nWhat to do: Creates a polarization feature for the fundamental wave using the Electromagnetic Waves, Frequency Domain interface",
      "output": "model.physics('ewfd1').create('pol1', 'Polarization', 2);",
      "explanation": "Physics: Unknown. Purpose: To implement the coupling between the fundamental wave and the second harmonic wave in the second harmonic generation process",
      "confidence": 0.3,
      "source": "code_first",
      "category": "physics",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "ewfd1",
        "pol1"
      ]
    },
    {
      "instruction": "[Model] Sets the selection for the polarization feature of the fundamental wave interface",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to define the domain where the polarization feature is active, which is used to couple the fundamental wave and the second harmonic wave in the SHG process\nWhat to do: Sets the selection for the polarization feature of the fundamental wave interface",
      "output": "model.physics('ewfd1').feature('pol1').selection.set([2]);",
      "explanation": "Physics: Unknown. Purpose: This step is needed to define the domain where the polarization feature is active, which is used to couple the fundamental wave and the second harmonic wave in the SHG process",
      "confidence": 0.3,
      "source": "code_first",
      "category": "physics",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "ewfd1",
        "pol1"
      ]
    },
    {
      "instruction": "[Model] Sets the polarization coupling term between the fundamental wave and the second harmonic wave",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: To implement the coupling between the fundamental wave and the second harmonic wave in the second harmonic generation process\nWhat to do: Sets the polarization coupling term between the fundamental wave and the second harmonic wave",
      "output": "model.physics('ewfd1').feature('pol1').set('P', {'0' '2*d*ewfd2.Ey*conj(ewfd1.Ey)' '0'});",
      "explanation": "Physics: Unknown. Purpose: To implement the coupling between the fundamental wave and the second harmonic wave in the second harmonic generation process",
      "confidence": 0.3,
      "source": "code_first",
      "category": "physics",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "ewfd1",
        "ewfd2"
      ]
    },
    {
      "instruction": "[Model] Creates a Scattering boundary condition for the fundamental wave interface",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to define the scattering boundary condition for the fundamental wave interface in the second harmonic generation process\nWhat to do: Creates a Scattering boundary condition for the fundamental wave interface",
      "output": "model.physics('ewfd1').create('sctr1', 'Scattering', 1);",
      "explanation": "Physics: Unknown. Purpose: This step is needed to define the scattering boundary condition for the fundamental wave interface in the second harmonic generation process",
      "confidence": 0.3,
      "source": "code_first",
      "category": "physics",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "ewfd1",
        "sctr1"
      ]
    },
    {
      "instruction": "[Model] Sets the selection for the scattering feature of the first Electromagnetic Waves, Frequency Domain interface to domain 1",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to define the domain where the scattering feature is applied for the fundamental wave\nWhat to do: Sets the selection for the scattering feature of the first Electromagnetic Waves, Frequency Domain interface to domain 1",
      "output": "model.physics('ewfd1').feature('sctr1').selection.set([1]);",
      "explanation": "Physics: Unknown. Purpose: This step is needed to define the domain where the scattering feature is applied for the fundamental wave",
      "confidence": 0.3,
      "source": "code_first",
      "category": "physics",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "ewfd1",
        "sctr1"
      ]
    },
    {
      "instruction": "[Model] Sets the incident field for the fundamental wave to EField",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to define the incident field for the fundamental wave in the second harmonic generation process\nWhat to do: Sets the incident field for the fundamental wave to EField",
      "output": "model.physics('ewfd1').feature('sctr1').set('IncidentField', 'EField');",
      "explanation": "Physics: Unknown. Purpose: This step is needed to define the incident field for the fundamental wave in the second harmonic generation process",
      "confidence": 0.3,
      "source": "code_first",
      "category": "physics",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "ewfd1",
        "sctr1"
      ]
    },
    {
      "instruction": "[Model] Sets the incident electric field for the fundamental wave in the second harmonic generation model",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to define the input electric field for the fundamental wave, which will interact with the second harmonic wave in the simulation\nWhat to do: Sets the incident electric field for the fundamental wave in the second harmonic generation model",
      "output": "model.physics('ewfd1').feature('sctr1').set('E0i', {'0' 'E1' '0'});",
      "explanation": "Physics: Unknown. Purpose: This step is needed to define the input electric field for the fundamental wave, which will interact with the second harmonic wave in the simulation",
      "confidence": 0.3,
      "source": "code_first",
      "category": "physics",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "ewfd1",
        "sctr1"
      ]
    },
    {
      "instruction": "[Model] Creates a Scattering boundary condition for the second harmonic wave in the frequency domain model",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to define the scattering behavior of the second harmonic wave at the boundaries of the computational domain\nWhat to do: Creates a Scattering boundary condition for the second harmonic wave in the frequency domain model",
      "output": "model.physics('ewfd1').create('sctr2', 'Scattering', 1);",
      "explanation": "Physics: Unknown. Purpose: This step is needed to define the scattering behavior of the second harmonic wave at the boundaries of the computational domain",
      "confidence": 0.3,
      "source": "code_first",
      "category": "physics",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "ewfd1",
        "sctr2"
      ]
    },
    {
      "instruction": "[Model] Sets the selection for the scattering variable 'sctr2' in the 'ewfd1' physics interface to element 10",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to define the region where the scattering variable is applied in the second harmonic generation process\nWhat to do: Sets the selection for the scattering variable 'sctr2' in the 'ewfd1' physics interface to element 10",
      "output": "model.physics('ewfd1').feature('sctr2').selection.set([10]);",
      "explanation": "Physics: Unknown. Purpose: This step is needed to define the region where the scattering variable is applied in the second harmonic generation process",
      "confidence": 0.3,
      "source": "code_first",
      "category": "physics",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "ewfd1",
        "sctr2"
      ]
    },
    {
      "instruction": "[Model] Defines the second harmonic wave physics using the Electromagnetic Waves, Frequency Domain interface",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: To simulate the second harmonic generation process in the frequency domain\nWhat to do: Defines the second harmonic wave physics using the Electromagnetic Waves, Frequency Domain interface",
      "output": "model.physics('ewfd2').label('Second Harmonic');",
      "explanation": "Physics: Unknown. Purpose: To simulate the second harmonic generation process in the frequency domain",
      "confidence": 0.3,
      "source": "code_first",
      "category": "physics",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "ewfd2"
      ]
    },
    {
      "instruction": "[Model] Sets the components of the second harmonic wave to in-plane",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to define the direction of the second harmonic wave propagation in the simulation\nWhat to do: Sets the components of the second harmonic wave to in-plane",
      "output": "model.physics('ewfd2').prop('components').set('components', 'inplane');",
      "explanation": "Physics: Unknown. Purpose: This step is needed to define the direction of the second harmonic wave propagation in the simulation",
      "confidence": 0.3,
      "source": "code_first",
      "category": "physics",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "ewfd2"
      ]
    },
    {
      "instruction": "[Model] Sets the equation form of the second harmonic frequency domain interface to frequency form",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to define the frequency domain equation form for the second harmonic wave in the SHG process\nWhat to do: Sets the equation form of the second harmonic frequency domain interface to frequency form",
      "output": "model.physics('ewfd2').prop('EquationForm').setIndex('form', 'Frequency', 0);",
      "explanation": "Physics: Unknown. Purpose: This step is needed to define the frequency domain equation form for the second harmonic wave in the SHG process",
      "confidence": 0.3,
      "source": "code_first",
      "category": "physics",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "ewfd2"
      ]
    },
    {
      "instruction": "[Model] Sets the equation form for the second harmonic frequency domain interface to use a user-defined source term",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to define the coupling between the fundamental wave and the second harmonic wave in the second harmonic generation process\nWhat to do: Sets the equation form for the second harmonic frequency domain interface to use a user-defined source term",
      "output": "model.physics('ewfd2').prop('EquationForm').setIndex('freq_src', 'userdef', 0);",
      "explanation": "Physics: Unknown. Purpose: This step is needed to define the coupling between the fundamental wave and the second harmonic wave in the second harmonic generation process",
      "confidence": 0.3,
      "source": "code_first",
      "category": "physics",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "ewfd2"
      ]
    },
    {
      "instruction": "[Model] Sets the equation form index for the second harmonic frequency domain interface",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to define the equation form for the second harmonic frequency domain interface in the multi-physics simulation of second harmonic generation\nWhat to do: Sets the equation form index for the second harmonic frequency domain interface",
      "output": "model.physics('ewfd2').prop('EquationForm').setIndex('freq', 'f2', 0);",
      "explanation": "Physics: Unknown. Purpose: This step is needed to define the equation form for the second harmonic frequency domain interface in the multi-physics simulation of second harmonic generation",
      "confidence": 0.3,
      "source": "code_first",
      "category": "physics",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "ewfd2"
      ]
    },
    {
      "instruction": "[Model] Creates a polarization feature for the second harmonic wave using the Electromagnetic Waves, Frequency Domain interface",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: To implement the coupling between the fundamental wave and the second harmonic wave in the second harmonic generation process\nWhat to do: Creates a polarization feature for the second harmonic wave using the Electromagnetic Waves, Frequency Domain interface",
      "output": "model.physics('ewfd2').create('pol1', 'Polarization', 2);",
      "explanation": "Physics: Unknown. Purpose: To implement the coupling between the fundamental wave and the second harmonic wave in the second harmonic generation process",
      "confidence": 0.3,
      "source": "code_first",
      "category": "physics",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "ewfd2",
        "pol1"
      ]
    },
    {
      "instruction": "[Model] Sets the selection for the polarization feature of the second harmonic wave to domain 2",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to define the coupling between the fundamental wave and the second harmonic wave in the second domain\nWhat to do: Sets the selection for the polarization feature of the second harmonic wave to domain 2",
      "output": "model.physics('ewfd2').feature('pol1').selection.set([2]);",
      "explanation": "Physics: Unknown. Purpose: This step is needed to define the coupling between the fundamental wave and the second harmonic wave in the second domain",
      "confidence": 0.3,
      "source": "code_first",
      "category": "physics",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "ewfd2",
        "pol1"
      ]
    },
    {
      "instruction": "[Model] Sets the polarization source term for the second harmonic generation process",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to define the coupling between the fundamental wave and the second harmonic wave in the frequency domain simulation\nWhat to do: Sets the polarization source term for the second harmonic generation process",
      "output": "model.physics('ewfd2').feature('pol1').set('P', {'0' 'd*ewfd1.Ey*ewfd1.Ey' '0'});",
      "explanation": "Physics: Unknown. Purpose: This step is needed to define the coupling between the fundamental wave and the second harmonic wave in the frequency domain simulation",
      "confidence": 0.3,
      "source": "code_first",
      "category": "physics",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "ewfd2",
        "pol1",
        "ewfd1"
      ]
    },
    {
      "instruction": "[Model] Creates a Scattering boundary condition for the second harmonic wave",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to define the scattering boundary condition for the second harmonic wave in the simulation\nWhat to do: Creates a Scattering boundary condition for the second harmonic wave",
      "output": "model.physics('ewfd2').create('sctr1', 'Scattering', 1);",
      "explanation": "Physics: Unknown. Purpose: This step is needed to define the scattering boundary condition for the second harmonic wave in the simulation",
      "confidence": 0.3,
      "source": "code_first",
      "category": "physics",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "ewfd2",
        "sctr1"
      ]
    },
    {
      "instruction": "[Model] Sets the selection for the scattering variable 'sctr1' in the 'ewfd2' physics interface to domains 1 and 10",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to define the domains where the second harmonic generation process occurs\nWhat to do: Sets the selection for the scattering variable 'sctr1' in the 'ewfd2' physics interface to domains 1 and 10",
      "output": "model.physics('ewfd2').feature('sctr1').selection.set([1 10]);",
      "explanation": "Physics: Unknown. Purpose: This step is needed to define the domains where the second harmonic generation process occurs",
      "confidence": 0.3,
      "source": "code_first",
      "category": "physics",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "ewfd2",
        "sctr1"
      ]
    },
    {
      "instruction": "[Model] Creates a mesh mapping named 'map1' of type 'Map' using the mesh named 'mesh1' in the model",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to create a mesh suitable for the simulation of the second harmonic generation process\nWhat to do: Creates a mesh mapping named 'map1' of type 'Map' using the mesh named 'mesh1' in the model",
      "output": "model.mesh('mesh1').create('map1', 'Map');",
      "explanation": "Physics: Unknown. Purpose: This step is needed to create a mesh suitable for the simulation of the second harmonic generation process",
      "confidence": 0.3,
      "source": "code_first",
      "category": "mesh",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "mesh1",
        "map1"
      ]
    },
    {
      "instruction": "[Model] Sets the mesh size to custom in the model",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: To have a finer control over the mesh size for accurate results in the second harmonic generation simulation\nWhat to do: Sets the mesh size to custom in the model",
      "output": "model.mesh('mesh1').feature('size').set('custom', true);",
      "explanation": "Physics: Unknown. Purpose: To have a finer control over the mesh size for accurate results in the second harmonic generation simulation",
      "confidence": 0.3,
      "source": "code_first",
      "category": "mesh",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "mesh1",
        "size"
      ]
    },
    {
      "instruction": "[Model] Sets the maximum element size for the mesh to the value of the variable sim_h",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to control the mesh size for accurate simulation results\nWhat to do: Sets the maximum element size for the mesh to the value of the variable sim_h",
      "output": "model.mesh('mesh1').feature('size').set('hmax', 'sim_h');",
      "explanation": "Physics: Unknown. Purpose: This step is needed to control the mesh size for accurate simulation results",
      "confidence": 0.3,
      "source": "code_first",
      "category": "mesh",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "mesh1",
        "size"
      ]
    },
    {
      "instruction": "[Model] Sets the minimum mesh size to a variable 'sim_h' for mesh 'mesh1' in the model",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to control the mesh size for accurate simulation results\nWhat to do: Sets the minimum mesh size to a variable 'sim_h' for mesh 'mesh1' in the model",
      "output": "model.mesh('mesh1').feature('size').set('hmin', 'sim_h');",
      "explanation": "Physics: Unknown. Purpose: This step is needed to control the mesh size for accurate simulation results",
      "confidence": 0.3,
      "source": "code_first",
      "category": "mesh",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "mesh1",
        "size"
      ]
    },
    {
      "instruction": "[Model] Creates a variable 'var1' and sets its value to a coupling coefficient formula",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: To define the coupling coefficient for the second harmonic generation process\nWhat to do: Creates a variable 'var1' and sets its value to a coupling coefficient formula",
      "output": "model.variable.create('var1');\nmodel.variable('var1').model('comp1');\nmodel.variable('var1').set('gamma', 'sqrt(8*d^2*Z0_const^3*(2*pi*ewfd1.freq)^2*I1)');\nmodel.variable('var1').descr('gamma', 'Coupling coefficient');",
      "explanation": "Physics: Unknown. Purpose: To define the coupling coefficient for the second harmonic generation process",
      "confidence": 0.3,
      "source": "code_first",
      "category": "parameters",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "var1"
      ]
    },
    {
      "instruction": "[Model] Sets the frequency list for the study 'std1' to 'f1'",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to define the frequency range for the study, which is important for the frequency domain analysis of the second harmonic generation process\nWhat to do: Sets the frequency list for the study 'std1' to 'f1'",
      "output": "model.study('std1').feature('freq').set('plist', 'f1');",
      "explanation": "Physics: Unknown. Purpose: This step is needed to define the frequency range for the study, which is important for the frequency domain analysis of the second harmonic generation process",
      "confidence": 0.5,
      "source": "code_first",
      "category": "study",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "std1",
        "freq"
      ]
    },
    {
      "instruction": "[Model] Creates a solution object named 'sol1' for the model",
      "input": "1 In the Study toolbar, click \n\nShow Default Solver.\n\n2 In the Model Builder window, expand the Solution 1 (sol1) node, then click \n\nCompile Equations: Frequency Domain.\n\n3 In the Settings window for Compile Equations, locate the Study and Step section.\n\n4 Select the Split complex variables in real and imaginary parts check box.\n\n5 In the Model Builder window, under Study 1>Solver Configurations>Solution 1 (sol1) click \n\nStationary Solver 1.\n\n6 In the Settings window for Stationary Solver, locate the General section.\n\n7 In the Relative tolerance text field, type 0.001.\n\n8 In the Study toolbar, click \n\nCompute.\n\nSince the polarization expression for the fundamental harmonic contains the complex \nconjugate of the electric field, it is advisable to split complex variables in real and \nimaginary parts in order to improve convergence. Moreover, the tolerance has been \nmanually decreased to 0.001 to ensure that the nonlinear solver has converged to a \nsolution and not just incidentally reached below the tolerance.\n\nR E S U L T S\n\nFundamental\nIn the Settings window for 2D Plot Group, type Fundamental in the Label text field.\n\n16  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\fSurface 1\n1 In the Model Builder window, expand the Fundamental node, then click Surface 1.\n\n2 In the Settings window for Surface, locate the Expression section.\n\n3 In the Expression text field, type ewfd1.Ey.\n\nFundamental\nBefore finishing the plot, update the plot title.\n\n1 In the Model Builder window, click Fundamental.\n\n2 In the Settings window for 2D Plot Group, click to expand the Title section.\n\n3 From the Title type list, choose Manual.\n\n4 In the Title text area, type Electric field, y-component (V/m) for fundamental \n\nwave.\n\n5 In the Fundamental toolbar, click \n\nPlot.\n\nSecond Harmonic\n1 In the Model Builder window, under Results click Electric Field (ewfd2).\n\n2 In the Settings window for 2D Plot Group, type Second Harmonic in the Label text field.\n\nSurface 1\n1 In the Model Builder window, expand the Second Harmonic node, then click Surface 1.\n\n17  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f2 In the Settings window for Surface, locate the Expression section.\n\n3 In the Expression text field, type ewfd2.Ey.\n\nSecond Harmonic\nAgain, update the plot title.\n\n1 In the Model Builder window, click Second Harmonic.\n\n2 In the Settings window for 2D Plot Group, locate the Title section.\n\n3 From the Title type list, choose Manual.\n\n4 In the Title text area, type Electric field, y-component (V/m) for second \n\nharmonic wave.\n\n5 In the Second Harmonic toolbar, click \n\nPlot.\n\nNotice that the wavelength is half of that displayed in the Fundamental plot group for \nthe fundamental wave.\n\nElectric Fields\nNow create a line graph showing the electric fields for the fundamental and the second \nharmonic waves.\n\n1 In the Home toolbar, click \n\nAdd Plot Group and choose 1D Plot Group.\n\n2 In the Settings window for 1D Plot Group, type Electric Fields in the Label text field.\n\n18  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\fFundamental\n1 Right-click Electric Fields and choose Line Graph.\n\n2 In the Settings window for Line Graph, type Fundamental in the Label text field.\n\n3 Select Boundaries 2, 5, and 8 only.\n\n4 Locate the y-Axis Data section. In the Expression text field, type ewfd1.Ey.\n\n5 Locate the x-Axis Data section. From the Parameter list, choose Expression.\n\n6 In the Expression text field, type x.\n\n7 Click to expand the Coloring and Style section. From the Width list, choose 2.\n\n8 Click to expand the Legends section. Select the Show legends check box.\n\n9 Find the Include subsection. Select the Label check box.\n\n10 Clear the Solution check box.\n\n11 Right-click Fundamental and choose Duplicate.\n\nSecond Harmonic\n1 In the Model Builder window, under Results>Electric Fields click Fundamental 1.\n\n2 In the Settings window for Line Graph, type Second Harmonic in the Label text field.\n\n3 Locate the y-Axis Data section. In the Expression text field, type ewfd2.Ey.\n\nElectric Fields\n1 In the Model Builder window, click Electric Fields.\n\n2 In the Settings window for 1D Plot Group, click to expand the Title section.\n\n3 From the Title type list, choose Manual.\n\n19  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f4 In the Title text area, type Fundamental and Second Harmonic Electric Fields.\n\nPhoton Flux Density\n1 In the Home toolbar, click \n\nAdd Plot Group and choose 1D Plot Group.\n\n2 In the Settings window for 1D Plot Group, type Photon Flux Density in the Label text \n\nfield.\n\nSimulation Fundamental\n1 Right-click Photon Flux Density and choose Line Graph.\n\n2 In the Settings window for Line Graph, type Simulation Fundamental in the Label text \n\nfield.\n\n3 Select Boundaries 2, 5, and 8 only.\n\n4 Locate the y-Axis Data section. In the Expression text field, type ewfd1.Ey*\nconj(ewfd1.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd1.freq).\n\n5 Locate the x-Axis Data section. From the Parameter list, choose Expression.\n\n6 In the Expression text field, type x.\n\n7 Locate the Coloring and Style section. Find the Line style subsection. From the Line list, \n\nchoose None.\n\n8 From the Width list, choose 5.\n\n20  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f9 Find the Line markers subsection. From the Marker list, choose Diamond.\n\n10 From the Positioning list, choose Interpolated.\n\n11 In the Number text field, type 20.\n\n12 Locate the Legends section. Select the Show legends check box.\n\n13 Find the Include subsection. Select the Label check box.\n\n14 Clear the Solution check box.\n\n15 Right-click Simulation Fundamental and choose Duplicate.\n\nSimulation Second Harmonic\n1 In the Model Builder window, under Results>Photon Flux Density click \n\nSimulation Fundamental 1.\n\n2 In the Settings window for Line Graph, type Simulation Second Harmonic in the Label \n\ntext field.\n\n3 Locate the y-Axis Data section. In the Expression text field, type ewfd2.Ey*\nconj(ewfd2.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd2.freq).\n\n4 Right-click Simulation Second Harmonic and choose Duplicate.",
      "output": "model.sol.create('sol1');",
      "explanation": "Physics: Unknown. Purpose: To store and manage the solutions of the physics simulations",
      "confidence": 1.3,
      "source": "code_first",
      "category": "study",
      "match_info": "Matched to PDF section: Solution 1 (sol1)",
      "comsol_ids": [
        "sol1"
      ]
    },
    {
      "instruction": "[Model] Solves the study 'std1' using the solution 'sol1' from the model",
      "input": "1 In the Study toolbar, click \n\nShow Default Solver.\n\n2 In the Model Builder window, expand the Solution 1 (sol1) node, then click \n\nCompile Equations: Frequency Domain.\n\n3 In the Settings window for Compile Equations, locate the Study and Step section.\n\n4 Select the Split complex variables in real and imaginary parts check box.\n\n5 In the Model Builder window, under Study 1>Solver Configurations>Solution 1 (sol1) click \n\nStationary Solver 1.\n\n6 In the Settings window for Stationary Solver, locate the General section.\n\n7 In the Relative tolerance text field, type 0.001.\n\n8 In the Study toolbar, click \n\nCompute.\n\nSince the polarization expression for the fundamental harmonic contains the complex \nconjugate of the electric field, it is advisable to split complex variables in real and \nimaginary parts in order to improve convergence. Moreover, the tolerance has been \nmanually decreased to 0.001 to ensure that the nonlinear solver has converged to a \nsolution and not just incidentally reached below the tolerance.\n\nR E S U L T S\n\nFundamental\nIn the Settings window for 2D Plot Group, type Fundamental in the Label text field.\n\n16  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\fSurface 1\n1 In the Model Builder window, expand the Fundamental node, then click Surface 1.\n\n2 In the Settings window for Surface, locate the Expression section.\n\n3 In the Expression text field, type ewfd1.Ey.\n\nFundamental\nBefore finishing the plot, update the plot title.\n\n1 In the Model Builder window, click Fundamental.\n\n2 In the Settings window for 2D Plot Group, click to expand the Title section.\n\n3 From the Title type list, choose Manual.\n\n4 In the Title text area, type Electric field, y-component (V/m) for fundamental \n\nwave.\n\n5 In the Fundamental toolbar, click \n\nPlot.\n\nSecond Harmonic\n1 In the Model Builder window, under Results click Electric Field (ewfd2).\n\n2 In the Settings window for 2D Plot Group, type Second Harmonic in the Label text field.\n\nSurface 1\n1 In the Model Builder window, expand the Second Harmonic node, then click Surface 1.\n\n17  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f2 In the Settings window for Surface, locate the Expression section.\n\n3 In the Expression text field, type ewfd2.Ey.\n\nSecond Harmonic\nAgain, update the plot title.\n\n1 In the Model Builder window, click Second Harmonic.\n\n2 In the Settings window for 2D Plot Group, locate the Title section.\n\n3 From the Title type list, choose Manual.\n\n4 In the Title text area, type Electric field, y-component (V/m) for second \n\nharmonic wave.\n\n5 In the Second Harmonic toolbar, click \n\nPlot.\n\nNotice that the wavelength is half of that displayed in the Fundamental plot group for \nthe fundamental wave.\n\nElectric Fields\nNow create a line graph showing the electric fields for the fundamental and the second \nharmonic waves.\n\n1 In the Home toolbar, click \n\nAdd Plot Group and choose 1D Plot Group.\n\n2 In the Settings window for 1D Plot Group, type Electric Fields in the Label text field.\n\n18  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\fFundamental\n1 Right-click Electric Fields and choose Line Graph.\n\n2 In the Settings window for Line Graph, type Fundamental in the Label text field.\n\n3 Select Boundaries 2, 5, and 8 only.\n\n4 Locate the y-Axis Data section. In the Expression text field, type ewfd1.Ey.\n\n5 Locate the x-Axis Data section. From the Parameter list, choose Expression.\n\n6 In the Expression text field, type x.\n\n7 Click to expand the Coloring and Style section. From the Width list, choose 2.\n\n8 Click to expand the Legends section. Select the Show legends check box.\n\n9 Find the Include subsection. Select the Label check box.\n\n10 Clear the Solution check box.\n\n11 Right-click Fundamental and choose Duplicate.\n\nSecond Harmonic\n1 In the Model Builder window, under Results>Electric Fields click Fundamental 1.\n\n2 In the Settings window for Line Graph, type Second Harmonic in the Label text field.\n\n3 Locate the y-Axis Data section. In the Expression text field, type ewfd2.Ey.\n\nElectric Fields\n1 In the Model Builder window, click Electric Fields.\n\n2 In the Settings window for 1D Plot Group, click to expand the Title section.\n\n3 From the Title type list, choose Manual.\n\n19  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f4 In the Title text area, type Fundamental and Second Harmonic Electric Fields.\n\nPhoton Flux Density\n1 In the Home toolbar, click \n\nAdd Plot Group and choose 1D Plot Group.\n\n2 In the Settings window for 1D Plot Group, type Photon Flux Density in the Label text \n\nfield.\n\nSimulation Fundamental\n1 Right-click Photon Flux Density and choose Line Graph.\n\n2 In the Settings window for Line Graph, type Simulation Fundamental in the Label text \n\nfield.\n\n3 Select Boundaries 2, 5, and 8 only.\n\n4 Locate the y-Axis Data section. In the Expression text field, type ewfd1.Ey*\nconj(ewfd1.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd1.freq).\n\n5 Locate the x-Axis Data section. From the Parameter list, choose Expression.\n\n6 In the Expression text field, type x.\n\n7 Locate the Coloring and Style section. Find the Line style subsection. From the Line list, \n\nchoose None.\n\n8 From the Width list, choose 5.\n\n20  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f9 Find the Line markers subsection. From the Marker list, choose Diamond.\n\n10 From the Positioning list, choose Interpolated.\n\n11 In the Number text field, type 20.\n\n12 Locate the Legends section. Select the Show legends check box.\n\n13 Find the Include subsection. Select the Label check box.\n\n14 Clear the Solution check box.\n\n15 Right-click Simulation Fundamental and choose Duplicate.\n\nSimulation Second Harmonic\n1 In the Model Builder window, under Results>Photon Flux Density click \n\nSimulation Fundamental 1.\n\n2 In the Settings window for Line Graph, type Simulation Second Harmonic in the Label \n\ntext field.\n\n3 Locate the y-Axis Data section. In the Expression text field, type ewfd2.Ey*\nconj(ewfd2.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd2.freq).\n\n4 Right-click Simulation Second Harmonic and choose Duplicate.",
      "output": "model.sol('sol1').study('std1');",
      "explanation": "Physics: Unknown. Purpose: This step is needed to solve the study and obtain the results for analysis and comparison with the analytical solution",
      "confidence": 1.3,
      "source": "code_first",
      "category": "study",
      "match_info": "Matched to PDF section: Solution 1 (sol1)",
      "comsol_ids": [
        "sol1",
        "std1"
      ]
    },
    {
      "instruction": "[Model] Creates a study step for the frequency domain study",
      "input": "1 In the Study toolbar, click \n\nShow Default Solver.\n\n2 In the Model Builder window, expand the Solution 1 (sol1) node, then click \n\nCompile Equations: Frequency Domain.\n\n3 In the Settings window for Compile Equations, locate the Study and Step section.\n\n4 Select the Split complex variables in real and imaginary parts check box.\n\n5 In the Model Builder window, under Study 1>Solver Configurations>Solution 1 (sol1) click \n\nStationary Solver 1.\n\n6 In the Settings window for Stationary Solver, locate the General section.\n\n7 In the Relative tolerance text field, type 0.001.\n\n8 In the Study toolbar, click \n\nCompute.\n\nSince the polarization expression for the fundamental harmonic contains the complex \nconjugate of the electric field, it is advisable to split complex variables in real and \nimaginary parts in order to improve convergence. Moreover, the tolerance has been \nmanually decreased to 0.001 to ensure that the nonlinear solver has converged to a \nsolution and not just incidentally reached below the tolerance.\n\nR E S U L T S\n\nFundamental\nIn the Settings window for 2D Plot Group, type Fundamental in the Label text field.\n\n16  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\fSurface 1\n1 In the Model Builder window, expand the Fundamental node, then click Surface 1.\n\n2 In the Settings window for Surface, locate the Expression section.\n\n3 In the Expression text field, type ewfd1.Ey.\n\nFundamental\nBefore finishing the plot, update the plot title.\n\n1 In the Model Builder window, click Fundamental.\n\n2 In the Settings window for 2D Plot Group, click to expand the Title section.\n\n3 From the Title type list, choose Manual.\n\n4 In the Title text area, type Electric field, y-component (V/m) for fundamental \n\nwave.\n\n5 In the Fundamental toolbar, click \n\nPlot.\n\nSecond Harmonic\n1 In the Model Builder window, under Results click Electric Field (ewfd2).\n\n2 In the Settings window for 2D Plot Group, type Second Harmonic in the Label text field.\n\nSurface 1\n1 In the Model Builder window, expand the Second Harmonic node, then click Surface 1.\n\n17  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f2 In the Settings window for Surface, locate the Expression section.\n\n3 In the Expression text field, type ewfd2.Ey.\n\nSecond Harmonic\nAgain, update the plot title.\n\n1 In the Model Builder window, click Second Harmonic.\n\n2 In the Settings window for 2D Plot Group, locate the Title section.\n\n3 From the Title type list, choose Manual.\n\n4 In the Title text area, type Electric field, y-component (V/m) for second \n\nharmonic wave.\n\n5 In the Second Harmonic toolbar, click \n\nPlot.\n\nNotice that the wavelength is half of that displayed in the Fundamental plot group for \nthe fundamental wave.\n\nElectric Fields\nNow create a line graph showing the electric fields for the fundamental and the second \nharmonic waves.\n\n1 In the Home toolbar, click \n\nAdd Plot Group and choose 1D Plot Group.\n\n2 In the Settings window for 1D Plot Group, type Electric Fields in the Label text field.\n\n18  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\fFundamental\n1 Right-click Electric Fields and choose Line Graph.\n\n2 In the Settings window for Line Graph, type Fundamental in the Label text field.\n\n3 Select Boundaries 2, 5, and 8 only.\n\n4 Locate the y-Axis Data section. In the Expression text field, type ewfd1.Ey.\n\n5 Locate the x-Axis Data section. From the Parameter list, choose Expression.\n\n6 In the Expression text field, type x.\n\n7 Click to expand the Coloring and Style section. From the Width list, choose 2.\n\n8 Click to expand the Legends section. Select the Show legends check box.\n\n9 Find the Include subsection. Select the Label check box.\n\n10 Clear the Solution check box.\n\n11 Right-click Fundamental and choose Duplicate.\n\nSecond Harmonic\n1 In the Model Builder window, under Results>Electric Fields click Fundamental 1.\n\n2 In the Settings window for Line Graph, type Second Harmonic in the Label text field.\n\n3 Locate the y-Axis Data section. In the Expression text field, type ewfd2.Ey.\n\nElectric Fields\n1 In the Model Builder window, click Electric Fields.\n\n2 In the Settings window for 1D Plot Group, click to expand the Title section.\n\n3 From the Title type list, choose Manual.\n\n19  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f4 In the Title text area, type Fundamental and Second Harmonic Electric Fields.\n\nPhoton Flux Density\n1 In the Home toolbar, click \n\nAdd Plot Group and choose 1D Plot Group.\n\n2 In the Settings window for 1D Plot Group, type Photon Flux Density in the Label text \n\nfield.\n\nSimulation Fundamental\n1 Right-click Photon Flux Density and choose Line Graph.\n\n2 In the Settings window for Line Graph, type Simulation Fundamental in the Label text \n\nfield.\n\n3 Select Boundaries 2, 5, and 8 only.\n\n4 Locate the y-Axis Data section. In the Expression text field, type ewfd1.Ey*\nconj(ewfd1.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd1.freq).\n\n5 Locate the x-Axis Data section. From the Parameter list, choose Expression.\n\n6 In the Expression text field, type x.\n\n7 Locate the Coloring and Style section. Find the Line style subsection. From the Line list, \n\nchoose None.\n\n8 From the Width list, choose 5.\n\n20  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f9 Find the Line markers subsection. From the Marker list, choose Diamond.\n\n10 From the Positioning list, choose Interpolated.\n\n11 In the Number text field, type 20.\n\n12 Locate the Legends section. Select the Show legends check box.\n\n13 Find the Include subsection. Select the Label check box.\n\n14 Clear the Solution check box.\n\n15 Right-click Simulation Fundamental and choose Duplicate.\n\nSimulation Second Harmonic\n1 In the Model Builder window, under Results>Photon Flux Density click \n\nSimulation Fundamental 1.\n\n2 In the Settings window for Line Graph, type Simulation Second Harmonic in the Label \n\ntext field.\n\n3 Locate the y-Axis Data section. In the Expression text field, type ewfd2.Ey*\nconj(ewfd2.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd2.freq).\n\n4 Right-click Simulation Second Harmonic and choose Duplicate.",
      "output": "model.sol('sol1').create('st1', 'StudyStep');\nmodel.sol('sol1').feature('st1').set('study', 'std1');\nmodel.sol('sol1').feature('st1').set('studystep', 'freq');",
      "explanation": "Physics: Unknown. Purpose: This step is needed to set up the frequency domain study for the second harmonic generation process",
      "confidence": 1.3,
      "source": "code_first",
      "category": "study",
      "match_info": "Matched to PDF section: Solution 1 (sol1)",
      "comsol_ids": [
        "sol1",
        "st1",
        "std1",
        "freq"
      ]
    },
    {
      "instruction": "[Model] Creates a new variable 'v1' in the solution 'sol1' and sets its control to frequency",
      "input": "1 In the Study toolbar, click \n\nShow Default Solver.\n\n2 In the Model Builder window, expand the Solution 1 (sol1) node, then click \n\nCompile Equations: Frequency Domain.\n\n3 In the Settings window for Compile Equations, locate the Study and Step section.\n\n4 Select the Split complex variables in real and imaginary parts check box.\n\n5 In the Model Builder window, under Study 1>Solver Configurations>Solution 1 (sol1) click \n\nStationary Solver 1.\n\n6 In the Settings window for Stationary Solver, locate the General section.\n\n7 In the Relative tolerance text field, type 0.001.\n\n8 In the Study toolbar, click \n\nCompute.\n\nSince the polarization expression for the fundamental harmonic contains the complex \nconjugate of the electric field, it is advisable to split complex variables in real and \nimaginary parts in order to improve convergence. Moreover, the tolerance has been \nmanually decreased to 0.001 to ensure that the nonlinear solver has converged to a \nsolution and not just incidentally reached below the tolerance.\n\nR E S U L T S\n\nFundamental\nIn the Settings window for 2D Plot Group, type Fundamental in the Label text field.\n\n16  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\fSurface 1\n1 In the Model Builder window, expand the Fundamental node, then click Surface 1.\n\n2 In the Settings window for Surface, locate the Expression section.\n\n3 In the Expression text field, type ewfd1.Ey.\n\nFundamental\nBefore finishing the plot, update the plot title.\n\n1 In the Model Builder window, click Fundamental.\n\n2 In the Settings window for 2D Plot Group, click to expand the Title section.\n\n3 From the Title type list, choose Manual.\n\n4 In the Title text area, type Electric field, y-component (V/m) for fundamental \n\nwave.\n\n5 In the Fundamental toolbar, click \n\nPlot.\n\nSecond Harmonic\n1 In the Model Builder window, under Results click Electric Field (ewfd2).\n\n2 In the Settings window for 2D Plot Group, type Second Harmonic in the Label text field.\n\nSurface 1\n1 In the Model Builder window, expand the Second Harmonic node, then click Surface 1.\n\n17  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f2 In the Settings window for Surface, locate the Expression section.\n\n3 In the Expression text field, type ewfd2.Ey.\n\nSecond Harmonic\nAgain, update the plot title.\n\n1 In the Model Builder window, click Second Harmonic.\n\n2 In the Settings window for 2D Plot Group, locate the Title section.\n\n3 From the Title type list, choose Manual.\n\n4 In the Title text area, type Electric field, y-component (V/m) for second \n\nharmonic wave.\n\n5 In the Second Harmonic toolbar, click \n\nPlot.\n\nNotice that the wavelength is half of that displayed in the Fundamental plot group for \nthe fundamental wave.\n\nElectric Fields\nNow create a line graph showing the electric fields for the fundamental and the second \nharmonic waves.\n\n1 In the Home toolbar, click \n\nAdd Plot Group and choose 1D Plot Group.\n\n2 In the Settings window for 1D Plot Group, type Electric Fields in the Label text field.\n\n18  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\fFundamental\n1 Right-click Electric Fields and choose Line Graph.\n\n2 In the Settings window for Line Graph, type Fundamental in the Label text field.\n\n3 Select Boundaries 2, 5, and 8 only.\n\n4 Locate the y-Axis Data section. In the Expression text field, type ewfd1.Ey.\n\n5 Locate the x-Axis Data section. From the Parameter list, choose Expression.\n\n6 In the Expression text field, type x.\n\n7 Click to expand the Coloring and Style section. From the Width list, choose 2.\n\n8 Click to expand the Legends section. Select the Show legends check box.\n\n9 Find the Include subsection. Select the Label check box.\n\n10 Clear the Solution check box.\n\n11 Right-click Fundamental and choose Duplicate.\n\nSecond Harmonic\n1 In the Model Builder window, under Results>Electric Fields click Fundamental 1.\n\n2 In the Settings window for Line Graph, type Second Harmonic in the Label text field.\n\n3 Locate the y-Axis Data section. In the Expression text field, type ewfd2.Ey.\n\nElectric Fields\n1 In the Model Builder window, click Electric Fields.\n\n2 In the Settings window for 1D Plot Group, click to expand the Title section.\n\n3 From the Title type list, choose Manual.\n\n19  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f4 In the Title text area, type Fundamental and Second Harmonic Electric Fields.\n\nPhoton Flux Density\n1 In the Home toolbar, click \n\nAdd Plot Group and choose 1D Plot Group.\n\n2 In the Settings window for 1D Plot Group, type Photon Flux Density in the Label text \n\nfield.\n\nSimulation Fundamental\n1 Right-click Photon Flux Density and choose Line Graph.\n\n2 In the Settings window for Line Graph, type Simulation Fundamental in the Label text \n\nfield.\n\n3 Select Boundaries 2, 5, and 8 only.\n\n4 Locate the y-Axis Data section. In the Expression text field, type ewfd1.Ey*\nconj(ewfd1.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd1.freq).\n\n5 Locate the x-Axis Data section. From the Parameter list, choose Expression.\n\n6 In the Expression text field, type x.\n\n7 Locate the Coloring and Style section. Find the Line style subsection. From the Line list, \n\nchoose None.\n\n8 From the Width list, choose 5.\n\n20  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f9 Find the Line markers subsection. From the Marker list, choose Diamond.\n\n10 From the Positioning list, choose Interpolated.\n\n11 In the Number text field, type 20.\n\n12 Locate the Legends section. Select the Show legends check box.\n\n13 Find the Include subsection. Select the Label check box.\n\n14 Clear the Solution check box.\n\n15 Right-click Simulation Fundamental and choose Duplicate.\n\nSimulation Second Harmonic\n1 In the Model Builder window, under Results>Photon Flux Density click \n\nSimulation Fundamental 1.\n\n2 In the Settings window for Line Graph, type Simulation Second Harmonic in the Label \n\ntext field.\n\n3 Locate the y-Axis Data section. In the Expression text field, type ewfd2.Ey*\nconj(ewfd2.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd2.freq).\n\n4 Right-click Simulation Second Harmonic and choose Duplicate.",
      "output": "model.sol('sol1').create('v1', 'Variables');\nmodel.sol('sol1').feature('v1').set('control', 'freq');",
      "explanation": "Physics: Unknown. Purpose: This step is needed to define a variable for controlling the frequency in the study",
      "confidence": 1.3,
      "source": "code_first",
      "category": "study",
      "match_info": "Matched to PDF section: Solution 1 (sol1)",
      "comsol_ids": [
        "sol1",
        "v1"
      ]
    },
    {
      "instruction": "[Model] Creates a stationary solver and sets the tolerance for the solution",
      "input": "1 In the Study toolbar, click \n\nShow Default Solver.\n\n2 In the Model Builder window, expand the Solution 1 (sol1) node, then click \n\nCompile Equations: Frequency Domain.\n\n3 In the Settings window for Compile Equations, locate the Study and Step section.\n\n4 Select the Split complex variables in real and imaginary parts check box.\n\n5 In the Model Builder window, under Study 1>Solver Configurations>Solution 1 (sol1) click \n\nStationary Solver 1.\n\n6 In the Settings window for Stationary Solver, locate the General section.\n\n7 In the Relative tolerance text field, type 0.001.\n\n8 In the Study toolbar, click \n\nCompute.\n\nSince the polarization expression for the fundamental harmonic contains the complex \nconjugate of the electric field, it is advisable to split complex variables in real and \nimaginary parts in order to improve convergence. Moreover, the tolerance has been \nmanually decreased to 0.001 to ensure that the nonlinear solver has converged to a \nsolution and not just incidentally reached below the tolerance.\n\nR E S U L T S\n\nFundamental\nIn the Settings window for 2D Plot Group, type Fundamental in the Label text field.\n\n16  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\fSurface 1\n1 In the Model Builder window, expand the Fundamental node, then click Surface 1.\n\n2 In the Settings window for Surface, locate the Expression section.\n\n3 In the Expression text field, type ewfd1.Ey.\n\nFundamental\nBefore finishing the plot, update the plot title.\n\n1 In the Model Builder window, click Fundamental.\n\n2 In the Settings window for 2D Plot Group, click to expand the Title section.\n\n3 From the Title type list, choose Manual.\n\n4 In the Title text area, type Electric field, y-component (V/m) for fundamental \n\nwave.\n\n5 In the Fundamental toolbar, click \n\nPlot.\n\nSecond Harmonic\n1 In the Model Builder window, under Results click Electric Field (ewfd2).\n\n2 In the Settings window for 2D Plot Group, type Second Harmonic in the Label text field.\n\nSurface 1\n1 In the Model Builder window, expand the Second Harmonic node, then click Surface 1.\n\n17  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f2 In the Settings window for Surface, locate the Expression section.\n\n3 In the Expression text field, type ewfd2.Ey.\n\nSecond Harmonic\nAgain, update the plot title.\n\n1 In the Model Builder window, click Second Harmonic.\n\n2 In the Settings window for 2D Plot Group, locate the Title section.\n\n3 From the Title type list, choose Manual.\n\n4 In the Title text area, type Electric field, y-component (V/m) for second \n\nharmonic wave.\n\n5 In the Second Harmonic toolbar, click \n\nPlot.\n\nNotice that the wavelength is half of that displayed in the Fundamental plot group for \nthe fundamental wave.\n\nElectric Fields\nNow create a line graph showing the electric fields for the fundamental and the second \nharmonic waves.\n\n1 In the Home toolbar, click \n\nAdd Plot Group and choose 1D Plot Group.\n\n2 In the Settings window for 1D Plot Group, type Electric Fields in the Label text field.\n\n18  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\fFundamental\n1 Right-click Electric Fields and choose Line Graph.\n\n2 In the Settings window for Line Graph, type Fundamental in the Label text field.\n\n3 Select Boundaries 2, 5, and 8 only.\n\n4 Locate the y-Axis Data section. In the Expression text field, type ewfd1.Ey.\n\n5 Locate the x-Axis Data section. From the Parameter list, choose Expression.\n\n6 In the Expression text field, type x.\n\n7 Click to expand the Coloring and Style section. From the Width list, choose 2.\n\n8 Click to expand the Legends section. Select the Show legends check box.\n\n9 Find the Include subsection. Select the Label check box.\n\n10 Clear the Solution check box.\n\n11 Right-click Fundamental and choose Duplicate.\n\nSecond Harmonic\n1 In the Model Builder window, under Results>Electric Fields click Fundamental 1.\n\n2 In the Settings window for Line Graph, type Second Harmonic in the Label text field.\n\n3 Locate the y-Axis Data section. In the Expression text field, type ewfd2.Ey.\n\nElectric Fields\n1 In the Model Builder window, click Electric Fields.\n\n2 In the Settings window for 1D Plot Group, click to expand the Title section.\n\n3 From the Title type list, choose Manual.\n\n19  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f4 In the Title text area, type Fundamental and Second Harmonic Electric Fields.\n\nPhoton Flux Density\n1 In the Home toolbar, click \n\nAdd Plot Group and choose 1D Plot Group.\n\n2 In the Settings window for 1D Plot Group, type Photon Flux Density in the Label text \n\nfield.\n\nSimulation Fundamental\n1 Right-click Photon Flux Density and choose Line Graph.\n\n2 In the Settings window for Line Graph, type Simulation Fundamental in the Label text \n\nfield.\n\n3 Select Boundaries 2, 5, and 8 only.\n\n4 Locate the y-Axis Data section. In the Expression text field, type ewfd1.Ey*\nconj(ewfd1.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd1.freq).\n\n5 Locate the x-Axis Data section. From the Parameter list, choose Expression.\n\n6 In the Expression text field, type x.\n\n7 Locate the Coloring and Style section. Find the Line style subsection. From the Line list, \n\nchoose None.\n\n8 From the Width list, choose 5.\n\n20  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f9 Find the Line markers subsection. From the Marker list, choose Diamond.\n\n10 From the Positioning list, choose Interpolated.\n\n11 In the Number text field, type 20.\n\n12 Locate the Legends section. Select the Show legends check box.\n\n13 Find the Include subsection. Select the Label check box.\n\n14 Clear the Solution check box.\n\n15 Right-click Simulation Fundamental and choose Duplicate.\n\nSimulation Second Harmonic\n1 In the Model Builder window, under Results>Photon Flux Density click \n\nSimulation Fundamental 1.\n\n2 In the Settings window for Line Graph, type Simulation Second Harmonic in the Label \n\ntext field.\n\n3 Locate the y-Axis Data section. In the Expression text field, type ewfd2.Ey*\nconj(ewfd2.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd2.freq).\n\n4 Right-click Simulation Second Harmonic and choose Duplicate.",
      "output": "model.sol('sol1').create('s1', 'Stationary');\nmodel.sol('sol1').feature('s1').set('stol', 0.01);",
      "explanation": "Physics: Unknown. Purpose: This step is needed to set up the solver for the stationary study in the simulation",
      "confidence": 1.3,
      "source": "code_first",
      "category": "study",
      "match_info": "Matched to PDF section: Solution 1 (sol1)",
      "comsol_ids": [
        "sol1",
        "s1"
      ]
    },
    {
      "instruction": "[Model] Creates a parametric solver with frequency as the parameter and sets various solver settings",
      "input": "1 In the Study toolbar, click \n\nShow Default Solver.\n\n2 In the Model Builder window, expand the Solution 1 (sol1) node, then click \n\nCompile Equations: Frequency Domain.\n\n3 In the Settings window for Compile Equations, locate the Study and Step section.\n\n4 Select the Split complex variables in real and imaginary parts check box.\n\n5 In the Model Builder window, under Study 1>Solver Configurations>Solution 1 (sol1) click \n\nStationary Solver 1.\n\n6 In the Settings window for Stationary Solver, locate the General section.\n\n7 In the Relative tolerance text field, type 0.001.\n\n8 In the Study toolbar, click \n\nCompute.\n\nSince the polarization expression for the fundamental harmonic contains the complex \nconjugate of the electric field, it is advisable to split complex variables in real and \nimaginary parts in order to improve convergence. Moreover, the tolerance has been \nmanually decreased to 0.001 to ensure that the nonlinear solver has converged to a \nsolution and not just incidentally reached below the tolerance.\n\nR E S U L T S\n\nFundamental\nIn the Settings window for 2D Plot Group, type Fundamental in the Label text field.\n\n16  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\fSurface 1\n1 In the Model Builder window, expand the Fundamental node, then click Surface 1.\n\n2 In the Settings window for Surface, locate the Expression section.\n\n3 In the Expression text field, type ewfd1.Ey.\n\nFundamental\nBefore finishing the plot, update the plot title.\n\n1 In the Model Builder window, click Fundamental.\n\n2 In the Settings window for 2D Plot Group, click to expand the Title section.\n\n3 From the Title type list, choose Manual.\n\n4 In the Title text area, type Electric field, y-component (V/m) for fundamental \n\nwave.\n\n5 In the Fundamental toolbar, click \n\nPlot.\n\nSecond Harmonic\n1 In the Model Builder window, under Results click Electric Field (ewfd2).\n\n2 In the Settings window for 2D Plot Group, type Second Harmonic in the Label text field.\n\nSurface 1\n1 In the Model Builder window, expand the Second Harmonic node, then click Surface 1.\n\n17  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f2 In the Settings window for Surface, locate the Expression section.\n\n3 In the Expression text field, type ewfd2.Ey.\n\nSecond Harmonic\nAgain, update the plot title.\n\n1 In the Model Builder window, click Second Harmonic.\n\n2 In the Settings window for 2D Plot Group, locate the Title section.\n\n3 From the Title type list, choose Manual.\n\n4 In the Title text area, type Electric field, y-component (V/m) for second \n\nharmonic wave.\n\n5 In the Second Harmonic toolbar, click \n\nPlot.\n\nNotice that the wavelength is half of that displayed in the Fundamental plot group for \nthe fundamental wave.\n\nElectric Fields\nNow create a line graph showing the electric fields for the fundamental and the second \nharmonic waves.\n\n1 In the Home toolbar, click \n\nAdd Plot Group and choose 1D Plot Group.\n\n2 In the Settings window for 1D Plot Group, type Electric Fields in the Label text field.\n\n18  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\fFundamental\n1 Right-click Electric Fields and choose Line Graph.\n\n2 In the Settings window for Line Graph, type Fundamental in the Label text field.\n\n3 Select Boundaries 2, 5, and 8 only.\n\n4 Locate the y-Axis Data section. In the Expression text field, type ewfd1.Ey.\n\n5 Locate the x-Axis Data section. From the Parameter list, choose Expression.\n\n6 In the Expression text field, type x.\n\n7 Click to expand the Coloring and Style section. From the Width list, choose 2.\n\n8 Click to expand the Legends section. Select the Show legends check box.\n\n9 Find the Include subsection. Select the Label check box.\n\n10 Clear the Solution check box.\n\n11 Right-click Fundamental and choose Duplicate.\n\nSecond Harmonic\n1 In the Model Builder window, under Results>Electric Fields click Fundamental 1.\n\n2 In the Settings window for Line Graph, type Second Harmonic in the Label text field.\n\n3 Locate the y-Axis Data section. In the Expression text field, type ewfd2.Ey.\n\nElectric Fields\n1 In the Model Builder window, click Electric Fields.\n\n2 In the Settings window for 1D Plot Group, click to expand the Title section.\n\n3 From the Title type list, choose Manual.\n\n19  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f4 In the Title text area, type Fundamental and Second Harmonic Electric Fields.\n\nPhoton Flux Density\n1 In the Home toolbar, click \n\nAdd Plot Group and choose 1D Plot Group.\n\n2 In the Settings window for 1D Plot Group, type Photon Flux Density in the Label text \n\nfield.\n\nSimulation Fundamental\n1 Right-click Photon Flux Density and choose Line Graph.\n\n2 In the Settings window for Line Graph, type Simulation Fundamental in the Label text \n\nfield.\n\n3 Select Boundaries 2, 5, and 8 only.\n\n4 Locate the y-Axis Data section. In the Expression text field, type ewfd1.Ey*\nconj(ewfd1.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd1.freq).\n\n5 Locate the x-Axis Data section. From the Parameter list, choose Expression.\n\n6 In the Expression text field, type x.\n\n7 Locate the Coloring and Style section. Find the Line style subsection. From the Line list, \n\nchoose None.\n\n8 From the Width list, choose 5.\n\n20  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f9 Find the Line markers subsection. From the Marker list, choose Diamond.\n\n10 From the Positioning list, choose Interpolated.\n\n11 In the Number text field, type 20.\n\n12 Locate the Legends section. Select the Show legends check box.\n\n13 Find the Include subsection. Select the Label check box.\n\n14 Clear the Solution check box.\n\n15 Right-click Simulation Fundamental and choose Duplicate.\n\nSimulation Second Harmonic\n1 In the Model Builder window, under Results>Photon Flux Density click \n\nSimulation Fundamental 1.\n\n2 In the Settings window for Line Graph, type Simulation Second Harmonic in the Label \n\ntext field.\n\n3 Locate the y-Axis Data section. In the Expression text field, type ewfd2.Ey*\nconj(ewfd2.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd2.freq).\n\n4 Right-click Simulation Second Harmonic and choose Duplicate.",
      "output": "model.sol('sol1').feature('s1').create('p1', 'Parametric');\nmodel.sol('sol1').feature('s1').feature.remove('pDef');\nmodel.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});\nmodel.sol('sol1').feature('s1').feature('p1').set('plistarr', {'f1'});\nmodel.sol('sol1').feature('s1').feature('p1').set('punit', {'THz'});\nmodel.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');\nmodel.sol('sol1').feature('s1').feature('p1').set('preusesol', 'no');\nmodel.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');\nmodel.sol('sol1').feature('s1').feature('p1').set('plot', 'off');\nmodel.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'Default');\nmodel.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');\nmodel.sol('sol1').feature('s1').feature('p1').set('probes', {});\nmodel.sol('sol1').feature('s1').feature('p1').set('control', 'freq');\nmodel.sol('sol1').feature('s1').set('linpmethod', 'sol');\nmodel.sol('sol1').feature('s1').set('linpsol', 'zero');\nmodel.sol('sol1').feature('s1').set('control', 'freq');\nmodel.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);\nmodel.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);",
      "explanation": "Physics: Unknown. Purpose: This step is needed to set up a parametric study for the frequency domain analysis of the second harmonic generation process",
      "confidence": 1.3,
      "source": "code_first",
      "category": "study",
      "match_info": "Matched to PDF section: Solution 1 (sol1)",
      "comsol_ids": [
        "sol1",
        "s1",
        "p1"
      ]
    },
    {
      "instruction": "[Model] Creates a segregated solver for the solution 'sol1'",
      "input": "1 In the Study toolbar, click \n\nShow Default Solver.\n\n2 In the Model Builder window, expand the Solution 1 (sol1) node, then click \n\nCompile Equations: Frequency Domain.\n\n3 In the Settings window for Compile Equations, locate the Study and Step section.\n\n4 Select the Split complex variables in real and imaginary parts check box.\n\n5 In the Model Builder window, under Study 1>Solver Configurations>Solution 1 (sol1) click \n\nStationary Solver 1.\n\n6 In the Settings window for Stationary Solver, locate the General section.\n\n7 In the Relative tolerance text field, type 0.001.\n\n8 In the Study toolbar, click \n\nCompute.\n\nSince the polarization expression for the fundamental harmonic contains the complex \nconjugate of the electric field, it is advisable to split complex variables in real and \nimaginary parts in order to improve convergence. Moreover, the tolerance has been \nmanually decreased to 0.001 to ensure that the nonlinear solver has converged to a \nsolution and not just incidentally reached below the tolerance.\n\nR E S U L T S\n\nFundamental\nIn the Settings window for 2D Plot Group, type Fundamental in the Label text field.\n\n16  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\fSurface 1\n1 In the Model Builder window, expand the Fundamental node, then click Surface 1.\n\n2 In the Settings window for Surface, locate the Expression section.\n\n3 In the Expression text field, type ewfd1.Ey.\n\nFundamental\nBefore finishing the plot, update the plot title.\n\n1 In the Model Builder window, click Fundamental.\n\n2 In the Settings window for 2D Plot Group, click to expand the Title section.\n\n3 From the Title type list, choose Manual.\n\n4 In the Title text area, type Electric field, y-component (V/m) for fundamental \n\nwave.\n\n5 In the Fundamental toolbar, click \n\nPlot.\n\nSecond Harmonic\n1 In the Model Builder window, under Results click Electric Field (ewfd2).\n\n2 In the Settings window for 2D Plot Group, type Second Harmonic in the Label text field.\n\nSurface 1\n1 In the Model Builder window, expand the Second Harmonic node, then click Surface 1.\n\n17  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f2 In the Settings window for Surface, locate the Expression section.\n\n3 In the Expression text field, type ewfd2.Ey.\n\nSecond Harmonic\nAgain, update the plot title.\n\n1 In the Model Builder window, click Second Harmonic.\n\n2 In the Settings window for 2D Plot Group, locate the Title section.\n\n3 From the Title type list, choose Manual.\n\n4 In the Title text area, type Electric field, y-component (V/m) for second \n\nharmonic wave.\n\n5 In the Second Harmonic toolbar, click \n\nPlot.\n\nNotice that the wavelength is half of that displayed in the Fundamental plot group for \nthe fundamental wave.\n\nElectric Fields\nNow create a line graph showing the electric fields for the fundamental and the second \nharmonic waves.\n\n1 In the Home toolbar, click \n\nAdd Plot Group and choose 1D Plot Group.\n\n2 In the Settings window for 1D Plot Group, type Electric Fields in the Label text field.\n\n18  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\fFundamental\n1 Right-click Electric Fields and choose Line Graph.\n\n2 In the Settings window for Line Graph, type Fundamental in the Label text field.\n\n3 Select Boundaries 2, 5, and 8 only.\n\n4 Locate the y-Axis Data section. In the Expression text field, type ewfd1.Ey.\n\n5 Locate the x-Axis Data section. From the Parameter list, choose Expression.\n\n6 In the Expression text field, type x.\n\n7 Click to expand the Coloring and Style section. From the Width list, choose 2.\n\n8 Click to expand the Legends section. Select the Show legends check box.\n\n9 Find the Include subsection. Select the Label check box.\n\n10 Clear the Solution check box.\n\n11 Right-click Fundamental and choose Duplicate.\n\nSecond Harmonic\n1 In the Model Builder window, under Results>Electric Fields click Fundamental 1.\n\n2 In the Settings window for Line Graph, type Second Harmonic in the Label text field.\n\n3 Locate the y-Axis Data section. In the Expression text field, type ewfd2.Ey.\n\nElectric Fields\n1 In the Model Builder window, click Electric Fields.\n\n2 In the Settings window for 1D Plot Group, click to expand the Title section.\n\n3 From the Title type list, choose Manual.\n\n19  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f4 In the Title text area, type Fundamental and Second Harmonic Electric Fields.\n\nPhoton Flux Density\n1 In the Home toolbar, click \n\nAdd Plot Group and choose 1D Plot Group.\n\n2 In the Settings window for 1D Plot Group, type Photon Flux Density in the Label text \n\nfield.\n\nSimulation Fundamental\n1 Right-click Photon Flux Density and choose Line Graph.\n\n2 In the Settings window for Line Graph, type Simulation Fundamental in the Label text \n\nfield.\n\n3 Select Boundaries 2, 5, and 8 only.\n\n4 Locate the y-Axis Data section. In the Expression text field, type ewfd1.Ey*\nconj(ewfd1.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd1.freq).\n\n5 Locate the x-Axis Data section. From the Parameter list, choose Expression.\n\n6 In the Expression text field, type x.\n\n7 Locate the Coloring and Style section. Find the Line style subsection. From the Line list, \n\nchoose None.\n\n8 From the Width list, choose 5.\n\n20  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f9 Find the Line markers subsection. From the Marker list, choose Diamond.\n\n10 From the Positioning list, choose Interpolated.\n\n11 In the Number text field, type 20.\n\n12 Locate the Legends section. Select the Show legends check box.\n\n13 Find the Include subsection. Select the Label check box.\n\n14 Clear the Solution check box.\n\n15 Right-click Simulation Fundamental and choose Duplicate.\n\nSimulation Second Harmonic\n1 In the Model Builder window, under Results>Photon Flux Density click \n\nSimulation Fundamental 1.\n\n2 In the Settings window for Line Graph, type Simulation Second Harmonic in the Label \n\ntext field.\n\n3 Locate the y-Axis Data section. In the Expression text field, type ewfd2.Ey*\nconj(ewfd2.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd2.freq).\n\n4 Right-click Simulation Second Harmonic and choose Duplicate.",
      "output": "model.sol('sol1').feature('s1').create('seDef', 'Segregated');",
      "explanation": "Physics: Unknown. Purpose: Needed to solve the multi-physics problem of second harmonic generation",
      "confidence": 1.3,
      "source": "code_first",
      "category": "study",
      "match_info": "Matched to PDF section: Solution 1 (sol1)",
      "comsol_ids": [
        "sol1",
        "s1"
      ]
    },
    {
      "instruction": "[Model] Creates a fully coupled solver for the solution 'sol1' using the 's1' study",
      "input": "1 In the Study toolbar, click \n\nShow Default Solver.\n\n2 In the Model Builder window, expand the Solution 1 (sol1) node, then click \n\nCompile Equations: Frequency Domain.\n\n3 In the Settings window for Compile Equations, locate the Study and Step section.\n\n4 Select the Split complex variables in real and imaginary parts check box.\n\n5 In the Model Builder window, under Study 1>Solver Configurations>Solution 1 (sol1) click \n\nStationary Solver 1.\n\n6 In the Settings window for Stationary Solver, locate the General section.\n\n7 In the Relative tolerance text field, type 0.001.\n\n8 In the Study toolbar, click \n\nCompute.\n\nSince the polarization expression for the fundamental harmonic contains the complex \nconjugate of the electric field, it is advisable to split complex variables in real and \nimaginary parts in order to improve convergence. Moreover, the tolerance has been \nmanually decreased to 0.001 to ensure that the nonlinear solver has converged to a \nsolution and not just incidentally reached below the tolerance.\n\nR E S U L T S\n\nFundamental\nIn the Settings window for 2D Plot Group, type Fundamental in the Label text field.\n\n16  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\fSurface 1\n1 In the Model Builder window, expand the Fundamental node, then click Surface 1.\n\n2 In the Settings window for Surface, locate the Expression section.\n\n3 In the Expression text field, type ewfd1.Ey.\n\nFundamental\nBefore finishing the plot, update the plot title.\n\n1 In the Model Builder window, click Fundamental.\n\n2 In the Settings window for 2D Plot Group, click to expand the Title section.\n\n3 From the Title type list, choose Manual.\n\n4 In the Title text area, type Electric field, y-component (V/m) for fundamental \n\nwave.\n\n5 In the Fundamental toolbar, click \n\nPlot.\n\nSecond Harmonic\n1 In the Model Builder window, under Results click Electric Field (ewfd2).\n\n2 In the Settings window for 2D Plot Group, type Second Harmonic in the Label text field.\n\nSurface 1\n1 In the Model Builder window, expand the Second Harmonic node, then click Surface 1.\n\n17  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f2 In the Settings window for Surface, locate the Expression section.\n\n3 In the Expression text field, type ewfd2.Ey.\n\nSecond Harmonic\nAgain, update the plot title.\n\n1 In the Model Builder window, click Second Harmonic.\n\n2 In the Settings window for 2D Plot Group, locate the Title section.\n\n3 From the Title type list, choose Manual.\n\n4 In the Title text area, type Electric field, y-component (V/m) for second \n\nharmonic wave.\n\n5 In the Second Harmonic toolbar, click \n\nPlot.\n\nNotice that the wavelength is half of that displayed in the Fundamental plot group for \nthe fundamental wave.\n\nElectric Fields\nNow create a line graph showing the electric fields for the fundamental and the second \nharmonic waves.\n\n1 In the Home toolbar, click \n\nAdd Plot Group and choose 1D Plot Group.\n\n2 In the Settings window for 1D Plot Group, type Electric Fields in the Label text field.\n\n18  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\fFundamental\n1 Right-click Electric Fields and choose Line Graph.\n\n2 In the Settings window for Line Graph, type Fundamental in the Label text field.\n\n3 Select Boundaries 2, 5, and 8 only.\n\n4 Locate the y-Axis Data section. In the Expression text field, type ewfd1.Ey.\n\n5 Locate the x-Axis Data section. From the Parameter list, choose Expression.\n\n6 In the Expression text field, type x.\n\n7 Click to expand the Coloring and Style section. From the Width list, choose 2.\n\n8 Click to expand the Legends section. Select the Show legends check box.\n\n9 Find the Include subsection. Select the Label check box.\n\n10 Clear the Solution check box.\n\n11 Right-click Fundamental and choose Duplicate.\n\nSecond Harmonic\n1 In the Model Builder window, under Results>Electric Fields click Fundamental 1.\n\n2 In the Settings window for Line Graph, type Second Harmonic in the Label text field.\n\n3 Locate the y-Axis Data section. In the Expression text field, type ewfd2.Ey.\n\nElectric Fields\n1 In the Model Builder window, click Electric Fields.\n\n2 In the Settings window for 1D Plot Group, click to expand the Title section.\n\n3 From the Title type list, choose Manual.\n\n19  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f4 In the Title text area, type Fundamental and Second Harmonic Electric Fields.\n\nPhoton Flux Density\n1 In the Home toolbar, click \n\nAdd Plot Group and choose 1D Plot Group.\n\n2 In the Settings window for 1D Plot Group, type Photon Flux Density in the Label text \n\nfield.\n\nSimulation Fundamental\n1 Right-click Photon Flux Density and choose Line Graph.\n\n2 In the Settings window for Line Graph, type Simulation Fundamental in the Label text \n\nfield.\n\n3 Select Boundaries 2, 5, and 8 only.\n\n4 Locate the y-Axis Data section. In the Expression text field, type ewfd1.Ey*\nconj(ewfd1.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd1.freq).\n\n5 Locate the x-Axis Data section. From the Parameter list, choose Expression.\n\n6 In the Expression text field, type x.\n\n7 Locate the Coloring and Style section. Find the Line style subsection. From the Line list, \n\nchoose None.\n\n8 From the Width list, choose 5.\n\n20  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f9 Find the Line markers subsection. From the Marker list, choose Diamond.\n\n10 From the Positioning list, choose Interpolated.\n\n11 In the Number text field, type 20.\n\n12 Locate the Legends section. Select the Show legends check box.\n\n13 Find the Include subsection. Select the Label check box.\n\n14 Clear the Solution check box.\n\n15 Right-click Simulation Fundamental and choose Duplicate.\n\nSimulation Second Harmonic\n1 In the Model Builder window, under Results>Photon Flux Density click \n\nSimulation Fundamental 1.\n\n2 In the Settings window for Line Graph, type Simulation Second Harmonic in the Label \n\ntext field.\n\n3 Locate the y-Axis Data section. In the Expression text field, type ewfd2.Ey*\nconj(ewfd2.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd2.freq).\n\n4 Right-click Simulation Second Harmonic and choose Duplicate.",
      "output": "model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');",
      "explanation": "Physics: Unknown. Purpose: Needed to solve the multi-physics problem involving second harmonic generation",
      "confidence": 1.3,
      "source": "code_first",
      "category": "study",
      "match_info": "Matched to PDF section: Solution 1 (sol1)",
      "comsol_ids": [
        "sol1",
        "s1"
      ]
    },
    {
      "instruction": "[Model] Configures the solver settings for the study 'sol1', including the direct solver, tolerance, and splitting complex numbers",
      "input": "1 In the Study toolbar, click \n\nShow Default Solver.\n\n2 In the Model Builder window, expand the Solution 1 (sol1) node, then click \n\nCompile Equations: Frequency Domain.\n\n3 In the Settings window for Compile Equations, locate the Study and Step section.\n\n4 Select the Split complex variables in real and imaginary parts check box.\n\n5 In the Model Builder window, under Study 1>Solver Configurations>Solution 1 (sol1) click \n\nStationary Solver 1.\n\n6 In the Settings window for Stationary Solver, locate the General section.\n\n7 In the Relative tolerance text field, type 0.001.\n\n8 In the Study toolbar, click \n\nCompute.\n\nSince the polarization expression for the fundamental harmonic contains the complex \nconjugate of the electric field, it is advisable to split complex variables in real and \nimaginary parts in order to improve convergence. Moreover, the tolerance has been \nmanually decreased to 0.001 to ensure that the nonlinear solver has converged to a \nsolution and not just incidentally reached below the tolerance.\n\nR E S U L T S\n\nFundamental\nIn the Settings window for 2D Plot Group, type Fundamental in the Label text field.\n\n16  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\fSurface 1\n1 In the Model Builder window, expand the Fundamental node, then click Surface 1.\n\n2 In the Settings window for Surface, locate the Expression section.\n\n3 In the Expression text field, type ewfd1.Ey.\n\nFundamental\nBefore finishing the plot, update the plot title.\n\n1 In the Model Builder window, click Fundamental.\n\n2 In the Settings window for 2D Plot Group, click to expand the Title section.\n\n3 From the Title type list, choose Manual.\n\n4 In the Title text area, type Electric field, y-component (V/m) for fundamental \n\nwave.\n\n5 In the Fundamental toolbar, click \n\nPlot.\n\nSecond Harmonic\n1 In the Model Builder window, under Results click Electric Field (ewfd2).\n\n2 In the Settings window for 2D Plot Group, type Second Harmonic in the Label text field.\n\nSurface 1\n1 In the Model Builder window, expand the Second Harmonic node, then click Surface 1.\n\n17  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f2 In the Settings window for Surface, locate the Expression section.\n\n3 In the Expression text field, type ewfd2.Ey.\n\nSecond Harmonic\nAgain, update the plot title.\n\n1 In the Model Builder window, click Second Harmonic.\n\n2 In the Settings window for 2D Plot Group, locate the Title section.\n\n3 From the Title type list, choose Manual.\n\n4 In the Title text area, type Electric field, y-component (V/m) for second \n\nharmonic wave.\n\n5 In the Second Harmonic toolbar, click \n\nPlot.\n\nNotice that the wavelength is half of that displayed in the Fundamental plot group for \nthe fundamental wave.\n\nElectric Fields\nNow create a line graph showing the electric fields for the fundamental and the second \nharmonic waves.\n\n1 In the Home toolbar, click \n\nAdd Plot Group and choose 1D Plot Group.\n\n2 In the Settings window for 1D Plot Group, type Electric Fields in the Label text field.\n\n18  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\fFundamental\n1 Right-click Electric Fields and choose Line Graph.\n\n2 In the Settings window for Line Graph, type Fundamental in the Label text field.\n\n3 Select Boundaries 2, 5, and 8 only.\n\n4 Locate the y-Axis Data section. In the Expression text field, type ewfd1.Ey.\n\n5 Locate the x-Axis Data section. From the Parameter list, choose Expression.\n\n6 In the Expression text field, type x.\n\n7 Click to expand the Coloring and Style section. From the Width list, choose 2.\n\n8 Click to expand the Legends section. Select the Show legends check box.\n\n9 Find the Include subsection. Select the Label check box.\n\n10 Clear the Solution check box.\n\n11 Right-click Fundamental and choose Duplicate.\n\nSecond Harmonic\n1 In the Model Builder window, under Results>Electric Fields click Fundamental 1.\n\n2 In the Settings window for Line Graph, type Second Harmonic in the Label text field.\n\n3 Locate the y-Axis Data section. In the Expression text field, type ewfd2.Ey.\n\nElectric Fields\n1 In the Model Builder window, click Electric Fields.\n\n2 In the Settings window for 1D Plot Group, click to expand the Title section.\n\n3 From the Title type list, choose Manual.\n\n19  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f4 In the Title text area, type Fundamental and Second Harmonic Electric Fields.\n\nPhoton Flux Density\n1 In the Home toolbar, click \n\nAdd Plot Group and choose 1D Plot Group.\n\n2 In the Settings window for 1D Plot Group, type Photon Flux Density in the Label text \n\nfield.\n\nSimulation Fundamental\n1 Right-click Photon Flux Density and choose Line Graph.\n\n2 In the Settings window for Line Graph, type Simulation Fundamental in the Label text \n\nfield.\n\n3 Select Boundaries 2, 5, and 8 only.\n\n4 Locate the y-Axis Data section. In the Expression text field, type ewfd1.Ey*\nconj(ewfd1.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd1.freq).\n\n5 Locate the x-Axis Data section. From the Parameter list, choose Expression.\n\n6 In the Expression text field, type x.\n\n7 Locate the Coloring and Style section. Find the Line style subsection. From the Line list, \n\nchoose None.\n\n8 From the Width list, choose 5.\n\n20  |   S E C O N D   H A R M O N I C   G E N E R A T I O N   I N   T H E   F R E Q U E N C Y   D O M A I N\n\n\f9 Find the Line markers subsection. From the Marker list, choose Diamond.\n\n10 From the Positioning list, choose Interpolated.\n\n11 In the Number text field, type 20.\n\n12 Locate the Legends section. Select the Show legends check box.\n\n13 Find the Include subsection. Select the Label check box.\n\n14 Clear the Solution check box.\n\n15 Right-click Simulation Fundamental and choose Duplicate.\n\nSimulation Second Harmonic\n1 In the Model Builder window, under Results>Photon Flux Density click \n\nSimulation Fundamental 1.\n\n2 In the Settings window for Line Graph, type Simulation Second Harmonic in the Label \n\ntext field.\n\n3 Locate the y-Axis Data section. In the Expression text field, type ewfd2.Ey*\nconj(ewfd2.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd2.freq).\n\n4 Right-click Simulation Second Harmonic and choose Duplicate.",
      "output": "model.sol('sol1').feature('s1').create('d1', 'Direct');\nmodel.sol('sol1').feature('s1').feature('d1').set('linsolver', 'mumps');\nmodel.sol('sol1').feature('s1').feature('d1').label('Suggested Direct Solver (ewfd1) (Merged)');\nmodel.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');\nmodel.sol('sol1').feature('s1').feature.remove('fcDef');\nmodel.sol('sol1').feature('s1').feature.remove('seDef');\nmodel.sol('sol1').attach('std1');\nmodel.sol('sol1').feature('st1').set('splitcomplex', true);\nmodel.sol('sol1').feature('s1').set('stol', 0.001);\nmodel.sol('sol1').runAll;",
      "explanation": "Physics: Unknown. Purpose: This step is needed to set up the solver for the second harmonic generation simulation, ensuring accurate and efficient computation of the electromagnetic waves",
      "confidence": 1.3,
      "source": "code_first",
      "category": "study",
      "match_info": "Matched to PDF section: Solution 1 (sol1)",
      "comsol_ids": [
        "sol1",
        "s1",
        "d1",
        "fc1",
        "std1",
        "st1"
      ]
    },
    {
      "instruction": "[Model] Creates a 2D plot group for the electric field of the fundamental wave and sets its properties.",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: To visualize and analyze the electric field distribution of the fundamental wave in the second harmonic generation process.\nWhat to do: Creates a 2D plot group for the electric field of the fundamental wave and sets its properties.",
      "output": "model.result.create('pg1', 'PlotGroup2D');\nmodel.result('pg1').label('Electric Field (ewfd1)');\nmodel.result('pg1').set('frametype', 'spatial');\nmodel.result('pg1').set('data', 'dset1');\nmodel.result('pg1').setIndex('looplevel', 1, 0);\nmodel.result('pg1').set('defaultPlotID', 'ElectromagneticWavesFrequencyDomain/phys1/pdef1/pcond2/pg1');",
      "explanation": "Physics: Unknown. Purpose: To visualize and analyze the electric field distribution of the fundamental wave in the second harmonic generation process.",
      "confidence": 0.5,
      "source": "code_first",
      "category": "results",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "pg1",
        "dset1",
        "pdef1",
        "pcond2"
      ]
    },
    {
      "instruction": "[Model] Creates a smooth surface plot of the results from the 'pg1' plot group",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: To visualize the second harmonic generation process in the frequency domain\nWhat to do: Creates a smooth surface plot of the results from the 'pg1' plot group",
      "output": "model.result('pg1').feature.create('surf1', 'Surface');\nmodel.result('pg1').feature('surf1').set('smooth', 'internal');\nmodel.result('pg1').feature('surf1').set('data', 'parent');",
      "explanation": "Physics: Unknown. Purpose: To visualize the second harmonic generation process in the frequency domain",
      "confidence": 0.5,
      "source": "code_first",
      "category": "results",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "surf1"
      ]
    },
    {
      "instruction": "[Model] Creates a 2D plot group for the electric field of the second harmonic wave and sets its properties.",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: To visualize and analyze the electric field distribution of the second harmonic wave in the simulation.\nWhat to do: Creates a 2D plot group for the electric field of the second harmonic wave and sets its properties.",
      "output": "model.result.create('pg2', 'PlotGroup2D');\nmodel.result('pg2').label('Electric Field (ewfd2)');\nmodel.result('pg2').set('frametype', 'spatial');\nmodel.result('pg2').set('data', 'dset1');\nmodel.result('pg2').setIndex('looplevel', 1, 0);\nmodel.result('pg2').set('defaultPlotID', 'ElectromagneticWavesFrequencyDomain/phys1/pdef1/pcond2/pg1');",
      "explanation": "Physics: Unknown. Purpose: To visualize and analyze the electric field distribution of the second harmonic wave in the simulation.",
      "confidence": 0.5,
      "source": "code_first",
      "category": "results",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "pg2",
        "dset1",
        "ElectromagneticWavesFrequencyDomain/phys1/pdef1/pcond2/pg1"
      ]
    },
    {
      "instruction": "[Model] This code segment creates surface plots for the electric field y-component of the fundamental and second harmonic waves in a second harmonic generation simulation.",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: The surface plots provide a visual representation of the electric field distribution for both the fundamental and second harmonic waves, allowing for analysis and comparison with the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nWhat to do: This code segment creates surface plots for the electric field y-component of the fundamental and second harmonic waves in a second harmonic generation simulation.",
      "output": "model.result('pg2').feature.create('surf1', 'Surface');\nmodel.result('pg2').feature('surf1').set('expr', 'ewfd2.normE');\nmodel.result('pg2').feature('surf1').set('smooth', 'internal');\nmodel.result('pg2').feature('surf1').set('data', 'parent');\nmodel.result('pg1').run;\nmodel.result('pg1').label('Fundamental');\nmodel.result('pg1').run;\nmodel.result('pg1').feature('surf1').set('expr', 'ewfd1.Ey');\nmodel.result('pg1').run;\nmodel.result('pg1').set('titletype', 'manual');\nmodel.result('pg1').set('title', 'Electric field, y-component (V/m) for fundamental wave');\nmodel.result('pg1').run;\nmodel.result('pg2').run;\nmodel.result('pg2').label('Second Harmonic');\nmodel.result('pg2').run;\nmodel.result('pg2').feature('surf1').set('expr', 'ewfd2.Ey');\nmodel.result('pg2').run;\nmodel.result('pg2').set('titletype', 'manual');\nmodel.result('pg2').set('title', 'Electric field, y-component (V/m) for second harmonic wave');\nmodel.result('pg2').run;",
      "explanation": "Physics: Unknown. Purpose: The surface plots provide a visual representation of the electric field distribution for both the fundamental and second harmonic waves, allowing for analysis and comparison with the analytical solution from the Slowly Varying Envelope Approximation (SVEA).",
      "confidence": 0.2,
      "source": "code_first",
      "category": "results",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "pg1",
        "pg2"
      ]
    },
    {
      "instruction": "[Model] Creates a 1D plot group for electric fields and runs it",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: To visualize and analyze the electric field distribution in the model\nWhat to do: Creates a 1D plot group for electric fields and runs it",
      "output": "model.result.create('pg3', 'PlotGroup1D');\nmodel.result('pg3').run;\nmodel.result('pg3').label('Electric Fields');",
      "explanation": "Physics: Unknown. Purpose: To visualize and analyze the electric field distribution in the model",
      "confidence": 0.5,
      "source": "code_first",
      "category": "results",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "pg3"
      ]
    },
    {
      "instruction": "[Model] Creates line graphs for fundamental and second harmonic electric fields and sets their properties",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: To visualize and analyze the electric field distribution of the fundamental and second harmonic waves in the second harmonic generation process\nWhat to do: Creates line graphs for fundamental and second harmonic electric fields and sets their properties",
      "output": "model.result('pg3').create('lngr1', 'LineGraph');\nmodel.result('pg3').feature('lngr1').set('markerpos', 'datapoints');\nmodel.result('pg3').feature('lngr1').set('linewidth', 'preference');\nmodel.result('pg3').feature('lngr1').label('Fundamental');\nmodel.result('pg3').feature('lngr1').selection.set([2 5 8]);\nmodel.result('pg3').feature('lngr1').set('expr', 'ewfd1.Ey');\nmodel.result('pg3').feature('lngr1').set('xdata', 'expr');\nmodel.result('pg3').feature('lngr1').set('xdataexpr', 'x');\nmodel.result('pg3').feature('lngr1').set('linewidth', 2);\nmodel.result('pg3').feature('lngr1').set('legend', true);\nmodel.result('pg3').feature('lngr1').set('autoplotlabel', true);\nmodel.result('pg3').feature('lngr1').set('autosolution', false);\nmodel.result('pg3').feature.duplicate('lngr2', 'lngr1');\nmodel.result('pg3').run;\nmodel.result('pg3').feature('lngr2').label('Second Harmonic');\nmodel.result('pg3').feature('lngr2').set('expr', 'ewfd2.Ey');\nmodel.result('pg3').run;\nmodel.result('pg3').set('titletype', 'manual');\nmodel.result('pg3').set('title', 'Fundamental and Second Harmonic Electric Fields');",
      "explanation": "Physics: Unknown. Purpose: To visualize and analyze the electric field distribution of the fundamental and second harmonic waves in the second harmonic generation process",
      "confidence": 0.5,
      "source": "code_first",
      "category": "results",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "pg3",
        "lngr1",
        "lngr2"
      ]
    },
    {
      "instruction": "[Model] Creates a 1D plot group, runs it, and labels it as 'Photon Flux Density'",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: To visualize and analyze the photon flux density results from the second harmonic generation simulation\nWhat to do: Creates a 1D plot group, runs it, and labels it as 'Photon Flux Density'",
      "output": "model.result.create('pg4', 'PlotGroup1D');\nmodel.result('pg4').run;\nmodel.result('pg4').label('Photon Flux Density');",
      "explanation": "Physics: Unknown. Purpose: To visualize and analyze the photon flux density results from the second harmonic generation simulation",
      "confidence": 0.5,
      "source": "code_first",
      "category": "results",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "pg4"
      ]
    },
    {
      "instruction": "[Model] Creates line graphs for fundamental and second harmonic photon flux densities and compares them with the analytical solution from the Slowly Varying Envelope Approximation (SVEA).",
      "input": "Model Context: This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.\n\nFor convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.\n\nThe results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).\nPhysics: Multi-physics\nStep Purpose: This step is needed to visualize and analyze the results of the second harmonic generation simulation, comparing the simulation results with the analytical solution.\nWhat to do: Creates line graphs for fundamental and second harmonic photon flux densities and compares them with the analytical solution from the Slowly Varying Envelope Approximation (SVEA).",
      "output": "model.result('pg4').create('lngr1', 'LineGraph');\nmodel.result('pg4').feature('lngr1').set('markerpos', 'datapoints');\nmodel.result('pg4').feature('lngr1').set('linewidth', 'preference');\nmodel.result('pg4').feature('lngr1').label('Simulation Fundamental');\nmodel.result('pg4').feature('lngr1').selection.set([2 5 8]);\nmodel.result('pg4').feature('lngr1').set('expr', 'ewfd1.Ey*conj(ewfd1.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd1.freq)');\nmodel.result('pg4').feature('lngr1').set('xdata', 'expr');\nmodel.result('pg4').feature('lngr1').set('xdataexpr', 'x');\nmodel.result('pg4').feature('lngr1').set('linestyle', 'none');\nmodel.result('pg4').feature('lngr1').set('linewidth', 5);\nmodel.result('pg4').feature('lngr1').set('linemarker', 'diamond');\nmodel.result('pg4').feature('lngr1').set('markerpos', 'interp');\nmodel.result('pg4').feature('lngr1').set('markers', 20);\nmodel.result('pg4').feature('lngr1').set('legend', true);\nmodel.result('pg4').feature('lngr1').set('autoplotlabel', true);\nmodel.result('pg4').feature('lngr1').set('autosolution', false);\nmodel.result('pg4').feature.duplicate('lngr2', 'lngr1');\nmodel.result('pg4').run;\nmodel.result('pg4').feature('lngr2').label('Simulation Second Harmonic');\nmodel.result('pg4').feature('lngr2').set('expr', 'ewfd2.Ey*conj(ewfd2.Ey)/(2*Z0_const)/hbar_const/(2*pi*ewfd2.freq)');\nmodel.result('pg4').feature.duplicate('lngr3', 'lngr2');\nmodel.result('pg4').run;\nmodel.result('pg4').feature('lngr3').label('Slowly Varying Envelope Approximation (SVEA) Fundamental');\nmodel.result('pg4').feature('lngr3').selection.set([5]);\nmodel.result('pg4').feature('lngr3').set('expr', '(sech(gamma*(x - offset)/2))^2*I1/hbar_const/(2*pi*ewfd1.freq)');\nmodel.result('pg4').feature('lngr3').set('linestyle', 'solid');\nmodel.result('pg4').feature('lngr3').set('linewidth', 2);\nmodel.result('pg4').feature('lngr3').set('linemarker', 'none');\nmodel.result('pg4').feature('lngr3').set('legendmethod', 'manual');\nmodel.result('pg4').feature('lngr3').setIndex('legends', 'SVEA Fundamental', 0);\nmodel.result('pg4').feature.duplicate('lngr4', 'lngr3');\nmodel.result('pg4').run;\nmodel.result('pg4').feature('lngr4').label('Slowly Varying Envelope Approximation (SVEA) Second Harmonic');\nmodel.result('pg4').feature('lngr4').set('expr', '(tanh(gamma*(x - offset)/2))^2*I1/hbar_const/(2*pi*ewfd2.freq)');\nmodel.result('pg4').feature('lngr4').setIndex('legends', 'SVEA Second Harmonic', 0);\nmodel.result('pg4').run;\nmodel.result('pg4').set('titletype', 'manual');\nmodel.result('pg4').set('title', 'Fundamental and Second Harmonic Photon Flux Density');\nmodel.result('pg4').set('ylabelactive', true);\nmodel.result('pg4').set('ylabel', 'Photon Flux Density (photons per m^2 s)');\n\nmodel.title('Second Harmonic Generation in the Frequency Domain');\n\nmodel.description(['This is a proof of principle example, describing the second harmonic generation (SHG) process using two Electromagnetic Waves, Frequency Domain interfaces. One for the fundamental wave and one for the second harmonic.' newline  newline 'For convenience, the refractive index is perfectly matched (at n = 1) for each frequency. The coupling between the waves is implemented using a domain Polarization feature for each interface.' newline  newline 'The results are compared against the analytical solution from the Slowly Varying Envelope Approximation (SVEA).']);\n\nmodel.mesh.clearMeshes;\n\nmodel.sol('sol1').clearSolutionData;\n\nmodel.label('second_harmonic_generation_frequency_domain.mph');\n\nmodel.modelNode.label('Components');\n\nout = model;",
      "explanation": "Physics: Unknown. Purpose: This step is needed to visualize and analyze the results of the second harmonic generation simulation, comparing the simulation results with the analytical solution.",
      "confidence": 0.5,
      "source": "code_first",
      "category": "results",
      "match_info": "Generated from code analysis with model context",
      "comsol_ids": [
        "pg4",
        "lngr1",
        "lngr2",
        "lngr3",
        "lngr4"
      ]
    }
  ],
  "stats": {
    "total_code_segments": 77,
    "total_pdf_sections": 4,
    "total_matches": 77,
    "high_confidence_matches": 19,
    "enhanced_examples": 77
  }
}